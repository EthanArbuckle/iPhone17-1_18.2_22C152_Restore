uint64_t SFDeviceClassCodeGet()
{
  if (SFDeviceClassCodeGet_sOnce != -1) {
    dispatch_once(&SFDeviceClassCodeGet_sOnce, &__block_literal_global_36);
  }
  return SFDeviceClassCodeGet_sResult;
}

id daemon_log()
{
  if (daemon_log_onceToken != -1) {
    dispatch_once(&daemon_log_onceToken, &__block_literal_global_161);
  }
  v0 = (void *)daemon_log___logger;

  return v0;
}

id paired_unlock_log()
{
  if (paired_unlock_log_onceToken != -1) {
    dispatch_once(&paired_unlock_log_onceToken, &__block_literal_global_176);
  }
  v0 = (void *)paired_unlock_log___logger;

  return v0;
}

void sub_1A538D88C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A538DC28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A538DE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A538E0E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t BOOLeanValueForPreference(const __CFString *a1, uint64_t a2)
{
  CFBooleanRef v3 = (const __CFBoolean *)copySharingPrefValue(a1);
  if (v3)
  {
    CFBooleanRef v4 = v3;
    v8[0] = MEMORY[0x1E4F143A8];
    v8[1] = 0x40000000;
    v9 = __BOOLeanValueForPreference_block_invoke;
    v10 = &__block_descriptor_tmp_160;
    CFBooleanRef v11 = v3;
    CFTypeID v5 = CFGetTypeID(v3);
    if (v5 == CFBooleanGetTypeID())
    {
      uint64_t Value = CFBooleanGetValue(v4);
    }
    else
    {
      if (v5 != CFStringGetTypeID())
      {
LABEL_7:
        v9((uint64_t)v8);
        return a2;
      }
      uint64_t Value = stringIsTrueString((const __CFString *)v4);
    }
    a2 = Value;
    goto LABEL_7;
  }
  return a2;
}

CFPropertyListRef copySharingPrefValue(const __CFString *a1)
{
  CFPropertyListRef result = CFPreferencesCopyAppValue(a1, @"/private/var/Managed Preferences/mobile/com.apple.Sharing");
  if (!result)
  {
    return CFPreferencesCopyAppValue(a1, @"com.apple.Sharing");
  }
  return result;
}

void sub_1A5390FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void SFDispatchTimerSet(void *a1, double a2, double a3, double a4)
{
  unint64_t v6 = (unint64_t)(a2 * 1000000000.0);
  source = a1;
  dispatch_time_t v7 = dispatch_time(0x8000000000000000, v6);
  if (a4 <= -10.0)
  {
    uint64_t v8 = v6 / 0xA;
  }
  else if (a4 <= -4.0)
  {
    uint64_t v8 = v6 >> 2;
  }
  else
  {
    uint64_t v8 = (unint64_t)(a4 * 1000000000.0);
  }
  if (a3 < 0.0) {
    uint64_t v9 = -1;
  }
  else {
    uint64_t v9 = (unint64_t)(a3 * 1000000000.0);
  }
  dispatch_source_set_timer(source, v7, v9, v8);
}

uint64_t static NSUserDefaults.airdrop.getter()
{
  if (qword_1E966C4D8 != -1) {
    swift_once();
  }
  sub_1A56D6228();
  return v1;
}

uint64_t sub_1A5391334()
{
  swift_retain();
  unsigned __int8 v0 = sub_1A5391378();
  swift_release();
  return v0 & 1;
}

id sub_1A5391378()
{
  uint64_t v1 = v0;
  sub_1A56D4E28();
  char v2 = v28[0];
  if (LOBYTE(v28[0]) != 2) {
    return (id)(v2 & 1);
  }
  CFBooleanRef v3 = *(void **)(v0 + 56);
  if (!v3)
  {
LABEL_8:
    if (*(unsigned char *)(v0 + 81)) {
      return (id)*(unsigned __int8 *)(v0 + 82);
    }
    uint64_t v8 = *(void *)(v0 + 64);
    int v9 = *(unsigned __int8 *)(v1 + 80);
    id v4 = *(id *)(v1 + 16);
    uint64_t v1 = *(unsigned __int8 *)(v1 + 32);
    v10 = self;
    if (v8)
    {
      if (((v1 | v9) & 1) == 0)
      {
        if (v4) {
          return objc_msgSend(v10, sel_featureEnabledForDomain_feature_, v8, v4);
        }
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
LABEL_21:
    uint64_t v22 = sub_1A56D4D98();
    __swift_project_value_buffer(v22, (uint64_t)qword_1E96702D8);
    swift_retain_n();
    v15 = sub_1A56D4D78();
    os_log_type_t v16 = sub_1A56D57B8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      *(void *)&v27[0] = v18;
      uint64_t v23 = sub_1A56D5A48();
      sub_1A54E3290(v23, v24, (uint64_t *)v27);
      sub_1A56D5928();
      swift_release_n();
      swift_bridgeObjectRelease();
      v21 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}";
      goto LABEL_23;
    }
LABEL_24:
    swift_release_n();
    goto LABEL_25;
  }
  id v4 = v3;
  CFTypeID v5 = (void *)sub_1A56D5098();
  id v6 = objc_msgSend(v4, sel_objectForKey_, v5);

  if (!v6)
  {

    goto LABEL_8;
  }
  sub_1A56D5968();
  swift_unknownObjectRelease();
  sub_1A54E3F10(v27, v28);
  sub_1A54E3F20((uint64_t)v28, (uint64_t)v27);
  if (swift_dynamicCast())
  {

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
    char v2 = v26;
    return (id)(v2 & 1);
  }
  CFBooleanRef v11 = (void *)sub_1A56D5098();
  id v12 = objc_msgSend(v4, sel_stringForKey_, v11);

  if (!v12)
  {
    if (qword_1E96702D0 == -1) {
      goto LABEL_21;
    }
    goto LABEL_30;
  }
  sub_1A56D50D8();

  char v13 = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
  if (v13 == 2)
  {
    if (qword_1E96702D0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A56D4D98();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E96702D8);
    swift_retain_n();
    v15 = sub_1A56D4D78();
    os_log_type_t v16 = sub_1A56D57B8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315138;
      *(void *)&v27[0] = v18;
      uint64_t v19 = sub_1A56D5A48();
      sub_1A54E3290(v19, v20, (uint64_t *)v27);
      sub_1A56D5928();
      swift_release_n();
      swift_bridgeObjectRelease();
      v21 = "Failed to create value from stored UserDefault. Returning default value {key: %s}";
LABEL_23:
      _os_log_impl(&dword_1A5389000, v15, v16, v21, v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v18, -1, -1);
      MEMORY[0x1A626CE20](v17, -1, -1);
LABEL_25:

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      return (id)*(unsigned __int8 *)(v1 + 82);
    }
    goto LABEL_24;
  }
  char v25 = v13;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);

  return (id)(v25 & 1);
}

void sub_1A5391B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t SFShouldLogSensitiveDescriptions()
{
  if (SFShouldLogSensitiveDescriptions_onceToken != -1) {
    dispatch_once(&SFShouldLogSensitiveDescriptions_onceToken, &__block_literal_global_391);
  }
  return SFShouldLogSensitiveDescriptions_shouldLog;
}

BOOL SFDeviceIsVirtualMachine()
{
  if (SFDeviceIsVirtualMachine_onceToken[0] != -1) {
    dispatch_once(SFDeviceIsVirtualMachine_onceToken, &__block_literal_global_299);
  }
  return SFDeviceIsVirtualMachine_result && IsAppleInternalBuild() != 0;
}

id WPNearbyKeyRSSIFunction()
{
  return (id)constantValWPNearbyKeyRSSI;
}

id WPNearbyKeyPairedFunction()
{
  return (id)constantValWPNearbyKeyPaired;
}

id WPNearbyKeyManufacturerDataFunction()
{
  return (id)constantValWPNearbyKeyManufacturerData;
}

id WPNearbyKeyDeviceAddressFunction()
{
  return (id)constantValWPNearbyKeyDeviceAddress;
}

id SFDeviceModel()
{
  if (SFDeviceModel_onceToken != -1) {
    dispatch_once(&SFDeviceModel_onceToken, &__block_literal_global_288);
  }
  uint64_t v0 = (void *)SFDeviceModel_result;

  return v0;
}

uint64_t SFStoreDemoMode()
{
  if (SFStoreDemoMode_onceToken != -1) {
    dispatch_once(&SFStoreDemoMode_onceToken, &__block_literal_global_347);
  }
  return SFStoreDemoMode_result;
}

void sub_1A53959C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id charging_log()
{
  if (charging_log_onceToken != -1) {
    dispatch_once(&charging_log_onceToken, &__block_literal_global_155);
  }
  uint64_t v0 = (void *)charging_log___logger;

  return v0;
}

void sub_1A539B568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A539BB08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t SFAirDropUserDefaults.boopToActionEnabled.getter()
{
  return sub_1A5391334();
}

uint64_t SFAirDropUserDefaults.nearFieldSharingEnabled.getter()
{
  return sub_1A5391334();
}

ValueMetadata *type metadata accessor for SFClientAccessLevel()
{
  return &type metadata for SFClientAccessLevel;
}

uint64_t type metadata accessor for SFClientIdentity()
{
  uint64_t result = qword_1E966C060;
  if (!qword_1E966C060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1A539C3F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t SFAppleIDAddKeyToKeychain(void *a1, uint64_t a2, int a3, void *a4)
{
  v41[4] = *MEMORY[0x1E4F143B8];
  id v6 = a1;
  dispatch_time_t v7 = 0;
  CFTypeRef result = 0;
  uint64_t v8 = 4294960591;
  CFDictionaryRef v9 = 0;
  CFDictionaryRef v10 = 0;
  id v11 = 0;
  id v12 = 0;
  id v13 = 0;
  if (!v6 || !a2) {
    goto LABEL_54;
  }
  uint64_t v14 = (id *)MEMORY[0x1E4F3B6E8];
  if (!a3) {
    uint64_t v14 = (id *)MEMORY[0x1E4F3B6F0];
  }
  id v13 = *v14;
  uint64_t v15 = *MEMORY[0x1E4F3B978];
  uint64_t v16 = *MEMORY[0x1E4F3B9A0];
  uint64_t v17 = *MEMORY[0x1E4F3B6D8];
  v40[0] = *MEMORY[0x1E4F3B978];
  v40[1] = v17;
  v41[0] = v16;
  v41[1] = v13;
  uint64_t v18 = *MEMORY[0x1E4F3BC78];
  v40[2] = *MEMORY[0x1E4F3BD48];
  v40[3] = v18;
  v41[2] = a2;
  v41[3] = MEMORY[0x1E4F1CC38];
  CFDictionaryRef v19 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v41 forKeys:v40 count:4];
  CFDictionaryRef v10 = v19;
  if (!v19)
  {
    dispatch_time_t v7 = 0;
    CFDictionaryRef v9 = 0;
    id v11 = 0;
    id v12 = 0;
    goto LABEL_62;
  }
  uint64_t v20 = SecItemCopyMatching(v19, &result);
  if (v20 == -25300) {
    goto LABEL_15;
  }
  uint64_t v21 = v20;
  if (v20)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      uint64_t v34 = v21;
      LogPrintF();
    }
LABEL_15:
    id v12 = 0;
    goto LABEL_16;
  }
  id v12 = (id)result;
  if (result)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v12 = v12;
      id v11 = v12;
      goto LABEL_17;
    }
  }
LABEL_16:
  id v11 = 0;
LABEL_17:
  uint64_t v22 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionary", v34);
  dispatch_time_t v7 = v22;
  if (!v22)
  {
    CFDictionaryRef v9 = 0;
    uint64_t v8 = 4294960568;
    goto LABEL_54;
  }
  [v22 setObject:@"com.apple.sharing.appleidauthentication" forKeyedSubscript:*MEMORY[0x1E4F3B550]];
  [v7 setObject:*MEMORY[0x1E4F3B578] forKeyedSubscript:*MEMORY[0x1E4F3B558]];
  if (!v11)
  {
    CFDictionaryRef v9 = 0;
    goto LABEL_34;
  }
  uint64_t v23 = *MEMORY[0x1E4F3BD40];
  v38[0] = v15;
  v38[1] = v23;
  v39[0] = v16;
  v39[1] = v11;
  CFDictionaryRef v24 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v39 forKeys:v38 count:2];
  CFDictionaryRef v9 = v24;
  if (!v24)
  {
LABEL_62:
    uint64_t v8 = 4294960534;
    goto LABEL_54;
  }
  uint64_t v25 = SecItemUpdate(v24, (CFDictionaryRef)v7);
  if (!v25)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 30)
    {
      v27 = a4;
      if (gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize()) {
        goto LABEL_51;
      }
      goto LABEL_48;
    }
LABEL_50:
    v27 = a4;
    goto LABEL_51;
  }
  if (gLogCategory_SFAppleIDKeychainUtilities <= 60)
  {
    uint64_t v26 = v25;
    if (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize())
    {
      uint64_t v35 = v26;
      LogPrintF();
    }
  }
  uint64_t v28 = SecItemDelete(v9);
  if (v28)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60)
    {
      uint64_t v29 = v28;
      if (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize())
      {
        uint64_t v35 = v29;
        LogPrintF();
      }
    }
  }
LABEL_34:
  objc_msgSend(v7, "addEntriesFromDictionary:", v10, v35);
  [v7 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F3BD08]];
  [v7 setObject:MEMORY[0x1E4F1CC28] forKeyedSubscript:*MEMORY[0x1E4F3B878]];
  if (!SecItemAdd((CFDictionaryRef)v7, &result))
  {
LABEL_44:
    v32 = (void *)result;

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v8 = 4294960540;
      id v12 = v32;
      goto LABEL_54;
    }
    id v12 = v32;

    if (gLogCategory_SFAppleIDKeychainUtilities <= 30)
    {
      v27 = a4;
      if (gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
      {
        id v11 = v12;
LABEL_51:
        if (v27)
        {
          id v11 = v11;
          uint64_t v8 = 0;
          void *v27 = v11;
        }
        else
        {
          uint64_t v8 = 0;
        }
        goto LABEL_54;
      }
      id v11 = v12;
LABEL_48:
      LogPrintF();
      goto LABEL_51;
    }
    id v11 = v12;
    goto LABEL_50;
  }
  if (gLogCategory_SFAppleIDKeychainUtilities <= 60
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v30 = SecItemDelete((CFDictionaryRef)v7);
  if (!v30)
  {
    uint64_t v31 = SecItemAdd((CFDictionaryRef)v7, &result);
    if (v31)
    {
      uint64_t v8 = v31;
      if (gLogCategory_SFAppleIDKeychainUtilities <= 60
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_42;
      }
      goto LABEL_54;
    }
    goto LABEL_44;
  }
  uint64_t v8 = v30;
  if (gLogCategory_SFAppleIDKeychainUtilities <= 60
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
LABEL_42:
    LogPrintF();
  }
LABEL_54:

  return v8;
}

uint64_t SFAppleIDRemoveKeyFromKeychain(void *a1, void *a2)
{
  v14[2] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  CFTypeID v5 = v4;
  if (v4)
  {
    uint64_t v6 = *MEMORY[0x1E4F3B9A0];
    uint64_t v7 = *MEMORY[0x1E4F3BD40];
    v13[0] = *MEMORY[0x1E4F3B978];
    v13[1] = v7;
    v14[0] = v6;
    v14[1] = v4;
    CFDictionaryRef v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v14 forKeys:v13 count:2];
    CFDictionaryRef v9 = v8;
    if (v8)
    {
      uint64_t v10 = SecItemDelete(v8);
      if (v10 == -25300)
      {
        if (gLogCategory_SFAppleIDKeychainUtilities <= 60
          && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v11 = 4294941996;
      }
      else
      {
        uint64_t v11 = v10;
        if (v10)
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 60
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 30
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v11 = 0;
        }
      }
    }
    else
    {
      uint64_t v11 = 4294960534;
    }
  }
  else
  {
    CFDictionaryRef v9 = 0;
    uint64_t v11 = 4294960591;
  }

  return v11;
}

uint64_t SFAppleIDCopyKeyFromKeychainForReference(void *a1, CFTypeRef *a2)
{
  void v14[3] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = v3;
  CFTypeRef result = 0;
  if (v3)
  {
    uint64_t v5 = *MEMORY[0x1E4F3BD40];
    v13[0] = *MEMORY[0x1E4F3B978];
    v13[1] = v5;
    v14[0] = *MEMORY[0x1E4F3B9A0];
    v14[1] = v3;
    void v13[2] = *MEMORY[0x1E4F3BC80];
    v14[2] = MEMORY[0x1E4F1CC38];
    CFDictionaryRef v6 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v14 forKeys:v13 count:3];
    uint64_t v7 = SecItemCopyMatching(v6, &result);
    if (v7)
    {
      uint64_t v10 = v7;
      if (gLogCategory_SFAppleIDKeychainUtilities <= 90
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else if (result)
    {
      CFTypeID v8 = CFGetTypeID(result);
      CFTypeID TypeID = SecKeyGetTypeID();
      uint64_t v10 = 0;
      if (a2 && v8 == TypeID)
      {
        uint64_t v10 = 0;
        *a2 = result;
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  else
  {
    CFDictionaryRef v6 = 0;
    uint64_t v10 = 4294960591;
  }

  return v10;
}

uint64_t SFAppleIDCopyKeychainReferenceForKey(uint64_t a1, void *a2)
{
  v11[3] = *MEMORY[0x1E4F143B8];
  CFTypeRef result = 0;
  if (a1)
  {
    uint64_t v3 = *MEMORY[0x1E4F3BD48];
    v10[0] = *MEMORY[0x1E4F3B978];
    v10[1] = v3;
    v11[0] = *MEMORY[0x1E4F3B9A0];
    v11[1] = a1;
    v10[2] = *MEMORY[0x1E4F3BC78];
    v11[2] = MEMORY[0x1E4F1CC38];
    CFDictionaryRef v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:v10 count:3];
    uint64_t v5 = SecItemCopyMatching(v4, &result);
    if (v5)
    {
      uint64_t v7 = v5;
      if (gLogCategory_SFAppleIDKeychainUtilities <= 90
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else if (result)
    {
      CFTypeID v6 = CFGetTypeID(result);
      if (v6 == CFDataGetTypeID())
      {
        uint64_t v7 = 0;
        if (a2) {
          *a2 = (id)result;
        }
      }
      else
      {
        uint64_t v7 = 4294960540;
      }
    }
    else
    {
      uint64_t v7 = 4294960534;
    }
  }
  else
  {
    CFDictionaryRef v4 = 0;
    uint64_t v7 = 4294960591;
  }

  return v7;
}

uint64_t SFAppleIDAddCertificateToKeychain(void *a1, uint64_t a2, void *a3, void *a4)
{
  v49[3] = *MEMORY[0x1E4F143B8];
  id v6 = a1;
  id v7 = a3;
  id v8 = 0;
  CFTypeRef result = 0;
  uint64_t v9 = 4294960591;
  id v10 = 0;
  CFDictionaryRef v11 = 0;
  CFDictionaryRef v12 = 0;
  id v13 = 0;
  if (!v6 || !a2) {
    goto LABEL_53;
  }
  uint64_t v14 = *MEMORY[0x1E4F3B978];
  uint64_t v15 = *MEMORY[0x1E4F3B980];
  uint64_t v16 = *MEMORY[0x1E4F3BD48];
  v47[0] = *MEMORY[0x1E4F3B978];
  v47[1] = v16;
  v49[0] = v15;
  v49[1] = a2;
  uint64_t v48 = *MEMORY[0x1E4F3BC78];
  uint64_t v17 = v48;
  v49[2] = MEMORY[0x1E4F1CC38];
  CFDictionaryRef v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v49 forKeys:v47 count:3];
  uint64_t v18 = SecItemCopyMatching(v11, &result);
  uint64_t v41 = v17;
  if (v18 == -25300) {
    goto LABEL_12;
  }
  uint64_t v19 = v18;
  if (v18)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      uint64_t v38 = v19;
      LogPrintF();
    }
LABEL_12:
    id v10 = 0;
    goto LABEL_13;
  }
  if (!result)
  {
    id v8 = 0;
    id v10 = 0;
    CFDictionaryRef v12 = 0;
    id v13 = 0;
    goto LABEL_72;
  }
  id v20 = v6;
  CFDictionaryRef v21 = v11;
  id v22 = v7;
  CFTypeID v23 = CFGetTypeID(result);
  if (v23 != CFDataGetTypeID())
  {
    id v8 = 0;
    id v13 = 0;
    uint64_t v9 = 4294960540;
    id v7 = v22;
    CFDictionaryRef v11 = v21;
    id v6 = v20;
    id v10 = 0;
    CFDictionaryRef v12 = 0;
    goto LABEL_53;
  }
  CFTypeRef v24 = result;
  CFTypeRef result = 0;
  id v7 = v22;
  CFDictionaryRef v11 = v21;
  id v6 = v20;
  id v10 = (id)v24;
LABEL_13:
  uint64_t v25 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionary", v38);
  id v13 = v25;
  if (!v25)
  {
    id v8 = 0;
    CFDictionaryRef v12 = 0;
    uint64_t v9 = 4294960568;
    goto LABEL_53;
  }
  if (v7) {
    [v25 setObject:v7 forKeyedSubscript:*MEMORY[0x1E4F3B788]];
  }
  [v13 setObject:@"com.apple.sharing.appleidauthentication" forKeyedSubscript:*MEMORY[0x1E4F3B550]];
  [v13 setObject:*MEMORY[0x1E4F3B598] forKeyedSubscript:*MEMORY[0x1E4F3B558]];
  id v42 = v7;
  if (!v10)
  {
    CFDictionaryRef query = 0;
    goto LABEL_32;
  }
  uint64_t v26 = *MEMORY[0x1E4F3BD40];
  v45[0] = v14;
  v45[1] = v26;
  v46[0] = v15;
  v46[1] = v10;
  CFDictionaryRef v27 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v46 forKeys:v45 count:2];
  if (!v27)
  {
    id v8 = 0;
    CFDictionaryRef v12 = 0;
LABEL_72:
    uint64_t v9 = 4294960534;
    goto LABEL_53;
  }
  CFDictionaryRef query = v27;
  uint64_t v28 = SecItemUpdate(v27, (CFDictionaryRef)v13);
  if (!v28)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities > 30)
    {
      id v8 = 0;
      uint64_t v30 = a4;
      goto LABEL_62;
    }
    uint64_t v30 = a4;
    if (gLogCategory_SFAppleIDKeychainUtilities == -1)
    {
      id v8 = 0;
      if (!_LogCategory_Initialize())
      {
LABEL_62:
        if (v30)
        {
          id v10 = v10;
          uint64_t v9 = 0;
          *uint64_t v30 = v10;
        }
        else
        {
          uint64_t v9 = 0;
        }
        goto LABEL_65;
      }
    }
    else
    {
      id v8 = 0;
    }
LABEL_46:
    LogPrintF();
    goto LABEL_62;
  }
  if (gLogCategory_SFAppleIDKeychainUtilities <= 60)
  {
    uint64_t v29 = v28;
    if (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize())
    {
      uint64_t v39 = v29;
      LogPrintF();
    }
  }
  uint64_t v31 = SecItemDelete(query);
  if (v31)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60)
    {
      uint64_t v32 = v31;
      if (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize())
      {
        uint64_t v39 = v32;
        LogPrintF();
      }
    }
  }
LABEL_32:
  objc_msgSend(v13, "setObject:forKeyedSubscript:", v15, v14, v39);
  [v13 setObject:a2 forKeyedSubscript:v16];
  uint64_t v33 = MEMORY[0x1E4F1CC38];
  [v13 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:v41];
  [v13 setObject:v33 forKeyedSubscript:*MEMORY[0x1E4F3BD08]];
  [v13 setObject:MEMORY[0x1E4F1CC28] forKeyedSubscript:*MEMORY[0x1E4F3B878]];
  if (!SecItemAdd((CFDictionaryRef)v13, &result))
  {
LABEL_42:
    id v8 = (id)result;
    CFTypeRef result = 0;
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v8 = v8;

      id v7 = v42;
      if (gLogCategory_SFAppleIDKeychainUtilities > 30)
      {
        id v10 = v8;
        uint64_t v30 = a4;
        goto LABEL_62;
      }
      uint64_t v30 = a4;
      if (gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
      {
        id v10 = v8;
        goto LABEL_62;
      }
      id v10 = v8;
      goto LABEL_46;
    }
    uint64_t v9 = 4294960540;
    id v7 = v42;
    CFDictionaryRef v12 = query;
LABEL_53:
    CFDictionaryRef query = v12;
    int v35 = gLogCategory_SFAppleIDKeychainUtilities;
    goto LABEL_54;
  }
  if (gLogCategory_SFAppleIDKeychainUtilities <= 60
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v34 = SecItemDelete(v11);
  if (!v34)
  {
    uint64_t v36 = SecItemAdd((CFDictionaryRef)v13, &result);
    if (v36)
    {
      uint64_t v9 = v36;
      int v35 = gLogCategory_SFAppleIDKeychainUtilities;
      if (gLogCategory_SFAppleIDKeychainUtilities > 60)
      {
        id v8 = 0;
        id v7 = v42;
        goto LABEL_54;
      }
      if (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      id v8 = 0;
      id v7 = v42;
      CFDictionaryRef v12 = query;
      goto LABEL_53;
    }
    goto LABEL_42;
  }
  uint64_t v9 = v34;
  int v35 = gLogCategory_SFAppleIDKeychainUtilities;
  if (gLogCategory_SFAppleIDKeychainUtilities <= 60)
  {
    id v7 = v42;
    if (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()) {
      LogPrintF();
    }
    id v8 = 0;
    CFDictionaryRef v12 = query;
    goto LABEL_53;
  }
  id v8 = 0;
  id v7 = v42;
LABEL_54:
  if (v35 <= 90 && (v35 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_65:
  if (result) {
    CFRelease(result);
  }

  return v9;
}

uint64_t SFAppleIDRemoveCertificateFromKeychain(void *a1, void *a2)
{
  void v13[3] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v4)
  {
    uint64_t v6 = *MEMORY[0x1E4F3BD40];
    v12[0] = *MEMORY[0x1E4F3B978];
    v12[1] = v6;
    v13[0] = *MEMORY[0x1E4F3B980];
    v13[1] = v4;
    v12[2] = *MEMORY[0x1E4F3BC80];
    void v13[2] = MEMORY[0x1E4F1CC38];
    CFDictionaryRef v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v13 forKeys:v12 count:3];
    CFDictionaryRef v8 = v7;
    if (v7)
    {
      uint64_t v9 = SecItemDelete(v7);
      if (v9 == -25300)
      {
        if (gLogCategory_SFAppleIDKeychainUtilities <= 60
          && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v10 = 4294941996;
      }
      else
      {
        uint64_t v10 = v9;
        if (v9)
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 60
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 30
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v10 = 0;
        }
      }
    }
    else
    {
      uint64_t v10 = 4294960534;
    }
  }
  else
  {
    CFDictionaryRef v8 = 0;
    uint64_t v10 = 4294960591;
  }

  return v10;
}

uint64_t SFAppleIDCopyCertificateFromKeychainForReference(void *a1, CFTypeRef *a2)
{
  void v13[3] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = v3;
  CFTypeRef result = 0;
  if (!v3)
  {
    CFDictionaryRef v6 = 0;
    uint64_t v7 = 4294960591;
    goto LABEL_15;
  }
  uint64_t v5 = *MEMORY[0x1E4F3BD40];
  v12[0] = *MEMORY[0x1E4F3B978];
  v12[1] = v5;
  v13[0] = *MEMORY[0x1E4F3B980];
  v13[1] = v3;
  v12[2] = *MEMORY[0x1E4F3BC80];
  void v13[2] = MEMORY[0x1E4F1CC38];
  CFDictionaryRef v6 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v13 forKeys:v12 count:3];
  uint64_t v7 = SecItemCopyMatching(v6, &result);
  if (v7)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 90
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    if (!result)
    {
      uint64_t v7 = 0;
      goto LABEL_15;
    }
    CFTypeID v8 = CFGetTypeID(result);
    CFTypeID TypeID = SecCertificateGetTypeID();
    if (a2 && v8 == TypeID)
    {
      uint64_t v7 = 0;
      *a2 = result;
      CFTypeRef result = 0;
      goto LABEL_15;
    }
  }
  if (result) {
    CFRelease(result);
  }
LABEL_15:

  return v7;
}

uint64_t SFAppleIDCopyKeychainReferenceForCertificate(uint64_t a1, void *a2)
{
  v11[3] = *MEMORY[0x1E4F143B8];
  CFTypeRef result = 0;
  if (!a1)
  {
    CFDictionaryRef v4 = 0;
    uint64_t v7 = 4294960591;
    goto LABEL_10;
  }
  uint64_t v3 = *MEMORY[0x1E4F3BD48];
  v10[0] = *MEMORY[0x1E4F3B978];
  v10[1] = v3;
  v11[0] = *MEMORY[0x1E4F3B980];
  v11[1] = a1;
  v10[2] = *MEMORY[0x1E4F3BC78];
  v11[2] = MEMORY[0x1E4F1CC38];
  CFDictionaryRef v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:v10 count:3];
  uint64_t v5 = SecItemCopyMatching(v4, &result);
  if (v5)
  {
    uint64_t v7 = v5;
    if (gLogCategory_SFAppleIDKeychainUtilities <= 90
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    if (!result)
    {
      uint64_t v7 = 4294960534;
      goto LABEL_10;
    }
    CFTypeID v6 = CFGetTypeID(result);
    if (v6 == CFDataGetTypeID())
    {
      if (a2)
      {
        uint64_t v7 = 0;
        *a2 = (id)result;
        CFTypeRef result = 0;
        goto LABEL_10;
      }
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = 4294960540;
    }
  }
  if (result) {
    CFRelease(result);
  }
LABEL_10:

  return v7;
}

uint64_t SFAppleIDCreateCertificateWithPEMString(void *a1, SecCertificateRef *a2)
{
  id v3 = a1;
  if (!v3)
  {
    uint64_t v5 = 0;
LABEL_12:
    CFDataRef v7 = 0;
    uint64_t v9 = 4294960591;
    goto LABEL_10;
  }
  CFDictionaryRef v4 = [MEMORY[0x1E4F28B88] whitespaceAndNewlineCharacterSet];
  uint64_t v5 = [v3 stringByTrimmingCharactersInSet:v4];

  if (![v5 hasPrefix:@"-----BEGIN CERTIFICATE-----"]
    || ![v5 hasSuffix:@"-----END CERTIFICATE-----"])
  {
    goto LABEL_12;
  }
  CFTypeID v6 = [v5 substringFromIndex:objc_msgSend(@"-----BEGIN CERTIFICATE-----", "length")];

  uint64_t v5 = [v6 substringWithRange:0, objc_msgSend(v6, "length") - objc_msgSend(@"-----END CERTIFICATE-----", "length")];

  if (!v5)
  {
    CFDataRef v7 = 0;
    goto LABEL_14;
  }
  CFDataRef v7 = (const __CFData *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBase64EncodedString:v5 options:1];
  if (!v7)
  {
LABEL_14:
    uint64_t v9 = 4294960579;
    goto LABEL_10;
  }
  SecCertificateRef v8 = SecCertificateCreateWithData((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v7);
  if (v8)
  {
    if (a2)
    {
      uint64_t v9 = 0;
      *a2 = v8;
    }
    else
    {
      CFRelease(v8);
      uint64_t v9 = 0;
    }
  }
  else
  {
    uint64_t v9 = 4294960534;
  }
LABEL_10:

  return v9;
}

void SFAppleIDCreateKeyPair(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = dispatch_get_global_queue(0, 0);
  uint64_t v9 = v8;
  if (v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = (void *)v8;
  }
  CFDictionaryRef v11 = v10;
  if (v7)
  {
    if (v5)
    {
      block[0] = MEMORY[0x1E4F143A8];
      block[1] = 3221225472;
      block[2] = __SFAppleIDCreateKeyPair_block_invoke;
      block[3] = &unk_1E5BBBC30;
      CFDictionaryRef v12 = &v17;
      id v17 = v5;
      uint64_t v18 = v11;
      id v19 = v7;
      dispatch_async(v9, block);
    }
    else
    {
      if (gLogCategory_SFAppleIDKeychainUtilities <= 90
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      void v13[2] = __SFAppleIDCreateKeyPair_block_invoke_3;
      void v13[3] = &unk_1E5BBBC58;
      CFDictionaryRef v12 = &v14;
      id v14 = v7;
      int v15 = -6705;
      dispatch_async(v11, v13);
    }
  }
}

void __SFAppleIDCreateKeyPair_block_invoke(uint64_t a1)
{
  v37[4] = *MEMORY[0x1E4F143B8];
  CFErrorRef error = 0;
  char v2 = [MEMORY[0x1E4F1CA60] dictionary];
  id v3 = v2;
  if (!v2) {
    goto LABEL_16;
  }
  [v2 setObject:*MEMORY[0x1E4F3B760] forKeyedSubscript:*MEMORY[0x1E4F3B718]];
  [v3 setObject:&unk_1EFA093E0 forKeyedSubscript:*MEMORY[0x1E4F3B708]];
  uint64_t v4 = MEMORY[0x1E4F1CC38];
  [v3 setObject:MEMORY[0x1E4F1CC38] forKeyedSubscript:*MEMORY[0x1E4F3BD08]];
  id v5 = [NSString alloc];
  id v6 = *(__CFString **)(a1 + 32);
  if (!v6) {
    id v6 = &stru_1EF9BDC68;
  }
  uint64_t v7 = [v5 initWithFormat:@"Apple ID %@ private key", v6];
  if (v7)
  {
    uint64_t v8 = *MEMORY[0x1E4F3B6B0];
    uint64_t v9 = *MEMORY[0x1E4F3B558];
    v36[0] = *MEMORY[0x1E4F3B6B0];
    v36[1] = v9;
    uint64_t v10 = *MEMORY[0x1E4F3B578];
    v37[0] = v4;
    v37[1] = v10;
    uint64_t v11 = *MEMORY[0x1E4F3B878];
    uint64_t v12 = a1;
    uint64_t v13 = *MEMORY[0x1E4F3B788];
    v36[2] = *MEMORY[0x1E4F3B878];
    v36[3] = v13;
    v37[2] = MEMORY[0x1E4F1CC28];
    v37[3] = v7;
    CFDictionaryRef v27 = (void *)v7;
    id v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v37 forKeys:v36 count:4];
    id v15 = [NSString alloc];
    uint64_t v16 = *(__CFString **)(v12 + 32);
    if (!v16) {
      uint64_t v16 = &stru_1EF9BDC68;
    }
    uint64_t v26 = v12;
    uint64_t v17 = [v15 initWithFormat:@"Apple ID %@ public key", v16];
    uint64_t v18 = (void *)v17;
    if (v17)
    {
      v34[0] = v8;
      v34[1] = v9;
      v35[0] = MEMORY[0x1E4F1CC38];
      v35[1] = v10;
      v34[2] = v11;
      v34[3] = v13;
      v35[2] = MEMORY[0x1E4F1CC28];
      v35[3] = v17;
      id v19 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v35 forKeys:v34 count:4];
      [v3 setObject:v14 forKeyedSubscript:*MEMORY[0x1E4F3BC18]];
      [v3 setObject:v19 forKeyedSubscript:*MEMORY[0x1E4F3BC50]];
      [v3 setObject:@"com.apple.sharing.appleidauthentication" forKeyedSubscript:*MEMORY[0x1E4F3B550]];
      id v20 = SecKeyCreateRandomKey((CFDictionaryRef)v3, &error);
      if (v20)
      {
        CFDictionaryRef v21 = v20;
        SecKeyRef v22 = SecKeyCopyPublicKey(v20);
        a1 = v26;
        if (v22)
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 50
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          int v23 = 0;
        }
        else
        {
          CFRelease(v21);
          CFDictionaryRef v21 = 0;
          int v23 = -6762;
        }
      }
      else
      {
        a1 = v26;
        if (gLogCategory_SFAppleIDKeychainUtilities <= 90
          && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFErrorRef v25 = error;
        int v23 = NSErrorToOSStatus();

        SecKeyRef v22 = 0;
        CFDictionaryRef v21 = 0;
      }
    }
    else
    {
      id v19 = 0;
      SecKeyRef v22 = 0;
      CFDictionaryRef v21 = 0;
      int v23 = -6728;
      a1 = v26;
    }
  }
  else
  {
LABEL_16:
    uint64_t v18 = 0;
    id v19 = 0;
    CFDictionaryRef v27 = 0;
    id v14 = 0;
    SecKeyRef v22 = 0;
    CFDictionaryRef v21 = 0;
    int v23 = -6728;
  }
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFAppleIDCreateKeyPair_block_invoke_2;
  block[3] = &unk_1E5BBBC08;
  CFTypeRef v24 = *(NSObject **)(a1 + 40);
  id v29 = *(id *)(a1 + 48);
  uint64_t v30 = v21;
  SecKeyRef v31 = v22;
  int v32 = v23;
  dispatch_async(v24, block);
}

uint64_t __SFAppleIDCreateKeyPair_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned int *)(a1 + 56));
}

uint64_t __SFAppleIDCreateKeyPair_block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, 0, *(unsigned int *)(a1 + 40));
}

uint64_t SFAppleIDCreateCertificateRequestPEMStringForKeyPair(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  v25[1] = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  uint64_t v8 = v7;
  uint64_t v9 = 0;
  uint64_t v10 = 4294960591;
  if (!v7 || !a2 || !a3) {
    goto LABEL_22;
  }
  CFTypeRef v24 = @"cn";
  v25[0] = v7;
  uint64_t v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v25 forKeys:&v24 count:1];
  uint64_t v12 = [MEMORY[0x1E4F1CA48] array];
  uint64_t v13 = v12;
  if (!v12)
  {
    id v17 = 0;
    int v18 = 0;
    id v15 = 0;
LABEL_16:
    uint64_t v10 = 4294960568;
    goto LABEL_8;
  }
  [v12 addObject:v11];
  id v14 = [MEMORY[0x1E4F1CA60] dictionary];
  id v15 = v14;
  if (!v14)
  {
    id v17 = 0;
    int v18 = 0;
    goto LABEL_16;
  }
  [v14 setObject:&unk_1EFA093F8 forKeyedSubscript:*MEMORY[0x1E4F3B970]];
  CertificateRequestWithParameters = (void *)SecGenerateCertificateRequestWithParameters();
  if (CertificateRequestWithParameters)
  {
    id v17 = CertificateRequestWithParameters;
    uint64_t v10 = 0;
    int v18 = 1;
  }
  else
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 90
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    id v17 = 0;
    int v18 = 0;
    uint64_t v10 = 4294960534;
  }
LABEL_8:

  id v19 = v17;
  uint64_t v9 = v19;
  if (v18)
  {
    if (v19)
    {
      uint64_t v20 = [MEMORY[0x1E4F28E78] stringWithString:@"-----BEGIN CERTIFICATE REQUEST-----\n"];
      if (v20)
      {
        id v21 = (id)v20;
        SecKeyRef v22 = [v9 base64EncodedStringWithOptions:1];
        [v21 appendString:v22];
        [v21 appendString:@"\n-----END CERTIFICATE REQUEST-----\n"];
        if (a4)
        {
          id v21 = v21;
          uint64_t v10 = 0;
          *a4 = v21;
        }
        else
        {
          uint64_t v10 = 0;
        }
        goto LABEL_27;
      }
      uint64_t v10 = 4294960568;
    }
    else
    {
      uint64_t v10 = 4294960534;
    }
  }
LABEL_22:
  if (gLogCategory_SFAppleIDKeychainUtilities <= 90
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  SecKeyRef v22 = 0;
  id v21 = 0;
LABEL_27:

  return v10;
}

uint64_t SFAppleIDCommonNameForCertificate(uint64_t a1, void *a2)
{
  if (a1)
  {
    if (a2)
    {
      id v3 = (void *)SecCertificateCopyCommonNames();
      if (v3)
      {
        uint64_t v4 = v3;
        if ([v3 count])
        {
          id v5 = [v4 objectAtIndexedSubscript:0];
          uint64_t v6 = 0;
          *a2 = v5;
        }
        else
        {
          uint64_t v6 = 201208;
          if (gLogCategory_SFAppleIDKeychainUtilities <= 90
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          id v5 = 0;
        }
      }
      else
      {
        uint64_t v6 = 201208;
        if (gLogCategory_SFAppleIDKeychainUtilities <= 90
          && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        id v5 = 0;
        uint64_t v4 = 0;
      }
    }
    else
    {
      id v5 = 0;
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
  }
  else
  {
    id v5 = 0;
    uint64_t v4 = 0;
    uint64_t v6 = 4294960591;
  }

  return v6;
}

uint64_t SFAppleIDCreationDateForKey(uint64_t a1, void *a2)
{
  v15[3] = *MEMORY[0x1E4F143B8];
  CFTypeRef v13 = 0;
  if (!a1)
  {
    id v7 = 0;
    id v8 = 0;
    CFDictionaryRef v4 = 0;
    uint64_t v9 = 0;
    uint64_t v6 = 4294960591;
    goto LABEL_12;
  }
  if (!a2)
  {
    id v7 = 0;
    id v8 = 0;
    CFDictionaryRef v4 = 0;
    uint64_t v9 = 0;
    uint64_t v6 = 0;
    goto LABEL_12;
  }
  uint64_t v3 = *MEMORY[0x1E4F3BD48];
  v14[0] = *MEMORY[0x1E4F3B978];
  v14[1] = v3;
  v15[0] = *MEMORY[0x1E4F3B9A0];
  v15[1] = a1;
  v14[2] = *MEMORY[0x1E4F3BC68];
  v15[2] = MEMORY[0x1E4F1CC38];
  CFDictionaryRef v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v15 forKeys:v14 count:3];
  uint64_t v5 = SecItemCopyMatching(v4, &v13);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = 0;
    id v8 = 0;
    uint64_t v9 = 0;
    goto LABEL_12;
  }
  uint64_t v9 = (void *)v13;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v7 = 0;
    id v8 = 0;
LABEL_11:
    uint64_t v6 = 4294960569;
    goto LABEL_12;
  }
  id v10 = v9;
  id v7 = v10;
  if (!v10)
  {
    id v8 = 0;
    uint64_t v9 = 0;
    goto LABEL_11;
  }
  uint64_t v11 = [v10 objectForKeyedSubscript:*MEMORY[0x1E4F3B668]];
  if (v11)
  {
    id v8 = v11;
    uint64_t v6 = 0;
    *a2 = v8;
  }
  else
  {
    id v8 = 0;
    uint64_t v6 = 4294960569;
  }
  uint64_t v9 = v7;
LABEL_12:

  return v6;
}

uint64_t SFAppleIDExpirationDateForCertificate(uint64_t a1, void *a2)
{
  if (!a1) {
    return 4294960591;
  }
  if (!a2) {
    return 0;
  }
  SecCertificateNotValidAfter();
  uint64_t v3 = objc_msgSend(MEMORY[0x1E4F1C9C8], "dateWithTimeIntervalSinceReferenceDate:");
  if (v3)
  {
    id v4 = v3;
    *a2 = v4;

    return 0;
  }
  return 4294960534;
}

uint64_t SFAppleIDSerialNumberForCertificate(__SecCertificate *a1, void *a2)
{
  CFErrorRef error = 0;
  if (a1)
  {
    if (a2)
    {
      CFDataRef v3 = SecCertificateCopySerialNumberData(a1, &error);
      CFErrorRef v4 = error;
      if (v3)
      {
        CFDataRef v5 = v3;
        uint64_t v6 = malloc_type_malloc((2 * [(__CFData *)v3 length]) | 1, 0x100004077774924uLL);
        if (v6)
        {
          id v7 = v6;
          CFDataRef v5 = v5;
          [(__CFData *)v5 bytes];
          [(__CFData *)v5 length];
          DataToHexCStringEx();
          id v8 = [NSString stringWithUTF8String:v7];
          uint64_t v9 = v8;
          if (v8)
          {
            uint64_t v10 = 0;
            *a2 = v8;
          }
          else
          {
            uint64_t v10 = 4294960534;
          }
          free(v7);
        }
        else
        {
          uint64_t v9 = 0;
          uint64_t v10 = 4294960568;
        }
      }
      else
      {
        uint64_t v10 = NSErrorToOSStatus();
        if (gLogCategory_SFAppleIDKeychainUtilities <= 60
          && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFDataRef v5 = 0;
        uint64_t v9 = 0;
      }
    }
    else
    {
      CFDataRef v5 = 0;
      uint64_t v9 = 0;
      CFErrorRef v4 = 0;
      uint64_t v10 = 0;
    }
  }
  else
  {
    CFDataRef v5 = 0;
    uint64_t v9 = 0;
    CFErrorRef v4 = 0;
    uint64_t v10 = 4294960591;
  }

  return v10;
}

id SFAppleIDParseValidationRecordDataSync(void *a1)
{
  CFTypeRef cf = 0;
  int v5 = 0;
  int v1 = parseValidationRecord(a1);
  id v2 = 0;
  if (v1 || MEMORY[0x1A626B570](cf, &v5))
  {
    if (cf) {
      CFRelease(cf);
    }
    CFDataRef v3 = 0;
  }
  else
  {
    if (cf) {
      CFRelease(cf);
    }
    CFDataRef v3 = handleValidationRecordTrustResultSync(v2, v5);
  }

  return v3;
}

uint64_t parseValidationRecord(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t AppleIDValidationRecordSigningPolicy = SecPolicyCreateAppleIDValidationRecordSigningPolicy();
    if (AppleIDValidationRecordSigningPolicy)
    {
      CFDataRef v3 = (const void *)AppleIDValidationRecordSigningPolicy;
      if (SecCMSVerifyCopyDataAndAttributes())
      {
        uint64_t v5 = 201211;
        if (gLogCategory_SFAppleIDKeychainUtilities > 90
          || gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v5 = 201211;
        if (gLogCategory_SFAppleIDKeychainUtilities > 90
          || gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_21;
        }
      }
      LogPrintF();
LABEL_21:
      CFRelease(v3);

      goto LABEL_5;
    }
    if (gLogCategory_SFAppleIDKeychainUtilities <= 90
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v5 = 4294960534;
  }
  else
  {
    uint64_t v5 = 4294960591;
  }
LABEL_5:

  return v5;
}

id handleValidationRecordTrustResultSync(void *a1, int a2)
{
  id v3 = a1;
  if (a2 != 1 && a2 != 4)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities > 60
      || gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_15;
    }
LABEL_13:
    LogPrintF();
LABEL_15:
    id v11 = 0;
    id v8 = 0;
    id v7 = 0;
    CFErrorRef v4 = 0;
    goto LABEL_16;
  }
  if ((unint64_t)(CFDictionaryGetInt64() - 101) <= 0xFFFFFFFFFFFFFF9BLL)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities > 60
      || gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  CFDateGetTypeID();
  CFErrorRef v4 = CFDictionaryGetTypedValue();
  if (v4)
  {
    CFDictionaryGetDouble();
    double v6 = v5;
    id v7 = [MEMORY[0x1E4F1C9C8] date];
    id v8 = [v4 dateByAddingTimeInterval:-86400.0];
    if ([v8 compare:v7] == -1)
    {
      double v9 = 2592000.0;
      if (v6 != 0.0) {
        double v9 = v6;
      }
      uint64_t v10 = [v4 dateByAddingTimeInterval:v9];

      if ([v7 compare:v10] == -1) {
        id v11 = v3;
      }
      else {
        id v11 = 0;
      }
      id v8 = (void *)v10;
    }
    else
    {
      id v11 = 0;
    }
  }
  else
  {
    id v11 = 0;
    id v8 = 0;
    id v7 = 0;
  }
LABEL_16:

  return v11;
}

void SFAppleIDParseValidationRecordData(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  SecKeyRef v22 = 0;
  if (v6)
  {
    id v8 = v6;
  }
  else
  {
    id v8 = dispatch_get_global_queue(0, 0);
  }
  double v9 = v8;
  int v10 = 201211;
  uint64_t v21 = 0;
  int v11 = parseValidationRecord(v5);
  id v12 = 0;
  CFTypeRef v13 = v12;
  if (!v11)
  {
    result[0] = MEMORY[0x1E4F143A8];
    result[1] = 3221225472;
    result[2] = __SFAppleIDParseValidationRecordData_block_invoke;
    result[3] = &unk_1E5BBBC80;
    id v19 = v12;
    id v20 = v7;
    OSStatus v14 = SecTrustEvaluateAsync(v22, v9, result);

    if (v14) {
      int v10 = 201214;
    }
    else {
      int v10 = 0;
    }
  }
  if (v22) {
    CFRelease(v22);
  }
  if (v7 && v10)
  {
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 3221225472;
    v15[2] = __SFAppleIDParseValidationRecordData_block_invoke_2;
    v15[3] = &unk_1E5BBBC58;
    id v16 = v7;
    int v17 = v10;
    dispatch_async(v9, v15);
  }
}

void __SFAppleIDParseValidationRecordData_block_invoke(uint64_t a1, uint64_t a2, int a3)
{
  CFErrorRef v4 = *(void **)(a1 + 32);
  id v6 = (void (**)(id, void *, void))*(id *)(a1 + 40);
  id v5 = handleValidationRecordTrustResultSync(v4, a3);
  if (v6) {
    v6[2](v6, v5, 0);
  }
}

uint64_t __SFAppleIDParseValidationRecordData_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, *(unsigned int *)(a1 + 40));
}

void SFAppleIDVerifyCertificateChain(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  SecTrustRef trust = 0;
  if (v6)
  {
    id v8 = v6;
  }
  else
  {
    id v8 = dispatch_get_global_queue(0, 0);
  }
  double v9 = v8;
  if (!v5)
  {
    int v11 = 0;
    int v14 = -6705;
    goto LABEL_11;
  }
  AppleIDAuthorityPolicy = (const void *)SecPolicyCreateAppleIDAuthorityPolicy();
  if (!AppleIDAuthorityPolicy)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 90
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    int v11 = 0;
    goto LABEL_32;
  }
  int v11 = AppleIDAuthorityPolicy;
  if (SecTrustCreateWithCertificates(v5, AppleIDAuthorityPolicy, &trust))
  {
    if (gLogCategory_SFAppleIDKeychainUtilities > 90
      || gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  id v12 = trust;
  if (!trust)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities > 90)
    {
      int v14 = -6762;
LABEL_14:
      CFRelease(v11);
      goto LABEL_15;
    }
    if (gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize()) {
      goto LABEL_32;
    }
LABEL_28:
    LogPrintF();
LABEL_32:
    int v14 = -6762;
    goto LABEL_11;
  }
  result[0] = MEMORY[0x1E4F143A8];
  result[1] = 3221225472;
  result[2] = __SFAppleIDVerifyCertificateChain_block_invoke;
  result[3] = &unk_1E5BBBCA8;
  id v19 = v7;
  OSStatus v13 = SecTrustEvaluateAsync(v12, v9, result);

  if (v13) {
    int v14 = 201219;
  }
  else {
    int v14 = 0;
  }
LABEL_11:
  if (trust) {
    CFRelease(trust);
  }
  if (v11) {
    goto LABEL_14;
  }
LABEL_15:
  if (v7 && v14)
  {
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __SFAppleIDVerifyCertificateChain_block_invoke_2;
    block[3] = &unk_1E5BBBC58;
    id v16 = v7;
    int v17 = v14;
    dispatch_async(v9, block);
  }
}

void __SFAppleIDVerifyCertificateChain_block_invoke(uint64_t a1, uint64_t a2, int a3)
{
  id v5 = *(id *)(a1 + 32);
  uint64_t v6 = 0;
  BOOL v7 = a3 == 4 || a3 == 1;
  if (a3 != 1 && a3 != 4)
  {
    uint64_t v6 = 201219;
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60)
    {
      id v8 = v5;
      if (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()) {
        LogPrintF();
      }
      id v5 = v8;
    }
  }
  if (v5)
  {
    id v9 = v5;
    (*((void (**)(id, uint64_t, BOOL, uint64_t))v5 + 2))(v5, a2, v7, v6);
    id v5 = v9;
  }
}

uint64_t __SFAppleIDVerifyCertificateChain_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, 0, *(unsigned int *)(a1 + 40));
}

uint64_t SFAppleIDVerifyCertificateChainSync(void *a1, int *a2)
{
  id v3 = a1;
  SecTrustRef trust = 0;
  CFErrorRef error = 0;
  if (v3)
  {
    AppleIDAuthorityPolicy = (const void *)SecPolicyCreateAppleIDAuthorityPolicy();
    if (AppleIDAuthorityPolicy)
    {
      if (SecTrustCreateWithCertificates(v3, AppleIDAuthorityPolicy, &trust))
      {
        if (gLogCategory_SFAppleIDKeychainUtilities > 90
          || gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_31;
        }
      }
      else
      {
        if (trust)
        {
          if (SecTrustEvaluateWithError(trust, &error))
          {
            int v5 = 0;
            CFErrorRef v6 = 0;
            uint64_t v7 = 1;
          }
          else
          {
            CFErrorRef v6 = error;
            if (gLogCategory_SFAppleIDKeychainUtilities <= 90
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            int v5 = NSErrorToOSStatus();
            uint64_t v7 = 0;
          }
LABEL_7:
          if (trust) {
            CFRelease(trust);
          }
          if (!AppleIDAuthorityPolicy)
          {
LABEL_11:
            if (!a2) {
              goto LABEL_19;
            }
            goto LABEL_12;
          }
LABEL_10:
          CFRelease(AppleIDAuthorityPolicy);
          goto LABEL_11;
        }
        if (gLogCategory_SFAppleIDKeychainUtilities > 90)
        {
          CFErrorRef v6 = 0;
          uint64_t v7 = 0;
          int v5 = -6762;
          goto LABEL_10;
        }
        if (gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
        {
LABEL_31:
          CFErrorRef v6 = 0;
          uint64_t v7 = 0;
          int v5 = -6762;
          goto LABEL_7;
        }
      }
    }
    else if (gLogCategory_SFAppleIDKeychainUtilities > 90 {
           || gLogCategory_SFAppleIDKeychainUtilities == -1 && !_LogCategory_Initialize())
    }
    {
      goto LABEL_31;
    }
    LogPrintF();
    goto LABEL_31;
  }
  CFErrorRef v6 = 0;
  uint64_t v7 = 0;
  int v5 = -6705;
  if (!a2) {
    goto LABEL_19;
  }
LABEL_12:
  if (v5) {
    int v8 = 1;
  }
  else {
    int v8 = v7;
  }
  if (v8) {
    int v9 = v5;
  }
  else {
    int v9 = -6700;
  }
  *a2 = v9;
LABEL_19:

  return v7;
}

uint64_t SFAppleIDSignedHashForData(void *a1, __SecKey *a2, const __CFData **a3)
{
  id v5 = a1;
  CFErrorRef error = 0;
  uint64_t v6 = 4294960591;
  if (v5 && a2)
  {
    if (a3)
    {
      uint64_t v7 = (unsigned __int8 *)malloc_type_malloc(0x20uLL, 0xC7AA0D7AuLL);
      if (v7)
      {
        int v8 = v7;
        id v9 = v5;
        if (CC_SHA256((const void *)[v9 bytes], objc_msgSend(v9, "length"), v8))
        {
          CFDataRef v10 = [MEMORY[0x1E4F1C9B8] dataWithBytes:v8 length:32];
          if (v10)
          {
            CFDataRef v11 = v10;
            CFDataRef v12 = SecKeyCreateSignature(a2, (SecKeyAlgorithm)*MEMORY[0x1E4F3BAE8], v10, &error);
            if (v12)
            {
              CFDataRef v13 = v12;
              *a3 = v13;

              uint64_t v6 = 0;
            }
            else
            {
              if (gLogCategory_SFAppleIDKeychainUtilities <= 90
                && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              CFErrorRef v15 = error;
              uint64_t v6 = NSErrorToOSStatus();
            }
          }
          else
          {
            uint64_t v6 = 4294960568;
          }
        }
        else
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 60
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          uint64_t v6 = 4294960534;
        }
        free(v8);
      }
      else
      {
        uint64_t v6 = 4294960568;
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
  }

  return v6;
}

uint64_t SFAppleIDVerifySignedHashForData(void *a1, void *a2, __SecKey *a3)
{
  id v5 = a1;
  CFDataRef v6 = a2;
  CFDataRef v7 = v6;
  CFErrorRef error = 0;
  uint64_t v8 = 4294960591;
  if (v5 && v6 && a3)
  {
    id v9 = (unsigned __int8 *)malloc_type_malloc(0x20uLL, 0xA2EA4D0DuLL);
    if (v9)
    {
      CFDataRef v10 = v9;
      id v11 = v5;
      if (CC_SHA256((const void *)[v11 bytes], objc_msgSend(v11, "length"), v10))
      {
        CFDataRef v12 = [MEMORY[0x1E4F1C9B8] dataWithBytes:v10 length:32];
        if (v12)
        {
          if (SecKeyVerifySignature(a3, (SecKeyAlgorithm)*MEMORY[0x1E4F3BAE8], v12, v7, &error))
          {
            uint64_t v8 = 0;
          }
          else
          {
            if (gLogCategory_SFAppleIDKeychainUtilities <= 90
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            CFErrorRef v14 = error;
            uint64_t v8 = NSErrorToOSStatus();
          }
        }
        else
        {
          uint64_t v8 = 4294960568;
        }
      }
      else
      {
        if (gLogCategory_SFAppleIDKeychainUtilities <= 60
          && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        CFDataRef v12 = 0;
        uint64_t v8 = 4294960534;
      }
      free(v10);
    }
    else
    {
      uint64_t v8 = 4294960568;
    }
  }

  return v8;
}

uint64_t SFAppleIDCertificateAndKeyCounts(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  id v17 = 0;
  uint64_t v6 = SFAppleIDGetAllCertificatePersistentReferencesFromKeychain(&v17);
  id v7 = v17;
  uint64_t v8 = v7;
  if (v6)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    id v10 = 0;
    id v11 = 0;
  }
  else
  {
    uint64_t v9 = [v7 count];
    id v15 = 0;
    id v16 = 0;
    uint64_t v6 = SFAppleIDGetAllKeyPersistentReferencesFromKeychain((unint64_t)&v16, (unint64_t)&v15);
    id v10 = v16;
    id v11 = v15;
    if (v6)
    {
      if (gLogCategory_SFAppleIDKeychainUtilities <= 60
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      uint64_t v12 = [v10 count];
      uint64_t v13 = [v11 count];
      if (a1) {
        *a1 = v9;
      }
      if (a2) {
        *a2 = v12;
      }
      uint64_t v6 = 0;
      if (a3) {
        *a3 = v13;
      }
    }
  }

  return v6;
}

uint64_t SFAppleIDGetAllCertificatePersistentReferencesFromKeychain(void *a1)
{
  void v40[4] = *MEMORY[0x1E4F143B8];
  CFTypeRef result = 0;
  if (!a1)
  {
    id v11 = 0;
    CFErrorRef v14 = 0;
    id v16 = 0;
    id v2 = 0;
    CFDictionaryRef v7 = 0;
    uint64_t v10 = 0;
    goto LABEL_46;
  }
  id v1 = a1;
  id v2 = [MEMORY[0x1E4F1CA48] array];
  if (!v2)
  {
    id v11 = 0;
    CFErrorRef v14 = 0;
    id v16 = 0;
    CFDictionaryRef v7 = 0;
    uint64_t v10 = 4294960568;
    goto LABEL_46;
  }
  if (gLogCategory_SFAppleIDKeychainUtilities <= 50
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v3 = *MEMORY[0x1E4F3B980];
  uint64_t v4 = *MEMORY[0x1E4F3BB80];
  v39[0] = *MEMORY[0x1E4F3B978];
  v39[1] = v4;
  uint64_t v5 = *MEMORY[0x1E4F3BB88];
  v40[0] = v3;
  v40[1] = v5;
  uint64_t v6 = *MEMORY[0x1E4F3BC80];
  void v39[2] = *MEMORY[0x1E4F3B550];
  v39[3] = v6;
  v40[2] = @"com.apple.sharing.appleidauthentication";
  v40[3] = MEMORY[0x1E4F1CC38];
  CFDictionaryRef v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v40 forKeys:v39 count:4];
  uint64_t v8 = SecItemCopyMatching(v7, &result);
  if (v8 == -25300)
  {
    uint64_t v9 = CFArrayCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, MEMORY[0x1E4F1D510]);
    CFTypeRef result = v9;
  }
  else
  {
    uint64_t v10 = v8;
    if (v8)
    {
      if (gLogCategory_SFAppleIDKeychainUtilities <= 60
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      id v11 = 0;
      CFErrorRef v14 = 0;
      id v16 = 0;
      goto LABEL_46;
    }
    uint64_t v9 = (void *)result;
  }
  if (!v9)
  {
    id v11 = 0;
    CFErrorRef v14 = 0;
    id v16 = 0;
    uint64_t v10 = 4294960534;
    goto LABEL_46;
  }
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v11 = v9;
  uint64_t v12 = [v11 countByEnumeratingWithState:&v33 objects:v38 count:16];
  if (!v12)
  {
    CFErrorRef v14 = 0;
    id v16 = 0;
    goto LABEL_41;
  }
  uint64_t v13 = v12;
  CFDictionaryRef v27 = v1;
  CFDictionaryRef v28 = v7;
  id v29 = v2;
  int v30 = 0;
  CFErrorRef v14 = 0;
  id v15 = 0;
  id v16 = 0;
  uint64_t v17 = *(void *)v34;
  do
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      id v19 = v15;
      if (*(void *)v34 != v17) {
        objc_enumerationMutation(v11);
      }
      id v15 = *(id *)(*((void *)&v33 + 1) + 8 * i);

      CFTypeRef result = v15;
      CFTypeID v20 = CFGetTypeID(v15);
      if (v20 == SecCertificateGetTypeID())
      {
        CFTypeRef v21 = result;

        id v32 = 0;
        uint64_t v22 = SFAppleIDCommonNameForCertificate((uint64_t)v21, &v32);
        id v23 = v32;
        CFErrorRef v14 = v23;
        if (v22)
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 60
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            uint64_t v26 = (void *)v22;
LABEL_22:
            LogPrintF();
            continue;
          }
        }
        else if ([v23 hasPrefix:@"com.apple.idms.appleid."])
        {

          id v31 = 0;
          uint64_t v24 = SFAppleIDCopyKeychainReferenceForCertificate((uint64_t)v21, &v31);
          id v16 = v31;
          if (v24)
          {
            if (gLogCategory_SFAppleIDKeychainUtilities <= 60
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              uint64_t v26 = (void *)v24;
              goto LABEL_22;
            }
          }
          else
          {
            if (gLogCategory_SFAppleIDKeychainUtilities <= 50
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              uint64_t v26 = v14;
              LogPrintF();
            }
            objc_msgSend(v29, "addObject:", v16, v26);
            ++v30;
          }
        }
      }
    }
    uint64_t v13 = [v11 countByEnumeratingWithState:&v33 objects:v38 count:16];
  }
  while (v13);

  CFDictionaryRef v7 = v28;
  id v2 = v29;
  id v1 = v27;
LABEL_41:

  if (gLogCategory_SFAppleIDKeychainUtilities <= 50
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  id v2 = v2;
  uint64_t v10 = 0;
  void *v1 = v2;
LABEL_46:

  return v10;
}

uint64_t SFAppleIDGetAllKeyPersistentReferencesFromKeychain(unint64_t a1, unint64_t a2)
{
  v60[3] = *MEMORY[0x1E4F143B8];
  CFTypeRef result = 0;
  if (!(a1 | a2))
  {
    id obj = 0;
    id v15 = 0;
    CFErrorRef v14 = 0;
    id v43 = 0;
    id v4 = 0;
    id v5 = 0;
    CFDictionaryRef v10 = 0;
    uint64_t v13 = 0;
    goto LABEL_74;
  }
  id v2 = (void *)a2;
  uint64_t v3 = (void *)a1;
  id v4 = [MEMORY[0x1E4F1CA48] array];
  if (!v4)
  {
    id obj = 0;
    id v15 = 0;
    CFErrorRef v14 = 0;
    id v43 = 0;
    id v5 = 0;
LABEL_78:
    CFDictionaryRef v10 = 0;
    uint64_t v13 = 4294960568;
    goto LABEL_74;
  }
  id v5 = [MEMORY[0x1E4F1CA48] array];
  if (!v5)
  {
    id obj = 0;
    id v15 = 0;
    CFErrorRef v14 = 0;
    id v43 = 0;
    goto LABEL_78;
  }
  if (gLogCategory_SFAppleIDKeychainUtilities <= 50
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  uint64_t v6 = *MEMORY[0x1E4F3B9A0];
  uint64_t v7 = *MEMORY[0x1E4F3BB80];
  uint64_t v46 = *MEMORY[0x1E4F3B978];
  v57[0] = *MEMORY[0x1E4F3B978];
  v57[1] = v7;
  uint64_t v8 = *MEMORY[0x1E4F3BB88];
  uint64_t v45 = v6;
  v58[0] = v6;
  v58[1] = v8;
  uint64_t v9 = *MEMORY[0x1E4F3BC80];
  v57[2] = *MEMORY[0x1E4F3B550];
  v57[3] = v9;
  v58[2] = @"com.apple.sharing.appleidauthentication";
  v58[3] = MEMORY[0x1E4F1CC38];
  CFDictionaryRef v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v58 forKeys:v57 count:4];
  uint64_t v11 = SecItemCopyMatching(v10, &result);
  if (v11 == -25300)
  {
    uint64_t v12 = CFArrayCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], 0, 0, MEMORY[0x1E4F1D510]);
    CFTypeRef result = v12;
  }
  else
  {
    uint64_t v13 = v11;
    if (v11)
    {
      if (gLogCategory_SFAppleIDKeychainUtilities <= 60
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      id obj = 0;
      id v15 = 0;
      CFErrorRef v14 = 0;
      id v43 = 0;
      goto LABEL_74;
    }
    uint64_t v12 = (void *)result;
  }
  if (!v12)
  {
    id obj = 0;
    id v15 = 0;
    CFErrorRef v14 = 0;
    id v43 = 0;
    uint64_t v13 = 4294960534;
    goto LABEL_74;
  }
  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  id obj = v12;
  CFErrorRef v14 = (void *)[obj countByEnumeratingWithState:&v50 objects:v56 count:16];
  if (!v14)
  {
    id v15 = 0;
    id v43 = 0;
    goto LABEL_69;
  }
  long long v36 = v3;
  v37 = v2;
  CFDictionaryRef v38 = v10;
  uint64_t v39 = v5;
  v40 = v4;
  int v41 = 0;
  id v15 = 0;
  v44 = 0;
  id v16 = 0;
  int v42 = 0;
  id v43 = 0;
  uint64_t v17 = *(void *)v51;
  uint64_t v18 = *MEMORY[0x1E4F3BD48];
  uint64_t v19 = *MEMORY[0x1E4F3BC68];
  do
  {
    CFTypeID v20 = 0;
    do
    {
      CFTypeRef v21 = v16;
      if (*(void *)v51 != v17) {
        objc_enumerationMutation(obj);
      }
      id v16 = *(id *)(*((void *)&v50 + 1) + 8 * (void)v20);

      CFTypeRef result = v16;
      CFTypeID v22 = CFGetTypeID(v16);
      if (v22 == SecKeyGetTypeID())
      {
        CFTypeRef v23 = result;

        CFTypeRef cf = 0;
        if (v23)
        {
          v59[0] = v46;
          v59[1] = v18;
          v60[0] = v45;
          v60[1] = v23;
          v59[2] = v19;
          v60[2] = MEMORY[0x1E4F1CC38];
          CFDictionaryRef v24 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v60 forKeys:v59 count:3];
          uint64_t v25 = SecItemCopyMatching(v24, &cf);
          if (v25)
          {
            uint64_t v28 = v25;
            if (gLogCategory_SFAppleIDKeychainUtilities <= 90
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              long long v35 = (void *)v28;
              LogPrintF();
            }
            goto LABEL_61;
          }
          if (cf)
          {
            CFTypeID v26 = CFGetTypeID(cf);
            if (v26 == CFDictionaryGetTypeID())
            {
              CFDictionaryRef v27 = (id)cf;
              uint64_t v28 = 0;
              CFTypeRef cf = 0;
              goto LABEL_24;
            }
            uint64_t v28 = 4294960540;
LABEL_61:
            if (cf) {
              CFRelease(cf);
            }
            CFDictionaryRef v27 = 0;
          }
          else
          {
            CFDictionaryRef v27 = 0;
            uint64_t v28 = 4294960534;
          }
        }
        else
        {
          CFDictionaryRef v27 = 0;
          CFDictionaryRef v24 = 0;
          uint64_t v28 = 4294960591;
        }
LABEL_24:

        id v29 = v27;
        id v15 = v29;
        if (v28)
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 60
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            long long v35 = (void *)v28;
            LogPrintF();
          }
          goto LABEL_53;
        }
        if (!v29) {
          goto LABEL_53;
        }
        CFStringGetTypeID();
        int v30 = CFDictionaryGetTypedValue();

        if ([v30 length] && objc_msgSend(v30, "hasPrefix:", @"Apple ID "))
        {
          if (![v30 hasSuffix:@" private key"]) {
            goto LABEL_40;
          }

          id v49 = 0;
          uint64_t v31 = SFAppleIDCopyKeychainReferenceForKey((uint64_t)v23, &v49);
          id v43 = v49;
          int v32 = gLogCategory_SFAppleIDKeychainUtilities;
          if (v31)
          {
LABEL_42:
            if (v32 <= 60 && (v32 != -1 || _LogCategory_Initialize()))
            {
              long long v35 = (void *)v31;
              LogPrintF();
            }
          }
          else
          {
            if (gLogCategory_SFAppleIDKeychainUtilities <= 50
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              long long v35 = v30;
              LogPrintF();
            }
            objc_msgSend(v40, "addObject:", v43, v35);
            ++v42;
LABEL_40:
            if (objc_msgSend(v30, "hasSuffix:", @" public key", v35))
            {

              id v48 = 0;
              uint64_t v31 = SFAppleIDCopyKeychainReferenceForKey((uint64_t)v23, &v48);
              id v43 = v48;
              int v32 = gLogCategory_SFAppleIDKeychainUtilities;
              if (v31) {
                goto LABEL_42;
              }
              if (gLogCategory_SFAppleIDKeychainUtilities <= 50
                && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
              {
                long long v35 = v30;
                LogPrintF();
              }
              objc_msgSend(v39, "addObject:", v43, v35);
              ++v41;
            }
          }
        }
        v44 = v30;
      }
LABEL_53:
      CFTypeID v20 = (char *)v20 + 1;
    }
    while (v14 != v20);
    uint64_t v33 = [obj countByEnumeratingWithState:&v50 objects:v56 count:16];
    CFErrorRef v14 = (void *)v33;
  }
  while (v33);

  id v5 = v39;
  id v4 = v40;
  id v2 = v37;
  CFDictionaryRef v10 = v38;
  uint64_t v3 = v36;
  CFErrorRef v14 = v44;
LABEL_69:

  if (gLogCategory_SFAppleIDKeychainUtilities <= 50
    && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  id v4 = v4;
  *uint64_t v3 = v4;
  id v5 = v5;
  uint64_t v13 = 0;
  *id v2 = v5;
LABEL_74:

  return v13;
}

uint64_t SFAppleIDRemoveAllCertificatesFromKeychain(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v18 = 0;
  uint64_t v2 = SFAppleIDGetAllCertificatePersistentReferencesFromKeychain(&v18);
  id v3 = v18;
  id v4 = v3;
  if (v2)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
LABEL_18:
      LogPrintF();
    }
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v14 objects:v19 count:16];
    if (!v6)
    {

      uint64_t v2 = 0;
      goto LABEL_21;
    }
    uint64_t v7 = v6;
    int v8 = 0;
    id v9 = 0;
    uint64_t v10 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        uint64_t v12 = v9;
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v5);
        }
        id v9 = *(id *)(*((void *)&v14 + 1) + 8 * i);

        uint64_t v2 = SFAppleIDRemoveCertificateFromKeychain(v1, v9);
        if (v2)
        {
          if (gLogCategory_SFAppleIDKeychainUtilities <= 60
            && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          ++v8;
        }
      }
      uint64_t v7 = [v5 countByEnumeratingWithState:&v14 objects:v19 count:16];
    }
    while (v7);

    if (v8
      && gLogCategory_SFAppleIDKeychainUtilities <= 50
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_18;
    }
  }
LABEL_21:

  return v2;
}

uint64_t SFAppleIDRemoveAllKeysFromKeychain(void *a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v31 = 0;
  id v32 = 0;
  uint64_t v2 = SFAppleIDGetAllKeyPersistentReferencesFromKeychain((unint64_t)&v32, (unint64_t)&v31);
  id v3 = v32;
  id v4 = v31;
  if (v2)
  {
    if (gLogCategory_SFAppleIDKeychainUtilities <= 60
      && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v27 objects:v34 count:16];
    id v22 = v4;
    if (v6)
    {
      uint64_t v7 = v6;
      int v8 = 0;
      id v9 = 0;
      uint64_t v10 = *(void *)v28;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = v9;
          if (*(void *)v28 != v10) {
            objc_enumerationMutation(v5);
          }
          id v9 = *(id *)(*((void *)&v27 + 1) + 8 * i);

          uint64_t v2 = SFAppleIDRemoveKeyFromKeychain(v1, v9);
          if (v2)
          {
            if (gLogCategory_SFAppleIDKeychainUtilities <= 60
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
          }
          else
          {
            ++v8;
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v27 objects:v34 count:16];
      }
      while (v7);

      if (v8
        && gLogCategory_SFAppleIDKeychainUtilities <= 50
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      id v4 = v22;
    }
    else
    {

      uint64_t v2 = 0;
    }
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v13 = v4;
    uint64_t v14 = [v13 countByEnumeratingWithState:&v23 objects:v33 count:16];
    if (v14)
    {
      uint64_t v15 = v14;
      int v16 = 0;
      id v17 = 0;
      uint64_t v18 = *(void *)v24;
      do
      {
        for (uint64_t j = 0; j != v15; ++j)
        {
          uint64_t v20 = v17;
          if (*(void *)v24 != v18) {
            objc_enumerationMutation(v13);
          }
          id v17 = *(id *)(*((void *)&v23 + 1) + 8 * j);

          uint64_t v2 = SFAppleIDRemoveKeyFromKeychain(v1, v17);
          if (v2)
          {
            if (gLogCategory_SFAppleIDKeychainUtilities <= 60
              && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
          }
          else
          {
            ++v16;
          }
        }
        uint64_t v15 = [v13 countByEnumeratingWithState:&v23 objects:v33 count:16];
      }
      while (v15);

      if (v16
        && gLogCategory_SFAppleIDKeychainUtilities <= 50
        && (gLogCategory_SFAppleIDKeychainUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      id v4 = v22;
    }
    else
    {
    }
  }

  return v2;
}

__CFString *SFAirDropTransferStateToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8) {
    return @"Unknown";
  }
  else {
    return off_1E5BBBCC8[a1 - 1];
  }
}

void sub_1A53A181C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location,os_activity_scope_state_s state)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void NetworkNode::NetworkNode(NetworkNode *this, const __CFString *a2, const __CFString *a3)
{
  *((void *)this + 10) = 0;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  *((void *)this + 11) = CFStringCreateCopy(0, a2);
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((void *)this + 32) = CFStringCreateCopy(0, a3);
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *((void *)this + 41) = 0;
  *((void *)this + 42) = CFSetCreateMutable(0, 0, &kSharingFastSetCallBacks);
  *((void *)this + 43) = 0;
  *((void *)this + 44) = 0;
  *((void *)this + 45) = 0;
  *((void *)this + 46) = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
  *(_OWORD *)((char *)this + 376) = 0u;
  *(_OWORD *)((char *)this + 392) = 0u;
  *(_OWORD *)((char *)this + 408) = 0u;
  *((_DWORD *)this + 106) = -1;
  *((void *)this + 54) = 0;
  *((_DWORD *)this + 110) = -1;
  *((void *)this + 56) = 0;
  *((_DWORD *)this + 114) = 0;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  *(_OWORD *)((char *)this + 504) = 0u;
  *((void *)this + 65) = 0;
  *((void *)this + 58) = 850045863;
}

void NetworkNode::~NetworkNode(NetworkNode *this)
{
  NetworkNode::cancelResolve(this);
  NetworkNode::cancelEject(this);
  uint64_t v2 = (const void *)*((void *)this + 34);
  if (v2) {
    CFRelease(v2);
  }
  id v3 = (const void *)*((void *)this + 32);
  if (v3) {
    CFRelease(v3);
  }
  id v4 = (const void *)*((void *)this + 22);
  if (v4) {
    CFRelease(v4);
  }
  id v5 = (const void *)*((void *)this + 23);
  if (v5) {
    CFRelease(v5);
  }
  uint64_t v6 = (const void *)*((void *)this + 38);
  if (v6) {
    CFRelease(v6);
  }
  uint64_t v7 = (const void *)*((void *)this + 40);
  if (v7) {
    CFRelease(v7);
  }
  int v8 = (const void *)*((void *)this + 11);
  if (v8) {
    CFRelease(v8);
  }
  id v9 = (const void *)*((void *)this + 9);
  if (v9) {
    CFRelease(v9);
  }
  uint64_t v10 = (const void *)*((void *)this + 24);
  if (v10) {
    CFRelease(v10);
  }
  uint64_t v11 = (const void *)*((void *)this + 20);
  if (v11) {
    CFRelease(v11);
  }
  uint64_t v12 = (const void *)*((void *)this + 35);
  if (v12) {
    CFRelease(v12);
  }
  id v13 = (const void *)*((void *)this + 25);
  if (v13) {
    CFRelease(v13);
  }
  uint64_t v14 = (const void *)*((void *)this + 10);
  if (v14) {
    CFRelease(v14);
  }
  uint64_t v15 = (const void *)*((void *)this + 46);
  if (v15) {
    CFRelease(v15);
  }
  int v16 = (const void *)*((void *)this + 42);
  if (v16) {
    CFRelease(v16);
  }
  id v17 = (const void *)*((void *)this + 47);
  if (v17) {
    CFRelease(v17);
  }
  uint64_t v18 = (const void *)*((void *)this + 33);
  if (v18) {
    CFRelease(v18);
  }
  uint64_t v19 = (const void *)*((void *)this + 12);
  if (v19) {
    CFRelease(v19);
  }
  uint64_t v20 = (const void *)*((void *)this + 43);
  if (v20) {
    CFRelease(v20);
  }
  CFTypeRef v21 = (const void *)*((void *)this + 37);
  if (v21) {
    CFRelease(v21);
  }
  id v22 = (const void *)*((void *)this + 45);
  if (v22) {
    CFRelease(v22);
  }
  long long v23 = (const void *)*((void *)this + 17);
  if (v23) {
    CFRelease(v23);
  }
  long long v24 = (const void *)*((void *)this + 29);
  if (v24) {
    CFRelease(v24);
  }
  if (*(void *)this) {
    CFRelease(*(CFTypeRef *)this);
  }
  long long v25 = (const void *)*((void *)this + 36);
  if (v25) {
    CFRelease(v25);
  }
  long long v26 = (const void *)*((void *)this + 28);
  if (v26) {
    CFRelease(v26);
  }
  long long v27 = (const void *)*((void *)this + 4);
  if (v27) {
    CFRelease(v27);
  }
  long long v28 = (const void *)*((void *)this + 5);
  if (v28) {
    CFRelease(v28);
  }
  long long v29 = (const void *)*((void *)this + 7);
  if (v29) {
    CFRelease(v29);
  }
  long long v30 = (const void *)*((void *)this + 48);
  if (v30) {
    CFRelease(v30);
  }
  id v31 = (const void *)*((void *)this + 1);
  if (v31) {
    CFRelease(v31);
  }
  id v32 = (const void *)*((void *)this + 2);
  if (v32) {
    CFRelease(v32);
  }
  uint64_t v33 = (const void *)*((void *)this + 3);
  if (v33) {
    CFRelease(v33);
  }
  long long v34 = (const void *)*((void *)this + 13);
  if (v34) {
    CFRelease(v34);
  }
  uint64_t v35 = (const void *)*((void *)this + 14);
  if (v35) {
    CFRelease(v35);
  }
  long long v36 = (const void *)*((void *)this + 18);
  if (v36) {
    CFRelease(v36);
  }
  v37 = (const void *)*((void *)this + 15);
  if (v37) {
    CFRelease(v37);
  }
  CFDictionaryRef v38 = (const void *)*((void *)this + 16);
  if (v38) {
    CFRelease(v38);
  }
  uint64_t v39 = (const void *)*((void *)this + 21);
  if (v39) {
    CFRelease(v39);
  }
  v40 = (const void *)*((void *)this + 8);
  if (v40) {
    CFRelease(v40);
  }
  int v41 = (const void *)*((void *)this + 26);
  if (v41) {
    CFRelease(v41);
  }
  int v42 = (const void *)*((void *)this + 27);
  if (v42) {
    CFRelease(v42);
  }
  id v43 = (const void *)*((void *)this + 44);
  if (v43) {
    CFRelease(v43);
  }
  v44 = (const void *)*((void *)this + 39);
  if (v44) {
    CFRelease(v44);
  }
  uint64_t v45 = (const void *)*((void *)this + 41);
  if (v45) {
    CFRelease(v45);
  }
  uint64_t v46 = (const void *)*((void *)this + 30);
  if (v46) {
    CFRelease(v46);
  }
  v47 = (const void *)*((void *)this + 31);
  if (v47) {
    CFRelease(v47);
  }
  id v48 = (const void *)*((void *)this + 19);
  if (v48) {
    CFRelease(v48);
  }
}

void NetworkNode::cancel(NetworkNode *this)
{
  NetworkNode::cancelResolve(this);

  NetworkNode::cancelEject(this);
}

void __clang_call_terminate(void *a1)
{
}

void NetworkNode::clearCache(NetworkNode *this)
{
  *((_DWORD *)this + 110) = -1;
  uint64_t v2 = (const void *)*((void *)this + 20);
  if (v2)
  {
    CFRelease(v2);
    *((void *)this + 20) = 0;
  }
  id v3 = (const void *)*((void *)this + 35);
  if (v3)
  {
    CFRelease(v3);
    *((void *)this + 35) = 0;
  }
  id v4 = (__CFArray *)*((void *)this + 46);

  CFArrayRemoveAllValues(v4);
}

CFStringRef NetworkNode::setDisplayName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 11);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = CFStringCreateCopy(0, theString);
    *((void *)this + 11) = result;
  }
  return result;
}

CFStringRef NetworkNode::setRealName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 32);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = CFStringCreateCopy(0, theString);
    *((void *)this + 32) = result;
  }
  return result;
}

CFStringRef NetworkNode::setContactIdentifier(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 30);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 30) = result;
  }
  return result;
}

CFMutableSetRef NetworkNode::setContactIdentifiers(NetworkNode *this, CFSetRef theSet)
{
  CFMutableSetRef result = (CFMutableSetRef)*((void *)this + 31);
  if (result != theSet)
  {
    if (result) {
      CFRelease(result);
    }
    CFMutableSetRef result = 0;
    if (theSet) {
      CFMutableSetRef result = CFSetCreateMutableCopy(0, 0, theSet);
    }
    *((void *)this + 31) = result;
  }
  return result;
}

CFDataRef NetworkNode::setMediaCapabilities(NetworkNode *this, CFDataRef theData)
{
  CFDataRef result = (CFDataRef)*((void *)this + 3);
  if (result != theData)
  {
    if (result) {
      CFRelease(result);
    }
    CFDataRef result = 0;
    if (theData) {
      CFDataRef result = CFDataCreateCopy(0, theData);
    }
    *((void *)this + 3) = result;
  }
  return result;
}

void NetworkNode::setModel(NetworkNode *this, CFStringRef theString)
{
  CFStringRef v3 = (const __CFString *)*((void *)this + 22);
  if (v3 != theString)
  {
    if (v3) {
      CFRelease(v3);
    }
    CFStringRef Copy = 0;
    if (theString) {
      CFStringRef Copy = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 22) = Copy;
  }

  NetworkNode::clearCache(this);
}

void NetworkNode::setModelIdentifier(NetworkNode *this, CFStringRef theString)
{
  CFStringRef v3 = (const __CFString *)*((void *)this + 23);
  if (v3 != theString)
  {
    if (v3) {
      CFRelease(v3);
    }
    CFStringRef Copy = 0;
    if (theString) {
      CFStringRef Copy = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 23) = Copy;
  }

  NetworkNode::clearCache(this);
}

void NetworkNode::setColor(NetworkNode *this, CFArrayRef theArray)
{
  CFArrayRef v3 = (CFArrayRef)*((void *)this + 38);
  if (v3 != theArray)
  {
    if (v3) {
      CFRelease(v3);
    }
    CFArrayRef Copy = 0;
    if (theArray) {
      CFArrayRef Copy = CFArrayCreateCopy(0, theArray);
    }
    *((void *)this + 38) = Copy;
  }

  NetworkNode::clearCache(this);
}

CFArrayRef NetworkNode::setSiblingNodes(NetworkNode *this, CFArrayRef theArray)
{
  CFArrayRef result = (CFArrayRef)*((void *)this + 40);
  if (result != theArray)
  {
    if (result) {
      CFRelease(result);
    }
    CFArrayRef result = 0;
    if (theArray) {
      CFArrayRef result = CFArrayCreateCopy(0, theArray);
    }
    *((void *)this + 40) = result;
  }
  return result;
}

CFStringRef NetworkNode::setParentIdentifier(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 25);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 25) = result;
  }
  return result;
}

CFStringRef NetworkNode::setDiskType(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 10);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 10) = result;
  }
  return result;
}

CFStringRef NetworkNode::setServiceName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 34);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 34) = result;
  }
  return result;
}

CFStringRef NetworkNode::setNetbiosName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 24);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 24) = result;
  }
  return result;
}

void NetworkNode::setBonjourProtocols(NetworkNode *this, CFBagRef theBag)
{
  CFBagRef v3 = (CFBagRef)*((void *)this + 47);
  if (v3 != theBag)
  {
    if (v3) {
      CFRelease(v3);
    }
    MutableCFArrayRef Copy = 0;
    if (theBag) {
      MutableCFArrayRef Copy = CFBagCreateMutableCopy(0, 0, theBag);
    }
    *((void *)this + 47) = MutableCopy;
  }

  NetworkNode::clearCache(this);
}

void NetworkNode::setKinds(NetworkNode *this, CFSetRef theSet)
{
  CFSetRef v3 = (CFSetRef)*((void *)this + 42);
  if (v3 != theSet)
  {
    if (v3) {
      CFRelease(v3);
    }
    *((void *)this + 42) = CFSetCreateMutableCopy(0, 0, theSet);
  }

  NetworkNode::clearCache(this);
}

CFStringRef NetworkNode::setSecondaryName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 33);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 33) = result;
  }
  return result;
}

CFStringRef NetworkNode::setHostName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 17);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 17) = result;
  }
  return result;
}

CFStringRef NetworkNode::setComputerName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 9);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 9) = result;
  }
  return result;
}

CFStringRef NetworkNode::setDomain(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 12);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 12) = result;
  }
  return result;
}

CFMutableSetRef NetworkNode::setDomains(NetworkNode *this, CFSetRef theSet)
{
  CFMutableSetRef result = (CFMutableSetRef)*((void *)this + 43);
  if (result != theSet)
  {
    if (result) {
      CFRelease(result);
    }
    CFMutableSetRef result = 0;
    if (theSet) {
      CFMutableSetRef result = CFSetCreateMutableCopy(0, 0, theSet);
    }
    *((void *)this + 43) = result;
  }
  return result;
}

CFStringRef NetworkNode::setWorkgroup(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 37);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 37) = result;
  }
  return result;
}

CFMutableSetRef NetworkNode::setWorkgroups(NetworkNode *this, CFSetRef theSet)
{
  CFMutableSetRef result = (CFMutableSetRef)*((void *)this + 45);
  if (result != theSet)
  {
    if (result) {
      CFRelease(result);
    }
    CFMutableSetRef result = 0;
    if (theSet) {
      CFMutableSetRef result = CFSetCreateMutableCopy(0, 0, theSet);
    }
    *((void *)this + 45) = result;
  }
  return result;
}

CFStringRef NetworkNode::setPath(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 29);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 29) = result;
  }
  return result;
}

CFTypeRef NetworkNode::setMountPoint(NetworkNode *this, CFTypeRef cf)
{
  CFTypeRef result = (CFTypeRef)*((void *)this + 1);
  if (result != cf)
  {
    if (result) {
      CFRelease(result);
    }
    if (cf) {
      CFTypeRef result = CFRetain(cf);
    }
    else {
      CFTypeRef result = 0;
    }
    *((void *)this + 1) = result;
  }
  return result;
}

uint64_t NetworkNode::setConnectionState(uint64_t result, int a2)
{
  *(_DWORD *)(result + 456) = a2;
  return result;
}

uint64_t NetworkNode::setPortNumber(uint64_t this, int a2)
{
  *(_DWORD *)(this + 424) = a2;
  return this;
}

uint64_t NetworkNode::setSelectionReason(uint64_t this, uint64_t a2)
{
  *(void *)(this + 432) = a2;
  return this;
}

CFTypeRef NetworkNode::setAccessRights(NetworkNode *this, CFTypeRef cf)
{
  CFTypeRef result = (CFTypeRef)*((void *)this + 6);
  if (result != cf)
  {
    if (result) {
      CFRelease(result);
    }
    if (cf) {
      CFTypeRef result = CFRetain(cf);
    }
    else {
      CFTypeRef result = 0;
    }
    *((void *)this + 6) = result;
  }
  return result;
}

CFTypeRef NetworkNode::setRangingData(NetworkNode *this, CFTypeRef cf)
{
  CFTypeRef result = (CFTypeRef)*((void *)this + 7);
  if (result != cf)
  {
    if (result) {
      CFRelease(result);
    }
    if (cf) {
      CFTypeRef result = CFRetain(cf);
    }
    else {
      CFTypeRef result = 0;
    }
    *((void *)this + 7) = result;
  }
  return result;
}

void NetworkNode::setURL(CFURLRef *this, CFURLRef anURL)
{
  CFURLRef v4 = *this;
  if (v4 != anURL)
  {
    if (v4) {
      CFRelease(v4);
    }
    if (anURL) {
      CFURLRef v5 = (const __CFURL *)CFRetain(anURL);
    }
    else {
      CFURLRef v5 = 0;
    }
    *this = v5;
  }
  if (anURL)
  {
    if (!this[48]) {
      this[48] = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    }
    CFStringRef v6 = CFURLCopyScheme(anURL);
    if (v6)
    {
      CFStringRef v7 = v6;
      CFDictionarySetValue(this[48], v6, anURL);
      CFRelease(v7);
    }
  }
}

CFMutableDictionaryRef NetworkNode::setURLs(NetworkNode *this, CFDictionaryRef theDict)
{
  CFMutableDictionaryRef result = (CFMutableDictionaryRef)*((void *)this + 48);
  if (result != theDict)
  {
    if (result) {
      CFRelease(result);
    }
    CFMutableDictionaryRef result = 0;
    if (theDict) {
      CFMutableDictionaryRef result = CFDictionaryCreateMutableCopy(0, 0, theDict);
    }
    *((void *)this + 48) = result;
  }
  return result;
}

CFStringRef NetworkNode::setUserName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 36);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 36) = result;
  }
  return result;
}

CFStringRef NetworkNode::setPassword(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 28);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 28) = result;
  }
  return result;
}

CFTypeRef NetworkNode::setFlags(NetworkNode *this, CFTypeRef cf)
{
  CFTypeRef result = (CFTypeRef)*((void *)this + 4);
  if (result != cf)
  {
    if (result) {
      CFRelease(result);
    }
    if (cf) {
      CFTypeRef result = CFRetain(cf);
    }
    else {
      CFTypeRef result = 0;
    }
    *((void *)this + 4) = result;
  }
  return result;
}

CFTypeRef NetworkNode::setRapportFlags(NetworkNode *this, CFTypeRef cf)
{
  CFTypeRef result = (CFTypeRef)*((void *)this + 5);
  if (result != cf)
  {
    if (result) {
      CFRelease(result);
    }
    if (cf) {
      CFTypeRef result = CFRetain(cf);
    }
    else {
      CFTypeRef result = 0;
    }
    *((void *)this + 5) = result;
  }
  return result;
}

uint64_t NetworkNode::setSupportedMedia(uint64_t this, uint64_t a2)
{
  *(void *)(this + 448) = a2;
  return this;
}

CFStringRef NetworkNode::setSharePointBrowserID(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 26);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 26) = result;
  }
  return result;
}

CFDataRef NetworkNode::setIconData(NetworkNode *this, CFDataRef theData)
{
  CFDataRef result = (CFDataRef)*((void *)this + 2);
  if (result != theData)
  {
    if (result) {
      CFRelease(result);
    }
    CFDataRef result = 0;
    if (theData) {
      CFDataRef result = CFDataCreateCopy(0, theData);
    }
    *((void *)this + 2) = result;
  }
  return result;
}

CFStringRef NetworkNode::setEmailHash(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 13);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 13) = result;
  }
  return result;
}

CFStringRef NetworkNode::setPhoneHash(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 14);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 14) = result;
  }
  return result;
}

CFStringRef NetworkNode::setIconHash(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 18);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 18) = result;
  }
  return result;
}

CFStringRef NetworkNode::setNickName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 15);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 15) = result;
  }
  return result;
}

CFStringRef NetworkNode::setFirstName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 16);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 16) = result;
  }
  return result;
}

CFStringRef NetworkNode::setLastName(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 21);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 21) = result;
  }
  return result;
}

CFTypeRef NetworkNode::setAppleID(NetworkNode *this, CFTypeRef cf)
{
  CFTypeRef result = (CFTypeRef)*((void *)this + 8);
  if (result != cf)
  {
    if (result) {
      CFRelease(result);
    }
    if (cf) {
      CFTypeRef result = CFRetain(cf);
    }
    else {
      CFTypeRef result = 0;
    }
    *((void *)this + 8) = result;
  }
  return result;
}

CFTypeRef NetworkNode::setTransportBundleID(NetworkNode *this, CFTypeRef cf)
{
  CFTypeRef result = (CFTypeRef)*((void *)this + 27);
  if (result != cf)
  {
    if (result) {
      CFRelease(result);
    }
    if (cf) {
      CFTypeRef result = CFRetain(cf);
    }
    else {
      CFTypeRef result = 0;
    }
    *((void *)this + 27) = result;
  }
  return result;
}

CFMutableSetRef NetworkNode::setHandles(NetworkNode *this, CFSetRef theSet)
{
  CFMutableSetRef result = (CFMutableSetRef)*((void *)this + 44);
  if (result != theSet)
  {
    if (result) {
      CFRelease(result);
    }
    CFMutableSetRef result = 0;
    if (theSet) {
      CFMutableSetRef result = CFSetCreateMutableCopy(0, 0, theSet);
    }
    *((void *)this + 44) = result;
  }
  return result;
}

CFStringRef NetworkNode::setIDSDeviceIdentifier(NetworkNode *this, CFStringRef theString)
{
  CFStringRef result = (CFStringRef)*((void *)this + 19);
  if (result != theString)
  {
    if (result) {
      CFRelease(result);
    }
    CFStringRef result = 0;
    if (theString) {
      CFStringRef result = CFStringCreateCopy(0, theString);
    }
    *((void *)this + 19) = result;
  }
  return result;
}

void NetworkNode::addBonjourProtocol(NetworkNode *this, const __CFString *value)
{
  Mutable = (__CFBag *)*((void *)this + 47);
  if (!Mutable)
  {
    Mutable = CFBagCreateMutable(0, 0, MEMORY[0x1E4F1D520]);
    *((void *)this + 47) = Mutable;
  }
  CFBagAddValue(Mutable, value);

  NetworkNode::clearCache(this);
}

void NetworkNode::removeBonjourProtocol(NetworkNode *this, const __CFString *a2)
{
  CFSetRef v3 = (__CFBag *)*((void *)this + 47);
  if (v3) {
    CFBagRemoveValue(v3, a2);
  }

  NetworkNode::clearCache(this);
}

void NetworkNode::addKind(CFMutableSetRef *this, const __CFString *a2)
{
  CFSetSetValue(this[42], a2);

  NetworkNode::clearCache((NetworkNode *)this);
}

void NetworkNode::removeKind(CFMutableSetRef *this, const __CFString *a2)
{
  CFSetRemoveValue(this[42], a2);

  NetworkNode::clearCache((NetworkNode *)this);
}

void NetworkNode::addDomain(NetworkNode *this, const __CFString *value)
{
  Mutable = (__CFSet *)*((void *)this + 43);
  if (!Mutable)
  {
    Mutable = CFSetCreateMutable(0, 0, MEMORY[0x1E4F1D050]);
    *((void *)this + 43) = Mutable;
  }

  CFSetSetValue(Mutable, value);
}

void NetworkNode::removeDomain(CFMutableSetRef *this, const __CFString *a2)
{
  if (!CFSetGetCount(this[43]))
  {
    CFRelease(this[43]);
    this[43] = 0;
  }
}

void NetworkNode::addWorkgroup(NetworkNode *this, const __CFString *value)
{
  Mutable = (__CFSet *)*((void *)this + 45);
  if (!Mutable)
  {
    Mutable = CFSetCreateMutable(0, 0, MEMORY[0x1E4F1D050]);
    *((void *)this + 45) = Mutable;
  }

  CFSetSetValue(Mutable, value);
}

void NetworkNode::removeWorkgroup(CFMutableSetRef *this, const __CFString *a2)
{
  if (!CFSetGetCount(this[45]))
  {
    CFRelease(this[45]);
    this[45] = 0;
  }
}

void NetworkNode::handleResolverCallBack(void (**this)(NetworkNode *, const void *, uint64_t, uint64_t, const void *), __SFOperation *a2, uint64_t a3, const __CFDictionary *a4)
{
  uint64_t valuePtr = 0;
  CFStringRef v6 = SFOperationCopyProperty((uint64_t)a2, @"Node");
  uint64_t Value = (uint64_t)CFDictionaryGetValue(a4, @"Error");
  CFNumberRef v8 = (const __CFNumber *)CFDictionaryGetValue(a4, @"Flags");
  id v9 = CFDictionaryGetValue(a4, @"Protocol");
  if (Value)
  {
    if (CFErrorGetCode((CFErrorRef)Value)) {
      uint64_t Value = 0xFFFFFFFFLL;
    }
    else {
      uint64_t Value = 0;
    }
  }
  if (v8)
  {
    CFNumberGetValue(v8, kCFNumberLongType, &valuePtr);
    uint64_t v10 = valuePtr;
  }
  else
  {
    uint64_t v10 = 0;
  }
  this[52]((NetworkNode *)this, v9, v10, Value, v6);
  CFRelease(v6);
  NetworkNode::cancelResolve((NetworkNode *)this);
}

void NetworkNode::cancelResolve(NetworkNode *this)
{
  uint64_t v2 = *((void *)this + 50);
  if (v2)
  {
    SFOperationCancel(v2);
    CFRelease(*((CFTypeRef *)this + 50));
    *((void *)this + 50) = 0;
  }
}

void NetworkNode::handleEjecterCallBack(void (**this)(NetworkNode *, const void *, uint64_t, uint64_t, const void *), __SFOperation *a2, uint64_t a3, const __CFDictionary *a4)
{
  uint64_t valuePtr = 0;
  CFStringRef v6 = SFOperationCopyProperty((uint64_t)a2, @"Node");
  uint64_t Value = (uint64_t)CFDictionaryGetValue(a4, @"Error");
  CFNumberRef v8 = (const __CFNumber *)CFDictionaryGetValue(a4, @"Flags");
  id v9 = CFDictionaryGetValue(a4, @"Protocol");
  if (Value)
  {
    if (CFErrorGetCode((CFErrorRef)Value)) {
      uint64_t Value = 0xFFFFFFFFLL;
    }
    else {
      uint64_t Value = 0;
    }
  }
  if (v8)
  {
    CFNumberGetValue(v8, kCFNumberLongType, &valuePtr);
    uint64_t v10 = valuePtr;
  }
  else
  {
    uint64_t v10 = 0;
  }
  this[51]((NetworkNode *)this, v9, v10, Value, v6);
  CFRelease(v6);
  NetworkNode::cancelEject((NetworkNode *)this);
}

void NetworkNode::cancelEject(NetworkNode *this)
{
  uint64_t v2 = *((void *)this + 49);
  if (v2)
  {
    SFOperationCancel(v2);
    CFRelease(*((CFTypeRef *)this + 49));
    *((void *)this + 49) = 0;
  }
}

uint64_t NetworkNode::resolve(uint64_t a1, const void *a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, const void *a7)
{
  uint64_t valuePtr = a3;
  if (*(void *)(a1 + 400)) {
    return 4294967293;
  }
  *(void *)(a1 + 416) = a6;
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = a1;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v16 = 0;
  id v13 = (pthread_mutex_t *)SFOperationCreate(0, @"Resolver");
  *(void *)(a1 + 400) = v13;
  SFOperationSetProperty(v13, @"RunLoop", a4);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 400), @"Protocol", a2);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 400), @"Node", a7);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 400), @"RunLoopMode", a5);
  CFNumberRef v14 = CFNumberCreate(0, kCFNumberLongType, &valuePtr);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 400), @"Flags", v14);
  SFOperationSetClient(*(void *)(a1 + 400), (uint64_t)NetworkNode::resolverOperationCallBack, &v15);
  SFOperationResume(*(void *)(a1 + 400));
  CFRelease(v14);
  return 0;
}

void NetworkNode::resolverOperationCallBack(__SFOperation *this, __SFOperation *a2, __CFDictionary *a3, void (**a4)(NetworkNode *, const void *, uint64_t, uint64_t, const void *), void *a5)
{
}

uint64_t NetworkNode::eject(uint64_t a1, const void *a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, const void *a7)
{
  uint64_t valuePtr = a3;
  if (*(void *)(a1 + 392)) {
    return 4294967293;
  }
  *(void *)(a1 + 408) = a6;
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = a1;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v16 = 0;
  id v13 = (pthread_mutex_t *)SFOperationCreate(0, @"Ejecter");
  *(void *)(a1 + 392) = v13;
  SFOperationSetProperty(v13, @"RunLoop", a4);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 392), @"Protocol", a2);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 392), @"Node", a7);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 392), @"RunLoopMode", a5);
  CFNumberRef v14 = CFNumberCreate(0, kCFNumberLongType, &valuePtr);
  SFOperationSetProperty(*(pthread_mutex_t **)(a1 + 392), @"Flags", v14);
  SFOperationSetClient(*(void *)(a1 + 392), (uint64_t)NetworkNode::ejecterOperationCallBack, &v15);
  SFOperationResume(*(void *)(a1 + 392));
  CFRelease(v14);
  return 0;
}

void NetworkNode::ejecterOperationCallBack(__SFOperation *this, __SFOperation *a2, __CFDictionary *a3, void (**a4)(NetworkNode *, const void *, uint64_t, uint64_t, const void *), void *a5)
{
}

uint64_t NetworkNode::isRoot(CFSetRef *this)
{
  return CFSetContainsValue(this[42], @"Root");
}

BOOL NetworkNode::isNeighborhood(CFSetRef *this)
{
  return CFSetContainsValue(this[42], @"Domain")
      || CFSetContainsValue(this[42], @"Workgroup")
      || CFSetContainsValue(this[42], @"Root") != 0;
}

BOOL NetworkNode::isServer(CFSetRef *this)
{
  return CFSetContainsValue(this[42], @"Windows")
      || CFSetContainsValue(this[42], @"Bonjour")
      || CFSetContainsValue(this[42], @"Classroom")
      || CFSetContainsValue(this[42], @"Connected")
      || CFSetContainsValue(this[42], @"Recent")
      || CFSetContainsValue(this[42], @"Managed") != 0;
}

BOOL NetworkNode::isSharePoint(CFSetRef *this)
{
  return CFSetContainsValue(this[42], @"Printer") || CFSetContainsValue(this[42], @"Volume") != 0;
}

BOOL NetworkNode::isContainer(CFSetRef *this)
{
  return NetworkNode::isServer(this) || NetworkNode::isNeighborhood(this);
}

BOOL NetworkNode::isMounted(NetworkNode *this)
{
  return *((void *)this + 1) || CFSetContainsValue(*((CFSetRef *)this + 42), @"Connected") != 0;
}

const __CFNumber *NetworkNode::isDropBox(NetworkNode *this)
{
  CFNumberRef result = (const __CFNumber *)*((void *)this + 6);
  if (result)
  {
    int valuePtr = 0;
    return (const __CFNumber *)(CFNumberGetValue(result, kCFNumberSInt32Type, &valuePtr) && (valuePtr & 7) == 3);
  }
  return result;
}

uint64_t NetworkNode::isRemovable(CFSetRef *this)
{
  uint64_t result = CFSetContainsValue(this[42], @"Recent");
  if (result) {
    return CFSetContainsValue(this[42], @"Connected") == 0;
  }
  return result;
}

uint64_t NetworkNode::isAirPortDisk(CFSetRef *this)
{
  return CFSetContainsValue(this[42], @"ADisk");
}

CFIndex NetworkNode::supportsFileSharing(CFSetRef *this)
{
  CFArrayRef Protocols = NetworkNode::getProtocols(this);
  CFIndex result = CFArrayGetCount(Protocols);
  if (result)
  {
    if (result == 1)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(Protocols, 0);
      return CFEqual(ValueAtIndex, @"vnc") == 0;
    }
    else
    {
      return 1;
    }
  }
  return result;
}

CFSetRef NetworkNode::getProtocols(CFSetRef *this)
{
  if (!CFArrayGetCount(this[46]))
  {
    if (!CFSetContainsValue(this[42], @"Bonjour")
      || (CFBagRef v2 = this[47]) == 0
      || (Mutable = createMutableSetFromBag(0, 0, v2)) == 0)
    {
      Mutable = CFSetCreateMutable(0, 0, MEMORY[0x1E4F1D548]);
    }
    if (CFSetContainsValue(this[42], @"Windows")) {
      CFSetSetValue(Mutable, @"smb");
    }
    if (CFSetContainsValue(this[42], @"ODisk")) {
      CFSetSetValue(Mutable, @"odisk");
    }
    if ((CFSetContainsValue(this[42], @"Volume")
       || CFSetContainsValue(this[42], @"Printer")
       || CFSetContainsValue(this[42], @"Recent")
       || CFSetContainsValue(this[42], @"Connected")
       || CFSetContainsValue(this[42], @"Managed"))
      && *this)
    {
      CFStringRef v4 = CFURLCopyScheme(*this);
      CFSetSetValue(Mutable, v4);
      CFRelease(v4);
    }
    CFArrayRef v5 = copyValuesFromSet(0, Mutable);
    if (v5)
    {
      CFArrayRef v6 = v5;
      CFIndex Count = CFArrayGetCount(v5);
      v10.location = 0;
      v10.length = Count;
      CFArrayAppendArray(this[46], v6, v10);
      v9.location = 0;
      v9.length = Count;
      CFArraySortValues(this[46], v9, (CFComparatorFunction)NetworkNode::sortProtocols, this);
      NetworkNode::preferSMB2WhenAvailable(this);
      CFRelease(v6);
    }
    CFRelease(Mutable);
  }
  return this[46];
}

uint64_t NetworkNode::supportsScreenSharing(CFSetRef *this)
{
  CFArrayRef Protocols = NetworkNode::getProtocols(this);
  v2.length = CFArrayGetCount(Protocols);
  v2.location = 0;

  return CFArrayContainsValue(Protocols, v2, @"vnc");
}

const __CFNumber *NetworkNode::supportsAskToUse(NetworkNode *this)
{
  unsigned int valuePtr = 0;
  CFNumberRef result = (const __CFNumber *)*((void *)this + 4);
  if (result)
  {
    CFNumberRef result = (const __CFNumber *)CFNumberGetValue(result, kCFNumberSInt32Type, &valuePtr);
    if (result) {
      return (const __CFNumber *)((valuePtr >> 9) & 1);
    }
  }
  return result;
}

const __CFNumber *NetworkNode::supportsPasses(NetworkNode *this)
{
  int valuePtr = 0;
  CFNumberRef result = (const __CFNumber *)*((void *)this + 4);
  if (result)
  {
    CFNumberRef result = (const __CFNumber *)CFNumberGetValue(result, kCFNumberSInt32Type, &valuePtr);
    if (result) {
      return (const __CFNumber *)((valuePtr >> 4) & 1);
    }
  }
  return result;
}

BOOL NetworkNode::supportsFMF(NetworkNode *this)
{
  int valuePtr = 0;
  CFNumberRef v2 = (const __CFNumber *)*((void *)this + 4);
  if (v2)
  {
    if (CFNumberGetValue(v2, kCFNumberSInt32Type, &valuePtr))
    {
      if ((valuePtr & 0x20) != 0) {
        return 1;
      }
    }
    else
    {
      int valuePtr = 0;
    }
  }
  return NetworkNode::supportsMixedTypes(this) == 0;
}

const __CFNumber *NetworkNode::supportsMixedTypes(NetworkNode *this)
{
  int valuePtr = 0;
  CFNumberRef result = (const __CFNumber *)*((void *)this + 4);
  if (result)
  {
    CFNumberRef result = (const __CFNumber *)CFNumberGetValue(result, kCFNumberSInt32Type, &valuePtr);
    if (result) {
      return (const __CFNumber *)((valuePtr >> 3) & 1);
    }
  }
  return result;
}

const __CFNumber *NetworkNode::supportsUWB(NetworkNode *this)
{
  unsigned int valuePtr = 0;
  CFNumberRef result = (const __CFNumber *)*((void *)this + 4);
  if (result)
  {
    CFNumberRef result = (const __CFNumber *)CFNumberGetValue(result, kCFNumberSInt32Type, &valuePtr);
    if (result) {
      return (const __CFNumber *)((valuePtr >> 10) & 1);
    }
  }
  return result;
}

BOOL NetworkNode::supportsIris(NetworkNode *this)
{
  int valuePtr = 0;
  CFNumberRef v2 = (const __CFNumber *)*((void *)this + 4);
  if (v2)
  {
    if (CFNumberGetValue(v2, kCFNumberSInt32Type, &valuePtr))
    {
      if ((valuePtr & 0x40) != 0) {
        return 1;
      }
    }
    else
    {
      int valuePtr = 0;
    }
  }
  return NetworkNode::supportsMixedTypes(this) == 0;
}

const __CFNumber *NetworkNode::supportsCredentials(NetworkNode *this)
{
  int valuePtr = 0;
  CFNumberRef result = (const __CFNumber *)*((void *)this + 4);
  if (result)
  {
    CFNumberRef result = (const __CFNumber *)CFNumberGetValue(result, kCFNumberSInt32Type, &valuePtr);
    if (result) {
      return (const __CFNumber *)(BYTE1(valuePtr) & 1);
    }
  }
  return result;
}

BOOL NetworkNode::canAcceptDrop(NetworkNode *this)
{
  return *((void *)this + 47) && MEMORY[0x1A626A630]()
      || CFSetContainsValue(*((CFSetRef *)this + 42), @"Classroom") != 0;
}

BOOL NetworkNode::sortProtocols(NetworkNode *this, const void *a2, const void *a3, void *a4)
{
  OrderedCFArrayRef Protocols = (const __CFArray *)getOrderedProtocols();
  CFIndex Count = CFArrayGetCount(OrderedProtocols);
  v10.location = 0;
  v10.length = Count;
  FirstIndexOfuint64_t Value = CFArrayGetFirstIndexOfValue(OrderedProtocols, v10, this);
  v11.location = 0;
  v11.length = Count;
  return FirstIndexOfValue > CFArrayGetFirstIndexOfValue(OrderedProtocols, v11, a2);
}

void NetworkNode::preferSMB2WhenAvailable(CFArrayRef *this)
{
  if (CFArrayGetCount(this[46]) >= 2)
  {
    ValueAtIndex = CFArrayGetValueAtIndex(this[46], 0);
    CFSetRef v3 = CFArrayGetValueAtIndex(this[46], 1);
    if (CFEqual(ValueAtIndex, @"afp"))
    {
      if (CFEqual(v3, @"smb"))
      {
        int valuePtr = 0;
        CFNumberRef v4 = this[4];
        if (v4)
        {
          if (CFNumberGetValue(v4, kCFNumberSInt32Type, &valuePtr))
          {
            if (valuePtr >= 13)
            {
              CFArraySetValueAtIndex(this[46], 0, @"smb");
              CFArraySetValueAtIndex(this[46], 1, @"afp");
            }
          }
        }
      }
    }
  }
}

CFStringRef NetworkNode::loadCurrentInfo(NetworkNode *this)
{
  CFNumberRef v2 = (const void *)*((void *)this + 35);
  if (v2) {
    CFRelease(v2);
  }
  CFSetRef v3 = (const void *)*((void *)this + 20);
  if (v3) {
    CFRelease(v3);
  }
  uint64_t v4 = *((void *)this + 22);
  if (v4)
  {
    CFStringRef v5 = (const __CFString *)SFCopyTypeIdentifierForColorArrayAndModelCode(*((const __CFArray **)this + 38), v4);
    *((void *)this + 35) = v5;
    if (v5)
    {
      CFArrayRef v6 = @"Mac";
      if (!UTTypeConformsTo(v5, @"com.apple.mac"))
      {
        if (UTTypeConformsTo(*((CFStringRef *)this + 35), @"com.apple.time-capsule"))
        {
          CFArrayRef v6 = @"Time Capsule";
        }
        else if (UTTypeConformsTo(*((CFStringRef *)this + 35), @"com.apple.airport"))
        {
          CFArrayRef v6 = @"AirPort Extreme";
        }
        else if (UTTypeConformsTo(*((CFStringRef *)this + 35), @"public.generic-pc"))
        {
          CFArrayRef v6 = @"PC";
        }
        else if (UTTypeConformsTo(*((CFStringRef *)this + 35), @"com.apple.ipod"))
        {
          CFArrayRef v6 = @"iPod";
        }
        else if (UTTypeConformsTo(*((CFStringRef *)this + 35), @"com.apple.ipad"))
        {
          CFArrayRef v6 = @"iPad";
        }
        else if (UTTypeConformsTo(*((CFStringRef *)this + 35), @"com.apple.iphone"))
        {
          CFArrayRef v6 = @"iPhone";
        }
        else if (UTTypeConformsTo(*((CFStringRef *)this + 35), @"com.apple.appletv"))
        {
          CFArrayRef v6 = @"Apple TV";
        }
      }
    }
    else
    {
      *((void *)this + 35) = CFStringCreateCopy(0, @"com.apple.mac");
      CFArrayRef v6 = @"Mac";
    }
    CFStringRef v13 = v6;
    goto LABEL_19;
  }
  int v7 = CFSetContainsValue(*((CFSetRef *)this + 42), @"Bonjour");
  CFSetRef v8 = (const __CFSet *)*((void *)this + 42);
  if (!v7)
  {
    if (CFSetContainsValue(v8, @"Windows"))
    {
      *((void *)this + 20) = copyLocalizedStringForKey(@"PC");
      CFStringRef v14 = @"public.generic-pc";
LABEL_24:
      CFStringRef result = CFStringCreateCopy(0, v14);
      *((void *)this + 35) = result;
      goto LABEL_20;
    }
    if (CFSetContainsValue(*((CFSetRef *)this + 42), @"AirDrop"))
    {
      *((void *)this + 35) = CFStringCreateCopy(0, @"com.apple.airdrop");
      CFStringRef v15 = @"AirDrop";
      goto LABEL_30;
    }
    BOOL isNeighborhood = NetworkNode::isNeighborhood((CFSetRef *)this);
    CFSetRef v17 = (const __CFSet *)*((void *)this + 42);
    if (isNeighborhood)
    {
      if (!CFSetContainsValue(v17, @"Root") || !CFEqual(*((CFTypeRef *)this + 32), @"Remote Disc"))
      {
        *((void *)this + 20) = copyLocalizedStringForKey(@"Neighborhood");
        CFStringRef result = CFStringCreateCopy(0, @"com.apple.network-neighborhood");
        *((void *)this + 35) = result;
        int v12 = 10;
        goto LABEL_21;
      }
      *((void *)this + 20) = copyLocalizedStringForKey(@"Volume");
      CFStringRef result = CFStringCreateCopy(0, @"public.optical-storage-media");
      *((void *)this + 35) = result;
    }
    else
    {
      if (!CFSetContainsValue(v17, @"ODisk"))
      {
        if (CFSetContainsValue(*((CFSetRef *)this + 42), @"Volume")
          || CFSetContainsValue(*((CFSetRef *)this + 42), @"Printer"))
        {
          if (NetworkNode::isDropBox(this)) {
            CFStringRef v19 = @"com.apple.drop-folder";
          }
          else {
            CFStringRef v19 = @"public.file-sharepoint";
          }
          *((void *)this + 35) = CFStringCreateCopy(0, v19);
          CFStringRef result = copyLocalizedStringForKey(@"Sharepoint");
          *((void *)this + 20) = result;
          int v12 = 30;
          goto LABEL_21;
        }
        if (!CFSetContainsValue(*((CFSetRef *)this + 42), @"All"))
        {
          *((void *)this + 20) = copyLocalizedStringForKey(@"Server");
          CFStringRef v14 = @"com.apple.mac";
          goto LABEL_24;
        }
        *((void *)this + 35) = CFStringCreateCopy(0, @"com.apple.network-neighborhood");
        CFStringRef v15 = @"Neighborhood";
LABEL_30:
        CFStringRef result = copyLocalizedStringForKey(v15);
        *((void *)this + 20) = result;
        int v12 = 99;
        goto LABEL_21;
      }
      if (*((void *)this + 10)) {
        CFStringRef v18 = (const __CFString *)*((void *)this + 10);
      }
      else {
        CFStringRef v18 = @"public.optical-storage-media";
      }
      *((void *)this + 35) = CFStringCreateCopy(0, v18);
      CFStringRef result = copyLocalizedStringForKey(@"Remote Disc");
      *((void *)this + 20) = result;
    }
    int v12 = 25;
    goto LABEL_21;
  }
  if (!CFSetContainsValue(v8, @"Person"))
  {
    *((void *)this + 35) = CFStringCreateCopy(0, @"com.apple.mac");
    CFStringRef v13 = @"Mac";
LABEL_19:
    CFStringRef result = copyLocalizedStringForKey(v13);
    *((void *)this + 20) = result;
LABEL_20:
    int v12 = 20;
    goto LABEL_21;
  }
  int v9 = CFSetContainsValue(*((CFSetRef *)this + 42), @"Me");
  int v10 = CFSetContainsValue(*((CFSetRef *)this + 42), @"Unknown");
  *((void *)this + 35) = CFStringCreateCopy(0, @"com.apple.user");
  CFStringRef result = copyLocalizedStringForKey(@"User");
  *((void *)this + 20) = result;
  if (v10) {
    int v12 = 45;
  }
  else {
    int v12 = 40;
  }
  if (v9) {
    int v12 = 35;
  }
LABEL_21:
  *((_DWORD *)this + 110) = v12;
  return result;
}

uint64_t NetworkNode::getKindString(NetworkNode *this)
{
  uint64_t result = *((void *)this + 20);
  if (!result)
  {
    NetworkNode::loadCurrentInfo(this);
    return *((void *)this + 20);
  }
  return result;
}

uint64_t NetworkNode::getTypeIdentifier(NetworkNode *this)
{
  uint64_t result = *((void *)this + 35);
  if (!result)
  {
    NetworkNode::loadCurrentInfo(this);
    return *((void *)this + 35);
  }
  return result;
}

uint64_t NetworkNode::getPriority(NetworkNode *this)
{
  uint64_t result = *((unsigned int *)this + 110);
  if (result == -1)
  {
    NetworkNode::loadCurrentInfo(this);
    return *((unsigned int *)this + 110);
  }
  return result;
}

CFStringRef NetworkNode::copyDisplayName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 11);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyRealName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 32);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyContactIdentifier(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 30);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFSetRef NetworkNode::copyContactIdentifiers(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFSetRef v3 = (const __CFSet *)*((void *)this + 31);
  if (v3) {
    CFSetRef Copy = CFSetCreateCopy(0, v3);
  }
  else {
    CFSetRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyModel(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 22);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyModelIdentifier(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 23);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFArrayRef NetworkNode::copyColor(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFArrayRef v3 = (const __CFArray *)*((void *)this + 38);
  if (v3) {
    CFArrayRef Copy = CFArrayCreateCopy(0, v3);
  }
  else {
    CFArrayRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFArrayRef NetworkNode::copySiblingNodes(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFArrayRef v3 = (const __CFArray *)*((void *)this + 40);
  if (v3) {
    CFArrayRef Copy = CFArrayCreateCopy(0, v3);
  }
  else {
    CFArrayRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyParentIdentifier(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 25);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyDiskType(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 10);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyServiceName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 34);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyNetbiosName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 24);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyHostName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 17);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyComputerName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 9);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copySecondaryName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 33);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyDomain(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 12);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFSetRef NetworkNode::copyDomains(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFSetRef v3 = (const __CFSet *)*((void *)this + 43);
  if (v3) {
    CFSetRef Copy = CFSetCreateCopy(0, v3);
  }
  else {
    CFSetRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyWorkgroup(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 37);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFSetRef NetworkNode::copyWorkgroups(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFSetRef v3 = (const __CFSet *)*((void *)this + 45);
  if (v3) {
    CFSetRef Copy = CFSetCreateCopy(0, v3);
  }
  else {
    CFSetRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFBagRef NetworkNode::copyBonjourProtocols(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFBagRef v3 = (const __CFBag *)*((void *)this + 47);
  if (v3) {
    CFBagRef Copy = CFBagCreateCopy(0, v3);
  }
  else {
    CFBagRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFSetRef NetworkNode::copyKinds(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFSetRef v3 = (const __CFSet *)*((void *)this + 42);
  if (v3) {
    CFSetRef Copy = CFSetCreateCopy(0, v3);
  }
  else {
    CFSetRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyPath(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 29);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFTypeRef NetworkNode::copyAccessRights(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const void *)*((void *)this + 6);
  if (v3) {
    CFTypeRef v4 = CFRetain(v3);
  }
  else {
    CFTypeRef v4 = 0;
  }
  pthread_mutex_unlock(v2);
  return v4;
}

CFTypeRef NetworkNode::copyRangingData(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const void *)*((void *)this + 7);
  if (v3) {
    CFTypeRef v4 = CFRetain(v3);
  }
  else {
    CFTypeRef v4 = 0;
  }
  pthread_mutex_unlock(v2);
  return v4;
}

void *NetworkNode::copyURL(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  if (*(void *)this)
  {
    URL = (void *)CFRetain(*(CFTypeRef *)this);
  }
  else
  {
    if (NetworkNode::isNeighborhood((CFSetRef *)this))
    {
      CFStringRef v4 = CFStringCreateWithFormat(0, 0, @"domain-%@", *((void *)this + 32));
    }
    else
    {
      if (!NetworkNode::isServer((CFSetRef *)this) && !NetworkNode::isSharePoint((CFSetRef *)this))
      {
        URL = 0;
        goto LABEL_12;
      }
      CFStringRef v4 = CFStringCreateWithFormat(0, 0, @"server-%@", *((void *)this + 32));
    }
    CFStringRef v5 = (__CFString *)v4;
    int v6 = *((_DWORD *)this + 106);
    if (NetworkNode::isSharePoint((CFSetRef *)this)) {
      CFStringRef v7 = (const __CFString *)*((void *)this + 29);
    }
    else {
      CFStringRef v7 = 0;
    }
    BOOL isNeighborhood = NetworkNode::isNeighborhood((CFSetRef *)this);
    URL = createURL(@"nwnode", 0, 0, v5, v6, v7, 0, isNeighborhood);
    CFRelease(v5);
  }
LABEL_12:
  pthread_mutex_unlock(v2);
  return URL;
}

CFDictionaryRef NetworkNode::copyURLs(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFDictionaryRef v3 = (const __CFDictionary *)*((void *)this + 48);
  if (v3) {
    CFDictionaryRef Copy = CFDictionaryCreateCopy(0, v3);
  }
  else {
    CFDictionaryRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

const void *NetworkNode::copyURLForProtocol(NetworkNode *this, const __CFString *a2)
{
  CFStringRef v4 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFDictionaryRef v5 = (const __CFDictionary *)*((void *)this + 48);
  if (v5)
  {
    uint64_t Value = CFDictionaryGetValue(v5, a2);
    CFStringRef v7 = Value;
    if (Value) {
      CFRetain(Value);
    }
  }
  else
  {
    CFStringRef v7 = 0;
  }
  pthread_mutex_unlock(v4);
  return v7;
}

CFStringRef NetworkNode::copyUserName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 36);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyPassword(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 28);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFTypeRef NetworkNode::copyFlags(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const void *)*((void *)this + 4);
  if (v3) {
    CFTypeRef v4 = CFRetain(v3);
  }
  else {
    CFTypeRef v4 = 0;
  }
  pthread_mutex_unlock(v2);
  return v4;
}

CFTypeRef NetworkNode::copyRapportFlags(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const void *)*((void *)this + 5);
  if (v3) {
    CFTypeRef v4 = CFRetain(v3);
  }
  else {
    CFTypeRef v4 = 0;
  }
  pthread_mutex_unlock(v2);
  return v4;
}

CFTypeRef NetworkNode::copyMountPoint(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const void *)*((void *)this + 1);
  if (v3) {
    CFTypeRef v4 = CFRetain(v3);
  }
  else {
    CFTypeRef v4 = 0;
  }
  pthread_mutex_unlock(v2);
  return v4;
}

CFStringRef NetworkNode::copyKindString(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 20);
  if (!v3)
  {
    NetworkNode::loadCurrentInfo(this);
    CFStringRef v3 = (const __CFString *)*((void *)this + 20);
  }
  CFStringRef Copy = CFStringCreateCopy(0, v3);
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyTypeIdentifier(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 35);
  if (!v3)
  {
    NetworkNode::loadCurrentInfo(this);
    CFStringRef v3 = (const __CFString *)*((void *)this + 35);
  }
  CFStringRef Copy = CFStringCreateCopy(0, v3);
  pthread_mutex_unlock(v2);
  return Copy;
}

CFArrayRef NetworkNode::copyProtocols(CFSetRef *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)(this + 58);
  pthread_mutex_lock((pthread_mutex_t *)(this + 58));
  CFArrayRef Protocols = NetworkNode::getProtocols(this);
  CFArrayRef Copy = CFArrayCreateCopy(0, Protocols);
  pthread_mutex_unlock(v2);
  return Copy;
}

CFDataRef NetworkNode::copyIconData(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFDataRef v3 = (const __CFData *)*((void *)this + 2);
  if (v3) {
    CFDataRef Copy = CFDataCreateCopy(0, v3);
  }
  else {
    CFDataRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFDataRef NetworkNode::copyMediaCapabilities(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFDataRef v3 = (const __CFData *)*((void *)this + 3);
  if (v3) {
    CFDataRef Copy = CFDataCreateCopy(0, v3);
  }
  else {
    CFDataRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyEmailHash(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 13);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyPhoneHash(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 14);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyIconHash(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 18);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyNickName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 15);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyFirstName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 16);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyLastName(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 21);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyAppleID(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 8);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyTransportBundleID(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 27);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFSetRef NetworkNode::copyHandles(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFSetRef v3 = (const __CFSet *)*((void *)this + 44);
  if (v3) {
    CFSetRef Copy = CFSetCreateCopy(0, v3);
  }
  else {
    CFSetRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copySharePointBrowserID(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 26);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

CFStringRef NetworkNode::copyIDSDeviceIdentifier(NetworkNode *this)
{
  CFNumberRef v2 = (pthread_mutex_t *)((char *)this + 464);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 464));
  CFStringRef v3 = (const __CFString *)*((void *)this + 19);
  if (v3) {
    CFStringRef Copy = CFStringCreateCopy(0, v3);
  }
  else {
    CFStringRef Copy = 0;
  }
  pthread_mutex_unlock(v2);
  return Copy;
}

uint64_t SFBrowserGetTypeID()
{
  if (SFBrowserGetTypeID_once != -1) {
    dispatch_once(&SFBrowserGetTypeID_once, &__block_literal_global);
  }
  return _kSFBrowserTypeID;
}

void *__SFBrowserGetTypeID_block_invoke()
{
  uint64_t result = malloc_type_calloc(1uLL, 0x60uLL, 0x10D00408820D60FuLL);
  _kSFBrowserClass = (uint64_t)result;
  if (result)
  {
    *uint64_t result = 0;
    result[1] = "SFBrowser";
    void result[4] = _SFBrowserFinalize;
    result[5] = _SFBrowserEqual;
    result[6] = _SFBrowserHash;
    result[8] = _SFBrowserCopyDebugDesc;
    uint64_t result = (void *)_CFRuntimeRegisterClass();
    _kSFBrowserCFTypeID TypeID = (uint64_t)result;
  }
  return result;
}

uint64_t SFBrowserCreate(const __CFAllocator *a1, const void *a2)
{
  CFTypeRef v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserCreate_cold_1();
  }
  if (SFBrowserGetTypeID_once != -1) {
    dispatch_once(&SFBrowserGetTypeID_once, &__block_literal_global);
  }
  if (!_kSFBrowserTypeID) {
    return 0;
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  uint64_t v6 = Instance;
  if (Instance)
  {
    *(_OWORD *)(Instance + 192) = 0u;
    *(_OWORD *)(Instance + 208) = 0u;
    *(_OWORD *)(Instance + 160) = 0u;
    *(_OWORD *)(Instance + 176) = 0u;
    *(_OWORD *)(Instance + 128) = 0u;
    *(_OWORD *)(Instance + 144) = 0u;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 112) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    pthread_mutex_init((pthread_mutex_t *)(Instance + 88), 0);
    *(void *)(v6 + 56) = CFRetain(a2);
    if (CFEqual(a2, @"Network"))
    {
      CFStringRef v7 = copyLocalizedStringForKey(@"Network");
      uint64_t v8 = SFNodeCreate();
      SFNodeAddKind(v8, @"Domain");
      int v9 = kSFNodeKindWorkgroup;
    }
    else
    {
      if (!CFEqual(a2, @"AirDrop"))
      {
        if (!CFEqual(a2, @"Remote Disc"))
        {
          if (!CFEqual(a2, @"Printer"))
          {
            uint64_t v8 = 0;
            goto LABEL_17;
          }
          uint64_t v8 = SFNodeCreate();
          if (!v8) {
            goto LABEL_17;
          }
LABEL_16:
          SFNodeAddKind(v8, @"Root");
LABEL_17:
          *(void *)(v6 + 208) = v8;
          int v12 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E4F1D530];
          CFStringRef v13 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E4F1D540];
          *(void *)(v6 + 48) = CFDictionaryCreateMutable(a1, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
          *(void *)(v6 + 40) = CFDictionaryCreateMutable(a1, 0, v12, v13);
          *(void *)(v6 + 32) = CFDictionaryCreateMutable(a1, 0, v12, v13);
          CFDictionarySetValue(*(CFMutableDictionaryRef *)(v6 + 40), *(const void **)(v6 + 208), *(const void **)(v6 + 208));
          return v6;
        }
        CFStringRef v7 = copyLocalizedStringForKey(@"Remote Disc");
        uint64_t v11 = SFNodeCreate();
        uint64_t v8 = v11;
        CFStringRef v10 = @"Domain";
LABEL_13:
        SFNodeAddKind(v11, v10);
        SFNodeAddDomain(v8, @"local");
        if (v7) {
          CFRelease(v7);
        }
        if (!v8) {
          goto LABEL_17;
        }
        goto LABEL_16;
      }
      CFStringRef v7 = copyLocalizedStringForKey(@"AirDrop");
      uint64_t v8 = SFNodeCreate();
      SFNodeAddKind(v8, @"Domain");
      int v9 = kSFNodeKindAirDrop;
    }
    CFStringRef v10 = *v9;
    uint64_t v11 = v8;
    goto LABEL_13;
  }
  return v6;
}

uint64_t SFBrowserSetClient(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = browser_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    int v12 = 134218496;
    uint64_t v13 = a1;
    __int16 v14 = 2048;
    uint64_t v15 = a2;
    __int16 v16 = 2048;
    CFSetRef v17 = a3;
    _os_log_debug_impl(&dword_1A5389000, v6, OS_LOG_TYPE_DEBUG, "SFBrowserSetClient (browser = %p, callback = %p, context = %p)", (uint8_t *)&v12, 0x20u);
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if (*(void *)(a1 + 168))
  {
    CFStringRef v7 = *(void (**)(void))(a1 + 184);
    if (v7) {
      v7();
    }
  }
  *(void *)(a1 + 152) = a2;
  long long v8 = *a3;
  long long v9 = a3[1];
  *(void *)(a1 + 192) = *((void *)a3 + 4);
  *(_OWORD *)(a1 + 160) = v8;
  *(_OWORD *)(a1 + 176) = v9;
  if (*(void *)(a1 + 168))
  {
    CFStringRef v10 = *(uint64_t (**)(void))(a1 + 176);
    if (v10) {
      *(void *)(a1 + 168) = v10();
    }
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
}

uint64_t SFBrowserSetDispatchQueue(uint64_t a1, NSObject *a2)
{
  CFTypeRef v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserSetDispatchQueue_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  CFDictionaryRef v5 = *(NSObject **)(a1 + 80);
  if (v5 != a2)
  {
    if (v5) {
      dispatch_release(v5);
    }
    if (a2) {
      dispatch_retain(a2);
    }
    *(void *)(a1 + 80) = a2;
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
}

uint64_t SFBrowserSetMode(uint64_t a1, uint64_t a2)
{
  CFTypeRef v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserSetMode_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if (*(void *)(a1 + 216)
    || (uint64_t Connection = _SFBrowserCreateConnection(a1), (*(void *)(a1 + 216) = Connection) != 0))
  {
    uint64_t v6 = _os_activity_create(&dword_1A5389000, "Sharing/SFBrowser/setMode", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
    v9.opaque[0] = 0;
    v9.opaque[1] = 0;
    os_activity_scope_enter(v6, &v9);
    os_release(v6);
    *(void *)(a1 + 200) = a2;
    xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v7, "Object", "Browser");
    xpc_dictionary_set_string(v7, "Function", "SetMode");
    xpc_dictionary_set_uint64(v7, "Mode", a2);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 216), v7);
    xpc_release(v7);
    os_activity_scope_leave(&v9);
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
}

_xpc_connection_s *_SFBrowserCreateConnection(void *a1)
{
  CFNumberRef v2 = _os_activity_create(&dword_1A5389000, "Sharing/SFBrowser/createConnection", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  os_activity_scope_enter(v2, &state);
  os_release(v2);
  xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
  CFTypeRef v4 = (void *)_CFXPCCreateXPCObjectFromCFObject();
  xpc_object_t v5 = _SFNodeXPCObjectCreate(a1[26]);
  xpc_dictionary_set_value(v3, "Kind", v4);
  xpc_dictionary_set_value(v3, "Node", v5);
  xpc_dictionary_set_string(v3, "Object", "Browser");
  xpc_dictionary_set_string(v3, "Function", "Create");
  if (a1[10]) {
    uint64_t v6 = a1[10];
  }
  else {
    uint64_t v6 = MEMORY[0x1E4F14428];
  }
  mach_service = xpc_connection_create_mach_service("com.apple.sharingd", v6, 0);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 0x40000000;
  v10[2] = ___SFBrowserCreateConnection_block_invoke;
  void v10[3] = &__block_descriptor_tmp_75;
  v10[4] = a1;
  v10[5] = mach_service;
  xpc_connection_set_event_handler(mach_service, v10);
  xpc_connection_send_message(mach_service, v3);
  long long v8 = (void *)CFRetain(a1);
  xpc_connection_set_context(mach_service, v8);
  xpc_connection_set_finalizer_f(mach_service, MEMORY[0x1E4F1C278]);
  xpc_connection_resume(mach_service);
  xpc_release(v4);
  xpc_release(v5);
  xpc_release(v3);
  os_activity_scope_leave(&state);
  return mach_service;
}

uint64_t SFBrowserSetOptions(uint64_t a1, uint64_t a2)
{
  CFTypeRef v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserSetOptions_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if (*(void *)(a1 + 216)
    || (uint64_t Connection = _SFBrowserCreateConnection((void *)a1), (*(void *)(a1 + 216) = Connection) != 0))
  {
    uint64_t v6 = _os_activity_create(&dword_1A5389000, "Sharing/SFBrowser/setOptions", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
    v10.opaque[0] = 0;
    v10.opaque[1] = 0;
    os_activity_scope_enter(v6, &v10);
    os_release(v6);
    *(void *)(a1 + 64) = a2;
    xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v7, "Object", "Browser");
    xpc_dictionary_set_string(v7, "Function", "SetOptions");
    long long v8 = (void *)_CFXPCCreateXPCObjectFromCFObject();
    xpc_dictionary_set_value(v7, "Options", v8);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 216), v7);
    xpc_release(v8);
    xpc_release(v7);
    os_activity_scope_leave(&v10);
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
}

void SFBrowserScheduleWithRunLoop(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = browser_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    int v8 = 134218496;
    uint64_t v9 = a1;
    __int16 v10 = 2048;
    uint64_t v11 = a2;
    __int16 v12 = 2048;
    uint64_t v13 = a3;
    _os_log_debug_impl(&dword_1A5389000, v6, OS_LOG_TYPE_DEBUG, "SFBrowserScheduleWithRunLoop (browser = %p, runLoop = %p, runLoopMode = %p)", (uint8_t *)&v8, 0x20u);
  }
  xpc_object_t v7 = browser_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    SFBrowserScheduleWithRunLoop_cold_1();
  }
}

uint64_t SFBrowserGetRootNode(uint64_t a1)
{
  CFNumberRef v2 = browser_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    SFBrowserGetRootNode_cold_1();
  }
  xpc_object_t v3 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  uint64_t v4 = *(void *)(a1 + 208);
  pthread_mutex_unlock(v3);
  return v4;
}

const void *SFBrowserCopyChildren(uint64_t a1, const void *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserCopyChildren_cold_2();
  }
  xpc_object_t v5 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if ((a2 || (a2 = *(const void **)(a1 + 208)) != 0)
    && (uint64_t Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 32), a2)) != 0)
  {
    Mutable = CFRetain(Value);
  }
  else
  {
    Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
  }
  int v8 = Mutable;
  CFStringRef v9 = CFCopyDescription(Mutable);
  int v10 = CFEqual(*(CFTypeRef *)(a1 + 56), @"AirDrop");
  uint64_t v11 = browser_log();
  __int16 v12 = v11;
  if (v10)
  {
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 138412290;
      CFStringRef v15 = v9;
      _os_log_impl(&dword_1A5389000, v12, OS_LOG_TYPE_DEFAULT, "%@", (uint8_t *)&v14, 0xCu);
      if (!v9) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
  else if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    SFBrowserCopyChildren_cold_1();
    if (!v9) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v9) {
LABEL_14:
  }
    CFRelease(v9);
LABEL_15:
  pthread_mutex_unlock(v5);
  return v8;
}

const void *SFBrowserCopySidebarChildren(uint64_t a1)
{
  CFNumberRef v2 = browser_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    SFBrowserCopySidebarChildren_cold_2();
  }
  xpc_object_t v3 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  uint64_t v4 = *(const void **)(a1 + 24);
  if (v4) {
    CFRetain(v4);
  }
  CFStringRef v5 = CFCopyDescription(v4);
  uint64_t v6 = browser_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    SFBrowserCopyChildren_cold_1();
    if (!v5) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (v5) {
LABEL_7:
  }
    CFRelease(v5);
LABEL_8:
  pthread_mutex_unlock(v3);
  return v4;
}

uint64_t SFBrowserOpenNode(uint64_t a1, const void *a2, const void *a3, uint64_t a4)
{
  uint64_t valuePtr = a4;
  int v8 = browser_log();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    SFBrowserOpenNode_cold_1();
  }
  CFStringRef v9 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if (*(void *)(a1 + 216)
    || (uint64_t Connection = _SFBrowserCreateConnection(a1), (*(void *)(a1 + 216) = Connection) != 0))
  {
    uint64_t v11 = _os_activity_create(&dword_1A5389000, "Sharing/SFBrowser/openNode", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
    state.opaque[0] = 0;
    state.opaque[1] = 0;
    os_activity_scope_enter(v11, &state);
    os_release(v11);
    if (!a2) {
      a2 = *(const void **)(a1 + 208);
    }
    xpc_object_t v12 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_uint64(v12, "Flags", a4);
    xpc_dictionary_set_string(v12, "Object", "Browser");
    xpc_dictionary_set_string(v12, "Function", "OpenNode");
    xpc_object_t v13 = _SFNodeXPCObjectCreate((uint64_t)a2);
    if (v13)
    {
      int v14 = v13;
      xpc_dictionary_set_value(v12, "Node", v13);
      xpc_release(v14);
    }
    if (a3)
    {
      CFStringRef v15 = (void *)_CFXPCCreateXPCObjectFromCFObject();
      xpc_dictionary_set_value(v12, "Protocol", v15);
      xpc_release(v15);
    }
    Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    CFDictionarySetValue(Mutable, @"Node", a2);
    CFNumberRef v17 = CFNumberCreate(0, kCFNumberLongType, &valuePtr);
    CFDictionarySetValue(Mutable, @"Flags", v17);
    if (a3) {
      CFDictionarySetValue(Mutable, @"Protocol", a3);
    }
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 48), a2, Mutable);
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 216), v12);
    xpc_release(v12);
    CFRelease(Mutable);
    CFRelease(v17);
    os_activity_scope_leave(&state);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 4294967293;
  }
  pthread_mutex_unlock(v9);
  return v18;
}

uint64_t SFBrowserAddNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserAddNode_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  uint64_t Connection = *(_xpc_connection_s **)(a1 + 216);
  if (!Connection)
  {
    uint64_t Connection = _SFBrowserCreateConnection((void *)a1);
    *(void *)(a1 + 216) = Connection;
  }
  uint64_t v6 = 4294967293;
  if (a2)
  {
    if (Connection)
    {
      xpc_object_t v7 = _SFNodeXPCObjectCreate(a2);
      if (v7)
      {
        int v8 = v7;
        CFStringRef v9 = _os_activity_create(&dword_1A5389000, "Sharing/SFBrowser/addNode", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
        v12.opaque[0] = 0;
        v12.opaque[1] = 0;
        os_activity_scope_enter(v9, &v12);
        os_release(v9);
        xpc_object_t v10 = xpc_dictionary_create(0, 0, 0);
        xpc_dictionary_set_value(v10, "Node", v8);
        xpc_dictionary_set_string(v10, "Object", "Browser");
        xpc_dictionary_set_string(v10, "Function", "AddNode");
        xpc_connection_send_message(*(xpc_connection_t *)(a1 + 216), v10);
        xpc_release(v10);
        xpc_release(v8);
        os_activity_scope_leave(&v12);
        uint64_t v6 = 0;
      }
    }
  }
  _SFBrowserCancelConnectionIfNeccesary(a1);
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
  return v6;
}

void _SFBrowserCancelConnectionIfNeccesary(uint64_t a1)
{
  if (*(void *)(a1 + 216))
  {
    if (!CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 48)))
    {
      CFNumberRef v2 = *(_xpc_connection_s **)(a1 + 216);
      barrier[0] = MEMORY[0x1E4F143A8];
      barrier[1] = 0x40000000;
      barrier[2] = ___SFBrowserCancelConnectionIfNeccesary_block_invoke;
      barrier[3] = &__block_descriptor_tmp_79;
      barrier[4] = v2;
      xpc_connection_send_barrier(v2, barrier);
      *(void *)(a1 + 216) = 0;
    }
  }
}

uint64_t SFBrowserRemoveNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserRemoveNode_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  uint64_t Connection = *(_xpc_connection_s **)(a1 + 216);
  if (!Connection)
  {
    uint64_t Connection = _SFBrowserCreateConnection((void *)a1);
    *(void *)(a1 + 216) = Connection;
  }
  uint64_t v6 = 4294967293;
  if (a2)
  {
    if (Connection)
    {
      xpc_object_t v7 = _SFNodeXPCObjectCreate(a2);
      if (v7)
      {
        int v8 = v7;
        CFStringRef v9 = _os_activity_create(&dword_1A5389000, "Sharing/SFBrowser/removeNode", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
        v12.opaque[0] = 0;
        v12.opaque[1] = 0;
        os_activity_scope_enter(v9, &v12);
        os_release(v9);
        xpc_object_t v10 = xpc_dictionary_create(0, 0, 0);
        xpc_dictionary_set_value(v10, "Node", v8);
        xpc_dictionary_set_string(v10, "Object", "Browser");
        xpc_dictionary_set_string(v10, "Function", "RemoveNode");
        xpc_connection_send_message(*(xpc_connection_t *)(a1 + 216), v10);
        xpc_release(v10);
        xpc_release(v8);
        os_activity_scope_leave(&v12);
        uint64_t v6 = 0;
      }
    }
  }
  _SFBrowserCancelConnectionIfNeccesary(a1);
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
  return v6;
}

uint64_t SFBrowserCloseNode(uint64_t a1, const void *a2)
{
  uint64_t v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserCloseNode_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if (*(void *)(a1 + 216))
  {
    CFStringRef v5 = _os_activity_create(&dword_1A5389000, "Sharing/SFBrowser/closeNode", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
    v11.opaque[0] = 0;
    v11.opaque[1] = 0;
    os_activity_scope_enter(v5, &v11);
    os_release(v5);
    if (!a2) {
      a2 = *(const void **)(a1 + 208);
    }
    xpc_object_t v6 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v6, "Object", "Browser");
    xpc_dictionary_set_string(v6, "Function", "CloseNode");
    xpc_object_t v7 = _SFNodeXPCObjectCreate((uint64_t)a2);
    if (v7)
    {
      int v8 = v7;
      xpc_dictionary_set_value(v6, "Node", v7);
      xpc_release(v8);
    }
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 216), v6);
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 32), a2);
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 48), a2);
    xpc_release(v6);
    os_activity_scope_leave(&v11);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 4294967293;
  }
  _SFBrowserCancelConnectionIfNeccesary(a1);
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
  return v9;
}

uint64_t SFBrowserInvalidate(uint64_t a1)
{
  CFNumberRef v2 = browser_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    SFBrowserInvalidate_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if (!*(unsigned char *)(a1 + 16))
  {
    *(unsigned char *)(a1 + 16) = 1;
    xpc_object_t v3 = *(_xpc_connection_s **)(a1 + 216);
    if (v3)
    {
      barrier[0] = MEMORY[0x1E4F143A8];
      barrier[1] = 0x40000000;
      barrier[2] = __SFBrowserInvalidate_block_invoke;
      barrier[3] = &__block_descriptor_tmp_61;
      barrier[4] = v3;
      xpc_connection_send_barrier(v3, barrier);
      *(void *)(a1 + 216) = 0;
    }
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 88));
}

void __SFBrowserInvalidate_block_invoke(uint64_t a1)
{
  xpc_connection_cancel(*(xpc_connection_t *)(a1 + 32));
  CFNumberRef v2 = *(void **)(a1 + 32);

  xpc_release(v2);
}

CFTypeRef SFBrowserCopyNodeForURL(uint64_t a1, const __CFURL *a2)
{
  uint64_t v4 = browser_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFBrowserCopyNodeForURL_cold_5();
  }
  CFStringRef v5 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  CFStringRef v6 = CFURLCopyScheme(a2);
  if (CFEqual(v6, @"nwnode"))
  {
    CFStringRef v7 = CFURLCopyHostName(a2);
    if (v7)
    {
      CFStringRef v8 = v7;
      int HasPrefix = CFStringHasPrefix(v7, @"server-");
      int v10 = CFStringHasPrefix(v8, @"domain-");
      if (HasPrefix | v10)
      {
        int v11 = v10;
        CFAllocatorRef v12 = CFGetAllocator((CFTypeRef)a1);
        v29.length = CFStringGetLength(v8) - 7;
        v29.location = 7;
        CFStringRef v13 = CFStringCreateWithSubstring(v12, v8, v29);
        if (v13)
        {
          CFStringRef v14 = v13;
          CFStringRef v28 = v6;
          CFAllocatorRef v15 = CFGetAllocator((CFTypeRef)a1);
          CFArrayRef v16 = copyValuesFromDictionary(v15, *(CFDictionaryRef *)(a1 + 40));
          CFIndex Count = CFArrayGetCount(v16);
          if (Count < 1)
          {
            if (!v11) {
              goto LABEL_40;
            }
          }
          else
          {
            CFIndex v18 = Count;
            uint64_t v19 = 1;
            do
            {
              ValueAtIndex = CFArrayGetValueAtIndex(v16, v19 - 1);
              CFStringRef v21 = SFNodeCopyRealName((uint64_t)ValueAtIndex);
              if ((HasPrefix && (SFNodeIsServer((uint64_t)ValueAtIndex) || SFNodeIsSharePoint((uint64_t)ValueAtIndex))
                 || v11 && SFNodeIsNeighborhood((uint64_t)ValueAtIndex))
                && CFEqual(v21, v14))
              {
                CFTypeRef v22 = CFRetain(ValueAtIndex);
              }
              else
              {
                CFTypeRef v22 = 0;
              }
              CFRelease(v21);
              if (v19 >= v18) {
                break;
              }
              ++v19;
            }
            while (!v22);
            CFStringRef v5 = (pthread_mutex_t *)(a1 + 88);
            if (v22 || !v11) {
              goto LABEL_41;
            }
          }
          if (CFEqual(*(CFTypeRef *)(a1 + 56), @"Network") && CFEqual(v14, @"Network")
            || CFEqual(*(CFTypeRef *)(a1 + 56), @"AirDrop") && CFEqual(v14, @"AirDrop")
            || CFEqual(*(CFTypeRef *)(a1 + 56), @"Remote Disc") && CFEqual(v14, @"Remote Disc"))
          {
            CFTypeRef v22 = CFRetain(*(CFTypeRef *)(a1 + 208));
LABEL_41:
            CFRelease(v16);
            CFRelease(v14);
            CFStringRef v6 = v28;
            goto LABEL_42;
          }
LABEL_40:
          CFTypeRef v22 = 0;
          goto LABEL_41;
        }
        long long v26 = browser_log();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          SFBrowserCopyNodeForURL_cold_3();
        }
      }
      else
      {
        long long v25 = browser_log();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
          SFBrowserCopyNodeForURL_cold_4();
        }
      }
      CFTypeRef v22 = 0;
LABEL_42:
      CFRelease(v8);
      goto LABEL_43;
    }
    long long v24 = browser_log();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      SFBrowserCopyNodeForURL_cold_2();
    }
  }
  else
  {
    long long v23 = browser_log();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      SFBrowserCopyNodeForURL_cold_1();
    }
  }
  CFTypeRef v22 = 0;
LABEL_43:
  CFRelease(v6);
  pthread_mutex_unlock(v5);
  return v22;
}

uint64_t _SFBrowserFinalize(uint64_t a1)
{
  CFNumberRef v2 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  if (*(void *)(a1 + 168))
  {
    xpc_object_t v3 = *(void (**)(void))(a1 + 184);
    if (v3) {
      v3();
    }
  }
  CFRelease(*(CFTypeRef *)(a1 + 56));
  CFRelease(*(CFTypeRef *)(a1 + 48));
  CFRelease(*(CFTypeRef *)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 32));
  uint64_t v4 = *(const void **)(a1 + 208);
  if (v4) {
    CFRelease(v4);
  }
  CFStringRef v5 = *(const void **)(a1 + 24);
  if (v5) {
    CFRelease(v5);
  }
  CFStringRef v6 = *(NSObject **)(a1 + 80);
  if (v6) {
    dispatch_release(v6);
  }
  pthread_mutex_unlock(v2);

  return pthread_mutex_destroy(v2);
}

BOOL _SFBrowserEqual(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  pthread_mutex_lock((pthread_mutex_t *)(a2 + 88));
  pthread_mutex_unlock(v4);
  pthread_mutex_unlock((pthread_mutex_t *)(a2 + 88));
  return a1 == a2;
}

uint64_t _SFBrowserHash(uint64_t a1)
{
  CFNumberRef v2 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  pthread_mutex_unlock(v2);
  return a1;
}

CFStringRef _SFBrowserCopyDebugDesc(uint64_t a1)
{
  CFNumberRef v2 = (pthread_mutex_t *)(a1 + 88);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 88));
  CFStringRef v3 = CFStringCreateWithFormat(0, 0, @"<SFBrowser %p>{kind = %@}", a1, *(void *)(a1 + 56));
  pthread_mutex_unlock(v2);
  return v3;
}

__CFArray *_SFBrowserCreateChildrenFromXPCNodes(void *a1)
{
  int64_t count = xpc_array_get_count(a1);
  Mutable = CFArrayCreateMutable(0, count, MEMORY[0x1E4F1D510]);
  if (count >= 1)
  {
    for (size_t i = 0; i != count; ++i)
    {
      xpc_object_t value = xpc_array_get_value(a1, i);
      CFStringRef v6 = (const void *)_SFNodeCreateWithXPCObject(0, value);
      if (v6)
      {
        CFStringRef v7 = v6;
        CFArrayAppendValue(Mutable, v6);
        CFRelease(v7);
      }
    }
  }
  return Mutable;
}

void _SFBrowserUpdateCachedChildrenNodes(uint64_t a1, const void *a2, const __CFArray *a3, int a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  CFArrayRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
  if (a3)
  {
    CFIndex Count = CFArrayGetCount(a3);
    if (Count >= 1)
    {
      CFIndex v10 = 0;
      do
      {
        ValueAtIndex = CFArrayGetValueAtIndex(a3, v10);
        uint64_t Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 40), ValueAtIndex);
        if (Value)
        {
          CFStringRef v13 = Value;
          _SFNodeUpdateCachedChildNode((uint64_t)Value, (uint64_t)ValueAtIndex);
          CFStringRef v14 = Mutable;
          CFAllocatorRef v15 = v13;
        }
        else
        {
          CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 40), ValueAtIndex, ValueAtIndex);
          CFStringRef v14 = Mutable;
          CFAllocatorRef v15 = ValueAtIndex;
        }
        CFArrayAppendValue(v14, v15);
        ++v10;
      }
      while (Count != v10);
    }
    if (a4) {
      goto LABEL_9;
    }
  }
  else
  {
    CFIndex Count = 0;
    if (a4)
    {
LABEL_9:
      CFArrayRef v16 = *(const void **)(a1 + 24);
      if (v16) {
        CFRelease(v16);
      }
      *(void *)(a1 + 24) = Mutable;
      return;
    }
  }
  if (CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 48)) == 1)
  {
    CFIndex v17 = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 40));
    int v18 = v17;
    if (Count || v17 < 2)
    {
      if (v17 >= 2001 && (double)v17 * 0.75 > (double)Count)
      {
        CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(a1 + 40));
        uint64_t v19 = browser_log();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          v24[0] = 67109120;
          v24[1] = v18;
          _os_log_impl(&dword_1A5389000, v19, OS_LOG_TYPE_DEFAULT, "Compacting NetworkBrowser cache (%d)", (uint8_t *)v24, 8u);
        }
        CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 40), a2, a2);
        if (a3)
        {
          CFIndex v20 = CFArrayGetCount(a3);
          if (v20 >= 1)
          {
            CFIndex v21 = v20;
            for (CFIndex i = 0; i != v21; ++i)
            {
              long long v23 = CFArrayGetValueAtIndex(Mutable, i);
              CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 40), v23, v23);
            }
          }
        }
      }
    }
    else
    {
      CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(a1 + 40));
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 40), a2, a2);
    }
  }
  CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 32), a2, Mutable);
  CFRelease(Mutable);
}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t SFNodeGetTypeID()
{
  if (SFNodeGetTypeID::once != -1) {
    dispatch_once(&SFNodeGetTypeID::once, &__block_literal_global_0);
  }
  return _kSFNodeTypeID;
}

void *__SFNodeGetTypeID_block_invoke()
{
  uint64_t result = malloc_type_calloc(1uLL, 0x60uLL, 0x10D00408820D60FuLL);
  _kSFNodeClass = (uint64_t)result;
  if (result)
  {
    *uint64_t result = 0;
    result[1] = "SFNode";
    result[3] = _SFNodeCopy;
    void result[4] = _SFNodeFinalize;
    result[5] = _SFNodeEqual;
    result[6] = _SFNodeHash;
    result[8] = _SFNodeCopyDebugDesc;
    uint64_t result = (void *)_CFRuntimeRegisterClass();
    _kSFNodeCFTypeID TypeID = (uint64_t)result;
  }
  return result;
}

uint64_t SFNodeCreate()
{
  if (SFNodeGetTypeID::once != -1) {
    dispatch_once(&SFNodeGetTypeID::once, &__block_literal_global_0);
  }
  if (!_kSFNodeTypeID) {
    return 0;
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  uint64_t v1 = Instance;
  if (Instance)
  {
    *(void *)(Instance + 112) = 0;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    operator new();
  }
  return v1;
}

void sub_1A53A800C(_Unwind_Exception *a1)
{
  MEMORY[0x1A626B880](v1, 0x10E0C404FAA399ELL);
  _Unwind_Resume(a1);
}

uint64_t SFNodeCreateCopy(uint64_t a1, uint64_t a2)
{
  if (SFNodeGetTypeID::once != -1) {
    dispatch_once(&SFNodeGetTypeID::once, &__block_literal_global_0);
  }
  if (!_kSFNodeTypeID) {
    return 0;
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  uint64_t v4 = Instance;
  if (Instance)
  {
    *(void *)(Instance + 112) = 0;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a2 + 112) + 464));
    operator new();
  }
  return v4;
}

void sub_1A53A8400(_Unwind_Exception *a1)
{
  MEMORY[0x1A626B880](v1, 0x10E0C404FAA399ELL);
  _Unwind_Resume(a1);
}

uint64_t _SFNodeUpdateCachedParentNode(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a2 + 112) + 464));
  NetworkNode::setUserName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 288));
  NetworkNode::setWorkgroups(*(NetworkNode **)(a1 + 112), *(CFSetRef *)(*(void *)(a2 + 112) + 360));
  NetworkNode::setConnectionState(*(void *)(a1 + 112), *(_DWORD *)(*(void *)(a2 + 112) + 456));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a2 + 112) + 464));
  uint64_t v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t _SFNodeUpdateCachedChildNode(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a2 + 112) + 464));
  NetworkNode::setDisplayName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 88));
  NetworkNode::setRealName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 256));
  NetworkNode::setServiceName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 272));
  NetworkNode::setComputerName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 72));
  NetworkNode::setServiceName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 272));
  NetworkNode::setNetbiosName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 192));
  NetworkNode::setHostName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 136));
  NetworkNode::setSecondaryName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 264));
  NetworkNode::setDomain(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 96));
  NetworkNode::setWorkgroup(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 296));
  NetworkNode::setPath(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 232));
  NetworkNode::setModel(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 176));
  NetworkNode::setModelIdentifier(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 184));
  NetworkNode::setIDSDeviceIdentifier(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 152));
  NetworkNode::setColor(*(NetworkNode **)(a1 + 112), *(CFArrayRef *)(*(void *)(a2 + 112) + 304));
  NetworkNode::setSiblingNodes(*(NetworkNode **)(a1 + 112), *(CFArrayRef *)(*(void *)(a2 + 112) + 320));
  NetworkNode::setIconHash(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 144));
  NetworkNode::setPassword(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 224));
  NetworkNode::setContactIdentifier(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 240));
  NetworkNode::setContactIdentifiers(*(NetworkNode **)(a1 + 112), *(CFSetRef *)(*(void *)(a2 + 112) + 248));
  NetworkNode::setNickName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 120));
  NetworkNode::setFirstName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 128));
  NetworkNode::setLastName(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 168));
  NetworkNode::setAppleID(*(NetworkNode **)(a1 + 112), *(CFTypeRef *)(*(void *)(a2 + 112) + 64));
  NetworkNode::setTransportBundleID(*(NetworkNode **)(a1 + 112), *(CFTypeRef *)(*(void *)(a2 + 112) + 216));
  NetworkNode::setHandles(*(NetworkNode **)(a1 + 112), *(CFSetRef *)(*(void *)(a2 + 112) + 352));
  NetworkNode::setEmailHash(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 104));
  NetworkNode::setPhoneHash(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 112));
  NetworkNode::setDiskType(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 80));
  NetworkNode::setParentIdentifier(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 200));
  NetworkNode::setIconData(*(NetworkNode **)(a1 + 112), *(CFDataRef *)(*(void *)(a2 + 112) + 16));
  NetworkNode::setMediaCapabilities(*(NetworkNode **)(a1 + 112), *(CFDataRef *)(*(void *)(a2 + 112) + 24));
  NetworkNode::setFlags(*(NetworkNode **)(a1 + 112), *(CFTypeRef *)(*(void *)(a2 + 112) + 32));
  NetworkNode::setRapportFlags(*(NetworkNode **)(a1 + 112), *(CFTypeRef *)(*(void *)(a2 + 112) + 40));
  NetworkNode::setAccessRights(*(NetworkNode **)(a1 + 112), *(CFTypeRef *)(*(void *)(a2 + 112) + 48));
  NetworkNode::setRangingData(*(NetworkNode **)(a1 + 112), *(CFTypeRef *)(*(void *)(a2 + 112) + 56));
  NetworkNode::setURL(*(CFURLRef **)(a1 + 112), **(CFURLRef **)(a2 + 112));
  NetworkNode::setURLs(*(NetworkNode **)(a1 + 112), *(CFDictionaryRef *)(*(void *)(a2 + 112) + 384));
  NetworkNode::setMountPoint(*(NetworkNode **)(a1 + 112), *(CFTypeRef *)(*(void *)(a2 + 112) + 8));
  NetworkNode::setPortNumber(*(void *)(a1 + 112), *(_DWORD *)(*(void *)(a2 + 112) + 424));
  NetworkNode::setSelectionReason(*(void *)(a1 + 112), *(void *)(*(void *)(a2 + 112) + 432));
  NetworkNode::setSharePointBrowserID(*(NetworkNode **)(a1 + 112), *(CFStringRef *)(*(void *)(a2 + 112) + 208));
  NetworkNode::setSupportedMedia(*(void *)(a1 + 112), *(void *)(*(void *)(a2 + 112) + 448));
  NetworkNode::setDomains(*(NetworkNode **)(a1 + 112), *(CFSetRef *)(*(void *)(a2 + 112) + 344));
  NetworkNode::setKinds(*(NetworkNode **)(a1 + 112), *(CFSetRef *)(*(void *)(a2 + 112) + 336));
  NetworkNode::setBonjourProtocols(*(NetworkNode **)(a1 + 112), *(CFBagRef *)(*(void *)(a2 + 112) + 376));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a2 + 112) + 464));
  uint64_t v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t _SFNodeCreateWithXPCObject(int a1, void *a2)
{
  CFStringRef v3 = xpcDictionaryCopyCFStringForKey(a2, "RealName");
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  CFStringRef v5 = xpcDictionaryCopyCFStringForKey(a2, "DisplayName");
  if (!v5)
  {
    CFRelease(v4);
    return 0;
  }
  CFStringRef v6 = v5;
  uint64_t v7 = SFNodeCreate();
  CFRelease(v6);
  CFRelease(v4);
  if (v7)
  {
    CFStringRef v8 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "ComputerName");
    if (v8)
    {
      CFStringRef v9 = v8;
      NetworkNode::setComputerName(*(NetworkNode **)(v7 + 112), v8);
      CFRelease(v9);
    }
    CFStringRef v10 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "ServiceName");
    if (v10)
    {
      CFStringRef v11 = v10;
      NetworkNode::setServiceName(*(NetworkNode **)(v7 + 112), v10);
      CFRelease(v11);
    }
    CFStringRef v12 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "NetbiosName");
    if (v12)
    {
      CFStringRef v13 = v12;
      NetworkNode::setNetbiosName(*(NetworkNode **)(v7 + 112), v12);
      CFRelease(v13);
    }
    CFStringRef v14 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "HostName");
    if (v14)
    {
      CFStringRef v15 = v14;
      NetworkNode::setHostName(*(NetworkNode **)(v7 + 112), v14);
      CFRelease(v15);
    }
    CFStringRef v16 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "Comment");
    if (v16)
    {
      CFStringRef v17 = v16;
      NetworkNode::setSecondaryName(*(NetworkNode **)(v7 + 112), v16);
      CFRelease(v17);
    }
    CFStringRef v18 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "Domain");
    if (v18)
    {
      CFStringRef v19 = v18;
      NetworkNode::setDomain(*(NetworkNode **)(v7 + 112), v18);
      CFRelease(v19);
    }
    CFStringRef v20 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "Workgroup");
    if (v20)
    {
      CFStringRef v21 = v20;
      NetworkNode::setWorkgroup(*(NetworkNode **)(v7 + 112), v20);
      CFRelease(v21);
    }
    CFStringRef v22 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "Path");
    if (v22)
    {
      CFStringRef v23 = v22;
      NetworkNode::setPath(*(NetworkNode **)(v7 + 112), v22);
      CFRelease(v23);
    }
    CFStringRef v24 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "Model");
    if (v24)
    {
      CFStringRef v25 = v24;
      NetworkNode::setModel(*(NetworkNode **)(v7 + 112), v24);
      CFRelease(v25);
    }
    CFStringRef v26 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "ModelIdentifier");
    if (v26)
    {
      CFStringRef v27 = v26;
      NetworkNode::setModelIdentifier(*(NetworkNode **)(v7 + 112), v26);
      CFRelease(v27);
    }
    CFStringRef v28 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "IDSDeviceIdentifier");
    if (v28)
    {
      CFStringRef v29 = v28;
      NetworkNode::setIDSDeviceIdentifier(*(NetworkNode **)(v7 + 112), v28);
      CFRelease(v29);
    }
    CFStringRef v30 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "IconHash");
    if (v30)
    {
      CFStringRef v31 = v30;
      NetworkNode::setIconHash(*(NetworkNode **)(v7 + 112), v30);
      CFRelease(v31);
    }
    CFStringRef v32 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "ContactIdentifier");
    if (v32)
    {
      CFStringRef v33 = v32;
      NetworkNode::setContactIdentifier(*(NetworkNode **)(v7 + 112), v32);
      CFRelease(v33);
    }
    CFArrayRef v34 = (const __CFArray *)xpcDictionaryCopyCFArrayForKey(a2, "ContactIdentifiers");
    if (v34)
    {
      CFArrayRef v35 = v34;
      SetFromArray = createSetFromArray(0, v34);
      if (SetFromArray)
      {
        v37 = SetFromArray;
        NetworkNode::setContactIdentifiers(*(NetworkNode **)(v7 + 112), SetFromArray);
        CFRelease(v37);
      }
      CFRelease(v35);
    }
    CFStringRef v38 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "UserName");
    if (v38)
    {
      CFStringRef v39 = v38;
      NetworkNode::setUserName(*(NetworkNode **)(v7 + 112), v38);
      CFRelease(v39);
    }
    CFStringRef v40 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "Password");
    if (v40)
    {
      CFStringRef v41 = v40;
      NetworkNode::setPassword(*(NetworkNode **)(v7 + 112), v40);
      CFRelease(v41);
    }
    CFStringRef v42 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "NickName");
    if (v42)
    {
      CFStringRef v43 = v42;
      NetworkNode::setNickName(*(NetworkNode **)(v7 + 112), v42);
      CFRelease(v43);
    }
    CFStringRef v44 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "FirstName");
    if (v44)
    {
      CFStringRef v45 = v44;
      NetworkNode::setFirstName(*(NetworkNode **)(v7 + 112), v44);
      CFRelease(v45);
    }
    CFStringRef v46 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "LastName");
    if (v46)
    {
      CFStringRef v47 = v46;
      NetworkNode::setLastName(*(NetworkNode **)(v7 + 112), v46);
      CFRelease(v47);
    }
    id v48 = xpcDictionaryCopyCFStringForKey(a2, "AppleID");
    if (v48)
    {
      id v49 = v48;
      NetworkNode::setAppleID(*(NetworkNode **)(v7 + 112), v48);
      CFRelease(v49);
    }
    CFStringRef v50 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "EmailHash");
    if (v50)
    {
      CFStringRef v51 = v50;
      NetworkNode::setEmailHash(*(NetworkNode **)(v7 + 112), v50);
      CFRelease(v51);
    }
    CFStringRef v52 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "PhoneHash");
    if (v52)
    {
      CFStringRef v53 = v52;
      NetworkNode::setPhoneHash(*(NetworkNode **)(v7 + 112), v52);
      CFRelease(v53);
    }
    CFStringRef v54 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "ParentIdentifier");
    if (v54)
    {
      CFStringRef v55 = v54;
      NetworkNode::setParentIdentifier(*(NetworkNode **)(v7 + 112), v54);
      CFRelease(v55);
    }
    CFStringRef v56 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "DiskType");
    if (v56)
    {
      CFStringRef v57 = v56;
      NetworkNode::setDiskType(*(NetworkNode **)(v7 + 112), v56);
      CFRelease(v57);
    }
    CFStringRef v58 = (const __CFString *)xpcDictionaryCopyCFStringForKey(a2, "SharePointBrowserID");
    if (v58)
    {
      CFStringRef v59 = v58;
      NetworkNode::setSharePointBrowserID(*(NetworkNode **)(v7 + 112), v58);
      CFRelease(v59);
    }
    v60 = xpcDictionaryCopyCFStringForKey(a2, "TransportBundleID");
    if (v60)
    {
      v61 = v60;
      NetworkNode::setTransportBundleID(*(NetworkNode **)(v7 + 112), v60);
      CFRelease(v61);
    }
    CFDataRef v62 = (const __CFData *)xpcDictionaryCopyCFDataForKey(a2, "IconData");
    if (v62)
    {
      CFDataRef v63 = v62;
      NetworkNode::setIconData(*(NetworkNode **)(v7 + 112), v62);
      CFRelease(v63);
    }
    CFDataRef v64 = (const __CFData *)xpcDictionaryCopyCFDataForKey(a2, "MediaCapabilities");
    if (v64)
    {
      CFDataRef v65 = v64;
      NetworkNode::setMediaCapabilities(*(NetworkNode **)(v7 + 112), v64);
      CFRelease(v65);
    }
    v66 = xpcDictionaryCopyCFNumberForKey(a2, "Flags");
    if (v66)
    {
      v67 = v66;
      NetworkNode::setFlags(*(NetworkNode **)(v7 + 112), v66);
      CFRelease(v67);
    }
    v68 = xpcDictionaryCopyCFNumberForKey(a2, "RapportFlags");
    if (v68)
    {
      v69 = v68;
      NetworkNode::setRapportFlags(*(NetworkNode **)(v7 + 112), v68);
      CFRelease(v69);
    }
    v70 = xpcDictionaryCopyCFNumberForKey(a2, "AccessRights");
    if (v70)
    {
      v71 = v70;
      NetworkNode::setAccessRights(*(NetworkNode **)(v7 + 112), v70);
      CFRelease(v71);
    }
    v72 = xpcDictionaryCopyCFDataForKey(a2, "RangingData");
    if (v72)
    {
      v73 = v72;
      NetworkNode::setRangingData(*(NetworkNode **)(v7 + 112), v72);
      CFRelease(v73);
    }
    CFURLRef v74 = (const __CFURL *)xpcDictionaryCopyCFURLForKey(a2, "URL");
    if (v74)
    {
      CFURLRef v75 = v74;
      NetworkNode::setURL(*(CFURLRef **)(v7 + 112), v74);
      CFRelease(v75);
    }
    v76 = xpcDictionaryCopyCFURLForKey(a2, "MountPoint");
    if (v76)
    {
      v77 = v76;
      NetworkNode::setMountPoint(*(NetworkNode **)(v7 + 112), v76);
      CFRelease(v77);
    }
    if (MEMORY[0x1A626D0F0](a2) == MEMORY[0x1E4F14590])
    {
      if (xpc_dictionary_get_value(a2, "URLs"))
      {
        CFDictionaryRef v107 = (const __CFDictionary *)_CFXPCCreateCFObjectFromXPCObject();
        if (v107)
        {
          CFDictionaryRef v108 = v107;
          CFTypeID v109 = CFGetTypeID(v107);
          if (v109 == CFDictionaryGetTypeID())
          {
            NetworkNode::setURLs(*(NetworkNode **)(v7 + 112), v108);
          }
          else
          {
            v110 = framework_log();
            if (os_log_type_enabled(v110, OS_LOG_TYPE_ERROR)) {
              _SFNodeCreateWithXPCObject_cold_1();
            }
          }
          CFRelease(v108);
        }
      }
    }
    else
    {
      v78 = framework_log();
      if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR)) {
        _SFNodeCreateWithXPCObject_cold_2();
      }
    }
    CFArrayRef v79 = (const __CFArray *)xpcDictionaryCopyCFArrayForKey(a2, "Domains");
    if (v79)
    {
      CFArrayRef v80 = v79;
      v81 = createSetFromArray(0, v79);
      if (v81)
      {
        v82 = v81;
        NetworkNode::setDomains(*(NetworkNode **)(v7 + 112), v81);
        CFRelease(v82);
      }
      CFRelease(v80);
    }
    CFArrayRef v83 = (const __CFArray *)xpcDictionaryCopyCFArrayForKey(a2, "Workgroups");
    if (v83)
    {
      CFArrayRef v84 = v83;
      v85 = createSetFromArray(0, v83);
      if (v85)
      {
        v86 = v85;
        NetworkNode::setWorkgroups(*(NetworkNode **)(v7 + 112), v85);
        CFRelease(v86);
      }
      CFRelease(v84);
    }
    CFArrayRef v87 = (const __CFArray *)xpcDictionaryCopyCFArrayForKey(a2, "Handles");
    if (v87)
    {
      CFArrayRef v88 = v87;
      v89 = createSetFromArray(0, v87);
      if (v89)
      {
        v90 = v89;
        NetworkNode::setHandles(*(NetworkNode **)(v7 + 112), v89);
        CFRelease(v90);
      }
      CFRelease(v88);
    }
    CFArrayRef v91 = (const __CFArray *)xpcDictionaryCopyCFArrayForKey(a2, "BonjourProtocols");
    if (v91)
    {
      CFArrayRef v92 = v91;
      BagFromArray = createBagFromArray(0, v91);
      if (BagFromArray)
      {
        v94 = BagFromArray;
        NetworkNode::setBonjourProtocols(*(NetworkNode **)(v7 + 112), BagFromArray);
        CFRelease(v94);
      }
      CFRelease(v92);
    }
    CFArrayRef v95 = (const __CFArray *)xpcDictionaryCopyCFArrayForKey(a2, "Color");
    if (v95)
    {
      CFArrayRef v96 = v95;
      NetworkNode::setColor(*(NetworkNode **)(v7 + 112), v95);
      CFRelease(v96);
    }
    xpc_object_t value = xpc_dictionary_get_value(a2, "SiblingNodes");
    if (value)
    {
      SFNodeArrayForXPCArray = createSFNodeArrayForXPCArray(value);
      NetworkNode::setSiblingNodes(*(NetworkNode **)(v7 + 112), SFNodeArrayForXPCArray);
      CFRelease(SFNodeArrayForXPCArray);
    }
    xpc_object_t v99 = xpc_dictionary_get_value(a2, "Kinds");
    SFNodeKindsFromXPCArray = createSFNodeKindsFromXPCArray(0, v99);
    if (SFNodeKindsFromXPCArray)
    {
      v101 = SFNodeKindsFromXPCArray;
      NetworkNode::setKinds(*(NetworkNode **)(v7 + 112), SFNodeKindsFromXPCArray);
      CFRelease(v101);
    }
    int int64 = xpc_dictionary_get_int64(a2, "ConnectionState");
    NetworkNode::setConnectionState(*(void *)(v7 + 112), int64);
    int64_t v103 = xpc_dictionary_get_int64(a2, "PortNumber");
    if (v103) {
      NetworkNode::setPortNumber(*(void *)(v7 + 112), v103);
    }
    int64_t v104 = xpc_dictionary_get_int64(a2, "SelectionReason");
    NetworkNode::setSelectionReason(*(void *)(v7 + 112), v104);
    uint int64 = xpc_dictionary_get_uint64(a2, "SupportedMedia");
    if (uint64) {
      NetworkNode::setSupportedMedia(*(void *)(v7 + 112), uint64);
    }
  }
  return v7;
}

const void *xpcDictionaryCopyCFStringForKey(void *a1, const char *a2)
{
  if (MEMORY[0x1A626D0F0]() != MEMORY[0x1E4F14590])
  {
    uint64_t v4 = framework_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      xpcDictionaryCopyCFStringForKey();
    }
    return 0;
  }
  if (!xpc_dictionary_get_value(a1, a2)) {
    return 0;
  }
  uint64_t v7 = (const void *)_CFXPCCreateCFObjectFromXPCObject();
  CFStringRef v5 = v7;
  if (v7)
  {
    CFTypeID v8 = CFGetTypeID(v7);
    if (v8 != CFStringGetTypeID())
    {
      CFStringRef v9 = framework_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        xpcDictionaryCopyCFStringForKey();
      }
      CFRelease(v5);
      return 0;
    }
  }
  return v5;
}

const void *xpcDictionaryCopyCFArrayForKey(void *a1, const char *a2)
{
  if (MEMORY[0x1A626D0F0]() != MEMORY[0x1E4F14590])
  {
    uint64_t v4 = framework_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      xpcDictionaryCopyCFArrayForKey();
    }
    return 0;
  }
  if (!xpc_dictionary_get_value(a1, a2)) {
    return 0;
  }
  uint64_t v7 = (const void *)_CFXPCCreateCFObjectFromXPCObject();
  CFStringRef v5 = v7;
  if (v7)
  {
    CFTypeID v8 = CFGetTypeID(v7);
    if (v8 != CFArrayGetTypeID())
    {
      CFStringRef v9 = framework_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        xpcDictionaryCopyCFArrayForKey();
      }
      CFRelease(v5);
      return 0;
    }
  }
  return v5;
}

const void *xpcDictionaryCopyCFDataForKey(void *a1, const char *a2)
{
  if (MEMORY[0x1A626D0F0]() != MEMORY[0x1E4F14590])
  {
    uint64_t v4 = framework_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      xpcDictionaryCopyCFDataForKey();
    }
    return 0;
  }
  if (!xpc_dictionary_get_value(a1, a2)) {
    return 0;
  }
  uint64_t v7 = (const void *)_CFXPCCreateCFObjectFromXPCObject();
  CFStringRef v5 = v7;
  if (v7)
  {
    CFTypeID v8 = CFGetTypeID(v7);
    if (v8 != CFDataGetTypeID())
    {
      CFStringRef v9 = framework_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        xpcDictionaryCopyCFDataForKey();
      }
      CFRelease(v5);
      return 0;
    }
  }
  return v5;
}

const void *xpcDictionaryCopyCFNumberForKey(void *a1, const char *a2)
{
  if (MEMORY[0x1A626D0F0]() != MEMORY[0x1E4F14590])
  {
    uint64_t v4 = framework_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      xpcDictionaryCopyCFNumberForKey();
    }
    return 0;
  }
  if (!xpc_dictionary_get_value(a1, a2)) {
    return 0;
  }
  uint64_t v7 = (const void *)_CFXPCCreateCFObjectFromXPCObject();
  CFStringRef v5 = v7;
  if (v7)
  {
    CFTypeID v8 = CFGetTypeID(v7);
    if (v8 != CFNumberGetTypeID())
    {
      CFStringRef v9 = framework_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        xpcDictionaryCopyCFNumberForKey();
      }
      CFRelease(v5);
      return 0;
    }
  }
  return v5;
}

const void *xpcDictionaryCopyCFURLForKey(void *a1, const char *a2)
{
  if (MEMORY[0x1A626D0F0]() != MEMORY[0x1E4F14590])
  {
    uint64_t v4 = framework_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      xpcDictionaryCopyCFURLForKey();
    }
    return 0;
  }
  if (!xpc_dictionary_get_value(a1, a2)) {
    return 0;
  }
  uint64_t v7 = (const void *)_CFXPCCreateCFObjectFromXPCObject();
  CFStringRef v5 = v7;
  if (v7)
  {
    CFTypeID v8 = CFGetTypeID(v7);
    if (v8 != CFURLGetTypeID())
    {
      CFStringRef v9 = framework_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        xpcDictionaryCopyCFURLForKey();
      }
      CFRelease(v5);
      return 0;
    }
  }
  return v5;
}

__CFArray *createSFNodeArrayForXPCArray(void *a1)
{
  int64_t count = xpc_array_get_count(a1);
  CFArrayRef Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x1E4F1D510]);
  if (count >= 1)
  {
    for (size_t i = 0; i != count; ++i)
    {
      xpc_object_t value = xpc_array_get_value(a1, i);
      CFStringRef v6 = (const void *)_SFNodeCreateWithXPCObject(0, value);
      if (v6)
      {
        uint64_t v7 = v6;
        CFArrayAppendValue(Mutable, v6);
        CFRelease(v7);
      }
    }
  }
  return Mutable;
}

xpc_object_t createXPCArrayForSFNodeArray(const __CFArray *a1)
{
  CFIndex Count = CFArrayGetCount(a1);
  xpc_object_t v3 = xpc_array_create(0, 0);
  if (Count >= 1)
  {
    for (CFIndex i = 0; i != Count; ++i)
    {
      ValueAtIndex = CFArrayGetValueAtIndex(a1, i);
      CFStringRef v6 = (void *)_SFNodeXPCObjectCreate(ValueAtIndex);
      if (v6)
      {
        uint64_t v7 = v6;
        xpc_array_append_value(v3, v6);
        xpc_release(v7);
      }
    }
  }
  return v3;
}

xpc_object_t _SFNodeXPCObjectCreate(uint64_t a1)
{
  xpc_object_t v2 = xpc_dictionary_create(0, 0, 0);
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  setValueForKeyInXPCDictionary(v2, "AccessRights", *(CFTypeRef *)(*(void *)(a1 + 112) + 48));
  setValueForKeyInXPCDictionary(v2, "RangingData", *(CFTypeRef *)(*(void *)(a1 + 112) + 56));
  setValueForKeyInXPCDictionary(v2, "AppleID", *(CFTypeRef *)(*(void *)(a1 + 112) + 64));
  setValueForKeyInXPCDictionary(v2, "BonjourProtocols", *(CFTypeRef *)(*(void *)(a1 + 112) + 376));
  setValueForKeyInXPCDictionary(v2, "ComputerName", *(CFTypeRef *)(*(void *)(a1 + 112) + 72));
  setValueForKeyInXPCDictionary(v2, "DiskType", *(CFTypeRef *)(*(void *)(a1 + 112) + 80));
  setValueForKeyInXPCDictionary(v2, "DisplayName", *(CFTypeRef *)(*(void *)(a1 + 112) + 88));
  setValueForKeyInXPCDictionary(v2, "Domain", *(CFTypeRef *)(*(void *)(a1 + 112) + 96));
  setValueForKeyInXPCDictionary(v2, "Domains", *(CFTypeRef *)(*(void *)(a1 + 112) + 344));
  setValueForKeyInXPCDictionary(v2, "EmailHash", *(CFTypeRef *)(*(void *)(a1 + 112) + 104));
  setValueForKeyInXPCDictionary(v2, "PhoneHash", *(CFTypeRef *)(*(void *)(a1 + 112) + 112));
  setValueForKeyInXPCDictionary(v2, "ContactIdentifier", *(CFTypeRef *)(*(void *)(a1 + 112) + 240));
  setValueForKeyInXPCDictionary(v2, "ContactIdentifiers", *(CFTypeRef *)(*(void *)(a1 + 112) + 248));
  setValueForKeyInXPCDictionary(v2, "NickName", *(CFTypeRef *)(*(void *)(a1 + 112) + 120));
  setValueForKeyInXPCDictionary(v2, "FirstName", *(CFTypeRef *)(*(void *)(a1 + 112) + 128));
  setValueForKeyInXPCDictionary(v2, "Flags", *(CFTypeRef *)(*(void *)(a1 + 112) + 32));
  setValueForKeyInXPCDictionary(v2, "RapportFlags", *(CFTypeRef *)(*(void *)(a1 + 112) + 40));
  setValueForKeyInXPCDictionary(v2, "HostName", *(CFTypeRef *)(*(void *)(a1 + 112) + 136));
  setValueForKeyInXPCDictionary(v2, "IconData", *(CFTypeRef *)(*(void *)(a1 + 112) + 16));
  setValueForKeyInXPCDictionary(v2, "MediaCapabilities", *(CFTypeRef *)(*(void *)(a1 + 112) + 24));
  setValueForKeyInXPCDictionary(v2, "IconHash", *(CFTypeRef *)(*(void *)(a1 + 112) + 144));
  setValueForKeyInXPCDictionary(v2, "LastName", *(CFTypeRef *)(*(void *)(a1 + 112) + 168));
  setValueForKeyInXPCDictionary(v2, "Model", *(CFTypeRef *)(*(void *)(a1 + 112) + 176));
  setValueForKeyInXPCDictionary(v2, "ModelIdentifier", *(CFTypeRef *)(*(void *)(a1 + 112) + 184));
  setValueForKeyInXPCDictionary(v2, "IDSDeviceIdentifier", *(CFTypeRef *)(*(void *)(a1 + 112) + 152));
  setValueForKeyInXPCDictionary(v2, "Color", *(CFTypeRef *)(*(void *)(a1 + 112) + 304));
  setValueForKeyInXPCDictionary(v2, "TransportBundleID", *(CFTypeRef *)(*(void *)(a1 + 112) + 216));
  setValueForKeyInXPCDictionary(v2, "Handles", *(CFTypeRef *)(*(void *)(a1 + 112) + 352));
  uint64_t v3 = *(void *)(a1 + 112);
  CFArrayRef v4 = *(const __CFArray **)(v3 + 320);
  if (v4)
  {
    xpc_object_t XPCArrayForSFNodeArray = createXPCArrayForSFNodeArray(v4);
    xpc_dictionary_set_value(v2, "SiblingNodes", XPCArrayForSFNodeArray);
    xpc_release(XPCArrayForSFNodeArray);
    uint64_t v3 = *(void *)(a1 + 112);
  }
  setValueForKeyInXPCDictionary(v2, "MountPoint", *(CFTypeRef *)(v3 + 8));
  setValueForKeyInXPCDictionary(v2, "NetbiosName", *(CFTypeRef *)(*(void *)(a1 + 112) + 192));
  setValueForKeyInXPCDictionary(v2, "ParentIdentifier", *(CFTypeRef *)(*(void *)(a1 + 112) + 200));
  setValueForKeyInXPCDictionary(v2, "Password", *(CFTypeRef *)(*(void *)(a1 + 112) + 224));
  setValueForKeyInXPCDictionary(v2, "Path", *(CFTypeRef *)(*(void *)(a1 + 112) + 232));
  setValueForKeyInXPCDictionary(v2, "RealName", *(CFTypeRef *)(*(void *)(a1 + 112) + 256));
  setValueForKeyInXPCDictionary(v2, "Comment", *(CFTypeRef *)(*(void *)(a1 + 112) + 264));
  setValueForKeyInXPCDictionary(v2, "ServiceName", *(CFTypeRef *)(*(void *)(a1 + 112) + 272));
  setValueForKeyInXPCDictionary(v2, "SharePointBrowserID", *(CFTypeRef *)(*(void *)(a1 + 112) + 208));
  setValueForKeyInXPCDictionary(v2, "URL", **(CFTypeRef **)(a1 + 112));
  setValueForKeyInXPCDictionary(v2, "URLs", *(CFTypeRef *)(*(void *)(a1 + 112) + 384));
  setValueForKeyInXPCDictionary(v2, "UserName", *(CFTypeRef *)(*(void *)(a1 + 112) + 288));
  setValueForKeyInXPCDictionary(v2, "Workgroup", *(CFTypeRef *)(*(void *)(a1 + 112) + 296));
  setValueForKeyInXPCDictionary(v2, "Workgroups", *(CFTypeRef *)(*(void *)(a1 + 112) + 360));
  xpc_dictionary_set_int64(v2, "PortNumber", *(int *)(*(void *)(a1 + 112) + 424));
  xpc_dictionary_set_int64(v2, "SelectionReason", *(void *)(*(void *)(a1 + 112) + 432));
  xpc_dictionary_set_uint64(v2, "SupportedMedia", *(void *)(*(void *)(a1 + 112) + 448));
  xpc_dictionary_set_int64(v2, "ConnectionState", *(unsigned int *)(*(void *)(a1 + 112) + 456));
  xpc_object_t XPCArrayFromSFNodeKinds = createXPCArrayFromSFNodeKinds(*(const __CFSet **)(*(void *)(a1 + 112) + 336));
  if (XPCArrayFromSFNodeKinds)
  {
    uint64_t v7 = XPCArrayFromSFNodeKinds;
    xpc_dictionary_set_value(v2, "Kinds", XPCArrayFromSFNodeKinds);
    xpc_release(v7);
  }
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

void setValueForKeyInXPCDictionary(void *a1, const char *a2, CFTypeRef cf)
{
  if (!cf) {
    return;
  }
  CFTypeID v6 = CFGetTypeID(cf);
  if (v6 == CFSetGetTypeID())
  {
    CFArrayRef v7 = copyValuesFromSet(0, (CFSetRef)cf);
    if (!v7) {
      return;
    }
    CFArrayRef v8 = v7;
    setSupportedCFTypeForKeyInXPCDictionary(a1, a2, v7);
LABEL_9:
    CFRelease(v8);
    return;
  }
  if (v6 == CFBagGetTypeID())
  {
    MutableSetFromBag = createMutableSetFromBag(0, 0, (const __CFBag *)cf);
    if (!MutableSetFromBag) {
      return;
    }
    CFArrayRef v8 = MutableSetFromBag;
    CFArrayRef v10 = copyValuesFromSet(0, MutableSetFromBag);
    if (v10)
    {
      CFArrayRef v11 = v10;
      setSupportedCFTypeForKeyInXPCDictionary(a1, a2, v10);
      CFRelease(v11);
    }
    goto LABEL_9;
  }

  setSupportedCFTypeForKeyInXPCDictionary(a1, a2, cf);
}

uint64_t SFNodeResolve(uint64_t a1, const void *a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, long long *a7)
{
  uint64_t v10 = NetworkNode::resolve(*(void *)(a1 + 112), a2, a3, a4, a5, (uint64_t)_SFNodeResolveCallBack, (const void *)a1);
  if (!v10)
  {
    if (*(void *)(a1 + 40))
    {
      CFArrayRef v11 = *(void (**)(void))(a1 + 56);
      if (v11) {
        v11();
      }
    }
    *(void *)(a1 + 16) = a6;
    long long v12 = *a7;
    long long v13 = a7[1];
    *(void *)(a1 + 64) = *((void *)a7 + 4);
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v13;
    if (*(void *)(a1 + 40))
    {
      CFStringRef v14 = *(void (**)(void))(a1 + 48);
      if (v14) {
        v14();
      }
    }
  }
  return v10;
}

uint64_t _SFNodeResolveCallBack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CFStringRef v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(a5 + 16);
  if (v5) {
    return v5(a5, a2, a3, a4, *(void *)(a5 + 40));
  }
  return result;
}

uint64_t SFNodeEject(uint64_t a1, const void *a2, uint64_t a3, const void *a4, const void *a5, uint64_t a6, long long *a7)
{
  uint64_t v10 = NetworkNode::eject(*(void *)(a1 + 112), a2, a3, a4, a5, (uint64_t)_SFNodeEjectCallBack, (const void *)a1);
  if (!v10)
  {
    if (*(void *)(a1 + 80))
    {
      CFArrayRef v11 = *(void (**)(void))(a1 + 96);
      if (v11) {
        v11();
      }
    }
    *(void *)(a1 + 24) = a6;
    long long v12 = *a7;
    long long v13 = a7[1];
    *(void *)(a1 + 104) = *((void *)a7 + 4);
    *(_OWORD *)(a1 + 72) = v12;
    *(_OWORD *)(a1 + 88) = v13;
    if (*(void *)(a1 + 80))
    {
      CFStringRef v14 = *(void (**)(void))(a1 + 88);
      if (v14) {
        v14();
      }
    }
  }
  return v10;
}

uint64_t _SFNodeEjectCallBack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CFStringRef v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(a5 + 24);
  if (v5) {
    return v5(a5, a2, a3, a4, *(void *)(a5 + 80));
  }
  return result;
}

void SFNodeCancel(uint64_t a1)
{
}

uint64_t SFNodeSetDisplayName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setDisplayName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetRealName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setRealName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetContactIdentifier(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setContactIdentifier(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetContactIdentifiers(uint64_t a1, const __CFSet *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setContactIdentifiers(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetMediaCapabilities(uint64_t a1, const __CFData *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setMediaCapabilities(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetModel(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setModel(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetModelIdentifier(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setModelIdentifier(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetColor(uint64_t a1, const __CFArray *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setColor(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetSiblingNodes(uint64_t a1, const __CFArray *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setSiblingNodes(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetParentIdentifier(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setParentIdentifier(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetDiskType(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setDiskType(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetServiceName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setServiceName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetNetbiosName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setNetbiosName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetSecondaryName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setSecondaryName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetDomain(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setDomain(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeAddDomain(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::addDomain(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeRemoveDomain(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::removeDomain(*(CFMutableSetRef **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetWorkgroup(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setWorkgroup(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetWorkgroups(uint64_t a1, const __CFSet *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setWorkgroups(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeAddWorkgroup(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::addWorkgroup(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeRemoveWorkgroup(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::removeWorkgroup(*(CFMutableSetRef **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeAddKind(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::addKind(*(CFMutableSetRef **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetKinds(uint64_t a1, const __CFSet *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setKinds(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeRemoveKind(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::removeKind(*(CFMutableSetRef **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeAddBonjourProtocol(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::addBonjourProtocol(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeRemoveBonjourProtocol(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::removeBonjourProtocol(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetBonjourProtocols(uint64_t a1, const __CFBag *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setBonjourProtocols(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetHostName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setHostName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetComputerName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setComputerName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetPortNumber(uint64_t a1, int a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setPortNumber(*(void *)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetSelectionReason(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setSelectionReason(*(void *)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetAccessRights(uint64_t a1, const void *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setAccessRights(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetRangingData(uint64_t a1, const void *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setRangingData(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetPath(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setPath(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetURL(uint64_t a1, const __CFURL *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setURL(*(CFURLRef **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetUserName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setUserName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetPassword(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setPassword(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetFlags(uint64_t a1, const void *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setFlags(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetRapportFlags(uint64_t a1, const void *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setRapportFlags(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetAppleID(uint64_t a1, const void *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setAppleID(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetTransportBundleID(uint64_t a1, const void *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setTransportBundleID(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetHandles(uint64_t a1, const __CFSet *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setHandles(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetSupportedMedia(uint64_t a1, uint64_t a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setSupportedMedia(*(void *)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetConnectionState(uint64_t a1, int a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setConnectionState(*(void *)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetMountPoint(uint64_t a1, const void *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setMountPoint(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetSharePointBrowserID(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setSharePointBrowserID(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetIconData(uint64_t a1, const __CFData *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setIconData(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetIconHash(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setIconHash(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetEmailHash(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setEmailHash(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetPhoneHash(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setPhoneHash(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetNickName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setNickName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetFirstName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setFirstName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetLastName(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setLastName(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeSetIDSDeviceIdentifier(uint64_t a1, const __CFString *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  NetworkNode::setIDSDeviceIdentifier(*(NetworkNode **)(a1 + 112), a2);
  CFArrayRef v4 = (pthread_mutex_t *)(*(void *)(a1 + 112) + 464);

  return pthread_mutex_unlock(v4);
}

uint64_t SFNodeIsRoot(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t isRoot = NetworkNode::isRoot(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return isRoot;
}

BOOL SFNodeIsNeighborhood(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL isNeighborhood = NetworkNode::isNeighborhood(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return isNeighborhood;
}

BOOL SFNodeIsServer(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL isServer = NetworkNode::isServer(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return isServer;
}

BOOL SFNodeIsSharePoint(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL isSharePoint = NetworkNode::isSharePoint(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return isSharePoint;
}

BOOL SFNodeIsContainer(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL isContainer = NetworkNode::isContainer(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return isContainer;
}

BOOL SFNodeIsMounted(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL isMounted = NetworkNode::isMounted(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return isMounted;
}

CFNumberRef SFNodeIsDropBox(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  CFNumberRef v2 = NetworkNode::isDropBox(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

uint64_t SFNodeIsRemovable(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t isRemovable = NetworkNode::isRemovable(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return isRemovable;
}

uint64_t SFNodeIsAutoFS()
{
  return 0;
}

CFIndex SFNodeSupportsFileSharing(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  CFIndex v2 = NetworkNode::supportsFileSharing(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

uint64_t SFNodeSupportsScreenSharing(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t v2 = NetworkNode::supportsScreenSharing(*(CFSetRef **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

CFNumberRef SFNodeSupportsAskToUse(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  CFNumberRef v2 = NetworkNode::supportsAskToUse(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

CFNumberRef SFNodeSupportsPasses(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  CFNumberRef v2 = NetworkNode::supportsPasses(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

BOOL SFNodeSupportsFMF(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL v2 = NetworkNode::supportsFMF(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

CFNumberRef SFNodeSupportsUWB(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  CFNumberRef v2 = NetworkNode::supportsUWB(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

BOOL SFNodeSupportsIris(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL v2 = NetworkNode::supportsIris(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

CFNumberRef SFNodeSupportsMixedTypes(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  CFNumberRef v2 = NetworkNode::supportsMixedTypes(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

CFNumberRef SFNodeSupportsCredentials(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  CFNumberRef v2 = NetworkNode::supportsCredentials(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return v2;
}

BOOL SFNodeCanAcceptDrop(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  BOOL canAcceptDrop = NetworkNode::canAcceptDrop(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return canAcceptDrop;
}

uint64_t SFNodeGetConnectionState(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(unsigned int *)(v2 + 456);
  pthread_mutex_unlock((pthread_mutex_t *)(v2 + 464));
  return v3;
}

uint64_t SFNodeGetDisplayName(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(v2 + 88);
  pthread_mutex_unlock((pthread_mutex_t *)(v2 + 464));
  return v3;
}

uint64_t SFNodeGetPriority(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t Priority = NetworkNode::getPriority(*(NetworkNode **)(a1 + 112));
  pthread_mutex_unlock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  return Priority;
}

uint64_t SFNodeGetPortNumber(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(unsigned int *)(v2 + 424);
  pthread_mutex_unlock((pthread_mutex_t *)(v2 + 464));
  return v3;
}

uint64_t SFNodeGetSelectionReason(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(v2 + 432);
  pthread_mutex_unlock((pthread_mutex_t *)(v2 + 464));
  return v3;
}

uint64_t SFNodeGetSupportedMedia(uint64_t a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*(void *)(a1 + 112) + 464));
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(v2 + 448);
  pthread_mutex_unlock((pthread_mutex_t *)(v2 + 464));
  return v3;
}

const void *SFNodeCopyURLForProtocol(uint64_t a1, const __CFString *a2)
{
  return NetworkNode::copyURLForProtocol(*(NetworkNode **)(a1 + 112), a2);
}

CFStringRef SFNodeCopyDisplayName(uint64_t a1)
{
  return NetworkNode::copyDisplayName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyKindString(uint64_t a1)
{
  return NetworkNode::copyKindString(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyDiskType(uint64_t a1)
{
  return NetworkNode::copyDiskType(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyTypeIdentifier(uint64_t a1)
{
  return NetworkNode::copyTypeIdentifier(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyParentIdentifier(uint64_t a1)
{
  return NetworkNode::copyParentIdentifier(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyPassword(uint64_t a1)
{
  return NetworkNode::copyPassword(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyModel(uint64_t a1)
{
  return NetworkNode::copyModel(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyModelIdentifier(uint64_t a1)
{
  return NetworkNode::copyModelIdentifier(*(NetworkNode **)(a1 + 112));
}

CFArrayRef SFNodeCopyColor(uint64_t a1)
{
  return NetworkNode::copyColor(*(NetworkNode **)(a1 + 112));
}

CFArrayRef SFNodeCopySiblingNodes(uint64_t a1)
{
  return NetworkNode::copySiblingNodes(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyContactIdentifier(uint64_t a1)
{
  return NetworkNode::copyContactIdentifier(*(NetworkNode **)(a1 + 112));
}

CFSetRef SFNodeCopyContactIdentifiers(uint64_t a1)
{
  return NetworkNode::copyContactIdentifiers(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyRealName(uint64_t a1)
{
  return NetworkNode::copyRealName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyServiceName(uint64_t a1)
{
  return NetworkNode::copyServiceName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyNetbiosName(uint64_t a1)
{
  return NetworkNode::copyNetbiosName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopySecondaryName(uint64_t a1)
{
  return NetworkNode::copySecondaryName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyDomain(uint64_t a1)
{
  return NetworkNode::copyDomain(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyWorkgroup(uint64_t a1)
{
  return NetworkNode::copyWorkgroup(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyHostName(uint64_t a1)
{
  return NetworkNode::copyHostName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyComputerName(uint64_t a1)
{
  return NetworkNode::copyComputerName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyUserName(uint64_t a1)
{
  return NetworkNode::copyUserName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyEmailHash(uint64_t a1)
{
  return NetworkNode::copyEmailHash(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyPhoneHash(uint64_t a1)
{
  return NetworkNode::copyPhoneHash(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyIconHash(uint64_t a1)
{
  return NetworkNode::copyIconHash(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyNickName(uint64_t a1)
{
  return NetworkNode::copyNickName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyFirstName(uint64_t a1)
{
  return NetworkNode::copyFirstName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyLastName(uint64_t a1)
{
  return NetworkNode::copyLastName(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyPath(uint64_t a1)
{
  return NetworkNode::copyPath(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyAppleID(uint64_t a1)
{
  return NetworkNode::copyAppleID(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyTransportBundleID(uint64_t a1)
{
  return NetworkNode::copyTransportBundleID(*(NetworkNode **)(a1 + 112));
}

CFSetRef SFNodeCopyHandles(uint64_t a1)
{
  return NetworkNode::copyHandles(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopySharePointBrowserID(uint64_t a1)
{
  return NetworkNode::copySharePointBrowserID(*(NetworkNode **)(a1 + 112));
}

CFSetRef SFNodeCopyDomains(uint64_t a1)
{
  return NetworkNode::copyDomains(*(NetworkNode **)(a1 + 112));
}

CFSetRef SFNodeCopyWorkgroups(uint64_t a1)
{
  return NetworkNode::copyWorkgroups(*(NetworkNode **)(a1 + 112));
}

CFSetRef SFNodeCopyKinds(uint64_t a1)
{
  return NetworkNode::copyKinds(*(NetworkNode **)(a1 + 112));
}

CFBagRef SFNodeCopyBonjourProtocols(uint64_t a1)
{
  return NetworkNode::copyBonjourProtocols(*(NetworkNode **)(a1 + 112));
}

CFTypeRef SFNodeCopyFlags(uint64_t a1)
{
  return NetworkNode::copyFlags(*(NetworkNode **)(a1 + 112));
}

CFTypeRef SFNodeCopyRapportFlags(uint64_t a1)
{
  return NetworkNode::copyRapportFlags(*(NetworkNode **)(a1 + 112));
}

CFTypeRef SFNodeCopyAccessRights(uint64_t a1)
{
  return NetworkNode::copyAccessRights(*(NetworkNode **)(a1 + 112));
}

CFTypeRef SFNodeCopyRangingData(uint64_t a1)
{
  return NetworkNode::copyRangingData(*(NetworkNode **)(a1 + 112));
}

CFArrayRef SFNodeCopyProtocols(uint64_t a1)
{
  return NetworkNode::copyProtocols(*(CFSetRef **)(a1 + 112));
}

void *SFNodeCopyURL(uint64_t a1)
{
  return NetworkNode::copyURL(*(NetworkNode **)(a1 + 112));
}

CFDictionaryRef SFNodeCopyURLs(uint64_t a1)
{
  return NetworkNode::copyURLs(*(NetworkNode **)(a1 + 112));
}

CFTypeRef SFNodeCopyMountPoint(uint64_t a1)
{
  return NetworkNode::copyMountPoint(*(NetworkNode **)(a1 + 112));
}

uint64_t SFNodeGetIconData(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 112) + 16);
}

CFDataRef SFNodeCopyIconData(uint64_t a1)
{
  return NetworkNode::copyIconData(*(NetworkNode **)(a1 + 112));
}

CFDataRef SFNodeCopyMediaCapabilities(uint64_t a1)
{
  return NetworkNode::copyMediaCapabilities(*(NetworkNode **)(a1 + 112));
}

CFStringRef SFNodeCopyIDSDeviceIdentifier(uint64_t a1)
{
  return NetworkNode::copyIDSDeviceIdentifier(*(NetworkNode **)(a1 + 112));
}

NetworkNode *_SFNodeFinalize(__SFNode *a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  if (*((void *)a1 + 5))
  {
    uint64_t v2 = (void (*)(void))*((void *)a1 + 7);
    if (v2) {
      v2();
    }
  }
  if (*((void *)a1 + 10))
  {
    uint64_t v3 = (void (*)(void))*((void *)a1 + 12);
    if (v3) {
      v3();
    }
  }
  pthread_mutex_unlock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  uint64_t result = (NetworkNode *)*((void *)a1 + 14);
  if (result)
  {
    NetworkNode::~NetworkNode(result);
    JUMPOUT(0x1A626B880);
  }
  return result;
}

uint64_t _SFNodeEqual(__SFNode *a1, __SFNode *a2)
{
  pthread_mutex_lock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  pthread_mutex_lock((pthread_mutex_t *)(*((void *)a2 + 14) + 464));
  if (!CFEqual(*(CFTypeRef *)(*((void *)a1 + 14) + 256), *(CFTypeRef *)(*((void *)a2 + 14) + 256))) {
    goto LABEL_28;
  }
  CFSetRef v4 = *(const __CFSet **)(*((void *)a1 + 14) + 336);
  CFSetRef v5 = *(const __CFSet **)(*((void *)a2 + 14) + 336);
  int v6 = CFSetContainsValue(v4, @"Bonjour");
  int v7 = CFSetContainsValue(v5, @"Bonjour");
  if (v6) {
    BOOL v8 = v7 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8
    || !CFEqual(*(CFTypeRef *)(*((void *)a1 + 14) + 272), *(CFTypeRef *)(*((void *)a2 + 14) + 272))
    || (uint64_t v9 = CFEqual(*(CFTypeRef *)(*((void *)a1 + 14) + 96), *(CFTypeRef *)(*((void *)a2 + 14) + 96)),
        !v9))
  {
    int v10 = CFSetContainsValue(v4, @"Windows");
    int v11 = CFSetContainsValue(v5, @"Windows");
    BOOL v12 = !v10 || v11 == 0;
    if (v12
      || !CFEqual(*(CFTypeRef *)(*((void *)a1 + 14) + 192), *(CFTypeRef *)(*((void *)a2 + 14) + 192))
      || (uint64_t v9 = CFEqual(*(CFTypeRef *)(*((void *)a1 + 14) + 296), *(CFTypeRef *)(*((void *)a2 + 14) + 296)),
          !v9))
    {
      if (CFSetContainsValue(v4, @"All") && CFSetContainsValue(v5, @"All")
        || CFSetContainsValue(v4, @"Root") && CFSetContainsValue(v5, @"Root")
        || CFSetContainsValue(v4, @"Domain") && CFSetContainsValue(v5, @"Domain")
        || CFSetContainsValue(v4, @"Workgroup") && CFSetContainsValue(v5, @"Workgroup")
        || CFSetContainsValue(v4, @"Classroom") && CFSetContainsValue(v5, @"Classroom")
        || CFSetContainsValue(v4, @"Suggestion") && CFSetContainsValue(v5, @"Suggestion")
        || CFSetContainsValue(v4, @"Rapport") && CFSetContainsValue(v5, @"Rapport"))
      {
        goto LABEL_41;
      }
LABEL_28:
      long long v13 = (const void *)**((void **)a1 + 14);
      CFStringRef v14 = (const void *)**((void **)a2 + 14);
      if (v13) {
        BOOL v15 = v14 == 0;
      }
      else {
        BOOL v15 = 1;
      }
      if (!v15 && CFEqual(v13, v14))
      {
        CFSetRef v16 = *(const __CFSet **)(*((void *)a1 + 14) + 336);
        CFSetRef v17 = *(const __CFSet **)(*((void *)a2 + 14) + 336);
        if (CFSetContainsValue(v16, @"Connected") && CFSetContainsValue(v17, @"Connected")
          || CFSetContainsValue(v16, @"Managed") && CFSetContainsValue(v17, @"Managed")
          || CFSetContainsValue(v16, @"Printer") && CFSetContainsValue(v17, @"Printer")
          || CFSetContainsValue(v16, @"Recent") && CFSetContainsValue(v17, @"Recent"))
        {
LABEL_41:
          uint64_t v9 = 1;
          goto LABEL_45;
        }
        if (CFSetContainsValue(v16, @"Volume"))
        {
          uint64_t v9 = CFSetContainsValue(v17, @"Volume") != 0;
          goto LABEL_45;
        }
      }
      uint64_t v9 = 0;
    }
  }
LABEL_45:
  pthread_mutex_unlock((pthread_mutex_t *)(*((void *)a2 + 14) + 464));
  pthread_mutex_unlock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  return v9;
}

CFHashCode _SFNodeHash(__SFNode *a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  uint64_t v2 = *((void *)a1 + 14);
  CFSetRef v3 = *(const __CFSet **)(v2 + 336);
  CFStringRef v4 = *(CFStringRef *)(v2 + 256);
  CFAllocatorRef v5 = CFGetAllocator(a1);
  if (CFSetContainsValue(v3, @"Bonjour"))
  {
    CFStringRef v12 = *(CFStringRef *)(*((void *)a1 + 14) + 272);
    long long v13 = @"Bonjour";
LABEL_3:
    CFStringRef v6 = CFStringCreateWithFormat(v5, 0, @"%@%@", v12, v13);
    goto LABEL_6;
  }
  if (CFSetContainsValue(v3, @"Windows"))
  {
    CFStringRef v6 = CFStringCreateWithFormat(v5, 0, @"%@%@%@", *(void *)(*((void *)a1 + 14) + 192), *(void *)(*((void *)a1 + 14) + 296), @"Windows");
  }
  else
  {
    int v10 = @"Root";
    if (CFSetContainsValue(v3, @"Root")
      || (int v10 = @"Domain", CFSetContainsValue(v3, @"Domain"))
      || (int v10 = @"Workgroup", CFSetContainsValue(v3, @"Workgroup")))
    {
      CFStringRef v12 = v4;
      long long v13 = v10;
      goto LABEL_3;
    }
    CFURLRef v11 = (const __CFURL *)**((void **)a1 + 14);
    if (v11) {
      CFStringRef v4 = CFURLGetString(v11);
    }
    CFStringRef v6 = CFStringCreateWithFormat(v5, 0, @"%@", v4);
  }
LABEL_6:
  CFStringRef v7 = v6;
  if (v6)
  {
    CFHashCode v8 = CFHash(v6);
    CFRelease(v7);
  }
  else
  {
    CFHashCode v8 = 0;
  }
  pthread_mutex_unlock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  return v8;
}

CFStringRef _SFNodeCopyDebugDesc(__SFNode *a1)
{
  pthread_mutex_lock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  uint64_t v2 = (const __CFURL **)*((void *)a1 + 14);
  CFURLRef v3 = *v2;
  CFSetRef v4 = v2[42];
  BOOL isMounted = NetworkNode::isMounted((NetworkNode *)v2);
  CFStringRef v6 = (void *)*((void *)a1 + 14);
  uint64_t v7 = v6[12];
  uint64_t v8 = v6[32];
  uint64_t v9 = v6[33];
  CFURLRef v10 = (const __CFURL *)v6[1];
  if (v10)
  {
    CFStringRef v23 = CFURLGetString(v10);
    CFStringRef v6 = (void *)*((void *)a1 + 14);
  }
  else
  {
    CFStringRef v23 = 0;
  }
  uint64_t v11 = v6[37];
  uint64_t v25 = v6[11];
  if (v3) {
    CFStringRef v24 = CFURLGetString(v3);
  }
  else {
    CFStringRef v24 = 0;
  }
  int v12 = CFSetContainsValue(v4, @"Person");
  int v13 = CFSetContainsValue(v4, @"Bonjour");
  int v14 = v13;
  if (v12)
  {
    int v15 = CFSetContainsValue(v4, @"Rapport");
    CFSetRef v16 = "Rapport";
    if (!v15) {
      CFSetRef v16 = "?";
    }
    if (v14) {
      CFSetRef v17 = "Bonjour";
    }
    else {
      CFSetRef v17 = v16;
    }
    CFMutableStringRef cf = CFStringCreateMutable(0, 0);
    CFAppendPrintF();
    CFStringRef v18 = CFStringCreateWithFormat(0, 0, @"<SFNode {%@,id=%@,dev=%@,t=%s,sib=%@}>", v25, v8, v9, v17, cf);
    CFRelease(cf);
  }
  else
  {
    if (v13)
    {
      CFStringRef v19 = "YES";
      if (!isMounted) {
        CFStringRef v19 = "NO";
      }
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{%@, domain = %@, mounted = %s}", a1, v25, v7, v19);
    }
    else if (CFSetContainsValue(v4, @"Windows"))
    {
      CFStringRef v21 = "YES";
      if (!isMounted) {
        CFStringRef v21 = "NO";
      }
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{%@, workgroup = %@, comment = %@, mounted = %s}", a1, v25, v11, v9, v21);
    }
    else if (CFSetContainsValue(v4, @"Domain"))
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{domain = %@}", a1, v8);
    }
    else if (CFSetContainsValue(v4, @"Workgroup"))
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{workgroup = %@}", a1, v25);
    }
    else if (CFSetContainsValue(v4, @"Volume"))
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{volume = %@, url = %@, mount = %@}", a1, v25, v24, v23);
    }
    else if (CFSetContainsValue(v4, @"Connected"))
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{connected = %@, url = %@, mount = %@}", a1, v25, v24, v23);
    }
    else if (CFSetContainsValue(v4, @"Printer"))
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{printer = %@, url = %@}", a1, v25, v24);
    }
    else if (CFSetContainsValue(v4, @"Recent"))
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{recent = %@, url = %@}", a1, v25, v24);
    }
    else if (CFSetContainsValue(v4, @"Managed"))
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{managed = %@, url = %@}", a1, v25, v24);
    }
    else
    {
      CFStringRef v20 = CFStringCreateWithFormat(0, 0, @"<SFNode %p>{unknown = %@}", a1, v25);
    }
    CFStringRef v18 = v20;
  }
  pthread_mutex_unlock((pthread_mutex_t *)(*((void *)a1 + 14) + 464));
  return v18;
}

void setSupportedCFTypeForKeyInXPCDictionary(void *a1, const char *a2, const void *a3)
{
  CFAllocatorRef v5 = (void *)_CFXPCCreateXPCObjectFromCFObject();
  if (v5)
  {
    CFStringRef v6 = v5;
    xpc_dictionary_set_value(a1, a2, v5);
    xpc_release(v6);
  }
}

void sub_1A53AC45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53ACC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCKContainerIDClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKContainerID");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKContainerIDClass_block_invoke_cold_1();
  }
  getCKContainerIDClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void CloudKitLibrary()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v0[0] = 0;
  if (!CloudKitLibraryCore_frameworkLibrary)
  {
    v0[1] = (void *)MEMORY[0x1E4F143A8];
    v0[2] = (void *)3221225472;
    v0[3] = __CloudKitLibraryCore_block_invoke;
    v0[4] = &__block_descriptor_40_e5_v8__0l;
    v0[5] = v0;
    long long v1 = xmmword_1E5BBC018;
    uint64_t v2 = 0;
    CloudKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!CloudKitLibraryCore_frameworkLibrary) {
    CloudKitLibrary_cold_1(v0);
  }
  if (v0[0]) {
    free(v0[0]);
  }
}

uint64_t __CloudKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CloudKitLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getCKShareClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKShare");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKShareClass_block_invoke_cold_1();
  }
  getCKShareClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKContainerSetupInfoClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKContainerSetupInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKContainerSetupInfoClass_block_invoke_cold_1();
  }
  getCKContainerSetupInfoClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t SFOperationGetTypeID()
{
  if (SFOperationGetTypeID_once != -1) {
    dispatch_once(&SFOperationGetTypeID_once, &__block_literal_global_1);
  }
  return _kSFOperationTypeID;
}

void *__SFOperationGetTypeID_block_invoke()
{
  Class result = malloc_type_calloc(1uLL, 0x60uLL, 0x10D00408820D60FuLL);
  _kSFOperationClass = (uint64_t)result;
  if (result)
  {
    *Class result = 0;
    result[1] = "SFOperation";
    void result[4] = _SFOperationFinalize;
    result[5] = _SFOperationEqual;
    result[6] = _SFOperationHash;
    result[8] = _SFOperationCopyDebugDesc;
    Class result = (void *)_CFRuntimeRegisterClass();
    _kSFOperationCFTypeID TypeID = (uint64_t)result;
  }
  return result;
}

void *SFOperationCreate(const __CFAllocator *a1, const void *a2)
{
  CFSetRef v4 = framework_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFOperationCreate_cold_1();
  }
  return _SFOperationCreateInternal(a1, a2, 0);
}

void *_SFOperationCreateInternal(const __CFAllocator *a1, const void *a2, uint64_t a3)
{
  CFStringRef v6 = framework_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    _SFOperationCreateInternal_cold_1();
  }
  if (SFOperationGetTypeID_once != -1) {
    dispatch_once(&SFOperationGetTypeID_once, &__block_literal_global_1);
  }
  if (!_kSFOperationTypeID) {
    return 0;
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  uint64_t v8 = (void *)Instance;
  if (Instance)
  {
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 160) = 0u;
    *(_OWORD *)(Instance + 176) = 0u;
    *(_OWORD *)(Instance + 128) = 0u;
    *(_OWORD *)(Instance + 144) = 0u;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 112) = 0u;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    pthread_mutex_init((pthread_mutex_t *)(Instance + 64), 0);
    v8[6] = CFRetain(a2);
    v8[4] = CFDictionaryCreateMutable(a1, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
    if (a3) {
      uint64_t Connection = _SFOperationCreateConnection(v8, a3);
    }
    else {
      uint64_t Connection = 0;
    }
    v8[23] = Connection;
  }
  return v8;
}

uint64_t SFOperationSetClient(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  CFStringRef v6 = framework_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    int v12 = 138412802;
    uint64_t v13 = a1;
    __int16 v14 = 2048;
    uint64_t v15 = a2;
    __int16 v16 = 2048;
    CFSetRef v17 = a3;
    _os_log_debug_impl(&dword_1A5389000, v6, OS_LOG_TYPE_DEBUG, "SFOperationSetClient (%@, callback = %p, context = %p)", (uint8_t *)&v12, 0x20u);
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 64));
  if (*(void *)(a1 + 144))
  {
    uint64_t v7 = *(void (**)(void))(a1 + 160);
    if (v7) {
      v7();
    }
  }
  *(void *)(a1 + 128) = a2;
  long long v8 = *a3;
  long long v9 = a3[1];
  *(void *)(a1 + 168) = *((void *)a3 + 4);
  *(_OWORD *)(a1 + 136) = v8;
  *(_OWORD *)(a1 + 152) = v9;
  if (*(void *)(a1 + 144))
  {
    CFURLRef v10 = *(uint64_t (**)(void))(a1 + 152);
    if (v10) {
      *(void *)(a1 + 144) = v10();
    }
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 64));
}

uint64_t SFOperationSetDispatchQueue(uint64_t a1, NSObject *a2)
{
  CFSetRef v4 = framework_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFOperationSetDispatchQueue_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 64));
  CFAllocatorRef v5 = *(NSObject **)(a1 + 56);
  if (v5 != a2)
  {
    if (v5) {
      dispatch_release(v5);
    }
    if (a2) {
      dispatch_retain(a2);
    }
    *(void *)(a1 + 56) = a2;
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 64));
}

uint64_t SFOperationSetProperty(pthread_mutex_t *a1, const void *a2, const void *a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  CFStringRef v6 = framework_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    int v8 = 138412802;
    long long v9 = a1;
    __int16 v10 = 2112;
    uint64_t v11 = a2;
    __int16 v12 = 2112;
    uint64_t v13 = a3;
    _os_log_debug_impl(&dword_1A5389000, v6, OS_LOG_TYPE_DEBUG, "SFOperationSetProperty (%@, name = %@, xpc_object_t value = %@)", (uint8_t *)&v8, 0x20u);
  }
  pthread_mutex_lock(a1 + 1);
  _SFOperationSetProperty((uint64_t)a1, a2, a3);
  return pthread_mutex_unlock(a1 + 1);
}

uint64_t _SFOperationSetProperty(uint64_t a1, const void *a2, const void *a3)
{
  setOrRemoveValue(*(CFMutableDictionaryRef *)(a1 + 32), a2, a3);
  if (*(void *)(a1 + 184))
  {
    CFStringRef v6 = _os_activity_create(&dword_1A5389000, "Sharing/SFOperation/setProperty", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
    v20.opaque[0] = 0;
    v20.opaque[1] = 0;
    os_activity_scope_enter(v6, &v20);
    os_release(v6);
    xpc_object_t v7 = xpc_dictionary_create(0, 0, 0);
    int v8 = (void *)_CFXPCCreateXPCObjectFromCFObject();
    xpc_dictionary_set_value(v7, "Name", v8);
    if (a3)
    {
      if (CFEqual(a2, @"Node"))
      {
        uint64_t v9 = (uint64_t)_SFNodeXPCObjectCreate((uint64_t)a3);
        goto LABEL_5;
      }
      if (CFEqual(a2, @"FileIcon") || CFEqual(a2, @"SmallFileIcon"))
      {
        ImageDataWithSize = createImageDataWithSize((uint64_t)a3, 0x20000);
        if (!ImageDataWithSize) {
          goto LABEL_13;
        }
        CFArrayRef Mutable = ImageDataWithSize;
      }
      else if (CFEqual(a2, @"Items"))
      {
        CFAllocatorRef v14 = CFGetAllocator((CFTypeRef)a1);
        CFArrayRef Mutable = CFDictionaryCreateMutable(v14, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        CFDictionarySetValue(Mutable, @"Items", a3);
        CFIndex Count = CFArrayGetCount((CFArrayRef)a3);
        if (Count >= 1)
        {
          CFIndex v16 = Count;
          for (CFIndex i = 0; i != v16; ++i)
          {
            CFURLRef ValueAtIndex = (const __CFURL *)CFArrayGetValueAtIndex((CFArrayRef)a3, i);
            if (_CFURLIsFileURL()) {
              _SFOperationAddSandboxExtensionForFileURL(ValueAtIndex, Mutable);
            }
          }
        }
      }
      else
      {
        if (!CFEqual(a2, @"DestinationURL"))
        {
          uint64_t v9 = _CFXPCCreateXPCObjectFromCFObject();
LABEL_5:
          __int16 v10 = (void *)v9;
          if (!v9) {
            goto LABEL_13;
          }
          goto LABEL_12;
        }
        CFAllocatorRef v19 = CFGetAllocator((CFTypeRef)a1);
        CFArrayRef Mutable = CFDictionaryCreateMutable(v19, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
        CFDictionarySetValue(Mutable, @"DestinationURL", a3);
        _SFOperationAddSandboxExtensionForFileURL((const __CFURL *)a3, Mutable);
      }
      __int16 v10 = (void *)_CFXPCCreateXPCObjectFromCFObject();
      CFRelease(Mutable);
      if (v10)
      {
LABEL_12:
        xpc_dictionary_set_value(v7, "Value", v10);
        xpc_release(v10);
      }
    }
LABEL_13:
    xpc_dictionary_set_string(v7, "Object", "Operation");
    xpc_dictionary_set_string(v7, "Function", "SetProperty");
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 184), v7);
    xpc_release(v8);
    xpc_release(v7);
    os_activity_scope_leave(&v20);
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 64));
}

const void *SFOperationCopyProperty(uint64_t a1, const void *a2)
{
  CFSetRef v4 = framework_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    SFOperationCopyProperty_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 64));
  if (!CFEqual(a2, @"Kind"))
  {
    uint64_t Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 32), a2);
    if (!Value) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t Value = *(const void **)(a1 + 48);
  if (Value) {
LABEL_5:
  }
    CFRetain(Value);
LABEL_6:
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 64));
  return Value;
}

uint64_t SFOperationResume(uint64_t a1)
{
  uint64_t v2 = framework_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    SFOperationResume_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 64));
  if (*(void *)(a1 + 184)) {
    goto LABEL_10;
  }
  *(void *)(a1 + 184) = _SFOperationCreateConnection(a1, 0);
  CFAllocatorRef v3 = CFGetAllocator((CFTypeRef)a1);
  CFArrayRef v4 = copyKeysFromDictionary(v3, *(CFDictionaryRef *)(a1 + 32));
  if (v4)
  {
    CFArrayRef v5 = v4;
    CFIndex Count = CFArrayGetCount(v4);
    if (Count >= 1)
    {
      CFIndex v7 = Count;
      for (CFIndex i = 0; i != v7; ++i)
      {
        CFURLRef ValueAtIndex = CFArrayGetValueAtIndex(v5, i);
        uint64_t Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 32), ValueAtIndex);
        _SFOperationSetProperty(a1, ValueAtIndex, Value);
      }
    }
    CFRelease(v5);
  }
  if (*(void *)(a1 + 184))
  {
LABEL_10:
    uint64_t v11 = _os_activity_create(&dword_1A5389000, "Sharing/SFOperation/resume", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
    v20.opaque[0] = 0;
    v20.opaque[1] = 0;
    os_activity_scope_enter(v11, &v20);
    os_release(v11);
    xpc_object_t v12 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v12, "Object", "Operation");
    xpc_dictionary_set_string(v12, "Function", "Resume");
    xpc_connection_send_message(*(xpc_connection_t *)(a1 + 184), v12);
    if (!*(void *)(a1 + 40))
    {
      uint64_t v13 = (__CFRunLoop *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 32), @"RunLoop");
      CFStringRef v14 = (const __CFString *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 32), @"RunLoopMode");
      if (v13)
      {
        CFStringRef v15 = v14;
        if (v14)
        {
          context.version = 0;
          memset(&context.retain, 0, 24);
          context.info = (void *)a1;
          CFAllocatorRef v16 = CFGetAllocator((CFTypeRef)a1);
          CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
          uint64_t v18 = CFRunLoopTimerCreate(v16, Current + 1.0e30, 1.0e30, 0, 0, (CFRunLoopTimerCallBack)dummyCallBack, &context);
          *(void *)(a1 + 40) = v18;
          CFRunLoopAddTimer(v13, v18, v15);
        }
      }
    }
    xpc_release(v12);
    os_activity_scope_leave(&v20);
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 64));
}

_xpc_connection_s *_SFOperationCreateConnection(void *a1, uint64_t a2)
{
  CFArrayRef v4 = _os_activity_create(&dword_1A5389000, "Sharing/SFOperation/createConnection", MEMORY[0x1E4F144F0], OS_ACTIVITY_FLAG_DEFAULT);
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  os_activity_scope_enter(v4, &state);
  os_release(v4);
  xpc_object_t v5 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v5, "Object", "Operation");
  xpc_dictionary_set_string(v5, "Function", "Create");
  if (a2)
  {
    CFStringRef v6 = (void *)_CFXPCCreateXPCObjectFromCFObject();
    xpc_dictionary_set_value(v5, "Operation", v6);
    xpc_release(v6);
  }
  CFIndex v7 = (void *)_CFXPCCreateXPCObjectFromCFObject();
  xpc_dictionary_set_value(v5, "Kind", v7);
  if (a1[7]) {
    int v8 = a1[7];
  }
  else {
    int v8 = MEMORY[0x1E4F14428];
  }
  mach_service = xpc_connection_create_mach_service("com.apple.sharingd", v8, 0);
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 0x40000000;
  v12[2] = ___SFOperationCreateConnection_block_invoke;
  void v12[3] = &__block_descriptor_tmp_315;
  v12[4] = a1;
  v12[5] = mach_service;
  xpc_connection_set_event_handler(mach_service, v12);
  xpc_connection_send_message(mach_service, v5);
  __int16 v10 = (void *)CFRetain(a1);
  xpc_connection_set_context(mach_service, v10);
  xpc_connection_set_finalizer_f(mach_service, MEMORY[0x1E4F1C278]);
  xpc_connection_resume(mach_service);
  xpc_release(v7);
  xpc_release(v5);
  os_activity_scope_leave(&state);
  return mach_service;
}

uint64_t SFOperationCancel(uint64_t a1)
{
  uint64_t v2 = framework_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    SFOperationCancel_cold_1();
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 64));
  CFAllocatorRef v3 = *(__CFRunLoopTimer **)(a1 + 40);
  if (v3)
  {
    CFRunLoopTimerInvalidate(v3);
    CFRelease(*(CFTypeRef *)(a1 + 40));
    *(void *)(a1 + 40) = 0;
  }
  if (!*(unsigned char *)(a1 + 16))
  {
    *(unsigned char *)(a1 + 16) = 1;
    CFArrayRef v4 = *(_xpc_connection_s **)(a1 + 184);
    if (v4)
    {
      barrier[0] = MEMORY[0x1E4F143A8];
      barrier[1] = 0x40000000;
      barrier[2] = __SFOperationCancel_block_invoke;
      barrier[3] = &__block_descriptor_tmp_303;
      barrier[4] = v4;
      xpc_connection_send_barrier(v4, barrier);
      *(void *)(a1 + 184) = 0;
    }
  }
  return pthread_mutex_unlock((pthread_mutex_t *)(a1 + 64));
}

void __SFOperationCancel_block_invoke(uint64_t a1)
{
  xpc_connection_cancel(*(xpc_connection_t *)(a1 + 32));
  uint64_t v2 = *(void **)(a1 + 32);

  xpc_release(v2);
}

uint64_t _SFOperationFinalize(uint64_t a1)
{
  uint64_t v2 = (pthread_mutex_t *)(a1 + 64);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 64));
  if (*(void *)(a1 + 144))
  {
    CFAllocatorRef v3 = *(void (**)(void))(a1 + 160);
    if (v3) {
      v3();
    }
  }
  CFArrayRef v4 = *(NSObject **)(a1 + 56);
  if (v4) {
    dispatch_release(v4);
  }
  xpc_object_t v5 = *(const void **)(a1 + 32);
  if (v5) {
    CFRelease(v5);
  }
  CFStringRef v6 = *(const void **)(a1 + 24);
  if (v6) {
    CFRelease(v6);
  }
  CFIndex v7 = *(const void **)(a1 + 48);
  if (v7) {
    CFRelease(v7);
  }
  pthread_mutex_unlock(v2);

  return pthread_mutex_destroy(v2);
}

BOOL _SFOperationEqual(pthread_mutex_t *a1, pthread_mutex_t *a2)
{
  CFArrayRef v4 = a1 + 1;
  pthread_mutex_lock(a1 + 1);
  pthread_mutex_lock(a2 + 1);
  pthread_mutex_unlock(v4);
  pthread_mutex_unlock(a2 + 1);
  return a1 == a2;
}

pthread_mutex_t *_SFOperationHash(pthread_mutex_t *a1)
{
  uint64_t v2 = a1 + 1;
  pthread_mutex_lock(a1 + 1);
  pthread_mutex_unlock(v2);
  return a1;
}

CFStringRef _SFOperationCopyDebugDesc(uint64_t a1)
{
  uint64_t v2 = (pthread_mutex_t *)(a1 + 64);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 64));
  CFStringRef v3 = CFStringCreateWithFormat(0, 0, @"<SFOperation %p>{kind = %@}", a1, *(void *)(a1 + 48));
  pthread_mutex_unlock(v2);
  return v3;
}

void _SFOperationAddSandboxExtensionForFileURL(const __CFURL *a1, __CFDictionary *a2)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  bzero(buffer, 0x400uLL);
  CFStringRef v4 = CFURLCopyFileSystemPath(a1, kCFURLPOSIXPathStyle);
  if (v4)
  {
    CFStringRef v5 = v4;
    int CString = CFStringGetCString(v4, buffer, 1024, 0x8000100u);
    CFIndex v7 = framework_log();
    int v8 = v7;
    if (CString)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        int v18 = 136315138;
        CFAllocatorRef v19 = buffer;
        _os_log_impl(&dword_1A5389000, v8, OS_LOG_TYPE_DEFAULT, "Trying to issue sandbox extension for %s", (uint8_t *)&v18, 0xCu);
      }
      uint64_t v9 = sandbox_extension_issue_file();
      if (v9)
      {
        __int16 v10 = (char *)v9;
        CFURLRef v11 = CFURLCopyAbsoluteURL(a1);
        size_t v12 = strlen(v10);
        CFDataRef v13 = CFDataCreate(0, (const UInt8 *)v10, v12);
        CFStringRef v14 = CFURLGetString(v11);
        CFDictionaryAddValue(a2, v14, v13);
        CFRelease(v11);
        CFRelease(v13);
        free(v10);
        CFStringRef v15 = framework_log();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          int v18 = 136315138;
          CFAllocatorRef v19 = buffer;
          _os_log_impl(&dword_1A5389000, v15, OS_LOG_TYPE_DEFAULT, "Successfully issued sandbox extension for %s", (uint8_t *)&v18, 0xCu);
        }
      }
      else
      {
        CFSetRef v17 = framework_log();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          _SFOperationAddSandboxExtensionForFileURL_cold_3((uint64_t)buffer, v17);
        }
      }
    }
    else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      _SFOperationAddSandboxExtensionForFileURL_cold_2();
    }
    CFRelease(v5);
  }
  else
  {
    CFAllocatorRef v16 = framework_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      _SFOperationAddSandboxExtensionForFileURL_cold_1();
    }
  }
}

uint64_t _SFOperationNotifyClient(uint64_t result, uint64_t a2, const __CFDictionary *cf2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(result + 16))
  {
    uint64_t v5 = result;
    if (*(void *)(result + 176) != a2 || (Class result = valuesChanged(*(CFTypeRef *)(result + 24), cf2), result))
    {
      if (a2 != 7)
      {
        CFStringRef v6 = CFStringCreateWithFormat(0, 0, @"<SFOperation %p>{kind = %@}", v5, *(void *)(v5 + 48));
        CFIndex v7 = framework_log();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          if ((unint64_t)(a2 - 1) > 0xE) {
            int v8 = @"?";
          }
          else {
            int v8 = off_1E5BBC3F8[a2 - 1];
          }
          *(_DWORD *)buf = 138412802;
          CFStringRef v12 = v6;
          __int16 v13 = 2112;
          CFStringRef v14 = v8;
          __int16 v15 = 2112;
          CFDictionaryRef v16 = cf2;
          _os_log_impl(&dword_1A5389000, v7, OS_LOG_TYPE_INFO, "SFOperationCallBack (%@, event = %@, results = %@)", buf, 0x20u);
        }
        CFRelease(v6);
      }
      *(void *)(v5 + 176) = a2;
      uint64_t v9 = *(const void **)(v5 + 24);
      if (v9) {
        CFRelease(v9);
      }
      CFDictionaryRef Copy = 0;
      if (cf2) {
        CFDictionaryRef Copy = CFDictionaryCreateCopy(0, cf2);
      }
      *(void *)(v5 + 24) = Copy;
      return (*(uint64_t (**)(uint64_t, uint64_t, const __CFDictionary *, void))(v5 + 128))(v5, a2, cf2, *(void *)(v5 + 144));
    }
  }
  return result;
}

void sub_1A53B077C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A53B0880(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A53B0E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A53B0F00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A53B1088(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1A53B11D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A53B12A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A53B1380(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A53B1538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A53B1778(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1A53B1854(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A53B19B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A53B1ABC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A53B1B8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

Class initAFPreferences()
{
  if (AssistantServicesLibrary_sOnce != -1) {
    dispatch_once(&AssistantServicesLibrary_sOnce, &__block_literal_global_2);
  }
  Class result = objc_getClass("AFPreferences");
  classAFPreferences = (uint64_t)result;
  getAFPreferencesClass[0] = (uint64_t (*)())AFPreferencesFunction;
  return result;
}

id AFPreferencesFunction()
{
  return (id)classAFPreferences;
}

void *__AssistantServicesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices", 2);
  AssistantServicesLibrary_sLib = (uint64_t)result;
  return result;
}

Class initVTPreferences()
{
  if (VoiceTriggerLibrary_sOnce != -1) {
    dispatch_once(&VoiceTriggerLibrary_sOnce, &__block_literal_global_240);
  }
  Class result = objc_getClass("VTPreferences");
  classVTPreferences = (uint64_t)result;
  getVTPreferencesClass[0] = (uint64_t (*)())VTPreferencesFunction;
  return result;
}

id VTPreferencesFunction()
{
  return (id)classVTPreferences;
}

void *__VoiceTriggerLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/VoiceTrigger.framework/VoiceTrigger", 2);
  VoiceTriggerLibrary_sLib = (uint64_t)result;
  return result;
}

Class initUNNotificationSettingsCenter()
{
  if (UserNotificationsSettingsLibrary_sOnce != -1) {
    dispatch_once(&UserNotificationsSettingsLibrary_sOnce, &__block_literal_global_244);
  }
  Class result = objc_getClass("UNNotificationSettingsCenter");
  classUNNotificationSettingsCenter = (uint64_t)result;
  getUNNotificationSettingsCenterClass[0] = (uint64_t (*)())UNNotificationSettingsCenterFunction;
  return result;
}

id UNNotificationSettingsCenterFunction()
{
  return (id)classUNNotificationSettingsCenter;
}

void *__UserNotificationsSettingsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings", 2);
  UserNotificationsSettingsLibrary_sLib = (uint64_t)result;
  return result;
}

Class initUNMutableNotificationSystemSettings()
{
  if (UserNotificationsSettingsLibrary_sOnce != -1) {
    dispatch_once(&UserNotificationsSettingsLibrary_sOnce, &__block_literal_global_244);
  }
  Class result = objc_getClass("UNMutableNotificationSystemSettings");
  classUNMutableNotificationSystemSettings = (uint64_t)result;
  getUNMutableNotificationSystemSettingsClass[0] = (uint64_t (*)())UNMutableNotificationSystemSettingsFunction;
  return result;
}

id UNMutableNotificationSystemSettingsFunction()
{
  return (id)classUNMutableNotificationSystemSettings;
}

Class initTUUserConfiguration()
{
  if (TelephonyUtilitiesLibrary_sOnce != -1) {
    dispatch_once(&TelephonyUtilitiesLibrary_sOnce, &__block_literal_global_249);
  }
  Class result = objc_getClass("TUUserConfiguration");
  classTUUserConfiguration = (uint64_t)result;
  getTUUserConfigurationClass[0] = (uint64_t (*)())TUUserConfigurationFunction;
  return result;
}

id TUUserConfigurationFunction()
{
  return (id)classTUUserConfiguration;
}

void *__TelephonyUtilitiesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 2);
  TelephonyUtilitiesLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t browserCallBack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return [a6 handleBrowserCallBack];
}

uint64_t operationCallBack(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 handleOperationCallback:a1 event:a2 withResults:a3];
}

__CFString *SFOperationEventToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xE) {
    return @"?";
  }
  else {
    return off_1E5BBC7F0[a1 - 1];
  }
}

void sub_1A53BA0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1A53BAF20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

uint64_t operationCallBack_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return [a4 handleOperationCallback:a1 event:a2 withResults:a3];
}

__CFString *SFOperationEventToString_0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xE) {
    return @"?";
  }
  else {
    return off_1E5BBCAD8[a1 - 1];
  }
}

void sub_1A53BD434(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 104));
  _Unwind_Resume(a1);
}

void sub_1A53BD48C()
{
}

Class initTVLDisplayColorCalibrator()
{
  if (TVLatencyLibrary_sOnce != -1) {
    dispatch_once(&TVLatencyLibrary_sOnce, &__block_literal_global_6);
  }
  Class result = objc_getClass("TVLDisplayColorCalibrator");
  classTVLDisplayColorCalibrator = (uint64_t)result;
  getTVLDisplayColorCalibratorClass[0] = (uint64_t (*)())TVLDisplayColorCalibratorFunction;
  return result;
}

id TVLDisplayColorCalibratorFunction()
{
  return (id)classTVLDisplayColorCalibrator;
}

void *__TVLatencyLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TVLatency.framework/TVLatency", 2);
  TVLatencyLibrary_sLib = (uint64_t)result;
  return result;
}

__CFString *SFHotspotNetworkTypeString(unsigned int a1)
{
  if (a1 < 9 && ((0x1DFu >> a1) & 1) != 0) {
    return off_1E5BBCD18[(char)a1];
  }
  if (SFRemoteHotspotNetworkTypeHSDPA == a1) {
    return @"HSDPA";
  }
  return @"Unknown";
}

uint64_t SFHotspotTypeStringToType(void *a1, unsigned char *a2)
{
  CFStringRef v3 = [a1 lowercaseString];
  CFStringRef v4 = v3;
  if (a2) {
    *a2 = 1;
  }
  if ([v3 isEqualToString:@"none"])
  {
    unsigned __int8 v5 = 0;
  }
  else if ([v4 isEqualToString:@"1x"])
  {
    unsigned __int8 v5 = 1;
  }
  else if ([v4 isEqualToString:@"gprs"])
  {
    unsigned __int8 v5 = 2;
  }
  else if ([v4 isEqualToString:@"edge"])
  {
    unsigned __int8 v5 = 3;
  }
  else if ([v4 isEqualToString:@"3g"])
  {
    unsigned __int8 v5 = 4;
  }
  else if ([v4 isEqualToString:@"4g"])
  {
    unsigned __int8 v5 = 6;
  }
  else if ([v4 isEqualToString:@"lte"])
  {
    unsigned __int8 v5 = 7;
  }
  else
  {
    int v6 = [v4 isEqualToString:@"5g"];
    if (v6) {
      unsigned __int8 v5 = 8;
    }
    else {
      unsigned __int8 v5 = -1;
    }
    if (a2 && (v6 & 1) == 0)
    {
      *a2 = 0;
      unsigned __int8 v5 = -1;
    }
  }

  return v5;
}

id SFHotspotResponseAdvertisementString(uint64_t a1)
{
  uint64_t v1 = BYTE3(a1);
  uint64_t v2 = BYTE1(a1);
  CFStringRef v3 = NSString;
  uint64_t v4 = a1;
  uint64_t v5 = BYTE2(a1);
  uint64_t v6 = BYTE5(a1);
  CFIndex v7 = SFHotspotNetworkTypeString(BYTE4(a1));
  int v8 = [v3 stringWithFormat:@"<version: %d, flags: %d battery life: %d, signal strength: %d, network type: %@, additional flags: %d>", v4, v2, v5, v6, v7, v1];

  return v8;
}

void sub_1A53C1164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_activity_scope_state_s state)
{
}

void sub_1A53C17CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53C1F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state)
{
}

uint64_t getSharingFrameworkBundle()
{
  if (getSharingFrameworkBundle_sOnce != -1) {
    dispatch_once(&getSharingFrameworkBundle_sOnce, &__block_literal_global_7);
  }
  return getSharingFrameworkBundle_gBundleRef;
}

void __getSharingFrameworkBundle_block_invoke()
{
  getSharingFrameworkBundle_gBundleRef = (uint64_t)CFBundleGetBundleWithIdentifier(@"com.apple.Sharing");
  if (!getSharingFrameworkBundle_gBundleRef)
  {
    CFURLRef v0 = CFURLCreateWithFileSystemPath(0, @"/System/Library/PrivateFrameworks/Sharing.framework", kCFURLPOSIXPathStyle, 1u);
    if (v0)
    {
      CFURLRef v1 = v0;
      getSharingFrameworkBundle_gBundleRef = (uint64_t)CFBundleCreate(0, v0);
      CFRelease(v1);
    }
  }
}

CFStringRef copyLocalizedStringForKey(const __CFString *a1)
{
  return copyLocalizedStringForKeyInStringsFile(a1, @"Localizable");
}

CFStringRef copyLocalizedStringForKeyInStringsFile(const __CFString *cf, CFStringRef tableName)
{
  if (getSharingFrameworkBundle_sOnce != -1) {
    dispatch_once(&getSharingFrameworkBundle_sOnce, &__block_literal_global_7);
  }
  uint64_t v4 = (__CFBundle *)getSharingFrameworkBundle_gBundleRef;
  if (getSharingFrameworkBundle_gBundleRef)
  {
    return CFBundleCopyLocalizedString(v4, cf, cf, tableName);
  }
  else
  {
    CFAllocatorRef v6 = CFGetAllocator(cf);
    return CFStringCreateCopy(v6, cf);
  }
}

__CFSet *createMutableSetFromBag(const __CFAllocator *a1, CFIndex a2, const __CFBag *a3)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  if (!a3) {
    return 0;
  }
  uint64_t v6 = MEMORY[0x1A626A630](a3);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (const void **)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  bzero(v9, v8);
  CFBagGetValues(a3, v9);
  CFArrayRef Mutable = CFSetCreateMutable(a1, a2, MEMORY[0x1E4F1D548]);
  if (v7 >= 1)
  {
    do
    {
      CFURLRef v11 = *v9++;
      CFSetSetValue(Mutable, v11);
      --v7;
    }
    while (v7);
  }
  return Mutable;
}

CFArrayRef copyValuesFromSet(const __CFAllocator *a1, CFSetRef theSet)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  if (!theSet) {
    return 0;
  }
  CFArrayRef result = (CFArrayRef)CFSetGetCount(theSet);
  if (result)
  {
    CFIndex v5 = (CFIndex)result;
    MEMORY[0x1F4188790](result);
    uint64_t v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    bzero(v7, v6);
    CFSetGetValues(theSet, (const void **)v7);
    return CFArrayCreate(a1, (const void **)v7, v5, MEMORY[0x1E4F1D510]);
  }
  return result;
}

CFArrayRef copyValuesFromBag(const __CFAllocator *a1, const __CFBag *a2)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  if (!a2) {
    return 0;
  }
  CFArrayRef result = (CFArrayRef)MEMORY[0x1A626A630](a2);
  if (result)
  {
    CFIndex v5 = (CFIndex)result;
    MEMORY[0x1F4188790](result);
    uint64_t v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    bzero(v7, v6);
    CFBagGetValues(a2, (const void **)v7);
    return CFArrayCreate(a1, (const void **)v7, v5, MEMORY[0x1E4F1D510]);
  }
  return result;
}

__CFBag *createBagFromArray(const __CFAllocator *a1, CFArrayRef theArray)
{
  if (!theArray) {
    return 0;
  }
  uint64_t Count = CFArrayGetCount(theArray);
  CFArrayRef Mutable = CFBagCreateMutable(a1, Count, MEMORY[0x1E4F1D520]);
  if (Count >= 1)
  {
    for (CFIndex i = 0; i != Count; ++i)
    {
      CFURLRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, i);
      CFBagSetValue(Mutable, ValueAtIndex);
    }
  }
  return Mutable;
}

__CFSet *createSetFromArray(const __CFAllocator *a1, CFArrayRef theArray)
{
  if (!theArray) {
    return 0;
  }
  uint64_t Count = CFArrayGetCount(theArray);
  CFArrayRef Mutable = CFSetCreateMutable(a1, Count, MEMORY[0x1E4F1D548]);
  if (Count >= 1)
  {
    for (CFIndex i = 0; i != Count; ++i)
    {
      CFURLRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, i);
      CFSetSetValue(Mutable, ValueAtIndex);
    }
  }
  return Mutable;
}

__CFSet *createSFNodeKindsFromXPCArray(const __CFAllocator *a1, xpc_object_t xarray)
{
  if (!xarray) {
    return 0;
  }
  int64_t count = xpc_array_get_count(xarray);
  CFArrayRef Mutable = CFSetCreateMutable(a1, count, &kSharingFastSetCallBacks);
  if (count >= 1)
  {
    for (size_t i = 0; i != count; ++i)
    {
      int64_t int64 = xpc_array_get_int64(xarray, i);
      if (gKindMapOnce != -1) {
        dispatch_once(&gKindMapOnce, &__block_literal_global_181);
      }
      CFURLRef ValueAtIndex = CFArrayGetValueAtIndex((CFArrayRef)gOrderedKinds, int64);
      CFSetSetValue(Mutable, ValueAtIndex);
    }
  }
  return Mutable;
}

xpc_object_t createXPCArrayFromSFNodeKinds(const __CFSet *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  CFIndex Count = CFSetGetCount(a1);
  if (!Count) {
    return 0;
  }
  uint64_t v3 = Count;
  MEMORY[0x1F4188790](Count);
  CFIndex v5 = (const void **)((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  bzero(v5, v4);
  xpc_object_t v6 = xpc_array_create(0, 0);
  CFSetGetValues(a1, v5);
  if (v3 >= 1)
  {
    do
    {
      uint64_t v7 = *v5;
      if (gKindMapOnce != -1) {
        dispatch_once(&gKindMapOnce, &__block_literal_global_184);
      }
      uint64_t Value = CFDictionaryGetValue((CFDictionaryRef)gKindMap, v7);
      xpc_array_set_int64(v6, 0xFFFFFFFFFFFFFFFFLL, (int64_t)Value);
      ++v5;
      --v3;
    }
    while (v3);
  }
  return v6;
}

CFArrayRef copyKeysFromDictionary(const __CFAllocator *a1, CFDictionaryRef theDict)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  if (!theDict) {
    return 0;
  }
  CFArrayRef result = (CFArrayRef)CFDictionaryGetCount(theDict);
  if (result)
  {
    CFIndex v5 = (CFIndex)result;
    MEMORY[0x1F4188790](result);
    uint64_t v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    bzero(v7, v6);
    CFDictionaryGetKeysAndValues(theDict, (const void **)v7, 0);
    return CFArrayCreate(a1, (const void **)v7, v5, MEMORY[0x1E4F1D510]);
  }
  return result;
}

CFArrayRef copyValuesFromDictionary(const __CFAllocator *a1, CFDictionaryRef theDict)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  if (!theDict) {
    return 0;
  }
  CFArrayRef result = (CFArrayRef)CFDictionaryGetCount(theDict);
  if (result)
  {
    CFIndex v5 = (CFIndex)result;
    MEMORY[0x1F4188790](result);
    uint64_t v7 = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    bzero(v7, v6);
    CFDictionaryGetKeysAndValues(theDict, 0, (const void **)v7);
    return CFArrayCreate(a1, (const void **)v7, v5, MEMORY[0x1E4F1D510]);
  }
  return result;
}

void setOrRemoveValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  if (value) {
    CFDictionarySetValue(theDict, key, value);
  }
  else {
    CFDictionaryRemoveValue(theDict, key);
  }
}

uint64_t copyBundleIdentifierForPID()
{
  return 0;
}

uint64_t defaultPortForProtocol(const void *a1)
{
  if (CFEqual(a1, @"afp")) {
    return 548;
  }
  if (CFEqual(a1, @"smb")) {
    return 445;
  }
  if (CFEqual(a1, @"vnc")) {
    return 5900;
  }
  if (CFEqual(a1, @"odisk") || CFEqual(a1, @"webdav")) {
    return 80;
  }
  if (CFEqual(a1, @"webdavs")) {
    return 443;
  }
  if (CFEqual(a1, @"nfs")) {
    return 2049;
  }
  if (CFEqual(a1, @"ftp")) {
    return 21;
  }
  if (CFEqual(a1, @"ftps")) {
    return 990;
  }
  if (CFEqual(a1, @"http")) {
    return 80;
  }
  if (CFEqual(a1, @"https")) {
    return 443;
  }
  if (CFEqual(a1, @"adisk")) {
    return 548;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

CFStringRef createStringByAddingPercentEscapes(const __CFString *originalString, CFStringRef legalURLCharactersToBeEscaped)
{
  if (originalString) {
    return CFURLCreateStringByAddingPercentEscapes(0, originalString, 0, legalURLCharactersToBeEscaped, 0x8000100u);
  }
  return originalString;
}

CFURLRef createURL(__CFString *a1, const __CFString *a2, const __CFString *a3, __CFString *MutableCopy, int a5, const __CFString *a6, const __CFDictionary *a7, int a8)
{
  error[1] = *(CFErrorRef *)MEMORY[0x1E4F143B8];
  if (CFEqual(a1, @"webdav") || CFEqual(a1, @"odisk"))
  {
    CFDictionaryRef v16 = kSFNodeProtocolHTTP;
LABEL_4:
    uint64_t v17 = *v16;
    goto LABEL_5;
  }
  CFEqual(a1, @"airdrop");
  if (CFEqual(a1, @"webdavs") || (uint64_t v17 = a1, CFEqual(a1, @"airdrop")))
  {
    CFDictionaryRef v16 = kSFNodeProtocolHTTPS;
    goto LABEL_4;
  }
LABEL_5:
  int v18 = defaultPortForProtocol(a1);
  if (a2) {
    a2 = CFURLCreateStringByAddingPercentEscapes(0, a2, 0, @";:@?/", 0x8000100u);
  }
  if (a3) {
    a3 = CFURLCreateStringByAddingPercentEscapes(0, a3, 0, @";:@?/", 0x8000100u);
  }
  if (CFStringHasPrefix(MutableCopy, @"[") && CFStringHasSuffix(MutableCopy, @"]"))
  {
    CFIndex Length = CFStringGetLength(MutableCopy);
    MutableCFDictionaryRef Copy = CFStringCreateMutableCopy(0, Length, MutableCopy);
    v44.length = CFStringGetLength(MutableCopy);
    v44.location = 0;
    CFStringFindAndReplace(MutableCopy, @"%", @"%25", v44, 0);
  }
  else if (MutableCopy)
  {
    MutableCFDictionaryRef Copy = (__CFString *)CFURLCreateStringByAddingPercentEscapes(0, MutableCopy, 0, @";:@?/",
                                  0x8000100u);
  }
  CFMutableStringRef Mutable = CFStringCreateMutable(0, 0);
  CFStringAppendFormat(Mutable, 0, @"%@://", v17);
  if (!a2)
  {
    if (!a3)
    {
      int v21 = 1;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  CFStringAppend(Mutable, a2);
  if (a3)
  {
LABEL_18:
    CFStringAppendFormat(Mutable, 0, @":%@", a3);
    int v21 = 0;
    goto LABEL_19;
  }
  int v21 = 1;
LABEL_19:
  CFStringAppend(Mutable, @"@");
LABEL_20:
  CFStringAppend(Mutable, MutableCopy);
  if (a5 >= 1 && v18 != a5) {
    CFStringAppendFormat(Mutable, 0, @":%ld", a5);
  }
  if (a6)
  {
    if (CFStringHasPrefix(a6, @"/"))
    {
      v43.length = CFStringGetLength(a6) - 1;
      v43.location = 1;
      CFStringRef v22 = CFStringCreateWithSubstring(0, a6, v43);
    }
    else
    {
      CFStringRef v22 = (const __CFString *)CFRetain(a6);
    }
    CFStringRef v23 = v22;
    if (v22) {
      CFStringRef v24 = CFURLCreateStringByAddingPercentEscapes(0, v22, 0, 0, 0x8000100u);
    }
    else {
      CFStringRef v24 = 0;
    }
    CFStringAppendFormat(Mutable, 0, @"/%@", v24);
    CFRelease(v23);
    CFRelease(v24);
  }
  if (a7)
  {
    CFIndex Count = CFDictionaryGetCount(a7);
    if (Count)
    {
      uint64_t v26 = Count;
      int v39 = v21;
      CFStringRef v40 = a3;
      int v41 = a8;
      uint64_t v38 = (uint64_t)&v38;
      MEMORY[0x1F4188790](Count);
      CFStringRef v28 = (const void **)((char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      bzero(v28, v27);
      CFStringRef v29 = CFStringCreateMutable(0, 0);
      CFDictionaryGetKeysAndValues(a7, v28, 0);
      uint64_t v30 = v26 - 1;
      if (v26 >= 1)
      {
        while (1)
        {
          CFStringRef v31 = *v28;
          uint64_t Value = CFDictionaryGetValue(a7, *v28);
          CFStringAppendFormat(v29, 0, @"%@=%@", v31, Value);
          if (!v30) {
            break;
          }
          CFStringAppend(v29, @"&");
          --v30;
          ++v28;
        }
      }
      CFStringAppendFormat(Mutable, 0, @"?%@", v29);
      CFRelease(v29);
      a8 = v41;
      a3 = v40;
      LOBYTE(v21) = v39;
    }
  }
  CFURLRef v33 = CFURLCreateWithString(0, Mutable, 0);
  CFURLRef v34 = v33;
  if (a8)
  {
    error[0] = 0;
    if (!CFURLSetResourcePropertyForKey(v33, (CFStringRef)*MEMORY[0x1E4F1D678], (CFTypeRef)*MEMORY[0x1E4F1CFD0], error))
    {
      char v35 = v21;
      long long v36 = utilities_log();
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
        createURL_cold_1((uint64_t *)error, v36);
      }
      CFRelease(error[0]);
      LOBYTE(v21) = v35;
    }
  }
  CFRelease(Mutable);
  CFRelease(MutableCopy);
  if (a2) {
    CFRelease(a2);
  }
  if ((v21 & 1) == 0) {
    CFRelease(a3);
  }
  return v34;
}

uint64_t disableAirDropTLS()
{
  return 0;
}

CGImageRef createCGImageWithURL(const __CFURL *a1)
{
  CFURLRef v1 = CGImageSourceCreateWithURL(a1, 0);
  if (v1)
  {
    uint64_t v2 = v1;
    if (CGImageSourceGetCount(v1))
    {
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v2, 0, 0);
    }
    else
    {
      CFIndex v5 = utilities_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        createCGImageWithURL_cold_2();
      }
      CGImageRef ImageAtIndex = 0;
    }
    CFRelease(v2);
  }
  else
  {
    size_t v4 = utilities_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      createCGImageWithURL_cold_1();
    }
    return 0;
  }
  return ImageAtIndex;
}

CGImageRef createCGImageWithData(const __CFData *a1)
{
  return createCGImageWithDataInternal(a1, 0);
}

CGImageRef createCGImageWithDataInternal(const __CFData *a1, int a2)
{
  CFMutableStringRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  CFIndex v5 = Mutable;
  if (a2)
  {
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x1E4F2FF78], (const void *)*MEMORY[0x1E4F22618]);
    CFDictionarySetValue(v5, (const void *)*MEMORY[0x1E4F2FE80], (const void *)*MEMORY[0x1E4F1CFD0]);
  }
  size_t v6 = CGImageSourceCreateWithData(a1, v5);
  if (v6)
  {
    uint64_t v7 = v6;
    if (!CGImageSourceGetCount(v6))
    {
      CFStringRef v12 = utilities_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        createCGImageWithDataInternal_cold_2();
      }
      goto LABEL_20;
    }
    if (a2)
    {
      CFStringRef Type = CGImageSourceGetType(v7);
      if (!CFEqual(Type, (CFTypeRef)*MEMORY[0x1E4F22618]))
      {
        CFStringRef v14 = utilities_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          createCGImageWithDataInternal_cold_3();
        }
        goto LABEL_20;
      }
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v7, 0, 0);
      if (!ImageAtIndex)
      {
        __int16 v10 = utilities_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          createCGImageWithDataInternal_cold_4();
        }
LABEL_20:
        CGImageRef ImageAtIndex = 0;
      }
    }
    else
    {
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v7, 0, 0);
      if (!ImageAtIndex)
      {
        __int16 v13 = utilities_log();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          createCGImageWithDataInternal_cold_5();
        }
        goto LABEL_20;
      }
    }
    CFRelease(v7);
    goto LABEL_22;
  }
  CFURLRef v11 = utilities_log();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
    createCGImageWithDataInternal_cold_1();
  }
  CGImageRef ImageAtIndex = 0;
LABEL_22:
  CFRelease(v5);
  return ImageAtIndex;
}

CGImageRef createCGImageWithJPEG2000Data(const __CFData *a1)
{
  return createCGImageWithDataInternal(a1, 1);
}

CGImageRef createCGImageWithDataOrURL(const void *a1)
{
  CFTypeID v2 = CFGetTypeID(a1);
  if (v2 == CFURLGetTypeID())
  {
    uint64_t v3 = CGImageSourceCreateWithURL((CFURLRef)a1, 0);
  }
  else
  {
    if (v2 != CFDataGetTypeID()) {
      goto LABEL_8;
    }
    uint64_t v3 = CGImageSourceCreateWithData((CFDataRef)a1, 0);
  }
  size_t v4 = v3;
  if (v3)
  {
    if (CGImageSourceGetCount(v3))
    {
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v4, 0, 0);
    }
    else
    {
      uint64_t v7 = utilities_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
        createCGImageWithDataOrURL_cold_2();
      }
      CGImageRef ImageAtIndex = 0;
    }
    CFRelease(v4);
    return ImageAtIndex;
  }
LABEL_8:
  size_t v6 = utilities_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
    createCGImageWithDataOrURL_cold_1();
  }
  return 0;
}

__CFData *copyImageData(void *a1, uint64_t a2)
{
  CFAllocatorRef v4 = CFGetAllocator(a1);
  CFMutableStringRef Mutable = CFDataCreateMutable(v4, 0);
  uint64_t valuePtr = a2;
  size_t v6 = CFDictionaryCreateMutable(v4, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  if (a2)
  {
    CFNumberRef v7 = CFNumberCreate(v4, kCFNumberLongType, &valuePtr);
    size_t v8 = (const void **)MEMORY[0x1E4F2F468];
  }
  else
  {
    int v14 = 1065353216;
    CFNumberRef v7 = CFNumberCreate(v4, kCFNumberFloatType, &v14);
    size_t v8 = (const void **)MEMORY[0x1E4F2F430];
  }
  CFDictionarySetValue(v6, *v8, v7);
  CFRelease(v7);
  uint64_t v9 = CGImageDestinationCreateWithData(Mutable, (CFStringRef)*MEMORY[0x1E4F22618], 1uLL, 0);
  if (v9)
  {
    __int16 v10 = v9;
    CGImageDestinationAddImage(v9, (CGImageRef)a1, v6);
    if (!CGImageDestinationFinalize(v10))
    {
      CFURLRef v11 = utilities_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        copyImageData_cold_2();
      }
      CFRelease(Mutable);
      CFMutableStringRef Mutable = 0;
    }
    CFRelease(v10);
  }
  else
  {
    CFStringRef v12 = utilities_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      copyImageData_cold_1();
    }
  }
  CFRelease(v6);
  return Mutable;
}

__CFData *createImageDataWithSize(uint64_t a1, uint64_t a2)
{
  CGColorSpaceRef DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (DeviceRGB)
  {
    CGColorSpaceRef v4 = DeviceRGB;
    CFIndex v5 = (CGImage *)CGImageCreateByMatchingToColorSpace();
    if (v5)
    {
      size_t v6 = v5;
      size_t Width = CGImageGetWidth(v5);
      size_t Height = CGImageGetHeight(v6);
      if (Width > 0x21C || Height >= 0x21D) {
        Thumb = (void *)CGImageCreateThumb();
      }
      else {
        Thumb = (void *)CFRetain(v6);
      }
      __int16 v13 = Thumb;
      if (Thumb)
      {
        CFURLRef v11 = copyImageData(Thumb, a2);
        CFRelease(v13);
      }
      else
      {
        int v14 = utilities_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          createImageDataWithSize_cold_3();
        }
        CFURLRef v11 = 0;
      }
      CFRelease(v6);
    }
    else
    {
      CFStringRef v12 = utilities_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        createImageDataWithSize_cold_2();
      }
      CFURLRef v11 = 0;
    }
    CFRelease(v4);
  }
  else
  {
    __int16 v10 = utilities_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      createImageDataWithSize_cold_1();
    }
    return 0;
  }
  return v11;
}

uint64_t browseAllInterfacesEnabled()
{
  CFBooleanRef v0 = (const __CFBoolean *)browseAllInterfacesEnabled_enabled;
  if (!browseAllInterfacesEnabled_enabled)
  {
    if (SFDeviceIsVirtualMachine()) {
      uint64_t v1 = 1;
    }
    else {
      uint64_t v1 = BOOLeanValueForPreference(@"EnableDemoMode", 0);
    }
    int v2 = BOOLeanValueForPreference(@"BrowseAllInterfaces", v1);
    uint64_t v3 = (const __CFBoolean **)MEMORY[0x1E4F1CFD0];
    if (!v2) {
      uint64_t v3 = (const __CFBoolean **)MEMORY[0x1E4F1CFC8];
    }
    CFBooleanRef v0 = *v3;
    browseAllInterfacesEnabled_enabled = (uint64_t)*v3;
  }

  return CFBooleanGetValue(v0);
}

uint64_t enableDemoMode()
{
  return BOOLeanValueForPreference(@"EnableDemoMode", 0);
}

uint64_t forceOldMode()
{
  return BOOLeanValueForPreference(@"ForceOldMode", 0);
}

uint64_t disableAirDrop()
{
  CFBooleanRef v0 = (const __CFBoolean *)disableAirDrop_disableAirDrop;
  if (!disableAirDrop_disableAirDrop)
  {
    int v1 = BOOLeanValueForPreference(@"DisableAirDrop", 0);
    int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFD0];
    if (!v1) {
      int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFC8];
    }
    CFBooleanRef v0 = *v2;
    disableAirDrop_disableAirDrop = (uint64_t)*v2;
  }

  return CFBooleanGetValue(v0);
}

uint64_t enableSimulator()
{
  CFBooleanRef v0 = (const __CFBoolean *)enableSimulator_enableSimulator;
  if (!enableSimulator_enableSimulator)
  {
    int v1 = BOOLeanValueForPreference(@"EnableSimulator", 0);
    int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFD0];
    if (!v1) {
      int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFC8];
    }
    CFBooleanRef v0 = *v2;
    enableSimulator_enableSimulator = (uint64_t)*v2;
  }

  return CFBooleanGetValue(v0);
}

uint64_t enableDeviceImages()
{
  CFBooleanRef v0 = (const __CFBoolean *)enableDeviceImages_enableDeviceImages;
  if (!enableDeviceImages_enableDeviceImages)
  {
    int v1 = BOOLeanValueForPreference(@"EnableDeviceImages", 0);
    int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFD0];
    if (!v1) {
      int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFC8];
    }
    CFBooleanRef v0 = *v2;
    enableDeviceImages_enableDeviceImages = (uint64_t)*v2;
  }

  return CFBooleanGetValue(v0);
}

uint64_t directIPEnabled()
{
  CFBooleanRef v0 = (const __CFBoolean *)directIPEnabled_enabled;
  if (!directIPEnabled_enabled)
  {
    int v1 = BOOLeanValueForPreference(@"EnableDirectIP", 0);
    int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFD0];
    if (!v1) {
      int v2 = (const __CFBoolean **)MEMORY[0x1E4F1CFC8];
    }
    CFBooleanRef v0 = *v2;
    directIPEnabled_enabled = (uint64_t)*v2;
  }

  return CFBooleanGetValue(v0);
}

BOOL valuesChanged(CFTypeRef cf1, CFTypeRef cf2)
{
  if (cf1 && cf2)
  {
    if (!CFEqual(cf1, cf2)) {
      return 1;
    }
  }
  else if (cf1 && !cf2)
  {
    return 1;
  }
  return cf2 && cf1 == 0;
}

uint64_t longValueForPreference(const __CFString *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t valuePtr = a2;
  CFNumberRef v3 = (const __CFNumber *)copySharingPrefValue(a1);
  if (v3)
  {
    CFNumberRef v4 = v3;
    CFTypeID v5 = CFGetTypeID(v3);
    if (v5 == CFNumberGetTypeID())
    {
      CFNumberGetValue(v4, kCFNumberLongType, &valuePtr);
    }
    else
    {
      CFTypeID v6 = CFGetTypeID(v4);
      if (v6 == CFStringGetTypeID()) {
        uint64_t valuePtr = CFStringGetIntValue((CFStringRef)v4);
      }
    }
    CFRelease(v4);
    return valuePtr;
  }
  return v2;
}

BOOL stringIsTrueString(const __CFString *a1)
{
  CFRetain(a1);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 0x40000000;
  CFTypeID v5 = __stringIsTrueString_block_invoke;
  CFTypeID v6 = &__block_descriptor_tmp_146;
  CFStringRef v7 = a1;
  if (CFEqual(a1, @"1"))
  {
    BOOL v2 = 1;
  }
  else
  {
    BOOL v2 = 1;
    if (CFStringCompare(a1, @"true", 1uLL))
    {
      BOOL v2 = 1;
      if (CFStringCompare(a1, @"yes", 1uLL))
      {
        BOOL v2 = 1;
        if (CFStringCompare(a1, @"y", 1uLL)) {
          BOOL v2 = CFStringCompare(a1, @"on", 1uLL) == kCFCompareEqualTo;
        }
      }
    }
  }
  v5((uint64_t)v4);
  return v2;
}

void __stringIsTrueString_block_invoke(uint64_t a1)
{
}

void __BOOLeanValueForPreference_block_invoke(uint64_t a1)
{
}

CFStringRef copyCurrentTime(const __CFAllocator *a1)
{
  memset(&v4, 0, sizeof(v4));
  v3.tv_sec = 0;
  *(void *)&v3.tv_usec = 0;
  gettimeofday(&v3, 0);
  localtime_r(&v3.tv_sec, &v4);
  return CFStringCreateWithFormat(a1, 0, @"%02d:%02d:%02d.%03d", v4.tm_hour, v4.tm_min, v4.tm_sec, (v3.tv_usec / 1000));
}

__CFString *airDropServiceType()
{
  CFBooleanRef v0 = (const __CFBoolean *)copySharingPrefValue(@"AlternateService");
  if (v0)
  {
    CFBooleanRef v1 = v0;
    CFTypeID v2 = CFGetTypeID(v0);
    if (v2 == CFBooleanGetTypeID())
    {
      if (CFBooleanGetValue(v1)) {
        timeval v3 = @"_airdrop-alt._tcp.";
      }
      else {
        timeval v3 = @"_airdrop._tcp.";
      }
      goto LABEL_16;
    }
    CFTypeID v6 = CFGetTypeID(v1);
    if (v6 == CFStringGetTypeID())
    {
      if (CFEqual(v1, @"1"))
      {
        timeval v3 = @"_airdrop-alt._tcp.";
LABEL_16:
        CFRelease(v1);
        return v3;
      }
      if (!CFEqual(v1, @"0"))
      {
        if (CFStringGetLength((CFStringRef)v1) < 8)
        {
          CFStringRef v7 = (void *)CFRetain(v1);
        }
        else
        {
          v11.location = 0;
          v11.length = 7;
          CFStringRef v7 = (void *)CFStringCreateWithSubstring(0, (CFStringRef)v1, v11);
        }
        size_t v8 = v7;
        CFStringRef v9 = CFStringCreateWithFormat(0, 0, @"_airdrop-%@._tcp.", v7);
        timeval v3 = (__CFString *)CFAutorelease(v9);
        CFRelease(v8);
        goto LABEL_16;
      }
    }
    timeval v3 = @"_airdrop._tcp.";
    goto LABEL_16;
  }
  if (!BOOLeanValueForPreference(@"EnableDemoMode", 0)) {
    return @"_airdrop._tcp.";
  }
  CFStringRef v4 = CFStringCreateWithFormat(0, 0, @"_airdrop-%@._tcp.", @"demo");

  return (__CFString *)CFAutorelease(v4);
}

uint64_t getOrderedTypes()
{
  if (gArrayOnce != -1) {
    dispatch_once(&gArrayOnce, &__block_literal_global_169);
  }
  return gOrderedTypes;
}

CFArrayRef initArrays()
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  __int16 v13 = @"_adisk._tcp.";
  int v14 = @"_afpovertcp._tcp.";
  __int16 v15 = @"_smb._tcp.";
  CFDictionaryRef v16 = @"_rfb._tcp.";
  uint64_t v17 = @"_odisk._tcp.";
  int v18 = @"_http._tcp.";
  CFAllocatorRef v19 = airDropServiceType();
  os_activity_scope_state_s v20 = @"_file._tcp.";
  int v21 = @"_netbios._udp.";
  CFStringRef v22 = @"_workgroups._udp.";
  CFStringRef v23 = @"_nwnode._tcp.";
  values = @"adisk";
  timeval v3 = @"afp";
  CFStringRef v4 = @"smb";
  CFTypeID v5 = @"vnc";
  CFTypeID v6 = @"odisk";
  CFStringRef v7 = @"http";
  size_t v8 = @"airdrop";
  CFStringRef v9 = @"file";
  __int16 v10 = @"netbios";
  CFRange v11 = @"workgroups";
  CFStringRef v12 = @"nwnode";
  if (BOOLeanValueForPreference(@"PreferSMBFileSharing", 0))
  {
    int v14 = @"_smb._tcp.";
    __int16 v15 = @"_afpovertcp._tcp.";
    timeval v3 = @"smb";
    CFStringRef v4 = @"afp";
  }
  CFBooleanRef v0 = (const CFArrayCallBacks *)MEMORY[0x1E4F1D510];
  gOrderedCFArrayRef Protocols = (uint64_t)CFArrayCreate(0, (const void **)&values, 11, MEMORY[0x1E4F1D510]);
  CFArrayRef result = CFArrayCreate(0, (const void **)&v13, 11, v0);
  gOrderedTypes = (uint64_t)result;
  return result;
}

uint64_t getOrderedProtocols()
{
  if (gArrayOnce != -1) {
    dispatch_once(&gArrayOnce, &__block_literal_global_172);
  }
  return gOrderedProtocols;
}

const void *getServiceTypeForProtocol(void *key)
{
  if (gDictionaryOnce != -1) {
    dispatch_once(&gDictionaryOnce, &__block_literal_global_175);
  }
  CFDictionaryRef v2 = (const __CFDictionary *)gTypeForProtocol;

  return CFDictionaryGetValue(v2, key);
}

CFDictionaryRef initDictionaries()
{
  v13[1] = *MEMORY[0x1E4F143B8];
  if (gArrayOnce != -1) {
    dispatch_once(&gArrayOnce, &__block_literal_global_169);
  }
  CFArrayRef v0 = (const __CFArray *)gOrderedTypes;
  CFArrayRef v1 = (const __CFArray *)gOrderedProtocols;
  CFIndex Count = CFArrayGetCount((CFArrayRef)gOrderedTypes);
  CFIndex v3 = CFArrayGetCount(v1);
  MEMORY[0x1F4188790](v3);
  CFTypeID v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  bzero(v5, v4);
  MEMORY[0x1F4188790](v6);
  size_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  bzero(v8, v7);
  v14.location = 0;
  v14.length = Count;
  CFArrayGetValues(v0, v14, (const void **)v5);
  v15.location = 0;
  v15.length = v3;
  CFArrayGetValues(v1, v15, (const void **)v8);
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  __int16 v10 = (const CFDictionaryKeyCallBacks *)MEMORY[0x1E4F1D048];
  CFRange v11 = (const CFDictionaryValueCallBacks *)MEMORY[0x1E4F1D540];
  gTypeForProtocol = (uint64_t)CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], (const void **)v8, (const void **)v5, Count, MEMORY[0x1E4F1D048], MEMORY[0x1E4F1D540]);
  CFDictionaryRef result = CFDictionaryCreate(v9, (const void **)v5, (const void **)v8, v3, v10, v11);
  gProtocolForCFStringRef Type = (uint64_t)result;
  return result;
}

const void *getProtocolForServiceType(void *key)
{
  if (gDictionaryOnce != -1) {
    dispatch_once(&gDictionaryOnce, &__block_literal_global_178);
  }
  CFDictionaryRef v2 = (const __CFDictionary *)gProtocolForType;

  return CFDictionaryGetValue(v2, key);
}

uint64_t SharingFastSetRetain()
{
  return (*(uint64_t (**)(void))(MEMORY[0x1E4F1D548] + 8))();
}

uint64_t SharingFastSetRelease()
{
  return (*(uint64_t (**)(void))(MEMORY[0x1E4F1D548] + 16))();
}

uint64_t SharingFastSetCopyDescription()
{
  return (*(uint64_t (**)(void))(MEMORY[0x1E4F1D548] + 24))();
}

uint64_t SharingFastDictionaryKeyRetain()
{
  return (*(uint64_t (**)(void))(MEMORY[0x1E4F1D530] + 8))();
}

uint64_t SharingFastDictionaryKeyRelease()
{
  return (*(uint64_t (**)(void))(MEMORY[0x1E4F1D530] + 16))();
}

uint64_t SharingFastDictionaryKeyCopyDescription()
{
  return (*(uint64_t (**)(void))(MEMORY[0x1E4F1D530] + 24))();
}

CFDictionaryRef initKindMap()
{
  uint64_t v0 = 0;
  values[24] = *(void **)MEMORY[0x1E4F143B8];
  values[0] = @"Root";
  values[1] = @"Bonjour";
  values[2] = @"Windows";
  values[3] = @"Domain";
  values[4] = @"Workgroup";
  values[5] = @"Volume";
  values[6] = @"Printer";
  values[7] = @"ADisk";
  values[8] = @"ODisk";
  values[9] = @"Person";
  values[10] = @"Me";
  values[11] = @"Disabled";
  values[12] = @"Unknown";
  values[13] = @"Monogram";
  values[14] = @"Recent";
  values[15] = @"Connected";
  values[16] = @"Managed";
  values[17] = @"AirDrop";
  values[18] = @"Classroom";
  values[19] = @"ClassroomGroup";
  values[20] = @"ClassroomCourse";
  values[21] = @"Suggestion";
  values[22] = @"Rapport";
  values[23] = @"All";
  memset(v4, 0, sizeof(v4));
  int64x2_t v1 = (int64x2_t)xmmword_1A56EA350;
  int64x2_t v2 = vdupq_n_s64(2uLL);
  do
  {
    v4[v0] = v1;
    int64x2_t v1 = vaddq_s64(v1, v2);
    ++v0;
  }
  while (v0 != 12);
  gOrderedKinds = (uint64_t)CFArrayCreate(0, (const void **)values, 24, MEMORY[0x1E4F1D510]);
  CFDictionaryRef result = CFDictionaryCreate(0, (const void **)values, (const void **)v4, 24, &kSharingFastDictionaryKeyCallBacks, 0);
  gKindMap = (uint64_t)result;
  return result;
}

void sub_1A53C5EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, os_activity_scope_state_s state)
{
}

void sub_1A53C63C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A53C657C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A53C6738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A53C68F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A53C7174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A53C7CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53C87A8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1A53C92E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53CA9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53CAE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53CB250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53CD3B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A53CD4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

uint64_t SFNilEqual(unint64_t a1, uint64_t a2)
{
  if (a1 | a2) {
    return [(id)a1 isEqual:a2];
  }
  else {
    return 1;
  }
}

__CFString *SFLocalizedStringForKey(const __CFString *a1)
{
  uint64_t v1 = (__CFString *)copyLocalizedStringForKey(a1);

  return v1;
}

__CFString *SFLocalizedStringForKeyInStringsFileNamed(const __CFString *a1, const __CFString *a2)
{
  int64x2_t v2 = (__CFString *)copyLocalizedStringForKeyInStringsFile(a1, a2);

  return v2;
}

id SFNonLocalizedString(void *a1)
{
  id v1 = a1;

  return v1;
}

id SFHexStringForBase64EncodedString(void *a1)
{
  id v1 = (objc_class *)MEMORY[0x1E4F1C9B8];
  id v2 = a1;
  CFIndex v3 = (void *)[[v1 alloc] initWithBase64EncodedString:v2 options:0];

  size_t v4 = SFHexStringForDataEx(v3, 1);

  return v4;
}

id SFHexStringForDataEx(void *a1, char a2)
{
  CFIndex v3 = (void *)[a1 copy];
  size_t v4 = [MEMORY[0x1E4F28E78] string];
  id v5 = v3;
  uint64_t v6 = [v5 bytes];
  if ([v5 length])
  {
    unint64_t v7 = 0;
    do
    {
      size_t v8 = objc_msgSend(NSString, "stringWithFormat:", @"%c%c", a0123456789abcd[(unint64_t)*(unsigned __int8 *)(v6 + v7) >> 4], a0123456789abcd[*(unsigned char *)(v6 + v7) & 0xF]);
      [v4 appendString:v8];

      ++v7;
    }
    while (v7 < [v5 length]);
  }
  if (a2)
  {
    id v9 = v4;
  }
  else
  {
    id v9 = [NSString stringWithFormat:@"<%@>", v4];
  }
  __int16 v10 = v9;

  return v10;
}

id SFHexStringForData(void *a1)
{
  return SFHexStringForDataEx(a1, 0);
}

id SFDataFromCGImage(void *a1)
{
  CFRetain(a1);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __SFDataFromCGImage_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = a1;
  id v2 = (void (**)(void))_Block_copy(aBlock);
  ColorSpace = CGImageGetColorSpace((CGImageRef)a1);
  size_t v4 = (__CFString *)CGColorSpaceCopyName(ColorSpace);
  DataProvider = CGImageGetDataProvider((CGImageRef)a1);
  CFDataRef v6 = CGDataProviderCopyData(DataProvider);
  unint64_t v7 = (__CFDictionary *)objc_opt_new();
  CGImageGetWidth((CGImageRef)a1);
  CFDictionarySetInt64();
  CGImageGetHeight((CGImageRef)a1);
  CFDictionarySetInt64();
  CGImageGetBitsPerComponent((CGImageRef)a1);
  CFDictionarySetInt64();
  CGImageGetBitsPerPixel((CGImageRef)a1);
  CFDictionarySetInt64();
  CGImageGetBytesPerRow((CGImageRef)a1);
  CFDictionarySetInt64();
  CGImageGetBitmapInfo((CGImageRef)a1);
  CFDictionarySetInt64();
  CGImageGetRenderingIntent((CGImageRef)a1);
  CFDictionarySetInt64();
  BOOL ShouldInterpolate = CGImageGetShouldInterpolate((CGImageRef)a1);
  id v9 = (const void **)MEMORY[0x1E4F1CFD0];
  if (!ShouldInterpolate) {
    id v9 = (const void **)MEMORY[0x1E4F1CFC8];
  }
  CFDictionarySetValue(v7, @"si", *v9);
  [(__CFDictionary *)v7 setObject:v4 forKeyedSubscript:@"cn"];
  [(__CFDictionary *)v7 setObject:v6 forKeyedSubscript:@"id"];
  DataCFMutableStringRef Mutable = (void *)OPACKEncoderCreateDataMutable();

  v2[2](v2);

  return DataMutable;
}

void sub_1A53CDA78(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void __SFDataFromCGImage_block_invoke(uint64_t a1)
{
}

CGImageRef SFCreateCGImageFromData(void *a1)
{
  id v1 = a1;
  int v23 = 0;
  id v2 = (void *)OPACKDecodeData();
  CFStringGetTypeID();
  CFDictionaryGetTypedValue();
  CFIndex v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
  if (!v3) {
    CFIndex v3 = (__CFString *)(id)*MEMORY[0x1E4F1DC98];
  }
  CGColorSpaceRef v4 = CGColorSpaceCreateWithName(v3);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __SFCreateCGImageFromData_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = v4;
  os_activity_scope_state_s v20 = (void (**)(void))_Block_copy(aBlock);
  CFDataGetTypeID();
  CFDictionaryGetTypedValue();
  CFAllocatorRef v19 = v4;
  CFDataRef v16 = (const __CFData *)objc_claimAutoreleasedReturnValue();
  uint64_t v17 = v1;
  id v5 = CGDataProviderCreateWithCFData(v16);
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 3221225472;
  v21[2] = __SFCreateCGImageFromData_block_invoke_2;
  v21[3] = &__block_descriptor_40_e5_v8__0l;
  v21[4] = v5;
  CFDataRef v6 = (void (**)(void))_Block_copy(v21);
  size_t Int64 = CFDictionaryGetInt64();
  size_t v7 = CFDictionaryGetInt64();
  size_t v8 = CFDictionaryGetInt64();
  size_t v9 = CFDictionaryGetInt64();
  size_t v10 = CFDictionaryGetInt64();
  CGBitmapInfo Int64Ranged = CFDictionaryGetInt64Ranged();
  uint64_t v12 = CFDictionaryGetInt64();
  CGColorRenderingIntent intent = CFDictionaryGetInt64();
  CGImageRef v14 = CGImageCreate(Int64, v7, v8, v9, v10, v19, Int64Ranged, v5, 0, v12 != 0, intent);
  v6[2](v6);

  v20[2](v20);
  return v14;
}

void sub_1A53CDD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
}

void __SFCreateCGImageFromData_block_invoke(uint64_t a1)
{
  id v1 = *(const void **)(a1 + 32);
  if (v1) {
    CFRelease(v1);
  }
}

void __SFCreateCGImageFromData_block_invoke_2(uint64_t a1)
{
  id v1 = *(const void **)(a1 + 32);
  if (v1) {
    CFRelease(v1);
  }
}

id SFDataFromHexString(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  CFIndex v3 = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"$ <>:\n"];
  CGColorSpaceRef v4 = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"0123456789ABCDEFabcdef"];
  id v5 = [v4 invertedSet];

  CFDataRef v6 = [v1 componentsSeparatedByCharactersInSet:v3];
  size_t v7 = [v6 componentsJoinedByString:&stru_1EF9BDC68];

  uint64_t v8 = [v7 rangeOfCharacterFromSet:v5];
  if (([v7 length] & 1) == 0 && v8 == 0x7FFFFFFFFFFFFFFFLL && objc_msgSend(v7, "length"))
  {
    unint64_t v9 = 0;
    do
    {
      char v10 = [v7 characterAtIndex:v9];
      if ((v10 - 65) <= 5) {
        char v11 = v10 - 55;
      }
      else {
        char v11 = 0;
      }
      if ((v10 - 97) <= 5) {
        char v11 = v10 - 87;
      }
      if ((v10 - 48) <= 9) {
        char v12 = v10 - 48;
      }
      else {
        char v12 = v11;
      }
      unint64_t v13 = v9 + 1;
      int v14 = [v7 characterAtIndex:v13];
      unsigned int v15 = v14 - 48;
      if ((v14 - 65) <= 5) {
        char v16 = v14 - 55;
      }
      else {
        char v16 = 0;
      }
      if ((v14 - 97) <= 5) {
        char v17 = v14 - 87;
      }
      else {
        char v17 = v16;
      }
      if (v15 > 9) {
        LOBYTE(v15) = v17;
      }
      char v19 = v15 | (16 * v12);
      [v2 appendBytes:&v19 length:1];
      unint64_t v9 = v13 + 1;
    }
    while (v9 < [v7 length]);
  }

  return v2;
}

id SFStringComponentsFromTimeInterval(int a1, double a2)
{
  CGColorSpaceRef v4 = objc_opt_new();
  unint64_t v5 = (unint64_t)(a2 / 86400.0);
  double v6 = a2 - (double)(86400 * v5);
  unint64_t v7 = (unint64_t)(v6 / 3600.0);
  double v8 = v6 - (double)(3600 * v7);
  unint64_t v9 = (unint64_t)(v8 / 60.0);
  if (v5)
  {
    char v10 = objc_msgSend(MEMORY[0x1E4F28E78], "stringWithFormat:", @"%ld", v5);
    char v11 = v10;
    if (a1) {
      char v12 = @"d";
    }
    else {
      char v12 = @" day";
    }
    [v10 appendString:v12];
    if (v5 == 1) {
      int v13 = 1;
    }
    else {
      int v13 = a1;
    }
    if (v13) {
      int v14 = &stru_1EF9BDC68;
    }
    else {
      int v14 = @"s";
    }
    [v11 appendString:v14];
    [v4 addObject:v11];
  }
  if (v7)
  {
    unsigned int v15 = objc_msgSend(MEMORY[0x1E4F28E78], "stringWithFormat:", @"%ld", v7);
    char v16 = v15;
    if (a1) {
      char v17 = @"h";
    }
    else {
      char v17 = @" hour";
    }
    [v15 appendString:v17];
    if (v7 == 1) {
      int v18 = 1;
    }
    else {
      int v18 = a1;
    }
    if (v18) {
      char v19 = &stru_1EF9BDC68;
    }
    else {
      char v19 = @"s";
    }
    [v16 appendString:v19];
    [v4 addObject:v16];
  }
  double v20 = v8 - (double)(60 * v9);
  if (v9)
  {
    int v21 = objc_msgSend(MEMORY[0x1E4F28E78], "stringWithFormat:", @"%ld", v9);
    CFStringRef v22 = v21;
    if (a1) {
      int v23 = @"m";
    }
    else {
      int v23 = @" minute";
    }
    [v21 appendString:v23];
    if (v9 == 1) {
      int v24 = 1;
    }
    else {
      int v24 = a1;
    }
    if (v24) {
      uint64_t v25 = &stru_1EF9BDC68;
    }
    else {
      uint64_t v25 = @"s";
    }
    [v22 appendString:v25];
    [v4 addObject:v22];
  }
  if (v20 >= 1.0)
  {
    uint64_t v26 = objc_msgSend(MEMORY[0x1E4F28E78], "stringWithFormat:", @"%ld", (uint64_t)v20);
    size_t v27 = v26;
    if (a1) {
      CFStringRef v28 = @"s";
    }
    else {
      CFStringRef v28 = @" second";
    }
    [v26 appendString:v28];
    if (v20 == 1.0) {
      int v29 = 1;
    }
    else {
      int v29 = a1;
    }
    if (v29) {
      uint64_t v30 = &stru_1EF9BDC68;
    }
    else {
      uint64_t v30 = @"s";
    }
    [v27 appendString:v30];
    [v4 addObject:v27];
  }
  if (!(v7 | v5 | v9) && v20 < 5.0)
  {
    CFStringRef v31 = objc_msgSend(MEMORY[0x1E4F28E78], "stringWithFormat:", @"%ld", (unint64_t)((v20 - (double)(uint64_t)v20) * 1000.0));
    CFStringRef v32 = v31;
    if (a1) {
      CFURLRef v33 = @"ms";
    }
    else {
      CFURLRef v33 = @" millisecond";
    }
    [v31 appendString:v33];
    if ((unint64_t)((v20 - (double)(uint64_t)v20) * 1000.0) == 1) {
      int v34 = 1;
    }
    else {
      int v34 = a1;
    }
    if (v34) {
      char v35 = &stru_1EF9BDC68;
    }
    else {
      char v35 = @"s";
    }
    [v32 appendString:v35];
    [v4 addObject:v32];
  }

  return v4;
}

id SFStringFromTimeInterval(int a1, double a2)
{
  CGColorSpaceRef v4 = @", ";
  if (a1) {
    CGColorSpaceRef v4 = &stru_1EF9BDC68;
  }
  unint64_t v5 = v4;
  double v6 = SFStringComponentsFromTimeInterval(a1, a2);
  unint64_t v7 = [v6 componentsJoinedByString:v5];

  return v7;
}

__CFString *SFAdvertisementDescriptionFromPayloadData(void *a1)
{
  if (a1)
  {
    SFHexStringForDataEx(a1, 0);
    id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v2 = @"GOODBYE";
  }
  return v2;
}

id SFCompactStringFromCollection(void *a1)
{
  id v1 = a1;
  id v2 = [v1 description];
  int v3 = [v1 conformsToProtocol:&unk_1EFA30C60];

  if (v3)
  {
    CGColorSpaceRef v4 = [MEMORY[0x1E4F28FD8] regularExpressionWithPattern:@"((){4})|\\\\+n|\n" options:0 error:0];
    unint64_t v5 = objc_msgSend(v4, "stringByReplacingMatchesInString:options:range:withTemplate:", v2, 0, 0, objc_msgSend(v2, "length"), &stru_1EF9BDC68);

    id v2 = [v5 stringByReplacingOccurrencesOfString:@"\\\"" withString:@"\""];
  }

  return v2;
}

id SFNonBreakingStringFromDeviceName(void *a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v19 = [&unk_1EFA09FF8 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v19)
  {
    uint64_t v18 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v19; ++i)
      {
        if (*(void *)v21 != v18) {
          objc_enumerationMutation(&unk_1EFA09FF8);
        }
        int v3 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        CGColorSpaceRef v4 = objc_msgSend(v3, "stringByAppendingString:", @" ", v18);
        unint64_t v5 = [@" " stringByAppendingString:v3];
        double v6 = [v5 stringByAppendingString:@" "];
        unint64_t v7 = [v3 stringByReplacingOccurrencesOfString:@" " withString:@" "];
        if ([v1 hasPrefix:v4])
        {
          uint64_t v8 = [v1 rangeOfString:v4];
          uint64_t v10 = objc_msgSend(v1, "stringByReplacingOccurrencesOfString:withString:options:range:", v3, v7, 0, v8, v9);

          id v1 = (id)v10;
        }
        if ([v1 hasSuffix:v5])
        {
          uint64_t v11 = [v1 rangeOfString:v5 options:4];
          uint64_t v13 = objc_msgSend(v1, "stringByReplacingOccurrencesOfString:withString:options:range:", v3, v7, 0, v11, v12);

          id v1 = (id)v13;
        }
        int v14 = v1;
        unsigned int v15 = [@" " stringByAppendingString:v7];
        char v16 = [v15 stringByAppendingString:@" "];
        id v1 = [v1 stringByReplacingOccurrencesOfString:v6 withString:v16];
      }
      uint64_t v19 = [&unk_1EFA09FF8 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v19);
  }

  return v1;
}

uint64_t SFIsBluetoothEnabled()
{
  if (SFDeviceIsVirtualMachine()) {
    return 1;
  }
  id v5 = 0;
  id v1 = [MEMORY[0x1E4F1BD30] controllerInfoAndReturnError:&v5];
  id v2 = v5;
  if (v2)
  {
    int v3 = framework_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      SFIsBluetoothEnabled_cold_1();
    }

    BOOL v0 = 0;
  }
  else
  {
    BOOL v0 = [v1 bluetoothState] == 5;
  }

  return v0;
}

uint64_t SFIsDeviceAppleTV()
{
  return 0;
}

uint64_t SFIsDeviceAudioAccessory()
{
  if (SFIsDeviceAudioAccessory_onceToken != -1) {
    dispatch_once(&SFIsDeviceAudioAccessory_onceToken, &__block_literal_global_10);
  }
  return SFIsDeviceAudioAccessory_result;
}

uint64_t __SFIsDeviceAudioAccessory_block_invoke()
{
  uint64_t result = MGGetSInt32Answer();
  SFIsDeviceAudioAccessory_uint64_t result = result == 7;
  return result;
}

uint64_t SFIsGreenTeaDevice()
{
  if (SFIsGreenTeaDevice_onceToken != -1) {
    dispatch_once(&SFIsGreenTeaDevice_onceToken, &__block_literal_global_263);
  }
  return SFIsGreenTeaDevice_result;
}

uint64_t __SFIsGreenTeaDevice_block_invoke()
{
  if (MGGetBoolAnswer()) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = MGGetBoolAnswer();
  }
  SFIsGreenTeaDevice_uint64_t result = result;
  return result;
}

uint64_t SFIsPureGreenTeaDevice()
{
  if (SFIsPureGreenTeaDevice_onceToken != -1) {
    dispatch_once(&SFIsPureGreenTeaDevice_onceToken, &__block_literal_global_271);
  }
  return SFIsPureGreenTeaDevice_result;
}

uint64_t __SFIsPureGreenTeaDevice_block_invoke()
{
  uint64_t result = MGGetBoolAnswer();
  SFIsPureGreenTeaDevice_uint64_t result = result;
  return result;
}

uint64_t SFDeviceSupportsForceTouch()
{
  if (SFDeviceSupportsForceTouch_onceToken != -1) {
    dispatch_once(&SFDeviceSupportsForceTouch_onceToken, &__block_literal_global_273);
  }
  return SFDeviceSupportsForceTouch_supportsForceTouch;
}

uint64_t __SFDeviceSupportsForceTouch_block_invoke()
{
  uint64_t result = MGGetBoolAnswer();
  SFDeviceSupportsForceTouch_supportsForceTouch = result;
  return result;
}

uint64_t SFIsDevicePhone()
{
  if (SFIsDevicePhone_onceToken != -1) {
    dispatch_once(&SFIsDevicePhone_onceToken, &__block_literal_global_278);
  }
  return SFIsDevicePhone_isPhone;
}

uint64_t __SFIsDevicePhone_block_invoke()
{
  uint64_t result = MGGetSInt32Answer();
  SFIsDevicePhone_isPhone = result == 1;
  return result;
}

uint64_t SFIsFMFAllowed()
{
  if (SFIsFMFAllowed_onceToken != -1) {
    dispatch_once(&SFIsFMFAllowed_onceToken, &__block_literal_global_280);
  }
  return SFIsFMFAllowed_isFMFAllowed;
}

uint64_t __SFIsFMFAllowed_block_invoke()
{
  uint64_t result = MGGetBoolAnswer();
  SFIsFMFAllowed_isFMFAllowed = result;
  return result;
}

uint64_t SFIsRangingSupported()
{
  Class v0 = (Class)getPRRangingDeviceClass[0]();

  return [(objc_class *)v0 isSupported];
}

void __SFDeviceModel_block_invoke()
{
  uint64_t v0 = MGCopyAnswer();
  id v1 = (void *)SFDeviceModel_result;
  SFDeviceModel_uint64_t result = v0;

  if (!SFDeviceModel_result)
  {
    SFDeviceModel_uint64_t result = @"?";
  }
}

id SFDeviceProductVersion()
{
  if (SFDeviceProductVersion_onceToken[0] != -1) {
    dispatch_once(SFDeviceProductVersion_onceToken, &__block_literal_global_293);
  }
  uint64_t v0 = (void *)SFDeviceProductVersion_result;

  return v0;
}

void __SFDeviceProductVersion_block_invoke()
{
  uint64_t v0 = MGCopyAnswer();
  id v1 = (void *)SFDeviceProductVersion_result;
  SFDeviceProductVersion_uint64_t result = v0;

  if (!SFDeviceProductVersion_result)
  {
    SFDeviceProductVersion_uint64_t result = @"?";
  }
}

BOOL SFIsiCloudDriveEnabled()
{
  uint64_t v0 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v1 = [v0 ubiquityIdentityToken];
  BOOL v2 = v1 != 0;

  return v2;
}

uint64_t SFDeviceSupportsRanging()
{
  return 1;
}

uint64_t SFDeviceSupportsAWDL()
{
  return 1;
}

uint64_t __SFDeviceIsVirtualMachine_block_invoke()
{
  uint64_t result = MGGetBoolAnswer();
  SFDeviceIsVirtualMachine_uint64_t result = result;
  return result;
}

uint64_t SFDeviceSupportsAirDrop()
{
  return 1;
}

uint64_t SFDeviceSupportsRapportOnlyAirDropDiscovery()
{
  return _os_feature_enabled_impl();
}

uint64_t SFDeviceSupportsLegacyAirDrop()
{
  if (disableAirDrop()) {
    return 0;
  }
  uint64_t result = forceOldMode();
  if (result) {
    return IsAppleInternalBuild() != 0;
  }
  return result;
}

uint64_t SFDeviceSupportsContinuity()
{
  return 1;
}

uint64_t SFDeviceSupportsRemoteDisc()
{
  return 0;
}

uint64_t SFDeviceSupportsAutoUnlock()
{
  if (SFDeviceClassCodeGet() != 1 && SFDeviceClassCodeGet() != 8
    || !_os_feature_enabled_impl())
  {
    return 0;
  }

  return MGGetBoolAnswer();
}

uint64_t SFDeviceIsRealityDevice()
{
  int v0 = SFDeviceClassCodeGet();
  int v1 = SFDeviceClassCodeGet();
  unsigned int v2 = _os_feature_enabled_impl();
  if (v0 == 3) {
    unsigned int v3 = v2;
  }
  else {
    unsigned int v3 = 0;
  }
  if (v1 == 8) {
    return 1;
  }
  else {
    return v3;
  }
}

uint64_t SFDeviceSupportsSiriWatchAuth()
{
  int v0 = SFDeviceClassCodeGet();
  int v1 = SFDeviceClassCodeGet();
  if (v0 != 7 && v1 != 1) {
    return 0;
  }

  return SFDeviceSupportsAutoUnlock();
}

BOOL SFDeviceSupportsNanoWallet()
{
  int v0 = SFDeviceClassCodeGet();
  int v1 = SFDeviceClassCodeGet();
  return v0 == 7 || v1 == 1;
}

uint64_t SFDeviceSupportsUnlockClassC()
{
  uint64_t result = SFDeviceIsRealityDevice();
  if (result)
  {
    return _os_feature_enabled_impl();
  }
  return result;
}

uint64_t SFDeviceSupportsMacUnlockPhonePairing()
{
  int v0 = SFDeviceClassCodeGet();
  int v1 = SFDeviceClassCodeGet();
  if (v0 != 5 && v1 != 1) {
    return 0;
  }

  return _os_feature_enabled_impl();
}

uint64_t SFDeviceSupportsGuestModeUnlockPairing()
{
  int v0 = SFDeviceClassCodeGet();
  int v1 = SFDeviceClassCodeGet();
  uint64_t result = SFDeviceIsRealityDevice();
  if (v0 == 1 || v1 == 3 || result)
  {
    if (_os_feature_enabled_impl())
    {
      return 1;
    }
    else
    {
      unsigned int v3 = auto_unlock_log();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)CGColorSpaceRef v4 = 0;
        _os_log_impl(&dword_1A5389000, v3, OS_LOG_TYPE_DEFAULT, "FeatureFlag DeviceSharing/GuestUserHandover is not enabled", v4, 2u);
      }

      return 0;
    }
  }
  return result;
}

uint64_t SFDeviceSupportsTVAudio()
{
  int v0 = SFDeviceClassCodeGet();
  if (SFDeviceIsVirtualMachine() && v0 == 4) {
    return 1;
  }
  uint64_t result = MGGetBoolAnswer();
  if (result)
  {
    return MGGetBoolAnswer();
  }
  return result;
}

uint64_t SFDeviceSupportsUSBC()
{
  return MGGetBoolAnswer();
}

uint64_t SFLostMode()
{
  int v0 = [(Class)getFMDFMIPManagerClass[0]() sharedInstance];
  uint64_t v1 = [v0 lostModeIsActive];

  return v1;
}

uint64_t SFManagedLostMode()
{
  int v0 = [(Class)getFMDFMIPManagerClass[0]() sharedInstance];
  uint64_t v1 = [v0 isManagedLostModeActive];

  return v1;
}

BOOL SFDeviceTimeLimitEveryoneMode()
{
  return CFPreferencesGetAppBooleanValue(@"OverrideTimeLimitEveryoneMode", @"com.apple.sharingd", 0) == 0;
}

uint64_t SFIsRunningUnitTests()
{
  if (SFIsRunningUnitTests_onceToken != -1) {
    dispatch_once(&SFIsRunningUnitTests_onceToken, &__block_literal_global_330);
  }
  return SFIsRunningUnitTests_result;
}

void __SFIsRunningUnitTests_block_invoke()
{
  int v0 = [MEMORY[0x1E4F28F80] processInfo];
  uint64_t v1 = [v0 environment];
  unsigned int v2 = [v1 objectForKey:@"XCTestBundlePath"];

  if (v2 || NSClassFromString(&cfstr_Xctestcase.isa)) {
    SFIsRunningUnitTests_uint64_t result = 1;
  }
}

BOOL SFIsStringURLSafelyConvertible(void *a1)
{
  id v1 = a1;
  if ([v1 isFileURL])
  {
    BOOL v2 = 0;
  }
  else
  {
    unsigned int v3 = [v1 scheme];
    if (v3)
    {
      CGColorSpaceRef v4 = [v1 host];
      BOOL v2 = v4 != 0;
    }
    else
    {
      BOOL v2 = 0;
    }
  }
  return v2;
}

id SFTruncateAirDropSenderNameForUI(void *a1)
{
  id v1 = a1;
  if ((unint64_t)[v1 length] <= 0x28)
  {
    id v4 = v1;
  }
  else
  {
    BOOL v2 = NSString;
    unsigned int v3 = [v1 substringToIndex:39];
    id v4 = [v2 stringWithFormat:@"%@…", v3];
  }

  return v4;
}

id SFTruncateAirDropFilenameForUI(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 length];
  id v3 = v1;
  id v4 = v3;
  id v5 = v3;
  if (v2 >= 0x1A)
  {
    id v5 = v3;
    if ((unint64_t)[v3 length] >= 0x1A)
    {
      double v6 = NSString;
      unint64_t v7 = [v4 substringToIndex:10];
      uint64_t v8 = objc_msgSend(v4, "substringFromIndex:", objc_msgSend(v4, "length") - 14);
      id v5 = [v6 stringWithFormat:@"%@…%@", v7, v8];
    }
  }

  return v5;
}

id SFStringIsJSON(void *a1)
{
  if (a1)
  {
    id v1 = [a1 dataUsingEncoding:4];
    if (v1)
    {
      id v8 = 0;
      unint64_t v2 = [MEMORY[0x1E4F28D90] JSONObjectWithData:v1 options:0 error:&v8];
      id v3 = v8;
    }
    else
    {
      id v3 = 0;
      unint64_t v2 = 0;
    }
  }
  else
  {
    id v3 = 0;
    unint64_t v2 = 0;
  }
  if (v3) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v2 == 0;
  }
  if (v4) {
    id v5 = 0;
  }
  else {
    id v5 = v2;
  }
  id v6 = v5;

  return v6;
}

uint64_t SFPlaygroundsAppAvailable()
{
  return SFRemovableSystemAppAvailable(@"com.apple.Playgrounds");
}

uint64_t SFRemovableSystemAppAvailable(uint64_t a1)
{
  id v1 = [MEMORY[0x1E4F223B8] applicationProxyForIdentifier:a1];
  unint64_t v2 = [v1 appState];
  if ([v2 isInstalled])
  {
    id v3 = [v1 appState];
    uint64_t v4 = [v3 isRestricted] ^ 1;
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t __SFStoreDemoMode_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t result = CFPreferencesGetAppBooleanValue(@"StoreDemoMode", @"com.apple.demo-settings", &keyExistsAndHasValidFormat);
  SFStoreDemoMode_uint64_t result = result != 0;
  return result;
}

uint64_t SFFilesAppAvailable()
{
  return SFRemovableSystemAppAvailable(@"com.apple.DocumentsApp");
}

uint64_t SFWalletAppAvailable()
{
  return SFRemovableSystemAppAvailable(@"com.apple.Passbook");
}

uint64_t SFVoiceMemosAppAvailable()
{
  return SFRemovableSystemAppAvailable(@"com.apple.VoiceMemos");
}

id SFCreateLivePhotoBundle(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a4;
  id v9 = a3;
  uint64_t v10 = [a2 path];
  uint64_t v11 = [v9 path];

  uint64_t v12 = 0;
  if (v8 && v10 && v11)
  {
    uint64_t v13 = airdrop_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = [v11 lastPathComponent];
      unsigned int v15 = [v10 lastPathComponent];
      *(_DWORD *)buf = 138412546;
      uint64_t v26 = v14;
      __int16 v27 = 2112;
      CFStringRef v28 = v15;
      _os_log_impl(&dword_1A5389000, v13, OS_LOG_TYPE_DEFAULT, "Creating live photo bundle with image %@ and video %@", buf, 0x16u);
    }
    char v16 = [NSString stringWithFormat:@"%@.pvt", v8];
    uint64_t v12 = [v7 URLByAppendingPathComponent:v16];
    char v17 = [MEMORY[0x1E4F28CB8] defaultManager];
    buf[0] = 0;
    uint64_t v18 = [v12 path];
    char v19 = [v17 fileExistsAtPath:v18 isDirectory:buf];

    if ((v19 & 1) != 0 || buf[0]) {
      [v17 removeItemAtURL:v12 error:0];
    }
    long long v20 = (void *)[objc_alloc((Class)getPFVideoComplementClass[0]()) initWithPathToVideo:v10 pathToImage:v11];
    id v24 = 0;
    [v20 writeToBundleAtURL:v12 error:&v24];
    id v21 = v24;
    if (v21)
    {
      long long v22 = airdrop_log();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        SFCreateLivePhotoBundle_cold_1(v12, (uint64_t)v21, v22);
      }

      uint64_t v12 = 0;
    }
  }

  return v12;
}

uint64_t SFShouldShowRepairProxCard(void *a1)
{
  id v1 = a1;
  if (SFShouldShowWirelessSplitterProxCard(v1))
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t Int64Ranged = CFDictionaryGetInt64Ranged();
    uint64_t v2 = 1;
    if (((Int64Ranged - 8194) > 0xE || ((1 << (Int64Ranged - 2)) & 0x7B9B) == 0)
      && Int64Ranged != 0x10000)
    {
      id v5 = [[SFHeadphoneProduct alloc] initWithProductID:Int64Ranged];
      uint64_t v2 = [(SFHeadphoneProduct *)v5 supportsRepair];
    }
  }

  return v2;
}

BOOL SFShouldShowWirelessSplitterProxCard(void *a1)
{
  id v1 = a1;
  BOOL v2 = CFPrefs_GetInt64() != 0;

  return v2;
}

uint64_t MGDeviceClassFromSFDeviceClassCode(char a1)
{
  if ((a1 - 1) > 7u) {
    return 0xFFFFFFFFLL;
  }
  else {
    return dword_1A56EA3D0[(char)(a1 - 1)];
  }
}

id SFGenerateTypeList(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  BOOL v2 = [MEMORY[0x1E4F28E78] string];
  objc_msgSend(v2, "appendString:", @"(\n");
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = (objc_class *)objc_opt_class();
        id v9 = NSStringFromClass(v8);
        [v2 appendFormat:@"\t%@\n", v9];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  [v2 appendString:@""]);

  return v2;
}

id SFFilterStringsFromList(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  BOOL v2 = [MEMORY[0x1E4F28E78] string];
  objc_msgSend(v2, "appendString:", @"(\n");
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        id v9 = objc_opt_class();
        if ([v9 isEqual:objc_opt_class()])
        {
          uint64_t v10 = (objc_class *)objc_opt_class();
          long long v11 = NSStringFromClass(v10);
          [v2 appendFormat:@"\t%@\n", v11];
        }
        else
        {
          [v2 appendFormat:@"\t%@\n", v8];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  [v2 appendString:@""]);

  return v2;
}

uint64_t __SFShouldLogSensitiveDescriptions_block_invoke()
{
  uint64_t result = IsAppleInternalBuild();
  if (result || (uint64_t result = CFPrefs_GetInt64()) != 0) {
    SFShouldLogSensitiveDescriptions_shouldLog = 1;
  }
  return result;
}

void SFFakeFilesAndItemsArrayForURLs(void *a1, void *a2, void *a3)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = [MEMORY[0x1E4F1CA48] array];
  int v34 = [MEMORY[0x1E4F1CA48] array];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v36 objects:v40 count:16];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)v37;
    id v9 = @"file";
    do
    {
      uint64_t v10 = 0;
      uint64_t v35 = v7;
      do
      {
        if (*(void *)v37 != v8) {
          objc_enumerationMutation(v5);
        }
        long long v11 = *(void **)(*((void *)&v36 + 1) + 8 * v10);
        long long v12 = [v11 scheme];
        int v13 = [v12 isEqualToString:v9];

        if (v13)
        {
          long long v14 = SFGenerateFileInfoForURL(v11);
          [v4 addObject:v14];
        }
        else
        {
          long long v15 = [v11 scheme];
          int v16 = [v15 isEqualToString:@"assets-library"];

          if (v16)
          {
            char v17 = [v11 absoluteString];
            uint64_t v18 = [v17 lowercaseString];
            int v19 = [v18 containsString:@".mov"];

            if (v19) {
              long long v20 = @"/Some/fake/folder/%@.mov";
            }
            else {
              long long v20 = @"/Some/fake/folder/%@.jpg";
            }
            id v21 = (void *)MEMORY[0x1E4F1CB10];
            long long v22 = NSString;
            long long v23 = [MEMORY[0x1E4F29128] UUID];
            [v23 UUIDString];
            id v24 = v9;
            uint64_t v25 = v8;
            uint64_t v26 = v4;
            CFStringRef v28 = v27 = v5;
            uint64_t v29 = objc_msgSend(v22, "stringWithFormat:", v20, v28);
            uint64_t v30 = [v21 fileURLWithPath:v29];

            id v5 = v27;
            uint64_t v4 = v26;
            uint64_t v8 = v25;
            id v9 = v24;

            uint64_t v7 = v35;
            CFStringRef v31 = SFGenerateFileInfoForURL(v30);
            [v4 addObject:v31];
          }
          else
          {
            [v34 addObject:v11];
          }
        }
        ++v10;
      }
      while (v7 != v10);
      uint64_t v7 = [v5 countByEnumeratingWithState:&v36 objects:v40 count:16];
    }
    while (v7);
  }

  *a2 = (id)[v4 copy];
  *a3 = (id)[v34 copy];
}

id SFGenerateFileInfoForURL(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F1CA60];
  id v2 = a1;
  id v3 = [v1 dictionary];
  uint64_t v4 = [v2 lastPathComponent];

  if (v4)
  {
    [v3 setObject:v4 forKeyedSubscript:@"FileName"];
    id v5 = [v4 pathExtension];
    PreferredIdentifierForTag = (__CFString *)UTTypeCreatePreferredIdentifierForTag((CFStringRef)*MEMORY[0x1E4F224F8], v5, 0);
    if (PreferredIdentifierForTag) {
      [v3 setObject:PreferredIdentifierForTag forKeyedSubscript:@"FileType"];
    }
  }

  return v3;
}

id SFContentTypes(void *a1, void *a2, void *a3, unsigned char *a4, unsigned char *a5)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  id v6 = a1;
  id v38 = a2;
  uint64_t v7 = [MEMORY[0x1E4F1CA60] dictionary];
  CFStringRef v45 = [MEMORY[0x1E4F1CA60] dictionary];
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id obj = v6;
  uint64_t v8 = [obj countByEnumeratingWithState:&v50 objects:v55 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v44 = *(void *)v51;
    CFStringRef inConformsToUTI = (const __CFString *)*MEMORY[0x1E4F22628];
    uint64_t v10 = (__CFString *)*MEMORY[0x1E4F225F8];
    CFStringRef v11 = (const __CFString *)*MEMORY[0x1E4F22660];
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v51 != v44) {
          objc_enumerationMutation(obj);
        }
        int v13 = *(void **)(*((void *)&v50 + 1) + 8 * i);
        long long v14 = [v13 objectForKeyedSubscript:@"FileName"];
        long long v15 = [v14 pathExtension];
        int v16 = [v13 objectForKeyedSubscript:@"FileType"];
        if (UTTypeConformsTo(v16, inConformsToUTI)) {
          char v17 = v10;
        }
        else {
          char v17 = v16;
        }
        uint64_t v18 = v17;

        if (SFIsImage(v18)) {
          int v19 = v10;
        }
        else {
          int v19 = v18;
        }
        long long v20 = v19;

        if (UTTypeConformsTo(v20, v11)) {
          id v21 = (__CFString *)v11;
        }
        else {
          id v21 = v20;
        }
        long long v22 = v21;

        [v45 setObject:v22 forKeyedSubscript:v15];
        if ([v7 count])
        {
          long long v23 = [v7 objectForKeyedSubscript:v22];

          if (v23)
          {
            id v24 = [v7 objectForKeyedSubscript:v22];
            uint64_t v25 = objc_msgSend(NSNumber, "numberWithInteger:", -[__CFString integerValue](v24, "integerValue") + 1);
            [v7 setObject:v25 forKeyedSubscript:v22];
          }
          else
          {
            uint64_t v26 = [v7 allKeys];
            id v24 = [v26 objectAtIndexedSubscript:0];

            if (SFIsImage(v24) && UTTypeConformsTo(v22, v11) || UTTypeConformsTo(v24, v11) && SFIsImage(v22)) {
              [v7 setObject:&unk_1EFA09428 forKeyedSubscript:v22];
            }
            else {
              *a4 = 1;
            }
          }
        }
        else
        {
          [v7 setObject:&unk_1EFA09428 forKeyedSubscript:v22];
        }
      }
      uint64_t v9 = [obj countByEnumeratingWithState:&v50 objects:v55 count:16];
    }
    while (v9);
  }

  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v27 = v38;
  uint64_t v28 = [v27 countByEnumeratingWithState:&v46 objects:v54 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v47;
    do
    {
      for (uint64_t j = 0; j != v29; ++j)
      {
        if (*(void *)v47 != v30) {
          objc_enumerationMutation(v27);
        }
        CFStringRef v32 = *(void **)(*((void *)&v46 + 1) + 8 * j);
        if (([v32 isFileURL] & 1) == 0)
        {
          CFURLRef v33 = [v32 scheme];
          if ([v7 count])
          {
            int v34 = [v7 objectForKeyedSubscript:v33];

            if (v34)
            {
              uint64_t v35 = [v7 objectForKeyedSubscript:v33];
              long long v36 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v35, "integerValue") + 1);
              [v7 setObject:v36 forKeyedSubscript:v33];
            }
            else
            {
              *a4 = 1;
            }
          }
          else
          {
            *a5 = 1;
            [v7 setObject:&unk_1EFA09428 forKeyedSubscript:v33];
          }
        }
      }
      uint64_t v29 = [v27 countByEnumeratingWithState:&v46 objects:v54 count:16];
    }
    while (v29);
  }

  *a3 = (id)[v45 copy];

  return v7;
}

BOOL SFIsLivePhotos(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22628]) != 0;
}

BOOL SFIsImage(void *a1)
{
  id v1 = a1;
  if (UTTypeConformsTo(v1, (CFStringRef)*MEMORY[0x1E4F225F8])) {
    BOOL v2 = 1;
  }
  else {
    BOOL v2 = UTTypeConformsTo(v1, (CFStringRef)*MEMORY[0x1E4F22628]) != 0;
  }

  return v2;
}

BOOL SFIsVideo(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22660]) != 0;
}

uint64_t SFUpTicksDiffFromNowToString()
{
  mach_absolute_time();
  UpTicksToSecondsF();
  return objc_msgSend(NSString, "stringWithFormat:", @"%fms", v0 * 1000.0);
}

id SFDateToStringRFC3339(void *a1)
{
  id v1 = a1;
  BOOL v2 = SFRFC3339DateFormatter();
  id v3 = [v2 stringFromDate:v1];

  return v3;
}

id SFRFC3339DateFormatter()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28C10]);
  id v1 = (void *)[objc_alloc(MEMORY[0x1E4F1CA20]) initWithLocaleIdentifier:@"en_US_POSIX"];
  [v0 setLocale:v1];
  [v0 setDateFormat:@"yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'"];
  BOOL v2 = [MEMORY[0x1E4F1CAF0] timeZoneForSecondsFromGMT:0];
  [v0 setTimeZone:v2];

  return v0;
}

id SFStringToDateRFC3339(void *a1)
{
  id v1 = a1;
  BOOL v2 = SFRFC3339DateFormatter();
  id v3 = [v2 dateFromString:v1];

  return v3;
}

BOOL SFIsCoreType(void *a1)
{
  CFStringRef v1 = a1;
  BOOL v2 = (__CFString *)v1;
  if (v1 && (CFURLRef v3 = UTTypeCopyDeclaringBundleURL(v1)) != 0)
  {
    CFURLRef v4 = v3;
    CFStringRef v5 = CFURLCopyFileSystemPath(v3, kCFURLPOSIXPathStyle);
    if (v5)
    {
      CFStringRef v6 = v5;
      BOOL v7 = CFEqual(v5, @"/System/Library/CoreServices/MobileCoreTypes.bundle")
        || CFEqual(v6, @"/System/Library/CoreServices/CoreTypes.bundle");
      CFRelease(v6);
    }
    else
    {
      BOOL v7 = 0;
    }
    CFRelease(v4);
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

uint64_t SFIsAppleApp(void *a1, const char *a2)
{
  return [a1 hasPrefix:@"com.apple."];
}

uint64_t SFIsAppStoreLink(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"com.apple.AppStore"]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqualToString:@"com.apple.TVAppStore"];
  }

  return v2;
}

BOOL SFIsCalendarEvent(const __CFString *a1)
{
  return UTTypeConformsTo(a1, @"com.apple.ical.ics") != 0;
}

uint64_t SFIsContact(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 isEqualToString:*MEMORY[0x1E4F22718]])
  {
    uint64_t v5 = 1;
  }
  else if ([v3 isEqualToString:*MEMORY[0x1E4F22590]])
  {
    uint64_t v5 = [v4 isEqualToString:@"vcf"];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t SFIsCredential(void *a1)
{
  id v1 = (void (__cdecl *)())getSFSharablePasswordURLSchemeForAirDrop[0];
  id v2 = a1;
  id v3 = v1();
  uint64_t v4 = [v2 isEqual:v3];

  return v4;
}

BOOL SFIsePub(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F225A8]) != 0;
}

uint64_t SFIsiCloudFamilyLink(void *a1)
{
  id v1 = a1;
  id v15 = 0;
  id v2 = [MEMORY[0x1E4F22398] appLinksWithURL:v1 limit:1 error:&v15];
  id v3 = v15;
  uint64_t v4 = [v2 firstObject];

  uint64_t v5 = airdrop_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG);
  if (v4)
  {
    if (v6) {
      SFIsiCloudFamilyLink_cold_3(v4);
    }

    BOOL v7 = [v4 targetApplicationProxy];
    uint64_t v8 = [v7 bundleIdentifier];
    uint64_t v9 = v8;
    uint64_t v10 = @"com.apple.family";
  }
  else
  {
    if (v6) {
      SFIsiCloudFamilyLink_cold_2((uint64_t)v1, v3, v5);
    }

    CFStringRef v11 = [MEMORY[0x1E4F223E0] defaultWorkspace];
    BOOL v7 = [v11 URLOverrideForURL:v1];

    long long v12 = airdrop_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      SFIsiCloudFamilyLink_cold_1(v7);
    }

    uint64_t v8 = [v7 scheme];
    uint64_t v9 = v8;
    uint64_t v10 = @"family";
  }
  uint64_t v13 = [v8 isEqualToString:v10];

  return v13;
}

uint64_t SFIsiBooksLink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.iBooks"];
}

uint64_t SFIsiTunesULink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.itunesu"];
}

uint64_t SFIsiWorkLink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.iWork.link"];
}

uint64_t SFIsSharediCloudDocumentsLink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.CloudKit.ShareBear"];
}

uint64_t SFIsFindMyFriendsLink(void *a1, const char *a2)
{
  return [a1 isEqual:@"fmf1"];
}

BOOL SFIsPhotosAssetBundle(const __CFString *a1)
{
  return UTTypeConformsTo(a1, @"com.apple.photos.asset-bundle") != 0;
}

BOOL SFIsHEIF(const __CFString *a1)
{
  return UTTypeConformsTo(a1, @"public.heif-standard") != 0;
}

uint64_t SFIsManagedConfigurationType(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F74230];
  id v2 = a1;
  id v3 = [v1 sharedConnection];
  uint64_t v4 = [v3 acceptedFileExtensions];
  uint64_t v5 = [v4 containsObject:v2];

  return v5;
}

uint64_t SFIsKeynoteLive(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.keynote.live.link"];
}

uint64_t SFIsKeynoteLiveLink(uint64_t a1)
{
  id v1 = [MEMORY[0x1E4F29088] componentsWithURL:a1 resolvingAgainstBaseURL:1];
  id v2 = [v1 path];
  id v3 = [v2 pathComponents];

  if ((unint64_t)[v3 count] < 2)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v4 = [v3 objectAtIndexedSubscript:1];
    uint64_t v5 = [v4 lowercaseString];
    uint64_t v6 = [v5 isEqual:@"keynote-live"];
  }
  return v6;
}

uint64_t SFIsMapLink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.Maps"];
}

uint64_t SFIsMusicLink(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"com.apple.Music"]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqualToString:@"com.apple.TVMusic"];
  }

  return v2;
}

uint64_t SFIsMusicStoreLink(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:@"com.apple.MobileStore"] & 1) != 0
    || ([v1 isEqualToString:@"com.apple.TVShows"] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:@"com.apple.TVMovies"];
  }

  return v2;
}

uint64_t SFIsNote(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"notesairdropdocument"];
}

uint64_t SFIsNewsLink(uint64_t a1)
{
  id v1 = [MEMORY[0x1E4F29088] componentsWithURL:a1 resolvingAgainstBaseURL:1];
  uint64_t v2 = [v1 scheme];
  id v3 = [v2 lowercaseString];

  uint64_t v4 = [v1 host];
  uint64_t v5 = [v4 lowercaseString];

  if ([v3 isEqualToString:@"https"]) {
    uint64_t v6 = [v5 isEqualToString:@"apple.news"];
  }
  else {
    uint64_t v6 = 0;
  }

  return v6;
}

uint64_t SFIsPass(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (([v3 isEqualToString:@"com.apple.pkpass"] & 1) != 0
    || ([v3 isEqualToString:@"com.apple.pkpass-data"] & 1) != 0)
  {
    uint64_t v5 = 1;
  }
  else if ([v3 isEqualToString:*MEMORY[0x1E4F22590]])
  {
    uint64_t v5 = [v4 isEqualToString:@"pkpass"];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t SFIsPeerPayment(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 isEqualToString:@"com.apple.pkpeerpayment"])
  {
    uint64_t v5 = 1;
  }
  else if ([v3 isEqualToString:*MEMORY[0x1E4F22590]])
  {
    uint64_t v5 = [v4 isEqualToString:@"pkpeerpayment"];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

BOOL SFIsPDF(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22668]) != 0;
}

uint64_t SFIsPlaygroundItem(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"playground"]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqualToString:@"playgroundbook"];
  }

  return v2;
}

uint64_t SFIsIPA(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"ipa"];
}

uint64_t SFIsPhotosApp(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:@"com.apple.mobileslideshow"] & 1) != 0
    || ([v1 isEqualToString:@"com.apple.Photos"] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:@"com.apple.camera"];
  }

  return v2;
}

BOOL SFIsPlainText(const __CFString *a1)
{
  return UTTypeConformsTo(a1, (CFStringRef)*MEMORY[0x1E4F22688]) != 0;
}

uint64_t SFIsPodcastsLink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.podcasts"];
}

uint64_t SFIsPhoneLink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.InCallService"];
}

BOOL SFIsVoiceMemo(const __CFString *a1)
{
  return UTTypeConformsTo(a1, @"com.apple.m4a-audio") != 0;
}

uint64_t SFIsWebLink(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.mobilesafari"];
}

uint64_t SFIsPasskeyCredentialLink(void *a1)
{
  id v1 = a1;
  getSFSharablePasswordClass[0]();
  if (objc_opt_respondsToSelector()) {
    uint64_t v2 = [(Class)getSFSharablePasswordClass[0]() safariCredentialURLHasPasskey:v1];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t SFIsAllowedAirDropCredentialClient(void *a1)
{
  uint64_t v1 = SFIsAllowedAirDropCredentialClient_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&SFIsAllowedAirDropCredentialClient_onceToken, &__block_literal_global_540);
  }
  uint64_t v3 = [(id)SFIsAllowedAirDropCredentialClient_allowedClients containsObject:v2];

  return v3;
}

void __SFIsAllowedAirDropCredentialClient_block_invoke()
{
  uint64_t v0 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", @"com.apple.Sharing.AirDrop", @"com.apple.Safari", @"com.apple.Passwords.remoteservice", @"com.apple.Preferences", @"com.apple.SafariTechnologyPreview", @"com.apple.Passwords", @"com.apple.SafariPlatformSupport.Helper", 0);
  uint64_t v1 = (void *)SFIsAllowedAirDropCredentialClient_allowedClients;
  SFIsAllowedAirDropCredentialClient_allowedClients = v0;
}

id SFSharediCloudDocumentsLinkToAppName(uint64_t a1)
{
  uint64_t v1 = [MEMORY[0x1E4F29088] componentsWithURL:a1 resolvingAgainstBaseURL:1];
  id v2 = [v1 path];
  uint64_t v3 = [v2 pathComponents];

  if ((unint64_t)[v3 count] < 2)
  {
    id v4 = 0;
  }
  else
  {
    id v4 = [v3 objectAtIndexedSubscript:1];
  }

  return v4;
}

id SFSharablePasswordCreateAirDropURL(uint64_t a1, __SecKey *a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    id v14 = 0;
    uint64_t v3 = [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:a1 requiringSecureCoding:1 error:&v14];
    id v4 = v14;
    if (v4)
    {
      uint64_t v5 = airdrop_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v17 = v4;
        _os_log_impl(&dword_1A5389000, v5, OS_LOG_TYPE_DEFAULT, "### Failed to archive credential with error: %@", buf, 0xCu);
      }
      uint64_t v6 = 0;
    }
    else
    {
      if (a2)
      {
        BOOL v7 = SFEncryptData(a2, v3);
      }
      else
      {
        BOOL v7 = v3;
      }
      uint64_t v5 = v7;
      if (v7)
      {
        uint64_t v8 = [v7 base64EncodedStringWithOptions:0];
        id v9 = objc_alloc_init(MEMORY[0x1E4F29088]);
        uint64_t v10 = [MEMORY[0x1E4F290C8] queryItemWithName:@"dataBlob" value:v8];
        id v15 = v10;
        CFStringRef v11 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v15 count:1];
        [v9 setQueryItems:v11];

        if (a2) {
          long long v12 = @"EncryptedCredential";
        }
        else {
          long long v12 = @"safaricredential";
        }
        [v9 setScheme:v12];
        uint64_t v6 = [v9 URL];
      }
      else
      {
        uint64_t v8 = airdrop_log();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1A5389000, v8, OS_LOG_TYPE_DEFAULT, "### Failed to encrypt data", buf, 2u);
        }
        uint64_t v6 = 0;
      }
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id SFEncryptData(__SecKey *a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 length];
    uint64_t v6 = 0;
    if (a1 && v5)
    {
      BOOL v7 = SFSplitDataChunks(v4, 0x7CuLL);
      id v8 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      long long v20 = 0u;
      long long v21 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      id v9 = v7;
      uint64_t v10 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v21;
        CFStringRef v13 = (const __CFString *)*MEMORY[0x1E4F3BAC0];
        while (2)
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if (*(void *)v21 != v12) {
              objc_enumerationMutation(v9);
            }
            CFDataRef v15 = *(const __CFData **)(*((void *)&v20 + 1) + 8 * i);
            CFErrorRef error = 0;
            CFDataRef v16 = SecKeyCreateEncryptedData(a1, v13, v15, &error);
            if (error)
            {
              id v17 = airdrop_log();
              if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
                SFEncryptData_cold_1();
              }

              if (error)
              {
                CFRelease(error);
                CFErrorRef error = 0;
              }

              uint64_t v6 = 0;
              goto LABEL_19;
            }
            [v8 addObject:v16];
          }
          uint64_t v11 = [v9 countByEnumeratingWithState:&v20 objects:v24 count:16];
          if (v11) {
            continue;
          }
          break;
        }
      }

      uint64_t v6 = SFJoinDataChunks(v8);
LABEL_19:
    }
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id SFSharablePasswordAirDropUnencryptedURL(uint64_t a1)
{
  return SFSharablePasswordCreateAirDropURL(a1, 0);
}

id SFSharablePasswordAirDropURLEncryptedString(uint64_t a1, __SecKey *a2)
{
  if (a2)
  {
    id v2 = SFSharablePasswordCreateAirDropURL(a1, a2);
    id v3 = [v2 absoluteString];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id SFSharablePasswordForAirDropURL(uint64_t a1, __SecKey *a2)
{
  if (!a1)
  {
    uint64_t v10 = 0;
    goto LABEL_25;
  }
  id v3 = [MEMORY[0x1E4F29088] componentsWithURL:a1 resolvingAgainstBaseURL:0];
  id v4 = [v3 queryItems];
  uint64_t v5 = [v4 firstObject];
  uint64_t v6 = [v5 value];

  if (!v6)
  {
    id v8 = airdrop_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      SFSharablePasswordForAirDropURL_cold_1();
    }
    uint64_t v10 = 0;
    goto LABEL_24;
  }
  BOOL v7 = [objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBase64EncodedString:v6 options:0];
  id v8 = v7;
  if (!v7 || ![v7 length])
  {
    id v9 = airdrop_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      SFSharablePasswordForAirDropURL_cold_2();
    }
    goto LABEL_12;
  }
  if (!a2)
  {
    id v9 = v8;
    goto LABEL_17;
  }
  id v9 = SFDecryptData(a2, v8);
  if (v9)
  {
LABEL_17:
    uint64_t v11 = [(Class)getSFSharablePasswordClass[0]() sharablePasswordFromData:v9];
    uint64_t v10 = v11;
    if (v11)
    {
      id v12 = v11;
    }
    else
    {
      CFStringRef v13 = airdrop_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        SFSharablePasswordForAirDropURL_cold_3();
      }
    }
    goto LABEL_23;
  }
  id v9 = airdrop_log();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CFDataRef v15 = 0;
    _os_log_impl(&dword_1A5389000, v9, OS_LOG_TYPE_DEFAULT, "### Failed to decrypt data", v15, 2u);
  }
LABEL_12:
  uint64_t v10 = 0;
LABEL_23:

LABEL_24:
LABEL_25:

  return v10;
}

id SFDecryptData(__SecKey *a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  id v4 = v3;
  if (!v3 || ![v3 length])
  {
    id v8 = airdrop_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      SFDecryptData_cold_1();
    }
    goto LABEL_15;
  }
  if (!a1)
  {
    id v8 = airdrop_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      SFDecryptData_cold_2();
    }
LABEL_15:
    CFDataRef v16 = 0;
    goto LABEL_22;
  }
  size_t BlockSize = SecKeyGetBlockSize(a1);
  uint64_t v6 = SFSplitDataChunks(v4, BlockSize);
  id v7 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v8 = v6;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v21;
    CFStringRef v12 = (const __CFString *)*MEMORY[0x1E4F3BAC0];
    while (2)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v21 != v11) {
          objc_enumerationMutation(v8);
        }
        CFDataRef v14 = *(const __CFData **)(*((void *)&v20 + 1) + 8 * i);
        CFErrorRef error = 0;
        CFDataRef v15 = SecKeyCreateDecryptedData(a1, v12, v14, &error);
        if (error)
        {
          id v17 = airdrop_log();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
            SFDecryptData_cold_3();
          }

          if (error)
          {
            CFRelease(error);
            CFErrorRef error = 0;
          }

          CFDataRef v16 = 0;
          goto LABEL_21;
        }
        [v7 addObject:v15];
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v10) {
        continue;
      }
      break;
    }
  }

  CFDataRef v16 = SFJoinDataChunks(v7);
LABEL_21:

LABEL_22:

  return v16;
}

id SFSharablePasswordForUnencryptedAirDropURL(uint64_t a1)
{
  return SFSharablePasswordForAirDropURL(a1, 0);
}

id SFSharablePasswordForURL(void *a1)
{
  id v1 = a1;
  getSFSharablePasswordClass[0]();
  if (objc_opt_respondsToSelector())
  {
    id v2 = [(Class)getSFSharablePasswordClass[0]() sharablePasswordFromURL:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id SFSplitDataChunks(void *a1, unint64_t a2)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v5 = 0;
  if (v3 && a2)
  {
    if ([v3 length] <= a2)
    {
      v12[0] = v3;
      id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v12 count:1];
    }
    else
    {
      uint64_t v6 = (void *)[v3 mutableCopy];
      if ([v6 length])
      {
        do
        {
          uint64_t v7 = a2;
          if ([v6 length] <= a2) {
            uint64_t v7 = [v6 length];
          }
          id v8 = objc_msgSend(v6, "subdataWithRange:", 0, v7);
          [v4 addObject:v8];
          uint64_t v9 = objc_msgSend(v6, "subdataWithRange:", v7, objc_msgSend(v6, "length") - v7);
          uint64_t v10 = (void *)[v9 mutableCopy];

          uint64_t v6 = v10;
        }
        while ([v10 length]);
      }
      else
      {
        uint64_t v10 = v6;
      }
      id v5 = v4;
    }
  }

  return v5;
}

id SFJoinDataChunks(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA58]);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v10;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        objc_msgSend(v2, "appendData:", *(void *)(*((void *)&v9 + 1) + 8 * i), (void)v9);
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v5);
  }

  return v2;
}

NSObject *SFFullTextFromRTIDataPayload(void *a1)
{
  if (a1)
  {
    id v1 = (Class (__cdecl *)())getRTIInputSystemDataPayloadClass[0];
    id v2 = a1;
    Class v3 = v1();
    uint64_t v4 = [v2 data];
    uint64_t v5 = [v2 version];

    uint64_t v6 = [(objc_class *)v3 payloadWithData:v4 version:v5];

    if (v6)
    {
      uint64_t v7 = [objc_alloc(MEMORY[0x1E4F28E78]) initWithString:&stru_1EF9BDC68];
      id v8 = [v6 documentState];
      long long v9 = [v8 documentState];

      if (v9)
      {
        long long v10 = [v9 contextBeforeInput];

        if (v10)
        {
          long long v11 = [v9 contextBeforeInput];
          [v7 appendString:v11];
        }
        long long v12 = [v9 markedText];

        if (v12)
        {
          CFStringRef v13 = [v9 markedText];
          [v7 appendString:v13];
        }
        uint64_t v14 = [v9 contextAfterInput];

        if (v14)
        {
          CFDataRef v15 = [v9 contextAfterInput];
          [v7 appendString:v15];
        }
        CFDataRef v16 = v7;
      }
      else
      {
        id v17 = remote_log();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          SFFullTextFromRTIDataPayload_cold_2();
        }

        CFDataRef v16 = 0;
      }
    }
    else
    {
      uint64_t v7 = remote_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
        SFFullTextFromRTIDataPayload_cold_1();
      }
      CFDataRef v16 = 0;
    }
  }
  else
  {
    CFDataRef v16 = 0;
  }

  return v16;
}

uint64_t SFMinorWatchHardwareVersion(void *a1)
{
  id v1 = [a1 componentsSeparatedByString:@","];
  if ((unint64_t)[v1 count] < 2)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  id v2 = [v1 objectAtIndexedSubscript:1];
  if (![v2 length]) {
    goto LABEL_7;
  }
  uint64_t v3 = [v2 intValue];
  if (!v3)
  {
    uint64_t v4 = auto_unlock_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      SFMinorWatchHardwareVersion_cold_1();
    }

LABEL_7:
    uint64_t v3 = 0;
  }

LABEL_10:
  return v3;
}

id SFSandboxExtensionDataByFileURLPathForURLs(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = [MEMORY[0x1E4F1CA60] dictionary];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        if (objc_msgSend(v8, "isFileURL", (void)v13))
        {
          long long v9 = [v8 issueSandboxExtensionData];
          long long v10 = [v8 path];
          [v2 setObject:v9 forKeyedSubscript:v10];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  long long v11 = (void *)[v2 copy];

  return v11;
}

BOOL SFRemoteDeviceCanConnectOn5GHz(void *a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = [v1 componentsSeparatedByString:@","];
  if ((unint64_t)[v2 count] < 2)
  {
    uint64_t v6 = 0;
  }
  else
  {
    id v3 = [v2 objectAtIndexedSubscript:0];
    uint64_t v4 = [v3 rangeOfString:@"Watch"];
    if (v5)
    {
      uint64_t v6 = [v3 substringFromIndex:v4 + v5];
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  int v7 = SFMinorWatchHardwareVersion(v1);
  if (!v6)
  {
    BOOL v10 = 1;
    goto LABEL_18;
  }
  int v8 = v7;
  uint64_t v9 = [v6 integerValue];
  BOOL v10 = v9 != 0;
  if (!v9)
  {
    long long v11 = tethering_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      SFRemoteDeviceCanConnectOn5GHz_cold_1();
    }
    goto LABEL_17;
  }
  if (v9 >= 6 && (v9 != 6 || v8 < 10 || v8 >= 14))
  {
    long long v11 = tethering_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 138412290;
      id v14 = v1;
      _os_log_impl(&dword_1A5389000, v11, OS_LOG_TYPE_DEFAULT, "Watch model %@ supports 5GHz.", (uint8_t *)&v13, 0xCu);
    }
LABEL_17:

    goto LABEL_18;
  }
  BOOL v10 = 0;
LABEL_18:

  return v10;
}

id SFRemoteTextInputPayloadFromLegacyAPI(int a1, void *a2)
{
  id v3 = a2;
  switch(a1)
  {
    case 2:
      uint64_t v4 = objc_alloc_init((Class)getRTITextOperationsClass[0]());
      uint64_t v5 = v4;
      uint64_t v6 = &stru_1EF9BDC68;
      goto LABEL_13;
    case 3:
      uint64_t v5 = objc_alloc_init((Class)getRTITextOperationsClass[0]());
      int v7 = [v5 keyboardOutput];
      [v7 setDeletionCount:1];
      goto LABEL_16;
    case 4:
      int v8 = objc_alloc_init((Class)getRTITextOperationsClass[0]());
      uint64_t v5 = v8;
      if (!v3)
      {
        long long v11 = remote_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          SFRemoteTextInputPayloadFromLegacyAPI_cold_3();
        }
        goto LABEL_22;
      }
      uint64_t v9 = [v8 keyboardOutput];
      int v7 = v9;
      BOOL v10 = v3;
LABEL_15:
      [v9 setInsertionText:v10];
LABEL_16:

      goto LABEL_17;
    case 5:
      uint64_t v5 = objc_alloc_init((Class)getRTITextOperationsClass[0]());
      if (v3) {
        goto LABEL_12;
      }
      long long v11 = remote_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        SFRemoteTextInputPayloadFromLegacyAPI_cold_4();
      }
      goto LABEL_22;
    case 8:
      uint64_t v5 = objc_alloc_init((Class)getRTITextOperationsClass[0]());
      if (v3)
      {
LABEL_12:
        uint64_t v4 = v5;
        uint64_t v6 = v3;
LABEL_13:
        [v4 setTextToAssert:v6];
LABEL_17:
        id v12 = objc_alloc_init((Class)getRTIInputSystemDataPayloadClass[0]());
        [v12 setTextOperations:v5];
        Class v13 = (Class)getRTIDataPayloadClass[0]();
        id v14 = [v12 data];
        uint64_t v15 = [(objc_class *)v13 payloadWithData:v14];
      }
      else
      {
        long long v11 = remote_log();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          SFRemoteTextInputPayloadFromLegacyAPI_cold_5();
        }
LABEL_22:

LABEL_23:
        long long v16 = remote_log();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          SFRemoteTextInputPayloadFromLegacyAPI_cold_1();
        }

        uint64_t v15 = 0;
      }

      return v15;
    case 9:
      uint64_t v5 = objc_alloc_init((Class)getRTITextOperationsClass[0]());
      uint64_t v9 = [v5 keyboardOutput];
      int v7 = v9;
      BOOL v10 = @"\n";
      goto LABEL_15;
    default:
      uint64_t v5 = remote_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        SFRemoteTextInputPayloadFromLegacyAPI_cold_2(a1, v5);
      }
      goto LABEL_23;
  }
}

void SFRemoteTextInputPayloadToLegacyAPI(void *a1, char *a2, void *a3)
{
  id v5 = a1;
  if (v5)
  {
    Class v6 = (Class)getRTIInputSystemDataPayloadClass[0]();
    int v7 = [v5 data];
    int v8 = -[objc_class payloadWithData:version:](v6, "payloadWithData:version:", v7, [v5 version]);

    uint64_t v9 = [v8 textOperations];
    BOOL v10 = [v9 keyboardOutput];
    long long v11 = [v10 insertionText];

    if (v11 && [v11 length] && !objc_msgSend(v11, "isEqualToString:", @"\n"))
    {
      char v17 = 4;
      goto LABEL_15;
    }

    id v12 = [v8 textOperations];
    Class v13 = [v12 keyboardOutput];
    uint64_t v14 = [v13 deletionCount];

    if (v14 == 1)
    {

      char v15 = 3;
LABEL_20:
      *a2 = v15;
      goto LABEL_25;
    }
    long long v16 = [v8 textOperations];
    long long v11 = [v16 textToAssert];

    if (v11)
    {
      if ([v11 isEqual:&stru_1EF9BDC68])
      {

        char v15 = 2;
        goto LABEL_20;
      }
      if ([v11 length])
      {
        char v17 = 5;
LABEL_15:
        uint64_t v18 = (void *)[v11 copy];

        *a2 = v17;
        if (v18)
        {
          *a3 = (id)[v18 copy];
        }
        goto LABEL_25;
      }
    }

    int v19 = [v8 textOperations];
    long long v20 = [v19 keyboardOutput];
    long long v21 = [v20 insertionText];

    if (v21 && ([v21 isEqualToString:@"\n"] & 1) != 0)
    {

      char v15 = 9;
      goto LABEL_20;
    }
  }
  else
  {
    int v8 = remote_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v23 = 0;
      _os_log_impl(&dword_1A5389000, v8, OS_LOG_TYPE_DEFAULT, "### Cannot convert RTI payload: no payload", v23, 2u);
    }
  }

  *a2 = 0;
  long long v22 = remote_log();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
    SFRemoteTextInputPayloadToLegacyAPI_cold_1();
  }

LABEL_25:
}

id SFTextInputDataForRTIDataPayload(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    id v3 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v1, "version"));
    [v2 setObject:v3 forKeyedSubscript:@"v"];

    uint64_t v4 = [v1 data];

    if (v4)
    {
      id v5 = [v1 data];
      [v2 setObject:v5 forKeyedSubscript:@"d"];
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id SFRTIDataPayloadForData(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 objectForKeyedSubscript:@"d"];
  uint64_t v3 = [v1 objectForKeyedSubscript:@"v"];
  uint64_t v4 = (void *)v3;
  if (v1 && v2 | v3)
  {
    Class v6 = objc_msgSend((Class)getRTIDataPayloadClass[0](), "payloadWithData:version:", v2, objc_msgSend((id)v3, "unsignedLongValue"));
    id v5 = v6;
    if (v6)
    {
      id v7 = v6;
    }
    else
    {
      int v8 = remote_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        SFRTIDataPayloadForData_cold_1();
      }
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

__CFString *SFTextInputDataLogString(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 objectForKeyedSubscript:@"d"];
  uint64_t v3 = [v1 objectForKeyedSubscript:@"v"];

  if (v2)
  {
    [NSString stringWithFormat:@"%lu bytes, v=%lu", objc_msgSend(v2, "length"), objc_msgSend(v3, "unsignedLongValue")];
    uint64_t v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v4 = @"No data";
  }

  return v4;
}

id SFSharediCloudDocumentsLinkToFileName(uint64_t a1)
{
  id v1 = [MEMORY[0x1E4F29088] componentsWithURL:a1 resolvingAgainstBaseURL:1];
  uint64_t v2 = [v1 fragment];

  return v2;
}

uint64_t SFiTunesStoreLinkType(uint64_t a1)
{
  id v1 = [MEMORY[0x1E4F29088] componentsWithURL:a1 resolvingAgainstBaseURL:1];
  uint64_t v2 = [v1 path];
  uint64_t v3 = [v2 pathComponents];

  if ((unint64_t)[v3 count] < 3)
  {
    id v5 = 0;
  }
  else
  {
    uint64_t v4 = [v3 objectAtIndexedSubscript:2];
    id v5 = [v4 lowercaseString];
  }
  if ([v5 isEqual:@"movie"])
  {
    uint64_t v6 = 2;
  }
  else if ([v5 isEqual:@"tv-season"])
  {
    uint64_t v6 = 3;
  }
  else if ([v5 isEqual:@"audiobook"])
  {
    uint64_t v6 = 4;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void _SFShimSetIsContentManaged(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (objc_opt_respondsToSelector()) {
    [v3 setIsContentManaged:a2];
  }
  else {
    [v3 setSourceIsManaged:a2];
  }
}

void _SFShimSetUnderbarIsContentManaged(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (objc_opt_respondsToSelector()) {
    [v3 _setIsContentManaged:a2];
  }
  else {
    [v3 _setSourceIsManaged:a2];
  }
}

id SFAirDropDownloadsURL()
{
  uint64_t v0 = [MEMORY[0x1E4F28CB8] defaultManager];
  id v5 = 0;
  id v1 = [v0 URLForDirectory:15 inDomain:1 appropriateForURL:0 create:1 error:&v5];
  id v2 = v5;

  if (!v1)
  {
    id v3 = framework_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      SFAirDropDownloadsURL_cold_1();
    }
  }

  return v1;
}

id SFRealpathForFileURL(void *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (([v1 isFileURL] & 1) == 0)
  {
    uint64_t v5 = framework_log();
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR)) {
      SFRealpathForFileURL_cold_4();
    }
    goto LABEL_12;
  }
  id v2 = (const char *)[v1 fileSystemRepresentation];
  if (!v2)
  {
    uint64_t v5 = framework_log();
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR)) {
      SFRealpathForFileURL_cold_1();
    }
    goto LABEL_12;
  }
  uint64_t v3 = (uint64_t)v2;
  if (!*v2)
  {
    uint64_t v5 = framework_log();
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_ERROR)) {
      SFRealpathForFileURL_cold_2();
    }
LABEL_12:
    uint64_t v6 = 0;
    goto LABEL_13;
  }
  uint64_t v4 = realpath_DARWIN_EXTSN(v2, 0);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __SFRealpathForFileURL_block_invoke;
  aBlock[3] = &__block_descriptor_40_e5_v8__0l;
  aBlock[4] = v4;
  uint64_t v5 = (uint64_t)_Block_copy(aBlock);
  if (v4)
  {
    uint64_t v6 = [NSString stringWithUTF8String:v4];
  }
  else
  {
    int v8 = framework_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v9 = __error();
      SFRealpathForFileURL_cold_3(v3, v9, buf, v8);
    }

    uint64_t v6 = 0;
  }
  (*(void (**)(uint64_t))(v5 + 16))(v5);
LABEL_13:

  return v6;
}

void sub_1A53D31F8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void __SFRealpathForFileURL_block_invoke(uint64_t a1)
{
}

uint64_t SFCopyTypeIdentifierForColorArrayAndModelCode(const __CFArray *a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_16;
  }
  if (CFArrayGetCount(a1) == 3)
  {
    CFIndex v4 = 0;
    char v19 = 0;
    __int16 v18 = 0;
    do
    {
      *((unsigned char *)&v18 + v4) = 0;
      CFNumberRef ValueAtIndex = (const __CFNumber *)CFArrayGetValueAtIndex(a1, v4);
      if (ValueAtIndex)
      {
        CFNumberRef v6 = ValueAtIndex;
        CFTypeID v7 = CFGetTypeID(ValueAtIndex);
        if (v7 == CFNumberGetTypeID())
        {
          int valuePtr = 0;
          if (CFNumberGetValue(v6, kCFNumberIntType, &valuePtr)) {
            *((unsigned char *)&v18 + v4) = valuePtr;
          }
        }
      }
      ++v4;
    }
    while (v4 != 3);
    uint64_t v8 = _UTHardwareColorMakeWithRGBComponents();
    goto LABEL_10;
  }
  if (CFArrayGetCount(a1) != 1
    || (CFNumberRef v10 = (const __CFNumber *)CFArrayGetValueAtIndex(a1, 0)) == 0
    || (CFNumberRef v11 = v10, v12 = CFGetTypeID(v10), v12 != CFNumberGetTypeID())
    || (int v16 = 0, !CFNumberGetValue(v11, kCFNumberSInt32Type, &v16)))
  {
LABEL_16:
    uint64_t v9 = [MEMORY[0x1E4F442D8] _typeWithDeviceModelCode:a2];
    goto LABEL_17;
  }
  uint64_t v8 = _UTHardwareColorMakeWithIndex();
LABEL_10:
  uint64_t v9 = [MEMORY[0x1E4F442D8] _typeWithDeviceModelCode:a2 enclosureColor:v8];
LABEL_17:
  Class v13 = v9;
  uint64_t v14 = [v9 identifier];

  return v14;
}

uint64_t SFIsAnnounceCallsEnabled()
{
  return _os_feature_enabled_impl();
}

__CFString *SFShortHashArrayDescription(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (!v1 || ![v1 count])
  {
    uint64_t v3 = 0;
LABEL_14:
    CFIndex v4 = 0;
    goto LABEL_15;
  }
  uint64_t v3 = [MEMORY[0x1E4F28E78] string];
  if (!v3 || ![v2 count]) {
    goto LABEL_14;
  }
  CFIndex v4 = 0;
  unint64_t v5 = 0;
  do
  {
    CFNumberRef v6 = v4;
    CFIndex v4 = [v2 objectAtIndexedSubscript:v5];

    if ((unint64_t)[v4 length] < 0xB)
    {
      [(__CFString *)v3 appendString:v4];
    }
    else
    {
      CFTypeID v7 = objc_msgSend(v4, "substringWithRange:", 0, 5);
      uint64_t v8 = objc_msgSend(v4, "substringFromIndex:", objc_msgSend(v4, "length") - 5);
      [(__CFString *)v3 appendFormat:@"%@...%@", v7, v8];
    }
    if (v5 < [v2 count] - 1) {
      [(__CFString *)v3 appendString:@", "];
    }
    ++v5;
  }
  while (v5 < [v2 count]);
LABEL_15:
  if (v3) {
    uint64_t v9 = v3;
  }
  else {
    uint64_t v9 = @"<nil>";
  }
  CFNumberRef v10 = v9;

  return v10;
}

uint64_t SFCreateThumbnailForAirDropItem(void *a1, void *a2, unsigned int a3, double a4)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v7 = a1;
  id v8 = a2;
  mach_absolute_time();
  uint64_t v9 = [v8 pathExtension];
  BOOL v10 = [v9 length] == 0;
  CFNumberRef v11 = airdrop_log();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);
  if (v10)
  {
    if (v12)
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v7;
      _os_log_impl(&dword_1A5389000, v11, OS_LOG_TYPE_INFO, "Genrating thumbnail for UTI: %@", (uint8_t *)&buf, 0xCu);
    }

    uint64_t v13 = [objc_alloc(MEMORY[0x1E4F6F248]) initWithType:v7];
  }
  else
  {
    if (v12)
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v9;
      _os_log_impl(&dword_1A5389000, v11, OS_LOG_TYPE_INFO, "Generating thumbnail for path extension: %@", (uint8_t *)&buf, 0xCu);
    }

    uint64_t v13 = [objc_alloc(MEMORY[0x1E4F6F248]) initWithFileExtension:v9];
  }
  uint64_t v14 = (void *)v13;
  if (v13)
  {
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v32 = 0x2020000000;
    uint64_t v33 = 0;
    dispatch_semaphore_t v15 = dispatch_semaphore_create(0);
    int v16 = dispatch_get_global_queue(a3, 0);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __SFCreateThumbnailForAirDropItem_block_invoke;
    block[3] = &unk_1E5BBD710;
    id v26 = v14;
    char v17 = v15;
    id v27 = v17;
    p_long long buf = &buf;
    dispatch_async(v16, block);

    dispatch_time_t v18 = dispatch_time(0, (uint64_t)(a4 * 1000000.0));
    if (dispatch_semaphore_wait(v17, v18))
    {
      char v19 = airdrop_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        SFCreateThumbnailForAirDropItem_cold_2();
      }
    }
    long long v20 = airdrop_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      mach_absolute_time();
      uint64_t v21 = UpTicksToMilliseconds();
      *(_DWORD *)uint64_t v29 = 134217984;
      uint64_t v30 = v21;
      _os_log_impl(&dword_1A5389000, v20, OS_LOG_TYPE_DEFAULT, "Thumbnail generation took %ld ms", v29, 0xCu);
    }

    uint64_t v22 = *(void *)(*((void *)&buf + 1) + 24);
    _Block_object_dispose(&buf, 8);
  }
  else
  {
    long long v23 = airdrop_log();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      SFCreateThumbnailForAirDropItem_cold_1();
    }

    uint64_t v22 = 0;
  }

  return v22;
}

void sub_1A53D385C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __SFCreateThumbnailForAirDropItem_block_invoke(uint64_t a1)
{
  id v2 = [MEMORY[0x1E4F6F258] imageDescriptorNamed:*MEMORY[0x1E4F6F290]];
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 3221225472;
  v5[2] = __SFCreateThumbnailForAirDropItem_block_invoke_2;
  v5[3] = &unk_1E5BBD6E8;
  uint64_t v3 = *(void **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v7 = v2;
  uint64_t v8 = *(void *)(a1 + 48);
  id v4 = v2;
  [v3 getCGImageForImageDescriptor:v4 completion:v5];
}

void __SFCreateThumbnailForAirDropItem_block_invoke_2(uint64_t a1, CGImage *a2)
{
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __SFCreateThumbnailForAirDropItem_block_invoke_3;
  aBlock[3] = &unk_1E5BBC870;
  id v13 = *(id *)(a1 + 32);
  id v4 = (void (**)(void))_Block_copy(aBlock);
  if (a2)
  {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = CGImageRetain(a2);
  }
  else
  {
    unint64_t v5 = airdrop_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      __SFCreateThumbnailForAirDropItem_block_invoke_2_cold_1(a1, v5, v6, v7, v8, v9, v10, v11);
    }
  }
  v4[2](v4);
}

void sub_1A53D3A4C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

intptr_t __SFCreateThumbnailForAirDropItem_block_invoke_3(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id SFCurrentAppName()
{
  uint64_t v0 = [MEMORY[0x1E4F28B50] mainBundle];
  uint64_t v1 = [v0 localizedInfoDictionary];
  uint64_t v2 = *MEMORY[0x1E4F1CC48];
  uint64_t v3 = [v1 objectForKey:*MEMORY[0x1E4F1CC48]];

  if (!v3)
  {
    id v4 = [MEMORY[0x1E4F28B50] mainBundle];
    uint64_t v3 = [v4 objectForInfoDictionaryKey:v2];

    if (!v3)
    {
      unint64_t v5 = [MEMORY[0x1E4F28B50] mainBundle];
      uint64_t v3 = [v5 objectForInfoDictionaryKey:@"CFBundleName"];
    }
  }

  return v3;
}

void SFCurrentAppIconData(void *a1, double a2)
{
  id v3 = a1;
  id v4 = [MEMORY[0x1E4F6F248] applicationIcon];
  unint64_t v5 = objc_msgSend(objc_alloc(MEMORY[0x1E4F6F258]), "initWithSize:scale:", 40.0, 40.0, fmax(a2, 1.0));
  uint64_t v6 = [v4 imageForDescriptor:v5];
  uint64_t v7 = v6;
  if (v6 && ([v6 placeholder] & 1) == 0)
  {
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = __SFCurrentAppIconData_block_invoke;
    void v13[3] = &unk_1E5BBC9C8;
    uint64_t v8 = &v15;
    id v15 = v3;
    id v14 = v7;
    id v10 = v3;
    sf_dispatch_on_main_queue(v13);
  }
  else
  {
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 3221225472;
    v11[2] = __SFCurrentAppIconData_block_invoke_2;
    v11[3] = &unk_1E5BBD738;
    uint64_t v8 = &v12;
    id v12 = v3;
    id v9 = v3;
    [v4 getImageForImageDescriptor:v5 completion:v11];
  }
}

void __SFCurrentAppIconData_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  SFDataFromCGImage((void *)[*(id *)(a1 + 32) CGImage]);
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void __SFCurrentAppIconData_block_invoke_2(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = SFDataFromCGImage((void *)[a2 CGImage]);
  }
  else
  {
    id v3 = 0;
  }
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = __SFCurrentAppIconData_block_invoke_3;
  v6[3] = &unk_1E5BBC9C8;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async(MEMORY[0x1E4F14428], v6);
}

uint64_t __SFCurrentAppIconData_block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id SFSaveDataToTempFile(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void *)MEMORY[0x1E4F442D8];
  id v12 = a1;
  id v13 = [v11 _typeWithIdentifier:a2 allowUndeclared:1];
  if ([v9 length])
  {
    id v14 = [v9 stringByAppendingPathExtensionForType:v13];
    id v15 = (__CFString *)[v14 mutableCopy];

    [(__CFString *)v15 replaceOccurrencesOfString:@"/", @"-", 0, 0, [(__CFString *)v15 length] withString options range];
    [(__CFString *)v15 replaceOccurrencesOfString:@":", @"-", 0, 0, [(__CFString *)v15 length] withString options range];
    if (a5)
    {
      int v16 = [(__CFString *)v15 pathExtension];
      if ([v16 length])
      {
        char v17 = [(__CFString *)v15 stringByDeletingPathExtension];
        dispatch_time_t v18 = [NSString stringWithFormat:@"%@-%ld.%@", v17, a5, v16];
      }
      else
      {
        dispatch_time_t v18 = [NSString stringWithFormat:@"%@-%ld.%@", v15, a5, v16];
      }
    }
    else
    {
      dispatch_time_t v18 = v15;
    }
  }
  else
  {
    uint64_t v19 = [v13 preferredFilenameExtension];
    if (v19) {
      id v15 = (__CFString *)v19;
    }
    else {
      id v15 = @"data";
    }
    long long v20 = NSString;
    uint64_t v21 = [v13 localizedDescription];
    dispatch_time_t v18 = [v20 stringWithFormat:@"%@-%@-%ld.%@", v21, v10, a5, v15];
  }
  uint64_t v22 = NSTemporaryDirectory();
  long long v23 = [v22 stringByAppendingPathComponent:v18];
  [v12 writeToFile:v23 atomically:1];

  id v24 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v23];

  return v24;
}

double SFSuggestedAirDropThumbnailSize(double a1)
{
  id v2 = [MEMORY[0x1E4F28B50] mainBundle];
  id v3 = [v2 bundleIdentifier];

  if ([v3 isEqualToString:@"com.apple.Passbook"])
  {
    double v4 = 150.0;
  }
  else
  {
    char v5 = [v3 isEqualToString:@"com.apple.AppStore"];
    double v4 = 150.0;
    if ((v5 & 1) == 0)
    {
      char v6 = objc_msgSend(v3, "isEqualToString:", @"com.apple.MobileStore", 150.0, 150.0);
      double v4 = 150.0;
      if ((v6 & 1) == 0)
      {
        char v7 = objc_msgSend(v3, "isEqualToString:", @"com.apple.Music", 150.0, 150.0);
        double v4 = 150.0;
        if ((v7 & 1) == 0)
        {
          char v8 = objc_msgSend(v3, "isEqualToString:", @"com.apple.itunesu", 150.0, 150.0);
          double v4 = 150.0;
          if ((v8 & 1) == 0)
          {
            if ((objc_msgSend(v3, "isEqualToString:", @"com.apple.mobilephone", 150.0, 150.0) & 1) != 0
              || ([v3 isEqualToString:@"com.apple.MobileAddressBook"] & 1) != 0)
            {
              double v4 = 40.0;
            }
            else
            {
              int v9 = [v3 isEqualToString:@"com.apple.VoiceMemos"];
              double v4 = 270.0;
              if (v9) {
                double v4 = 166.0;
              }
            }
          }
        }
      }
    }
  }
  float v10 = 2.0 / a1;
  double v11 = floor(v4 * v10);

  return v11;
}

__CFString *SFAirDropModelImageNameFromModelString(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 hasPrefix:@"iPhone"])
  {
    if ([v1 isEqualToString:@"iPhone8,4"])
    {
      id v2 = @"iPhoneSE";
      goto LABEL_33;
    }
    if ([v1 isEqualToString:@"iPhone10,3"])
    {
      id v2 = @"iPhoneX";
      goto LABEL_33;
    }
    id v2 = @"iPhoneX";
    if (([v1 isEqualToString:@"iPhone10,6"] & 1) == 0)
    {
      id v3 = [v1 stringByReplacingOccurrencesOfString:@"iPhone" withString:&stru_1EF9BDC68];
      char v7 = [v3 componentsSeparatedByString:@","];
      char v8 = [v7 firstObject];
      uint64_t v9 = [v8 integerValue];

      float v10 = @"iPhone8";
      if ((unint64_t)(v9 - 15) >= 2) {
        double v11 = @"iPhoneX";
      }
      else {
        double v11 = @"iPhone14Pro";
      }
      if ((unint64_t)v9 >= 0xB) {
        float v10 = v11;
      }
      if (v9 >= 7) {
        id v2 = v10;
      }
      else {
        id v2 = @"iPhoneSE";
      }
LABEL_32:
    }
  }
  else
  {
    if ([v1 hasPrefix:@"iPad"])
    {
      id v3 = [v1 stringByReplacingOccurrencesOfString:@"iPad" withString:&stru_1EF9BDC68];
      double v4 = [v3 componentsSeparatedByString:@","];
      char v5 = [v4 firstObject];
      uint64_t v6 = [v5 integerValue];

      id v2 = @"iPadPro";
      if (v6 != 8 && v6 <= 11)
      {
        if ([&unk_1EFA0A010 containsObject:v1]) {
          id v2 = @"iPadmini";
        }
        else {
          id v2 = @"iPad";
        }
      }
      goto LABEL_32;
    }
    if ([v1 hasPrefix:@"MacPro"])
    {
      if ([v1 isEqualToString:@"MacPro6,1"])
      {
        id v2 = @"MacPro2";
        goto LABEL_33;
      }
      id v3 = [v1 stringByReplacingOccurrencesOfString:@"MacPro" withString:&stru_1EF9BDC68];
      id v12 = [v3 componentsSeparatedByString:@","];
      id v13 = [v12 firstObject];
      uint64_t v14 = [v13 integerValue];

      if (v14 >= 6) {
        id v2 = @"MacPro3";
      }
      else {
        id v2 = @"MacPro1";
      }
      goto LABEL_32;
    }
    if (([v1 isEqualToString:@"Mac14,13"] & 1) != 0
      || ([v1 isEqualToString:@"Mac14,14"] & 1) != 0
      || ([v1 isEqualToString:@"Mac13,1"] & 1) != 0
      || ([v1 isEqualToString:@"Mac13,2"] & 1) != 0)
    {
      id v2 = @"MacStudio";
      goto LABEL_33;
    }
    if (([v1 isEqualToString:@"Mac14,2"] & 1) != 0
      || ([v1 isEqualToString:@"Mac14,15"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,12"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,13"] & 1) != 0)
    {
      id v2 = @"MacBookAir2";
      goto LABEL_33;
    }
    if (([v1 isEqualToString:@"Mac14,7"] & 1) != 0
      || ([v1 isEqualToString:@"MacBookPro17,1"] & 1) != 0)
    {
      id v2 = @"MacBookPro2";
      goto LABEL_33;
    }
    if (([v1 isEqualToString:@"MacBookPro18,1"] & 1) != 0
      || ([v1 isEqualToString:@"MacBookPro18,2"] & 1) != 0
      || ([v1 isEqualToString:@"MacBookPro18,3"] & 1) != 0
      || ([v1 isEqualToString:@"MacBookPro18,4"] & 1) != 0)
    {
      goto LABEL_48;
    }
    if (([v1 isEqualToString:@"iMac21,1"] & 1) != 0
      || ([v1 isEqualToString:@"iMac21,2"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,4"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,5"] & 1) != 0)
    {
      id v2 = @"iMac2";
      goto LABEL_33;
    }
    if (([v1 isEqualToString:@"Macmini9,1"] & 1) != 0
      || ([v1 isEqualToString:@"Mac14,3"] & 1) != 0
      || ([v1 isEqualToString:@"Mac14,12"] & 1) != 0)
    {
      id v2 = @"Macmini2";
      goto LABEL_33;
    }
    if (([v1 isEqualToString:@"Mac14,5"] & 1) != 0
      || ([v1 isEqualToString:@"Mac14,6"] & 1) != 0
      || ([v1 isEqualToString:@"Mac14,9"] & 1) != 0
      || ([v1 isEqualToString:@"Mac14,10"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,3"] & 1) != 0)
    {
LABEL_48:
      id v2 = @"MacBookPro3";
      goto LABEL_33;
    }
    if (([v1 isEqualToString:@"Mac15,6"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,8"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,10"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,7"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,9"] & 1) != 0
      || ([v1 isEqualToString:@"Mac15,11"] & 1) != 0)
    {
      id v2 = @"MacBookProBlack";
    }
    else if ([v1 isEqualToString:@"Mac14,8"])
    {
      id v2 = @"MacPro3";
    }
    else if ([v1 isEqualToString:@"RealityDevice14,1"])
    {
      id v2 = @"VisionPro";
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      uint64_t v16 = [&unk_1EFA0A028 countByEnumeratingWithState:&v22 objects:v26 count:16];
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = *(void *)v23;
LABEL_76:
        uint64_t v19 = 0;
        while (1)
        {
          if (*(void *)v23 != v18) {
            objc_enumerationMutation(&unk_1EFA0A028);
          }
          long long v20 = *(void **)(*((void *)&v22 + 1) + 8 * v19);
          if ([v1 hasPrefix:v20]) {
            break;
          }
          if (v17 == ++v19)
          {
            uint64_t v17 = [&unk_1EFA0A028 countByEnumeratingWithState:&v22 objects:v26 count:16];
            if (v17) {
              goto LABEL_76;
            }
            goto LABEL_84;
          }
        }
        id v2 = v20;
        if (v2) {
          goto LABEL_33;
        }
      }
LABEL_84:
      uint64_t v21 = airdrop_log();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        SFAirDropModelImageNameFromModelString_cold_1();
      }

      id v2 = 0;
    }
  }
LABEL_33:

  return v2;
}

BOOL SFIsPencilHapticsEnabled()
{
  Boolean keyExistsAndHasValidFormat = 0;
  AppBooleanuint64_t Value = CFPreferencesGetAppBooleanValue(@"effects-pencil-haptic", @"com.apple.preferences.sounds", &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    BOOL v1 = AppBooleanValue == 0;
  }
  else {
    BOOL v1 = 0;
  }
  return !v1;
}

Class initPRRangingDevice()
{
  if (ProximityLibrary_sOnce != -1) {
    dispatch_once(&ProximityLibrary_sOnce, &__block_literal_global_900);
  }
  Class result = objc_getClass("PRRangingDevice");
  classPRRangingDevice = (uint64_t)result;
  getPRRangingDeviceClass[0] = (uint64_t (*)())PRRangingDeviceFunction;
  return result;
}

id PRRangingDeviceFunction()
{
  return (id)classPRRangingDevice;
}

void *__ProximityLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/Proximity.framework/Proximity", 2);
  ProximityLibrary_sLib = (uint64_t)result;
  return result;
}

Class initFMDFMIPManager()
{
  if (FindMyDeviceLibrary_sOnce != -1) {
    dispatch_once(&FindMyDeviceLibrary_sOnce, &__block_literal_global_904);
  }
  Class result = objc_getClass("FMDFMIPManager");
  classFMDFMIPManager = (uint64_t)result;
  getFMDFMIPManagerClass[0] = (uint64_t (*)())FMDFMIPManagerFunction;
  return result;
}

id FMDFMIPManagerFunction()
{
  return (id)classFMDFMIPManager;
}

void *__FindMyDeviceLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/FindMyDevice.framework/FindMyDevice", 2);
  FindMyDeviceLibrary_sLib = (uint64_t)result;
  return result;
}

Class initPFVideoComplement()
{
  if (PhotosFormatsLibrary_sOnce != -1) {
    dispatch_once(&PhotosFormatsLibrary_sOnce, &__block_literal_global_911);
  }
  Class result = objc_getClass("PFVideoComplement");
  classPFVideoComplement = (uint64_t)result;
  getPFVideoComplementClass[0] = (uint64_t (*)())PFVideoComplementFunction;
  return result;
}

id PFVideoComplementFunction()
{
  return (id)classPFVideoComplement;
}

void *__PhotosFormatsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats", 2);
  PhotosFormatsLibrary_sLib = (uint64_t)result;
  return result;
}

id initValSFSharablePasswordURLSchemeForAirDrop()
{
  if (SafariFoundationLibrary_sOnce != -1) {
    dispatch_once(&SafariFoundationLibrary_sOnce, &__block_literal_global_925);
  }
  uint64_t v0 = (id *)dlsym((void *)SafariFoundationLibrary_sLib, "SFSharablePasswordURLSchemeForAirDrop");
  if (v0) {
    objc_storeStrong((id *)&constantValSFSharablePasswordURLSchemeForAirDrop, *v0);
  }
  getSFSharablePasswordURLSchemeForAirDrop[0] = (uint64_t (*)())SFSharablePasswordURLSchemeForAirDropFunction;
  BOOL v1 = (void *)constantValSFSharablePasswordURLSchemeForAirDrop;

  return v1;
}

id SFSharablePasswordURLSchemeForAirDropFunction()
{
  return (id)constantValSFSharablePasswordURLSchemeForAirDrop;
}

void *__SafariFoundationLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation", 2);
  SafariFoundationLibrary_sLib = (uint64_t)result;
  return result;
}

Class initSFSharablePassword()
{
  if (SafariFoundationLibrary_sOnce != -1) {
    dispatch_once(&SafariFoundationLibrary_sOnce, &__block_literal_global_925);
  }
  Class result = objc_getClass("SFSharablePassword");
  classSFSharablePassword = (uint64_t)result;
  getSFSharablePasswordClass[0] = (uint64_t (*)())SFSharablePasswordFunction;
  return result;
}

id SFSharablePasswordFunction()
{
  return (id)classSFSharablePassword;
}

Class initRTIInputSystemDataPayload()
{
  if (RemoteTextInputLibrary_sOnce != -1) {
    dispatch_once(&RemoteTextInputLibrary_sOnce, &__block_literal_global_930);
  }
  Class result = objc_getClass("RTIInputSystemDataPayload");
  classRTIInputSystemDataPayload = (uint64_t)result;
  getRTIInputSystemDataPayloadClass[0] = (uint64_t (*)())RTIInputSystemDataPayloadFunction;
  return result;
}

id RTIInputSystemDataPayloadFunction()
{
  return (id)classRTIInputSystemDataPayload;
}

void *__RemoteTextInputLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput", 2);
  RemoteTextInputLibrary_sLib = (uint64_t)result;
  return result;
}

Class initRTITextOperations()
{
  if (RemoteTextInputLibrary_sOnce != -1) {
    dispatch_once(&RemoteTextInputLibrary_sOnce, &__block_literal_global_930);
  }
  Class result = objc_getClass("RTITextOperations");
  classRTITextOperations = (uint64_t)result;
  getRTITextOperationsClass[0] = (uint64_t (*)())RTITextOperationsFunction;
  return result;
}

id RTITextOperationsFunction()
{
  return (id)classRTITextOperations;
}

Class initRTIDataPayload()
{
  if (RemoteTextInputLibrary_sOnce != -1) {
    dispatch_once(&RemoteTextInputLibrary_sOnce, &__block_literal_global_930);
  }
  Class result = objc_getClass("RTIDataPayload");
  classRTIDataPayload = (uint64_t)result;
  getRTIDataPayloadClass[0] = (uint64_t (*)())RTIDataPayloadFunction;
  return result;
}

id RTIDataPayloadFunction()
{
  return (id)classRTIDataPayload;
}

void OUTLINED_FUNCTION_2_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_4_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

__CFString *SFAirDropTransferUserResponseToString(unint64_t a1)
{
  if (a1 > 3) {
    return @"Unknown";
  }
  else {
    return off_1E5BBD8D0[a1];
  }
}

__CFString *SFAirDropTransferFailureReasonToString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Unknown";
  }
  else {
    return off_1E5BBD8F0[a1 - 1];
  }
}

void sub_1A53D7C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFData *createTransferDataWithCGImage(uint64_t a1)
{
  return createImageDataWithSize(a1, 0);
}

void sub_1A53D9B4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53D9F9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53DA3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_1A53DA734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, os_activity_scope_state_s state)
{
}

void sub_1A53DAE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, os_activity_scope_state_s state)
{
}

void sub_1A53DB35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A53DB940(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 64));
  _Unwind_Resume(a1);
}

void sub_1A53DBCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A53DC1E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, os_activity_scope_state_s state)
{
}

void SFAppleIDClientCopyCertificate(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    char v7 = v5;
  }
  else
  {
    char v7 = SFMainQueue();
  }
  char v8 = v7;
  if (!a1)
  {
    if (!v6) {
      goto LABEL_9;
    }
    int v12 = 201201;
    goto LABEL_13;
  }
  if (v6)
  {
    uint64_t v9 = objc_alloc_init(SFAppleIDClient);
    if (v9)
    {
      uint64_t v10 = v9;
      [(SFAppleIDClient *)v9 setDispatchQueue:v8];
      v16[0] = MEMORY[0x1E4F143A8];
      v16[1] = 3221225472;
      v16[2] = __SFAppleIDClientCopyCertificate_block_invoke;
      v16[3] = &unk_1E5BBDA88;
      uint64_t v17 = v10;
      id v18 = v6;
      double v11 = v10;
      [(SFAppleIDClient *)v11 copyCertificateForAppleID:a1 withCompletion:v16];

LABEL_8:
      goto LABEL_9;
    }
    int v12 = -6762;
LABEL_13:
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = __SFAppleIDClientCopyCertificate_block_invoke_2;
    void v13[3] = &unk_1E5BBBC58;
    uint64_t v14 = (SFAppleIDClient *)v6;
    int v15 = v12;
    dispatch_async(v8, v13);
    double v11 = v14;
    goto LABEL_8;
  }
LABEL_9:
}

uint64_t __SFAppleIDClientCopyCertificate_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = NSErrorToOSStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v4, a2, v5);
  id v6 = *(void **)(a1 + 32);

  return [v6 invalidate];
}

uint64_t __SFAppleIDClientCopyCertificate_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, *(unsigned int *)(a1 + 40));
}

void SFAppleIDClientCopyCertificateInfo(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    char v7 = v5;
  }
  else
  {
    char v7 = SFMainQueue();
  }
  char v8 = v7;
  if (!a1)
  {
    if (!v6) {
      goto LABEL_9;
    }
    int v12 = 201201;
    goto LABEL_13;
  }
  if (v6)
  {
    uint64_t v9 = objc_alloc_init(SFAppleIDClient);
    if (v9)
    {
      uint64_t v10 = v9;
      [(SFAppleIDClient *)v9 setDispatchQueue:v8];
      v16[0] = MEMORY[0x1E4F143A8];
      v16[1] = 3221225472;
      v16[2] = __SFAppleIDClientCopyCertificateInfo_block_invoke;
      v16[3] = &unk_1E5BBDAB0;
      uint64_t v19 = a1;
      uint64_t v17 = v10;
      id v18 = v6;
      double v11 = v10;
      [(SFAppleIDClient *)v11 myAccountWithCompletion:v16];

LABEL_8:
      goto LABEL_9;
    }
    int v12 = -6762;
LABEL_13:
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __SFAppleIDClientCopyCertificateInfo_block_invoke_2;
    block[3] = &unk_1E5BBBC58;
    uint64_t v14 = (SFAppleIDClient *)v6;
    int v15 = v12;
    dispatch_async(v8, block);
    double v11 = v14;
    goto LABEL_8;
  }
LABEL_9:
}

void __SFAppleIDClientCopyCertificateInfo_block_invoke(uint64_t a1, void *a2)
{
  id v19 = a2;
  uint64_t v3 = NSErrorToOSStatus();
  if (v3)
  {
    uint64_t v4 = 0;
    id v5 = 0;
    id v6 = 0;
  }
  else if (v19)
  {
    char v7 = [v19 appleID];
    int v8 = [v7 isEqualToString:*(void *)(a1 + 48)];

    if (v8)
    {
      uint64_t v4 = [MEMORY[0x1E4F1CA60] dictionary];
      if (v4)
      {
        uint64_t v9 = [v19 altDSID];

        if (v9)
        {
          uint64_t v10 = [v19 altDSID];
          [v4 setObject:v10 forKeyedSubscript:@"encDsId"];
        }
        double v11 = [v19 identity];
        id v6 = (const void *)[v11 copyCertificate];

        if (v6) {
          [v4 setObject:v6 forKeyedSubscript:@"CertificateReference"];
        }
        int v12 = [v19 identity];
        id v13 = [v12 serialNumber];

        if (v13)
        {
          uint64_t v14 = [v19 identity];
          int v15 = [v14 serialNumber];
          [v4 setObject:v15 forKeyedSubscript:@"SerialNumber"];
        }
        uint64_t v16 = [v19 validationRecord];
        id v5 = [v16 data];

        if (v5) {
          [v4 setObject:v5 forKeyedSubscript:@"AppleIDAccountValidationRecordData"];
        }
        uint64_t v3 = 0;
      }
      else
      {
        id v5 = 0;
        id v6 = 0;
        uint64_t v3 = 4294960568;
      }
    }
    else
    {
      uint64_t v4 = 0;
      id v5 = 0;
      id v6 = 0;
      uint64_t v3 = 201201;
    }
  }
  else
  {
    uint64_t v4 = 0;
    id v5 = 0;
    id v6 = 0;
    uint64_t v3 = 4294960534;
  }
  uint64_t v17 = *(void *)(a1 + 40);
  id v18 = v4;
  (*(void (**)(uint64_t, id, uint64_t))(v17 + 16))(v17, v18, v3);
  [*(id *)(a1 + 32) invalidate];
  if (v6) {
    CFRelease(v6);
  }
}

uint64_t __SFAppleIDClientCopyCertificateInfo_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, *(unsigned int *)(a1 + 40));
}

void SFAppleIDClientCopyIdentity(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    char v7 = v5;
  }
  else
  {
    char v7 = SFMainQueue();
  }
  int v8 = v7;
  if (!a1)
  {
    if (!v6) {
      goto LABEL_9;
    }
    int v12 = 201201;
    goto LABEL_13;
  }
  if (v6)
  {
    uint64_t v9 = objc_alloc_init(SFAppleIDClient);
    if (v9)
    {
      uint64_t v10 = v9;
      [(SFAppleIDClient *)v9 setDispatchQueue:v8];
      v16[0] = MEMORY[0x1E4F143A8];
      v16[1] = 3221225472;
      v16[2] = __SFAppleIDClientCopyIdentity_block_invoke;
      v16[3] = &unk_1E5BBDAD8;
      uint64_t v17 = v10;
      id v18 = v6;
      double v11 = v10;
      [(SFAppleIDClient *)v11 copyIdentityForAppleID:a1 withCompletion:v16];

LABEL_8:
      goto LABEL_9;
    }
    int v12 = -6762;
LABEL_13:
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = __SFAppleIDClientCopyIdentity_block_invoke_2;
    void v13[3] = &unk_1E5BBBC58;
    uint64_t v14 = (SFAppleIDClient *)v6;
    int v15 = v12;
    dispatch_async(v8, v13);
    double v11 = v14;
    goto LABEL_8;
  }
LABEL_9:
}

uint64_t __SFAppleIDClientCopyIdentity_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = NSErrorToOSStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v4, a2, v5);
  id v6 = *(void **)(a1 + 32);

  return [v6 invalidate];
}

uint64_t __SFAppleIDClientCopyIdentity_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, *(unsigned int *)(a1 + 40));
}

void SFAppleIDClientCopyMyAccountInfo(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = SFMainQueue();
  }
  id v6 = v5;
  if (v4)
  {
    char v7 = objc_alloc_init(SFAppleIDClient);
    if (v7)
    {
      int v8 = v7;
      [(SFAppleIDClient *)v7 setDispatchQueue:v6];
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      void v13[2] = __SFAppleIDClientCopyMyAccountInfo_block_invoke;
      void v13[3] = &unk_1E5BBDB00;
      uint64_t v14 = v8;
      id v15 = v4;
      uint64_t v9 = v8;
      [(SFAppleIDClient *)v9 myAccountWithCompletion:v13];
    }
    else
    {
      v10[0] = MEMORY[0x1E4F143A8];
      v10[1] = 3221225472;
      void v10[2] = __SFAppleIDClientCopyMyAccountInfo_block_invoke_2;
      void v10[3] = &unk_1E5BBBC58;
      double v11 = (SFAppleIDClient *)v4;
      int v12 = -6762;
      dispatch_async(v6, v10);
      uint64_t v9 = v11;
    }
  }
}

void __SFAppleIDClientCopyMyAccountInfo_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v33 = a2;
  id v5 = a3;
  if (v5)
  {
    NSErrorToOSStatus();
  }
  else if (v33)
  {
    id v6 = [MEMORY[0x1E4F1CA60] dictionary];
    if (v6)
    {
      char v7 = [v33 appleID];

      if (v7)
      {
        int v8 = [v33 appleID];
        [v6 setObject:v8 forKeyedSubscript:@"AppleID"];
      }
      uint64_t v9 = [v33 identity];
      uint64_t v10 = [v9 certificateExpirationDate];

      if (v10)
      {
        double v11 = [v33 identity];
        int v12 = [v11 certificateExpirationDate];
        [v6 setObject:v12 forKeyedSubscript:@"CertificateExpiration"];
      }
      id v13 = [v33 identity];
      uint64_t v14 = [v13 serialNumber];

      if (v14)
      {
        id v15 = [v33 identity];
        uint64_t v16 = [v15 serialNumber];
        [v6 setObject:v16 forKeyedSubscript:@"SerialNumber"];
      }
      uint64_t v17 = [v33 contactInfo];
      id v18 = [v17 firstName];

      if (v18)
      {
        id v19 = [v33 contactInfo];
        long long v20 = [v19 firstName];
        [v6 setObject:v20 forKeyedSubscript:@"FirstName"];
      }
      uint64_t v21 = [v33 contactInfo];
      long long v22 = [v21 lastName];

      if (v22)
      {
        long long v23 = [v33 contactInfo];
        long long v24 = [v23 lastName];
        [v6 setObject:v24 forKeyedSubscript:@"LastName"];
      }
      long long v25 = [v33 contactInfo];
      id v26 = [v25 validatedEmailAddresses];

      if (v26)
      {
        uint64_t v27 = [v33 contactInfo];
        uint64_t v28 = [v27 validatedEmailAddresses];
        [v6 setObject:v28 forKeyedSubscript:@"ValidatedEmail"];
      }
      uint64_t v29 = [v33 contactInfo];
      uint64_t v30 = [v29 validatedPhoneNumbers];

      if (v30)
      {
        CFStringRef v31 = [v33 contactInfo];
        uint64_t v32 = [v31 validatedPhoneNumbers];
        [v6 setObject:v32 forKeyedSubscript:@"ValidatedPhones"];
      }
      if (![v6 count]) {
    }
      }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  [*(id *)(a1 + 32) invalidate];
}

uint64_t __SFAppleIDClientCopyMyAccountInfo_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, *(unsigned int *)(a1 + 40));
}

void SFAppleIDClientCopyMyAppleID(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = v3;
  }
  else
  {
    id v5 = SFMainQueue();
  }
  id v6 = v5;
  if (v4)
  {
    char v7 = objc_alloc_init(SFAppleIDClient);
    if (v7)
    {
      int v8 = v7;
      [(SFAppleIDClient *)v7 setDispatchQueue:v6];
      v13[0] = MEMORY[0x1E4F143A8];
      v13[1] = 3221225472;
      void v13[2] = __SFAppleIDClientCopyMyAppleID_block_invoke;
      void v13[3] = &unk_1E5BBDB00;
      uint64_t v14 = v8;
      id v15 = v4;
      uint64_t v9 = v8;
      [(SFAppleIDClient *)v9 myAccountWithCompletion:v13];
    }
    else
    {
      v10[0] = MEMORY[0x1E4F143A8];
      v10[1] = 3221225472;
      void v10[2] = __SFAppleIDClientCopyMyAppleID_block_invoke_2;
      void v10[3] = &unk_1E5BBBC58;
      double v11 = (SFAppleIDClient *)v4;
      int v12 = -6762;
      dispatch_async(v6, v10);
      uint64_t v9 = v11;
    }
  }
}

uint64_t __SFAppleIDClientCopyMyAppleID_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = a3;
  uint64_t v7 = [a2 appleID];
  uint64_t v8 = NSErrorToOSStatus();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v5, v7, v8);
  uint64_t v9 = *(void **)(a1 + 32);

  return [v9 invalidate];
}

uint64_t __SFAppleIDClientCopyMyAppleID_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, *(unsigned int *)(a1 + 40));
}

void SFAppleIDClientCopyPersonInfo(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = SFMainQueue();
  }
  uint64_t v8 = v7;
  if (v6)
  {
    if (a1)
    {
      uint64_t v9 = objc_alloc_init(SFAppleIDClient);
      if (v9)
      {
        uint64_t v10 = v9;
        [(SFAppleIDClient *)v9 setDispatchQueue:v8];
        v16[0] = MEMORY[0x1E4F143A8];
        v16[1] = 3221225472;
        v16[2] = __SFAppleIDClientCopyPersonInfo_block_invoke;
        v16[3] = &unk_1E5BBDB28;
        uint64_t v17 = v10;
        id v18 = v6;
        double v11 = v10;
        [(SFAppleIDClient *)v11 personInfoWithEmailOrPhone:a1 completion:v16];

LABEL_8:
        goto LABEL_9;
      }
      int v12 = -6762;
    }
    else
    {
      int v12 = -6705;
    }
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    void v13[2] = __SFAppleIDClientCopyPersonInfo_block_invoke_2;
    void v13[3] = &unk_1E5BBBC58;
    uint64_t v14 = (SFAppleIDClient *)v6;
    int v15 = v12;
    dispatch_async(v8, v13);
    double v11 = v14;
    goto LABEL_8;
  }
LABEL_9:
}

void __SFAppleIDClientCopyPersonInfo_block_invoke(uint64_t a1, void *a2, void *a3)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    NSErrorToOSStatus();
    uint64_t v7 = 0;
  }
  else if (v5)
  {
    uint64_t v7 = [MEMORY[0x1E4F1CA60] dictionary];
    if (v7)
    {
      uint64_t v8 = [v5 accountIdentifier];

      if (v8)
      {
        uint64_t v9 = [v5 accountIdentifier];
        [v7 setObject:v9 forKeyedSubscript:@"AccountIdentifier"];
      }
      uint64_t v10 = [v5 altDSID];

      if (v10)
      {
        double v11 = [v5 altDSID];
        [v7 setObject:v11 forKeyedSubscript:@"AltDSID"];
      }
      int v12 = [v5 matchedValue];

      if (v12)
      {
        id v13 = [v5 matchedValue];
        [v7 setObject:v13 forKeyedSubscript:@"MatchedValue"];
      }
      uint64_t v14 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v5, "certificateStatus"));
      [v7 setObject:v14 forKeyedSubscript:@"CertificateStatus"];

      v15[0] = v7;
      [MEMORY[0x1E4F1C978] arrayWithObjects:v15 count:1];
      objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  [*(id *)(a1 + 32) invalidate];
}

uint64_t __SFAppleIDClientCopyPersonInfo_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 0, *(unsigned int *)(a1 + 40));
}

void sub_1A53DF4F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53DF6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A53DF808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  objc_sync_exit(v11);
  _Unwind_Resume(a1);
}

void sub_1A53DF94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A53DFC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state)
{
  objc_sync_exit(v17);
  _Unwind_Resume(a1);
}

void sub_1A53E0C08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 56));
  _Unwind_Resume(a1);
}

Class initACAccountStore()
{
  if (AccountsLibrary_sOnce != -1) {
    dispatch_once(&AccountsLibrary_sOnce, &__block_literal_global_13);
  }
  Class result = objc_getClass("ACAccountStore");
  classACAccountStore = (uint64_t)result;
  getACAccountStoreClass[0] = (uint64_t (*)())ACAccountStoreFunction;
  return result;
}

id ACAccountStoreFunction()
{
  return (id)classACAccountStore;
}

void *__AccountsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/Accounts.framework/Accounts", 2);
  AccountsLibrary_sLib = (uint64_t)result;
  return result;
}

Class initTRSetupCompanionAuthenticationRequest()
{
  if (TouchRemoteLibrary_sOnce != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce, &__block_literal_global_540_0);
  }
  Class result = objc_getClass("TRSetupCompanionAuthenticationRequest");
  classTRSetupCompanionAuthenticationRequest = (uint64_t)result;
  getTRSetupCompanionAuthenticationRequestClass[0] = (uint64_t (*)())TRSetupCompanionAuthenticationRequestFunction;
  return result;
}

id TRSetupCompanionAuthenticationRequestFunction()
{
  return (id)classTRSetupCompanionAuthenticationRequest;
}

void *__TouchRemoteLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib = (uint64_t)result;
  return result;
}

Class initTRSetupProxyDeviceRequest()
{
  if (TouchRemoteLibrary_sOnce != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce, &__block_literal_global_540_0);
  }
  Class result = objc_getClass("TRSetupProxyDeviceRequest");
  classTRSetupProxyDeviceRequest = (uint64_t)result;
  getTRSetupProxyDeviceRequestClass[0] = (uint64_t (*)())TRSetupProxyDeviceRequestFunction;
  return result;
}

id TRSetupProxyDeviceRequestFunction()
{
  return (id)classTRSetupProxyDeviceRequest;
}

Class initTRSetupProxyAuthenticationRequest()
{
  if (TouchRemoteLibrary_sOnce != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce, &__block_literal_global_540_0);
  }
  Class result = objc_getClass("TRSetupProxyAuthenticationRequest");
  classTRSetupProxyAuthenticationRequest = (uint64_t)result;
  getTRSetupProxyAuthenticationRequestClass[0] = (uint64_t (*)())TRSetupProxyAuthenticationRequestFunction;
  return result;
}

id TRSetupProxyAuthenticationRequestFunction()
{
  return (id)classTRSetupProxyAuthenticationRequest;
}

Class initHMDeviceSetupOperationHandler()
{
  if (HomeKitLibrary_sOnce != -1) {
    dispatch_once(&HomeKitLibrary_sOnce, &__block_literal_global_546);
  }
  Class result = objc_getClass("HMDeviceSetupOperationHandler");
  classHMDeviceSetupOperationHandler = (uint64_t)result;
  getHMDeviceSetupOperationHandlerClass[0] = (uint64_t (*)())HMDeviceSetupOperationHandlerFunction;
  return result;
}

id HMDeviceSetupOperationHandlerFunction()
{
  return (id)classHMDeviceSetupOperationHandler;
}

void *__HomeKitLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib = (uint64_t)result;
  return result;
}

Class initTRAnisetteDataProvider()
{
  if (TouchRemoteLibrary_sOnce != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce, &__block_literal_global_540_0);
  }
  Class result = objc_getClass("TRAnisetteDataProvider");
  classTRAnisetteDataProvider = (uint64_t)result;
  getTRAnisetteDataProviderClass[0] = (uint64_t (*)())TRAnisetteDataProviderFunction;
  return result;
}

id TRAnisetteDataProviderFunction()
{
  return (id)classTRAnisetteDataProvider;
}

Class initTRSetupAuthenticationResponse()
{
  if (TouchRemoteLibrary_sOnce != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce, &__block_literal_global_540_0);
  }
  Class result = objc_getClass("TRSetupAuthenticationResponse");
  classTRSetupAuthenticationResponse = (uint64_t)result;
  getTRSetupAuthenticationResponseClass[0] = (uint64_t (*)())TRSetupAuthenticationResponseFunction;
  return result;
}

id TRSetupAuthenticationResponseFunction()
{
  return (id)classTRSetupAuthenticationResponse;
}

Class initAKDevice()
{
  if (AuthKitLibrary_sOnce != -1) {
    dispatch_once(&AuthKitLibrary_sOnce, &__block_literal_global_556);
  }
  Class result = objc_getClass("AKDevice");
  classAKDevice = (uint64_t)result;
  getAKDeviceClass[0] = (uint64_t (*)())AKDeviceFunction;
  return result;
}

id AKDeviceFunction()
{
  return (id)classAKDevice;
}

void *__AuthKitLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit", 2);
  AuthKitLibrary_sLib = (uint64_t)result;
  return result;
}

Class initTRSetupProxyDeviceResponse()
{
  if (TouchRemoteLibrary_sOnce != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce, &__block_literal_global_540_0);
  }
  Class result = objc_getClass("TRSetupProxyDeviceResponse");
  classTRSetupProxyDeviceResponse = (uint64_t)result;
  getTRSetupProxyDeviceResponseClass[0] = (uint64_t (*)())TRSetupProxyDeviceResponseFunction;
  return result;
}

id TRSetupProxyDeviceResponseFunction()
{
  return (id)classTRSetupProxyDeviceResponse;
}

Class initAKAppleIDAuthenticationContext()
{
  if (AuthKitLibrary_sOnce != -1) {
    dispatch_once(&AuthKitLibrary_sOnce, &__block_literal_global_556);
  }
  Class result = objc_getClass("AKAppleIDAuthenticationContext");
  classAKAppleIDAuthenticationContext = (uint64_t)result;
  getAKAppleIDAuthenticationContextClass[0] = (uint64_t (*)())AKAppleIDAuthenticationContextFunction;
  return result;
}

id AKAppleIDAuthenticationContextFunction()
{
  return (id)classAKAppleIDAuthenticationContext;
}

Class initAKAppleIDAuthenticationController()
{
  if (AuthKitLibrary_sOnce != -1) {
    dispatch_once(&AuthKitLibrary_sOnce, &__block_literal_global_556);
  }
  Class result = objc_getClass("AKAppleIDAuthenticationController");
  classAKAppleIDAuthenticationController = (uint64_t)result;
  getAKAppleIDAuthenticationControllerClass[0] = (uint64_t (*)())AKAppleIDAuthenticationControllerFunction;
  return result;
}

id AKAppleIDAuthenticationControllerFunction()
{
  return (id)classAKAppleIDAuthenticationController;
}

id initValSSServerErrorDomain()
{
  if (StoreServicesLibrary_sOnce != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce, &__block_literal_global_563);
  }
  uint64_t v0 = (id *)dlsym((void *)StoreServicesLibrary_sLib, "SSServerErrorDomain");
  if (v0) {
    objc_storeStrong((id *)&constantValSSServerErrorDomain, *v0);
  }
  getSSServerErrorDomain[0] = (uint64_t (*)())SSServerErrorDomainFunction;
  uint64_t v1 = (void *)constantValSSServerErrorDomain;

  return v1;
}

id SSServerErrorDomainFunction()
{
  return (id)constantValSSServerErrorDomain;
}

void *__StoreServicesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices", 2);
  StoreServicesLibrary_sLib = (uint64_t)result;
  return result;
}

id initValAKAuthenticationAlternateDSIDKey()
{
  if (AuthKitLibrary_sOnce != -1) {
    dispatch_once(&AuthKitLibrary_sOnce, &__block_literal_global_556);
  }
  uint64_t v0 = (id *)dlsym((void *)AuthKitLibrary_sLib, "AKAuthenticationAlternateDSIDKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAKAuthenticationAlternateDSIDKey, *v0);
  }
  getAKAuthenticationAlternateDSIDKey[0] = (uint64_t (*)())AKAuthenticationAlternateDSIDKeyFunction;
  uint64_t v1 = (void *)constantValAKAuthenticationAlternateDSIDKey;

  return v1;
}

id AKAuthenticationAlternateDSIDKeyFunction()
{
  return (id)constantValAKAuthenticationAlternateDSIDKey;
}

id initValAKAuthenticationUsernameKey()
{
  if (AuthKitLibrary_sOnce != -1) {
    dispatch_once(&AuthKitLibrary_sOnce, &__block_literal_global_556);
  }
  uint64_t v0 = (id *)dlsym((void *)AuthKitLibrary_sLib, "AKAuthenticationUsernameKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAKAuthenticationUsernameKey, *v0);
  }
  getAKAuthenticationUsernameKey[0] = (uint64_t (*)())AKAuthenticationUsernameKeyFunction;
  uint64_t v1 = (void *)constantValAKAuthenticationUsernameKey;

  return v1;
}

id AKAuthenticationUsernameKeyFunction()
{
  return (id)constantValAKAuthenticationUsernameKey;
}

id initValAASignInErrorDomain()
{
  if (AppleAccountLibrary_sOnce != -1) {
    dispatch_once(&AppleAccountLibrary_sOnce, &__block_literal_global_569);
  }
  uint64_t v0 = (id *)dlsym((void *)AppleAccountLibrary_sLib, "AASignInErrorDomain");
  if (v0) {
    objc_storeStrong((id *)&constantValAASignInErrorDomain, *v0);
  }
  getAASignInErrorDomain[0] = (uint64_t (*)())AASignInErrorDomainFunction;
  uint64_t v1 = (void *)constantValAASignInErrorDomain;

  return v1;
}

id AASignInErrorDomainFunction()
{
  return (id)constantValAASignInErrorDomain;
}

void *__AppleAccountLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount", 2);
  AppleAccountLibrary_sLib = (uint64_t)result;
  return result;
}

id initValAKAuthenticationPasswordKey()
{
  if (AuthKitLibrary_sOnce != -1) {
    dispatch_once(&AuthKitLibrary_sOnce, &__block_literal_global_556);
  }
  uint64_t v0 = (id *)dlsym((void *)AuthKitLibrary_sLib, "AKAuthenticationPasswordKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAKAuthenticationPasswordKey, *v0);
  }
  getAKAuthenticationPasswordKey[0] = (uint64_t (*)())AKAuthenticationPasswordKeyFunction;
  uint64_t v1 = (void *)constantValAKAuthenticationPasswordKey;

  return v1;
}

id AKAuthenticationPasswordKeyFunction()
{
  return (id)constantValAKAuthenticationPasswordKey;
}

Class initSSMutableAuthenticationContext()
{
  if (StoreServicesLibrary_sOnce != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce, &__block_literal_global_563);
  }
  Class result = objc_getClass("SSMutableAuthenticationContext");
  classSSMutableAuthenticationContext = (uint64_t)result;
  getSSMutableAuthenticationContextClass[0] = (uint64_t (*)())SSMutableAuthenticationContextFunction;
  return result;
}

id SSMutableAuthenticationContextFunction()
{
  return (id)classSSMutableAuthenticationContext;
}

Class initSSAccountStore()
{
  if (StoreServicesLibrary_sOnce != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce, &__block_literal_global_563);
  }
  Class result = objc_getClass("SSAccountStore");
  classSSAccountStore = (uint64_t)result;
  getSSAccountStoreClass[0] = (uint64_t (*)())SSAccountStoreFunction;
  return result;
}

id SSAccountStoreFunction()
{
  return (id)classSSAccountStore;
}

Class initSSAuthenticateRequest()
{
  if (StoreServicesLibrary_sOnce != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce, &__block_literal_global_563);
  }
  Class result = objc_getClass("SSAuthenticateRequest");
  classSSAuthenticateRequest = (uint64_t)result;
  getSSAuthenticateRequestClass[0] = (uint64_t (*)())SSAuthenticateRequestFunction;
  return result;
}

id SSAuthenticateRequestFunction()
{
  return (id)classSSAuthenticateRequest;
}

id SFAirDropTransferTypesToString(uint64_t a1)
{
  id v2 = objc_opt_new();
  id v3 = v2;
  if ((a1 & 2) != 0)
  {
    [v2 addObject:@"Unclassified"];
    if ((a1 & 0x20) == 0)
    {
LABEL_3:
      if ((a1 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((a1 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  [v3 addObject:@"Files"];
  if ((a1 & 0x40) == 0)
  {
LABEL_4:
    if ((a1 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  [v3 addObject:@"CalendarEvents"];
  if ((a1 & 0x80) == 0)
  {
LABEL_5:
    if ((a1 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  [v3 addObject:@"Contacts"];
  if ((a1 & 0x100) == 0)
  {
LABEL_6:
    if ((a1 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  [v3 addObject:@"Notes"];
  if ((a1 & 0x200) == 0)
  {
LABEL_7:
    if ((a1 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  [v3 addObject:@"PhotosAndVideos"];
  if ((a1 & 0x10000) == 0)
  {
LABEL_8:
    if ((a1 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  [v3 addObject:@"PlaygroundItems"];
  if ((a1 & 0x400) == 0)
  {
LABEL_9:
    if ((a1 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  [v3 addObject:@"Profiles"];
  if ((a1 & 0x800) == 0)
  {
LABEL_10:
    if ((a1 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  [v3 addObject:@"VoiceMails"];
  if ((a1 & 0x1000) == 0)
  {
LABEL_11:
    if ((a1 & 0x2000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  [v3 addObject:@"VoiceMemos"];
  if ((a1 & 0x2000) == 0)
  {
LABEL_12:
    if ((a1 & 0x4000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  [v3 addObject:@"WalletItems"];
  if ((a1 & 0x4000) == 0)
  {
LABEL_13:
    if ((a1 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  [v3 addObject:@"PDFs"];
  if ((a1 & 0x40000) == 0)
  {
LABEL_14:
    if ((a1 & 0x1000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  [v3 addObject:@"Credentials"];
  if ((a1 & 0x1000000) == 0)
  {
LABEL_15:
    if ((a1 & 0x2000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  [v3 addObject:@"GenericFiles"];
  if ((a1 & 0x2000000) == 0)
  {
LABEL_16:
    if ((a1 & 0x4000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  [v3 addObject:@"Links"];
  if ((a1 & 0x4000000) == 0)
  {
LABEL_17:
    if ((a1 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  [v3 addObject:@"AppLinks"];
  if ((a1 & 0x8000000) == 0)
  {
LABEL_18:
    if ((a1 & 0x10000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  [v3 addObject:@"FindMyFriendsLinks"];
  if ((a1 & 0x10000000) == 0)
  {
LABEL_19:
    if ((a1 & 0x20000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  [v3 addObject:@"iWorkLinks"];
  if ((a1 & 0x20000000) == 0)
  {
LABEL_20:
    if ((a1 & 0x40000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  [v3 addObject:@"KeynoteLiveLinks"];
  if ((a1 & 0x40000000) == 0)
  {
LABEL_21:
    if ((a1 & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  [v3 addObject:@"SharediCloudDocumentsLinks"];
  if ((a1 & 0x80000000) == 0)
  {
LABEL_22:
    if ((a1 & 0x100000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  [v3 addObject:@"MapsLinks"];
  if ((a1 & 0x100000000) == 0)
  {
LABEL_23:
    if ((a1 & 0x200000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  [v3 addObject:@"AppStoreLinks"];
  if ((a1 & 0x200000000) == 0)
  {
LABEL_24:
    if ((a1 & 0x400000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  [v3 addObject:@"PhoneLinks"];
  if ((a1 & 0x400000000) == 0)
  {
LABEL_25:
    if ((a1 & 0x800000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  [v3 addObject:@"BooksLinks"];
  if ((a1 & 0x800000000) == 0)
  {
LABEL_26:
    if ((a1 & 0x1000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  [v3 addObject:@"iTunesULinks"];
  if ((a1 & 0x1000000000) == 0)
  {
LABEL_27:
    if ((a1 & 0x2000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  [v3 addObject:@"iTunesStoreLinks"];
  if ((a1 & 0x2000000000) == 0)
  {
LABEL_28:
    if ((a1 & 0x4000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  [v3 addObject:@"iLifeLinks"];
  if ((a1 & 0x4000000000) == 0)
  {
LABEL_29:
    if ((a1 & 0x10000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  [v3 addObject:@"PodcastsLinks"];
  if ((a1 & 0x10000000000) == 0)
  {
LABEL_30:
    if ((a1 & 0x8000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_63:
  [v3 addObject:@"NewsLinks"];
  if ((a1 & 0x8000000000) != 0) {
LABEL_31:
  }
    [v3 addObject:@"WebLinks"];
LABEL_32:
  uint64_t v4 = [v3 componentsJoinedByString:@", "];

  return v4;
}

id SFActivityScanTypesToString(uint64_t a1)
{
  id v2 = objc_opt_new();
  id v3 = v2;
  if (!a1)
  {
    uint64_t v4 = @"None";
LABEL_10:
    [v3 addObject:v4];
    goto LABEL_11;
  }
  if ((a1 & 1) == 0)
  {
    if ((a1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_8:
    [v3 addObject:@"CopyPaste"];
    if ((a1 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  [v2 addObject:@"Handoff"];
  if ((a1 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((a1 & 4) != 0)
  {
LABEL_9:
    uint64_t v4 = @"Boosted";
    goto LABEL_10;
  }
LABEL_11:
  id v5 = [v3 componentsJoinedByString:@", "];

  return v5;
}

void sub_1A53E8564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A53E87C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1A53E9D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_1A53EB0B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53EB144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53EED88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53EEEE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53EF040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53EF0D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53EF150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53EF2E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1A53EF5B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, os_activity_scope_state_s state)
{
}

void sub_1A53EF804(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 64));
  _Unwind_Resume(a1);
}

void sub_1A53EFA10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1A53EFDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A53EFEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

__CFString *SFAirDropTransferChangeStateDescription(unint64_t a1)
{
  if (a1 > 7) {
    return &stru_1EF9BDC68;
  }
  else {
    return off_1E5BBE1E0[a1];
  }
}

void sub_1A53F1F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53F23DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void _SF_MyersDiff(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9)
{
  id v40 = a7;
  id v16 = a8;
  id v17 = a9;
  id v18 = v17;
  if (!a5)
  {
    uint64_t v34 = (int)a4;
    uint64_t v35 = (int)a6;
LABEL_29:
    objc_msgSend(v17, "addIndexesInRange:", v34, v35);
    goto LABEL_30;
  }
  if (!a6)
  {
    uint64_t v34 = (int)a3;
    uint64_t v35 = (int)a5;
    id v17 = v16;
    goto LABEL_29;
  }
  unint64_t v19 = _SF_MiddleSnake(a1, a2, a5, a6, v40);
  if (v20 << 16 >= 1)
  {
    uint64_t v21 = v19;
    int v39 = v20 << 16;
    unint64_t v36 = HIWORD(v19);
    unint64_t v37 = HIDWORD(v19);
    int v22 = SWORD2(v19);
    unsigned int v38 = (__int16)v19;
    int v23 = SWORD2(v19) - (__int16)v19;
    uint64_t v24 = ((int)v19 >> 16);
    int v25 = SHIWORD(v19) - ((int)v19 >> 16);
    BOOL v26 = v23 <= v25;
    if (v23 <= v25) {
      int v27 = a4;
    }
    else {
      int v27 = a3;
    }
    if (v26) {
      int v22 = SHIWORD(v19);
    }
    if (v26) {
      int v28 = (int)v19 >> 16;
    }
    else {
      int v28 = (__int16)v19;
    }
    if (v26) {
      uint64_t v29 = v18;
    }
    else {
      uint64_t v29 = v16;
    }
    int v30 = v22 - 1;
    if (((_BYTE)a5 - (_BYTE)a6)) {
      int v31 = v28;
    }
    else {
      int v31 = v30;
    }
    [v29 addIndex:v31 + v27];
    _SF_MyersDiff(a1, a2, a3, a4, v38, v24, v40, v16, v18);
    if (v39 != 0x10000)
    {
      if ((int)a5 <= (__int16)v37) {
        uint64_t v32 = 0;
      }
      else {
        uint64_t v32 = a1 + 8 * (__int16)v37;
      }
      if ((int)a6 <= (__int16)v36) {
        uint64_t v33 = 0;
      }
      else {
        uint64_t v33 = a2 + 8 * (v21 >> 48);
      }
      _SF_MyersDiff(v32, v33, (__int16)(v37 + a3), (__int16)(v36 + a4), (__int16)(a5 - v37), (__int16)(a6 - v36), v40, v16, v18);
    }
  }
LABEL_30:
}

unint64_t _SF_MiddleSnake(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  id v9 = a5;
  uint64_t v10 = (unsigned int (**)(void, void, void))v9;
  uint64_t v53 = (uint64_t)&v53;
  uint64_t v64 = a4;
  int v11 = a4 + a3;
  int v12 = a4 + a3 + 1;
  if (v11 >= -1) {
    int v13 = v11 + 1;
  }
  else {
    int v13 = v11 + 2;
  }
  MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v53 - ((2 * v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  bzero(v14, 2 * v12);
  MEMORY[0x1F4188790](v15);
  v68 = v14;
  bzero(v14, 2 * v12);
  CFDataRef v63 = v14;
  bzero(v14, 2 * v12);
  uint64_t v16 = a3;
  int v59 = v11;
  if ((v11 & 0x80000000) == 0)
  {
    uint64_t v17 = v12;
    id v18 = v68;
    do
    {
      *v18++ = a3;
      --v17;
    }
    while (v17);
  }
  if (v59 >= -2)
  {
    uint64_t v23 = 0;
    LOWORD(v22) = 0;
    uint64_t v24 = 0;
    LOWORD(v21) = 0;
    LOWORD(v20) = 0;
    uint64_t v19 = 0;
    uint64_t v25 = (uint64_t)v13 >> 1;
    int v27 = v63;
    int v26 = v64;
    uint64_t v28 = (int)v16 - (int)v64;
    int v56 = -v59;
    uint64_t v70 = (int)v16;
    uint64_t v69 = (int)v64;
    uint64_t v67 = v25 - v28;
    uint64_t v61 = v25;
    uint64_t v62 = v16;
    uint64_t v60 = v28;
    while (1)
    {
      int v29 = (__int16)v24;
      int v30 = -(__int16)v24;
      int v31 = (__int16)-(__int16)v24;
      uint64_t v54 = v24;
      uint64_t v55 = v23;
      int v65 = v30;
      int v66 = (__int16)v24;
      if (v31 <= (__int16)v24) {
        break;
      }
LABEL_32:
      int v38 = v28 - v29;
      uint64_t v39 = v55 + v28;
      int v40 = v59;
      if (v55 + v28 >= (__int16)(v28 - v29))
      {
        uint64_t v55 = v38;
        uint64_t v41 = (__int16)v38;
        int v42 = v56;
        uint64_t v57 = v39;
        while (1)
        {
          int v43 = (__int16)v38;
          if ((__int16)v38 >= v42 && (__int16)v38 <= v40)
          {
            int v45 = (__int16)v38 - 1;
            int v22 = (__int16)v68[v67 + v45];
            if (v41 != v39 && ((LODWORD(v20) = (__int16)v68[v67 + 1 + (__int16)v38], v41 == v55) || v22 >= (int)v20))
            {
              uint64_t v19 = (v20 - ((__int16)v38 + 1));
              LOWORD(v22) = v20 - 1;
            }
            else
            {
              uint64_t v19 = (v22 - v45);
              LOWORD(v20) = v68[v67 + v45];
            }
            int v21 = (__int16)(v22 - v38);
            if ((__int16)v22 < 1 || v21 < 1)
            {
              int v40 = v59;
            }
            else
            {
              uint64_t v58 = v19;
              uint64_t v47 = (unsigned __int16)v22;
              uint64_t v48 = (unsigned __int16)(v22 - v38);
              while (v10[2](v10, *(void *)(a1 + 8 * (v47 - 1)), *(void *)(a2 + 8 * (v48 - 1))))
              {
                LOWORD(v22) = v47 - 1;
                __int16 v49 = v48 - 1;
                if (v47 >= 2)
                {
                  --v47;
                  BOOL v35 = v48-- <= 1;
                  if (!v35) {
                    continue;
                  }
                }
                goto LABEL_56;
              }
              __int16 v49 = v48;
              LOWORD(v22) = v47;
LABEL_56:
              LOWORD(v21) = v49;
              int v27 = v63;
              int v26 = v64;
              uint64_t v25 = v61;
              LODWORD(v16) = v62;
              int v40 = v59;
              uint64_t v28 = v60;
              int v42 = v56;
              int v30 = v65;
              int v29 = v66;
              uint64_t v39 = v57;
              uint64_t v19 = v58;
            }
            v68[v41 + v67] = v22;
            if (v43 >= v30 && v43 <= v29 && (v28 & 1) == 0 && *(__int16 *)&v27[2 * v41 + 2 * v25] >= (__int16)v22) {
              goto LABEL_63;
            }
          }
          LOWORD(v38) = v43 + 2;
          uint64_t v41 = (__int16)(v43 + 2);
          if (v39 < v41) {
            break;
          }
        }
      }
      uint64_t v24 = (v54 + 1);
      uint64_t v23 = (__int16)(v54 + 1);
      if (v23 > v25) {
        goto LABEL_63;
      }
    }
    uint64_t v57 = v28 + (__int16)v24 - 1;
    uint64_t v58 = v28 - ((__int16)v24 - 1);
    int v32 = -(__int16)v24;
    while (1)
    {
      int v33 = v31 + 1;
      LODWORD(v20) = *(__int16 *)&v27[2 * v31 + 2 + 2 * (int)v25];
      if (v31 != v30 && ((int v22 = *(__int16 *)&v27[2 * v31 - 2 + 2 * (int)v25], v31 == v29) || (int)v20 <= v22))
      {
        LOWORD(v21) = v22 - (v31 - 1);
        LOWORD(v20) = v22 + 1;
      }
      else
      {
        LOWORD(v21) = v20 - v33;
        LOWORD(v22) = *(_WORD *)&v27[2 * v33 + 2 * (int)v25];
      }
      __int16 v34 = v32;
      uint64_t v19 = (__int16)(v20 - v32);
      BOOL v35 = (int)v16 > (__int16)v20 && (int)v19 < v26;
      if (v35)
      {
        __int16 v36 = v21;
        uint64_t v20 = (__int16)v20;
        uint64_t v37 = (__int16)(v20 - v32);
        do
        {
          if (!v10[2](v10, *(void *)(a1 + 8 * v20), *(void *)(a2 + 8 * v37))) {
            break;
          }
          ++v20;
          ++v37;
          if (v20 >= v70) {
            break;
          }
        }
        while (v37 < v69);
        uint64_t v19 = v37;
        LODWORD(v16) = v62;
        int v27 = v63;
        uint64_t v28 = v60;
        uint64_t v25 = v61;
        int v30 = v65;
        int v29 = v66;
        LOWORD(v21) = v36;
        int v26 = v64;
      }
      *(_WORD *)&v27[2 * v25 + 2 * v34] = v20;
      if ((v28 & 1) != 0 && v34 >= v58 && v34 <= v57 && (__int16)v68[v34 + v67] <= (__int16)v20) {
        break;
      }
      LOWORD(v32) = v31 + 2;
      int v31 = (__int16)(v31 + 2);
      if (v31 > v29) {
        goto LABEL_32;
      }
    }
  }
  else
  {
    uint64_t v19 = 0;
    LOWORD(v20) = 0;
    LOWORD(v21) = 0;
    LOWORD(v22) = 0;
  }
LABEL_63:
  uint64_t v50 = v19;
  unsigned __int16 v51 = v21;

  return (v50 << 48) | ((unint64_t)(unsigned __int16)v20 << 32) | ((unint64_t)v51 << 16) | (unsigned __int16)v22;
}

void sub_1A53F3540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  (*(void (**)(uint64_t))(v14 + 16))(v14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_1A53F5108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A53F5384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A53F5CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53F65C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A53F7140(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

Class __getSLCollaborationFooterViewModelClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!SocialLayerLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __SocialLayerLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E5BBE460;
    uint64_t v5 = 0;
    SocialLayerLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!SocialLayerLibraryCore_frameworkLibrary) {
    __getSLCollaborationFooterViewModelClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("SLCollaborationFooterViewModel");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getSLCollaborationFooterViewModelClass_block_invoke_cold_2();
  }
  getSLCollaborationFooterViewModelClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __SocialLayerLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SocialLayerLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1A53FAB60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53FAC18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53FADBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A53FB074(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a2 == 1)
  {
    id v20 = objc_begin_catch(exception_object);
    if (v18)
    {
      int v21 = (void *)MEMORY[0x1E4F28C58];
      a18 = *MEMORY[0x1E4F28568];
      *(void *)(v19 - 64) = @"Could not deserialize stream information from property list";
      int v22 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v19 - 64 forKeys:&a18 count:1];
      uint64_t v23 = [v21 errorWithDomain:*MEMORY[0x1E4F28798] code:94 userInfo:v22];
      (*(void (**)(uint64_t, void, void, void *))(v18 + 16))(v18, 0, 0, v23);
    }
    objc_end_catch();
    JUMPOUT(0x1A53FB038);
  }
  _Unwind_Resume(exception_object);
}

void sub_1A53FB424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53FB558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A53FC3E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1A53FD660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void sub_1A53FF5A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_1A5400BE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1A54011C0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A54014F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

Class initHMHomeManagerConfiguration()
{
  if (HomeKitLibrary_sOnce_0 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_0, &__block_literal_global_21);
  }
  Class result = objc_getClass("HMHomeManagerConfiguration");
  classHMHomeManagerConfiguration = (uint64_t)result;
  getHMHomeManagerConfigurationClass[0] = (uint64_t (*)())HMHomeManagerConfigurationFunction;
  return result;
}

id HMHomeManagerConfigurationFunction()
{
  return (id)classHMHomeManagerConfiguration;
}

void *__HomeKitLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initHMHomeManager()
{
  if (HomeKitLibrary_sOnce_0 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_0, &__block_literal_global_21);
  }
  Class result = objc_getClass("HMHomeManager");
  classHMHomeManager = (uint64_t)result;
  getHMHomeManagerClass[0] = (uint64_t (*)())HMHomeManagerFunction;
  return result;
}

id HMHomeManagerFunction()
{
  return (id)classHMHomeManager;
}

Class initVTPreferences_0()
{
  if (VoiceTriggerLibrary_sOnce_0 != -1) {
    dispatch_once(&VoiceTriggerLibrary_sOnce_0, &__block_literal_global_464);
  }
  Class result = objc_getClass("VTPreferences");
  classVTPreferences_0 = (uint64_t)result;
  getVTPreferencesClass_0[0] = (uint64_t (*)())VTPreferencesFunction_0;
  return result;
}

id VTPreferencesFunction_0()
{
  return (id)classVTPreferences_0;
}

void *__VoiceTriggerLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/VoiceTrigger.framework/VoiceTrigger", 2);
  VoiceTriggerLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initTROperationQueue()
{
  if (TouchRemoteLibrary_sOnce_0 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_0, &__block_literal_global_468);
  }
  Class result = objc_getClass("TROperationQueue");
  classTROperationQueue = (uint64_t)result;
  getTROperationQueueClass[0] = (uint64_t (*)())TROperationQueueFunction;
  return result;
}

id TROperationQueueFunction()
{
  return (id)classTROperationQueue;
}

void *__TouchRemoteLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initTRAuthenticationOperation()
{
  if (TouchRemoteLibrary_sOnce_0 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_0, &__block_literal_global_468);
  }
  Class result = objc_getClass("TRAuthenticationOperation");
  classTRAuthenticationOperation = (uint64_t)result;
  getTRAuthenticationOperationClass[0] = (uint64_t (*)())TRAuthenticationOperationFunction;
  return result;
}

id TRAuthenticationOperationFunction()
{
  return (id)classTRAuthenticationOperation;
}

id initValTRAuthenticationOperationUnauthenticatedServicesKey()
{
  if (TouchRemoteLibrary_sOnce_0 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_0, &__block_literal_global_468);
  }
  uint64_t v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_0, "TRAuthenticationOperationUnauthenticatedServicesKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRAuthenticationOperationUnauthenticatedServicesKey, *v0);
  }
  getTRAuthenticationOperationUnauthenticatedServicesKey[0] = (uint64_t (*)())TRAuthenticationOperationUnauthenticatedServicesKeyFunction;
  uint64_t v1 = (void *)constantValTRAuthenticationOperationUnauthenticatedServicesKey;

  return v1;
}

id TRAuthenticationOperationUnauthenticatedServicesKeyFunction()
{
  return (id)constantValTRAuthenticationOperationUnauthenticatedServicesKey;
}

id initValTRAuthenticationOperationErrorKey()
{
  if (TouchRemoteLibrary_sOnce_0 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_0, &__block_literal_global_468);
  }
  uint64_t v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_0, "TRAuthenticationOperationErrorKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRAuthenticationOperationErrorKey, *v0);
  }
  getTRAuthenticationOperationErrorKey[0] = (uint64_t (*)())TRAuthenticationOperationErrorKeyFunction;
  uint64_t v1 = (void *)constantValTRAuthenticationOperationErrorKey;

  return v1;
}

id TRAuthenticationOperationErrorKeyFunction()
{
  return (id)constantValTRAuthenticationOperationErrorKey;
}

Class initAAUIGenericTermsRemoteUI()
{
  if (AppleAccountUILibrary_sOnce != -1) {
    dispatch_once(&AppleAccountUILibrary_sOnce, &__block_literal_global_475);
  }
  Class result = objc_getClass("AAUIGenericTermsRemoteUI");
  classAAUIGenericTermsRemoteUI = (uint64_t)result;
  getAAUIGenericTermsRemoteUIClass[0] = (uint64_t (*)())AAUIGenericTermsRemoteUIFunction;
  return result;
}

id AAUIGenericTermsRemoteUIFunction()
{
  return (id)classAAUIGenericTermsRemoteUI;
}

void *__AppleAccountUILibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/AppleAccountUI.framework/AppleAccountUI", 2);
  AppleAccountUILibrary_sLib = (uint64_t)result;
  return result;
}

id airdrop_log()
{
  if (airdrop_log_onceToken != -1) {
    dispatch_once(&airdrop_log_onceToken, &__block_literal_global_22);
  }
  uint64_t v0 = (void *)airdrop_log___logger;

  return v0;
}

void __airdrop_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "AirDrop");
  uint64_t v1 = (void *)airdrop_log___logger;
  airdrop_log___logger = (uint64_t)v0;
}

id airdrop_ui_log()
{
  if (airdrop_ui_log_onceToken != -1) {
    dispatch_once(&airdrop_ui_log_onceToken, &__block_literal_global_122);
  }
  os_log_t v0 = (void *)airdrop_ui_log___logger;

  return v0;
}

void __airdrop_ui_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "AirDropUI");
  uint64_t v1 = (void *)airdrop_ui_log___logger;
  airdrop_ui_log___logger = (uint64_t)v0;
}

id airdrop_nw_log()
{
  if (airdrop_nw_log_onceToken[0] != -1) {
    dispatch_once(airdrop_nw_log_onceToken, &__block_literal_global_125);
  }
  os_log_t v0 = (void *)airdrop_nw_log___logger;

  return v0;
}

void __airdrop_nw_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "AirDropNW");
  uint64_t v1 = (void *)airdrop_nw_log___logger;
  airdrop_nw_log___logger = (uint64_t)v0;
}

id asset_log()
{
  if (asset_log_onceToken != -1) {
    dispatch_once(&asset_log_onceToken, &__block_literal_global_128);
  }
  os_log_t v0 = (void *)asset_log___logger;

  return v0;
}

void __asset_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Asset");
  uint64_t v1 = (void *)asset_log___logger;
  asset_log___logger = (uint64_t)v0;
}

id asset_metadata_log()
{
  if (asset_metadata_log_onceToken != -1) {
    dispatch_once(&asset_metadata_log_onceToken, &__block_literal_global_131_0);
  }
  os_log_t v0 = (void *)asset_metadata_log___logger;

  return v0;
}

void __asset_metadata_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Asset-Metadata");
  uint64_t v1 = (void *)asset_metadata_log___logger;
  asset_metadata_log___logger = (uint64_t)v0;
}

id authenticate_accounts_log()
{
  if (authenticate_accounts_log_onceToken != -1) {
    dispatch_once(&authenticate_accounts_log_onceToken, &__block_literal_global_134);
  }
  os_log_t v0 = (void *)authenticate_accounts_log___logger;

  return v0;
}

void __authenticate_accounts_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "SFAuthenticateAccounts");
  uint64_t v1 = (void *)authenticate_accounts_log___logger;
  authenticate_accounts_log___logger = (uint64_t)v0;
}

id auto_unlock_log()
{
  if (auto_unlock_log_onceToken != -1) {
    dispatch_once(&auto_unlock_log_onceToken, &__block_literal_global_137);
  }
  os_log_t v0 = (void *)auto_unlock_log___logger;

  return v0;
}

void __auto_unlock_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "AutoUnlock");
  uint64_t v1 = (void *)auto_unlock_log___logger;
  auto_unlock_log___logger = (uint64_t)v0;
}

id authentications_log()
{
  if (authentications_log_onceToken != -1) {
    dispatch_once(&authentications_log_onceToken, &__block_literal_global_140);
  }
  os_log_t v0 = (void *)authentications_log___logger;

  return v0;
}

void __authentications_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Authentications");
  uint64_t v1 = (void *)authentications_log___logger;
  authentications_log___logger = (uint64_t)v0;
}

id sharing_persistent_log()
{
  if (sharing_persistent_log_onceToken != -1) {
    dispatch_once(&sharing_persistent_log_onceToken, &__block_literal_global_143);
  }
  os_log_t v0 = (void *)sharing_persistent_log___logger;

  return v0;
}

void __sharing_persistent_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Persistent");
  uint64_t v1 = (void *)sharing_persistent_log___logger;
  sharing_persistent_log___logger = (uint64_t)v0;
}

id b332_log()
{
  if (b332_log_onceToken != -1) {
    dispatch_once(&b332_log_onceToken, &__block_literal_global_146);
  }
  os_log_t v0 = (void *)b332_log___logger;

  return v0;
}

void __b332_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "B332Pairing");
  uint64_t v1 = (void *)b332_log___logger;
  b332_log___logger = (uint64_t)v0;
}

id b389_log()
{
  if (b389_log_onceToken != -1) {
    dispatch_once(&b389_log_onceToken, &__block_literal_global_149);
  }
  os_log_t v0 = (void *)b389_log___logger;

  return v0;
}

void __b389_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "B389Setup");
  uint64_t v1 = (void *)b389_log___logger;
  b389_log___logger = (uint64_t)v0;
}

id browser_log()
{
  if (browser_log_onceToken != -1) {
    dispatch_once(&browser_log_onceToken, &__block_literal_global_152);
  }
  os_log_t v0 = (void *)browser_log___logger;

  return v0;
}

void __browser_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Browser");
  uint64_t v1 = (void *)browser_log___logger;
  browser_log___logger = (uint64_t)v0;
}

void __charging_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Charging");
  uint64_t v1 = (void *)charging_log___logger;
  charging_log___logger = (uint64_t)v0;
}

id charging_events_log()
{
  if (charging_events_log_onceToken != -1) {
    dispatch_once(&charging_events_log_onceToken, &__block_literal_global_158);
  }
  os_log_t v0 = (void *)charging_events_log___logger;

  return v0;
}

void __charging_events_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Charging-Events");
  uint64_t v1 = (void *)charging_events_log___logger;
  charging_events_log___logger = (uint64_t)v0;
}

void __daemon_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Daemon");
  uint64_t v1 = (void *)daemon_log___logger;
  daemon_log___logger = (uint64_t)v0;
}

id framework_log()
{
  if (framework_log_onceToken != -1) {
    dispatch_once(&framework_log_onceToken, &__block_literal_global_164);
  }
  os_log_t v0 = (void *)framework_log___logger;

  return v0;
}

void __framework_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Framework");
  uint64_t v1 = (void *)framework_log___logger;
  framework_log___logger = (uint64_t)v0;
}

id handoff_log()
{
  if (handoff_log_onceToken != -1) {
    dispatch_once(&handoff_log_onceToken, &__block_literal_global_167);
  }
  os_log_t v0 = (void *)handoff_log___logger;

  return v0;
}

void __handoff_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Handoff");
  uint64_t v1 = (void *)handoff_log___logger;
  handoff_log___logger = (uint64_t)v0;
}

id log_submit_log()
{
  if (log_submit_log_onceToken != -1) {
    dispatch_once(&log_submit_log_onceToken, &__block_literal_global_170);
  }
  os_log_t v0 = (void *)log_submit_log___logger;

  return v0;
}

void __log_submit_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "LogSubmit");
  uint64_t v1 = (void *)log_submit_log___logger;
  log_submit_log___logger = (uint64_t)v0;
}

id magic_head_log()
{
  if (magic_head_log_onceToken != -1) {
    dispatch_once(&magic_head_log_onceToken, &__block_literal_global_173);
  }
  os_log_t v0 = (void *)magic_head_log___logger;

  return v0;
}

void __magic_head_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "MagicHead");
  uint64_t v1 = (void *)magic_head_log___logger;
  magic_head_log___logger = (uint64_t)v0;
}

void __paired_unlock_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "PairedUnlock");
  uint64_t v1 = (void *)paired_unlock_log___logger;
  paired_unlock_log___logger = (uint64_t)v0;
}

id people_ui_log()
{
  if (people_ui_log_onceToken != -1) {
    dispatch_once(&people_ui_log_onceToken, &__block_literal_global_179);
  }
  os_log_t v0 = (void *)people_ui_log___logger;

  return v0;
}

void __people_ui_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "PeopleUI");
  uint64_t v1 = (void *)people_ui_log___logger;
  people_ui_log___logger = (uint64_t)v0;
}

id remote_log()
{
  if (remote_log_onceToken != -1) {
    dispatch_once(&remote_log_onceToken, &__block_literal_global_182);
  }
  os_log_t v0 = (void *)remote_log___logger;

  return v0;
}

void __remote_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Remote");
  uint64_t v1 = (void *)remote_log___logger;
  remote_log___logger = (uint64_t)v0;
}

id share_sheet_log()
{
  if (share_sheet_log_onceToken != -1) {
    dispatch_once(&share_sheet_log_onceToken, &__block_literal_global_185);
  }
  os_log_t v0 = (void *)share_sheet_log___logger;

  return v0;
}

void __share_sheet_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.ShareSheet", "ShareSheet");
  uint64_t v1 = (void *)share_sheet_log___logger;
  share_sheet_log___logger = (uint64_t)v0;
}

id gelato_sharing_log()
{
  if (gelato_sharing_log_onceToken != -1) {
    dispatch_once(&gelato_sharing_log_onceToken, &__block_literal_global_189);
  }
  os_log_t v0 = (void *)gelato_sharing_log___logger;

  return v0;
}

void __gelato_sharing_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "GelatoSharingLog");
  uint64_t v1 = (void *)gelato_sharing_log___logger;
  gelato_sharing_log___logger = (uint64_t)v0;
}

id sharing_ui_log()
{
  if (sharing_ui_log_onceToken[0] != -1) {
    dispatch_once(sharing_ui_log_onceToken, &__block_literal_global_192);
  }
  os_log_t v0 = (void *)sharing_ui_log___logger;

  return v0;
}

void __sharing_ui_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.SharingUI", "SharingUI");
  uint64_t v1 = (void *)sharing_ui_log___logger;
  sharing_ui_log___logger = (uint64_t)v0;
}

id streams_log()
{
  if (streams_log_onceToken != -1) {
    dispatch_once(&streams_log_onceToken, &__block_literal_global_196);
  }
  os_log_t v0 = (void *)streams_log___logger;

  return v0;
}

void __streams_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Streams");
  uint64_t v1 = (void *)streams_log___logger;
  streams_log___logger = (uint64_t)v0;
}

id tethering_log()
{
  if (tethering_log_onceToken != -1) {
    dispatch_once(&tethering_log_onceToken, &__block_literal_global_199);
  }
  os_log_t v0 = (void *)tethering_log___logger;

  return v0;
}

void __tethering_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Tethering");
  uint64_t v1 = (void *)tethering_log___logger;
  tethering_log___logger = (uint64_t)v0;
}

id utilities_log()
{
  if (utilities_log_onceToken != -1) {
    dispatch_once(&utilities_log_onceToken, &__block_literal_global_202);
  }
  os_log_t v0 = (void *)utilities_log___logger;

  return v0;
}

void __utilities_log_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "Utilities");
  uint64_t v1 = (void *)utilities_log___logger;
  utilities_log___logger = (uint64_t)v0;
}

id sharingXPCHelperLog()
{
  if (sharingXPCHelperLog_onceToken != -1) {
    dispatch_once(&sharingXPCHelperLog_onceToken, &__block_literal_global_205);
  }
  os_log_t v0 = (void *)sharingXPCHelperLog___logger;

  return v0;
}

void __sharingXPCHelperLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "SharingXPCHelper");
  uint64_t v1 = (void *)sharingXPCHelperLog___logger;
  sharingXPCHelperLog___logger = (uint64_t)v0;
}

id sharingHUDLog()
{
  if (sharingHUDLog_onceToken != -1) {
    dispatch_once(&sharingHUDLog_onceToken, &__block_literal_global_208);
  }
  os_log_t v0 = (void *)sharingHUDLog___logger;

  return v0;
}

void __sharingHUDLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.sharing", "SharingHUD");
  uint64_t v1 = (void *)sharingHUDLog___logger;
  sharingHUDLog___logger = (uint64_t)v0;
}

void SFDashboardLog(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = SFDashboardClient();
  [v10 logv:a1 args:&a9];
}

id SFDashboardClient()
{
  if (SFDashboardClient_onceToken != -1) {
    dispatch_once(&SFDashboardClient_onceToken, &__block_literal_global_229);
  }
  os_log_t v0 = (void *)SFDashboardClient_client;

  return v0;
}

void SFDashboardLogJSON(void *a1)
{
  id v1 = a1;
  SFDashboardClient();
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v2 logJSON:v1];
}

void SFMetricsLogUnexpectedEvent(uint64_t a1, uint64_t a2, void *a3)
{
  v15[3] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  unint64_t v6 = [v5 length];
  if (v6 >= 0x1F4) {
    uint64_t v7 = 500;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v8 = [v5 substringToIndex:v7];

  v14[0] = @"event";
  uint64_t v9 = [NSNumber numberWithUnsignedInt:a1];
  uint64_t v10 = (void *)v9;
  int v11 = &stru_1EF9BDC68;
  if (v8) {
    int v11 = v8;
  }
  v15[0] = v9;
  v15[1] = v11;
  v14[1] = @"contextString";
  v14[2] = @"contextInt";
  int v12 = [NSNumber numberWithLong:a2];
  void v15[2] = v12;
  int v13 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v15 forKeys:v14 count:3];
  SFMetricsLog(@"com.apple.sharing.UnexpectedEvent", v13);
}

void SFMetricsLog(void *a1, void *a2)
{
  id v4 = a1;
  id v3 = a2;
  if (gLogCategory_Metrics <= 30 && (gLogCategory_Metrics != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  ((void (*)(void *, void *))softLinkAnalyticsSendEvent[0])(v4, v3);
}

uint64_t __SFDashboardClient_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F5E100]);
  id v1 = (void *)SFDashboardClient_client;
  SFDashboardClient_client = (uint64_t)v0;

  id v2 = (void *)SFDashboardClient_client;

  return [v2 activate];
}

void initAnalyticsSendEvent(void *a1, void *a2)
{
  uint64_t v3 = CoreAnalyticsLibrary_sOnce;
  id v4 = a2;
  id v5 = a1;
  if (v3 != -1) {
    dispatch_once(&CoreAnalyticsLibrary_sOnce, &__block_literal_global_233);
  }
  softLinkAnalyticsSendEvent[0] = (uint64_t (*)())dlsym((void *)CoreAnalyticsLibrary_sLib, "AnalyticsSendEvent");
  ((void (*)(id, id))softLinkAnalyticsSendEvent[0])(v5, v4);
}

void *__CoreAnalyticsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics", 2);
  CoreAnalyticsLibrary_sLib = (uint64_t)result;
  return result;
}

__CFString *SFAuthenticationTypeToString(unint64_t a1)
{
  if (a1 > 0xB) {
    return @"Unknown";
  }
  else {
    return off_1E5BBE860[a1];
  }
}

__CFString *SFAuthenticationErrorToString(int a1)
{
  if ((a1 - 1) > 0x26) {
    return @"Unknown";
  }
  else {
    return off_1E5BBE8C0[a1 - 1];
  }
}

void sub_1A5405988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void sub_1A540B0D8(_Unwind_Exception *a1)
{
  id v5 = v1;
  objc_destroyWeak(v5);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 56));
  _Unwind_Resume(a1);
}

void sub_1A540B558(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

Class initTVLDisplayColorCalibrator_0()
{
  if (TVLatencyLibrary_sOnce_0 != -1) {
    dispatch_once(&TVLatencyLibrary_sOnce_0, &__block_literal_global_329);
  }
  Class result = objc_getClass("TVLDisplayColorCalibrator");
  classTVLDisplayColorCalibrator_0 = (uint64_t)result;
  getTVLDisplayColorCalibratorClass_0[0] = (uint64_t (*)())TVLDisplayColorCalibratorFunction_0;
  return result;
}

id TVLDisplayColorCalibratorFunction_0()
{
  return (id)classTVLDisplayColorCalibrator_0;
}

void *__TVLatencyLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TVLatency.framework/TVLatency", 2);
  TVLatencyLibrary_sLib_0 = (uint64_t)result;
  return result;
}

void sub_1A540C108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1A540C7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A540CDF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1A540D004(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1A540D0C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void SFDeviceAssetAddKeyValuePairsForStrictMatch(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 color];

  if (v5)
  {
    unint64_t v6 = [v3 color];
    SFDeviceAssetAddKeyValuePair(@"CL", v6, v4);
  }
  uint64_t v7 = [v3 additionalQueryParameters];
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  void v10[2] = __SFDeviceAssetAddKeyValuePairsForStrictMatch_block_invoke;
  void v10[3] = &unk_1E5BBEE60;
  id v8 = v4;
  id v11 = v8;
  [v7 enumerateKeysAndObjectsUsingBlock:v10];

  if ([v3 legacyAsset])
  {
    if ([v3 h264]) {
      uint64_t v9 = @"YES";
    }
    else {
      uint64_t v9 = @"NO";
    }
    SFDeviceAssetAddKeyValuePair(@"H264", v9, v8);
  }
}

uint64_t SFDeviceAssetProcessCanAccessURL(void *a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = v3;
  if (!v3)
  {
    if (!a2) {
      goto LABEL_7;
    }
    uint64_t v7 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v8 = *MEMORY[0x1E4F28798];
    uint64_t v14 = *MEMORY[0x1E4F28568];
    uint64_t v9 = NSString;
    uint64_t v10 = [0 path];
    id v11 = [v9 stringWithFormat:@"Process cannot access URL %@", v10];
    v15[0] = v11;
    int v12 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v15 forKeys:&v14 count:1];
    *(void *)a2 = [v7 errorWithDomain:v8 code:1 userInfo:v12];

LABEL_6:
    a2 = 0;
    goto LABEL_7;
  }
  id v5 = [v3 path];
  int v6 = open((const char *)[v5 UTF8String], 0);

  if (v6 == -1) {
    goto LABEL_6;
  }
  close(v6);
  a2 = 1;
LABEL_7:

  return a2;
}

void sub_1A540F7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A540FEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void SFDeviceAssetAddKeyValuePair(void *a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = [v6 description];
  uint64_t v9 = [v7 addKeyValuePair:v5 with:v8];

  if (v9 == 1)
  {
    uint64_t v10 = asset_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412802;
      id v12 = v6;
      __int16 v13 = 2112;
      id v14 = v5;
      __int16 v15 = 2112;
      id v16 = v7;
      _os_log_error_impl(&dword_1A5389000, v10, OS_LOG_TYPE_ERROR, "Failed to add %@ for key %@ to query %@", (uint8_t *)&v11, 0x20u);
    }
  }
}

void __SFDeviceAssetAddKeyValuePairsForStrictMatch_block_invoke(uint64_t a1, void *a2, void *a3)
{
}

Class initNEConfigurationManager()
{
  if (NetworkExtensionLibrary_sOnce != -1) {
    dispatch_once(&NetworkExtensionLibrary_sOnce, &__block_literal_global_915);
  }
  Class result = objc_getClass("NEConfigurationManager");
  classNEConfigurationManager = (uint64_t)result;
  getNEConfigurationManagerClass[0] = (uint64_t (*)())NEConfigurationManagerFunction;
  return result;
}

id NEConfigurationManagerFunction()
{
  return (id)classNEConfigurationManager;
}

void *__NetworkExtensionLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/NetworkExtension.framework/NetworkExtension", 2);
  NetworkExtensionLibrary_sLib = (uint64_t)result;
  return result;
}

Class initMADownloadOptions()
{
  if (MobileAssetLibrary_sOnce != -1) {
    dispatch_once(&MobileAssetLibrary_sOnce, &__block_literal_global_919);
  }
  Class result = objc_getClass("MADownloadOptions");
  classMADownloadOptions = (uint64_t)result;
  getMADownloadOptionsClass[0] = (uint64_t (*)())MADownloadOptionsFunction;
  return result;
}

id MADownloadOptionsFunction()
{
  return (id)classMADownloadOptions;
}

void *__MobileAssetLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset", 2);
  MobileAssetLibrary_sLib = (uint64_t)result;
  return result;
}

Class initMAAsset()
{
  if (MobileAssetLibrary_sOnce != -1) {
    dispatch_once(&MobileAssetLibrary_sOnce, &__block_literal_global_919);
  }
  Class result = objc_getClass("MAAsset");
  classMAAsset = (uint64_t)result;
  getMAAssetClass[0] = (uint64_t (*)())MAAssetFunction;
  return result;
}

id MAAssetFunction()
{
  return (id)classMAAsset;
}

id initValASAttributeContentVersion()
{
  if (MobileAssetLibrary_sOnce != -1) {
    dispatch_once(&MobileAssetLibrary_sOnce, &__block_literal_global_919);
  }
  id v0 = (id *)dlsym((void *)MobileAssetLibrary_sLib, "ASAttributeContentVersion");
  if (v0) {
    objc_storeStrong((id *)&constantValASAttributeContentVersion, *v0);
  }
  getASAttributeContentVersion[0] = (uint64_t (*)())ASAttributeContentVersionFunction;
  id v1 = (void *)constantValASAttributeContentVersion;

  return v1;
}

id ASAttributeContentVersionFunction()
{
  return (id)constantValASAttributeContentVersion;
}

Class initMAAssetQuery()
{
  if (MobileAssetLibrary_sOnce != -1) {
    dispatch_once(&MobileAssetLibrary_sOnce, &__block_literal_global_919);
  }
  Class result = objc_getClass("MAAssetQuery");
  classMAAssetQuery = (uint64_t)result;
  getMAAssetQueryClass[0] = (uint64_t (*)())MAAssetQueryFunction;
  return result;
}

id MAAssetQueryFunction()
{
  return (id)classMAAssetQuery;
}

uint64_t initMKBDeviceUnlockedSinceBoot()
{
  if (MobileKeyBagLibrary_sOnce != -1) {
    dispatch_once(&MobileKeyBagLibrary_sOnce, &__block_literal_global_926);
  }
  id v0 = (uint64_t (*)())dlsym((void *)MobileKeyBagLibrary_sLib, "MKBDeviceUnlockedSinceBoot");
  softLinkMKBDeviceUnlockedSinceBoot[0] = v0;

  return v0();
}

void *__MobileKeyBagLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/MobileKeyBag.framework/MobileKeyBag", 2);
  MobileKeyBagLibrary_sLib = (uint64_t)result;
  return result;
}

void OUTLINED_FUNCTION_1_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t SFAirDropUrlSchemeIsSupported(void *a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (SFAirDropUrlSchemeIsSupported_onceToken != -1) {
    dispatch_once(&SFAirDropUrlSchemeIsSupported_onceToken, &__block_literal_global_27);
  }
  if ([v1 length])
  {
    uint64_t v2 = (void *)SFAirDropUrlSchemeIsSupported_urlSchemeDenylist;
    id v3 = [v1 lowercaseString];
    LODWORD(v2) = [v2 containsObject:v3];

    if (!v2)
    {
      uint64_t v5 = 1;
      goto LABEL_10;
    }
    id v4 = airdrop_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138412290;
      id v8 = v1;
      _os_log_impl(&dword_1A5389000, v4, OS_LOG_TYPE_DEFAULT, "%@ url scheme is not supported.", (uint8_t *)&v7, 0xCu);
    }
  }
  uint64_t v5 = 0;
LABEL_10:

  return v5;
}

void __SFAirDropUrlSchemeIsSupported_block_invoke()
{
  id v0 = (void *)SFAirDropUrlSchemeIsSupported_urlSchemeDenylist;
  SFAirDropUrlSchemeIsSupported_urlSchemeDenylist = (uint64_t)&unk_1EFA0A040;
}

BOOL SFAirDropDeviceNameIsSuspicious(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1 && (unint64_t)[v1 length] >= 0x20)
  {
    uint64_t v4 = [objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:v2];
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      BOOL v3 = 1;
    }
    else
    {
      id v6 = [v2 componentsSeparatedByString:@":"];
      int v7 = [v6 firstObject];

      uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDString:v7];
      BOOL v3 = v5 != 0;
    }
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

void sub_1A5418150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id obj)
{
}

void sub_1A5418208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A541C26C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id callbackRoutingDict()
{
  if (callbackRoutingDict_onceToken != -1) {
    dispatch_once(&callbackRoutingDict_onceToken, &__block_literal_global_416);
  }
  id v0 = (void *)callbackRoutingDict_routingDict;

  return v0;
}

void notificationResponseHandler(uint64_t a1, uint64_t a2)
{
  if (notificationQueue_onceToken != -1) {
    dispatch_once(&notificationQueue_onceToken, &__block_literal_global_28);
  }
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  void v4[2] = __notificationResponseHandler_block_invoke;
  v4[3] = &__block_descriptor_48_e5_v8__0l;
  v4[4] = a1;
  v4[5] = a2;
  dispatch_async((dispatch_queue_t)notificationQueue___queue, v4);
}

void __notificationResponseHandler_block_invoke(uint64_t a1)
{
  uint64_t v2 = callbackRoutingDict();
  BOOL v3 = [NSNumber numberWithUnsignedLong:*(void *)(a1 + 32)];
  uint64_t v4 = [v2 objectForKeyedSubscript:v3];
  [v2 setObject:0 forKeyedSubscript:v3];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v5 dispatchQueue];
    int v7 = (__CFRunLoopSource *)v5[4];
    if (v7)
    {
      CFStringRef v8 = (const __CFString *)*MEMORY[0x1E4F1D418];
      Main = CFRunLoopGetMain();
      CFRunLoopRemoveSource(Main, v7, v8);
      CFRelease(v7);
    }
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __notificationResponseHandler_block_invoke_2;
    block[3] = &unk_1E5BBEF90;
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    void block[4] = v5;
    block[5] = v10;
    block[6] = v11;
    dispatch_async(v6, block);
  }
  else if (gLogCategory_SFUserAlert <= 50 {
         && (gLogCategory_SFUserAlert != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
}

uint64_t __notificationResponseHandler_block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleResponseForNotification:*(void *)(a1 + 40) flags:*(void *)(a1 + 48)];
}

void __notificationQueue_block_invoke()
{
  dispatch_queue_t v0 = dispatch_queue_create("SFUserAlert-queue", 0);
  uint64_t v1 = (void *)notificationQueue___queue;
  notificationQueue___queue = (uint64_t)v0;
}

void __callbackRoutingDict_block_invoke()
{
  uint64_t v0 = objc_opt_new();
  uint64_t v1 = (void *)callbackRoutingDict_routingDict;
  callbackRoutingDict_routingDict = v0;
}

void sub_1A541F470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

Class initRTIInputSystemService()
{
  if (RemoteTextInputLibrary_sOnce_0 != -1) {
    dispatch_once(&RemoteTextInputLibrary_sOnce_0, &__block_literal_global_29);
  }
  Class result = objc_getClass("RTIInputSystemService");
  classRTIInputSystemService = (uint64_t)result;
  getRTIInputSystemServiceClass[0] = (uint64_t (*)())RTIInputSystemServiceFunction;
  return result;
}

id RTIInputSystemServiceFunction()
{
  return (id)classRTIInputSystemService;
}

void *__RemoteTextInputLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput", 2);
  RemoteTextInputLibrary_sLib_0 = (uint64_t)result;
  return result;
}

id initValRTIServiceSharingName()
{
  if (RemoteTextInputLibrary_sOnce_0 != -1) {
    dispatch_once(&RemoteTextInputLibrary_sOnce_0, &__block_literal_global_29);
  }
  uint64_t v0 = (id *)dlsym((void *)RemoteTextInputLibrary_sLib_0, "RTIServiceSharingName");
  if (v0) {
    objc_storeStrong((id *)&constantValRTIServiceSharingName, *v0);
  }
  getRTIServiceSharingName[0] = (uint64_t (*)())RTIServiceSharingNameFunction;
  uint64_t v1 = (void *)constantValRTIServiceSharingName;

  return v1;
}

id RTIServiceSharingNameFunction()
{
  return (id)constantValRTIServiceSharingName;
}

Class initRTIInputSystemSourceSession()
{
  if (RemoteTextInputLibrary_sOnce_0 != -1) {
    dispatch_once(&RemoteTextInputLibrary_sOnce_0, &__block_literal_global_29);
  }
  Class result = objc_getClass("RTIInputSystemSourceSession");
  classRTIInputSystemSourceSession = (uint64_t)result;
  getRTIInputSystemSourceSessionClass[0] = (uint64_t (*)())RTIInputSystemSourceSessionFunction;
  return result;
}

id RTIInputSystemSourceSessionFunction()
{
  return (id)classRTIInputSystemSourceSession;
}

id initValTIKeyboardOutputInfoTypeUsernameStr()
{
  if (TextInputLibrary_sOnce != -1) {
    dispatch_once(&TextInputLibrary_sOnce, &__block_literal_global_338);
  }
  uint64_t v0 = (id *)dlsym((void *)TextInputLibrary_sLib, "TIKeyboardOutputInfoTypeUsernameStr");
  if (v0) {
    objc_storeStrong((id *)&constantValTIKeyboardOutputInfoTypeUsernameStr, *v0);
  }
  getTIKeyboardOutputInfoTypeUsernameStr[0] = (uint64_t (*)())TIKeyboardOutputInfoTypeUsernameStrFunction;
  uint64_t v1 = (void *)constantValTIKeyboardOutputInfoTypeUsernameStr;

  return v1;
}

id TIKeyboardOutputInfoTypeUsernameStrFunction()
{
  return (id)constantValTIKeyboardOutputInfoTypeUsernameStr;
}

void *__TextInputLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TextInput.framework/TextInput", 2);
  TextInputLibrary_sLib = (uint64_t)result;
  return result;
}

id initValTIKeyboardOutputInfoTypePasswordStr()
{
  if (TextInputLibrary_sOnce != -1) {
    dispatch_once(&TextInputLibrary_sOnce, &__block_literal_global_338);
  }
  uint64_t v0 = (id *)dlsym((void *)TextInputLibrary_sLib, "TIKeyboardOutputInfoTypePasswordStr");
  if (v0) {
    objc_storeStrong((id *)&constantValTIKeyboardOutputInfoTypePasswordStr, *v0);
  }
  getTIKeyboardOutputInfoTypePasswordStr[0] = (uint64_t (*)())TIKeyboardOutputInfoTypePasswordStrFunction;
  uint64_t v1 = (void *)constantValTIKeyboardOutputInfoTypePasswordStr;

  return v1;
}

id TIKeyboardOutputInfoTypePasswordStrFunction()
{
  return (id)constantValTIKeyboardOutputInfoTypePasswordStr;
}

void sub_1A5421258(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54214D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54216BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5421D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A5421FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5423528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5423614(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5423808(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5423A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5423C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5423E78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5424090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54242D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5424550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5424768(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5424A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5424C7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5424EA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5425104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5425374(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54255E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5425874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5425AF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5425D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5426014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5426114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5426200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54263F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5426608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A542681C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5426A64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5426D38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

Class initWPAWDL()
{
  if (WirelessProximityLibrary_sOnce != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce, &__block_literal_global_276);
  }
  Class result = objc_getClass("WPAWDL");
  classWPAWDL = (uint64_t)result;
  getWPAWDLClass[0] = (uint64_t (*)())WPAWDLFunction;
  return result;
}

id WPAWDLFunction()
{
  return (id)classWPAWDL;
}

void *__WirelessProximityLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity", 2);
  WirelessProximityLibrary_sLib = (uint64_t)result;
  return result;
}

Class initWPNearby()
{
  if (WirelessProximityLibrary_sOnce != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce, &__block_literal_global_276);
  }
  Class result = objc_getClass("WPNearby");
  classWPNearby = (uint64_t)result;
  getWPNearbyClass[0] = (uint64_t (*)())WPNearbyFunction;
  return result;
}

id WPNearbyFunction()
{
  return (id)classWPNearby;
}

Class initWPPairing()
{
  if (WirelessProximityLibrary_sOnce != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce, &__block_literal_global_276);
  }
  Class result = objc_getClass("WPPairing");
  classWPPairing = (uint64_t)result;
  getWPPairingClass[0] = (uint64_t (*)())WPPairingFunction;
  return result;
}

id WPPairingFunction()
{
  return (id)classWPPairing;
}

void sub_1A54274A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A542837C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54283FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id initValWPNearbyKeyConnectLatencyCritical()
{
  if (WirelessProximityLibrary_sOnce_0 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_0, &__block_literal_global_31);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_0, "WPNearbyKeyConnectLatencyCritical");
  if (v0) {
    objc_storeStrong((id *)&constantValWPNearbyKeyConnectLatencyCritical, *v0);
  }
  getWPNearbyKeyConnectLatencyCritical[0] = (uint64_t (*)())WPNearbyKeyConnectLatencyCriticalFunction;
  uint64_t v1 = (void *)constantValWPNearbyKeyConnectLatencyCritical;

  return v1;
}

id WPNearbyKeyConnectLatencyCriticalFunction()
{
  return (id)constantValWPNearbyKeyConnectLatencyCritical;
}

void *__WirelessProximityLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity", 2);
  WirelessProximityLibrary_sLib_0 = (uint64_t)result;
  return result;
}

id initValWPNearbyLEPipeCapable()
{
  if (WirelessProximityLibrary_sOnce_0 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_0, &__block_literal_global_31);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_0, "WPNearbyLEPipeCapable");
  if (v0) {
    objc_storeStrong((id *)&constantValWPNearbyLEPipeCapable, *v0);
  }
  getWPNearbyLEPipeCapable[0] = (uint64_t (*)())WPNearbyLEPipeCapableFunction;
  uint64_t v1 = (void *)constantValWPNearbyLEPipeCapable;

  return v1;
}

id WPNearbyLEPipeCapableFunction()
{
  return (id)constantValWPNearbyLEPipeCapable;
}

id initValWPNearbyKeyUseCaseList()
{
  if (WirelessProximityLibrary_sOnce_0 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_0, &__block_literal_global_31);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_0, "WPNearbyKeyUseCaseList");
  if (v0) {
    objc_storeStrong((id *)&constantValWPNearbyKeyUseCaseList, *v0);
  }
  getWPNearbyKeyUseCaseList[0] = (uint64_t (*)())WPNearbyKeyUseCaseListFunction;
  uint64_t v1 = (void *)constantValWPNearbyKeyUseCaseList;

  return v1;
}

id WPNearbyKeyUseCaseListFunction()
{
  return (id)constantValWPNearbyKeyUseCaseList;
}

uint64_t _QSortCmpInt8(char *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v2 < v3;
  BOOL v5 = v2 > v3;
  int v6 = v4;
  return (v5 - v6);
}

void sub_1A5429C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A542A38C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A542A420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A542B908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

Class initCBCentralManager()
{
  if (CoreBluetoothLibrary_sOnce != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce, &__block_literal_global_32);
  }
  Class result = objc_getClass("CBCentralManager");
  classCBCentralManager = (uint64_t)result;
  getCBCentralManagerClass[0] = (uint64_t (*)())CBCentralManagerFunction;
  return result;
}

id CBCentralManagerFunction()
{
  return (id)classCBCentralManager;
}

void *__CoreBluetoothLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth", 2);
  CoreBluetoothLibrary_sLib = (uint64_t)result;
  return result;
}

Class initCBScalablePipeManager()
{
  if (CoreBluetoothLibrary_sOnce != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce, &__block_literal_global_32);
  }
  Class result = objc_getClass("CBScalablePipeManager");
  classCBScalablePipeManager = (uint64_t)result;
  getCBScalablePipeManagerClass[0] = (uint64_t (*)())CBScalablePipeManagerFunction;
  return result;
}

id CBScalablePipeManagerFunction()
{
  return (id)classCBScalablePipeManager;
}

id initValCBScalablePipeOptionTransport()
{
  if (CoreBluetoothLibrary_sOnce != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce, &__block_literal_global_32);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib, "CBScalablePipeOptionTransport");
  if (v0) {
    objc_storeStrong((id *)&constantValCBScalablePipeOptionTransport, *v0);
  }
  getCBScalablePipeOptionTransport[0] = (uint64_t (*)())CBScalablePipeOptionTransportFunction;
  uint64_t v1 = (void *)constantValCBScalablePipeOptionTransport;

  return v1;
}

id CBScalablePipeOptionTransportFunction()
{
  return (id)constantValCBScalablePipeOptionTransport;
}

Class initIDSService()
{
  if (IDSLibrary_sOnce != -1) {
    dispatch_once(&IDSLibrary_sOnce, &__block_literal_global_395);
  }
  Class result = objc_getClass("IDSService");
  classIDSService = (uint64_t)result;
  getIDSServiceClass[0] = (uint64_t (*)())IDSServiceFunction;
  return result;
}

id IDSServiceFunction()
{
  return (id)classIDSService;
}

void *__IDSLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/IDS.framework/IDS", 2);
  IDSLibrary_sLib = (uint64_t)result;
  return result;
}

const char *SFBLEPayloadTypeToString(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0x12) {
    return "?";
  }
  else {
    return off_1E5BBF410[a1 + 1];
  }
}

const char *SFScanRateToString(uint64_t a1)
{
  if (a1 > 19)
  {
    if (a1 > 39)
    {
      if (a1 == 40) {
        return "High";
      }
      if (a1 == 50) {
        return "Aggressive";
      }
    }
    else
    {
      if (a1 == 20) {
        return "Normal";
      }
      if (a1 == 30) {
        return "HighNormal";
      }
    }
    return "?";
  }
  else
  {
    Class result = "Invalid";
    switch(a1)
    {
      case 0:
        return result;
      case 1:
        Class result = "BackgroundOld";
        break;
      case 2:
        Class result = "NormalOld";
        break;
      case 3:
        Class result = "HighOld";
        break;
      case 4:
        Class result = "AggressiveOld";
        break;
      case 10:
        Class result = "Background";
        break;
      default:
        return "?";
    }
  }
  return result;
}

void _btSessionEventHandler(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  dispatch_assert_queue_V2(*((dispatch_queue_t *)v6 + 38));
  switch(a2)
  {
    case 0:
      int v7 = **((_DWORD **)v6 + 18);
      if (v7 <= 30 && (v7 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      *((void *)v6 + 2) = a1;
      goto LABEL_35;
    case 1:
      int v9 = **((_DWORD **)v6 + 18);
      if (v9 > 30 || v9 == -1 && !_LogCategory_Initialize()) {
        goto LABEL_34;
      }
      goto LABEL_33;
    case 2:
      uint64_t v10 = *((void *)v6 + 18);
      int v11 = *(_DWORD *)v10;
      if (!*((void *)v6 + 2))
      {
        if (v11 > 60 || v11 == -1 && !_LogCategory_Initialize()) {
          goto LABEL_34;
        }
LABEL_33:
        LogPrintF();
LABEL_34:
        CFRelease(v6);
        goto LABEL_35;
      }
      if (v11 <= 60)
      {
        if (v11 != -1 || (int v13 = _LogCategory_Initialize(), v10 = *((void *)v6 + 18), v13))
        {
          LogPrintF();
          uint64_t v10 = *((void *)v6 + 18);
        }
      }
      *((void *)v6 + 2) = 0;
      __int16 v15 = _btSessionEventHandler;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, void *))softLinkBTSessionAttachWithQueue[0])(*(void *)(v10 + 24), (uint64_t)&v15, (uint64_t)v6, *((void **)v6 + 38)))
      {
        int v14 = **((_DWORD **)v6 + 18);
        if (v14 > 60 || v14 == -1 && !_LogCategory_Initialize()) {
          goto LABEL_34;
        }
        goto LABEL_33;
      }
LABEL_35:

      return;
    case 3:
      int v12 = **((_DWORD **)v6 + 18);
      if (v12 <= 60 && (v12 != -1 || _LogCategory_Initialize())) {
        goto LABEL_17;
      }
      goto LABEL_35;
    default:
      int v8 = **((_DWORD **)v6 + 18);
      if (v8 <= 40 && (v8 != -1 || _LogCategory_Initialize())) {
LABEL_17:
      }
        LogPrintF();
      goto LABEL_35;
  }
}

uint64_t BluetoothProductIDSupportsOBCState(uint64_t a1)
{
  if (a1 >> 1 == 4103) {
    return 1;
  }
  int v2 = [[SFHeadphoneProduct alloc] initWithProductID:a1];
  uint64_t v3 = [(SFHeadphoneProduct *)v2 supportsOptimizedBatteryCharging];

  return v3;
}

Class initCBCentralManager_0()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  Class result = objc_getClass("CBCentralManager");
  classCBCentralManager_0 = (uint64_t)result;
  getCBCentralManagerClass_0[0] = (uint64_t (*)())CBCentralManagerFunction_0;
  return result;
}

id CBCentralManagerFunction_0()
{
  return (id)classCBCentralManager_0;
}

void *__CoreBluetoothLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth", 2);
  CoreBluetoothLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initCBUUID()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  Class result = objc_getClass("CBUUID");
  classCBUUID = (uint64_t)result;
  getCBUUIDClass[0] = (uint64_t (*)())CBUUIDFunction;
  return result;
}

id CBUUIDFunction()
{
  return (id)classCBUUID;
}

id initValCBCentralManagerScanOptionActive()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBCentralManagerScanOptionActive");
  if (v0) {
    objc_storeStrong((id *)&constantValCBCentralManagerScanOptionActive, *v0);
  }
  getCBCentralManagerScanOptionActive[0] = (uint64_t (*)())CBCentralManagerScanOptionActiveFunction;
  uint64_t v1 = (void *)constantValCBCentralManagerScanOptionActive;

  return v1;
}

id CBCentralManagerScanOptionActiveFunction()
{
  return (id)constantValCBCentralManagerScanOptionActive;
}

id initValCBCentralManagerScanOptionAllowDuplicatesKey()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBCentralManagerScanOptionAllowDuplicatesKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCBCentralManagerScanOptionAllowDuplicatesKey, *v0);
  }
  getCBCentralManagerScanOptionAllowDuplicatesKey[0] = (uint64_t (*)())CBCentralManagerScanOptionAllowDuplicatesKeyFunction;
  uint64_t v1 = (void *)constantValCBCentralManagerScanOptionAllowDuplicatesKey;

  return v1;
}

id CBCentralManagerScanOptionAllowDuplicatesKeyFunction()
{
  return (id)constantValCBCentralManagerScanOptionAllowDuplicatesKey;
}

id initValCBCentralManagerScanOptionIsPrivilegedDaemonKey()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBCentralManagerScanOptionIsPrivilegedDaemonKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCBCentralManagerScanOptionIsPrivilegedDaemonKey, *v0);
  }
  getCBCentralManagerScanOptionIsPrivilegedDaemonKey[0] = (uint64_t (*)())CBCentralManagerScanOptionIsPrivilegedDaemonKeyFunction;
  uint64_t v1 = (void *)constantValCBCentralManagerScanOptionIsPrivilegedDaemonKey;

  return v1;
}

id CBCentralManagerScanOptionIsPrivilegedDaemonKeyFunction()
{
  return (id)constantValCBCentralManagerScanOptionIsPrivilegedDaemonKey;
}

id initValCBCentralManagerScanOptionScanInterval()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBCentralManagerScanOptionScanInterval");
  if (v0) {
    objc_storeStrong((id *)&constantValCBCentralManagerScanOptionScanInterval, *v0);
  }
  getCBCentralManagerScanOptionScanInterval[0] = (uint64_t (*)())CBCentralManagerScanOptionScanIntervalFunction;
  uint64_t v1 = (void *)constantValCBCentralManagerScanOptionScanInterval;

  return v1;
}

id CBCentralManagerScanOptionScanIntervalFunction()
{
  return (id)constantValCBCentralManagerScanOptionScanInterval;
}

id initValCBCentralManagerScanOptionScanWindow()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBCentralManagerScanOptionScanWindow");
  if (v0) {
    objc_storeStrong((id *)&constantValCBCentralManagerScanOptionScanWindow, *v0);
  }
  getCBCentralManagerScanOptionScanWindow[0] = (uint64_t (*)())CBCentralManagerScanOptionScanWindowFunction;
  uint64_t v1 = (void *)constantValCBCentralManagerScanOptionScanWindow;

  return v1;
}

id CBCentralManagerScanOptionScanWindowFunction()
{
  return (id)constantValCBCentralManagerScanOptionScanWindow;
}

id initValCBAdvertisementDataChannel()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBAdvertisementDataChannel");
  if (v0) {
    objc_storeStrong((id *)&constantValCBAdvertisementDataChannel, *v0);
  }
  getCBAdvertisementDataChannel[0] = (uint64_t (*)())CBAdvertisementDataChannelFunction;
  uint64_t v1 = (void *)constantValCBAdvertisementDataChannel;

  return v1;
}

id CBAdvertisementDataChannelFunction()
{
  return (id)constantValCBAdvertisementDataChannel;
}

id initValCBAdvertisementDataDeviceAddress()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBAdvertisementDataDeviceAddress");
  if (v0) {
    objc_storeStrong((id *)&constantValCBAdvertisementDataDeviceAddress, *v0);
  }
  getCBAdvertisementDataDeviceAddress[0] = (uint64_t (*)())CBAdvertisementDataDeviceAddressFunction;
  uint64_t v1 = (void *)constantValCBAdvertisementDataDeviceAddress;

  return v1;
}

id CBAdvertisementDataDeviceAddressFunction()
{
  return (id)constantValCBAdvertisementDataDeviceAddress;
}

id initValCBAdvertisementDataManufacturerDataKey()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBAdvertisementDataManufacturerDataKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCBAdvertisementDataManufacturerDataKey, *v0);
  }
  getCBAdvertisementDataManufacturerDataKey[0] = (uint64_t (*)())CBAdvertisementDataManufacturerDataKeyFunction;
  uint64_t v1 = (void *)constantValCBAdvertisementDataManufacturerDataKey;

  return v1;
}

id CBAdvertisementDataManufacturerDataKeyFunction()
{
  return (id)constantValCBAdvertisementDataManufacturerDataKey;
}

id initValCBAdvertisementDataServiceDataKey()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBAdvertisementDataServiceDataKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCBAdvertisementDataServiceDataKey, *v0);
  }
  getCBAdvertisementDataServiceDataKey = (uint64_t (*)())CBAdvertisementDataServiceDataKeyFunction;
  uint64_t v1 = (void *)constantValCBAdvertisementDataServiceDataKey;

  return v1;
}

id CBAdvertisementDataServiceDataKeyFunction()
{
  return (id)constantValCBAdvertisementDataServiceDataKey;
}

id initValCBAdvertisementDataLocalNameKey()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBAdvertisementDataLocalNameKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCBAdvertisementDataLocalNameKey, *v0);
  }
  getCBAdvertisementDataLocalNameKey[0] = (uint64_t (*)())CBAdvertisementDataLocalNameKeyFunction;
  uint64_t v1 = (void *)constantValCBAdvertisementDataLocalNameKey;

  return v1;
}

id CBAdvertisementDataLocalNameKeyFunction()
{
  return (id)constantValCBAdvertisementDataLocalNameKey;
}

id initValCBAdvertisementDataSaturated()
{
  if (CoreBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreBluetoothLibrary_sOnce_0, &__block_literal_global_985);
  }
  uint64_t v0 = (id *)dlsym((void *)CoreBluetoothLibrary_sLib_0, "CBAdvertisementDataSaturated");
  if (v0) {
    objc_storeStrong((id *)&constantValCBAdvertisementDataSaturated, *v0);
  }
  getCBAdvertisementDataSaturated[0] = (uint64_t (*)())CBAdvertisementDataSaturatedFunction;
  uint64_t v1 = (void *)constantValCBAdvertisementDataSaturated;

  return v1;
}

id CBAdvertisementDataSaturatedFunction()
{
  return (id)constantValCBAdvertisementDataSaturated;
}

Class initWatchSetupAdvertisementIdentifier()
{
  if (NanoRegistryLibrary_sOnce != -1) {
    dispatch_once(&NanoRegistryLibrary_sOnce, &__block_literal_global_1124);
  }
  Class result = objc_getClass("WatchSetupAdvertisementIdentifier");
  classWatchSetupAdvertisementIdentifier = (uint64_t)result;
  getWatchSetupAdvertisementIdentifierClass = (uint64_t (*)())WatchSetupAdvertisementIdentifierFunction;
  return result;
}

id WatchSetupAdvertisementIdentifierFunction()
{
  return (id)classWatchSetupAdvertisementIdentifier;
}

void *__NanoRegistryLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry", 2);
  NanoRegistryLibrary_sLib = (uint64_t)result;
  return result;
}

Class initWatchSetupExtendedMetadata()
{
  if (NanoRegistryLibrary_sOnce != -1) {
    dispatch_once(&NanoRegistryLibrary_sOnce, &__block_literal_global_1124);
  }
  Class result = objc_getClass("WatchSetupExtendedMetadata");
  classWatchSetupExtendedMetadata = (uint64_t)result;
  getWatchSetupExtendedMetadataClass = (uint64_t (*)())WatchSetupExtendedMetadataFunction;
  return result;
}

id WatchSetupExtendedMetadataFunction()
{
  return (id)classWatchSetupExtendedMetadata;
}

uint64_t initBTSessionAttachWithQueue(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = MobileBluetoothLibrary_sOnce;
  id v8 = a4;
  if (v7 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  softLinkBTSessionAttachWithQueue[0] = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTSessionAttachWithQueue");
  uint64_t v9 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, id))softLinkBTSessionAttachWithQueue[0])(a1, a2, a3, v8);

  return v9;
}

void *__MobileBluetoothLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/MobileBluetooth.framework/MobileBluetooth", 2);
  MobileBluetoothLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initBTSessionDetachWithQueue(uint64_t a1)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  int v2 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTSessionDetachWithQueue");
  softLinkBTSessionDetachWithQueue[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

id initValWPNearbyKeyRSSI()
{
  if (WirelessProximityLibrary_sOnce_1 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_1, &__block_literal_global_1141);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_1, "WPNearbyKeyRSSI");
  if (v0) {
    objc_storeStrong((id *)&constantValWPNearbyKeyRSSI, *v0);
  }
  getWPNearbyKeyRSSI[0] = (uint64_t (*)())WPNearbyKeyRSSIFunction;
  uint64_t v1 = (void *)constantValWPNearbyKeyRSSI;

  return v1;
}

void *__WirelessProximityLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity", 2);
  WirelessProximityLibrary_sLib_1 = (uint64_t)result;
  return result;
}

id initValWPNearbyKeyManufacturerData()
{
  if (WirelessProximityLibrary_sOnce_1 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_1, &__block_literal_global_1141);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_1, "WPNearbyKeyManufacturerData");
  if (v0) {
    objc_storeStrong((id *)&constantValWPNearbyKeyManufacturerData, *v0);
  }
  getWPNearbyKeyManufacturerData[0] = (uint64_t (*)())WPNearbyKeyManufacturerDataFunction;
  uint64_t v1 = (void *)constantValWPNearbyKeyManufacturerData;

  return v1;
}

id initValWPNearbyKeyDeviceAddress()
{
  if (WirelessProximityLibrary_sOnce_1 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_1, &__block_literal_global_1141);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_1, "WPNearbyKeyDeviceAddress");
  if (v0) {
    objc_storeStrong((id *)&constantValWPNearbyKeyDeviceAddress, *v0);
  }
  getWPNearbyKeyDeviceAddress[0] = (uint64_t (*)())WPNearbyKeyDeviceAddressFunction;
  uint64_t v1 = (void *)constantValWPNearbyKeyDeviceAddress;

  return v1;
}

id initValWPNearbyKeyPaired()
{
  if (WirelessProximityLibrary_sOnce_1 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_1, &__block_literal_global_1141);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_1, "WPNearbyKeyPaired");
  if (v0) {
    objc_storeStrong((id *)&constantValWPNearbyKeyPaired, *v0);
  }
  getWPNearbyKeyPaired[0] = (uint64_t (*)())WPNearbyKeyPairedFunction;
  uint64_t v1 = (void *)constantValWPNearbyKeyPaired;

  return v1;
}

id initValWPPairingKeyAdvertisingChannel()
{
  if (WirelessProximityLibrary_sOnce_1 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_1, &__block_literal_global_1141);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_1, "WPPairingKeyAdvertisingChannel");
  if (v0) {
    objc_storeStrong((id *)&constantValWPPairingKeyAdvertisingChannel, *v0);
  }
  getWPPairingKeyAdvertisingChannel[0] = (uint64_t (*)())WPPairingKeyAdvertisingChannelFunction;
  uint64_t v1 = (void *)constantValWPPairingKeyAdvertisingChannel;

  return v1;
}

id WPPairingKeyAdvertisingChannelFunction()
{
  return (id)constantValWPPairingKeyAdvertisingChannel;
}

id initValWPPairingKeyDeviceAddress()
{
  if (WirelessProximityLibrary_sOnce_1 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_1, &__block_literal_global_1141);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_1, "WPPairingKeyDeviceAddress");
  if (v0) {
    objc_storeStrong((id *)&constantValWPPairingKeyDeviceAddress, *v0);
  }
  getWPPairingKeyDeviceAddress[0] = (uint64_t (*)())WPPairingKeyDeviceAddressFunction;
  uint64_t v1 = (void *)constantValWPPairingKeyDeviceAddress;

  return v1;
}

id WPPairingKeyDeviceAddressFunction()
{
  return (id)constantValWPPairingKeyDeviceAddress;
}

id initValWPPairingKeyAccessoryStatusDecrypted()
{
  if (WirelessProximityLibrary_sOnce_1 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_1, &__block_literal_global_1141);
  }
  uint64_t v0 = (id *)dlsym((void *)WirelessProximityLibrary_sLib_1, "WPPairingKeyAccessoryStatusDecrypted");
  if (v0) {
    objc_storeStrong((id *)&constantValWPPairingKeyAccessoryStatusDecrypted, *v0);
  }
  getWPPairingKeyAccessoryStatusDecrypted[0] = (uint64_t (*)())WPPairingKeyAccessoryStatusDecryptedFunction;
  uint64_t v1 = (void *)constantValWPPairingKeyAccessoryStatusDecrypted;

  return v1;
}

id WPPairingKeyAccessoryStatusDecryptedFunction()
{
  return (id)constantValWPPairingKeyAccessoryStatusDecrypted;
}

uint64_t initBTDeviceFromIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTDeviceFromIdentifier");
  softLinkBTDeviceFromIdentifier = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initBTDeviceGetName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTDeviceGetName");
  softLinkBTDeviceGetName[0] = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initBTDeviceGetPairingStatus(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  BOOL v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTDeviceGetPairingStatus");
  softLinkBTDeviceGetPairingStatus[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTDeviceIsTemporaryPaired(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  BOOL v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTDeviceIsTemporaryPaired");
  softLinkBTDeviceIsTemporaryPaired[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTDeviceGetConnectedServices(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  BOOL v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTDeviceGetConnectedServices");
  softLinkBTDeviceGetConnectedServices[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTDeviceGetAddressString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTDeviceGetAddressString");
  softLinkBTDeviceGetAddressString[0] = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initBTDeviceAddressFromString(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce, &__block_literal_global_1129);
  }
  BOOL v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib, "BTDeviceAddressFromString");
  softLinkBTDeviceAddressFromString[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

id getFPItemManagerClass()
{
  uint64_t v4 = 0;
  BOOL v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getFPItemManagerClass_softClass;
  uint64_t v7 = getFPItemManagerClass_softClass;
  if (!getFPItemManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getFPItemManagerClass_block_invoke;
    v3[3] = &unk_1E5BBBFF8;
    v3[4] = &v4;
    __getFPItemManagerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A5434F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SharedWithYouCoreLibrary()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v2[0] = 0;
  if (!SharedWithYouCoreLibraryCore_frameworkLibrary)
  {
    v2[1] = (void *)MEMORY[0x1E4F143A8];
    v2[2] = (void *)3221225472;
    v2[3] = __SharedWithYouCoreLibraryCore_block_invoke;
    v2[4] = &__block_descriptor_40_e5_v8__0l;
    v2[5] = v2;
    long long v3 = xmmword_1E5BBFB98;
    uint64_t v4 = 0;
    SharedWithYouCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = SharedWithYouCoreLibraryCore_frameworkLibrary;
  if (!SharedWithYouCoreLibraryCore_frameworkLibrary) {
    SharedWithYouCoreLibrary_cold_1(v2);
  }
  if (v2[0]) {
    free(v2[0]);
  }
  return v0;
}

void sub_1A54353AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id get_CKCloudKitPreShareType()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void **)get_CKCloudKitPreShareTypeSymbolLoc_ptr;
  uint64_t v7 = get_CKCloudKitPreShareTypeSymbolLoc_ptr;
  if (!get_CKCloudKitPreShareTypeSymbolLoc_ptr)
  {
    id v1 = (void *)CloudKitLibrary_0();
    v5[3] = (uint64_t)dlsym(v1, "_CKCloudKitPreShareType");
    get_CKCloudKitPreShareTypeSymbolLoc_ptr = v5[3];
    uint64_t v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    get_CKCloudKitPreShareType_cold_1();
  }
  uint64_t v2 = *v0;

  return v2;
}

void sub_1A543581C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id get_CKCloudKitPostShareType()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void **)get_CKCloudKitPostShareTypeSymbolLoc_ptr;
  uint64_t v7 = get_CKCloudKitPostShareTypeSymbolLoc_ptr;
  if (!get_CKCloudKitPostShareTypeSymbolLoc_ptr)
  {
    id v1 = (void *)CloudKitLibrary_0();
    v5[3] = (uint64_t)dlsym(v1, "_CKCloudKitPostShareType");
    get_CKCloudKitPostShareTypeSymbolLoc_ptr = v5[3];
    uint64_t v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    get_CKCloudKitPostShareType_cold_1();
  }
  uint64_t v2 = *v0;

  return v2;
}

void sub_1A5435924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A5435C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t soft_CKSharingAccessTypeFromOptionsGroups(void *a1)
{
  id v1 = a1;
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v2 = (uint64_t (*)(id))getCKSharingAccessTypeFromOptionsGroupsSymbolLoc_ptr;
  uint64_t v9 = getCKSharingAccessTypeFromOptionsGroupsSymbolLoc_ptr;
  if (!getCKSharingAccessTypeFromOptionsGroupsSymbolLoc_ptr)
  {
    long long v3 = (void *)CloudKitLibrary_0();
    v7[3] = (uint64_t)dlsym(v3, "CKSharingAccessTypeFromOptionsGroups");
    getCKSharingAccessTypeFromOptionsGroupsSymbolLoc_ptr = (_UNKNOWN *)v7[3];
    uint64_t v2 = (uint64_t (*)(id))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (!v2) {
    soft_CKSharingAccessTypeFromOptionsGroups_cold_1();
  }
  uint64_t v4 = v2(v1);

  return v4;
}

void sub_1A5435D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCKAllowedSharingOptionsClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCKAllowedSharingOptionsClass_softClass;
  uint64_t v7 = getCKAllowedSharingOptionsClass_softClass;
  if (!getCKAllowedSharingOptionsClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCKAllowedSharingOptionsClass_block_invoke;
    v3[3] = &unk_1E5BBBFF8;
    v3[4] = &v4;
    __getCKAllowedSharingOptionsClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A54360B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCloudSharingClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCloudSharingClass_softClass;
  uint64_t v7 = getCloudSharingClass_softClass;
  if (!getCloudSharingClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCloudSharingClass_block_invoke;
    v3[3] = &unk_1E5BBBFF8;
    v3[4] = &v4;
    __getCloudSharingClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A5436288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCKPostSharingContextClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCKPostSharingContextClass_softClass;
  uint64_t v7 = getCKPostSharingContextClass_softClass;
  if (!getCKPostSharingContextClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCKPostSharingContextClass_block_invoke;
    v3[3] = &unk_1E5BBBFF8;
    v3[4] = &v4;
    __getCKPostSharingContextClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A54369C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCKPreSharingContextClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCKPreSharingContextClass_softClass;
  uint64_t v7 = getCKPreSharingContextClass_softClass;
  if (!getCKPreSharingContextClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCKPreSharingContextClass_block_invoke;
    v3[3] = &unk_1E5BBBFF8;
    v3[4] = &v4;
    __getCKPreSharingContextClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A5436BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54372EC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1A54374BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54377B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void sub_1A5437F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id getCKShareTitleKey()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void **)getCKShareTitleKeySymbolLoc_ptr;
  uint64_t v7 = getCKShareTitleKeySymbolLoc_ptr;
  if (!getCKShareTitleKeySymbolLoc_ptr)
  {
    uint64_t v1 = (void *)CloudKitLibrary_0();
    v5[3] = (uint64_t)dlsym(v1, "CKShareTitleKey");
    getCKShareTitleKeySymbolLoc_ptr = v5[3];
    uint64_t v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    getCKShareTitleKey_cold_1();
  }
  uint64_t v2 = *v0;

  return v2;
}

void sub_1A54380BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54385F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A543915C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A5439798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A543A20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id get_SWPendingCollaborationTypeIdentifier()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void **)get_SWPendingCollaborationTypeIdentifierSymbolLoc_ptr;
  uint64_t v7 = get_SWPendingCollaborationTypeIdentifierSymbolLoc_ptr;
  if (!get_SWPendingCollaborationTypeIdentifierSymbolLoc_ptr)
  {
    uint64_t v1 = (void *)SharedWithYouCoreLibrary();
    v5[3] = (uint64_t)dlsym(v1, "_SWPendingCollaborationTypeIdentifier");
    get_SWPendingCollaborationTypeIdentifierSymbolLoc_ptr = v5[3];
    uint64_t v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    get_SWPendingCollaborationTypeIdentifier_cold_1();
  }
  uint64_t v2 = *v0;

  return v2;
}

void sub_1A543A36C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getUTCollaborationOptionsTypeIdentifier()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void **)getUTCollaborationOptionsTypeIdentifierSymbolLoc_ptr;
  uint64_t v7 = getUTCollaborationOptionsTypeIdentifierSymbolLoc_ptr;
  if (!getUTCollaborationOptionsTypeIdentifierSymbolLoc_ptr)
  {
    uint64_t v1 = (void *)SharedWithYouCoreLibrary();
    v5[3] = (uint64_t)dlsym(v1, "UTCollaborationOptionsTypeIdentifier");
    getUTCollaborationOptionsTypeIdentifierSymbolLoc_ptr = v5[3];
    uint64_t v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    getUTCollaborationOptionsTypeIdentifier_cold_1();
  }
  uint64_t v2 = *v0;

  return v2;
}

void sub_1A543A728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A543B8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A543BCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A543C468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A543C708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id getCKErrorDomain()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void **)getCKErrorDomainSymbolLoc_ptr;
  uint64_t v7 = getCKErrorDomainSymbolLoc_ptr;
  if (!getCKErrorDomainSymbolLoc_ptr)
  {
    uint64_t v1 = (void *)CloudKitLibrary_0();
    v5[3] = (uint64_t)dlsym(v1, "CKErrorDomain");
    getCKErrorDomainSymbolLoc_ptr = v5[3];
    uint64_t v0 = (void **)v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0) {
    getCKErrorDomain_cold_1();
  }
  uint64_t v2 = *v0;

  return v2;
}

void sub_1A543C940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A543FEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getFPItemManagerClass_block_invoke(uint64_t a1)
{
  FileProviderLibrary();
  Class result = objc_getClass("FPItemManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getFPItemManagerClass_block_invoke_cold_1();
  }
  getFPItemManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void FileProviderLibrary()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v0[0] = 0;
  if (!FileProviderLibraryCore_frameworkLibrary)
  {
    v0[1] = (void *)MEMORY[0x1E4F143A8];
    v0[2] = (void *)3221225472;
    v0[3] = __FileProviderLibraryCore_block_invoke;
    v0[4] = &__block_descriptor_40_e5_v8__0l;
    v0[5] = v0;
    long long v1 = xmmword_1E5BBFB80;
    uint64_t v2 = 0;
    FileProviderLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!FileProviderLibraryCore_frameworkLibrary) {
    FileProviderLibrary_cold_1(v0);
  }
  if (v0[0]) {
    free(v0[0]);
  }
}

uint64_t __FileProviderLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  FileProviderLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __SharedWithYouCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SharedWithYouCoreLibraryCore_frameworkLibrary = result;
  return result;
}

void initSWCollaborationMetadataForDocumentURL(void *a1, void *a2)
{
  id v3 = a2;
  id v5 = a1;
  uint64_t v4 = (void *)SharedWithYouCoreLibrary();
  softLinkSWCollaborationMetadataForDocumentURL[0] = (uint64_t (*)())dlsym(v4, "SWCollaborationMetadataForDocumentURL");
  ((void (*)(id, id))softLinkSWCollaborationMetadataForDocumentURL[0])(v5, v3);
}

uint64_t CloudKitLibrary_0()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  v2[0] = 0;
  if (!CloudKitLibraryCore_frameworkLibrary_0)
  {
    v2[1] = (void *)MEMORY[0x1E4F143A8];
    v2[2] = (void *)3221225472;
    v2[3] = __CloudKitLibraryCore_block_invoke_0;
    v2[4] = &__block_descriptor_40_e5_v8__0l;
    v2[5] = v2;
    long long v3 = xmmword_1E5BBFBB0;
    uint64_t v4 = 0;
    CloudKitLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  }
  uint64_t v0 = CloudKitLibraryCore_frameworkLibrary_0;
  if (!CloudKitLibraryCore_frameworkLibrary_0) {
    CloudKitLibrary_cold_1_0(v2);
  }
  if (v2[0]) {
    free(v2[0]);
  }
  return v0;
}

uint64_t __CloudKitLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  CloudKitLibraryCore_frameworkLibrary_0 = result;
  return result;
}

void *__getCKSharingAccessTypeFromOptionsGroupsSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  uint64_t result = dlsym(v2, "CKSharingAccessTypeFromOptionsGroups");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKSharingAccessTypeFromOptionsGroupsSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCKSharingPermissionTypeFromOptionsGroupsSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  uint64_t result = dlsym(v2, "CKSharingPermissionTypeFromOptionsGroups");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKSharingPermissionTypeFromOptionsGroupsSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                          + 24);
  return result;
}

void *__getCKSharingAllowOthersToInviteFromOptionsGroupsSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  uint64_t result = dlsym(v2, "CKSharingAllowOthersToInviteFromOptionsGroups");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKSharingAllowOthersToInviteFromOptionsGroupsSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                               + 24);
  return result;
}

Class __getCKAllowedSharingOptionsClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary_0();
  Class result = objc_getClass("CKAllowedSharingOptions");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKAllowedSharingOptionsClass_block_invoke_cold_1();
  }
  getCKAllowedSharingOptionsClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCloudSharingClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!CloudSharingLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __CloudSharingLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5BBFBC8;
    uint64_t v5 = 0;
    CloudSharingLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!CloudSharingLibraryCore_frameworkLibrary) {
    __getCloudSharingClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("CloudSharing");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCloudSharingClass_block_invoke_cold_2();
  }
  getCloudSharingClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CloudSharingLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CloudSharingLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getCKPostSharingContextClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary_0();
  Class result = objc_getClass("CKPostSharingContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKPostSharingContextClass_block_invoke_cold_1();
  }
  getCKPostSharingContextClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKPreSharingContextClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary_0();
  Class result = objc_getClass("CKPreSharingContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKPreSharingContextClass_block_invoke_cold_1();
  }
  getCKPreSharingContextClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKContainerSetupInfoClass_block_invoke_0(uint64_t a1)
{
  CloudKitLibrary_0();
  Class result = objc_getClass("CKContainerSetupInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKContainerSetupInfoClass_block_invoke_cold_1_0();
  }
  getCKContainerSetupInfoClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getLPiCloudSharingMetadataClass_block_invoke(uint64_t a1)
{
  LinkPresentationLibrary();
  Class result = objc_getClass("LPiCloudSharingMetadata");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getLPiCloudSharingMetadataClass_block_invoke_cold_1();
  }
  getLPiCloudSharingMetadataClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void LinkPresentationLibrary()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v0[0] = 0;
  if (!LinkPresentationLibraryCore_frameworkLibrary)
  {
    v0[1] = (void *)MEMORY[0x1E4F143A8];
    v0[2] = (void *)3221225472;
    v0[3] = __LinkPresentationLibraryCore_block_invoke;
    v0[4] = &__block_descriptor_40_e5_v8__0l;
    v0[5] = v0;
    long long v1 = xmmword_1E5BBFBE0;
    uint64_t v2 = 0;
    LinkPresentationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!LinkPresentationLibraryCore_frameworkLibrary) {
    LinkPresentationLibrary_cold_1(v0);
  }
  if (v0[0]) {
    free(v0[0]);
  }
}

uint64_t __LinkPresentationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  LinkPresentationLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getCKShareTitleKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  uint64_t result = dlsym(v2, "CKShareTitleKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKShareTitleKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCKShareThumbnailImageDataKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  uint64_t result = dlsym(v2, "CKShareThumbnailImageDataKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKShareThumbnailImageDataKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getLPImageClass_block_invoke(uint64_t a1)
{
  LinkPresentationLibrary();
  Class result = objc_getClass("LPImage");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getLPImageClass_block_invoke_cold_1();
  }
  getLPImageClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getLPSharedObjectMetadataClass_block_invoke(uint64_t a1)
{
  LinkPresentationLibrary();
  Class result = objc_getClass("LPSharedObjectMetadata");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getLPSharedObjectMetadataClass_block_invoke_cold_1();
  }
  getLPSharedObjectMetadataClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getLPLinkMetadataClass_block_invoke(uint64_t a1)
{
  LinkPresentationLibrary();
  Class result = objc_getClass("LPLinkMetadata");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getLPLinkMetadataClass_block_invoke_cold_1();
  }
  getLPLinkMetadataClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getFPProviderDomainClass_block_invoke(uint64_t a1)
{
  FileProviderLibrary();
  Class result = objc_getClass("FPProviderDomain");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getFPProviderDomainClass_block_invoke_cold_1();
  }
  getFPProviderDomainClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void initSWPerformActionForDocumentURL(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v8 = a1;
  uint64_t v7 = (void *)SharedWithYouCoreLibrary();
  softLinkSWPerformActionForDocumentURL[0] = (uint64_t (*)())dlsym(v7, "SWPerformActionForDocumentURL");
  ((void (*)(id, id, id))softLinkSWPerformActionForDocumentURL[0])(v8, v6, v5);
}

void *__getSWCopyRepresentationTypeIdentifierSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)SharedWithYouCoreLibrary();
  Class result = dlsym(v2, "SWCopyRepresentationTypeIdentifier");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getSWCopyRepresentationTypeIdentifierSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getUTCopyRepresentationTypeIdentifierSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)SharedWithYouCoreLibrary();
  Class result = dlsym(v2, "UTCopyRepresentationTypeIdentifier");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getUTCopyRepresentationTypeIdentifierSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getUTCollaborationOptionsTypeIdentifierSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)SharedWithYouCoreLibrary();
  Class result = dlsym(v2, "UTCollaborationOptionsTypeIdentifier");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getUTCollaborationOptionsTypeIdentifierSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCKShareTypeKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  Class result = dlsym(v2, "CKShareTypeKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKShareTypeKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCKErrorDomainSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  Class result = dlsym(v2, "CKErrorDomain");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKErrorDomainSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCKRecordChangedErrorServerRecordKeySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CloudKitLibrary_0();
  Class result = dlsym(v2, "CKRecordChangedErrorServerRecordKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKRecordChangedErrorServerRecordKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_4_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_9(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&a9, 8) = a1;
}

void _btSessionEventHandler_0(uint64_t a1, int a2, int a3, void *a4)
{
  id v8 = (void *)MEMORY[0x1A626C260]();
  uint64_t v9 = a4;
  dispatch_assert_queue_V2(*((dispatch_queue_t *)v9 + 23));
  switch(a2)
  {
    case 0:
      int v10 = **((_DWORD **)v9 + 17);
      if (v10 <= 30 && (v10 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      *((void *)v9 + 10) = a1;
      v9[89] = 0;
      if (v9[90]) {
        [v9 _btEnsureStarted];
      }
      else {
        [v9 _btEnsureStopped];
      }
      goto LABEL_38;
    case 1:
      int v12 = **((_DWORD **)v9 + 17);
      if (v12 <= 30 && (v12 != -1 || _LogCategory_Initialize()))
      {
        uint64_t v17 = (a3 + 310000);
        LogPrintF();
      }
      *((void *)v9 + 10) = 0;
      v9[89] = 0;
      objc_msgSend(v9, "_btEnsureStopped", v17);
      if (!v9[96] || v9[91]) {
        goto LABEL_37;
      }
      int v15 = **((_DWORD **)v9 + 17);
      if (v15 <= 30 && (v15 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      v9[96] = 0;
      [v9 _btEnsureStopped];
      goto LABEL_36;
    case 2:
      int v13 = **((_DWORD **)v9 + 17);
      if (v13 <= 60 && (v13 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      *((void *)v9 + 10) = 0;
      v9[89] = 0;
      int v16 = v9[90];
      [v9 _btEnsureStopped];
      if (v16) {
LABEL_36:
      }
        [v9 _btEnsureStarted];
LABEL_37:
      CFRelease(v9);
      goto LABEL_38;
    case 3:
      int v14 = **((_DWORD **)v9 + 17);
      if (v14 <= 60 && (v14 != -1 || _LogCategory_Initialize())) {
        goto LABEL_16;
      }
      goto LABEL_38;
    default:
      int v11 = **((_DWORD **)v9 + 17);
      if (v11 <= 40 && (v11 != -1 || _LogCategory_Initialize())) {
LABEL_16:
      }
        LogPrintF();
LABEL_38:

      return;
  }
}

void _btServiceEventHandler(uint64_t a1, _OWORD *a2, int a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  int v12 = (void *)MEMORY[0x1A626C260]();
  int v13 = a6;
  dispatch_assert_queue_V2(*((dispatch_queue_t *)v13 + 23));
  if (!*((unsigned char *)v13 + 88)) {
    goto LABEL_81;
  }
  if (a3 == 2)
  {
    int v15 = **((_DWORD **)v13 + 17);
    if (v15 > 30 || v15 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_81;
    }
    goto LABEL_16;
  }
  if (a3 == 1)
  {
    int v16 = **((_DWORD **)v13 + 17);
    if (v16 > 30 || v16 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_81;
    }
    goto LABEL_16;
  }
  if (a3)
  {
    int v17 = **((_DWORD **)v13 + 17);
    if (v17 > 30 || v17 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_81;
    }
LABEL_16:
    BTServiceSpecificEventToString(a4);
    goto LABEL_17;
  }
  int v14 = **((_DWORD **)v13 + 17);
  if (v14 <= 30 && (v14 != -1 || _LogCategory_Initialize()))
  {
    uint64_t v44 = BTServiceSpecificEventToString(a4);
    uint64_t v45 = (a5 + 310000);
    int v42 = (const char *)&unk_1A56EA6E8;
    uint64_t v43 = a4;
    unint64_t v41 = (unint64_t)a2;
    LogPrintF();
  }
  if (a4 != 11) {
    goto LABEL_81;
  }
  *(_OWORD *)__s1 = 0u;
  long long v54 = 0u;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))softLinkBTDeviceGetAddressString_0[0])(a1, (uint64_t)__s1, 32))
  {
    int v39 = **((_DWORD **)v13 + 17);
    if (v39 > 90 || v39 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_81;
    }
LABEL_17:
    LogPrintF();
    goto LABEL_81;
  }
  if (strcmp(__s1, (const char *)v13 + 8))
  {
    int v40 = **((_DWORD **)v13 + 17);
    if (v40 > 30 || v40 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_81;
    }
    goto LABEL_17;
  }
  if (!a5)
  {
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    if (!a1) {
      goto LABEL_75;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t))softLinkBTDeviceGetName_0[0])(a1, (uint64_t)v51, 248);
    if (LOBYTE(v51[0]))
    {
      uint64_t v19 = [NSString stringWithUTF8String:v51];
      id v20 = (void *)*((void *)v13 + 26);
      *((void *)v13 + 26) = v19;
    }
    uint64_t v50 = 0;
    int v49 = 0;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))softLinkBTDeviceGetDeviceId[0])(a1, (uint64_t)&v50 + 4, (uint64_t)&v50, (uint64_t)&v49, (uint64_t)(v13 + 40));
    uint64_t v48 = 0;
    int v21 = ((uint64_t (*)(uint64_t, uint64_t))softLinkBTAccessoryManagerGetDefault[0])(*((void *)v13 + 10), (uint64_t)&v48);
    if (v21)
    {
      int v22 = v21;
      int v23 = **((_DWORD **)v13 + 17);
      if (v23 <= 60 && (v23 != -1 || _LogCategory_Initialize()))
      {
        unint64_t v41 = (v22 + 310000);
        LogPrintF();
      }
    }
    if (!v48) {
      goto LABEL_75;
    }
    int v47 = 0;
    int v27 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkBTAccessoryManagerGetFeatureCapability[0])(v48, a1, 1, (uint64_t)&v47);
    if (v27)
    {
      int v28 = v27;
      int v29 = **((_DWORD **)v13 + 17);
      if (v29 <= 60 && (v29 != -1 || _LogCategory_Initialize()))
      {
        unint64_t v41 = (v28 + 310000);
        LogPrintF();
      }
      BOOL v30 = 0;
      int v47 = 0;
    }
    else
    {
      BOOL v30 = v47 != 0;
    }
    *((unsigned char *)v13 + 157) = v30;
    int v46 = 0;
    int v31 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkBTAccessoryManagerGetFeatureCapability[0])(v48, a1, 26, (uint64_t)&v46);
    if (v31)
    {
      int v32 = v31;
      int v33 = **((_DWORD **)v13 + 17);
      if (v33 <= 60 && (v33 != -1 || _LogCategory_Initialize()))
      {
        unint64_t v41 = (v32 + 310000);
        LogPrintF();
      }
      int v34 = 0;
      int v46 = 0;
    }
    else
    {
      int v34 = v46 != 0;
    }
    *((unsigned char *)v13 + 15_Block_object_dispose(&a9, 8) = v34;
    int v35 = **((_DWORD **)v13 + 17);
    if (v35 > 30) {
      goto LABEL_75;
    }
    if (v35 == -1)
    {
      if (!_LogCategory_Initialize())
      {
LABEL_75:
        int v38 = **((_DWORD **)v13 + 17);
        if (v38 <= 30 && (v38 != -1 || _LogCategory_Initialize()))
        {
          unint64_t v41 = (unint64_t)v51;
          int v42 = (const char *)v13[40];
          LogPrintF();
        }
        *((unsigned char *)v13 + 41) = 0;
        uint64_t v25 = v13;
        uint64_t v26 = 0;
        goto LABEL_80;
      }
      int v34 = *((unsigned __int8 *)v13 + 158);
    }
    if (*((unsigned char *)v13 + 157)) {
      __int16 v36 = "yes";
    }
    else {
      __int16 v36 = "no";
    }
    if (v34) {
      uint64_t v37 = "yes";
    }
    else {
      uint64_t v37 = "no";
    }
    unint64_t v41 = (unint64_t)v36;
    int v42 = v37;
    LogPrintF();
    goto LABEL_75;
  }
  if (*((unsigned char *)v13 + 153))
  {
    int v18 = **((_DWORD **)v13 + 17);
    if (v18 <= 60 && (v18 != -1 || _LogCategory_Initialize()))
    {
      unint64_t v41 = (a5 + 310000);
      LogPrintF();
    }
    *((unsigned char *)v13 + 41) = 0;
    uint64_t v25 = v13;
    uint64_t v26 = (a5 + 310000);
LABEL_80:
    objc_msgSend(v25, "_completed:", v26, v41, v42, v43, v44, v45);
    goto LABEL_81;
  }
  int v24 = **((_DWORD **)v13 + 17);
  if (v24 <= 60 && (v24 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if ((a5 - 151) <= 0xF && ((1 << (a5 + 105)) & 0x8081) != 0) {
    [v13 _btDeletePairingAndRetry];
  }
LABEL_81:
}

void _btPairingAgentStatusHandler(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = (void *)MEMORY[0x1A626C260]();
  id v8 = a5;
  dispatch_assert_queue_V2(*((dispatch_queue_t *)v8 + 23));
  switch(a2)
  {
    case 0:
      int v9 = **((_DWORD **)v8 + 17);
      if (v9 <= 30 && (v9 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      if (*((unsigned char *)v8 + 90))
      {
        *((unsigned char *)v8 + 72) = 1;
        [v8 _btEnsureStarted];
      }
      break;
    case 1:
      int v11 = **((_DWORD **)v8 + 17);
      if (v11 <= 30 && (v11 != -1 || _LogCategory_Initialize())) {
        goto LABEL_16;
      }
      break;
    case 2:
      int v12 = **((_DWORD **)v8 + 17);
      if (v12 <= 30 && (v12 != -1 || _LogCategory_Initialize())) {
        goto LABEL_16;
      }
      break;
    case 3:
      int v13 = **((_DWORD **)v8 + 17);
      if (v13 <= 30 && (v13 != -1 || _LogCategory_Initialize())) {
        goto LABEL_16;
      }
      break;
    default:
      int v10 = **((_DWORD **)v8 + 17);
      if (v10 <= 30 && (v10 != -1 || _LogCategory_Initialize())) {
LABEL_16:
      }
        LogPrintF();
      break;
  }
}

void _btPairingAgentUserConfirmationHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v8 = (void *)MEMORY[0x1A626C260]();
  id v9 = a5;
  uint64_t v15 = 0;
  uint64_t v14 = 0;
  memset(v16, 0, sizeof(v16));
  dispatch_assert_queue_V2(*((dispatch_queue_t *)v9 + 23));
  char __s1 = 0;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))softLinkBTDeviceGetAddressString_0[0])(a2, (uint64_t)&__s1, 32))
  {
    int v12 = **((_DWORD **)v9 + 17);
    if (v12 > 90 || v12 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_8;
    }
LABEL_14:
    LogPrintF();
    goto LABEL_8;
  }
  int v10 = strcmp(&__s1, (const char *)v9 + 8);
  int v11 = **((_DWORD **)v9 + 17);
  if (v10)
  {
    if (v11 > 30 || v11 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_8;
    }
    goto LABEL_14;
  }
  if (v11 <= 30 && (v11 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))softLinkBTPairingAgentAcceptSSP[0])(a1, a2, 0);
LABEL_8:
}

Class initWPClient()
{
  if (WirelessProximityLibrary_sOnce_2 != -1) {
    dispatch_once(&WirelessProximityLibrary_sOnce_2, &__block_literal_global_34);
  }
  Class result = objc_getClass("WPClient");
  classWPClient = (uint64_t)result;
  getWPClientClass[0] = (uint64_t (*)())WPClientFunction;
  return result;
}

id WPClientFunction()
{
  return (id)classWPClient;
}

void *__WirelessProximityLibrary_block_invoke_2()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity", 2);
  WirelessProximityLibrary_sLib_2 = (uint64_t)result;
  return result;
}

uint64_t initBTSessionAttachWithQueue_0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = MobileBluetoothLibrary_sOnce_0;
  id v8 = a4;
  if (v7 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  softLinkBTSessionAttachWithQueue_0[0] = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTSessionAttachWithQueue");
  uint64_t v9 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, id))softLinkBTSessionAttachWithQueue_0[0])(a1, a2, a3, v8);

  return v9;
}

uint64_t initBTServiceAddCallbacks(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTServiceAddCallbacks");
  softLinkBTServiceAddCallbacks[0] = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initBTDeviceAddressFromString_0(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceAddressFromString");
  softLinkBTDeviceAddressFromString_0[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTDeviceFromAddress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceFromAddress");
  softLinkBTDeviceFromAddress[0] = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initBTDeviceGetAddressString_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceGetAddressString");
  softLinkBTDeviceGetAddressString_0[0] = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initBTDeviceGetPairingStatus_0(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceGetPairingStatus");
  softLinkBTDeviceGetPairingStatus_0[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTDeviceGetName_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceGetName");
  softLinkBTDeviceGetName_0[0] = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

uint64_t initBTDeviceGetDeviceId(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  int v10 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceGetDeviceId");
  softLinkBTDeviceGetDeviceId[0] = v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v10)(a1, a2, a3, a4, a5);
}

uint64_t initBTAccessoryManagerGetDefault(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTAccessoryManagerGetDefault");
  softLinkBTAccessoryManagerGetDefault[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTAccessoryManagerGetFeatureCapability(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v8 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTAccessoryManagerGetFeatureCapability");
  softLinkBTAccessoryManagerGetFeatureCapability[0] = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initBTPairingAgentCreate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v8 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTPairingAgentCreate");
  softLinkBTPairingAgentCreate[0] = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initBTPairingAgentStart(uint64_t a1)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTPairingAgentStart");
  softLinkBTPairingAgentStart[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

void *__MobileBluetoothLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/MobileBluetooth.framework/MobileBluetooth", 2);
  MobileBluetoothLibrary_sLib_0 = (uint64_t)result;
  return result;
}

uint64_t initBTDeviceConfigureLinkKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v8 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceConfigureLinkKey");
  softLinkBTDeviceConfigureLinkKey[0] = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initBTDeviceConnectServicesWithParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v8 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceConnectServicesWithParameters");
  softLinkBTDeviceConnectServicesWithParameters[0] = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

uint64_t initBTDeviceConnectServices(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceConnectServices");
  softLinkBTDeviceConnectServices[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTDeviceDisconnect(uint64_t a1)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTDeviceDisconnect");
  softLinkBTDeviceDisconnect[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initBTPairingAgentDeletePairedDevice(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTPairingAgentDeletePairedDevice");
  softLinkBTPairingAgentDeletePairedDevice[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTPairingAgentCancelPairing(uint64_t a1)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTPairingAgentCancelPairing");
  softLinkBTPairingAgentCancelPairing[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initBTPairingAgentStop(uint64_t a1)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTPairingAgentStop");
  softLinkBTPairingAgentStop[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initBTPairingAgentDestroy(uint64_t a1)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTPairingAgentDestroy");
  softLinkBTPairingAgentDestroy[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initBTServiceRemoveCallbacks(uint64_t a1, uint64_t a2)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTServiceRemoveCallbacks");
  softLinkBTServiceRemoveCallbacks[0] = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t initBTSessionDetachWithQueue_0(uint64_t a1)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTSessionDetachWithQueue");
  softLinkBTSessionDetachWithQueue_0[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t initBTPairingAgentAcceptSSP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MobileBluetoothLibrary_sOnce_0 != -1) {
    dispatch_once(&MobileBluetoothLibrary_sOnce_0, &__block_literal_global_357);
  }
  id v6 = (uint64_t (*)())dlsym((void *)MobileBluetoothLibrary_sLib_0, "BTPairingAgentAcceptSSP");
  softLinkBTPairingAgentAcceptSSP[0] = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

const char *BTServiceSpecificEventToString(int a1)
{
  if (a1 <= 500)
  {
    if (a1 <= 100)
    {
      if (a1 <= 1)
      {
        if (!a1) {
          return "BT_SERVICE_SDP";
        }
        if (a1 == 1) {
          return "BT_SERVICE_CONNECTION_ATTEMPT";
        }
      }
      else
      {
        switch(a1)
        {
          case 2:
            return "BT_SERVICE_DISCONNECTION_ATTEMPT";
          case 11:
            return "BT_SERVICE_CONNECTION_RESULT";
          case 12:
            return "BT_SERVICE_DISCONNECTION_RESULT";
        }
      }
    }
    else
    {
      if (a1 <= 201)
      {
        switch(a1)
        {
          case 'e':
            Class result = "BT_SERVICE_HANDSFREE_AUDIO_CONNECTED";
            break;
          case 'f':
            Class result = "BT_SERVICE_HANDSFREE_AUDIO_DISCONNECTED";
            break;
          case 'g':
            Class result = "BT_SERVICE_HANDSFREE_START_VOICE_COMMAND";
            break;
          case 'h':
            Class result = "BT_SERVICE_HANDSFREE_END_VOICE_COMMAND";
            break;
          default:
            if (a1 != 201) {
              return "?";
            }
            Class result = "BT_SERVICE_A2DP_AUDIO_CONNECTED";
            break;
        }
        return result;
      }
      if (a1 > 301)
      {
        if (a1 == 302) {
          return "BT_SERVICE_PHONE_BOOK_SEND_COMPLETE";
        }
        if (a1 == 303) {
          return "BT_SERVICE_PHONE_BOOK_SYNC_SUPPORTED";
        }
      }
      else
      {
        if (a1 == 202) {
          return "BT_SERVICE_A2DP_AUDIO_DISCONNECTED";
        }
        if (a1 == 301) {
          return "BT_SERVICE_PHONE_BOOK_SEND_INITIATED";
        }
      }
    }
    return "?";
  }
  switch(a1)
  {
    case 501:
      Class result = "BT_SERVICE_REMOTE_PLAY";
      break;
    case 502:
      Class result = "BT_SERVICE_REMOTE_PAUSE";
      break;
    case 503:
      Class result = "BT_SERVICE_REMOTE_STOP";
      break;
    case 504:
      Class result = "BT_SERVICE_REMOTE_PREVIOUS";
      break;
    case 505:
      Class result = "BT_SERVICE_REMOTE_NEXT";
      break;
    case 506:
      Class result = "BT_SERVICE_REMOTE_VOL_UP";
      break;
    case 507:
      Class result = "BT_SERVICE_REMOTE_VOL_DOWN";
      break;
    case 508:
      Class result = "BT_SERVICE_REMOTE_MUTE";
      break;
    case 509:
      Class result = "BT_SERVICE_REMOTE_FASTFORWARD_START";
      break;
    case 510:
      Class result = "BT_SERVICE_REMOTE_FASTFORWARD_STOP";
      break;
    case 511:
      Class result = "BT_SERVICE_REMOTE_REWIND_START";
      break;
    case 512:
      Class result = "BT_SERVICE_REMOTE_REWIND_STOP";
      break;
    default:
      if (a1 == 601)
      {
        Class result = "BT_SERVICE_SENSOR_RSSI";
      }
      else
      {
        if (a1 != 701) {
          return "?";
        }
        Class result = "BT_SERVICE_LMP_NAME_CHANGED";
      }
      break;
  }
  return result;
}

void sub_1A544740C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5448658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A5448874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A544A4E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  objc_sync_exit(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void sub_1A544ACDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state)
{
}

BOOL NSStringLooksLikeBTAddress(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ((unint64_t)[v1 length] >= 0xC)
  {
    uint64_t v3 = [v1 componentsSeparatedByString:@":"];
    uint64_t v4 = v3;
    if (v3)
    {
      long long v13 = 0u;
      long long v14 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
      id v5 = v3;
      uint64_t v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v12;
        while (2)
        {
          uint64_t v9 = 0;
          do
          {
            if (*(void *)v12 != v8) {
              objc_enumerationMutation(v5);
            }
            if ((unint64_t)objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * v9), "length", (void)v11) < 2)
            {

              goto LABEL_14;
            }
            ++v9;
          }
          while (v7 != v9);
          uint64_t v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
          if (v7) {
            continue;
          }
          break;
        }
      }

      BOOL v2 = [v5 count] == 6;
    }
    else
    {
LABEL_14:
      BOOL v2 = 0;
    }
  }
  else
  {
    BOOL v2 = 0;
  }

  return v2;
}

uint64_t RPCompanionLinkDeviceIsEqualToSFDevice(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 rapportIdentifier];
  if (v5)
  {
    uint64_t v6 = [v3 homeKitIdentifier];
    uint64_t v7 = [v6 UUIDString];
    char v8 = [v7 isEqualToString:v5];

    if (v8) {
      goto LABEL_7;
    }
  }

  id v5 = [v4 idsIdentifier];
  if (v5)
  {
    uint64_t v9 = [v3 idsDeviceIdentifier];
    char v10 = [v9 isEqualToString:v5];

    if (v10) {
      goto LABEL_7;
    }
  }

  long long v11 = [v4 identifier];
  id v5 = [v11 UUIDString];

  if (!v5) {
    goto LABEL_8;
  }
  long long v12 = [v3 effectiveIdentifier];
  char v13 = [v12 isEqualToString:v5];

  if (v13)
  {
LABEL_7:
    LOBYTE(v14) = 1;
  }
  else
  {
LABEL_8:

    id v5 = [v3 publicIdentifier];
    if (v5)
    {
      uint64_t v15 = [v4 bleDevice];
      uint64_t v16 = [v15 advertisementFields];
      uint64_t v17 = [v16 objectForKeyedSubscript:@"bdAddr"];

      if (v17 && NSStringLooksLikeBTAddress(v5))
      {
        int v18 = SFDataFromHexString(v5);
        if (v18) {
          int v14 = (int)([v17 isEqualToData:v18] << 31) >> 31;
        }
        else {
          LOBYTE(v14) = 0;
        }
      }
      else
      {
        LOBYTE(v14) = 0;
      }
    }
    else
    {
      LOBYTE(v14) = 0;
    }
  }

  return v14 & 1;
}

id SFAddSuffixForCurrentDeviceClass(void *a1)
{
  id v1 = a1;
  if (SFDeviceClassCodeGet_sOnce != -1) {
    dispatch_once(&SFDeviceClassCodeGet_sOnce, &__block_literal_global_36);
  }
  unsigned int v2 = SFDeviceClassCodeGet_sResult - 1;
  if (v2 > 6) {
    id v3 = @"_IPHONE";
  }
  else {
    id v3 = off_1E5BBFD98[(char)v2];
  }
  id v4 = [v1 stringByAppendingString:v3];

  return v4;
}

uint64_t SFAddSuffixForDeviceClass(void *a1, const char *a2)
{
  if ((a2 - 1) > 6) {
    unsigned int v2 = @"_IPHONE";
  }
  else {
    unsigned int v2 = off_1E5BBFD98[(char)((_BYTE)a2 - 1)];
  }
  return [a1 stringByAppendingString:v2];
}

id NSDataFromHexString(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 length];
  id v3 = [MEMORY[0x1E4F1CA58] dataWithCapacity:v2 >> 1];
  char v11 = 0;
  id v4 = v1;
  uint64_t v5 = [v4 UTF8String];
  unint64_t v9 = 0;
  if (v2)
  {
    uint64_t v6 = v5;
    for (unint64_t i = 0; i < v2; i += 2)
    {
      *(_WORD *)__str = *(_WORD *)(v6 + i);
      unint64_t v9 = strtoul(__str, 0, 16);
      [v3 appendBytes:&v9 length:1];
    }
  }

  return v3;
}

uint64_t __SFDeviceClassCodeGet_block_invoke()
{
  uint64_t result = MGGetSInt32Answer();
  int v1 = result - 1;
  if (result - 1) <= 0xA && ((0x46Fu >> v1)) {
    SFDeviceClassCodeGet_sResult = byte_1A56EA8AE[v1];
  }
  return result;
}

uint64_t SFDeviceColorCodeGet()
{
  if (SFDeviceColorCodeGet_sOnce != -1) {
    dispatch_once(&SFDeviceColorCodeGet_sOnce, &__block_literal_global_467);
  }
  return SFDeviceColorCodeGet_sResult;
}

void __SFDeviceColorCodeGet_block_invoke()
{
  uint64_t v0 = MGCopyAnswer();
  if (v0)
  {
    int v1 = (void *)v0;
    if (SFDeviceClassCodeGet_sOnce != -1) {
      dispatch_once(&SFDeviceClassCodeGet_sOnce, &__block_literal_global_36);
    }
    if (SFDeviceClassCodeGet_sResult == 4) {
      SFDeviceColorCodeGet_sResult = [v1 intValue];
    }
    CFRelease(v1);
  }
}

uint64_t SFDeviceHomeButtonType()
{
  if (SFDeviceHomeButtonType_sOnce != -1) {
    dispatch_once(&SFDeviceHomeButtonType_sOnce, &__block_literal_global_472);
  }
  return SFDeviceHomeButtonType_sType;
}

uint64_t __SFDeviceHomeButtonType_block_invoke()
{
  uint64_t result = MGGetSInt32Answer();
  if (result <= 2) {
    SFDeviceHomeButtonType_sCFStringRef Type = result + 1;
  }
  return result;
}

id SFDeviceToRPCompanionLinkDevice(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v4)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v6 = v4;
    id v7 = (id)[v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v7)
    {
      uint64_t v8 = *(void *)v13;
      while (2)
      {
        for (unint64_t i = 0; i != v7; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v13 != v8) {
            objc_enumerationMutation(v6);
          }
          char v10 = *(void **)(*((void *)&v12 + 1) + 8 * i);
          if (RPCompanionLinkDeviceIsEqualToSFDevice(v10, v3))
          {
            id v7 = v10;
            goto LABEL_12;
          }
        }
        id v7 = (id)[v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }
LABEL_12:
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

uint64_t SFDeviceModelCodeGet()
{
  if (SFDeviceModelCodeGet_sOnce != -1) {
    dispatch_once(&SFDeviceModelCodeGet_sOnce, &__block_literal_global_477);
  }
  return SFDeviceModelCodeGet_sResult;
}

void __SFDeviceModelCodeGet_block_invoke()
{
  id v1 = (id)GestaltCopyAnswer();
  if (([v1 isEqual:@"iPhone10,3"] & 1) != 0
    || ([v1 isEqual:@"iPhone10,6"] & 1) != 0
    || ([v1 isEqual:@"iPhone11,2"] & 1) != 0
    || ([v1 isEqual:@"iPhone11,4"] & 1) != 0
    || ([v1 isEqual:@"iPhone11,6"] & 1) != 0
    || ([v1 isEqual:@"iPhone11,8"] & 1) != 0
    || ([v1 isEqual:@"iPhone12,1"] & 1) != 0
    || ([v1 isEqual:@"iPhone12,3"] & 1) != 0
    || ([v1 isEqual:@"iPhone12,5"] & 1) != 0
    || ([v1 isEqual:@"iPhone13,1"] & 1) != 0
    || ([v1 isEqual:@"iPhone13,2"] & 1) != 0
    || ([v1 isEqual:@"iPhone13,3"] & 1) != 0
    || ([v1 isEqual:@"iPhone13,4"] & 1) != 0
    || ([v1 isEqual:@"iPhone14,2"] & 1) != 0
    || ([v1 isEqual:@"iPhone14,3"] & 1) != 0
    || ([v1 isEqual:@"iPhone14,4"] & 1) != 0
    || ([v1 isEqual:@"iPhone14,5"] & 1) != 0
    || ([v1 isEqual:@"iPhone14,7"] & 1) != 0
    || ([v1 isEqual:@"iPhone14,8"] & 1) != 0
    || ([v1 isEqual:@"iPhone15,2"] & 1) != 0
    || ([v1 isEqual:@"iPhone15,3"] & 1) != 0
    || ([v1 isEqual:@"iPhone15,4"] & 1) != 0
    || ([v1 isEqual:@"iPhone15,5"] & 1) != 0
    || ([v1 isEqual:@"iPhone16,1"] & 1) != 0
    || ([v1 isEqual:@"iPhone16,2"] & 1) != 0)
  {
    char v0 = 1;
LABEL_27:
    SFDeviceModelCodeGet_sResult = v0;
    goto LABEL_28;
  }
  if (([v1 isEqual:@"iPhone8,4"] & 1) != 0
    || ([v1 isEqual:@"iPhone6,1"] & 1) != 0
    || ([v1 isEqual:@"iPhone6,2"] & 1) != 0)
  {
    char v0 = 2;
    goto LABEL_27;
  }
  if (([v1 isEqual:@"iPad8,1"] & 1) != 0
    || ([v1 isEqual:@"iPad8,2"] & 1) != 0
    || ([v1 isEqual:@"iPad8,3"] & 1) != 0
    || ([v1 isEqual:@"iPad8,4"] & 1) != 0
    || ([v1 isEqual:@"iPad8,5"] & 1) != 0
    || ([v1 isEqual:@"iPad8,6"] & 1) != 0
    || ([v1 isEqual:@"iPad8,7"] & 1) != 0
    || ([v1 isEqual:@"iPad8,8"] & 1) != 0
    || ([v1 isEqual:@"iPad8,9"] & 1) != 0
    || ([v1 isEqual:@"iPad8,10"] & 1) != 0
    || ([v1 isEqual:@"iPad8,11"] & 1) != 0
    || ([v1 isEqual:@"iPad8,12"] & 1) != 0
    || ([v1 isEqual:@"iPad13,1"] & 1) != 0
    || ([v1 isEqual:@"iPad13,2"] & 1) != 0
    || ([v1 isEqual:@"iPad13,4"] & 1) != 0
    || ([v1 isEqual:@"iPad13,5"] & 1) != 0
    || ([v1 isEqual:@"iPad13,6"] & 1) != 0
    || ([v1 isEqual:@"iPad13,7"] & 1) != 0
    || ([v1 isEqual:@"iPad13,8"] & 1) != 0
    || ([v1 isEqual:@"iPad13,9"] & 1) != 0
    || ([v1 isEqual:@"iPad13,10"] & 1) != 0
    || ([v1 isEqual:@"iPad13,11"] & 1) != 0
    || ([v1 isEqual:@"iPad14,1"] & 1) != 0
    || ([v1 isEqual:@"iPad14,2"] & 1) != 0
    || ([v1 isEqual:@"iPad13,16"] & 1) != 0
    || ([v1 isEqual:@"iPad13,17"] & 1) != 0
    || ([v1 isEqual:@"iPad13,18"] & 1) != 0
    || ([v1 isEqual:@"iPad13,19"] & 1) != 0
    || ([v1 isEqual:@"iPad14,3"] & 1) != 0
    || ([v1 isEqual:@"iPad14,4"] & 1) != 0
    || ([v1 isEqual:@"iPad14,5"] & 1) != 0
    || ([v1 isEqual:@"iPad14,6"] & 1) != 0
    || ([v1 isEqual:@"iPad16,3"] & 1) != 0
    || ([v1 isEqual:@"iPad16,4"] & 1) != 0
    || ([v1 isEqual:@"iPad16,5"] & 1) != 0
    || ([v1 isEqual:@"iPad16,6"] & 1) != 0
    || ([v1 isEqual:@"iPad14,8"] & 1) != 0
    || ([v1 isEqual:@"iPad14,9"] & 1) != 0
    || ([v1 isEqual:@"iPad14,10"] & 1) != 0
    || ([v1 isEqual:@"iPad14,11"] & 1) != 0)
  {
    char v0 = 3;
    goto LABEL_27;
  }
  if (([v1 isEqual:@"iPod7,1"] & 1) != 0
    || ([v1 isEqual:@"iPod9,1"] & 1) != 0)
  {
    char v0 = 4;
    goto LABEL_27;
  }
  if ([v1 isEqualToString:@"AudioAccessory5,1"])
  {
    char v0 = 5;
    goto LABEL_27;
  }
  if (([v1 isEqualToString:@"AudioAccessory6,1"] & 1) != 0
    || ([v1 isEqualToString:@"AudioAccessory99,1"] & 1) != 0
    || ([v1 isEqualToString:@"AudioAccessory99,2"] & 1) != 0)
  {
    char v0 = 6;
    goto LABEL_27;
  }
  if ([v1 isEqualToString:@"AppleTV14,1"])
  {
    char v0 = 7;
    goto LABEL_27;
  }
LABEL_28:
}

id SFErrorF()
{
  char v0 = NSErrorV();
  if (!v0)
  {
    char v0 = NSErrorF();
  }

  return v0;
}

id SFNestedErrorF()
{
  char v0 = NSErrorNestedV();
  if (!v0)
  {
    char v0 = NSErrorF();
  }

  return v0;
}

id SFHighPriorityQueue()
{
  if (SFHighPriorityQueue_sOnce != -1) {
    dispatch_once(&SFHighPriorityQueue_sOnce, &__block_literal_global_708);
  }
  char v0 = (void *)SFHighPriorityQueue_sQueue;
  if (SFHighPriorityQueue_sQueue)
  {
    return v0;
  }
  else
  {
    uint64_t v2 = FatalErrorF();
    return (id)__SFHighPriorityQueue_block_invoke(v2);
  }
}

void __SFHighPriorityQueue_block_invoke()
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  memset(&v4, 0, sizeof(v4));
  pthread_attr_init(&v4);
  pthread_attr_set_qos_class_np(&v4, QOS_CLASS_USER_INITIATED, 0);
  char v0 = dispatch_pthread_root_queue_create();
  pthread_attr_destroy(&v4);
  id v1 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v2 = dispatch_queue_create_with_target_V2("com.apple.sharing.HighPriority", v1, v0);
  id v3 = (void *)SFHighPriorityQueue_sQueue;
  SFHighPriorityQueue_sQueue = (uint64_t)v2;
}

uint64_t __SFHighPriorityQueue_block_invoke_2()
{
  return MEMORY[0x1F40CDB40]();
}

id SFHomePodDisplayNameForDeviceName(void *a1)
{
  id v1 = a1;
  dispatch_queue_t v2 = SFLocalizedStringForKey(@"HOMEPOD_HANDOFF_HEADER_DEFAULT");
  id v3 = v1;
  pthread_attr_t v4 = v3;
  if (v3)
  {
    id v5 = v3;
    id v6 = [v5 lowercaseString];
    if (([v6 hasSuffix:@"homepod"] & 1) == 0)
    {
      id v7 = [MEMORY[0x1E4F28B88] whitespaceCharacterSet];
      uint64_t v8 = [v5 stringByTrimmingCharactersInSet:v7];

      uint64_t v9 = [NSString stringWithFormat:@"%@ %@", v8, v2];

      id v5 = (id)v9;
    }
  }
  else
  {
    id v5 = v2;
  }

  return v5;
}

id SFLocalizedNameForBluetoothProductID(uint64_t a1)
{
  BOOL v2 = (a1 - 8194) > 0xE || ((1 << (a1 - 2)) & 0x7F9B) == 0;
  if (!v2
    || a1 == 0x10000
    || (v15 = [[SFHeadphoneProduct alloc] initWithProductID:a1], BOOL v16 = [(SFHeadphoneProduct *)v15 supportsMobileAsset], v15, v16))
  {
    id v3 = [MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.Sharing"];
    pthread_attr_t v4 = objc_msgSend(NSString, "stringWithFormat:", @"Localizable-PID_%u", a1);
    id v5 = objc_msgSend([NSString alloc], "initWithFormat:", @"PRODUCT_NAME_PID_%u", a1);
    id v6 = SFLocalizedStringEx(v3, v4, v5);
    id v7 = v5;
    id v8 = v6;
    uint64_t v9 = v8;
    if (v7 == v8)
    {
    }
    else
    {
      if ((v7 == 0) == (v8 != 0))
      {

LABEL_18:
        goto LABEL_19;
      }
      char v10 = [v7 isEqual:v8];

      if ((v10 & 1) == 0) {
        goto LABEL_18;
      }
    }
  }
  if ((a1 - 8194) <= 0xD && ((1 << (a1 - 2)) & 0x3001) != 0
    || a1 == 0x10000
    || (char v11 = [[SFHeadphoneProduct alloc] initWithProductID:a1], v12 = [(SFHeadphoneProduct *)v11 isAirPods], v11, v12))
  {
    CFStringRef v13 = @"AIRPODS";
  }
  else
  {
    switch((int)a1)
    {
      case 8195:
        CFStringRef v13 = @"POWERBEATS3_WIRELESS";
        break;
      case 8197:
        CFStringRef v13 = @"BEATSX";
        break;
      case 8198:
        CFStringRef v13 = @"BEATS_SOLO3_WIRELESS";
        break;
      case 8201:
        CFStringRef v13 = @"BEATS_STUDIO3_WIRELESS";
        break;
      default:
        CFStringRef v13 = @"AUDIO_ACCESSORY";
        break;
    }
  }
  uint64_t v9 = SFLocalizedStringForKey(v13);
LABEL_19:

  return v9;
}

id SFLocalizedStringEx(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (SFIsGreenTeaDevice())
  {
    id v8 = [v7 stringByAppendingString:@"_GT"];
    uint64_t v9 = [v5 localizedStringForKey:v8 value:@"_GT" table:v6];

    if (![v9 isEqual:@"_GT"]) {
      goto LABEL_5;
    }
  }
  uint64_t v9 = 0;
LABEL_5:
  if (![v9 length])
  {
    uint64_t v10 = [v5 localizedStringForKey:v7 value:&stru_1EF9BDC68 table:v6];

    uint64_t v9 = (void *)v10;
  }
  if (v9) {
    char v11 = v9;
  }
  else {
    char v11 = v7;
  }
  id v12 = v11;

  return v12;
}

id SFLocalizePhoneNumber(void *a1)
{
  id v1 = a1;
  active = (void *)CPPhoneNumberCopyActiveCountryCode();
  String = (void *)PNCopyBestGuessNormalizedNumberForCountry();
  if (String)
  {
    [NSString stringWithUTF8String:String];
    pthread_attr_t v4 = (const void *)CFPhoneNumberCreate();
    free(String);
    if (v4)
    {
      String = (void *)CFPhoneNumberCreateString();
      CFRelease(v4);
    }
    else
    {
      String = 0;
    }
  }
  if (String) {
    id v5 = String;
  }
  else {
    id v5 = v1;
  }
  id v6 = v5;

  return v6;
}

double SFMeasureCPUDuration(void *a1)
{
  memset(&v4, 0, sizeof(v4));
  id v1 = a1;
  getrusage(0, &v4);
  double v2 = (double)v4.ru_utime.tv_sec
     + (double)v4.ru_utime.tv_usec * 0.000001
     + (double)v4.ru_stime.tv_sec
     + (double)v4.ru_stime.tv_usec * 0.000001;
  v1[2](v1);

  memset(&v4, 0, sizeof(v4));
  getrusage(0, &v4);
  return (double)v4.ru_utime.tv_sec
       + (double)v4.ru_utime.tv_usec * 0.000001
       + (double)v4.ru_stime.tv_sec
       + (double)v4.ru_stime.tv_usec * 0.000001
       - v2;
}

id SFMyAltDSID()
{
  id v0 = objc_alloc_init((Class)getACAccountStoreClass_0[0]());
  id v1 = objc_msgSend(v0, "aa_primaryAppleAccount");
  double v2 = objc_msgSend(v1, "aa_altDSID");

  return v2;
}

id SFNormalizedUserIdentifiersForContactIdentifier(void *a1, int a2, unsigned char *a3)
{
  return SFNormalizedUserIdentifiersForContactIdentifierEx(a1, a2, 0, a3);
}

id SFNormalizedUserIdentifiersForContactIdentifierEx(void *a1, int a2, id *a3, unsigned char *a4)
{
  v73[3] = *MEMORY[0x1E4F143B8];
  id v44 = a1;
  uint64_t v62 = 0;
  CFDataRef v63 = &v62;
  uint64_t v64 = 0x3032000000;
  int v65 = __Block_byref_object_copy__9;
  int v66 = __Block_byref_object_dispose__9;
  id v67 = 0;
  id v45 = objc_alloc_init((Class)getCNContactStoreClass[0]());
  id v5 = getCNContactEmailAddressesKey[0]();
  v73[0] = v5;
  id v6 = getCNContactInstantMessageAddressesKey[0]();
  v73[1] = v6;
  id v7 = getCNContactPhoneNumbersKey[0]();
  v73[2] = v7;
  int v47 = [MEMORY[0x1E4F1C978] arrayWithObjects:v73 count:3];

  if (a3)
  {
    id v8 = [(Class)getCNContactFormatterClass[0]() descriptorForRequiredKeysForStyle:0];
    v72 = v8;
    uint64_t v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v72 count:1];

    if (v9)
    {
      uint64_t v10 = [v47 arrayByAddingObjectsFromArray:v9];

      int v47 = (void *)v10;
    }
  }
  int v46 = (void *)[objc_alloc((Class)getCNContactFetchRequestClass[0]()) initWithKeysToFetch:v47];
  Class v11 = (Class)getCNContactClass[0]();
  id v71 = v44;
  id v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v71 count:1];
  CFStringRef v13 = [(objc_class *)v11 predicateForContactsWithIdentifiers:v12];
  [v46 setPredicate:v13];

  v61[0] = MEMORY[0x1E4F143A8];
  v61[1] = 3221225472;
  v61[2] = __SFNormalizedUserIdentifiersForContactIdentifierEx_block_invoke;
  v61[3] = &unk_1E5BBFCD8;
  v61[4] = &v62;
  [v45 enumerateContactsWithFetchRequest:v46 error:0 usingBlock:v61];
  if (v63[5])
  {
    id v14 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v59 = 0u;
    long long v60 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    long long v15 = [(id)v63[5] emailAddresses];
    uint64_t v16 = [v15 countByEnumeratingWithState:&v57 objects:v70 count:16];
    if (v16)
    {
      uint64_t v17 = *(void *)v58;
      do
      {
        for (uint64_t i = 0; i != v16; ++i)
        {
          if (*(void *)v58 != v17) {
            objc_enumerationMutation(v15);
          }
          uint64_t v19 = [*(id *)(*((void *)&v57 + 1) + 8 * i) value];
          id v20 = SFNormalizeEmailAddress(v19, a2);

          if (([v14 containsObject:v20] & 1) == 0) {
            [v14 addObject:v20];
          }
        }
        uint64_t v16 = [v15 countByEnumeratingWithState:&v57 objects:v70 count:16];
      }
      while (v16);
    }

    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    int v21 = [(id)v63[5] instantMessageAddresses];
    uint64_t v22 = [v21 countByEnumeratingWithState:&v53 objects:v69 count:16];
    if (v22)
    {
      uint64_t v23 = *(void *)v54;
      do
      {
        for (uint64_t j = 0; j != v22; ++j)
        {
          if (*(void *)v54 != v23) {
            objc_enumerationMutation(v21);
          }
          uint64_t v25 = [*(id *)(*((void *)&v53 + 1) + 8 * j) value];
          uint64_t v26 = [v25 username];
          [v26 rangeOfString:@"@"];
          if (v27)
          {
            int v28 = SFNormalizeEmailAddress(v26, a2);
            if (([v14 containsObject:v28] & 1) == 0) {
              [v14 addObject:v28];
            }
          }
        }
        uint64_t v22 = [v21 countByEnumeratingWithState:&v53 objects:v69 count:16];
      }
      while (v22);
    }

    long long v51 = 0u;
    long long v52 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    int v29 = [(id)v63[5] phoneNumbers];
    uint64_t v30 = [v29 countByEnumeratingWithState:&v49 objects:v68 count:16];
    if (v30)
    {
      uint64_t v31 = *(void *)v50;
      do
      {
        for (uint64_t k = 0; k != v30; ++k)
        {
          if (*(void *)v50 != v31) {
            objc_enumerationMutation(v29);
          }
          int v33 = [*(id *)(*((void *)&v49 + 1) + 8 * k) value];
          int v34 = [v33 stringValue];
          int v35 = SFNormalizePhoneNumber(v34);

          if (v35 && ([v14 containsObject:v35] & 1) == 0) {
            [v14 addObject:v35];
          }
        }
        uint64_t v30 = [v29 countByEnumeratingWithState:&v49 objects:v68 count:16];
      }
      while (v30);
    }

    id v48 = 0;
    __int16 v36 = [v45 _crossPlatformUnifiedMeContactWithKeysToFetch:v47 error:&v48];
    id v37 = v48;
    int v38 = a3;
    if (a4 && !v37 && v36)
    {
      int v39 = [v36 identifier];
      char v40 = [v39 isEqualToString:v44];

      int v38 = a3;
      *a4 = v40;
    }
    if (v38) {
      objc_storeStrong(v38, (id)v63[5]);
    }
  }
  else
  {
    id v14 = 0;
  }

  _Block_object_dispose(&v62, 8);

  return v14;
}

void sub_1A544E1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __SFNormalizedUserIdentifiersForContactIdentifierEx_block_invoke(uint64_t a1, void *a2, unsigned char *a3)
{
  *a3 = 1;
}

id SFNormalizeEmailAddress(void *a1, int a2)
{
  id v3 = [a1 lowercaseString];
  rusage v4 = v3;
  if (a2
    && (([v3 hasSuffix:@"@me.com"] & 1) != 0
     || [v4 hasSuffix:@"@mac.com"]))
  {
    id v5 = [v4 componentsSeparatedByString:@"@"];
    if ([v5 count])
    {
      id v6 = NSString;
      id v7 = [v5 objectAtIndexedSubscript:0];
      id v8 = [v6 stringWithFormat:@"%@@icloud.com", v7];
    }
    else
    {
      id v8 = v4;
    }
  }
  else
  {
    id v8 = v4;
  }

  return v8;
}

id SFNormalizePhoneNumber(void *a1)
{
  id v1 = a1;
  active = (void *)CPPhoneNumberCopyActiveCountryCode();
  id v3 = (void *)PNCopyBestGuessNormalizedNumberForCountry();
  if (v3)
  {
    [NSString stringWithUTF8String:v3];
    rusage v4 = (const void *)CFPhoneNumberCreate();
    free(v3);
    if (v4 && (String = (void *)CFPhoneNumberCreateString(), CFRelease(v4), String))
    {
      id v6 = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"+"];
      id v3 = [String stringByTrimmingCharactersInSet:v6];
    }
    else
    {
      id v3 = 0;
    }
  }
  if (v3) {
    id v7 = v3;
  }
  else {
    id v7 = v1;
  }
  id v8 = v7;

  return v8;
}

CFArrayRef SFShareablePasswordForSSID(void *a1)
{
  id v1 = a1;
  uint64_t v2 = WiFiManagerClientCreate();
  if (v2)
  {
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 3221225472;
    aBlock[2] = __SFShareablePasswordForSSID_block_invoke;
    aBlock[3] = &__block_descriptor_40_e5_v8__0l;
    void aBlock[4] = v2;
    id v3 = (void (**)(void))_Block_copy(aBlock);
    uint64_t v4 = WiFiManagerClientCopyNetworks();
    CFArrayRef v5 = (const __CFArray *)v4;
    if (v4)
    {
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 3221225472;
      void v12[2] = __SFShareablePasswordForSSID_block_invoke_2;
      void v12[3] = &__block_descriptor_40_e5_v8__0l;
      v12[4] = v4;
      id v6 = (void (**)(void))_Block_copy(v12);
      for (CFIndex i = 0; ; ++i)
      {
        if (i >= CFArrayGetCount(v5)) {
          goto LABEL_12;
        }
        CFNumberRef ValueAtIndex = CFArrayGetValueAtIndex(v5, i);
        SSID = (const void *)WiFiNetworkGetSSID();
        if (SSID)
        {
          if (CFEqual(v1, SSID)) {
            break;
          }
        }
      }
      CFTypeRef v10 = CFRetain(ValueAtIndex);
      if (!v10)
      {
LABEL_12:
        CFArrayRef v5 = 0;
        goto LABEL_15;
      }
      if (WiFiNetworkGetShareMode() == 3)
      {
        WiFiNetworkCopyShareablePassword();
        CFArrayRef v5 = (const __CFArray *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        CFArrayRef v5 = 0;
      }
      CFRelease(v10);
LABEL_15:
      v6[2](v6);
    }
    v3[2](v3);
  }
  else
  {
    CFArrayRef v5 = 0;
  }

  return v5;
}

void sub_1A544E64C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v2 + 16))(v2);
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void __SFShareablePasswordForSSID_block_invoke(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 32);
  if (v1) {
    CFRelease(v1);
  }
}

void __SFShareablePasswordForSSID_block_invoke_2(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 32);
  if (v1) {
    CFRelease(v1);
  }
}

BOOL SFStringContainsOnlyPhoneNumberCharacters(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x1E4F28E58];
  id v2 = a1;
  id v3 = [v1 decimalDigitCharacterSet];
  uint64_t v4 = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"()+-#* "];
  [v3 formUnionWithCharacterSet:v4];

  CFArrayRef v5 = [v3 invertedSet];
  uint64_t v6 = [v2 rangeOfCharacterFromSet:v5];

  return v6 == 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t SFWiFiChannelToIndex(unsigned int a1)
{
  if (a1 > 0xA5) {
    return 0;
  }
  else {
    return SFWiFiChannelToIndexMap[a1];
  }
}

uint64_t SFWiFiIndexToChannel(unsigned int a1)
{
  if (a1 > 0x26) {
    return 0;
  }
  else {
    return SFWiFiIndexToChannelMap[a1];
  }
}

id SFBase64StringFromHexString(void *a1)
{
  uint64_t v1 = NSDataFromHexString(a1);
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 base64EncodedStringWithOptions:0];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id SFCombinedHashFromArray(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 count];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_alloc_init(MEMORY[0x1E4F28E78]);
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v6 = [v1 objectAtIndexedSubscript:i];
      id v7 = SFBase64StringFromHexString(v6);

      if (v7) {
        [v4 appendString:v7];
      }
      if (v3 - 1 != i) {
        [v4 appendString:@","];
      }
    }
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

uint64_t SFTestFlagsFromString(void *a1)
{
  strlen((const char *)[a1 UTF8String]);
  uint64_t v1 = 1;
  while (TextSep())
  {
    if (strnicmpx())
    {
      if (strnicmpx())
      {
        if (strnicmpx())
        {
          if (strnicmpx())
          {
            if (strnicmpx())
            {
              if (strnicmpx())
              {
                if (strnicmpx())
                {
                  if (strnicmpx())
                  {
                    if (strnicmpx())
                    {
                      if (strnicmpx())
                      {
                        if (strnicmpx())
                        {
                          if (strnicmpx())
                          {
                            if (strnicmpx())
                            {
                              if (strnicmpx())
                              {
                                if (strnicmpx())
                                {
                                  if (strnicmpx())
                                  {
                                    if (strnicmpx())
                                    {
                                      if (strnicmpx())
                                      {
                                        if (strnicmpx())
                                        {
                                          if (strnicmpx())
                                          {
                                            if (strnicmpx())
                                            {
                                              if (strnicmpx())
                                              {
                                                if (strnicmpx())
                                                {
                                                  if (strnicmpx())
                                                  {
                                                    if (strnicmpx())
                                                    {
                                                      if (strnicmp_prefix())
                                                      {
                                                        if (strnicmp_prefix())
                                                        {
                                                          if (strnicmp_prefix())
                                                          {
                                                            if (strnicmp_prefix())
                                                            {
                                                              if (strnicmp_prefix())
                                                              {
                                                                if (strnicmp_prefix())
                                                                {
                                                                  if (strnicmp_prefix())
                                                                  {
                                                                    if (strnicmpx())
                                                                    {
                                                                      if (strnicmpx())
                                                                      {
                                                                        if (strnicmpx())
                                                                        {
                                                                          if (strnicmpx())
                                                                          {
                                                                            if (strnicmpx())
                                                                            {
                                                                              if (strnicmpx())
                                                                              {
                                                                                if (strnicmpx())
                                                                                {
                                                                                  if (strnicmpx())
                                                                                  {
                                                                                    if (!strnicmpx()) {
                                                                                      v1 |= 0x10000000000uLL;
                                                                                    }
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    v1 |= 0x8000000000uLL;
                                                                                  }
                                                                                }
                                                                                else
                                                                                {
                                                                                  v1 |= 0x4000000000uLL;
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                v1 |= 0x2000000000uLL;
                                                                              }
                                                                            }
                                                                            else
                                                                            {
                                                                              v1 |= 0x1000000000uLL;
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            v1 |= 0x800000000uLL;
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          v1 |= 0x400000000uLL;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        v1 |= 0x200000000uLL;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      v1 |= 0x100000000uLL;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    v1 |= 0x80000000uLL;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  v1 |= 0x20000000uLL;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                v1 |= 0x10000000uLL;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              v1 |= 0x8000000uLL;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            v1 |= 0x4000000uLL;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          v1 |= 0x40000000uLL;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        v1 |= 0x2000000uLL;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      v1 |= 0x1000000uLL;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    v1 |= 0x800000uLL;
                                                  }
                                                }
                                                else
                                                {
                                                  v1 |= 0x400000uLL;
                                                }
                                              }
                                              else
                                              {
                                                v1 |= 0x200000uLL;
                                              }
                                            }
                                            else
                                            {
                                              v1 |= 0x100000uLL;
                                            }
                                          }
                                          else
                                          {
                                            v1 |= 0x80000uLL;
                                          }
                                        }
                                        else
                                        {
                                          v1 |= 0x20000000000uLL;
                                        }
                                      }
                                      else
                                      {
                                        v1 |= 0x40000uLL;
                                      }
                                    }
                                    else
                                    {
                                      v1 |= 0x20000uLL;
                                    }
                                  }
                                  else
                                  {
                                    v1 |= 0x10000uLL;
                                  }
                                }
                                else
                                {
                                  v1 |= 0x8000uLL;
                                }
                              }
                              else
                              {
                                v1 |= 0x4000uLL;
                              }
                            }
                            else
                            {
                              v1 |= 0x2000uLL;
                            }
                          }
                          else
                          {
                            v1 |= 0x1000uLL;
                          }
                        }
                        else
                        {
                          v1 |= 0x800uLL;
                        }
                      }
                      else
                      {
                        v1 |= 0x400uLL;
                      }
                    }
                    else
                    {
                      v1 |= 0x200uLL;
                    }
                  }
                  else
                  {
                    v1 |= 0x100uLL;
                  }
                }
                else
                {
                  v1 |= 0x80uLL;
                }
              }
              else
              {
                v1 |= 0x40uLL;
              }
            }
            else
            {
              v1 |= 0x20uLL;
            }
          }
          else
          {
            v1 |= 0x10uLL;
          }
        }
        else
        {
          v1 |= 8uLL;
        }
      }
      else
      {
        v1 |= 4uLL;
      }
    }
    else
    {
      v1 |= 2uLL;
    }
  }
  return v1;
}

void SFAWDEnsureInitialized()
{
  if (SFAWDEnsureInitialized_sOnce != -1) {
    dispatch_once(&SFAWDEnsureInitialized_sOnce, &__block_literal_global_823);
  }
}

void __SFAWDEnsureInitialized_block_invoke()
{
  uint64_t v0 = [objc_alloc((Class)getAWDServerConnectionClass[0]()) initWithComponentId:64];
  uint64_t v1 = (void *)gSFAWDServerConnection;
  gSFAWDServeruint64_t Connection = v0;

  if (gSFAWDServerConnection)
  {
    if (gLogCategory_Report > 40 || gLogCategory_Report == -1 && !_LogCategory_Initialize()) {
      return;
    }
  }
  else if (gLogCategory_Report > 50 || gLogCategory_Report == -1 && !_LogCategory_Initialize())
  {
    return;
  }

  LogPrintF();
}

void SFAWDSubmit(uint64_t a1, void *a2)
{
  id v8 = a2;
  uint64_t v3 = (void *)MEMORY[0x1A626C260]();
  if (SFAWDEnsureInitialized_sOnce != -1) {
    dispatch_once(&SFAWDEnsureInitialized_sOnce, &__block_literal_global_823);
  }
  if (!gSFAWDServerConnection)
  {
    if (gLogCategory_Report > 20 || gLogCategory_Report == -1 && !_LogCategory_Initialize()) {
      goto LABEL_31;
    }
LABEL_24:
    LogPrintF();
LABEL_31:
    CFArrayRef v5 = 0;
LABEL_32:
    id v7 = 0;
    goto LABEL_16;
  }
  uint64_t v4 = [(id)gSFAWDServerConnection newMetricContainerWithIdentifier:a1];
  if (!v4)
  {
    if (gLogCategory_Report > 20 || gLogCategory_Report == -1 && !_LogCategory_Initialize()) {
      goto LABEL_31;
    }
    goto LABEL_24;
  }
  CFArrayRef v5 = (void *)v4;
  uint64_t v6 = v8[2]();
  if (!v6)
  {
    if (gLogCategory_Report <= 50 && (gLogCategory_Report != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    goto LABEL_32;
  }
  id v7 = (void *)v6;
  [v5 setMetric:v6];
  if ([(id)gSFAWDServerConnection submitMetric:v5])
  {
    if (gLogCategory_Report <= 40 && (gLogCategory_Report != -1 || _LogCategory_Initialize())) {
LABEL_12:
    }
      LogPrintF();
  }
  else if (gLogCategory_Report <= 40 && (gLogCategory_Report != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_12;
  }
LABEL_16:
}

void SFPowerLogEvent(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (gLogCategory_Report <= 20 && (gLogCategory_Report != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (SFPowerLogEvent_sOnce != -1) {
    dispatch_once(&SFPowerLogEvent_sOnce, &__block_literal_global_833);
  }
  CFArrayRef v5 = SFPowerLogEvent_sPowerLogQueue;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFPowerLogEvent_block_invoke_2;
  block[3] = &unk_1E5BBBD18;
  id v9 = v3;
  id v10 = v4;
  id v6 = v4;
  id v7 = v3;
  dispatch_async(v5, block);
}

void __SFPowerLogEvent_block_invoke()
{
  dispatch_queue_t v0 = dispatch_queue_create("PowerLogQueue", 0);
  uint64_t v1 = (void *)SFPowerLogEvent_sPowerLogQueue;
  SFPowerLogEvent_sPowerLogQueue = (uint64_t)v0;
}

uint64_t __SFPowerLogEvent_block_invoke_2(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkPLLogRegisteredEvent[0])(65, *(void *)(a1 + 32), *(void *)(a1 + 40), 0);
}

void SFPowerLogTimeSensitiveEvent(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (gLogCategory_Report <= 20 && (gLogCategory_Report != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (SFPowerLogTimeSensitiveEvent_sOnce != -1) {
    dispatch_once(&SFPowerLogTimeSensitiveEvent_sOnce, &__block_literal_global_836);
  }
  CFArrayRef v5 = SFPowerLogTimeSensitiveEvent_sPowerLogQueue;
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __SFPowerLogTimeSensitiveEvent_block_invoke_2;
  block[3] = &unk_1E5BBBD18;
  id v9 = v3;
  id v10 = v4;
  id v6 = v4;
  id v7 = v3;
  dispatch_async(v5, block);
}

void __SFPowerLogTimeSensitiveEvent_block_invoke()
{
  dispatch_queue_t v0 = dispatch_queue_create("PowerLogSensitiveQueue", 0);
  uint64_t v1 = (void *)SFPowerLogTimeSensitiveEvent_sPowerLogQueue;
  SFPowerLogTimeSensitiveEvent_sPowerLogQueue = (uint64_t)v0;
}

uint64_t __SFPowerLogTimeSensitiveEvent_block_invoke_2(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkPLLogTimeSensitiveRegisteredEvent[0])(65, *(void *)(a1 + 32), *(void *)(a1 + 40), 0);
}

Class initACAccountStore_0()
{
  if (AccountsLibrary_sOnce_0 != -1) {
    dispatch_once(&AccountsLibrary_sOnce_0, &__block_literal_global_887);
  }
  Class result = objc_getClass("ACAccountStore");
  classACAccountStore_0 = (uint64_t)result;
  getACAccountStoreClass_0[0] = (uint64_t (*)())ACAccountStoreFunction_0;
  return result;
}

id ACAccountStoreFunction_0()
{
  return (id)classACAccountStore_0;
}

void *__AccountsLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/Frameworks/Accounts.framework/Accounts", 2);
  AccountsLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initCNContactStore()
{
  if (ContactsLibrary_sOnce != -1) {
    dispatch_once(&ContactsLibrary_sOnce, &__block_literal_global_891);
  }
  Class result = objc_getClass("CNContactStore");
  classCNContactStore = (uint64_t)result;
  getCNContactStoreClass[0] = (uint64_t (*)())CNContactStoreFunction;
  return result;
}

id CNContactStoreFunction()
{
  return (id)classCNContactStore;
}

void *__ContactsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/Contacts.framework/Contacts", 2);
  ContactsLibrary_sLib = (uint64_t)result;
  return result;
}

id initValCNContactEmailAddressesKey()
{
  if (ContactsLibrary_sOnce != -1) {
    dispatch_once(&ContactsLibrary_sOnce, &__block_literal_global_891);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)ContactsLibrary_sLib, "CNContactEmailAddressesKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCNContactEmailAddressesKey, *v0);
  }
  getCNContactEmailAddressesKey[0] = (uint64_t (*)())CNContactEmailAddressesKeyFunction;
  uint64_t v1 = (void *)constantValCNContactEmailAddressesKey;

  return v1;
}

id CNContactEmailAddressesKeyFunction()
{
  return (id)constantValCNContactEmailAddressesKey;
}

id initValCNContactInstantMessageAddressesKey()
{
  if (ContactsLibrary_sOnce != -1) {
    dispatch_once(&ContactsLibrary_sOnce, &__block_literal_global_891);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)ContactsLibrary_sLib, "CNContactInstantMessageAddressesKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCNContactInstantMessageAddressesKey, *v0);
  }
  getCNContactInstantMessageAddressesKey[0] = (uint64_t (*)())CNContactInstantMessageAddressesKeyFunction;
  uint64_t v1 = (void *)constantValCNContactInstantMessageAddressesKey;

  return v1;
}

id CNContactInstantMessageAddressesKeyFunction()
{
  return (id)constantValCNContactInstantMessageAddressesKey;
}

id initValCNContactPhoneNumbersKey()
{
  if (ContactsLibrary_sOnce != -1) {
    dispatch_once(&ContactsLibrary_sOnce, &__block_literal_global_891);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)ContactsLibrary_sLib, "CNContactPhoneNumbersKey");
  if (v0) {
    objc_storeStrong((id *)&constantValCNContactPhoneNumbersKey, *v0);
  }
  getCNContactPhoneNumbersKey[0] = (uint64_t (*)())CNContactPhoneNumbersKeyFunction;
  uint64_t v1 = (void *)constantValCNContactPhoneNumbersKey;

  return v1;
}

id CNContactPhoneNumbersKeyFunction()
{
  return (id)constantValCNContactPhoneNumbersKey;
}

Class initCNContactFormatter()
{
  if (ContactsLibrary_sOnce != -1) {
    dispatch_once(&ContactsLibrary_sOnce, &__block_literal_global_891);
  }
  Class result = objc_getClass("CNContactFormatter");
  classCNContactFormatter = (uint64_t)result;
  getCNContactFormatterClass[0] = (uint64_t (*)())CNContactFormatterFunction;
  return result;
}

id CNContactFormatterFunction()
{
  return (id)classCNContactFormatter;
}

Class initCNContactFetchRequest()
{
  if (ContactsLibrary_sOnce != -1) {
    dispatch_once(&ContactsLibrary_sOnce, &__block_literal_global_891);
  }
  Class result = objc_getClass("CNContactFetchRequest");
  classCNContactFetchRequest = (uint64_t)result;
  getCNContactFetchRequestClass[0] = (uint64_t (*)())CNContactFetchRequestFunction;
  return result;
}

id CNContactFetchRequestFunction()
{
  return (id)classCNContactFetchRequest;
}

Class initCNContact()
{
  if (ContactsLibrary_sOnce != -1) {
    dispatch_once(&ContactsLibrary_sOnce, &__block_literal_global_891);
  }
  Class result = objc_getClass("CNContact");
  classCNContact = (uint64_t)result;
  getCNContactClass[0] = (uint64_t (*)())CNContactFunction;
  return result;
}

id CNContactFunction()
{
  return (id)classCNContact;
}

Class initAWDServerConnection()
{
  if (WirelessDiagnosticsLibrary_sOnce != -1) {
    dispatch_once(&WirelessDiagnosticsLibrary_sOnce, &__block_literal_global_901);
  }
  Class result = objc_getClass("AWDServerConnection");
  classAWDServeruint64_t Connection = (uint64_t)result;
  getAWDServerConnectionClass[0] = (uint64_t (*)())AWDServerConnectionFunction;
  return result;
}

id AWDServerConnectionFunction()
{
  return (id)classAWDServerConnection;
}

void *__WirelessDiagnosticsLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics", 2);
  WirelessDiagnosticsLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initPLLogRegisteredEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (PowerLogLibrary_sOnce != -1) {
    dispatch_once(&PowerLogLibrary_sOnce, &__block_literal_global_905);
  }
  id v8 = (uint64_t (*)())dlsym((void *)PowerLogLibrary_sLib, "PLLogRegisteredEvent");
  softLinkPLLogRegisteredEvent[0] = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

void *__PowerLogLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/PowerLog.framework/PowerLog", 2);
  PowerLogLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initPLLogTimeSensitiveRegisteredEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (PowerLogLibrary_sOnce != -1) {
    dispatch_once(&PowerLogLibrary_sOnce, &__block_literal_global_905);
  }
  id v8 = (uint64_t (*)())dlsym((void *)PowerLogLibrary_sLib, "PLLogTimeSensitiveRegisteredEvent");
  softLinkPLLogTimeSensitiveRegisteredEvent[0] = v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
}

void sub_1A5453F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A54541EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A5454A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNContactClass_block_invoke(uint64_t a1)
{
  ContactsLibrary();
  Class result = objc_getClass("CNContact");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCNContactClass_block_invoke_cold_1();
  }
  getCNContactClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void ContactsLibrary()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v0[0] = 0;
  if (!ContactsLibraryCore_frameworkLibrary)
  {
    v0[1] = (void *)MEMORY[0x1E4F143A8];
    v0[2] = (void *)3221225472;
    v0[3] = __ContactsLibraryCore_block_invoke;
    v0[4] = &__block_descriptor_40_e5_v8__0l;
    v0[5] = v0;
    long long v1 = xmmword_1E5BBFE48;
    uint64_t v2 = 0;
    ContactsLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!ContactsLibraryCore_frameworkLibrary) {
    ContactsLibrary_cold_1(v0);
  }
  if (v0[0]) {
    free(v0[0]);
  }
}

uint64_t __ContactsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ContactsLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getCNMutableContactClass_block_invoke(uint64_t a1)
{
  ContactsLibrary();
  Class result = objc_getClass("CNMutableContact");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCNMutableContactClass_block_invoke_cold_1();
  }
  getCNMutableContactClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getINImageClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!IntentsLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __IntentsLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E5BBFE60;
    uint64_t v5 = 0;
    IntentsLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!IntentsLibraryCore_frameworkLibrary) {
    __getINImageClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("INImage");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getINImageClass_block_invoke_cold_2();
  }
  getINImageClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __IntentsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  IntentsLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1A5455B48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_1A5456130(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1A545638C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1A5456D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A54577B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1A5457E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class initACAccountStore_1()
{
  if (AccountsLibrary_sOnce_1 != -1) {
    dispatch_once(&AccountsLibrary_sOnce_1, &__block_literal_global_40);
  }
  Class result = objc_getClass("ACAccountStore");
  classACAccountStore_1 = (uint64_t)result;
  getACAccountStoreClass_1[0] = (uint64_t (*)())ACAccountStoreFunction_1;
  return result;
}

id ACAccountStoreFunction_1()
{
  return (id)classACAccountStore_1;
}

void *__AccountsLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/Frameworks/Accounts.framework/Accounts", 2);
  AccountsLibrary_sLib_1 = (uint64_t)result;
  return result;
}

Class initTRSetupCompanionAuthenticationRequest_0()
{
  if (TouchRemoteLibrary_sOnce_1 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_1, &__block_literal_global_324);
  }
  Class result = objc_getClass("TRSetupCompanionAuthenticationRequest");
  classTRSetupCompanionAuthenticationRequest_0 = (uint64_t)result;
  getTRSetupCompanionAuthenticationRequestClass_0[0] = (uint64_t (*)())TRSetupCompanionAuthenticationRequestFunction_0;
  return result;
}

id TRSetupCompanionAuthenticationRequestFunction_0()
{
  return (id)classTRSetupCompanionAuthenticationRequest_0;
}

void *__TouchRemoteLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib_1 = (uint64_t)result;
  return result;
}

Class initTRSetupProxyDeviceRequest_0()
{
  if (TouchRemoteLibrary_sOnce_1 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_1, &__block_literal_global_324);
  }
  Class result = objc_getClass("TRSetupProxyDeviceRequest");
  classTRSetupProxyDeviceRequest_0 = (uint64_t)result;
  getTRSetupProxyDeviceRequestClass_0[0] = (uint64_t (*)())TRSetupProxyDeviceRequestFunction_0;
  return result;
}

id TRSetupProxyDeviceRequestFunction_0()
{
  return (id)classTRSetupProxyDeviceRequest_0;
}

Class initTRSetupProxyAuthenticationRequest_0()
{
  if (TouchRemoteLibrary_sOnce_1 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_1, &__block_literal_global_324);
  }
  Class result = objc_getClass("TRSetupProxyAuthenticationRequest");
  classTRSetupProxyAuthenticationRequest_0 = (uint64_t)result;
  getTRSetupProxyAuthenticationRequestClass_0[0] = (uint64_t (*)())TRSetupProxyAuthenticationRequestFunction_0;
  return result;
}

id TRSetupProxyAuthenticationRequestFunction_0()
{
  return (id)classTRSetupProxyAuthenticationRequest_0;
}

Class initTRAnisetteDataProvider_0()
{
  if (TouchRemoteLibrary_sOnce_1 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_1, &__block_literal_global_324);
  }
  Class result = objc_getClass("TRAnisetteDataProvider");
  classTRAnisetteDataProvider_0 = (uint64_t)result;
  getTRAnisetteDataProviderClass_0[0] = (uint64_t (*)())TRAnisetteDataProviderFunction_0;
  return result;
}

id TRAnisetteDataProviderFunction_0()
{
  return (id)classTRAnisetteDataProvider_0;
}

Class initTRSetupAuthenticationResponse_0()
{
  if (TouchRemoteLibrary_sOnce_1 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_1, &__block_literal_global_324);
  }
  Class result = objc_getClass("TRSetupAuthenticationResponse");
  classTRSetupAuthenticationResponse_0 = (uint64_t)result;
  getTRSetupAuthenticationResponseClass_0[0] = (uint64_t (*)())TRSetupAuthenticationResponseFunction_0;
  return result;
}

id TRSetupAuthenticationResponseFunction_0()
{
  return (id)classTRSetupAuthenticationResponse_0;
}

Class initAKDevice_0()
{
  if (AuthKitLibrary_sOnce_0 != -1) {
    dispatch_once(&AuthKitLibrary_sOnce_0, &__block_literal_global_332);
  }
  Class result = objc_getClass("AKDevice");
  classAKDevice_0 = (uint64_t)result;
  getAKDeviceClass_0[0] = (uint64_t (*)())AKDeviceFunction_0;
  return result;
}

id AKDeviceFunction_0()
{
  return (id)classAKDevice_0;
}

void *__AuthKitLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit", 2);
  AuthKitLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initTRSetupProxyDeviceResponse_0()
{
  if (TouchRemoteLibrary_sOnce_1 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_1, &__block_literal_global_324);
  }
  Class result = objc_getClass("TRSetupProxyDeviceResponse");
  classTRSetupProxyDeviceResponse_0 = (uint64_t)result;
  getTRSetupProxyDeviceResponseClass_0[0] = (uint64_t (*)())TRSetupProxyDeviceResponseFunction_0;
  return result;
}

id TRSetupProxyDeviceResponseFunction_0()
{
  return (id)classTRSetupProxyDeviceResponse_0;
}

Class initAKAppleIDAuthenticationContext_0()
{
  if (AuthKitLibrary_sOnce_0 != -1) {
    dispatch_once(&AuthKitLibrary_sOnce_0, &__block_literal_global_332);
  }
  Class result = objc_getClass("AKAppleIDAuthenticationContext");
  classAKAppleIDAuthenticationContext_0 = (uint64_t)result;
  getAKAppleIDAuthenticationContextClass_0[0] = (uint64_t (*)())AKAppleIDAuthenticationContextFunction_0;
  return result;
}

id AKAppleIDAuthenticationContextFunction_0()
{
  return (id)classAKAppleIDAuthenticationContext_0;
}

Class initAKAppleIDAuthenticationController_0()
{
  if (AuthKitLibrary_sOnce_0 != -1) {
    dispatch_once(&AuthKitLibrary_sOnce_0, &__block_literal_global_332);
  }
  Class result = objc_getClass("AKAppleIDAuthenticationController");
  classAKAppleIDAuthenticationController_0 = (uint64_t)result;
  getAKAppleIDAuthenticationControllerClass_0[0] = (uint64_t (*)())AKAppleIDAuthenticationControllerFunction_0;
  return result;
}

id AKAppleIDAuthenticationControllerFunction_0()
{
  return (id)classAKAppleIDAuthenticationController_0;
}

id initValAKAuthenticationAlternateDSIDKey_0()
{
  if (AuthKitLibrary_sOnce_0 != -1) {
    dispatch_once(&AuthKitLibrary_sOnce_0, &__block_literal_global_332);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)AuthKitLibrary_sLib_0, "AKAuthenticationAlternateDSIDKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAKAuthenticationAlternateDSIDKey_0, *v0);
  }
  getAKAuthenticationAlternateDSIDKey_0[0] = (uint64_t (*)())AKAuthenticationAlternateDSIDKeyFunction_0;
  long long v1 = (void *)constantValAKAuthenticationAlternateDSIDKey_0;

  return v1;
}

id AKAuthenticationAlternateDSIDKeyFunction_0()
{
  return (id)constantValAKAuthenticationAlternateDSIDKey_0;
}

id initValAKAuthenticationUsernameKey_0()
{
  if (AuthKitLibrary_sOnce_0 != -1) {
    dispatch_once(&AuthKitLibrary_sOnce_0, &__block_literal_global_332);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)AuthKitLibrary_sLib_0, "AKAuthenticationUsernameKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAKAuthenticationUsernameKey_0, *v0);
  }
  getAKAuthenticationUsernameKey_0[0] = (uint64_t (*)())AKAuthenticationUsernameKeyFunction_0;
  long long v1 = (void *)constantValAKAuthenticationUsernameKey_0;

  return v1;
}

id AKAuthenticationUsernameKeyFunction_0()
{
  return (id)constantValAKAuthenticationUsernameKey_0;
}

id initValAKAuthenticationPasswordKey_0()
{
  if (AuthKitLibrary_sOnce_0 != -1) {
    dispatch_once(&AuthKitLibrary_sOnce_0, &__block_literal_global_332);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)AuthKitLibrary_sLib_0, "AKAuthenticationPasswordKey");
  if (v0) {
    objc_storeStrong((id *)&constantValAKAuthenticationPasswordKey_0, *v0);
  }
  getAKAuthenticationPasswordKey_0[0] = (uint64_t (*)())AKAuthenticationPasswordKeyFunction_0;
  long long v1 = (void *)constantValAKAuthenticationPasswordKey_0;

  return v1;
}

id AKAuthenticationPasswordKeyFunction_0()
{
  return (id)constantValAKAuthenticationPasswordKey_0;
}

id initValAAAccountClassPrimary()
{
  if (AppleAccountLibrary_sOnce_0 != -1) {
    dispatch_once(&AppleAccountLibrary_sOnce_0, &__block_literal_global_342);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)AppleAccountLibrary_sLib_0, "AAAccountClassPrimary");
  if (v0) {
    objc_storeStrong((id *)&constantValAAAccountClassPrimary, *v0);
  }
  getAAAccountClassPrimary = (uint64_t)AAAccountClassPrimaryFunction;
  long long v1 = (void *)constantValAAAccountClassPrimary;

  return v1;
}

id AAAccountClassPrimaryFunction()
{
  return (id)constantValAAAccountClassPrimary;
}

void *__AppleAccountLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount", 2);
  AppleAccountLibrary_sLib_0 = (uint64_t)result;
  return result;
}

id initValAAAccountClassFull()
{
  if (AppleAccountLibrary_sOnce_0 != -1) {
    dispatch_once(&AppleAccountLibrary_sOnce_0, &__block_literal_global_342);
  }
  dispatch_queue_t v0 = (id *)dlsym((void *)AppleAccountLibrary_sLib_0, "AAAccountClassFull");
  if (v0) {
    objc_storeStrong((id *)&constantValAAAccountClassFull, *v0);
  }
  getAAAccountClassFull = (uint64_t)AAAccountClassFullFunction;
  long long v1 = (void *)constantValAAAccountClassFull;

  return v1;
}

id AAAccountClassFullFunction()
{
  return (id)constantValAAAccountClassFull;
}

Class initSSMutableAuthenticationContext_0()
{
  if (StoreServicesLibrary_sOnce_0 != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce_0, &__block_literal_global_347_0);
  }
  Class result = objc_getClass("SSMutableAuthenticationContext");
  classSSMutableAuthenticationContext_0 = (uint64_t)result;
  getSSMutableAuthenticationContextClass_0[0] = (uint64_t (*)())SSMutableAuthenticationContextFunction_0;
  return result;
}

id SSMutableAuthenticationContextFunction_0()
{
  return (id)classSSMutableAuthenticationContext_0;
}

void *__StoreServicesLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices", 2);
  StoreServicesLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initSSAccountStore_0()
{
  if (StoreServicesLibrary_sOnce_0 != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce_0, &__block_literal_global_347_0);
  }
  Class result = objc_getClass("SSAccountStore");
  classSSAccountStore_0 = (uint64_t)result;
  getSSAccountStoreClass_0[0] = (uint64_t (*)())SSAccountStoreFunction_0;
  return result;
}

id SSAccountStoreFunction_0()
{
  return (id)classSSAccountStore_0;
}

Class initSSAuthenticateRequest_0()
{
  if (StoreServicesLibrary_sOnce_0 != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce_0, &__block_literal_global_347_0);
  }
  Class result = objc_getClass("SSAuthenticateRequest");
  classSSAuthenticateRequest_0 = (uint64_t)result;
  getSSAuthenticateRequestClass_0[0] = (uint64_t (*)())SSAuthenticateRequestFunction_0;
  return result;
}

id SSAuthenticateRequestFunction_0()
{
  return (id)classSSAuthenticateRequest_0;
}

_TtC7Sharing30AskToAirDropReceiverController *SFCreateAskToAirDropReceiverController(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [[_TtC7Sharing30AskToAirDropReceiverController alloc] initWithQueue:v1];

  return v2;
}

id SFAskToAirDropSubtitleForConnectionState(void *a1)
{
  if ((unint64_t)a1 <= 3)
  {
    a1 = SFLocalizedStringForKey(*((const __CFString **)&off_1E5BBFFD8 + (void)a1));
  }
  return a1;
}

__CFString *SFAskToAirDropTitleString()
{
  return SFLocalizedStringForKey(@"AirDrop");
}

void sub_1A5459EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A545A7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, os_activity_scope_state_s state)
{
}

void sub_1A545BC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A545C224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

id SFDeviceSetupHomeKitRMVEnabledForAllHomes(void *a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F1CA60] dictionary];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v15 = v1;
  uint64_t v3 = [v1 homes];
  uint64_t v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        id v9 = objc_msgSend(v8, "uniqueIdentifier", v14);
        id v10 = [v9 UUIDString];

        if ([v10 length])
        {
          Class v11 = [NSNumber numberWithBool:_SFDeviceSetupHomeKitRMVEnabledForHome(v8)];
          [v2 setObject:v11 forKeyedSubscript:v10];
        }
        else if (gLogCategory_SFDeviceSetupUtilities <= 90 {
               && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
        }
        {
          id v14 = v10;
          LogPrintF();
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v5);
  }

  id v12 = (void *)[v2 copy];

  return v12;
}

uint64_t _SFDeviceSetupHomeKitRMVEnabledForHome(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 currentUser];
  uint64_t v3 = v2;
  if (v2)
  {
    uint64_t v4 = [v2 userSettingsForHome:v1];
    uint64_t v5 = [v4 settings];

    if (v5)
    {
      uint64_t v6 = [v5 rootGroup];
      id v7 = _SFHomeKitSettingWithKeyPath(v6);

      if (v7)
      {
        id v8 = [v7 value];
        uint64_t v9 = [v8 BOOLValue];

        if (gLogCategory_SFDeviceSetupUtilities <= 50
          && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        if (gLogCategory_SFDeviceSetupUtilities <= 50
          && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        uint64_t v9 = 0;
      }
    }
    else
    {
      if (gLogCategory_SFDeviceSetupUtilities <= 50
        && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      uint64_t v9 = 0;
    }
  }
  else
  {
    if (gLogCategory_SFDeviceSetupUtilities <= 50
      && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v9 = 0;
  }

  return v9;
}

id SFDeviceSetupHomeKitInfo(void *a1)
{
  uint64_t v144 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = [v1 homes];
  if ([v2 count])
  {
    CFArrayRef v96 = v1;
    id v97 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v129 = 0u;
    long long v130 = 0u;
    long long v131 = 0u;
    long long v132 = 0u;
    id obj = v2;
    CFArrayRef v95 = v2;
    uint64_t v101 = [obj countByEnumeratingWithState:&v129 objects:v141 count:16];
    if (v101)
    {
      uint64_t v100 = *(void *)v130;
      p_inst_meths = &OBJC_PROTOCOL___NSXPCConnectionDelegate.inst_meths;
      uint64_t v4 = _TtC7Sharing23_SFXPCContainerRegistry;
      do
      {
        uint64_t v5 = 0;
        do
        {
          if (*(void *)v130 != v100) {
            objc_enumerationMutation(obj);
          }
          uint64_t v102 = v5;
          uint64_t v6 = *(void **)(*((void *)&v129 + 1) + 8 * v5);
          int64_t v103 = objc_msgSend(v6, "name", v92, v94);
          int v7 = *((_DWORD *)p_inst_meths + 658);
          if (v7 <= 30 && (v7 != -1 || _LogCategory_Initialize()))
          {
            v93 = v103;
            LogPrintF();
          }
          id v8 = objc_msgSend(v6, "uniqueIdentifier", v93);
          uint64_t v9 = [v8 UUIDString];

          if ([v103 length] && objc_msgSend(v9, "length"))
          {
            id v10 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
            [v10 setObject:v103 forKey:@"name"];
            xpc_object_t v99 = v9;
            [v10 setObject:v9 forKey:@"id"];
            id v115 = v6;
            Class v11 = [v115 mediaSystems];
            id v106 = v10;
            if ([v11 count])
            {
              id v12 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
              long long v137 = 0u;
              long long v138 = 0u;
              long long v139 = 0u;
              long long v140 = 0u;
              v113 = v11;
              id v121 = v11;
              uint64_t v13 = [v121 countByEnumeratingWithState:&v137 objects:v143 count:16];
              if (v13)
              {
                uint64_t v14 = v13;
                uint64_t v15 = *(void *)v138;
                v111 = v12;
                uint64_t v117 = *(void *)v138;
                do
                {
                  uint64_t v16 = 0;
                  uint64_t v119 = v14;
                  do
                  {
                    if (*(void *)v138 != v15) {
                      objc_enumerationMutation(v121);
                    }
                    long long v17 = *(void **)(*((void *)&v137 + 1) + 8 * v16);
                    long long v18 = objc_msgSend(v17, "configuredName", v92);
                    if ([v18 length]) {
                      [v17 configuredName];
                    }
                    else {
                    long long v19 = [v17 name];
                    }

                    id v20 = [v17 uniqueIdentifier];
                    uint64_t v21 = [v20 UUIDString];

                    uint64_t v22 = v21;
                    if ([v19 length] && objc_msgSend(v21, "length"))
                    {
                      id v23 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
                      [v23 setObject:v19 forKey:@"name"];
                      v125 = v22;
                      [v23 setObject:v22 forKey:@"id"];
                      uint64_t v24 = [v17 supportsAudioDestination];
                      uint64_t v25 = [NSNumber numberWithBool:v24];
                      [v23 setObject:v25 forKey:@"hksad"];

                      if (v24)
                      {
                        uint64_t v26 = [v17 audioDestinationIdentifier];
                        if (v26) {
                          [v23 setObject:v26 forKey:@"hkadi"];
                        }
                      }
                      v123 = v23;
                      id v127 = v19;
                      id v27 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
                      long long v133 = 0u;
                      long long v134 = 0u;
                      long long v135 = 0u;
                      long long v136 = 0u;
                      int v28 = [v17 components];
                      uint64_t v29 = [v28 countByEnumeratingWithState:&v133 objects:v142 count:16];
                      if (v29)
                      {
                        uint64_t v30 = v29;
                        uint64_t v31 = *(void *)v134;
                        do
                        {
                          for (uint64_t i = 0; i != v30; ++i)
                          {
                            if (*(void *)v134 != v31) {
                              objc_enumerationMutation(v28);
                            }
                            int v33 = [*(id *)(*((void *)&v133 + 1) + 8 * i) mediaProfile];
                            int v34 = [v33 accessory];

                            int v35 = [v34 uniqueIdentifier];
                            __int16 v36 = [v35 UUIDString];

                            if ([v36 length]) {
                              [v27 addObject:v36];
                            }
                          }
                          uint64_t v30 = [v28 countByEnumeratingWithState:&v133 objects:v142 count:16];
                        }
                        while (v30);
                      }

                      id v37 = [v17 components];
                      int v38 = [v37 firstObject];
                      int v39 = [v38 mediaProfile];
                      char v40 = [v39 accessory];

                      uint64_t v41 = [v40 homePodVariant];
                      if ((unint64_t)(v41 - 1) < 3) {
                        uint64_t v42 = v41;
                      }
                      else {
                        uint64_t v42 = 0;
                      }
                      uint64_t v43 = [NSNumber numberWithInt:v42];
                      [v123 setObject:v43 forKey:@"hkhpv"];

                      p_inst_meths = &OBJC_PROTOCOL___NSXPCConnectionDelegate.inst_meths;
                      long long v19 = v127;
                      if (gLogCategory_SFDeviceSetupUtilities <= 30
                        && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
                      {
                        v94 = [v115 name];
                        id v92 = v127;
                        LogPrintF();
                      }
                      id v45 = objc_msgSend(v27, "allObjects", v92);
                      [v123 setObject:v45 forKey:@"hkais"];

                      [v111 addObject:v123];
                      id v12 = v111;

                      uint64_t v4 = _TtC7Sharing23_SFXPCContainerRegistry;
                      uint64_t v15 = v117;
                      uint64_t v14 = v119;
                      uint64_t v22 = v125;
                    }
                    else
                    {
                      int v44 = *((_DWORD *)p_inst_meths + 658);
                      if (v44 <= 90 && (v44 != -1 || _LogCategory_Initialize()))
                      {
                        id v92 = v19;
                        v94 = v21;
                        LogPrintF();
                      }
                    }

                    ++v16;
                  }
                  while (v16 != v14);
                  uint64_t v14 = [v121 countByEnumeratingWithState:&v137 objects:v143 count:16];
                }
                while (v14);
              }

              Class v11 = v113;
              id v10 = v106;
            }
            else
            {
              id v12 = 0;
            }

            if ([v12 count]) {
              [v10 setObject:v12 forKey:@"hkms"];
            }
            id v104 = v115;
            int v47 = [v104 rooms];
            if ([v47 count])
            {
              id v48 = v10;
              id v107 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
              long long v133 = 0u;
              long long v134 = 0u;
              long long v135 = 0u;
              long long v136 = 0u;
              id v110 = v47;
              uint64_t v116 = [v110 countByEnumeratingWithState:&v133 objects:v142 count:16];
              if (v116)
              {
                id v112 = v12;
                uint64_t v114 = *(void *)v134;
                v105 = v47;
                do
                {
                  for (uint64_t j = 0; j != v116; uint64_t j = v57 + 1)
                  {
                    if (*(void *)v134 != v114) {
                      objc_enumerationMutation(v110);
                    }
                    uint64_t v118 = j;
                    long long v50 = *(void **)(*((void *)&v133 + 1) + 8 * j);
                    long long v51 = objc_msgSend(v50, "name", v92);
                    long long v52 = [v50 uniqueIdentifier];
                    long long v53 = [v52 UUIDString];

                    long long v54 = v51;
                    if ([v51 length] && objc_msgSend(v53, "length"))
                    {
                      int v55 = *((_DWORD *)p_inst_meths + 658);
                      if (v55 <= 30 && (v55 != -1 || _LogCategory_Initialize()))
                      {
                        [v104 name];
                        v94 = id v92 = v51;
                        LogPrintF();

                        long long v54 = v51;
                      }
                      id v58 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
                      [v58 setObject:v54 forKey:@"name"];
                      [v58 setObject:v53 forKey:@"id"];
                      id v120 = v50;
                      long long v59 = [v120 accessories];
                      if ([v59 count])
                      {
                        CFTypeID v109 = v54;
                        id v122 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
                        long long v137 = 0u;
                        long long v138 = 0u;
                        long long v139 = 0u;
                        long long v140 = 0u;
                        CFDictionaryRef v108 = v59;
                        id v128 = v59;
                        uint64_t v60 = [v128 countByEnumeratingWithState:&v137 objects:v143 count:16];
                        if (v60)
                        {
                          uint64_t v61 = v60;
                          uint64_t v62 = *(void *)v138;
                          uint64_t v124 = *(void *)v138;
                          do
                          {
                            uint64_t v63 = 0;
                            uint64_t v126 = v61;
                            do
                            {
                              if (*(void *)v138 != v62) {
                                objc_enumerationMutation(v128);
                              }
                              uint64_t v64 = *(void **)(*((void *)&v137 + 1) + 8 * v63);
                              int v65 = objc_msgSend(v64, "category", v92);
                              int v66 = [v65 categoryType];

                              if ([v66 isEqualToString:((uint64_t (__cdecl *)())v4[22].isa)()])
                              {
                                id v67 = v58;
                                v68 = v53;
                                uint64_t v69 = [v64 name];
                                uint64_t v70 = [v64 uniqueIdentifier];
                                id v71 = [v70 UUIDString];

                                if ([v69 length] && objc_msgSend(v71, "length"))
                                {
                                  int v72 = *((_DWORD *)p_inst_meths + 658);
                                  if (v72 <= 30 && (v72 != -1 || _LogCategory_Initialize()))
                                  {
                                    [v120 name];
                                    v94 = id v92 = v69;
                                    LogPrintF();
                                  }
                                  id v74 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
                                  [v74 setObject:v69 forKey:@"name"];
                                  [v74 setObject:v71 forKey:@"id"];
                                  [v74 setObject:v66 forKey:@"hkac"];
                                  uint64_t v75 = [v64 supportsAudioDestination];
                                  v76 = [NSNumber numberWithBool:v75];
                                  [v74 setObject:v76 forKey:@"hksad"];

                                  if (v75)
                                  {
                                    v77 = [v64 audioDestinationIdentifier];
                                    if (v77) {
                                      [v74 setObject:v77 forKey:@"hkadi"];
                                    }
                                  }
                                  uint64_t v78 = objc_msgSend(v64, "homePodVariant", v92);
                                  if ((unint64_t)(v78 - 1) < 3) {
                                    uint64_t v79 = v78;
                                  }
                                  else {
                                    uint64_t v79 = 0;
                                  }
                                  CFArrayRef v80 = [NSNumber numberWithInt:v79];
                                  [v74 setObject:v80 forKey:@"hkhpv"];

                                  [v122 addObject:v74];
                                  p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSXPCConnectionDelegate + 24);
                                  uint64_t v4 = _TtC7Sharing23_SFXPCContainerRegistry;
                                }
                                else
                                {
                                  int v73 = *((_DWORD *)p_inst_meths + 658);
                                  if (v73 <= 90 && (v73 != -1 || _LogCategory_Initialize()))
                                  {
                                    id v92 = v69;
                                    v94 = v71;
                                    LogPrintF();
                                  }
                                }

                                long long v53 = v68;
                                id v58 = v67;
                                uint64_t v62 = v124;
                                uint64_t v61 = v126;
                              }

                              ++v63;
                            }
                            while (v61 != v63);
                            uint64_t v61 = [v128 countByEnumeratingWithState:&v137 objects:v143 count:16];
                          }
                          while (v61);
                        }

                        int v47 = v105;
                        id v48 = v106;
                        id v12 = v112;
                        long long v59 = v108;
                        long long v54 = v109;
                        v81 = v122;
                      }
                      else
                      {
                        v81 = 0;
                      }

                      uint64_t v57 = v118;
                      if ([v81 count]) {
                        [v58 setObject:v81 forKey:@"hkas"];
                      }
                      objc_msgSend(v107, "addObject:", v58, v92);
                    }
                    else
                    {
                      int v56 = *((_DWORD *)p_inst_meths + 658);
                      uint64_t v57 = v118;
                      if (v56 <= 90 && (v56 != -1 || _LogCategory_Initialize()))
                      {
                        id v92 = v51;
                        v94 = v53;
                        LogPrintF();
                      }
                    }
                  }
                  uint64_t v116 = [v110 countByEnumeratingWithState:&v133 objects:v142 count:16];
                }
                while (v116);
              }

              v82 = (void *)[v107 copy];
              id v10 = v48;
            }
            else
            {
              v82 = 0;
            }

            if ([v82 count]) {
              [v10 setObject:v82 forKey:@"hkrs"];
            }
            [NSNumber numberWithBool:_SFDeviceSetupHomeKitRMVEnabledForHome(v104)];
            v84 = CFArrayRef v83 = v10;
            [v83 setObject:v84 forKey:@"hkrmve"];

            [v97 addObject:v83];
            uint64_t v9 = v99;
          }
          else
          {
            int v46 = *((_DWORD *)p_inst_meths + 658);
            if (v46 <= 90 && (v46 != -1 || _LogCategory_Initialize()))
            {
              id v92 = v103;
              v94 = v9;
              LogPrintF();
            }
          }

          uint64_t v5 = v102 + 1;
        }
        while (v102 + 1 != v101);
        uint64_t v101 = [obj countByEnumeratingWithState:&v129 objects:v141 count:16];
      }
      while (v101);
    }

    id v85 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    [v85 setObject:v97 forKey:@"hkhs"];
    v86 = [v96 currentHome];
    CFArrayRef v87 = [v86 uniqueIdentifier];
    CFArrayRef v88 = [v87 UUIDString];

    if ([v88 length]) {
      [v85 setObject:v88 forKey:@"hkci"];
    }
    v89 = _SFDeviceSetupHomeKitCurrentUserInfoFromAllHomes(obj);
    if ([v89 count]) {
      [v85 setObject:v89 forKey:@"hkcuis"];
    }
    v90 = objc_msgSend(v85, "copy", v92);

    uint64_t v2 = v95;
    id v1 = v96;
  }
  else
  {
    if (gLogCategory_SFDeviceSetupUtilities <= 50
      && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v90 = (void *)MEMORY[0x1E4F1CC08];
  }

  return v90;
}

id _SFDeviceSetupHomeKitCurrentUserInfoFromAllHomes(void *a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v20;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v20 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v19 + 1) + 8 * v7);
        uint64_t v9 = objc_msgSend(v8, "currentUser", v17);
        if (v9)
        {
          id v10 = [v8 uniqueIdentifier];
          Class v11 = [v10 UUIDString];

          id v12 = [v9 uniqueIdentifier];
          uint64_t v13 = [v12 UUIDString];

          if (gLogCategory_SFDeviceSetupUtilities <= 30
            && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
          {
            long long v17 = v11;
            long long v18 = v13;
            LogPrintF();
          }
          objc_msgSend(v2, "setObject:forKeyedSubscript:", v13, v11, v17, v18, (void)v19);
        }
        else if (gLogCategory_SFDeviceSetupUtilities <= 50 {
               && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
        }
        {
          long long v17 = v8;
          LogPrintF();
        }

        ++v7;
      }
      while (v5 != v7);
      uint64_t v14 = [v3 countByEnumeratingWithState:&v19 objects:v23 count:16];
      uint64_t v5 = v14;
    }
    while (v14);
  }

  uint64_t v15 = (void *)[v2 copy];

  return v15;
}

id SFDeviceSetupHomeKitCurrentUserIdentifiers(void *a1)
{
  id v1 = a1;
  id v2 = [v1 homes];
  if ([v2 count])
  {
    id v3 = _SFDeviceSetupHomeKitCurrentUserInfoFromAllHomes(v2);
  }
  else
  {
    if (gLogCategory_SFDeviceSetupUtilities <= 50
      && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    id v3 = (void *)MEMORY[0x1E4F1CC08];
  }

  return v3;
}

id SFDeviceSetupDeviceInfo()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v1 = [NSNumber numberWithUnsignedChar:SFDeviceClassCodeGet()];
  [v0 setObject:v1 forKeyedSubscript:@"dclass"];

  id v2 = (void *)GestaltCopyAnswer();
  if (v2)
  {
    [v0 setObject:v2 forKeyedSubscript:@"dname"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 60 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    uint64_t v7 = 0;
    LogPrintF();
  }
  id v3 = (void *)GestaltCopyAnswer();

  if (v3)
  {
    [v0 setObject:v3 forKeyedSubscript:@"model"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 60 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    uint64_t v7 = 0;
    LogPrintF();
  }
  uint64_t v4 = (void *)GestaltCopyAnswer();

  if (v4)
  {
    [v0 setObject:v4 forKeyedSubscript:@"osBuild"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 60 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    uint64_t v7 = 0;
    LogPrintF();
  }
  uint64_t v5 = objc_msgSend(v0, "copy", v7);

  return v5;
}

id SFDeviceSetupSiriInfo(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v3 = [v1 languageCode];
  if (v3)
  {
    [v2 setObject:v3 forKeyedSubscript:@"siriLL"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 60 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  uint64_t v4 = [v1 outputVoice];
  uint64_t v5 = [v4 languageCode];

  if (v5)
  {
    [v2 setObject:v5 forKeyedSubscript:@"siriVL"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 60 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  uint64_t v6 = [v4 gender];
  if (v6)
  {
    uint64_t v7 = [NSNumber numberWithInteger:v6];
    [v2 setObject:v7 forKeyedSubscript:@"siriVG"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 60 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    LogPrintF();
  }
  int v8 = [v1 suppressAssistantOptIn];
  int v9 = [v1 assistantIsEnabled];
  if ((v9 & 1) != 0 || v8)
  {
    id v10 = [NSNumber numberWithInt:v9 ^ 1u];
    [v2 setObject:v10 forKeyedSubscript:@"siriD"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 40 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    LogPrintF();
  }
  int v11 = objc_msgSend(v1, "suppressDictationOptIn", v22, v24);
  uint64_t v12 = [v1 dictationIsEnabled];
  if ((v12 & 1) != 0 || v11)
  {
    uint64_t v13 = [NSNumber numberWithBool:v12];
    [v2 setObject:v13 forKeyedSubscript:@"siriDE"];
  }
  else if (gLogCategory_SFDeviceSetupUtilities <= 40 {
         && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  }
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    LogPrintF();
  }
  uint64_t v14 = objc_msgSend(v1, "siriDataSharingOptInStatus", v23, v25);
  if (v14 == 2)
  {
    uint64_t v15 = MEMORY[0x1E4F1CC28];
    goto LABEL_35;
  }
  if (v14 == 1)
  {
    uint64_t v15 = MEMORY[0x1E4F1CC38];
LABEL_35:
    [v2 setObject:v15 forKeyedSubscript:@"siriDS"];
    goto LABEL_36;
  }
  if (gLogCategory_SFDeviceSetupUtilities <= 40
    && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_36:
  uint64_t v16 = [NSNumber numberWithBool:softLinkAFPreferencesTypeToSiriEnabled[0]()];
  [v2 setObject:v16 forKeyedSubscript:@"siriTTS"];

  long long v17 = [(Class)getVTPreferencesClass_1[0]() sharedPreferences];
  uint64_t v18 = [v17 voiceTriggerEnabled];

  long long v19 = [NSNumber numberWithBool:v18];
  [v2 setObject:v19 forKeyedSubscript:@"siriVP"];

  long long v20 = (void *)[v2 copy];

  return v20;
}

id SFDeviceSetupAppleTVLocationAuthorizationInfo()
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (SFDeviceSetupAppleTVLocationAuthorizationInfo_onceToken != -1) {
    dispatch_once(&SFDeviceSetupAppleTVLocationAuthorizationInfo_onceToken, &__block_literal_global_42);
  }
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v1 = (void *)softLinkCLCopyAppsUsingLocation[0]();
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = (id)SFDeviceSetupAppleTVLocationAuthorizationInfo_kLocationServicesIdentifiers;
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v15 + 1) + 8 * i);
        int v8 = objc_msgSend(v1, "objectForKey:", v7, v14);
        if (v8)
        {
          char v9 = [(Class)getCLLocationManagerClass[0]() entityAuthorizationForLocationDictionary:v8];
          uint64_t v10 = v9 & 1;
          if ((v9 & 2) != 0) {
            uint64_t v10 = 2;
          }
          if ((v9 & 4) != 0) {
            uint64_t v11 = 3;
          }
          else {
            uint64_t v11 = v10;
          }
          uint64_t v12 = [NSNumber numberWithUnsignedInteger:v11];
          [v0 setObject:v12 forKey:v7];
        }
        else if (gLogCategory_SFDeviceSetupUtilities <= 90 {
               && (gLogCategory_SFDeviceSetupUtilities != -1 || _LogCategory_Initialize()))
        }
        {
          uint64_t v14 = v7;
          LogPrintF();
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v4);
  }

  return v0;
}

void __SFDeviceSetupAppleTVLocationAuthorizationInfo_block_invoke()
{
  id v0 = (void *)SFDeviceSetupAppleTVLocationAuthorizationInfo_kLocationServicesIdentifiers;
  SFDeviceSetupAppleTVLocationAuthorizationInfo_kLocationServicesIdentifiers = (uint64_t)&unk_1EFA0A070;
}

uint64_t _SFHomePodVariantForHMHomePodVariant(uint64_t result)
{
  if ((unint64_t)(result - 1) < 3) {
    return result;
  }
  else {
    return 0;
  }
}

id _SFHomeKitSettingWithKeyPath(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v2 = [v1 settings];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v22;
    while (2)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v22 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        int v8 = [v7 keyPath];
        char v9 = [v8 isEqualToString:@"root.siri.identifyVoice"];

        if (v9)
        {
          id v14 = v7;
          goto LABEL_19;
        }
      }
      uint64_t v4 = [v2 countByEnumeratingWithState:&v21 objects:v26 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = objc_msgSend(v1, "groups", 0);
  uint64_t v10 = [v2 countByEnumeratingWithState:&v17 objects:v25 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v18;
LABEL_11:
    uint64_t v13 = 0;
    while (1)
    {
      if (*(void *)v18 != v12) {
        objc_enumerationMutation(v2);
      }
      _SFHomeKitSettingWithKeyPath(*(void *)(*((void *)&v17 + 1) + 8 * v13));
      id v14 = (id)objc_claimAutoreleasedReturnValue();
      if (v14) {
        break;
      }
      if (v11 == ++v13)
      {
        uint64_t v11 = [v2 countByEnumeratingWithState:&v17 objects:v25 count:16];
        if (v11) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
LABEL_19:
    long long v15 = v14;
  }
  else
  {
LABEL_17:
    long long v15 = 0;
  }

  return v15;
}

uint64_t initAFPreferencesTypeToSiriEnabled()
{
  if (AssistantServicesLibrary_sOnce_0 != -1) {
    dispatch_once(&AssistantServicesLibrary_sOnce_0, &__block_literal_global_226);
  }
  id v0 = (uint64_t (*)())dlsym((void *)AssistantServicesLibrary_sLib_0, "AFPreferencesTypeToSiriEnabled");
  softLinkAFPreferencesTypeToSiriEnabled[0] = v0;

  return v0();
}

void *__AssistantServicesLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices", 2);
  AssistantServicesLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initVTPreferences_1()
{
  if (VoiceTriggerLibrary_sOnce_1 != -1) {
    dispatch_once(&VoiceTriggerLibrary_sOnce_1, &__block_literal_global_230);
  }
  Class result = objc_getClass("VTPreferences");
  classVTPreferences_1 = (uint64_t)result;
  getVTPreferencesClass_1[0] = (uint64_t (*)())VTPreferencesFunction_1;
  return result;
}

id VTPreferencesFunction_1()
{
  return (id)classVTPreferences_1;
}

void *__VoiceTriggerLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/VoiceTrigger.framework/VoiceTrigger", 2);
  VoiceTriggerLibrary_sLib_1 = (uint64_t)result;
  return result;
}

uint64_t initCLCopyAppsUsingLocation()
{
  if (CoreLocationLibrary_sOnce != -1) {
    dispatch_once(&CoreLocationLibrary_sOnce, &__block_literal_global_234);
  }
  id v0 = (uint64_t (*)())dlsym((void *)CoreLocationLibrary_sLib, "CLCopyAppsUsingLocation");
  softLinkCLCopyAppsUsingLocation[0] = v0;

  return v0();
}

void *__CoreLocationLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/CoreLocation.framework/CoreLocation", 2);
  CoreLocationLibrary_sLib = (uint64_t)result;
  return result;
}

Class initCLLocationManager()
{
  if (CoreLocationLibrary_sOnce != -1) {
    dispatch_once(&CoreLocationLibrary_sOnce, &__block_literal_global_234);
  }
  Class result = objc_getClass("CLLocationManager");
  classCLLocationManager = (uint64_t)result;
  getCLLocationManagerClass[0] = (uint64_t (*)())CLLocationManagerFunction;
  return result;
}

id CLLocationManagerFunction()
{
  return (id)classCLLocationManager;
}

uint64_t initValHMAccessoryCategoryTypeHomePod()
{
  if (HomeKitLibrary_sOnce_1 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_1, &__block_literal_global_258);
  }
  id v0 = (uint64_t *)dlsym((void *)HomeKitLibrary_sLib_1, "HMAccessoryCategoryTypeHomePod");
  if (v0)
  {
    uint64_t result = *v0;
    constantValHMAccessoryCategoryTypeHomePod = result;
  }
  else
  {
    uint64_t result = constantValHMAccessoryCategoryTypeHomePod;
  }
  getHMAccessoryCategoryTypeHomePod[0] = HMAccessoryCategoryTypeHomePodFunction;
  return result;
}

uint64_t HMAccessoryCategoryTypeHomePodFunction()
{
  return constantValHMAccessoryCategoryTypeHomePod;
}

void *__HomeKitLibrary_block_invoke_1()
{
  uint64_t result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib_1 = (uint64_t)result;
  return result;
}

Class initACAccountStore_2()
{
  if (AccountsLibrary_sOnce_2 != -1) {
    dispatch_once(&AccountsLibrary_sOnce_2, &__block_literal_global_43);
  }
  Class result = objc_getClass("ACAccountStore");
  classACAccountStore_2 = (uint64_t)result;
  getACAccountStoreClass_2[0] = (uint64_t (*)())ACAccountStoreFunction_2;
  return result;
}

id ACAccountStoreFunction_2()
{
  return (id)classACAccountStore_2;
}

void *__AccountsLibrary_block_invoke_2()
{
  Class result = dlopen("/System/Library/Frameworks/Accounts.framework/Accounts", 2);
  AccountsLibrary_sLib_2 = (uint64_t)result;
  return result;
}

Class initCDPContext()
{
  if (CoreCDPLibrary_sOnce != -1) {
    dispatch_once(&CoreCDPLibrary_sOnce, &__block_literal_global_384);
  }
  Class result = objc_getClass("CDPContext");
  classCDPContext = (uint64_t)result;
  getCDPContextClass[0] = (uint64_t (*)())CDPContextFunction;
  return result;
}

id CDPContextFunction()
{
  return (id)classCDPContext;
}

void *__CoreCDPLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP", 2);
  CoreCDPLibrary_sLib = (uint64_t)result;
  return result;
}

Class initCDPStateController()
{
  if (CoreCDPLibrary_sOnce != -1) {
    dispatch_once(&CoreCDPLibrary_sOnce, &__block_literal_global_384);
  }
  Class result = objc_getClass("CDPStateController");
  classCDPStateController = (uint64_t)result;
  getCDPStateControllerClass[0] = (uint64_t (*)())CDPStateControllerFunction;
  return result;
}

id CDPStateControllerFunction()
{
  return (id)classCDPStateController;
}

Class initCDPUIController()
{
  if (CoreCDPUILibrary_sOnce != -1) {
    dispatch_once(&CoreCDPUILibrary_sOnce, &__block_literal_global_389);
  }
  Class result = objc_getClass("CDPUIController");
  classCDPUIController = (uint64_t)result;
  getCDPUIControllerClass[0] = (uint64_t (*)())CDPUIControllerFunction;
  return result;
}

id CDPUIControllerFunction()
{
  return (id)classCDPUIController;
}

void *__CoreCDPUILibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI", 2);
  CoreCDPUILibrary_sLib = (uint64_t)result;
  return result;
}

void sub_1A5464D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

Class initTROperationQueue_0()
{
  if (TouchRemoteLibrary_sOnce_2 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_2, &__block_literal_global_789);
  }
  Class result = objc_getClass("TROperationQueue");
  classTROperationQueue_0 = (uint64_t)result;
  getTROperationQueueClass_0[0] = (uint64_t (*)())TROperationQueueFunction_0;
  return result;
}

id TROperationQueueFunction_0()
{
  return (id)classTROperationQueue_0;
}

void *__TouchRemoteLibrary_block_invoke_2()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib_2 = (uint64_t)result;
  return result;
}

Class initHMMutableHomeManagerConfiguration()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  Class result = objc_getClass("HMMutableHomeManagerConfiguration");
  classHMMutableHomeManagerConfiguration = (uint64_t)result;
  getHMMutableHomeManagerConfigurationClass = (uint64_t (*)())HMMutableHomeManagerConfigurationFunction;
  return result;
}

id HMMutableHomeManagerConfigurationFunction()
{
  return (id)classHMMutableHomeManagerConfiguration;
}

void *__HomeKitLibrary_block_invoke_2()
{
  Class result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib_2 = (uint64_t)result;
  return result;
}

Class initHMHomeManager_0()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  Class result = objc_getClass("HMHomeManager");
  classHMHomeManager_0 = (uint64_t)result;
  getHMHomeManagerClass_0[0] = (uint64_t (*)())HMHomeManagerFunction_0;
  return result;
}

id HMHomeManagerFunction_0()
{
  return (id)classHMHomeManager_0;
}

Class initHMAccessoryBrowser()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  Class result = objc_getClass("HMAccessoryBrowser");
  classHMAccessoryBrowser = (uint64_t)result;
  getHMAccessoryBrowserClass[0] = (uint64_t (*)())HMAccessoryBrowserFunction;
  return result;
}

id HMAccessoryBrowserFunction()
{
  return (id)classHMAccessoryBrowser;
}

Class initHMDeviceSetupOperation()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  Class result = objc_getClass("HMDeviceSetupOperation");
  classHMDeviceSetupOperation = (uint64_t)result;
  getHMDeviceSetupOperationClass[0] = (uint64_t (*)())HMDeviceSetupOperationFunction;
  return result;
}

id HMDeviceSetupOperationFunction()
{
  return (id)classHMDeviceSetupOperation;
}

Class initHMMediaSystemBuilder()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  Class result = objc_getClass("HMMediaSystemBuilder");
  classHMMediaSystemBuilder = (uint64_t)result;
  getHMMediaSystemBuilderClass[0] = (uint64_t (*)())HMMediaSystemBuilderFunction;
  return result;
}

id HMMediaSystemBuilderFunction()
{
  return (id)classHMMediaSystemBuilder;
}

Class initHMMediaSystemRole()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  Class result = objc_getClass("HMMediaSystemRole");
  classHMMediaSystemRole = (uint64_t)result;
  getHMMediaSystemRoleClass[0] = (uint64_t (*)())HMMediaSystemRoleFunction;
  return result;
}

id HMMediaSystemRoleFunction()
{
  return (id)classHMMediaSystemRole;
}

Class initHMMediaSystemComponent()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  Class result = objc_getClass("HMMediaSystemComponent");
  classHMMediaSystemComponent = (uint64_t)result;
  getHMMediaSystemComponentClass[0] = (uint64_t (*)())HMMediaSystemComponentFunction;
  return result;
}

id HMMediaSystemComponentFunction()
{
  return (id)classHMMediaSystemComponent;
}

id initValHMAccessoryCategoryTypeHomePod_0()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  id v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2, "HMAccessoryCategoryTypeHomePod");
  if (v0) {
    objc_storeStrong((id *)&constantValHMAccessoryCategoryTypeHomePod_0, *v0);
  }
  getHMAccessoryCategoryTypeHomePod_0[0] = (uint64_t (*)())HMAccessoryCategoryTypeHomePodFunction_0;
  id v1 = (void *)constantValHMAccessoryCategoryTypeHomePod_0;

  return v1;
}

id HMAccessoryCategoryTypeHomePodFunction_0()
{
  return (id)constantValHMAccessoryCategoryTypeHomePod_0;
}

id initValHMAccessoryCategoryTypeAppleTV()
{
  if (HomeKitLibrary_sOnce_2 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_2, &__block_literal_global_793);
  }
  id v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_2, "HMAccessoryCategoryTypeAppleTV");
  if (v0) {
    objc_storeStrong((id *)&constantValHMAccessoryCategoryTypeAppleTV, *v0);
  }
  getHMAccessoryCategoryTypeAppleTV[0] = (uint64_t (*)())HMAccessoryCategoryTypeAppleTVFunction;
  id v1 = (void *)constantValHMAccessoryCategoryTypeAppleTV;

  return v1;
}

id HMAccessoryCategoryTypeAppleTVFunction()
{
  return (id)constantValHMAccessoryCategoryTypeAppleTV;
}

Class initASDSystemAppRequest()
{
  if (AppStoreDaemonLibrary_sOnce != -1) {
    dispatch_once(&AppStoreDaemonLibrary_sOnce, &__block_literal_global_805);
  }
  Class result = objc_getClass("ASDSystemAppRequest");
  classASDSystemAppRequest = (uint64_t)result;
  getASDSystemAppRequestClass[0] = (uint64_t (*)())ASDSystemAppRequestFunction;
  return result;
}

id ASDSystemAppRequestFunction()
{
  return (id)classASDSystemAppRequest;
}

void *__AppStoreDaemonLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon", 2);
  AppStoreDaemonLibrary_sLib = (uint64_t)result;
  return result;
}

const char *WiFiSetupStateToString(int a1)
{
  if ((a1 - 11) > 0xB) {
    return "?";
  }
  else {
    return off_1E5BC0478[a1 - 11];
  }
}

uint64_t initVTIsHardwareDecodeSupported(uint64_t a1)
{
  if (VideoToolboxLibrary_sOnce != -1) {
    dispatch_once(&VideoToolboxLibrary_sOnce, &__block_literal_global_243);
  }
  id v2 = (uint64_t (*)())dlsym((void *)VideoToolboxLibrary_sLib, "VTIsHardwareDecodeSupported");
  softLinkVTIsHardwareDecodeSupported[0] = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

void *__VideoToolboxLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/VideoToolbox.framework/VideoToolbox", 2);
  VideoToolboxLibrary_sLib = (uint64_t)result;
  return result;
}

Class initHMDeviceSetupOperationHandler_0()
{
  if (HomeKitLibrary_sOnce_3 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_3, &__block_literal_global_380);
  }
  Class result = objc_getClass("HMDeviceSetupOperationHandler");
  classHMDeviceSetupOperationHandler_0 = (uint64_t)result;
  getHMDeviceSetupOperationHandlerClass_0[0] = (uint64_t (*)())HMDeviceSetupOperationHandlerFunction_0;
  return result;
}

id HMDeviceSetupOperationHandlerFunction_0()
{
  return (id)classHMDeviceSetupOperationHandler_0;
}

void *__HomeKitLibrary_block_invoke_3()
{
  Class result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib_3 = (uint64_t)result;
  return result;
}

Class initAISRepairController()
{
  if (AppleIDSetupLibrary_sOnce != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce, &__block_literal_global_384_0);
  }
  Class result = objc_getClass("AISRepairController");
  classAISRepairController = (uint64_t)result;
  getAISRepairControllerClass = (uint64_t (*)())AISRepairControllerFunction;
  return result;
}

id AISRepairControllerFunction()
{
  return (id)classAISRepairController;
}

void *__AppleIDSetupLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppleIDSetup.framework/AppleIDSetup", 2);
  AppleIDSetupLibrary_sLib = (uint64_t)result;
  return result;
}

Class initAISRepairContext()
{
  if (AppleIDSetupLibrary_sOnce != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce, &__block_literal_global_384_0);
  }
  Class result = objc_getClass("AISRepairContext");
  classAISRepairContext = (uint64_t)result;
  getAISRepairContextClass = (uint64_t (*)())AISRepairContextFunction;
  return result;
}

id AISRepairContextFunction()
{
  return (id)classAISRepairContext;
}

Class initAKAccountManager()
{
  if (AuthKitLibrary_sOnce_1 != -1) {
    dispatch_once(&AuthKitLibrary_sOnce_1, &__block_literal_global_389_0);
  }
  Class result = objc_getClass("AKAccountManager");
  classAKAccountManager = (uint64_t)result;
  getAKAccountManagerClass = (uint64_t (*)())AKAccountManagerFunction;
  return result;
}

id AKAccountManagerFunction()
{
  return (id)classAKAccountManager;
}

void *__AuthKitLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit", 2);
  AuthKitLibrary_sLib_1 = (uint64_t)result;
  return result;
}

Class initACAccountStore_3()
{
  if (AccountsLibrary_sOnce_3 != -1) {
    dispatch_once(&AccountsLibrary_sOnce_3, &__block_literal_global_393);
  }
  Class result = objc_getClass("ACAccountStore");
  classACAccountStore_3 = (uint64_t)result;
  getACAccountStoreClass_3[0] = (uint64_t (*)())ACAccountStoreFunction_3;
  return result;
}

id ACAccountStoreFunction_3()
{
  return (id)classACAccountStore_3;
}

void *__AccountsLibrary_block_invoke_3()
{
  Class result = dlopen("/System/Library/Frameworks/Accounts.framework/Accounts", 2);
  AccountsLibrary_sLib_3 = (uint64_t)result;
  return result;
}

uint64_t initIDSCopyLocalDeviceUniqueID()
{
  if (IDSLibrary_sOnce_0 != -1) {
    dispatch_once(&IDSLibrary_sOnce_0, &__block_literal_global_397);
  }
  id v0 = (uint64_t (*)())dlsym((void *)IDSLibrary_sLib_0, "IDSCopyLocalDeviceUniqueID");
  softLinkIDSCopyLocalDeviceUniqueID[0] = v0;

  return v0();
}

void *__IDSLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/IDS.framework/IDS", 2);
  IDSLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initFLFollowUpController()
{
  if (CoreFollowUpLibrary_sOnce != -1) {
    dispatch_once(&CoreFollowUpLibrary_sOnce, &__block_literal_global_401);
  }
  Class result = objc_getClass("FLFollowUpController");
  classFLFollowUpController = (uint64_t)result;
  getFLFollowUpControllerClass[0] = (uint64_t (*)())FLFollowUpControllerFunction;
  return result;
}

id FLFollowUpControllerFunction()
{
  return (id)classFLFollowUpController;
}

void *__CoreFollowUpLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp", 2);
  CoreFollowUpLibrary_sLib = (uint64_t)result;
  return result;
}

Class initTROperationQueue_1()
{
  if (TouchRemoteLibrary_sOnce_3 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_3, &__block_literal_global_47);
  }
  Class result = objc_getClass("TROperationQueue");
  classTROperationQueue_1 = (uint64_t)result;
  getTROperationQueueClass_1[0] = (uint64_t (*)())TROperationQueueFunction_1;
  return result;
}

id TROperationQueueFunction_1()
{
  return (id)classTROperationQueue_1;
}

void *__TouchRemoteLibrary_block_invoke_3()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib_3 = (uint64_t)result;
  return result;
}

Class initTRAuthenticationOperation_0()
{
  if (TouchRemoteLibrary_sOnce_3 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_3, &__block_literal_global_47);
  }
  Class result = objc_getClass("TRAuthenticationOperation");
  classTRAuthenticationOperation_0 = (uint64_t)result;
  getTRAuthenticationOperationClass_0[0] = (uint64_t (*)())TRAuthenticationOperationFunction_0;
  return result;
}

id TRAuthenticationOperationFunction_0()
{
  return (id)classTRAuthenticationOperation_0;
}

id initValTRAuthenticationOperationUnauthenticatedServicesKey_0()
{
  if (TouchRemoteLibrary_sOnce_3 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_3, &__block_literal_global_47);
  }
  id v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_3, "TRAuthenticationOperationUnauthenticatedServicesKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRAuthenticationOperationUnauthenticatedServicesKey_0, *v0);
  }
  getTRAuthenticationOperationUnauthenticatedServicesKey_0[0] = (uint64_t (*)())TRAuthenticationOperationUnauthenticatedServicesKeyFunction_0;
  id v1 = (void *)constantValTRAuthenticationOperationUnauthenticatedServicesKey_0;

  return v1;
}

id TRAuthenticationOperationUnauthenticatedServicesKeyFunction_0()
{
  return (id)constantValTRAuthenticationOperationUnauthenticatedServicesKey_0;
}

id initValTRAuthenticationOperationErrorKey_0()
{
  if (TouchRemoteLibrary_sOnce_3 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_3, &__block_literal_global_47);
  }
  id v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_3, "TRAuthenticationOperationErrorKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRAuthenticationOperationErrorKey_0, *v0);
  }
  getTRAuthenticationOperationErrorKey_0[0] = (uint64_t (*)())TRAuthenticationOperationErrorKeyFunction_0;
  id v1 = (void *)constantValTRAuthenticationOperationErrorKey_0;

  return v1;
}

id TRAuthenticationOperationErrorKeyFunction_0()
{
  return (id)constantValTRAuthenticationOperationErrorKey_0;
}

Class initAISRepairContext_0()
{
  if (AppleIDSetupLibrary_sOnce_0 != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce_0, &__block_literal_global_446);
  }
  Class result = objc_getClass("AISRepairContext");
  classAISRepairContext_0 = (uint64_t)result;
  getAISRepairContextClass_0 = (uint64_t (*)())AISRepairContextFunction_0;
  return result;
}

id AISRepairContextFunction_0()
{
  return (id)classAISRepairContext_0;
}

void *__AppleIDSetupLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppleIDSetup.framework/AppleIDSetup", 2);
  AppleIDSetupLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initAISRepairController_0()
{
  if (AppleIDSetupLibrary_sOnce_0 != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce_0, &__block_literal_global_446);
  }
  Class result = objc_getClass("AISRepairController");
  classAISRepairController_0 = (uint64_t)result;
  getAISRepairControllerClass_0 = (uint64_t (*)())AISRepairControllerFunction_0;
  return result;
}

id AISRepairControllerFunction_0()
{
  return (id)classAISRepairController_0;
}

Class initHMDeviceSetupOperationHandler_1()
{
  if (HomeKitLibrary_sOnce_4 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_4, &__block_literal_global_48);
  }
  Class result = objc_getClass("HMDeviceSetupOperationHandler");
  classHMDeviceSetupOperationHandler_1 = (uint64_t)result;
  getHMDeviceSetupOperationHandlerClass_1[0] = (uint64_t (*)())HMDeviceSetupOperationHandlerFunction_1;
  return result;
}

id HMDeviceSetupOperationHandlerFunction_1()
{
  return (id)classHMDeviceSetupOperationHandler_1;
}

void *__HomeKitLibrary_block_invoke_4()
{
  Class result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib_4 = (uint64_t)result;
  return result;
}

Class initTVLAudioLatencyEstimator()
{
  if (TVLatencyLibrary_sOnce_1 != -1) {
    dispatch_once(&TVLatencyLibrary_sOnce_1, &__block_literal_global_479);
  }
  Class result = objc_getClass("TVLAudioLatencyEstimator");
  classTVLAudioLatencyEstimator = (uint64_t)result;
  getTVLAudioLatencyEstimatorClass[0] = (uint64_t (*)())TVLAudioLatencyEstimatorFunction;
  return result;
}

id TVLAudioLatencyEstimatorFunction()
{
  return (id)classTVLAudioLatencyEstimator;
}

void *__TVLatencyLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TVLatency.framework/TVLatency", 2);
  TVLatencyLibrary_sLib_1 = (uint64_t)result;
  return result;
}

uint64_t initValTMSourceProxBuddy()
{
  if (CoreTimeLibrary_sOnce != -1) {
    dispatch_once(&CoreTimeLibrary_sOnce, &__block_literal_global_483);
  }
  id v0 = (uint64_t *)dlsym((void *)CoreTimeLibrary_sLib, "TMSourceProxBuddy");
  if (v0)
  {
    uint64_t result = *v0;
    constantValTMSourceProxBuddy = result;
  }
  else
  {
    uint64_t result = constantValTMSourceProxBuddy;
  }
  getTMSourceProxBuddy[0] = type metadata for ;
  return result;
}

uint64_t type metadata for ()
{
  return constantValTMSourceProxBuddy;
}

void *__CoreTimeLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/CoreTime.framework/CoreTime", 2);
  CoreTimeLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initTMSetSourceTime(uint64_t a1, double a2, double a3)
{
  if (CoreTimeLibrary_sOnce != -1) {
    dispatch_once(&CoreTimeLibrary_sOnce, &__block_literal_global_483);
  }
  uint64_t v6 = (uint64_t (*)())dlsym((void *)CoreTimeLibrary_sLib, "TMSetSourceTime");
  softLinkTMSetSourceTime[0] = v6;
  v7.n128_f64[0] = a2;
  v8.n128_f64[0] = a3;

  return ((uint64_t (*)(uint64_t, __n128, __n128))v6)(a1, v7, v8);
}

Class initAISSetupContext()
{
  if (AppleIDSetupLibrary_sOnce_1 != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce_1, &__block_literal_global_488);
  }
  Class result = objc_getClass("AISSetupContext");
  classAISSetupContext = (uint64_t)result;
  getAISSetupContextClass = (uint64_t (*)())AISSetupContextFunction;
  return result;
}

id AISSetupContextFunction()
{
  return (id)classAISSetupContext;
}

void *__AppleIDSetupLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppleIDSetup.framework/AppleIDSetup", 2);
  AppleIDSetupLibrary_sLib_1 = (uint64_t)result;
  return result;
}

Class initAISSetupController()
{
  if (AppleIDSetupLibrary_sOnce_1 != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce_1, &__block_literal_global_488);
  }
  Class result = objc_getClass("AISSetupController");
  classAISSetupController = (uint64_t)result;
  getAISSetupControllerClass = (uint64_t (*)())AISSetupControllerFunction;
  return result;
}

id AISSetupControllerFunction()
{
  return (id)classAISSetupController;
}

void sub_1A5482B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

Class initHMHomeManagerConfiguration_0()
{
  if (HomeKitLibrary_sOnce_5 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_5, &__block_literal_global_49);
  }
  Class result = objc_getClass("HMHomeManagerConfiguration");
  classHMHomeManagerConfiguration_0 = (uint64_t)result;
  getHMHomeManagerConfigurationClass_0[0] = (uint64_t (*)())HMHomeManagerConfigurationFunction_0;
  return result;
}

id HMHomeManagerConfigurationFunction_0()
{
  return (id)classHMHomeManagerConfiguration_0;
}

void *__HomeKitLibrary_block_invoke_5()
{
  Class result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib_5 = (uint64_t)result;
  return result;
}

Class initHMHomeManager_1()
{
  if (HomeKitLibrary_sOnce_5 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_5, &__block_literal_global_49);
  }
  Class result = objc_getClass("HMHomeManager");
  classHMHomeManager_1 = (uint64_t)result;
  getHMHomeManagerClass_1[0] = (uint64_t (*)())HMHomeManagerFunction_1;
  return result;
}

id HMHomeManagerFunction_1()
{
  return (id)classHMHomeManager_1;
}

Class initSSAccountStore_1()
{
  if (StoreServicesLibrary_sOnce_1 != -1) {
    dispatch_once(&StoreServicesLibrary_sOnce_1, &__block_literal_global_1287);
  }
  Class result = objc_getClass("SSAccountStore");
  classSSAccountStore_1 = (uint64_t)result;
  getSSAccountStoreClass_1[0] = (uint64_t (*)())SSAccountStoreFunction_1;
  return result;
}

id SSAccountStoreFunction_1()
{
  return (id)classSSAccountStore_1;
}

void *__StoreServicesLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices", 2);
  StoreServicesLibrary_sLib_1 = (uint64_t)result;
  return result;
}

Class initACAccountStore_4()
{
  if (AccountsLibrary_sOnce_4 != -1) {
    dispatch_once(&AccountsLibrary_sOnce_4, &__block_literal_global_1291);
  }
  Class result = objc_getClass("ACAccountStore");
  classACAccountStore_4 = (uint64_t)result;
  getACAccountStoreClass_4[0] = (uint64_t (*)())ACAccountStoreFunction_4;
  return result;
}

id ACAccountStoreFunction_4()
{
  return (id)classACAccountStore_4;
}

void *__AccountsLibrary_block_invoke_4()
{
  Class result = dlopen("/System/Library/Frameworks/Accounts.framework/Accounts", 2);
  AccountsLibrary_sLib_4 = (uint64_t)result;
  return result;
}

uint64_t init_AXSVoiceOverTouchEnabled()
{
  if (AccessibilityLibrary_sOnce != -1) {
    dispatch_once(&AccessibilityLibrary_sOnce, &__block_literal_global_1295);
  }
  id v0 = (uint64_t (*)())dlsym((void *)AccessibilityLibrary_sLib, "_AXSVoiceOverTouchEnabled");
  softLink_AXSVoiceOverTouchEnabled[0] = v0;

  return v0();
}

void *__AccessibilityLibrary_block_invoke()
{
  Class result = dlopen("/usr/lib/libAccessibility.dylib", 2);
  AccessibilityLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t init_AXSVoiceOverTouchSpeakingRate()
{
  if (AccessibilityLibrary_sOnce != -1) {
    dispatch_once(&AccessibilityLibrary_sOnce, &__block_literal_global_1295);
  }
  id v0 = (uint64_t (*)())dlsym((void *)AccessibilityLibrary_sLib, "_AXSVoiceOverTouchSpeakingRate");
  softLink_AXSVoiceOverTouchSpeakingRate = v0;

  return v0();
}

Class initAXSettings()
{
  if (AccessibilityUtilitiesLibrary_sOnce != -1) {
    dispatch_once(&AccessibilityUtilitiesLibrary_sOnce, &__block_literal_global_1300);
  }
  Class result = objc_getClass("AXSettings");
  classAXSettings = (uint64_t)result;
  getAXSettingsClass[0] = (uint64_t (*)())AXSettingsFunction;
  return result;
}

id AXSettingsFunction()
{
  return (id)classAXSettings;
}

void *__AccessibilityUtilitiesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities", 2);
  AccessibilityUtilitiesLibrary_sLib = (uint64_t)result;
  return result;
}

Class initCLLocationManager_0()
{
  if (CoreLocationLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreLocationLibrary_sOnce_0, &__block_literal_global_1304);
  }
  Class result = objc_getClass("CLLocationManager");
  classCLLocationManager_0 = (uint64_t)result;
  getCLLocationManagerClass_0[0] = (uint64_t (*)())CLLocationManagerFunction_0;
  return result;
}

id CLLocationManagerFunction_0()
{
  return (id)classCLLocationManager_0;
}

void *__CoreLocationLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/Frameworks/CoreLocation.framework/CoreLocation", 2);
  CoreLocationLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initOBBundle()
{
  if (OnBoardingKitLibrary_sOnce != -1) {
    dispatch_once(&OnBoardingKitLibrary_sOnce, &__block_literal_global_1308);
  }
  Class result = objc_getClass("OBBundle");
  classOBBundle = (uint64_t)result;
  getOBBundleClass[0] = (uint64_t (*)())OBBundleFunction;
  return result;
}

id OBBundleFunction()
{
  return (id)classOBBundle;
}

void *__OnBoardingKitLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit", 2);
  OnBoardingKitLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initValOBPrivacyPrivacyPaneIdentifier()
{
  if (OnBoardingKitLibrary_sOnce != -1) {
    dispatch_once(&OnBoardingKitLibrary_sOnce, &__block_literal_global_1308);
  }
  id v0 = (uint64_t *)dlsym((void *)OnBoardingKitLibrary_sLib, "OBPrivacyPrivacyPaneIdentifier");
  if (v0)
  {
    uint64_t result = *v0;
    constantValOBPrivacyPrivacyPaneIdentifier = result;
  }
  else
  {
    uint64_t result = constantValOBPrivacyPrivacyPaneIdentifier;
  }
  getOBPrivacyPrivacyPaneIdentifier[0] = OBPrivacyPrivacyPaneIdentifierFunction;
  return result;
}

uint64_t OBPrivacyPrivacyPaneIdentifierFunction()
{
  return constantValOBPrivacyPrivacyPaneIdentifier;
}

Class initAFPreferences_0()
{
  if (AssistantServicesLibrary_sOnce_1 != -1) {
    dispatch_once(&AssistantServicesLibrary_sOnce_1, &__block_literal_global_1313);
  }
  Class result = objc_getClass("AFPreferences");
  classAFPreferences_0 = (uint64_t)result;
  getAFPreferencesClass_0[0] = (uint64_t (*)())AFPreferencesFunction_0;
  return result;
}

id AFPreferencesFunction_0()
{
  return (id)classAFPreferences_0;
}

void *__AssistantServicesLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices", 2);
  AssistantServicesLibrary_sLib_1 = (uint64_t)result;
  return result;
}

uint64_t initTMIsAutomaticTimeEnabled()
{
  if (CoreTimeLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreTimeLibrary_sOnce_0, &__block_literal_global_1317);
  }
  id v0 = (uint64_t (*)())dlsym((void *)CoreTimeLibrary_sLib_0, "TMIsAutomaticTimeEnabled");
  softLinkTMIsAutomaticTimeEnabled[0] = v0;

  return v0();
}

void *__CoreTimeLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreTime.framework/CoreTime", 2);
  CoreTimeLibrary_sLib_0 = (uint64_t)result;
  return result;
}

uint64_t initTMIsAutomaticTimeZoneEnabled()
{
  if (CoreTimeLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreTimeLibrary_sOnce_0, &__block_literal_global_1317);
  }
  id v0 = (uint64_t (*)())dlsym((void *)CoreTimeLibrary_sLib_0, "TMIsAutomaticTimeZoneEnabled");
  softLinkTMIsAutomaticTimeZoneEnabled[0] = v0;

  return v0();
}

Class initTROperationQueue_2()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TROperationQueue");
  classTROperationQueue_2 = (uint64_t)result;
  getTROperationQueueClass_2[0] = (uint64_t (*)())TROperationQueueFunction_2;
  return result;
}

id TROperationQueueFunction_2()
{
  return (id)classTROperationQueue_2;
}

void *__TouchRemoteLibrary_block_invoke_4()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib_4 = (uint64_t)result;
  return result;
}

Class initTRNearbyDevice()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRNearbyDevice");
  classTRNearbyDevice = (uint64_t)result;
  getTRNearbyDeviceClass[0] = (uint64_t (*)())TRNearbyDeviceFunction;
  return result;
}

id TRNearbyDeviceFunction()
{
  return (id)classTRNearbyDevice;
}

Class initTRSession()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRSession");
  classTRSession = (uint64_t)result;
  getTRSessionClass[0] = (uint64_t (*)())TRSessionFunction;
  return result;
}

id TRSessionFunction()
{
  return (id)classTRSession;
}

Class initTRNearbyDeviceScanner()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRNearbyDeviceScanner");
  classTRNearbyDeviceScanner = (uint64_t)result;
  getTRNearbyDeviceScannerClass[0] = (uint64_t (*)())TRNearbyDeviceScannerFunction;
  return result;
}

id TRNearbyDeviceScannerFunction()
{
  return (id)classTRNearbyDeviceScanner;
}

Class initTRSetupConfigurationOperation()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRSetupConfigurationOperation");
  classTRSetupConfigurationOperation = (uint64_t)result;
  getTRSetupConfigurationOperationClass[0] = (uint64_t (*)())TRSetupConfigurationOperationFunction;
  return result;
}

id TRSetupConfigurationOperationFunction()
{
  return (id)classTRSetupConfigurationOperation;
}

id initValTRSetupConfigurationOperationNeedsNetworkKey()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  id v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_4, "TRSetupConfigurationOperationNeedsNetworkKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRSetupConfigurationOperationNeedsNetworkKey, *v0);
  }
  getTRSetupConfigurationOperationNeedsNetworkKey[0] = (uint64_t (*)())TRSetupConfigurationOperationNeedsNetworkKeyFunction;
  id v1 = (void *)constantValTRSetupConfigurationOperationNeedsNetworkKey;

  return v1;
}

id TRSetupConfigurationOperationNeedsNetworkKeyFunction()
{
  return (id)constantValTRSetupConfigurationOperationNeedsNetworkKey;
}

id initValTRSetupConfigurationOperationUnauthenticatedServicesKey()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  id v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_4, "TRSetupConfigurationOperationUnauthenticatedServicesKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRSetupConfigurationOperationUnauthenticatedServicesKey, *v0);
  }
  getTRSetupConfigurationOperationUnauthenticatedServicesKey[0] = (uint64_t (*)())TRSetupConfigurationOperationUnauthenticatedServicesKeyFunction;
  id v1 = (void *)constantValTRSetupConfigurationOperationUnauthenticatedServicesKey;

  return v1;
}

id TRSetupConfigurationOperationUnauthenticatedServicesKeyFunction()
{
  return (id)constantValTRSetupConfigurationOperationUnauthenticatedServicesKey;
}

Class initTRNetworkOperation()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRNetworkOperation");
  classTRNetworkOperation = (uint64_t)result;
  getTRNetworkOperationClass[0] = (uint64_t (*)())TRNetworkOperationFunction;
  return result;
}

id TRNetworkOperationFunction()
{
  return (id)classTRNetworkOperation;
}

id initValTRNetworkOperationHasNetworkKey()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  id v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_4, "TRNetworkOperationHasNetworkKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRNetworkOperationHasNetworkKey, *v0);
  }
  getTRNetworkOperationHasNetworkKey[0] = (uint64_t (*)())TRNetworkOperationHasNetworkKeyFunction;
  id v1 = (void *)constantValTRNetworkOperationHasNetworkKey;

  return v1;
}

id TRNetworkOperationHasNetworkKeyFunction()
{
  return (id)constantValTRNetworkOperationHasNetworkKey;
}

Class initTRActivationOperation()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRActivationOperation");
  classTRActivationOperation = (uint64_t)result;
  getTRActivationOperationClass[0] = (uint64_t (*)())TRActivationOperationFunction;
  return result;
}

id TRActivationOperationFunction()
{
  return (id)classTRActivationOperation;
}

id initValTRActivationOperationIsActivatedKey()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  id v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_4, "TRActivationOperationIsActivatedKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRActivationOperationIsActivatedKey, *v0);
  }
  getTRActivationOperationIsActivatedKey[0] = (uint64_t (*)())TRActivationOperationIsActivatedKeyFunction;
  id v1 = (void *)constantValTRActivationOperationIsActivatedKey;

  return v1;
}

id TRActivationOperationIsActivatedKeyFunction()
{
  return (id)constantValTRActivationOperationIsActivatedKey;
}

Class initTRAuthenticationOperation_1()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRAuthenticationOperation");
  classTRAuthenticationOperation_1 = (uint64_t)result;
  getTRAuthenticationOperationClass_1[0] = (uint64_t (*)())TRAuthenticationOperationFunction_1;
  return result;
}

id TRAuthenticationOperationFunction_1()
{
  return (id)classTRAuthenticationOperation_1;
}

Class initAISSetupContext_0()
{
  if (AppleIDSetupLibrary_sOnce_2 != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce_2, &__block_literal_global_1345);
  }
  Class result = objc_getClass("AISSetupContext");
  classAISSetupContext_0 = (uint64_t)result;
  getAISSetupContextClass_0 = (uint64_t (*)())AISSetupContextFunction_0;
  return result;
}

id AISSetupContextFunction_0()
{
  return (id)classAISSetupContext_0;
}

void *__AppleIDSetupLibrary_block_invoke_2()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppleIDSetup.framework/AppleIDSetup", 2);
  AppleIDSetupLibrary_sLib_2 = (uint64_t)result;
  return result;
}

Class initAISSetupViewController()
{
  if (AppleIDSetupUILibrary_sOnce != -1) {
    dispatch_once(&AppleIDSetupUILibrary_sOnce, &__block_literal_global_1349);
  }
  Class result = objc_getClass("AISSetupViewController");
  classAISSetupViewController = (uint64_t)result;
  getAISSetupViewControllerClass = (uint64_t (*)())AISSetupViewControllerFunction;
  return result;
}

id AISSetupViewControllerFunction()
{
  return (id)classAISSetupViewController;
}

void *__AppleIDSetupUILibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppleIDSetupUI.framework/AppleIDSetupUI", 2);
  AppleIDSetupUILibrary_sLib = (uint64_t)result;
  return result;
}

Class initUINavigationController()
{
  if (UIKitLibrary_sOnce != -1) {
    dispatch_once(&UIKitLibrary_sOnce, &__block_literal_global_1353);
  }
  Class result = objc_getClass("UINavigationController");
  classUINavigationController = (uint64_t)result;
  getUINavigationControllerClass = (uint64_t (*)())UINavigationControllerFunction;
  return result;
}

id UINavigationControllerFunction()
{
  return (id)classUINavigationController;
}

void *__UIKitLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/UIKit.framework/UIKit", 2);
  UIKitLibrary_sLib = (uint64_t)result;
  return result;
}

Class initAISSetupController_0()
{
  if (AppleIDSetupLibrary_sOnce_2 != -1) {
    dispatch_once(&AppleIDSetupLibrary_sOnce_2, &__block_literal_global_1345);
  }
  Class result = objc_getClass("AISSetupController");
  classAISSetupController_0 = (uint64_t)result;
  getAISSetupControllerClass_0 = (uint64_t (*)())AISSetupControllerFunction_0;
  return result;
}

id AISSetupControllerFunction_0()
{
  return (id)classAISSetupController_0;
}

Class initTVLAudioLatencyEstimator_0()
{
  if (TVLatencyLibrary_sOnce_2 != -1) {
    dispatch_once(&TVLatencyLibrary_sOnce_2, &__block_literal_global_1358);
  }
  Class result = objc_getClass("TVLAudioLatencyEstimator");
  classTVLAudioLatencyEstimator_0 = (uint64_t)result;
  getTVLAudioLatencyEstimatorClass_0[0] = (uint64_t (*)())TVLAudioLatencyEstimatorFunction_0;
  return result;
}

id TVLAudioLatencyEstimatorFunction_0()
{
  return (id)classTVLAudioLatencyEstimator_0;
}

void *__TVLatencyLibrary_block_invoke_2()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TVLatency.framework/TVLatency", 2);
  TVLatencyLibrary_sLib_2 = (uint64_t)result;
  return result;
}

Class initTRCompletionOperation()
{
  if (TouchRemoteLibrary_sOnce_4 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_4, &__block_literal_global_1322);
  }
  Class result = objc_getClass("TRCompletionOperation");
  classTRCompletionOperation = (uint64_t)result;
  getTRCompletionOperationClass[0] = (uint64_t (*)())TRCompletionOperationFunction;
  return result;
}

id TRCompletionOperationFunction()
{
  return (id)classTRCompletionOperation;
}

Class initVSAccountSerializationCenter()
{
  if (VideoSubscriberAccountLibrary_sOnce != -1) {
    dispatch_once(&VideoSubscriberAccountLibrary_sOnce, &__block_literal_global_1363);
  }
  Class result = objc_getClass("VSAccountSerializationCenter");
  classVSAccountSerializationCenter = (uint64_t)result;
  getVSAccountSerializationCenterClass[0] = (uint64_t (*)())VSAccountSerializationCenterFunction;
  return result;
}

id VSAccountSerializationCenterFunction()
{
  return (id)classVSAccountSerializationCenter;
}

void *__VideoSubscriberAccountLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PublicFrameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount", 2);
  VideoSubscriberAccountLibrary_sLib = (uint64_t)result;
  return result;
}

id initValHMAccessoryCategoryTypeHomePod_1()
{
  if (HomeKitLibrary_sOnce_5 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_5, &__block_literal_global_49);
  }
  id v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_5, "HMAccessoryCategoryTypeHomePod");
  if (v0) {
    objc_storeStrong((id *)&constantValHMAccessoryCategoryTypeHomePod_1, *v0);
  }
  getHMAccessoryCategoryTypeHomePod_1[0] = (uint64_t (*)())HMAccessoryCategoryTypeHomePodFunction_1;
  id v1 = (void *)constantValHMAccessoryCategoryTypeHomePod_1;

  return v1;
}

id HMAccessoryCategoryTypeHomePodFunction_1()
{
  return (id)constantValHMAccessoryCategoryTypeHomePod_1;
}

id initValHMAccessoryCategoryTypeAppleTV_0()
{
  if (HomeKitLibrary_sOnce_5 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_5, &__block_literal_global_49);
  }
  id v0 = (id *)dlsym((void *)HomeKitLibrary_sLib_5, "HMAccessoryCategoryTypeAppleTV");
  if (v0) {
    objc_storeStrong((id *)&constantValHMAccessoryCategoryTypeAppleTV_0, *v0);
  }
  getHMAccessoryCategoryTypeAppleTV_0[0] = (uint64_t (*)())HMAccessoryCategoryTypeAppleTVFunction_0;
  id v1 = (void *)constantValHMAccessoryCategoryTypeAppleTV_0;

  return v1;
}

id HMAccessoryCategoryTypeAppleTVFunction_0()
{
  return (id)constantValHMAccessoryCategoryTypeAppleTV_0;
}

void sub_1A5485EF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v7);
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v8 - 104));
  _Unwind_Resume(a1);
}

void sub_1A5485F60()
{
}

void sub_1A5485F68()
{
}

void sub_1A5486C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  objc_sync_exit(v21);
  _Unwind_Resume(a1);
}

void sub_1A5487018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_sync_exit(v19);
  _Unwind_Resume(a1);
}

void sub_1A5487380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54874C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A5487774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A5487E5C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void *__Block_byref_object_copy__12(uint64_t a1, uint64_t a2)
{
  Class result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void sub_1A5488758(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1A548C5CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  _Block_object_dispose(&a21, 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void sub_1A548D404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A548E410(_Unwind_Exception *a1)
{
  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v7 - 120));
  objc_destroyWeak((id *)(v7 - 112));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void sub_1A5490878(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1A5491C38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1A5492094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class initSKDevice()
{
  if (SetupKitLibrary_sOnce != -1) {
    dispatch_once(&SetupKitLibrary_sOnce, &__block_literal_global_293_0);
  }
  Class result = objc_getClass("SKDevice");
  classSKDevice = (uint64_t)result;
  getSKDeviceClass[0] = (uint64_t (*)())SKDeviceFunction;
  return result;
}

id SKDeviceFunction()
{
  return (id)classSKDevice;
}

void *__SetupKitLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/SetupKit.framework/SetupKit", 2);
  SetupKitLibrary_sLib = (uint64_t)result;
  return result;
}

Class initSKSetupCaptiveNetworkJoinClient()
{
  if (SetupKitLibrary_sOnce != -1) {
    dispatch_once(&SetupKitLibrary_sOnce, &__block_literal_global_293_0);
  }
  Class result = objc_getClass("SKSetupCaptiveNetworkJoinClient");
  classSKSetupCaptiveNetworkJoinClient = (uint64_t)result;
  getSKSetupCaptiveNetworkJoinClientClass[0] = (uint64_t (*)())SKSetupCaptiveNetworkJoinClientFunction;
  return result;
}

id SKSetupCaptiveNetworkJoinClientFunction()
{
  return (id)classSKSetupCaptiveNetworkJoinClient;
}

Class initWSWebSheetViewController()
{
  if (WebSheetLibrary_sOnce != -1) {
    dispatch_once(&WebSheetLibrary_sOnce, &__block_literal_global_298);
  }
  Class result = objc_getClass("WSWebSheetViewController");
  classWSWebSheetViewController = (uint64_t)result;
  getWSWebSheetViewControllerClass[0] = (uint64_t (*)())WSWebSheetViewControllerFunction;
  return result;
}

id WSWebSheetViewControllerFunction()
{
  return (id)classWSWebSheetViewController;
}

void *__WebSheetLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/WebSheet.framework/WebSheet", 2);
  WebSheetLibrary_sLib = (uint64_t)result;
  return result;
}

Class initSKSetupCaptiveNetworkJoinServer()
{
  if (SetupKitLibrary_sOnce != -1) {
    dispatch_once(&SetupKitLibrary_sOnce, &__block_literal_global_293_0);
  }
  Class result = objc_getClass("SKSetupCaptiveNetworkJoinServer");
  classSKSetupCaptiveNetworkJoinServer = (uint64_t)result;
  getSKSetupCaptiveNetworkJoinServerClass[0] = (uint64_t (*)())SKSetupCaptiveNetworkJoinServerFunction;
  return result;
}

id SKSetupCaptiveNetworkJoinServerFunction()
{
  return (id)classSKSetupCaptiveNetworkJoinServer;
}

void sub_1A54950A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1A5495470(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

Class initTSCellularPlanProximityTransferController()
{
  if (SIMSetupSupportLibrary_sOnce != -1) {
    dispatch_once(&SIMSetupSupportLibrary_sOnce, &__block_literal_global_653);
  }
  Class result = objc_getClass("TSCellularPlanProximityTransferController");
  classTSCellularPlanProximityTransferController = (uint64_t)result;
  getTSCellularPlanProximityTransferControllerClass[0] = (uint64_t (*)())__C;
  return result;
}

id __C()
{
  return (id)classTSCellularPlanProximityTransferController;
}

void *__SIMSetupSupportLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/SIMSetupSupport.framework/SIMSetupSupport", 2);
  SIMSetupSupportLibrary_sLib = (uint64_t)result;
  return result;
}

Class initCoreTelephonyClient()
{
  if (CoreTelephonyLibrary_sOnce != -1) {
    dispatch_once(&CoreTelephonyLibrary_sOnce, &__block_literal_global_657);
  }
  Class result = objc_getClass("CoreTelephonyClient");
  classCoreTelephonyClient = (uint64_t)result;
  getCoreTelephonyClientClass[0] = (uint64_t (*)())CoreTelephonyClientFunction;
  return result;
}

id CoreTelephonyClientFunction()
{
  return (id)classCoreTelephonyClient;
}

void *__CoreTelephonyLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/Frameworks/CoreTelephony.framework/CoreTelephony", 2);
  CoreTelephonyLibrary_sLib = (uint64_t)result;
  return result;
}

Class initIMOneTimeCodeAccelerator()
{
  if (IMCoreLibrary_sOnce != -1) {
    dispatch_once(&IMCoreLibrary_sOnce, &__block_literal_global_661);
  }
  Class result = objc_getClass("IMOneTimeCodeAccelerator");
  classIMOneTimeCodeAccelerator = (uint64_t)result;
  getIMOneTimeCodeAcceleratorClass = (uint64_t (*)())IMOneTimeCodeAcceleratorFunction;
  return result;
}

id IMOneTimeCodeAcceleratorFunction()
{
  return (id)classIMOneTimeCodeAccelerator;
}

void *__IMCoreLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/IMCore.framework/IMCore", 2);
  IMCoreLibrary_sLib = (uint64_t)result;
  return result;
}

Class initPRXCardContentViewController()
{
  if (ProxCardKitLibrary_sOnce != -1) {
    dispatch_once(&ProxCardKitLibrary_sOnce, &__block_literal_global_665);
  }
  Class result = objc_getClass("PRXCardContentViewController");
  classPRXCardContentViewController = (uint64_t)result;
  getPRXCardContentViewControllerClass[0] = (uint64_t (*)())PRXCardContentViewControllerFunction;
  return result;
}

id PRXCardContentViewControllerFunction()
{
  return (id)classPRXCardContentViewController;
}

void *__ProxCardKitLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/ProxCardKit.framework/ProxCardKit", 2);
  ProxCardKitLibrary_sLib = (uint64_t)result;
  return result;
}

Class initPASUIGuardianViewPresenter()
{
  if (ProximityAppleIDSetupUILibrary_sOnce != -1) {
    dispatch_once(&ProximityAppleIDSetupUILibrary_sOnce, &__block_literal_global_669);
  }
  Class result = objc_getClass("PASUIGuardianViewPresenter");
  classPASUIGuardianViewPresenter = (uint64_t)result;
  getPASUIGuardianViewPresenterClass[0] = (uint64_t (*)())PASUIGuardianViewPresenterFunction;
  return result;
}

id PASUIGuardianViewPresenterFunction()
{
  return (id)classPASUIGuardianViewPresenter;
}

void *__ProximityAppleIDSetupUILibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/ProximityAppleIDSetupUI.framework/ProximityAppleIDSetupUI", 2);
  ProximityAppleIDSetupUILibrary_sLib = (uint64_t)result;
  return result;
}

Class initCDPContext_0()
{
  if (CoreCDPLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreCDPLibrary_sOnce_0, &__block_literal_global_673);
  }
  Class result = objc_getClass("CDPContext");
  classCDPContext_0 = (uint64_t)result;
  getCDPContextClass_0[0] = (uint64_t (*)())CDPContextFunction_0;
  return result;
}

id CDPContextFunction_0()
{
  return (id)classCDPContext_0;
}

void *__CoreCDPLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP", 2);
  CoreCDPLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initCDPStateController_0()
{
  if (CoreCDPLibrary_sOnce_0 != -1) {
    dispatch_once(&CoreCDPLibrary_sOnce_0, &__block_literal_global_673);
  }
  Class result = objc_getClass("CDPStateController");
  classCDPStateController_0 = (uint64_t)result;
  getCDPStateControllerClass_0[0] = (uint64_t (*)())CDPStateControllerFunction_0;
  return result;
}

id CDPStateControllerFunction_0()
{
  return (id)classCDPStateController_0;
}

Class initACAccountStore_5()
{
  if (AccountsLibrary_sOnce_5 != -1) {
    dispatch_once(&AccountsLibrary_sOnce_5, &__block_literal_global_678);
  }
  Class result = objc_getClass("ACAccountStore");
  classACAccountStore_5 = (uint64_t)result;
  getACAccountStoreClass_5[0] = (uint64_t (*)())ACAccountStoreFunction_5;
  return result;
}

id ACAccountStoreFunction_5()
{
  return (id)classACAccountStore_5;
}

void *__AccountsLibrary_block_invoke_5()
{
  Class result = dlopen("/System/Library/Frameworks/Accounts.framework/Accounts", 2);
  AccountsLibrary_sLib_5 = (uint64_t)result;
  return result;
}

void *__AccessibilityLibrary_block_invoke_0()
{
  Class result = dlopen("/usr/lib/libAccessibility.dylib", 2);
  AccessibilityLibrary_sLib_0 = (uint64_t)result;
  return result;
}

uint64_t init_AXSCopySettingsDataBlobForBuddy()
{
  if (AccessibilityLibrary_sOnce_0 != -1) {
    dispatch_once(&AccessibilityLibrary_sOnce_0, &__block_literal_global_681);
  }
  id v0 = (uint64_t (*)())dlsym((void *)AccessibilityLibrary_sLib_0, "_AXSCopySettingsDataBlobForBuddy");
  softLink_AXSCopySettingsDataBlobForBuddy[0] = v0;

  return v0();
}

Class initBYDeviceSetupSourceSession()
{
  if (SetupAssistantLibrary_sOnce != -1) {
    dispatch_once(&SetupAssistantLibrary_sOnce, &__block_literal_global_685);
  }
  Class result = objc_getClass("BYDeviceSetupSourceSession");
  classBYDeviceSetupSourceSession = (uint64_t)result;
  getBYDeviceSetupSourceSessionClass[0] = (uint64_t (*)())BYDeviceSetupSourceSessionFunction;
  return result;
}

id BYDeviceSetupSourceSessionFunction()
{
  return (id)classBYDeviceSetupSourceSession;
}

void *__SetupAssistantLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant", 2);
  SetupAssistantLibrary_sLib = (uint64_t)result;
  return result;
}

void sub_1A5498F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A5499044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A5499168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A549928C(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

Class initTVLAudioLatencyEstimator_1()
{
  if (TVLatencyLibrary_sOnce_3 != -1) {
    dispatch_once(&TVLatencyLibrary_sOnce_3, &__block_literal_global_329_0);
  }
  Class result = objc_getClass("TVLAudioLatencyEstimator");
  classTVLAudioLatencyEstimator_1 = (uint64_t)result;
  getTVLAudioLatencyEstimatorClass_1[0] = (uint64_t (*)())TVLAudioLatencyEstimatorFunction_1;
  return result;
}

id TVLAudioLatencyEstimatorFunction_1()
{
  return (id)classTVLAudioLatencyEstimator_1;
}

void *__TVLatencyLibrary_block_invoke_3()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TVLatency.framework/TVLatency", 2);
  TVLatencyLibrary_sLib_3 = (uint64_t)result;
  return result;
}

Class initTVLAudioLatencyEstimator_2()
{
  if (TVLatencyLibrary_sOnce_4 != -1) {
    dispatch_once(&TVLatencyLibrary_sOnce_4, &__block_literal_global_56);
  }
  Class result = objc_getClass("TVLAudioLatencyEstimator");
  classTVLAudioLatencyEstimator_2 = (uint64_t)result;
  getTVLAudioLatencyEstimatorClass_2[0] = (uint64_t (*)())TVLAudioLatencyEstimatorFunction_2;
  return result;
}

id TVLAudioLatencyEstimatorFunction_2()
{
  return (id)classTVLAudioLatencyEstimator_2;
}

void *__TVLatencyLibrary_block_invoke_4()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TVLatency.framework/TVLatency", 2);
  TVLatencyLibrary_sLib_4 = (uint64_t)result;
  return result;
}

Class initHMDeviceSetupOperationHandler_2()
{
  if (HomeKitLibrary_sOnce_6 != -1) {
    dispatch_once(&HomeKitLibrary_sOnce_6, &__block_literal_global_57);
  }
  Class result = objc_getClass("HMDeviceSetupOperationHandler");
  classHMDeviceSetupOperationHandler_2 = (uint64_t)result;
  getHMDeviceSetupOperationHandlerClass_2[0] = (uint64_t (*)())HMDeviceSetupOperationHandlerFunction_2;
  return result;
}

id HMDeviceSetupOperationHandlerFunction_2()
{
  return (id)classHMDeviceSetupOperationHandler_2;
}

void *__HomeKitLibrary_block_invoke_6()
{
  Class result = dlopen("/System/Library/Frameworks/HomeKit.framework/HomeKit", 2);
  HomeKitLibrary_sLib_6 = (uint64_t)result;
  return result;
}

Class initCDPStateController_1()
{
  if (CoreCDPLibrary_sOnce_1 != -1) {
    dispatch_once(&CoreCDPLibrary_sOnce_1, &__block_literal_global_252);
  }
  Class result = objc_getClass("CDPStateController");
  classCDPStateController_1 = (uint64_t)result;
  getCDPStateControllerClass_1[0] = (uint64_t (*)())CDPStateControllerFunction_1;
  return result;
}

id CDPStateControllerFunction_1()
{
  return (id)classCDPStateController_1;
}

void *__CoreCDPLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP", 2);
  CoreCDPLibrary_sLib_1 = (uint64_t)result;
  return result;
}

void sub_1A549F804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

Class initTROperationQueue_3()
{
  if (TouchRemoteLibrary_sOnce_5 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_5, &__block_literal_global_58);
  }
  Class result = objc_getClass("TROperationQueue");
  classTROperationQueue_3 = (uint64_t)result;
  getTROperationQueueClass_3[0] = (uint64_t (*)())TROperationQueueFunction_3;
  return result;
}

id TROperationQueueFunction_3()
{
  return (id)classTROperationQueue_3;
}

void *__TouchRemoteLibrary_block_invoke_5()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib_5 = (uint64_t)result;
  return result;
}

Class initTRSetupConfigurationOperation_0()
{
  if (TouchRemoteLibrary_sOnce_5 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_5, &__block_literal_global_58);
  }
  Class result = objc_getClass("TRSetupConfigurationOperation");
  classTRSetupConfigurationOperation_0 = (uint64_t)result;
  getTRSetupConfigurationOperationClass_0[0] = (uint64_t (*)())TRSetupConfigurationOperationFunction_0;
  return result;
}

id TRSetupConfigurationOperationFunction_0()
{
  return (id)classTRSetupConfigurationOperation_0;
}

id initValTRSetupConfigurationOperationUnauthenticatedServicesKey_0()
{
  if (TouchRemoteLibrary_sOnce_5 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_5, &__block_literal_global_58);
  }
  id v0 = (id *)dlsym((void *)TouchRemoteLibrary_sLib_5, "TRSetupConfigurationOperationUnauthenticatedServicesKey");
  if (v0) {
    objc_storeStrong((id *)&constantValTRSetupConfigurationOperationUnauthenticatedServicesKey_0, *v0);
  }
  getTRSetupConfigurationOperationUnauthenticatedServicesKey_0[0] = (uint64_t (*)())TRSetupConfigurationOperationUnauthenticatedServicesKeyFunction_0;
  uint64_t v1 = (void *)constantValTRSetupConfigurationOperationUnauthenticatedServicesKey_0;

  return v1;
}

id TRSetupConfigurationOperationUnauthenticatedServicesKeyFunction_0()
{
  return (id)constantValTRSetupConfigurationOperationUnauthenticatedServicesKey_0;
}

Class initTRAuthenticationOperation_2()
{
  if (TouchRemoteLibrary_sOnce_5 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_5, &__block_literal_global_58);
  }
  Class result = objc_getClass("TRAuthenticationOperation");
  classTRAuthenticationOperation_2 = (uint64_t)result;
  getTRAuthenticationOperationClass_2[0] = (uint64_t (*)())TRAuthenticationOperationFunction_2;
  return result;
}

id TRAuthenticationOperationFunction_2()
{
  return (id)classTRAuthenticationOperation_2;
}

id getCKShareClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getCKShareClass_softClass_0;
  uint64_t v7 = getCKShareClass_softClass_0;
  if (!getCKShareClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCKShareClass_block_invoke_0;
    v3[3] = &unk_1E5BBBFF8;
    v3[4] = &v4;
    __getCKShareClass_block_invoke_0((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1A54A2CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54A34D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

Class __getCKShareClass_block_invoke_0(uint64_t a1)
{
  CloudKitLibrary_1();
  Class result = objc_getClass("CKShare");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKShareClass_block_invoke_cold_1_0();
  }
  getCKShareClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void CloudKitLibrary_1()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v0[0] = 0;
  if (!CloudKitLibraryCore_frameworkLibrary_1)
  {
    v0[1] = (void *)MEMORY[0x1E4F143A8];
    v0[2] = (void *)3221225472;
    v0[3] = __CloudKitLibraryCore_block_invoke_1;
    v0[4] = &__block_descriptor_40_e5_v8__0l;
    v0[5] = v0;
    long long v1 = xmmword_1E5BC1008;
    uint64_t v2 = 0;
    CloudKitLibraryCore_frameworkLibrary_1 = _sl_dlopen();
  }
  if (!CloudKitLibraryCore_frameworkLibrary_1) {
    CloudKitLibrary_cold_1_1(v0);
  }
  if (v0[0]) {
    free(v0[0]);
  }
}

uint64_t __CloudKitLibraryCore_block_invoke_1()
{
  uint64_t result = _sl_dlopen();
  CloudKitLibraryCore_frameworkLibrary_1 = result;
  return result;
}

uint64_t __SharedWithYouCoreLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  SharedWithYouCoreLibraryCore_frameworkLibrary_0 = result;
  return result;
}

Class __getCKContainerSetupInfoClass_block_invoke_1(uint64_t a1)
{
  CloudKitLibrary_1();
  Class result = objc_getClass("CKContainerSetupInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKContainerSetupInfoClass_block_invoke_cold_1_1();
  }
  getCKContainerSetupInfoClass_softClass_1 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1A54A496C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1A54A4CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1A54A5300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sf_dispatch_on_main_queue(void *a1)
{
  long long v1 = a1;
  if (v1)
  {
    blocuint64_t k = v1;
    if ([MEMORY[0x1E4F29060] isMainThread]) {
      block[2]();
    }
    else {
      dispatch_async(MEMORY[0x1E4F14428], block);
    }
    long long v1 = block;
  }
}

void sub_1A54A635C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, os_activity_scope_state_s state)
{
}

void sub_1A54A755C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t _clientPairSetupPromptForPIN(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3;
  if (gLogCategory_SFPINPairSession <= 30
    && (gLogCategory_SFPINPairSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v5[64] = 1;
  uint64_t v6 = *((void *)v5 + 18);
  if (v6) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v6, a1, a2);
  }

  return 0;
}

uint64_t _handleServerPairSetupShowPIN(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v7 = a4;
  if (a3 < 5)
  {
    uint64_t v12 = 4294960553;
  }
  else
  {
    RandomString();
    uint64_t v8 = v7[19];
    if (v8)
    {
      uint64_t v9 = [NSString stringWithUTF8String:a2];
      uint64_t v10 = (void *)v9;
      if (v9) {
        uint64_t v11 = (__CFString *)v9;
      }
      else {
        uint64_t v11 = @"?";
      }
      (*(void (**)(uint64_t, uint64_t, __CFString *))(v8 + 16))(v8, a1, v11);
    }
    uint64_t v12 = 0;
  }

  return v12;
}

uint64_t _handleServerPairSetupHidePIN(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 160);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1A54AE548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

void sub_1A54AE968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54AED70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54AF0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54AF4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54B0BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1A54B1118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1A54B166C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A54B22EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

Class initRTIInputSystemDataPayload_0()
{
  if (RemoteTextInputLibrary_sOnce_1 != -1) {
    dispatch_once(&RemoteTextInputLibrary_sOnce_1, &__block_literal_global_479_0);
  }
  Class result = objc_getClass("RTIInputSystemDataPayload");
  classRTIInputSystemDataPayload_0 = (uint64_t)result;
  getRTIInputSystemDataPayloadClass_0[0] = (uint64_t (*)())RTIInputSystemDataPayloadFunction_0;
  return result;
}

id RTIInputSystemDataPayloadFunction_0()
{
  return (id)classRTIInputSystemDataPayload_0;
}

void *__RemoteTextInputLibrary_block_invoke_1()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/RemoteTextInput.framework/RemoteTextInput", 2);
  RemoteTextInputLibrary_sLib_1 = (uint64_t)result;
  return result;
}

void sub_1A54B4CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1A54B4E0C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

const char *SFNearbyBLEServiceTypeToString(int a1)
{
  Class result = "Invalid";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      Class result = "ContinuityRemote";
      break;
    case 2:
      Class result = "iOSSetup";
      break;
    case 3:
      Class result = "Repair";
      break;
    case 4:
      Class result = "Setup2";
      break;
    case 5:
      Class result = "AudioTuning";
      break;
    case 6:
      Class result = "PasswordGranting";
      break;
    case 7:
      Class result = "PasswordSharing";
      break;
    case 8:
      Class result = "System";
      break;
    case 9:
      Class result = "AutoUnlock";
      break;
    case 10:
      Class result = "WHASetup";
      break;
    case 11:
      Class result = "AppleTVSetup";
      break;
    case 12:
      Class result = "DeviceDiagnostics";
      break;
    case 13:
      Class result = "RemoteAutoFill";
      break;
    case 14:
      Class result = "ApplePay";
      break;
    case 15:
      Class result = "CompanionLinkProx";
      break;
    case 16:
      Class result = "RemoteManagement";
      break;
    case 17:
      Class result = "RemoteAutoFillPong";
      break;
    case 18:
      Class result = "RemoteDisplay";
      break;
    case 19:
      Class result = "ContinuityKeyboard";
      break;
    case 20:
      Class result = "PhoneCallHandoff";
      break;
    case 21:
      Class result = "ShareAudio";
      break;
    case 22:
      Class result = "AuthenticateAccounts";
      break;
    case 23:
      goto LABEL_5;
    case 24:
      Class result = "HasInvitations";
      break;
    case 25:
      Class result = "AcceptedInvitation";
      break;
    default:
      if (a1 == 127) {
        Class result = "Debug";
      }
      else {
LABEL_5:
      }
        Class result = "?";
      break;
  }
  return result;
}

const char *SFDeviceActionTypeToString(int a1)
{
  if (a1 > 99)
  {
    switch(a1)
    {
      case 'd':
        return "B238SetupAfterWiFi";
      case 'e':
        return "B389SetupFromFindMy";
      case 'f':
        return "B389SetupDone";
      default:
        return "?";
    }
  }
  else
  {
    Class result = "Unspecified";
    switch(a1)
    {
      case 0:
        return result;
      case 1:
        Class result = "ATVSetup";
        break;
      case 4:
        Class result = "MobileBackup";
        break;
      case 5:
        Class result = "WatchSetup";
        break;
      case 6:
        Class result = "ATVPair";
        break;
      case 7:
        Class result = "InternetRelay";
        break;
      case 8:
        Class result = "WiFiPassword";
        break;
      case 9:
        Class result = "iOSSetup";
        break;
      case 10:
        Class result = "Repair";
        break;
      case 11:
        Class result = "LegacyHomePodSetup";
        break;
      case 12:
        Class result = "ApplePay";
        break;
      case 13:
        Class result = "WHASetup";
        break;
      case 14:
        Class result = "DevToolsPair";
        break;
      case 17:
        Class result = "DDPing";
        break;
      case 18:
        Class result = "DDPong";
        break;
      case 19:
        Class result = "RemoteAutoFill";
        break;
      case 20:
        Class result = "CompanionLinkProx";
        break;
      case 21:
        Class result = "RemoteManagement";
        break;
      case 22:
        Class result = "RemoteAutoFillPong";
        break;
      case 24:
        Class result = "AccessorySetup";
        break;
      case 25:
        Class result = "TVLS";
        break;
      case 27:
        Class result = "ShareAudio";
        break;
      case 28:
        Class result = "AppSignIn";
        break;
      case 29:
        Class result = "Fitness";
        break;
      case 30:
        Class result = "TVCCS";
        break;
      case 31:
        Class result = "TVSA";
        break;
      case 32:
        Class result = "AuthenticateAccounts";
        break;
      case 33:
        Class result = "HomePodSetup";
        break;
      case 34:
        Class result = "CompanionAuthentication";
        break;
      case 36:
        Class result = "dovePeace";
        break;
      case 43:
        Class result = "AuthenticateAccountsV2";
        break;
      case 50:
        Class result = "NeedsRDLink";
        break;
      case 51:
        Class result = "NeedsCLink";
        break;
      case 52:
        Class result = "Goodbye";
        break;
      case 53:
        Class result = "PointToShare";
        break;
      case 55:
        Class result = "AUAction";
        break;
      case 56:
        Class result = "AcceptedInvitations";
        break;
      case 84:
        Class result = "HasInvitations";
        break;
      default:
        return "?";
    }
  }
  return result;
}

void sub_1A54B7380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,os_activity_scope_state_s state)
{
}

uint64_t SFServiceIdentifierToType(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"com.apple.sharing.ApplePay"])
  {
    uint64_t v2 = 14;
  }
  else if ([v1 isEqualToString:@"com.apple.sharing.AppleTVSetup"])
  {
    uint64_t v2 = 11;
  }
  else if ([v1 isEqualToString:@"com.apple.sharing.AudioTuning"])
  {
    uint64_t v2 = 5;
  }
  else if ([v1 isEqualToString:@"com.apple.sharing.AutoUnlock"])
  {
    uint64_t v2 = 9;
  }
  else if ([v1 isEqualToString:@"com.apple.sharing.CompanionLinkProx"])
  {
    uint64_t v2 = 15;
  }
  else
  {
    if ([v1 isEqualToString:@"com.apple.sharing.Configurator"]) {
      goto LABEL_12;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.ContinuityRemote"])
    {
      uint64_t v2 = 1;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.DeviceDiagnostics"])
    {
      uint64_t v2 = 12;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.Debug"])
    {
      uint64_t v2 = 127;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.iOSSetup"])
    {
      uint64_t v2 = 2;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.dovePeace"])
    {
      uint64_t v2 = 23;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.PasswordGranting"])
    {
      uint64_t v2 = 6;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.PasswordSharing"])
    {
      uint64_t v2 = 7;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.ProxHandoff"])
    {
      uint64_t v2 = 20;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.RemoteAutoFill"])
    {
      uint64_t v2 = 13;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.RemoteAutoFillPong"])
    {
      uint64_t v2 = 17;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.RemoteDisplay"])
    {
      uint64_t v2 = 18;
      goto LABEL_53;
    }
    if ([v1 isEqualToString:@"com.apple.sharing.RemoteManagement"])
    {
LABEL_12:
      uint64_t v2 = 16;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.Repair"])
    {
      uint64_t v2 = 3;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.Setup2"])
    {
      uint64_t v2 = 4;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.ShareAudio"])
    {
      uint64_t v2 = 21;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.System"])
    {
      uint64_t v2 = 8;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.WHASetup"])
    {
      uint64_t v2 = 10;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.AuthenticateAccounts"])
    {
      uint64_t v2 = 22;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.HasInvitations"])
    {
      uint64_t v2 = 24;
    }
    else if ([v1 isEqualToString:@"com.apple.sharing.AcceptedInvitation"])
    {
      uint64_t v2 = 25;
    }
    else
    {
      uint64_t v2 = 0;
    }
  }
LABEL_53:

  return v2;
}

id SFServiceTypeToUUID(int a1)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    long long v3 = xmmword_1A56EB659;
    LOBYTE(v3) = a1;
    id v1 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDBytes:&v3];
  }
  else
  {
    id v1 = 0;
  }

  return v1;
}

id SFServiceIdentifierToUUID(void *a1, int *a2)
{
  void v8[2] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  v8[0] = 0;
  v8[1] = 0;
  if ([v3 isEqualToString:@"com.apple.sharing.AirPlay"])
  {
    uint64_t v4 = &unk_1A56EB5D1;
  }
  else if ([v3 isEqualToString:@"com.apple.sharing.ApplePayLegacy"])
  {
    uint64_t v4 = &unk_1A56EB5E2;
  }
  else if ([v3 isEqualToString:@"com.apple.sharing.AutoUnlock"])
  {
    uint64_t v4 = &unk_1A56EB5F3;
  }
  else if ([v3 isEqualToString:@"com.apple.sharing.Control"])
  {
    uint64_t v4 = &unk_1A56EB604;
  }
  else if ([v3 isEqualToString:@"com.apple.sharing.InternetRelay"])
  {
    uint64_t v4 = &unk_1A56EB615;
  }
  else if ([v3 isEqualToString:@"com.apple.sharing.PINPair"])
  {
    uint64_t v4 = &unk_1A56EB626;
  }
  else if ([v3 isEqualToString:@"com.apple.sharing.RemoteApp"])
  {
    uint64_t v4 = &unk_1A56EB637;
  }
  else if ([v3 isEqualToString:@"com.apple.sharing.Setup"])
  {
    uint64_t v4 = &unk_1A56EB648;
  }
  else
  {
    [v3 UTF8String];
    uint64_t v4 = v8;
    if (StringToUUIDEx())
    {
      uint64_t v5 = 0;
      int v6 = -6742;
      goto LABEL_22;
    }
  }
  uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDBytes:v4];
  if (v5) {
    int v6 = 0;
  }
  else {
    int v6 = -6700;
  }
LABEL_22:
  if (a2) {
    *a2 = v6;
  }

  return v5;
}

void sub_1A54B7EEC(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 64));
  _Unwind_Resume(a1);
}

void sub_1A54B86E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1A54B891C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A54B8B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A54B8CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A54B91B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

const char *SFNearbyBLEFrameTypeToString(unsigned int a1)
{
  if (a1 > 0x41) {
    return "?";
  }
  else {
    return off_1E5BC13F0[(char)a1];
  }
}

void sub_1A54B941C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_activity_scope_state_s state)
{
}

void sub_1A54C00B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  _Block_object_dispose(&a17, 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

void sub_1A54C0698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1A54C0904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
}

void sub_1A54C0C8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

const char *SFNearbyBLEServiceTypeToString_0(int a1)
{
  Class result = "Invalid";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      Class result = "ContinuityRemote";
      break;
    case 2:
      Class result = "iOSSetup";
      break;
    case 3:
      Class result = "Repair";
      break;
    case 4:
      Class result = "Setup2";
      break;
    case 5:
      Class result = "AudioTuning";
      break;
    case 6:
      Class result = "PasswordGranting";
      break;
    case 7:
      Class result = "PasswordSharing";
      break;
    case 8:
      Class result = "System";
      break;
    case 9:
      Class result = "AutoUnlock";
      break;
    case 10:
      Class result = "WHASetup";
      break;
    case 11:
      Class result = "AppleTVSetup";
      break;
    case 12:
      Class result = "DeviceDiagnostics";
      break;
    case 13:
      Class result = "RemoteAutoFill";
      break;
    case 14:
      Class result = "ApplePay";
      break;
    case 15:
      Class result = "CompanionLinkProx";
      break;
    case 16:
      Class result = "RemoteManagement";
      break;
    case 17:
      Class result = "RemoteAutoFillPong";
      break;
    case 18:
      Class result = "RemoteDisplay";
      break;
    case 19:
      Class result = "ContinuityKeyboard";
      break;
    case 20:
      Class result = "PhoneCallHandoff";
      break;
    case 21:
      Class result = "ShareAudio";
      break;
    case 22:
      Class result = "AuthenticateAccounts";
      break;
    case 23:
      goto LABEL_5;
    case 24:
      Class result = "HasInvitations";
      break;
    case 25:
      Class result = "AcceptedInvitation";
      break;
    default:
      if (a1 == 127) {
        Class result = "Debug";
      }
      else {
LABEL_5:
      }
        Class result = "?";
      break;
  }
  return result;
}

void sub_1A54C24AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,os_activity_scope_state_s state)
{
}

void sub_1A54C3490(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 64));
  _Unwind_Resume(a1);
}

void sub_1A54C7280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A54C7470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A54C763C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1A54C7800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1A54C7B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

const char *SFNearbyBLEFrameTypeToString_0(unsigned int a1)
{
  if (a1 > 0x41) {
    return "?";
  }
  else {
    return off_1E5BC1938[(char)a1];
  }
}

void sub_1A54C8270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_activity_scope_state_s state)
{
}

void sub_1A54CC67C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Block_object_dispose((const void *)(v2 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

Class initCNContactFormatter_0()
{
  if (ContactsLibrary_sOnce_0 != -1) {
    dispatch_once(&ContactsLibrary_sOnce_0, &__block_literal_global_66);
  }
  Class result = objc_getClass("CNContactFormatter");
  classCNContactFormatter_0 = (uint64_t)result;
  getCNContactFormatterClass_0[0] = (uint64_t (*)())CNContactFormatterFunction_0;
  return result;
}

id CNContactFormatterFunction_0()
{
  return (id)classCNContactFormatter_0;
}

void *__ContactsLibrary_block_invoke_0()
{
  Class result = dlopen("/System/Library/Frameworks/Contacts.framework/Contacts", 2);
  ContactsLibrary_sLib_0 = (uint64_t)result;
  return result;
}

Class initSVXClientServiceManager()
{
  if (SiriVOXLibrary_sOnce != -1) {
    dispatch_once(&SiriVOXLibrary_sOnce, &__block_literal_global_67);
  }
  Class result = objc_getClass("SVXClientServiceManager");
  classSVXClientServiceManager = (uint64_t)result;
  getSVXClientServiceManagerClass[0] = (uint64_t (*)())SVXClientServiceManagerFunction;
  return result;
}

id SVXClientServiceManagerFunction()
{
  return (id)classSVXClientServiceManager;
}

void *__SiriVOXLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/SiriVOX.framework/SiriVOX", 2);
  SiriVOXLibrary_sLib = (uint64_t)result;
  return result;
}

Class initSVXSystemEvent()
{
  if (SiriVOXLibrary_sOnce != -1) {
    dispatch_once(&SiriVOXLibrary_sOnce, &__block_literal_global_67);
  }
  Class result = objc_getClass("SVXSystemEvent");
  classSVXSystemEvent = (uint64_t)result;
  getSVXSystemEventClass[0] = (uint64_t (*)())SVXSystemEventFunction;
  return result;
}

id SVXSystemEventFunction()
{
  return (id)classSVXSystemEvent;
}

Class initVSSpeechSynthesizer()
{
  if (VoiceServicesLibrary_sOnce != -1) {
    dispatch_once(&VoiceServicesLibrary_sOnce, &__block_literal_global_562);
  }
  Class result = objc_getClass("VSSpeechSynthesizer");
  classVSSpeechSynthesizer = (uint64_t)result;
  getVSSpeechSynthesizerClass[0] = (uint64_t (*)())VSSpeechSynthesizerFunction;
  return result;
}

id VSSpeechSynthesizerFunction()
{
  return (id)classVSSpeechSynthesizer;
}

void *__VoiceServicesLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices", 2);
  VoiceServicesLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t initVSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences()
{
  if (VoiceServicesLibrary_sOnce != -1) {
    dispatch_once(&VoiceServicesLibrary_sOnce, &__block_literal_global_562);
  }
  id v0 = (uint64_t (*)())dlsym((void *)VoiceServicesLibrary_sLib, "VSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences");
  softLinkVSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences[0] = v0;

  return v0();
}

Class initVSSpeechRequest()
{
  if (VoiceServicesLibrary_sOnce != -1) {
    dispatch_once(&VoiceServicesLibrary_sOnce, &__block_literal_global_562);
  }
  Class result = objc_getClass("VSSpeechRequest");
  classVSSpeechRequest = (uint64_t)result;
  getVSSpeechRequestClass[0] = (uint64_t (*)())VSSpeechRequestFunction;
  return result;
}

id VSSpeechRequestFunction()
{
  return (id)classVSSpeechRequest;
}

Class initSVXDeviceSetupContext()
{
  if (SiriVOXLibrary_sOnce != -1) {
    dispatch_once(&SiriVOXLibrary_sOnce, &__block_literal_global_67);
  }
  Class result = objc_getClass("SVXDeviceSetupContext");
  classSVXDeviceSetupContext = (uint64_t)result;
  getSVXDeviceSetupContextClass[0] = (uint64_t (*)())SVXDeviceSetupContextFunction;
  return result;
}

id SVXDeviceSetupContextFunction()
{
  return (id)classSVXDeviceSetupContext;
}

Class initSVXDeviceSetupFlowSceneBuilder()
{
  if (SiriVOXLibrary_sOnce != -1) {
    dispatch_once(&SiriVOXLibrary_sOnce, &__block_literal_global_67);
  }
  Class result = objc_getClass("SVXDeviceSetupFlowSceneBuilder");
  classSVXDeviceSetupFlowSceneBuilder = (uint64_t)result;
  getSVXDeviceSetupFlowSceneBuilderClass[0] = (uint64_t (*)())SVXDeviceSetupFlowSceneBuilderFunction;
  return result;
}

id SVXDeviceSetupFlowSceneBuilderFunction()
{
  return (id)classSVXDeviceSetupFlowSceneBuilder;
}

Class initTRAnisetteDataHandler()
{
  if (TouchRemoteLibrary_sOnce_6 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_6, &__block_literal_global_69);
  }
  Class result = objc_getClass("TRAnisetteDataHandler");
  classTRAnisetteDataHandler = (uint64_t)result;
  getTRAnisetteDataHandlerClass[0] = (uint64_t (*)())TRAnisetteDataHandlerFunction;
  return result;
}

id TRAnisetteDataHandlerFunction()
{
  return (id)classTRAnisetteDataHandler;
}

void *__TouchRemoteLibrary_block_invoke_6()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/TouchRemote.framework/TouchRemote", 2);
  TouchRemoteLibrary_sLib_6 = (uint64_t)result;
  return result;
}

Class initTREventMessage()
{
  if (TouchRemoteLibrary_sOnce_6 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_6, &__block_literal_global_69);
  }
  Class result = objc_getClass("TREventMessage");
  classTREventMessage = (uint64_t)result;
  getTREventMessageClass[0] = (uint64_t (*)())TREventMessageFunction;
  return result;
}

id TREventMessageFunction()
{
  return (id)classTREventMessage;
}

Class initTRRequestMessage()
{
  if (TouchRemoteLibrary_sOnce_6 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_6, &__block_literal_global_69);
  }
  Class result = objc_getClass("TRRequestMessage");
  classTRRequestMessage = (uint64_t)result;
  getTRRequestMessageClass[0] = (uint64_t (*)())TRRequestMessageFunction;
  return result;
}

id TRRequestMessageFunction()
{
  return (id)classTRRequestMessage;
}

Class initTRResponseMessage()
{
  if (TouchRemoteLibrary_sOnce_6 != -1) {
    dispatch_once(&TouchRemoteLibrary_sOnce_6, &__block_literal_global_69);
  }
  Class result = objc_getClass("TRResponseMessage");
  classTRResponseMessage = (uint64_t)result;
  getTRResponseMessageClass[0] = (uint64_t (*)())TRResponseMessageFunction;
  return result;
}

id TRResponseMessageFunction()
{
  return (id)classTRResponseMessage;
}

void _wifiDeviceAttached(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  uint64_t v4 = v3[14];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___wifiDeviceAttached_block_invoke;
  block[3] = &unk_1E5BBC870;
  id v7 = v3;
  uint64_t v5 = v3;
  dispatch_async(v4, block);
}

void _wifiServerRestarted(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  id v3 = v2[14];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___wifiServerRestarted_block_invoke;
  block[3] = &unk_1E5BBC870;
  id v6 = v2;
  uint64_t v4 = v2;
  dispatch_async(v3, block);
}

void _wifiAutoJoinNotification(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a3;
  id v5 = a2;
  id v6 = v4[14];
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = ___wifiAutoJoinNotification_block_invoke;
  v9[3] = &unk_1E5BBBD18;
  id v10 = v4;
  id v11 = v5;
  id v7 = v5;
  uint64_t v8 = v4;
  dispatch_async(v6, v9);
}

void _wifiDeviceDetached(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  id v3 = v2[14];
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___wifiDeviceDetached_block_invoke;
  block[3] = &unk_1E5BBC870;
  id v6 = v2;
  uint64_t v4 = v2;
  dispatch_async(v3, block);
}

unsigned char *___wifiAutoJoinNotification_block_invoke(uint64_t a1)
{
  Class result = *(unsigned char **)(a1 + 32);
  if (!result[8]) {
    return (unsigned char *)[result _wifiAutoJoinNotification:*(void *)(a1 + 40)];
  }
  return result;
}

uint64_t ___wifiDeviceAttached_block_invoke(uint64_t result)
{
  if (!*(unsigned char *)(*(void *)(result + 32) + 8))
  {
    uint64_t v1 = result;
    if (gLogCategory_SFWiFiHealthMonitor <= 30
      && (gLogCategory_SFWiFiHealthMonitor != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    uint64_t v2 = *(void **)(v1 + 32);
    return [v2 _update];
  }
  return result;
}

uint64_t ___wifiDeviceDetached_block_invoke(uint64_t result)
{
  if (!*(unsigned char *)(*(void *)(result + 32) + 8))
  {
    uint64_t v1 = result;
    if (gLogCategory_SFWiFiHealthMonitor <= 30
      && (gLogCategory_SFWiFiHealthMonitor != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(unsigned char *)(*(void *)(v1 + 32) + 32) = 0;
    *(void *)(*(void *)(v1 + 32) + 24) = 0;
    uint64_t v2 = *(void **)(v1 + 32);
    return [v2 _update];
  }
  return result;
}

uint64_t ___wifiServerRestarted_block_invoke(uint64_t result)
{
  if (!*(unsigned char *)(*(void *)(result + 32) + 8))
  {
    uint64_t v1 = result;
    if (gLogCategory_SFWiFiHealthMonitor <= 60
      && (gLogCategory_SFWiFiHealthMonitor != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    [*(id *)(v1 + 32) _wifiEnsureStopped];
    uint64_t v2 = *(void **)(v1 + 32);
    return [v2 _wifiEnsureStarted];
  }
  return result;
}

uint64_t sub_1A54D93BC()
{
  uint64_t v0 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v0, qword_1E96702D8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96702D8);
  if (qword_1E9670340 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9672AA8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t SFUserDefault.key.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t SFUserDefault.keyString.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void *SFUserDefault.__allocating_init(userDefaults:key:featureFlagsDomain:defaultValue:prefsChangedLibNotifyName:override:processesToKill:)(void *a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v14 = sub_1A54E3CA8(a1, a2, a3, a4, a5, a6, a7 & 0x1FF, a8, a9, a10, a11, a12);
  uint64_t v15 = *(void *)(v12 + 80);
  uint64_t v16 = sub_1A56D5898();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a11, v16);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a8, v15);
  return v14;
}

void *SFUserDefault.init(userDefaults:key:featureFlagsDomain:defaultValue:prefsChangedLibNotifyName:override:processesToKill:)(void *a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14 = *v12;
  uint64_t v15 = sub_1A54E38F0(a1, a2, a3, a4, a5, a6, a7 & 0x1FF, a8, a9, a10, a11, a12);
  uint64_t v16 = *(void *)(v14 + 80);
  uint64_t v17 = sub_1A56D5898();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a11, v17);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a8, v16);
  return v15;
}

uint64_t SFUserDefault.runtimeOverride.getter()
{
  return sub_1A56D4E28();
}

uint64_t sub_1A54D9694()
{
  return SFUserDefault.runtimeOverride.getter();
}

uint64_t sub_1A54D96B8(uint64_t a1)
{
  return sub_1A54E3D5C(a1);
}

uint64_t SFUserDefault.runtimeOverride.setter(uint64_t a1)
{
  sub_1A54E3D5C(a1);
  uint64_t v2 = sub_1A56D5898();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

void (*SFUserDefault.runtimeOverride.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  *id v3 = v1;
  uint64_t v4 = sub_1A56D5898();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  sub_1A56D4E28();
  return sub_1A54D9864;
}

void sub_1A54D9864(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_1A54E3D5C((uint64_t)v3);
    id v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_1A54E3D5C(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

BOOL SFUserDefault.hasRuntimeOverride.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = sub_1A56D5898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - v4;
  sub_1A56D4E28();
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v5, 1, v1) != 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

Swift::Void __swiftcall SFUserDefault.clearRuntimeOverride()()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = sub_1A56D5898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v6 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))((char *)&v6 - v4, 1, 1, v1);
  sub_1A54E3D5C((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t SFUserDefault.hasValueOnDisk.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  id v2 = v1;
  uint64_t v3 = (void *)sub_1A56D5098();
  id v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_1A56D5968();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1A54E3E90((uint64_t)v7, (uint64_t)&v8);
  if (!*((void *)&v9 + 1)) {
    goto LABEL_8;
  }
  uint64_t v5 = 1;
LABEL_9:
  sub_1A54E4D44((uint64_t)&v8, &qword_1EB3DB9F0);
  return v5;
}

Swift::Void __swiftcall SFUserDefault.clearValueOnDisk()()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v2 = v1;
    id v3 = (id)sub_1A56D5098();
    objc_msgSend(v2, sel_removeObjectForKey_, v3);
  }
}

uint64_t SFUserDefault.hasFeatureFlag.getter()
{
  if (*(unsigned char *)(v0 + 81))
  {
    unsigned __int8 v1 = 0;
  }
  else
  {
    type metadata accessor for SFUserDefault.FFKey();
    unsigned __int8 v1 = sub_1A54D9D88();
  }
  return v1 & 1;
}

id sub_1A54D9D88()
{
  id result = self;
  if (!*(void *)v0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if ((*(unsigned char *)(v0 + 40) | *(unsigned char *)(v0 + 16)))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(v0 + 24)) {
    return objc_msgSend(result, sel_featureEnabledForDomain_feature_);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t SFUserDefault.value.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v70 = *(void *)v1;
  uint64_t v4 = *(void *)(v70 + 80);
  uint64_t v5 = sub_1A56D5898();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v67 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v69 = (char *)&v60 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = *(void *)(v4 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v11);
  int v66 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v68 = (char *)&v60 - v18;
  MEMORY[0x1F4188790](v17);
  long long v20 = (char *)&v60 - v19;
  sub_1A56D4E28();
  uint64_t v21 = v14;
  long long v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v22(v13, 1, v4) != 1)
  {
    int v38 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v38(v20, v13, v4);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v38)(a1, v20, v4);
  }
  uint64_t v65 = a1;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v6 + 8;
  long long v24 = v25;
  v25(v13, v5);
  uint64_t v26 = (void *)*((void *)v2 + 7);
  if (!v26) {
    goto LABEL_8;
  }
  uint64_t v61 = v24;
  uint64_t v62 = v23;
  uint64_t v63 = v5;
  uint64_t v64 = v21;
  id v27 = v26;
  int v28 = (void *)sub_1A56D5098();
  id v29 = objc_msgSend(v27, sel_objectForKey_, v28);

  if (!v29)
  {

    uint64_t v21 = v64;
LABEL_8:
    if ((v2[81] & 1) != 0 || v4 != MEMORY[0x1E4FBB390]) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 16))(v65, &v2[*(void *)(*(void *)v2 + 128)], v4);
    }
    char v39 = v2[80];
    char v40 = v2[32];
    long long v73 = *((_OWORD *)v2 + 4);
    char v74 = v39;
    long long v75 = *((_OWORD *)v2 + 1);
    char v76 = v40;
    type metadata accessor for SFUserDefault.FFKey();
    LOBYTE(v72[0]) = sub_1A54D9D88() & 1;
    return swift_dynamicCast();
  }
  sub_1A56D5968();
  swift_unknownObjectRelease();
  sub_1A54E3F10(v72, &v73);
  sub_1A54E3F20((uint64_t)&v73, (uint64_t)v72);
  uint64_t v30 = v69;
  uint64_t v31 = v4;
  char v32 = swift_dynamicCast();
  uint64_t v33 = v64;
  int v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
  if (v32)
  {
    v34(v30, 0, 1, v4);

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v73);
    int v35 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    __int16 v36 = v68;
    v35(v68, v30, v4);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v35)(v65, v36, v4);
  }
  v34(v30, 1, 1, v4);
  v61(v30, v63);
  uint64_t v41 = (void *)sub_1A56D5098();
  id v42 = objc_msgSend(v27, sel_stringForKey_, v41);

  if (!v42)
  {
    if (qword_1E96702D0 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1A56D4D98();
    __swift_project_value_buffer(v55, (uint64_t)qword_1E96702D8);
    swift_retain_n();
    id v48 = sub_1A56D4D78();
    os_log_type_t v49 = sub_1A56D57B8();
    if (os_log_type_enabled(v48, v49))
    {
      long long v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)long long v50 = 136315138;
      *(void *)&v72[0] = v51;
      uint64_t v56 = sub_1A56D5A48();
      uint64_t v71 = sub_1A54E3290(v56, v57, (uint64_t *)v72);
      uint64_t v31 = v4;
      sub_1A56D5928();
      swift_release_n();
      swift_bridgeObjectRelease();
      long long v54 = "Failed to cast value or get string from stored UserDefault. Returning default value {key: %s}";
      goto LABEL_22;
    }
LABEL_23:
    swift_release_n();
    goto LABEL_24;
  }
  uint64_t v43 = sub_1A56D50D8();
  uint64_t v45 = v44;

  int v46 = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 + 88) + 16))(v43, v45, v4);
  if (v22(v46, 1, v4) == 1)
  {
    v61(v46, v63);
    if (qword_1E96702D0 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_1A56D4D98();
    __swift_project_value_buffer(v47, (uint64_t)qword_1E96702D8);
    swift_retain_n();
    id v48 = sub_1A56D4D78();
    os_log_type_t v49 = sub_1A56D57B8();
    if (os_log_type_enabled(v48, v49))
    {
      long long v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)long long v50 = 136315138;
      *(void *)&v72[0] = v51;
      uint64_t v52 = sub_1A56D5A48();
      uint64_t v71 = sub_1A54E3290(v52, v53, (uint64_t *)v72);
      uint64_t v31 = v4;
      sub_1A56D5928();
      swift_release_n();
      swift_bridgeObjectRelease();
      long long v54 = "Failed to create value from stored UserDefault. Returning default value {key: %s}";
LABEL_22:
      _os_log_impl(&dword_1A5389000, v48, v49, v54, v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v51, -1, -1);
      MEMORY[0x1A626CE20](v50, -1, -1);
LABEL_24:

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v73);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 16))(v65, &v2[*(void *)(*(void *)v2 + 128)], v31);
    }
    goto LABEL_23;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v73);

  id v58 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  long long v59 = v66;
  v58(v66, v46, v4);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v58)(v65, v59, v4);
}

uint64_t sub_1A54DA65C@<X0>(uint64_t a1@<X8>)
{
  return SFUserDefault.value.getter(a1);
}

uint64_t sub_1A54DA680(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  id v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return SFUserDefault.value.setter((uint64_t)v2);
}

uint64_t SFUserDefault.value.setter(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1A56D4CB8();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A56D4C28();
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SFUserDefaultsRepresentation();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (unsigned __int8 *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)v2[7];
  if (v14)
  {
    uint64_t v43 = v7;
    uint64_t v15 = a1;
    uint64_t v17 = *(void *)(v4 + 80);
    uint64_t v16 = *(void *)(v4 + 88);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    id v47 = v14;
    uint64_t v48 = v17;
    uint64_t v49 = v15;
    v18(v17, v16);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        double v24 = *(double *)v13;
        uint64_t v25 = (void *)sub_1A56D5098();
        id v26 = v47;
        objc_msgSend(v47, sel_setInteger_forKey_, *(void *)&v24, v25);
        goto LABEL_9;
      case 2u:
        id v27 = (void *)sub_1A56D6168();
        uint64_t v25 = (void *)sub_1A56D5098();
        id v26 = v47;
        objc_msgSend(v47, sel_setObject_forKey_, v27, v25);

LABEL_9:
        goto LABEL_12;
      case 3u:
        double v28 = *(double *)v13;
        id v29 = (void *)sub_1A56D5098();
        id v20 = v47;
        objc_msgSend(v47, sel_setDouble_forKey_, v29, v28);
        goto LABEL_16;
      case 4u:
        uint64_t v30 = (void *)sub_1A56D5098();
        swift_bridgeObjectRelease();
        uint64_t v31 = (void *)sub_1A56D5098();
        id v26 = v47;
        objc_msgSend(v47, sel_setObject_forKey_, v30, v31);

LABEL_12:
        goto LABEL_18;
      case 5u:
        uint64_t v32 = v44;
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v44 + 32))(v10, v13, v8);
        uint64_t v33 = (void *)sub_1A56D4AF8();
        int v34 = (void *)sub_1A56D5098();
        id v35 = v47;
        objc_msgSend(v47, sel_setObject_forKey_, v33, v34);

        (*(void (**)(uint64_t))(*(void *)(v48 - 8) + 8))(v49);
        return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, v8);
      case 6u:
        uint64_t v37 = v45;
        uint64_t v36 = v46;
        int v38 = v43;
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32))(v43, v13, v46);
        _s7Sharing9SFAirDropO18TransferIdentifierV11stringValueSSvg_0();
        char v39 = (void *)sub_1A56D5098();
        swift_bridgeObjectRelease();
        char v40 = (void *)sub_1A56D5098();
        id v41 = v47;
        objc_msgSend(v47, sel_setObject_forKey_, v39, v40);

        (*(void (**)(uint64_t))(*(void *)(v48 - 8) + 8))(v49);
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v36);
      case 7u:
        id v29 = (void *)sub_1A56D5098();
        id v20 = v47;
        objc_msgSend(v47, sel_removeObjectForKey_, v29);
LABEL_16:

        goto LABEL_17;
      default:
        uint64_t v19 = *v13;
        id v20 = (id)sub_1A56D5098();
        id v21 = v47;
        objc_msgSend(v47, sel_setBool_forKey_, v19, v20);

LABEL_17:
LABEL_18:
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v48 - 8) + 8))(v49);
        break;
    }
  }
  else
  {
    long long v22 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8);
    return v22(a1);
  }
  return result;
}

void (*SFUserDefault.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  SFUserDefault.value.getter((uint64_t)v7);
  return sub_1A54DADA0;
}

void sub_1A54DADA0(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    SFUserDefault.value.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    SFUserDefault.value.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t SFUserDefault.values.getter()
{
  uint64_t v0 = sub_1A56D54A8();
  MEMORY[0x1F4188790](v0);
  *(uint64_t *)((char *)&v4 - v1) = 1;
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - v1, *MEMORY[0x1E4FBD018]);
  return sub_1A56D5508();
}

uint64_t sub_1A54DAF60(uint64_t a1, uint64_t *a2)
{
  uint64_t v43 = *a2;
  uint64_t v4 = *(void *)(v43 + 80);
  uint64_t v5 = sub_1A56D54D8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A56D5478();
  uint64_t v14 = *(void *)(v13 - 8);
  char v39 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 56);
  uint64_t v40 = v13;
  uint64_t v38 = v14 + 56;
  v39(v12, 1, 1);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v44 = a1;
  uint64_t v37 = v15;
  v15(v9, a1, v5);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v41 = v7;
  uint64_t v36 = v16 | 7;
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = v43;
  *((void *)v17 + 2) = 0;
  *((void *)v17 + 3) = 0;
  uint64_t v43 = v4;
  *((void *)v17 + 4) = v4;
  uint64_t v42 = *(void *)(v18 + 88);
  *((void *)v17 + 5) = v42;
  *((void *)v17 + 6) = a2;
  id v35 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v35(&v17[(v16 + 56) & ~v16], v9, v5);
  swift_retain();
  uint64_t v19 = sub_1A54EB08C((uint64_t)v12, (uint64_t)&unk_1E96708F8, (uint64_t)v17);
  uint64_t v20 = v19;
  id v21 = (uint64_t *)((char *)a2 + *(void *)(*a2 + 144));
  uint64_t v22 = v21[1];
  if (v22)
  {
    uint64_t v33 = v12;
    uint64_t v34 = v19;
    uint64_t v32 = *v21;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v12, 1, 1, v40);
    v37(v9, v44, v5);
    uint64_t v23 = v5;
    double v24 = (char *)swift_allocObject();
    *((void *)v24 + 2) = 0;
    *((void *)v24 + 3) = 0;
    uint64_t v25 = v42;
    uint64_t v26 = v43;
    *((void *)v24 + 4) = v43;
    *((void *)v24 + 5) = v25;
    *((void *)v24 + 6) = v32;
    *((void *)v24 + 7) = v22;
    *((void *)v24 + _Block_object_dispose(&a9, 8) = a2;
    v35(&v24[(v16 + 72) & ~v16], v9, v23);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1A54EB08C((uint64_t)v33, (uint64_t)&unk_1E9670908, (uint64_t)v24);
    uint64_t v28 = v26;
    uint64_t v20 = v34;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v28 = v43;
    uint64_t v25 = v42;
  }
  id v29 = (void *)swift_allocObject();
  v29[2] = v28;
  v29[3] = v25;
  uint8_t v29[4] = v20;
  v29[5] = v27;
  return sub_1A56D5498();
}

uint64_t sub_1A54DB300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  void v5[4] = a5;
  uint64_t v6 = *(void *)(*(void *)a4 + 80);
  v5[5] = v6;
  uint64_t v7 = sub_1A56D5488();
  v5[6] = v7;
  v5[7] = *(void *)(v7 - 8);
  v5[8] = swift_task_alloc();
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v5[12] = sub_1A56D5898();
  uint64_t v8 = sub_1A56D5898();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = sub_1A56D4E48();
  v5[17] = swift_getWitnessTable();
  uint64_t v9 = sub_1A56D4DF8();
  v5[18] = v9;
  v5[19] = *(void *)(v9 - 8);
  v5[20] = swift_task_alloc();
  uint64_t v10 = sub_1A56D4DE8();
  v5[21] = v10;
  v5[22] = *(void *)(v10 - 8);
  v5[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A54DB5C4, 0, 0);
}

uint64_t sub_1A54DB5C4()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[16];
  v0[2] = *(void *)(v0[3] + *(void *)(*(void *)v0[3] + 136));
  MEMORY[0x1A6269130](v5, v3);
  sub_1A56D4DC8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[24] = v6;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v6 = v0;
  v6[1] = sub_1A54DB704;
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[15];
  return MEMORY[0x1F4187C88](v9, 0, 0, v8, WitnessTable);
}

uint64_t sub_1A54DB704()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A54DB800, 0, 0);
}

uint64_t sub_1A54DB800()
{
  uint64_t v1 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v0[12] - 8) + 48))(v1, 1) == 1)
  {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[14];
    uint64_t v6 = v0[10];
    uint64_t v5 = v0[11];
    uint64_t v7 = v0[8];
    uint64_t v8 = v0[9];
    uint64_t v9 = v0[7];
    uint64_t v15 = v0[6];
    uint64_t v16 = v0[13];
    uint64_t v10 = v0[5];
    SFUserDefault.value.getter(v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v10);
    sub_1A56D54D8();
    sub_1A56D54B8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v15);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v10);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v16);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[24] = v11;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v11 = v0;
    v11[1] = sub_1A54DB704;
    uint64_t v13 = v0[21];
    uint64_t v14 = v0[15];
    return MEMORY[0x1F4187C88](v14, 0, 0, v13, WitnessTable);
  }
}

uint64_t sub_1A54DBA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  _OWORD v7[2] = a4;
  v7[3] = a5;
  uint64_t v8 = *(void *)(*(void *)a6 + 80);
  v7[6] = v8;
  uint64_t v9 = sub_1A56D5488();
  v7[7] = v9;
  v7[8] = *(void *)(v9 - 8);
  v7[9] = swift_task_alloc();
  v7[10] = *(void *)(v8 - 8);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670910);
  v7[13] = v10;
  v7[14] = *(void *)(v10 - 8);
  v7[15] = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670918);
  v7[16] = v11;
  v7[17] = *(void *)(v11 - 8);
  v7[18] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9670920);
  v7[19] = v12;
  v7[20] = *(void *)(v12 - 8);
  v7[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A54DBCD0, 0, 0);
}

uint64_t sub_1A54DBCD0()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v4 = (void *)v0[15];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[14];
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  *uint64_t v4 = 1;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E4FBD018], v5);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  sub_1A56D5508();
  swift_task_dealloc();
  sub_1A56D54E8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[22] = v10;
  void *v10 = v0;
  v10[1] = sub_1A54DBE4C;
  uint64_t v11 = v0[19];
  return MEMORY[0x1F4187D58](v0 + 23, 0, 0, v11);
}

uint64_t sub_1A54DBE4C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A54DBF48, 0, 0);
}

uint64_t sub_1A54DBF48()
{
  if (*(unsigned char *)(v0 + 188) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 48);
    SFUserDefault.value.getter(v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v9);
    sub_1A56D54D8();
    sub_1A56D54B8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v10;
    void *v10 = v0;
    v10[1] = sub_1A54DBE4C;
    uint64_t v11 = *(void *)(v0 + 152);
    return MEMORY[0x1F4187D58](v0 + 184, 0, 0, v11);
  }
}

uint64_t sub_1A54DC148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1A56D5528();
  if (a3)
  {
    return sub_1A56D5528();
  }
  return result;
}

void *SFUserDefault.description.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v17 - v4;
  if (SFUserDefault.hasRuntimeOverride.getter())
  {
    uint64_t v6 = sub_1A54E2784(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_1A54E2784((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    v6[2] = v8 + 1;
    uint64_t v9 = &v6[2 * v8];
    void v9[4] = 0x4F656D69746E7572;
    v9[5] = 0xEF65646972726576;
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  if (SFUserDefault.hasValueOnDisk.getter())
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1A54E2784(0, v6[2] + 1, 1, v6);
    }
    unint64_t v11 = v6[2];
    unint64_t v10 = v6[3];
    if (v11 >= v10 >> 1) {
      uint64_t v6 = sub_1A54E2784((void *)(v10 > 1), v11 + 1, 1, v6);
    }
    v6[2] = v11 + 1;
    uint64_t v12 = &v6[2 * v11];
    v12[4] = 0x446E4F65756C6176;
    void v12[5] = 0xEB000000006B7369;
  }
  if (SFUserDefault.hasFeatureFlag.getter())
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1A54E2784(0, v6[2] + 1, 1, v6);
    }
    unint64_t v14 = v6[2];
    unint64_t v13 = v6[3];
    if (v14 >= v13 >> 1) {
      uint64_t v6 = sub_1A54E2784((void *)(v13 > 1), v14 + 1, 1, v6);
    }
    v6[2] = v14 + 1;
    uint64_t v15 = &v6[2 * v14];
    void v15[4] = 0x4665727574616566;
    v15[5] = 0xEB0000000067616CLL;
  }
  else if (!v6[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    sub_1A56D5A48();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v17 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C528);
  sub_1A54E40A8((unint64_t *)&qword_1E96703C0, &qword_1E966C528);
  sub_1A56D5018();
  swift_bridgeObjectRelease();
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_1A56D5A48();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
LABEL_20:
  sub_1A56D51C8();
  SFUserDefault.value.getter((uint64_t)v5);
  sub_1A56D5EF8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v17;
}

uint64_t SFUserDefault.userDefaultDescription.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (uint64_t)&v16 - v6;
  BOOL v8 = v4 == MEMORY[0x1E4FBB390];
  uint64_t v10 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  SFUserDefault.value.getter(v7);
  sub_1A56D5EF8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = v16;
  unint64_t v12 = v17;
  LOBYTE(v4) = SFUserDefault.hasRuntimeOverride.getter();
  LOBYTE(v7) = SFUserDefault.hasValueOnDisk.getter();
  char v13 = SFUserDefault.hasFeatureFlag.getter();
  uint64_t v14 = *(void *)((char *)v2 + *(void *)(*v2 + 152));
  *(void *)a2 = v10;
  *(void *)(a2 + _Block_object_dispose(&a9, 8) = v9;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v4 & 1;
  *(unsigned char *)(a2 + 33) = v7 & 1;
  *(unsigned char *)(a2 + 34) = v13 & 1;
  *(unsigned char *)(a2 + 35) = 0;
  *(unsigned char *)(a2 + 36) = v8;
  *(void *)(a2 + 40) = v14;
  return swift_bridgeObjectRetain();
}

id *SFUserDefault.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SFUserDefault.__deallocating_deinit()
{
  SFUserDefault.deinit();

  return swift_deallocClassInstance();
}

uint64_t SFAnyUserDefault.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAnyUserDefault.processesToKill.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A54DC85C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = *(void *)((char *)a1 + *(void *)(*a1 + 152));
  *a2 = a1[5];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = sub_1A54E7E64;
  a2[4] = a1;
  a2[5] = sub_1A54E7E84;
  a2[6] = a1;
  a2[7] = j___s7Sharing13SFUserDefaultC04userC11DescriptionAA0bcE0Vvg;
  a2[8] = a1;
  swift_retain_n();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A54DC8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v7 = *a3;
  uint64_t v8 = *(void *)(*a3 + 80);
  uint64_t v31 = sub_1A56D5898();
  uint64_t v9 = *(void *)(v31 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v31);
  unint64_t v12 = (char *)&v26 - v11;
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v27 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v26 - v15;
  id v29 = a3;
  uint64_t v17 = *(void *)(v7 + 88);
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 16);
  swift_bridgeObjectRetain();
  v18(a1, a2, v8, v17);
  uint64_t v32 = 0;
  uint64_t v33 = 0xE000000000000000;
  sub_1A56D5A28();
  sub_1A56D51C8();
  sub_1A56D51C8();
  sub_1A56D51C8();
  sub_1A56D6238();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  uint64_t v19 = v31;
  uint64_t v20 = v34;
  Optional.tryUnwrap(_:file:line:)(v32, v33, 0xD00000000000004CLL, 0x80000001A5738140, 235, v31, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v19);
  if (v20) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v27;
  uint64_t v23 = v28;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v27, v16, v8);
  SFUserDefault.value.setter(v22);
  double v24 = v30;
  v30[3] = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v24);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_0, v16, v8);
}

uint64_t SFAnyUserDefault.userDefaultDescription.getter()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t SFAnyUserDefault.update(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

Swift::Bool __swiftcall SFAnyUserDefault.clearValueOnDisk()()
{
  return (*(uint64_t (**)(void))(v0 + 40))() & 1;
}

uint64_t sub_1A54DCCA4()
{
  type metadata accessor for SFUserDefaultsRegistry();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C480);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 24) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E966C4C8);
  swift_allocObject();
  uint64_t result = sub_1A56D6218();
  qword_1E96A7F10 = result;
  return result;
}

uint64_t sub_1A54DCD38()
{
  uint64_t v1 = (void *)swift_retain();
  sub_1A54DC85C(v1, v5);
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v0 + 24) + 16);
  os_unfair_lock_lock(v2);
  sub_1A54E7DE0(v3);
  os_unfair_lock_unlock(v2);
  return sub_1A54E7DFC((uint64_t)v5);
}

uint64_t sub_1A54DCDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a2 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void **)(a2 + 16);
  sub_1A54E7D74(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 16) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = sub_1A54E2894(0, v6[2] + 1, 1, v6);
    *uint64_t v5 = v6;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t v6 = sub_1A54E2894((void *)(v8 > 1), v9 + 1, 1, v6);
    *uint64_t v5 = v6;
  }
  v6[2] = v9 + 1;
  uint64_t v10 = &v6[9 * v9];
  *((_OWORD *)v10 + 2) = *(_OWORD *)a3;
  long long v11 = *(_OWORD *)(a3 + 16);
  long long v12 = *(_OWORD *)(a3 + 32);
  long long v13 = *(_OWORD *)(a3 + 48);
  v10[12] = *(void *)(a3 + 64);
  *((_OWORD *)v10 + 4) = v12;
  *((_OWORD *)v10 + 5) = v13;
  *((_OWORD *)v10 + 3) = v11;
  return swift_endAccess();
}

uint64_t sub_1A54DCEA8@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t SFUserDefaultsRegistry.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t SFUserDefaultsRegistry.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t SFUserDefaultDescription.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFUserDefaultDescription.resolvedValueDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFUserDefaultDescription.hasRuntimeOverride.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SFUserDefaultDescription.hasValueOnDisk.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SFUserDefaultDescription.hasFeatureFlag.getter()
{
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t SFUserDefaultDescription.untracked.getter()
{
  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t SFUserDefaultDescription.isBool.getter()
{
  return *(unsigned __int8 *)(v0 + 36);
}

uint64_t SFUserDefaultDescription.processesToKill.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SFUserDefaultDescription.description.getter()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 33);
  int v3 = *((unsigned __int8 *)v0 + 34);
  int v4 = *((unsigned __int8 *)v0 + 35);
  if (*((unsigned char *)v0 + 32) != 1)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    if (!*((unsigned char *)v0 + 33)) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_1A54E2784(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    uint64_t v5 = sub_1A54E2784((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  v5[2] = v7 + 1;
  unint64_t v8 = &v5[2 * v7];
  v8[4] = 0x4F656D69746E7572;
  v8[5] = 0xEF65646972726576;
  if (v2)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_1A54E2784(0, v5[2] + 1, 1, v5);
    }
    unint64_t v10 = v5[2];
    unint64_t v9 = v5[3];
    if (v10 >= v9 >> 1) {
      uint64_t v5 = sub_1A54E2784((void *)(v9 > 1), v10 + 1, 1, v5);
    }
    v5[2] = v10 + 1;
    long long v11 = &v5[2 * v10];
    void v11[4] = 0x446E4F65756C6176;
    v11[5] = 0xEB000000006B7369;
  }
LABEL_12:
  if (v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_1A54E2784(0, v5[2] + 1, 1, v5);
    }
    unint64_t v16 = v5[2];
    unint64_t v15 = v5[3];
    if (v16 >= v15 >> 1) {
      uint64_t v5 = sub_1A54E2784((void *)(v15 > 1), v16 + 1, 1, v5);
    }
    v5[2] = v16 + 1;
    uint64_t v17 = &v5[2 * v16];
    v17[4] = 0x4665727574616566;
    v17[5] = 0xEB0000000067616CLL;
    if (v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
LABEL_14:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_1A54E2784(0, v5[2] + 1, 1, v5);
    }
    unint64_t v13 = v5[2];
    unint64_t v12 = v5[3];
    if (v13 >= v12 >> 1) {
      uint64_t v5 = sub_1A54E2784((void *)(v12 > 1), v13 + 1, 1, v5);
    }
    v5[2] = v13 + 1;
    uint64_t v14 = &v5[2 * v13];
    void v14[4] = 0x656B636172746E75;
    v14[5] = 0xE900000000000064;
    goto LABEL_25;
  }
  if (!v5[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v1;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C528);
  sub_1A54E40A8((unint64_t *)&qword_1E96703C0, &qword_1E966C528);
  sub_1A56D5018();
  swift_bridgeObjectRelease();
  uint64_t v19 = v1;
  swift_bridgeObjectRetain();
  sub_1A56D51C8();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
LABEL_26:
  sub_1A56D51C8();
  swift_bridgeObjectRetain();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t SFUserDefaultDescription.oneLineValueDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  v7[0] = 10;
  v7[1] = 0xE100000000000000;
  v6[2] = v7;
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1A54E2184(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A54E4050, (uint64_t)v6, v1, v2);
  swift_bridgeObjectRelease();
  v7[0] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96703C8);
  sub_1A54E40A8(&qword_1E96703D0, &qword_1E96703C8);
  sub_1A54E40EC();
  uint64_t v4 = sub_1A56D52D8();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1A54DD484(char a1)
{
  unint64_t result = 7955819;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x65756C6156736168;
      break;
    case 4:
      unint64_t result = 0x7574616546736168;
      break;
    case 5:
      unint64_t result = 0x656B636172746E75;
      break;
    case 6:
      unint64_t result = 0x6C6F6F427369;
      break;
    case 7:
      unint64_t result = 0x65737365636F7270;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1A54DD5B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A54DD5C8()
{
  return sub_1A56D60C8();
}

unint64_t sub_1A54DD5F8()
{
  return sub_1A54DD484(*v0);
}

uint64_t sub_1A54DD600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A54E7154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54DD628()
{
  return 0;
}

void sub_1A54DD634(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1A54DD640(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4184();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DD67C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4184();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFUserDefaultDescription.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96703E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 32);
  v15[6] = *(unsigned __int8 *)(v1 + 33);
  v15[7] = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 34);
  void v15[4] = *(unsigned __int8 *)(v1 + 35);
  v15[5] = v7;
  v15[3] = *(unsigned __int8 *)(v1 + 36);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = a1[3];
  unint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A54E4184();
  sub_1A56D61D8();
  LOBYTE(v20) = 0;
  uint64_t v13 = v18;
  sub_1A56D5DE8();
  if (!v13)
  {
    LOBYTE(v20) = 1;
    sub_1A56D5DE8();
    LOBYTE(v20) = 2;
    sub_1A56D5DF8();
    LOBYTE(v20) = 3;
    sub_1A56D5DF8();
    LOBYTE(v20) = 4;
    sub_1A56D5DF8();
    LOBYTE(v20) = 5;
    sub_1A56D5DF8();
    LOBYTE(v20) = 6;
    sub_1A56D5DF8();
    uint64_t v20 = v8;
    char v19 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C528);
    sub_1A54E4228(&qword_1E966BFE0);
    sub_1A56D5E38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

uint64_t SFUserDefaultDescription.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96703F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A54E4184();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  LOBYTE(v32) = 0;
  uint64_t v9 = sub_1A56D5CF8();
  uint64_t v11 = v10;
  uint64_t v30 = v9;
  LOBYTE(v32) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A56D5CF8();
  uint64_t v14 = v13;
  uint64_t v28 = v12;
  uint64_t v29 = v11;
  LOBYTE(v32) = 2;
  swift_bridgeObjectRetain();
  uint64_t v15 = v14;
  int v27 = sub_1A56D5D08();
  LOBYTE(v32) = 3;
  int v26 = sub_1A56D5D08();
  LOBYTE(v32) = 4;
  uint64_t v17 = sub_1A56D5D08();
  LOBYTE(v32) = 5;
  int v25 = sub_1A56D5D08();
  LOBYTE(v32) = 6;
  int v24 = sub_1A56D5D08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C528);
  char v31 = 7;
  sub_1A54E4228(&qword_1E966BFA0);
  sub_1A56D5D48();
  uint64_t v18 = (void (**)(char *, uint64_t))(v6 + 8);
  v26 &= 1u;
  v27 &= 1u;
  int v23 = v17 & 1;
  char v19 = v25 & 1;
  LOBYTE(v17) = v24 & 1;
  (*v18)(v8, v5);
  uint64_t v20 = v32;
  uint64_t v21 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a2 = v30;
  *(void *)(a2 + _Block_object_dispose(&a9, 8) = v21;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v27;
  *(unsigned char *)(a2 + 33) = v26;
  *(unsigned char *)(a2 + 34) = v23;
  *(unsigned char *)(a2 + 35) = v19;
  *(unsigned char *)(a2 + 36) = v17;
  *(void *)(a2 + 40) = v20;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A54DDE30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFUserDefaultDescription.init(from:)(a1, a2);
}

uint64_t sub_1A54DDE48(void *a1)
{
  return SFUserDefaultDescription.encode(to:)(a1);
}

uint64_t sub_1A54DDE64()
{
  return 1;
}

uint64_t sub_1A54DDE74()
{
  return 12383;
}

void sub_1A54DDE84(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A54DDE90(uint64_t a1)
{
  unint64_t v2 = sub_1A54E45D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DDECC(uint64_t a1)
{
  unint64_t v2 = sub_1A54E45D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t _s7Sharing17SFNWInterfaceTypeO9hashValueSivg_0()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A54DDF50()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A54DDF94()
{
  uint64_t result = 1819242338;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7630441;
      break;
    case 2:
      uint64_t result = 0x3233746E6975;
      break;
    case 3:
      uint64_t result = 0x656C62756F64;
      break;
    case 4:
      uint64_t result = 0x676E69727473;
      break;
    case 5:
      uint64_t result = 1702125924;
      break;
    case 6:
      uint64_t result = 1684632949;
      break;
    case 7:
      uint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54DE054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A54E74F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54DE07C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E428C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE0B8(uint64_t a1)
{
  unint64_t v2 = sub_1A54E428C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54DE0F4(uint64_t a1)
{
  unint64_t v2 = sub_1A54E43EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE130(uint64_t a1)
{
  unint64_t v2 = sub_1A54E43EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54DE16C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E44DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE1A8(uint64_t a1)
{
  unint64_t v2 = sub_1A54E44DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54DE1E4()
{
  return sub_1A56D60C8();
}

uint64_t sub_1A54DE20C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4584();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE248(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4584();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54DE284()
{
  return 0;
}

uint64_t sub_1A54DE290@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A54DE2C0(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4344();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE2FC(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4344();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54DE338(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4488();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE374(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4488();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54DE3B0(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4530();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE3EC(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4530();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54DE428()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A54DE46C()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A54DE4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A54DE52C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4398();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54DE568(uint64_t a1)
{
  unint64_t v2 = sub_1A54E4398();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFUserDefaultsRepresentation.encode(to:)(void *a1)
{
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670408);
  uint64_t v71 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v69 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670410);
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  MEMORY[0x1F4188790](v3);
  int v72 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A56D4CB8();
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v70 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670418);
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v64 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A56D4C28();
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v63 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670420);
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v60 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670428);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  unint64_t v57 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670430);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  long long v54 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670438);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670440);
  uint64_t v51 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SFUserDefaultsRepresentation();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670448);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v79 = v22;
  uint64_t v80 = v23;
  MEMORY[0x1F4188790](v22);
  int v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A54E428C();
  uint64_t v78 = v25;
  sub_1A56D61D8();
  sub_1A54E42E0(v81, (uint64_t)v21);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v83 = 1;
      sub_1A54E4584();
      int v27 = v78;
      uint64_t v26 = v79;
      sub_1A56D5D98();
      uint64_t v28 = v53;
      sub_1A56D5E18();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v28);
      goto LABEL_4;
    case 2u:
      char v84 = 2;
      sub_1A54E4530();
      uint64_t v30 = v54;
      char v31 = v78;
      uint64_t v32 = v79;
      sub_1A56D5D98();
      uint64_t v33 = v56;
      sub_1A56D5E58();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v31, v32);
    case 3u:
      char v85 = 3;
      sub_1A54E44DC();
      uint64_t v34 = v57;
      uint64_t v36 = v78;
      uint64_t v35 = v79;
      sub_1A56D5D98();
      uint64_t v37 = v59;
      sub_1A56D5E08();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v36, v35);
    case 4u:
      char v86 = 4;
      sub_1A54E4488();
      uint64_t v38 = v60;
      uint64_t v40 = v78;
      uint64_t v39 = v79;
      sub_1A56D5D98();
      uint64_t v41 = v62;
      sub_1A56D5DE8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v41);
      goto LABEL_11;
    case 5u:
      uint64_t v43 = v65;
      uint64_t v42 = v66;
      uint64_t v44 = v63;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v63, v21, v66);
      char v87 = 5;
      sub_1A54E43EC();
      uint64_t v45 = v64;
      uint64_t v40 = v78;
      uint64_t v39 = v79;
      sub_1A56D5D98();
      sub_1A54E4440(&qword_1E9670478, MEMORY[0x1E4F27928]);
      uint64_t v46 = v68;
      sub_1A56D5E38();
      uint64_t v47 = v67;
      goto LABEL_10;
    case 6u:
      uint64_t v43 = v74;
      uint64_t v42 = v75;
      uint64_t v44 = v70;
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v70, v21, v75);
      char v88 = 6;
      sub_1A54E4398();
      uint64_t v45 = v72;
      uint64_t v40 = v78;
      uint64_t v39 = v79;
      sub_1A56D5D98();
      sub_1A54E4440(&qword_1E966C7D8, MEMORY[0x1E4F27990]);
      uint64_t v46 = v77;
      sub_1A56D5E38();
      uint64_t v47 = v76;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v46);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
LABEL_11:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v40, v39);
      break;
    case 7u:
      char v89 = 7;
      sub_1A54E4344();
      uint64_t v48 = v69;
      long long v50 = v78;
      uint64_t v49 = v79;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v48, v73);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v50, v49);
      break;
    default:
      char v82 = 0;
      sub_1A54E45D8();
      int v27 = v78;
      uint64_t v26 = v79;
      sub_1A56D5D98();
      sub_1A56D5DF8();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v16);
LABEL_4:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v27, v26);
      break;
  }
  return result;
}

uint64_t SFUserDefaultsRepresentation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v117 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704A8);
  uint64_t v101 = *(void *)(v3 - 8);
  uint64_t v102 = v3;
  MEMORY[0x1F4188790](v3);
  id v110 = (char *)v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704B0);
  uint64_t v103 = *(void *)(v5 - 8);
  uint64_t v104 = v5;
  MEMORY[0x1F4188790](v5);
  v111 = (char *)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704B8);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  CFTypeID v109 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704C0);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  CFDictionaryRef v108 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704C8);
  uint64_t v96 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v116 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704D0);
  uint64_t v94 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  id v115 = (char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704D8);
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  id v107 = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704E0);
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  id v106 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96704E8);
  uint64_t v112 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v14 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for SFUserDefaultsRepresentation();
  uint64_t v15 = MEMORY[0x1F4188790](v113);
  char v88 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v105 = (char *)v81 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  char v87 = (void *)((char *)v81 - v20);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v81 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)v81 - v25;
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v29 = (void *)((char *)v81 - v28);
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)v81 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)v81 - v33;
  uint64_t v35 = a1[3];
  uint64_t v118 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_1A54E428C();
  uint64_t v36 = v119;
  sub_1A56D61A8();
  if (v36)
  {
LABEL_22:
    uint64_t v47 = (uint64_t)v118;
    return __swift_destroy_boxed_opaque_existential_0Tm(v47);
  }
  char v82 = v32;
  char v83 = v29;
  char v84 = v26;
  char v85 = v23;
  uint64_t v38 = v115;
  uint64_t v37 = v116;
  char v86 = v34;
  uint64_t v119 = 0;
  uint64_t v39 = v113;
  uint64_t v40 = v114;
  uint64_t v41 = v117;
  uint64_t v42 = sub_1A56D5D78();
  if (*(void *)(v42 + 16) != 1)
  {
    uint64_t v51 = sub_1A56D5A78();
    swift_allocError();
    uint64_t v53 = v52;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *uint64_t v53 = v39;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v51 - 8) + 104))(v53, *MEMORY[0x1E4FBBA70], v51);
    swift_willThrow();
LABEL_21:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
    goto LABEL_22;
  }
  v81[1] = v42;
  uint64_t v43 = v119;
  switch(*(unsigned char *)(v42 + 32))
  {
    case 1:
      char v121 = 1;
      sub_1A54E4584();
      long long v54 = v107;
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      uint64_t v55 = v92;
      uint64_t v56 = sub_1A56D5D28();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v54, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
      uint64_t v47 = (uint64_t)v118;
      unint64_t v57 = v83;
      *char v83 = v56;
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = (uint64_t)v57;
      goto LABEL_9;
    case 2:
      char v122 = 2;
      sub_1A54E4530();
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      uint64_t v59 = v93;
      int v72 = sub_1A56D5D68();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v38, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
      uint64_t v73 = v84;
      *char v84 = v72;
      goto LABEL_25;
    case 3:
      char v123 = 3;
      sub_1A54E44DC();
      uint64_t v60 = v37;
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      uint64_t v61 = v95;
      sub_1A56D5D18();
      uint64_t v62 = v112;
      uint64_t v75 = v74;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v60, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v14, v40);
      uint64_t v73 = v85;
      void *v85 = v75;
      goto LABEL_25;
    case 4:
      char v124 = 4;
      sub_1A54E4488();
      uint64_t v63 = v108;
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      uint64_t v64 = v98;
      uint64_t v76 = sub_1A56D5CF8();
      uint64_t v78 = v77;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v63, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
      uint64_t v79 = v87;
      *char v87 = v76;
      v79[1] = v78;
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (uint64_t)v79;
      goto LABEL_26;
    case 5:
      char v125 = 5;
      sub_1A54E43EC();
      uint64_t v65 = v109;
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      sub_1A56D4C28();
      sub_1A54E4440(&qword_1E9670500, MEMORY[0x1E4F27928]);
      uint64_t v66 = v100;
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v65, v66);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
      uint64_t v73 = v105;
LABEL_25:
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (uint64_t)v73;
LABEL_26:
      uint64_t v58 = (uint64_t)v86;
      sub_1A54E462C(v80, (uint64_t)v86);
      goto LABEL_27;
    case 6:
      char v126 = 6;
      sub_1A54E4398();
      uint64_t v67 = v111;
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      sub_1A56D4CB8();
      sub_1A54E4440(&qword_1E966C888, MEMORY[0x1E4F27990]);
      uint64_t v68 = (uint64_t)v88;
      uint64_t v69 = v104;
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v67, v69);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = (uint64_t)v86;
      sub_1A54E462C(v68, (uint64_t)v86);
      uint64_t v41 = v117;
      uint64_t v47 = (uint64_t)v118;
      break;
    case 7:
      char v127 = 7;
      sub_1A54E4344();
      uint64_t v70 = v110;
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v101 + 8))(v70, v102);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
      uint64_t v58 = (uint64_t)v86;
      swift_storeEnumTagMultiPayload();
LABEL_27:
      uint64_t v47 = (uint64_t)v118;
      break;
    default:
      char v120 = 0;
      sub_1A54E45D8();
      uint64_t v44 = v106;
      sub_1A56D5C88();
      if (v43) {
        goto LABEL_21;
      }
      uint64_t v45 = v90;
      uint64_t v46 = sub_1A56D5D08();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v44, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v14, v40);
      uint64_t v47 = (uint64_t)v118;
      char v48 = v46 & 1;
      uint64_t v49 = v82;
      unsigned char *v82 = v48;
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = (uint64_t)v49;
LABEL_9:
      uint64_t v58 = (uint64_t)v86;
      sub_1A54E462C(v50, (uint64_t)v86);
      break;
  }
  sub_1A54E462C(v58, v41);
  return __swift_destroy_boxed_opaque_existential_0Tm(v47);
}

uint64_t sub_1A54E0118@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFUserDefaultsRepresentation.init(from:)(a1, a2);
}

uint64_t sub_1A54E0130(void *a1)
{
  return SFUserDefaultsRepresentation.encode(to:)(a1);
}

uint64_t Optional<A>.userDefaultsRepresentation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    type metadata accessor for SFUserDefaultsRepresentation();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    (*(void (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

uint64_t Optional<A>.init(userDefaultsString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A56D5898();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v23 - v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a2, a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    uint64_t v19 = 1;
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v20(v11, v16, a3);
    v20(v18, v11, a3);
    uint64_t v19 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v18, v19, 1, a3);
  uint64_t v21 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v24, v18, v12);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
}

uint64_t sub_1A54E0588(uint64_t a1, uint64_t a2)
{
  return Optional<A>.userDefaultsRepresentation.getter(a1, *(void *)(a2 - 8));
}

uint64_t sub_1A54E0590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Optional<A>.init(userDefaultsString:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t String.userDefaultsRepresentation.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for SFUserDefaultsRepresentation();
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A54E05F4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  type metadata accessor for SFUserDefaultsRepresentation();
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A54E0648@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Bool.userDefaultsRepresentation.getter@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E069C@<X0>(unsigned char *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E06E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t Int.userDefaultsRepresentation.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

Swift::Int_optional __swiftcall Int.init(userDefaultsString:)(Swift::String userDefaultsString)
{
  Swift::Int v1 = sub_1A54E4A44(userDefaultsString._countAndFlagsBits, (unint64_t)userDefaultsString._object);
  Swift::Bool v3 = v2 & 1;
  result.xpc_object_t value = v1;
  result.is_nil = v3;
  return result;
}

uint64_t sub_1A54E0774@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E07C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A54E4A44(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + _Block_object_dispose(&a9, 8) = v5 & 1;
  return result;
}

uint64_t UInt32.userDefaultsRepresentation.getter@<X0>(int a1@<W0>, _DWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

Swift::UInt32_optional __swiftcall UInt32.init(userDefaultsString:)(Swift::String userDefaultsString)
{
  uint64_t v1 = sub_1A54E4768(userDefaultsString._countAndFlagsBits, (unint64_t)userDefaultsString._object);
  return (Swift::UInt32_optional)(v1 | ((unint64_t)(BYTE4(v1) & 1) << 32));
}

uint64_t sub_1A54E0864@<X0>(_DWORD *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E08B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A54E4768(a1, a2);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t Double.userDefaultsRepresentation.getter@<X0>(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

Swift::Double_optional __swiftcall Double.init(userDefaultsString:)(Swift::String userDefaultsString)
{
  unint64_t object = (unint64_t)userDefaultsString._object;
  if (((uint64_t)userDefaultsString._object & 0x1000000000000000) != 0
    || !((uint64_t)userDefaultsString._object & 0x2000000000000000 | userDefaultsString._countAndFlagsBits & 0x1000000000000000))
  {
    sub_1A56D5A18();
    swift_bridgeObjectRelease();
    char v5 = v9;
  }
  else
  {
    MEMORY[0x1F4188790](userDefaultsString._countAndFlagsBits);
    if ((object & 0x2000000000000000) != 0)
    {
      char v5 = (v2 > 0x20u || ((0x100003E01uLL >> v2) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v2 & 0x1000000000000000) != 0)
      {
        uint64_t v3 = (object & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v3 = sub_1A56D5AB8();
      }
      char v5 = sub_1A54E3890(v3, v4, (void (*)(uint64_t *__return_ptr))sub_1A54E4D2C);
      swift_bridgeObjectRelease();
    }
  }
  if (v5) {
    Swift::Bool v8 = 0;
  }
  else {
    Swift::Bool v8 = 0;
  }
  result.xpc_object_t value = v6;
  result.is_nil = v8;
  return result;
}

uint64_t sub_1A54E0AB8@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E0B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = 0;
  void v7[2] = &v8;
  char v4 = sub_1A54E183C((uint64_t)sub_1A54E4D14, (uint64_t)v7, a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = v8;
  if ((v4 & 1) == 0) {
    uint64_t v6 = 0;
  }
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + _Block_object_dispose(&a9, 8) = (v4 & 1) == 0;
  return result;
}

uint64_t Date.userDefaultsRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A54E0FA4(MEMORY[0x1E4F27928], a1);
}

uint64_t Date.init(userDefaultsString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A56D4AE8();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1A56D4C28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[4] = a1;
  void v12[5] = a2;
  swift_bridgeObjectRetain();
  sub_1A56D48D8();
  sub_1A54E4440((unint64_t *)&unk_1E9670508, MEMORY[0x1E4F278A8]);
  sub_1A56D4C38();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a3, 0, 1, v7);
}

uint64_t sub_1A54E0F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A54E118C(a1, a2);
}

uint64_t UUID.userDefaultsRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A54E0FA4(MEMORY[0x1E4F27990], a1);
}

uint64_t sub_1A54E0FA4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, v2, v4);
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t UUID.init(userDefaultsString:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A56D4C48();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1A56D4CB8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A54E4D44((uint64_t)v4, qword_1E966B098);
    uint64_t v7 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

uint64_t sub_1A54E1184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A54E118C(a1, a2);
}

uint64_t sub_1A54E118C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E1208@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A56D4C48();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1) == 1)
  {
    sub_1A54E4D44((uint64_t)v6, qword_1E966B098);
    uint64_t v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v6, a1);
    uint64_t v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v8, 1, a1);
}

uint64_t RawRepresentable<>.userDefaultsRepresentation.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1A56D52E8();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(AssociatedTypeWitness, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
}

uint64_t RawRepresentable<>.init(userDefaultsString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a6;
  uint64_t v10 = sub_1A56D5898();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v34 = (char *)&v30 - v11;
  uint64_t v33 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1A56D5898();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v15);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v30 - v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(a1, v35, AssociatedTypeWitness, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t v24 = *(void *)(a3 - 8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v17, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, AssociatedTypeWitness);
    uint64_t v25 = v34;
    sub_1A56D52F8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, AssociatedTypeWitness);
    uint64_t v24 = *(void *)(a3 - 8);
    uint64_t v26 = v24;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v25, 1, a3))
    {
      uint64_t v28 = v36;
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v36, v25, a3);
      uint64_t v27 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v27, 1, a3);
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
  }
  uint64_t v26 = v24;
  uint64_t v27 = 1;
  uint64_t v28 = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v27, 1, a3);
}

uint64_t sub_1A54E183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  void v12[2];
  uint64_t v13;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    uint64_t v10 = sub_1A56D5A18();
    if (!v4) {
      uint64_t v10 = BYTE1(v13);
    }
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v12[0] = v5;
      v12[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v10 = v7(&v13, v12);
      if (!v4) {
        uint64_t v10 = v13;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_1A56D5AB8();
      }
      uint64_t v10 = sub_1A54E3890(v8, v9, (void (*)(uint64_t *__return_ptr))sub_1A54E4D2C);
    }
  }
  return v10 & 1;
}

uint64_t sub_1A54E1954(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000)) {
    return sub_1A56D5A18();
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v7[0] = a3;
    v7[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v5 = v7;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v5 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v5 = (void *)sub_1A56D5AB8();
  }
  return a1(v5);
}

uint64_t sub_1A54E1A18@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v4 = 0x636972656E6567;
      break;
    case 2:
      uint64_t v4 = 0x706F7244726961;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1952802157;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x6572616873;
      break;
    case 5:
      unint64_t v3 = 0xEB00000000746E65;
      uint64_t v4 = 0x6D79615072656570;
      break;
    default:
      break;
  }
  *a1 = v4;
  a1[1] = v3;
  type metadata accessor for SFUserDefaultsRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E1B18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.init(rawValue:)(&v3);
  *a1 = v3;
  return result;
}

void sub_1A54E1B50(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1A54E1B58@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&a9, 8) = 0;
  return result;
}

void sub_1A54E1B68(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1A54E1B74(uint64_t a1, uint64_t a2)
{
  return sub_1A54E1FA0(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1A54E1B8C(uint64_t a1, id *a2)
{
  uint64_t result = sub_1A56D50B8();
  *a2 = 0;
  return result;
}

uint64_t sub_1A54E1C04(uint64_t a1, id *a2)
{
  char v3 = sub_1A56D50C8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A54E1C84@<X0>(uint64_t *a1@<X8>)
{
  sub_1A56D50D8();
  uint64_t v2 = sub_1A56D5098();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A54E1CC8()
{
  swift_getWitnessTable();

  return sub_1A56D4D08();
}

void sub_1A54E1D34(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1A54E1D40@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A54E1D4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1A56D5098();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A54E1D94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A56D50D8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A54E1DC0(uint64_t a1)
{
  uint64_t v2 = sub_1A54E4440(&qword_1E96708A0, type metadata accessor for NSExceptionName);
  uint64_t v3 = sub_1A54E4440((unint64_t *)&unk_1E96708A8, type metadata accessor for NSExceptionName);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1A54E1E7C()
{
  return sub_1A56D4D28();
}

uint64_t sub_1A54E1EC8()
{
  return sub_1A56D4D18();
}

uint64_t sub_1A54E1F20()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A54E1F88(uint64_t a1, uint64_t a2)
{
  return sub_1A54E1FA0(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1A54E1FA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1A56D50D8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A54E1FE4()
{
  sub_1A56D50D8();
  sub_1A56D5188();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A54E2038()
{
  sub_1A56D50D8();
  sub_1A56D60B8();
  sub_1A56D5188();
  uint64_t v0 = sub_1A56D60E8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A54E20AC()
{
  uint64_t v0 = sub_1A56D50D8();
  uint64_t v2 = v1;
  if (v0 == sub_1A56D50D8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1A56D5F28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A54E2138(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1A54E2148(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A54E2184(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1A54E2628(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1A56D5258();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1A56D51A8();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1A56D51A8();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1A56D5278();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1A54E29C0(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_1A54E29C0((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1A56D51A8();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1A56D5278();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1A54E29C0(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_1A54E29C0((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    void v40[4] = v31;
    v40[5] = v33;
    void v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1A56D5BB8();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1A56D5BB8();
  __break(1u);
  return result;
}

uint64_t sub_1A54E2628(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1A56D5278();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_1A54E29C0(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_1A54E29C0((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1A56D5BB8();
  __break(1u);
  return result;
}

void *sub_1A54E2784(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C4B0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54E6E74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A54E2894(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E966C4A0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A54E6F68(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A54E29C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96708E8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54E7060(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A54E2AD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54E2C28(a1, a2, a3, a4, &qword_1E96708E0, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

void *sub_1A54E2AF4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1E966BC20);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54E77D8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A54E2C04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A54E2C28(a1, a2, a3, a4, &qword_1E96708D8, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
}

uint64_t sub_1A54E2C28(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    char v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  char v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1A56D5BB8();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A54E7A30(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1A54E2EA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96708D0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54E7B8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A54E2FB8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E96708C8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1A54E7938(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1A54E30E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96708B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A54E7C80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A54E31F0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A54E3218(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1A54E3290(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1A56D5928();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1A54E3290(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1A54E3364(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectCFStringRef Type = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1A54E3F20((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectCFStringRef Type = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1A54E3F20((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1A54E3364(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A56D5938();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1A54E3520(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1A56D5AB8();
  if (!v8)
  {
    sub_1A56D5BB8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1A56D5C08();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1A54E3520(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1A54E35B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1A54E3730(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1A54E3730(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A54E35B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1A56BEC7C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1A56D5A38();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1A56D5BB8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1A56D51D8();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1A56D5C08();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1A56D5BB8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1A54E3730(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C848);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

unsigned char **sub_1A54E3880(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1A54E3890(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void *sub_1A54E38F0(void *a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  int v42 = a4;
  uint64_t v49 = a12;
  uint64_t v47 = a8;
  uint64_t v48 = a11;
  uint64_t v18 = *v12;
  uint64_t v19 = *(void *)(v18 + 80);
  uint64_t v45 = a9;
  uint64_t v46 = a10;
  uint64_t v20 = sub_1A56D5898();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unint64_t v23 = (char *)&v40 - v22;
  id v41 = a1;
  uint64_t v53 = a1;
  uint64_t v51 = v19;
  uint64_t v52 = *(void *)(v18 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670930);
  uint64_t v24 = type metadata accessor for SFUserDefault.SendableUserDefaultsBox();
  sub_1A5585B58((void (*)(char *, char *))sub_1A54E851C, (uint64_t)v50, MEMORY[0x1E4FBC248], v24, v25, (uint64_t)&v54);
  uint64_t v26 = v54;
  void v13[2] = a2;
  void v13[3] = a3;
  LOBYTE(a1) = v42;
  *((unsigned char *)v13 + 32) = v42;
  uint64_t v27 = v43;
  v13[7] = v26;
  v13[8] = v27;
  v13[9] = v44;
  *((unsigned char *)v13 + 80) = a7;
  *((unsigned char *)v13 + 81) = HIBYTE(a7) & 1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))((char *)v13 + *(void *)(*v13 + 128), v47, v19);
  uint64_t v28 = (void *)((char *)v13 + *(void *)(*v13 + 144));
  uint64_t v29 = v46;
  *uint64_t v28 = v45;
  v28[1] = v29;
  sub_1A56D4E48();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v48, v20);
  *(void *)((char *)v13 + *(void *)(*v13 + 136)) = sub_1A56D4E58();
  unint64_t v30 = *(void *)(*v13 + 152);
  int v31 = v49;
  *(void *)((char *)v13 + v30) = v49;
  if ((a1 & 1) == 0)
  {
    if (a2) {
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v30 = HIDWORD(a2);
  if (HIDWORD(a2))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  LODWORD(v30) = a2 >> 11;
  if (a2 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  LODWORD(v30) = WORD1(a2);
  if (WORD1(a2) > 0x10u)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    int v31 = (a2 & 0x3F) << 8;
    if (a2 < 0x800)
    {
      unsigned int v37 = v31 | (a2 >> 6);
      int v38 = 33217;
LABEL_17:
      unsigned int v32 = v37 + v38;
      goto LABEL_10;
    }
LABEL_20:
    unsigned int v39 = (v31 | (a2 >> 6) & 0x3F) << 8;
    if (!v30)
    {
      unsigned int v32 = (v39 | (a2 >> 12)) + 8487393;
      goto LABEL_10;
    }
    unsigned int v37 = ((v39 | (a2 >> 12) & 0x3F) << 8) | (a2 >> 18);
    int v38 = -2122219023;
    goto LABEL_17;
  }
  if ((a2 & 0xFFFFFF80) != 0) {
    goto LABEL_15;
  }
  if (a2 > 0xFF)
  {
    __break(1u);
    goto LABEL_19;
  }
  unsigned int v32 = (a2 + 1);
LABEL_10:
  uint64_t v54 = (v32 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v32) >> 3)) & 7)));
LABEL_11:
  uint64_t v33 = sub_1A56D5168();
  uint64_t v35 = v34;

  v13[5] = v33;
  v13[6] = v35;
  return v13;
}

void *sub_1A54E3CA8(void *a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1A54E38F0(a1, a2, a3, a4, a5, a6, a7 & 0x1FF, a8, a9, a10, a11, a12);
}

uint64_t sub_1A54E3D5C(uint64_t a1)
{
  uint64_t v2 = sub_1A56D5898();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - v3, a1);
  return sub_1A56D4E38();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A54E3E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SFUserDefault.FFKey()
{
  return __swift_instantiateGenericMetadata();
}

_OWORD *sub_1A54E3F10(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A54E3F20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for SFUserDefaultsRepresentation()
{
  uint64_t result = qword_1E9670518;
  if (!qword_1E9670518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A54E4000(uint64_t a1)
{
  return sub_1A54DAF60(a1, v1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1A54E4050(void *a1)
{
  long long v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1A56D5F28() & 1;
  }
}

uint64_t sub_1A54E40A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A54E40EC()
{
  unint64_t result = qword_1E96703D8;
  if (!qword_1E96703D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96703D8);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1A54E4184()
{
  unint64_t result = qword_1E96703E8;
  if (!qword_1E96703E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96703E8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1A54E4228(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C528);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A54E428C()
{
  unint64_t result = qword_1E9670450;
  if (!qword_1E9670450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670450);
  }
  return result;
}

uint64_t sub_1A54E42E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFUserDefaultsRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A54E4344()
{
  unint64_t result = qword_1E9670458;
  if (!qword_1E9670458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670458);
  }
  return result;
}

unint64_t sub_1A54E4398()
{
  unint64_t result = qword_1E9670460;
  if (!qword_1E9670460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670460);
  }
  return result;
}

unint64_t sub_1A54E43EC()
{
  unint64_t result = qword_1E9670470;
  if (!qword_1E9670470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670470);
  }
  return result;
}

uint64_t sub_1A54E4440(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A54E4488()
{
  unint64_t result = qword_1E9670480;
  if (!qword_1E9670480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670480);
  }
  return result;
}

unint64_t sub_1A54E44DC()
{
  unint64_t result = qword_1E9670488;
  if (!qword_1E9670488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670488);
  }
  return result;
}

unint64_t sub_1A54E4530()
{
  unint64_t result = qword_1E9670490;
  if (!qword_1E9670490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670490);
  }
  return result;
}

unint64_t sub_1A54E4584()
{
  unint64_t result = qword_1E9670498;
  if (!qword_1E9670498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670498);
  }
  return result;
}

unint64_t sub_1A54E45D8()
{
  unint64_t result = qword_1E96704A0;
  if (!qword_1E96704A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96704A0);
  }
  return result;
}

uint64_t sub_1A54E462C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFUserDefaultsRepresentation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _sSb7SharingE18userDefaultsStringSbSgSS_tcfC_0()
{
  uint64_t v0 = sub_1A56D5128();
  char v2 = sub_1A567AD98(v0, v1, qword_1EF9AF268);
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    return v2 & 1;
  }
  uint64_t v3 = sub_1A56D5128();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  LOBYTE(v3) = sub_1A567AD98(v3, v5, qword_1EF9AF1F8);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  if (v3) {
    return v2 & 1;
  }
  return 2;
}

uint64_t sub_1A54E4768(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
    LOBYTE(v17) = 1;
    return v18 | ((unint64_t)v17 << 32);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_1A56BEF7C(result, a2, 10);
    swift_bridgeObjectRelease();
    uint64_t v17 = HIDWORD(v8) & 1;
LABEL_38:
    uint64_t v18 = v8;
    if (v17) {
      uint64_t v18 = 0;
    }
    return v18 | ((unint64_t)v17 << 32);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v6 = (unsigned __int8 *)sub_1A56D5AB8();
    }
    int64_t v7 = sub_1A56BED78(v6, v4, 10);
    LODWORD(v_Block_object_dispose(&a9, 8) = v7;
    char v30 = BYTE4(v7) & 1;
    char v9 = BYTE4(v7) & 1;
    goto LABEL_37;
  }
  v29[0] = result;
  v29[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v3)
    {
      if (v3 != 1)
      {
        LODWORD(v_Block_object_dispose(&a9, 8) = (BYTE1(result) - 48);
        if (v8 <= 9)
        {
          if (v3 == 2) {
            goto LABEL_36;
          }
          if ((BYTE2(result) - 48) <= 9u)
          {
            LODWORD(v_Block_object_dispose(&a9, 8) = 10 * v8 + (BYTE2(result) - 48);
            uint64_t v13 = v3 - 3;
            if (v13)
            {
              uint64_t v14 = (unsigned __int8 *)v29 + 3;
              while (1)
              {
                unsigned int v15 = *v14 - 48;
                if (v15 > 9) {
                  goto LABEL_33;
                }
                uint64_t v16 = 10 * v8;
                if ((v16 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_33;
                }
                LODWORD(v_Block_object_dispose(&a9, 8) = v16 + v15;
                if (__CFADD__(v16, v15)) {
                  goto LABEL_33;
                }
                char v9 = 0;
                ++v14;
                if (!--v13) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
        }
      }
      goto LABEL_33;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v3)
      {
        LODWORD(v_Block_object_dispose(&a9, 8) = (result - 48);
        if (v8 <= 9)
        {
          if (v3 == 1) {
            goto LABEL_36;
          }
          if ((BYTE1(result) - 48) <= 9u)
          {
            LODWORD(v_Block_object_dispose(&a9, 8) = 10 * v8 + (BYTE1(result) - 48);
            uint64_t v19 = v3 - 2;
            if (v19)
            {
              uint64_t v20 = (unsigned __int8 *)v29 + 2;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  goto LABEL_33;
                }
                uint64_t v22 = 10 * v8;
                if ((v22 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_33;
                }
                LODWORD(v_Block_object_dispose(&a9, 8) = v22 + v21;
                if (__CFADD__(v22, v21)) {
                  goto LABEL_33;
                }
                char v9 = 0;
                ++v20;
                if (!--v19) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
        }
      }
LABEL_33:
      LODWORD(v_Block_object_dispose(&a9, 8) = 0;
LABEL_34:
      char v9 = 1;
      goto LABEL_37;
    }
    if (v3)
    {
      if (v3 != 1)
      {
        unsigned __int8 v10 = BYTE1(result) - 48;
        if ((BYTE1(result) - 48) <= 9u)
        {
          LODWORD(v_Block_object_dispose(&a9, 8) = 0;
          BOOL v11 = v10 == 0;
          unsigned int v12 = -v10;
          if (!v11) {
            goto LABEL_34;
          }
          if (v3 == 2)
          {
            char v9 = 0;
            LODWORD(v_Block_object_dispose(&a9, 8) = v12;
LABEL_37:
            swift_bridgeObjectRelease();
            LODWORD(v17) = v9 & 1;
            goto LABEL_38;
          }
          unsigned __int8 v23 = BYTE2(result) - 48;
          if ((BYTE2(result) - 48) <= 9u)
          {
            uint64_t v24 = 10 * v12;
            if ((v24 & 0xFFFFFFFF00000000) == 0)
            {
              LODWORD(v_Block_object_dispose(&a9, 8) = v24 - v23;
              if (v24 >= v23)
              {
                uint64_t v25 = v3 - 3;
                if (v25)
                {
                  uint64_t v26 = (unsigned __int8 *)v29 + 3;
                  while (1)
                  {
                    unsigned int v27 = *v26 - 48;
                    if (v27 > 9) {
                      goto LABEL_33;
                    }
                    uint64_t v28 = 10 * v8;
                    if ((v28 & 0xFFFFFFFF00000000) != 0) {
                      goto LABEL_33;
                    }
                    LODWORD(v_Block_object_dispose(&a9, 8) = v28 - v27;
                    if (v28 < v27) {
                      goto LABEL_33;
                    }
                    char v9 = 0;
                    ++v26;
                    if (!--v25) {
                      goto LABEL_37;
                    }
                  }
                }
LABEL_36:
                char v9 = 0;
                goto LABEL_37;
              }
            }
          }
        }
      }
      goto LABEL_33;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A54E4A44(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_1A56D5AB8();
      }
      uint64_t v7 = (uint64_t)sub_1A56BED60(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_44;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_57;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v7 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v10 = v3 - 3;
        if (v10)
        {
          BOOL v11 = (unsigned __int8 *)v23 + 3;
          while (1)
          {
            unsigned int v12 = *v11 - 48;
            if (v12 > 9) {
              goto LABEL_31;
            }
            uint64_t v13 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              goto LABEL_31;
            }
            uint64_t v7 = v13 + v12;
            if (__OFADD__(v13, v12)) {
              goto LABEL_31;
            }
            char v9 = 0;
            ++v11;
            if (!--v10) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              char v9 = 0;
              uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v7 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v18 = v3 - 3;
              if (!v18) {
                goto LABEL_43;
              }
              uint64_t v19 = (unsigned __int8 *)v23 + 3;
              while (1)
              {
                unsigned int v20 = *v19 - 48;
                if (v20 > 9) {
                  break;
                }
                uint64_t v21 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  break;
                }
                uint64_t v7 = v21 - v20;
                if (__OFSUB__(v21, v20)) {
                  break;
                }
                char v9 = 0;
                ++v19;
                if (!--v18) {
                  goto LABEL_44;
                }
              }
            }
          }
LABEL_31:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v7 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v7 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v14 = v3 - 2;
        if (v14)
        {
          unsigned int v15 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v16 = *v15 - 48;
            if (v16 > 9) {
              goto LABEL_31;
            }
            uint64_t v17 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
              goto LABEL_31;
            }
            uint64_t v7 = v17 + v16;
            if (__OFADD__(v17, v16)) {
              goto LABEL_31;
            }
            char v9 = 0;
            ++v15;
            if (!--v14) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    char v9 = 0;
    goto LABEL_44;
  }
  uint64_t v7 = (uint64_t)sub_1A56BED90(result, a2, 10);
  char v9 = v22;
LABEL_44:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

unsigned char *sub_1A54E4D14@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A54E78C8(a1, a2);
}

void *sub_1A54E4D2C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1A54E7F18(a1);
}

uint64_t sub_1A54E4D44(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A54E4DA0()
{
  return 16;
}

__n128 sub_1A54E4DAC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A54E4DB8()
{
  return 16;
}

__n128 sub_1A54E4DC4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1A54E4DD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SFUserDefault()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SFUserDefault(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFUserDefault);
}

uint64_t dispatch thunk of SFUserDefault.__allocating_init(userDefaults:key:featureFlagsDomain:defaultValue:prefsChangedLibNotifyName:override:processesToKill:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7 + 160))(a1, a2, a3, a4, a5, a6, a7 & 0x1FF);
}

uint64_t destroy for SFAnyUserDefault()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SFAnyUserDefault(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v4 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SFAnyUserDefault(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[8];
  a1[7] = a2[7];
  a1[8] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SFAnyUserDefault(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFAnyUserDefault(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFAnyUserDefault(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAnyUserDefault()
{
  return &type metadata for SFAnyUserDefault;
}

uint64_t type metadata accessor for SFUserDefaultsRegistry()
{
  return self;
}

uint64_t method lookup function for SFUserDefaultsRegistry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFUserDefaultsRegistry);
}

uint64_t dispatch thunk of SFUserDefaultDescriptionProviding.userDefaultDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for SFUserDefaultDescription()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SFUserDefaultDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SFUserDefaultDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SFUserDefaultDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFUserDefaultDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFUserDefaultDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4_Block_object_dispose(&a9, 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4_Block_object_dispose(&a9, 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFUserDefaultDescription()
{
  return &type metadata for SFUserDefaultDescription;
}

uint64_t dispatch thunk of SFUserDefaultstRepresentable.userDefaultsRepresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SFUserDefaultstRepresentable.init(userDefaultsString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t *initializeBufferWithCopyOfBuffer for SFUserDefaultsRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v10 = sub_1A56D4CB8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        uint64_t v11 = sub_1A56D4C28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SFUserDefaultsRepresentation(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 6:
      uint64_t v3 = sub_1A56D4CB8();
      break;
    case 5:
      uint64_t v3 = sub_1A56D4C28();
      break;
    case 4:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *initializeWithCopy for SFUserDefaultsRepresentation(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      uint64_t v8 = sub_1A56D4CB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      break;
    case 5:
      uint64_t v9 = sub_1A56D4C28();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
      break;
    case 4:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for SFUserDefaultsRepresentation(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A54E59B0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        uint64_t v7 = sub_1A56D4CB8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        uint64_t v8 = sub_1A56D4C28();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A54E59B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFUserDefaultsRepresentation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for SFUserDefaultsRepresentation(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6)
  {
    uint64_t v8 = sub_1A56D4CB8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 5)
  {
    uint64_t v7 = sub_1A56D4C28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for SFUserDefaultsRepresentation(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A54E59B0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 6)
    {
      uint64_t v8 = sub_1A56D4CB8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 5)
    {
      uint64_t v7 = sub_1A56D4C28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SFUserDefaultsRepresentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SFUserDefaultsRepresentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1A54E5C94()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A54E5CA4()
{
  uint64_t result = sub_1A56D4C28();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1A56D4CB8();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1A54E5DAC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A54E5DCC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void type metadata accessor for SFAirDropMapsLinkType(uint64_t a1)
{
}

void type metadata accessor for SFAirDropMusicAppLinkType(uint64_t a1)
{
}

void type metadata accessor for SFAirDropiTunesStoreLinkType(uint64_t a1)
{
}

uint64_t sub_1A54E5E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for SFUserDefault.SendableUserDefaultsBox()
{
  return __swift_instantiateGenericMetadata();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A54E5E84(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A54E5EA4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for NSExceptionName(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.CodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.BoolCodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.IntCodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.IntCodingKeys;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.Uint32CodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.Uint32CodingKeys;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.DoubleCodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.DoubleCodingKeys;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.StringCodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.StringCodingKeys;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.DateCodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.DateCodingKeys;
}

uint64_t getEnumTagSinglePayload for SFNearbySharingInteractionViewState.ShockwaveCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s7Sharing28SFUserDefaultsRepresentationO14BoolCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A54E6088);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.UuidCodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.UuidCodingKeys;
}

ValueMetadata *type metadata accessor for SFUserDefaultsRepresentation.NoneCodingKeys()
{
  return &type metadata for SFUserDefaultsRepresentation.NoneCodingKeys;
}

uint64_t getEnumTagSinglePayload for SFAirDropUserDefaults.Process(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s7Sharing28SFUserDefaultsRepresentationO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A54E622CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_1A54E6254(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1A54E625C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SFUserDefaultDescription.CodingKeys()
{
  return &type metadata for SFUserDefaultDescription.CodingKeys;
}

uint64_t _s11ContactInfoVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A54E62BC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A54E62DC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

unint64_t sub_1A54E6318()
{
  unint64_t result = qword_1E9670790;
  if (!qword_1E9670790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670790);
  }
  return result;
}

unint64_t sub_1A54E6370()
{
  unint64_t result = qword_1E9670798;
  if (!qword_1E9670798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670798);
  }
  return result;
}

unint64_t sub_1A54E63C8()
{
  unint64_t result = qword_1E96707A0;
  if (!qword_1E96707A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96707A0);
  }
  return result;
}

unint64_t sub_1A54E6420()
{
  unint64_t result = qword_1E96707A8;
  if (!qword_1E96707A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96707A8);
  }
  return result;
}

unint64_t sub_1A54E6478()
{
  unint64_t result = qword_1E96707B0;
  if (!qword_1E96707B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96707B0);
  }
  return result;
}

unint64_t sub_1A54E64D0()
{
  unint64_t result = qword_1E96707B8;
  if (!qword_1E96707B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96707B8);
  }
  return result;
}

unint64_t sub_1A54E6528()
{
  unint64_t result = qword_1E96707C0;
  if (!qword_1E96707C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96707C0);
  }
  return result;
}

unint64_t sub_1A54E6580()
{
  unint64_t result = qword_1E96707C8;
  if (!qword_1E96707C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96707C8);
  }
  return result;
}

unint64_t sub_1A54E65D8()
{
  unint64_t result = qword_1E96707D0;
  if (!qword_1E96707D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96707D0);
  }
  return result;
}

uint64_t sub_1A54E662C()
{
  return sub_1A54E4440((unint64_t *)&unk_1E966BEF8, type metadata accessor for CGImage);
}

uint64_t sub_1A54E6674()
{
  return sub_1A54E4440(&qword_1E96707E0, type metadata accessor for NSExceptionName);
}

uint64_t sub_1A54E66BC()
{
  return sub_1A54E4440(&qword_1E96707E8, type metadata accessor for NSExceptionName);
}

uint64_t sub_1A54E6704()
{
  return sub_1A54E4440((unint64_t *)&unk_1E96707F0, type metadata accessor for NSExceptionName);
}

uint64_t sub_1A54E674C()
{
  return sub_1A54E4440((unint64_t *)&unk_1E966BEE8, type metadata accessor for CGImage);
}

unint64_t sub_1A54E6798()
{
  unint64_t result = qword_1E9670800;
  if (!qword_1E9670800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670800);
  }
  return result;
}

unint64_t sub_1A54E67F0()
{
  unint64_t result = qword_1E9670808;
  if (!qword_1E9670808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670808);
  }
  return result;
}

unint64_t sub_1A54E6848()
{
  unint64_t result = qword_1E9670810;
  if (!qword_1E9670810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670810);
  }
  return result;
}

unint64_t sub_1A54E68A0()
{
  unint64_t result = qword_1E9670818;
  if (!qword_1E9670818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670818);
  }
  return result;
}

unint64_t sub_1A54E68F8()
{
  unint64_t result = qword_1E9670820;
  if (!qword_1E9670820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670820);
  }
  return result;
}

unint64_t sub_1A54E6950()
{
  unint64_t result = qword_1E9670828;
  if (!qword_1E9670828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670828);
  }
  return result;
}

unint64_t sub_1A54E69A8()
{
  unint64_t result = qword_1E9670830;
  if (!qword_1E9670830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670830);
  }
  return result;
}

unint64_t sub_1A54E6A00()
{
  unint64_t result = qword_1E9670838;
  if (!qword_1E9670838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670838);
  }
  return result;
}

unint64_t sub_1A54E6A58()
{
  unint64_t result = qword_1E9670840;
  if (!qword_1E9670840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670840);
  }
  return result;
}

unint64_t sub_1A54E6AB0()
{
  unint64_t result = qword_1E9670848;
  if (!qword_1E9670848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670848);
  }
  return result;
}

unint64_t sub_1A54E6B08()
{
  unint64_t result = qword_1E9670850;
  if (!qword_1E9670850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670850);
  }
  return result;
}

unint64_t sub_1A54E6B60()
{
  unint64_t result = qword_1E9670858;
  if (!qword_1E9670858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670858);
  }
  return result;
}

unint64_t sub_1A54E6BB8()
{
  unint64_t result = qword_1E9670860;
  if (!qword_1E9670860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670860);
  }
  return result;
}

unint64_t sub_1A54E6C10()
{
  unint64_t result = qword_1E9670868;
  if (!qword_1E9670868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670868);
  }
  return result;
}

unint64_t sub_1A54E6C68()
{
  unint64_t result = qword_1E9670870;
  if (!qword_1E9670870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670870);
  }
  return result;
}

unint64_t sub_1A54E6CC0()
{
  unint64_t result = qword_1E9670878;
  if (!qword_1E9670878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670878);
  }
  return result;
}

unint64_t sub_1A54E6D18()
{
  unint64_t result = qword_1E9670880;
  if (!qword_1E9670880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670880);
  }
  return result;
}

unint64_t sub_1A54E6D70()
{
  unint64_t result = qword_1E9670888;
  if (!qword_1E9670888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670888);
  }
  return result;
}

unint64_t sub_1A54E6DC8()
{
  unint64_t result = qword_1E9670890;
  if (!qword_1E9670890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670890);
  }
  return result;
}

unint64_t sub_1A54E6E20()
{
  unint64_t result = qword_1E9670898;
  if (!qword_1E9670898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670898);
  }
  return result;
}

uint64_t sub_1A54E6E74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A54E6F68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A54E7060(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A54E7154(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A5738010 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A5738030 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65756C6156736168 && a2 == 0xEE006B7369446E4FLL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7574616546736168 && a2 == 0xEE0067616C466572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656B636172746E75 && a2 == 0xE900000000000064 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6F6F427369 && a2 == 0xE600000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65737365636F7270 && a2 == 0xEF6C6C694B6F5473)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1A54E74F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1819242338 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7630441 && a2 == 0xE300000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x3233746E6975 && a2 == 0xE600000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C62756F64 && a2 == 0xE600000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

char *sub_1A54E77D8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    BOOL v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1A56D5C08();
  __break(1u);
  return result;
}

unsigned char *sub_1A54E78C8@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1A54E7938(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A54E7A30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A54E7B8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A54E7C80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A54E7D74(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A54E7DE0(uint64_t a1)
{
  return sub_1A54DCDA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1A54E7DFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A54E7E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A54DC8FC(a1, a2, v3, a3);
}

uint64_t sub_1A54E7E84()
{
  char v0 = SFUserDefault.hasValueOnDisk.getter();
  if (v0) {
    SFUserDefault.clearValueOnDisk()();
  }
  return v0 & 1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void *sub_1A54E7F18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1A54E7F5C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A54E7F94()
{
  return swift_deallocObject();
}

uint64_t sub_1A54E7FA4()
{
  uint64_t v1 = sub_1A56D54D8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A54E807C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D54D8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[6];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A54E8628;
  return sub_1A54DB300(a1, v5, v6, v7, v8);
}

uint64_t sub_1A54E817C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A54E81BC(uint64_t a1)
{
  return sub_1A54DC148(a1, *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1A54E81C8()
{
  uint64_t v1 = sub_1A56D54D8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A54E82A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D54D8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1A54E83BC;
  return sub_1A54DBA70(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A54E83BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A54E84B0(uint64_t a1)
{
  return sub_1A5645A64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

id sub_1A54E851C@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

void type metadata accessor for SFDeviceSetupProgressEvent(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_1A54E85B8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t SFAirDrop.ContactInfo.Handle.description.getter()
{
  uint64_t v1 = *v0;
  sub_1A54E866C();
  return v1;
}

uint64_t sub_1A54E866C()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_1A54E8678(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A54E8690()
{
  if (*v0) {
    return 0x6C69616D65;
  }
  else {
    return 0x656E6F6870;
  }
}

uint64_t sub_1A54E86BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A54EADA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A54E86E4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A54E86F0(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9D9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54E872C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9D9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54E8768(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9DF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54E87A4(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9DF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54E87E0(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9E44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54E881C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9E44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDrop.ContactInfo.Handle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96709B0);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96709B8);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96709C0);
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v22 = v1[1];
  uint64_t v23 = v12;
  char v13 = *((unsigned char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A54E9D9C();
  sub_1A56D61D8();
  if (v13)
  {
    char v26 = 1;
    sub_1A54E9DF0();
    uint64_t v14 = v24;
    sub_1A56D5D98();
    uint64_t v15 = v21;
    sub_1A56D5DE8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v15);
  }
  else
  {
    char v25 = 0;
    sub_1A54E9E44();
    uint64_t v14 = v24;
    sub_1A56D5D98();
    uint64_t v16 = v19;
    sub_1A56D5DE8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
}

uint64_t SFAirDrop.ContactInfo.Handle.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96709E0);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96709E8);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96709F0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A54E9D9C();
  uint64_t v14 = v41;
  sub_1A56D61A8();
  if (v14) {
    goto LABEL_6;
  }
  uint64_t v35 = v6;
  uint64_t v15 = v39;
  uint64_t v41 = v10;
  uint64_t v16 = v12;
  uint64_t v17 = sub_1A56D5D78();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v19 = sub_1A56D5A78();
    swift_allocError();
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    void *v21 = &type metadata for SFAirDrop.ContactInfo.Handle;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v9);
LABEL_6:
    uint64_t v22 = (uint64_t)v40;
    return __swift_destroy_boxed_opaque_existential_0Tm(v22);
  }
  uint64_t v34 = v17;
  char v18 = *(unsigned char *)(v17 + 32);
  if (v18)
  {
    char v43 = 1;
    sub_1A54E9DF0();
    sub_1A56D5C88();
    uint64_t v26 = sub_1A56D5CF8();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v9);
  }
  else
  {
    char v42 = 0;
    sub_1A54E9E44();
    uint64_t v24 = v8;
    char v25 = v16;
    sub_1A56D5C88();
    uint64_t v29 = v35;
    uint64_t v30 = sub_1A56D5CF8();
    uint64_t v28 = v31;
    unsigned int v32 = v24;
    uint64_t v26 = v30;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v9);
  }
  uint64_t v22 = (uint64_t)v40;
  uint64_t v33 = v36;
  *uint64_t v36 = v26;
  v33[1] = v28;
  *((unsigned char *)v33 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_0Tm(v22);
}

uint64_t sub_1A54E8FE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SFAirDrop.ContactInfo.Handle.init(from:)(a1, a2);
}

uint64_t sub_1A54E8FF8(void *a1)
{
  return SFAirDrop.ContactInfo.Handle.encode(to:)(a1);
}

uint64_t sub_1A54E9014()
{
  uint64_t v1 = *v0;
  sub_1A54E866C();
  return v1;
}

uint64_t SFAirDrop.ContactInfo.givenName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDrop.ContactInfo.fullName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDrop.ContactInfo.handle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return sub_1A54E866C();
}

uint64_t SFAirDrop.ContactInfo.vcard.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1A54E9E98(v1, *(void *)(v0 + 64));
  return v1;
}

__n128 SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, __n128 *a8@<X8>)
{
  unsigned __int8 v8 = a5[1].n128_u8[0];
  a8->n128_u64[0] = a1;
  a8->n128_u64[1] = a2;
  a8[1].n128_u64[0] = a3;
  a8[1].n128_u64[1] = a4;
  __n128 result = *a5;
  a8[2] = *a5;
  a8[3].n128_u8[0] = v8;
  a8[3].n128_u64[1] = a6;
  a8[4].n128_u64[0] = a7;
  return result;
}

uint64_t SFAirDrop.ContactInfo.description.getter()
{
  if (!*(void *)(v0 + 8)) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  sub_1A54E866C();
  sub_1A56D51C8();
  sub_1A54E9EF0();
  sub_1A56D51C8();
  return 0x49746361746E6F43;
}

uint64_t sub_1A54E9230()
{
  uint64_t result = 0x6D614E6E65766967;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D614E6C6C7566;
      break;
    case 2:
      uint64_t result = 0x656C646E6168;
      break;
    case 3:
      uint64_t result = 0x6472616376;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54E92BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A54EAE8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A54E92E4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A54E92F0(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9EF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54E932C(uint64_t a1)
{
  unint64_t v2 = sub_1A54E9EF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDrop.ContactInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96709F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v20 = *(void *)(v1 + 24);
  uint64_t v21 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v18 = *(void *)(v1 + 40);
  uint64_t v19 = v8;
  int v26 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v16 = *(void *)(v1 + 64);
  uint64_t v17 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A54E9EF8();
  sub_1A56D61D8();
  LOBYTE(v23) = 0;
  uint64_t v10 = v22;
  sub_1A56D5DA8();
  if (!v10)
  {
    char v11 = v26;
    uint64_t v13 = v18;
    uint64_t v12 = v19;
    uint64_t v14 = v17;
    LOBYTE(v23) = 1;
    sub_1A56D5DE8();
    uint64_t v23 = v12;
    uint64_t v24 = v13;
    char v25 = v11;
    char v27 = 2;
    sub_1A54E9F4C();
    sub_1A56D5E38();
    uint64_t v23 = v14;
    uint64_t v24 = v16;
    char v27 = 3;
    sub_1A54E9FA0();
    sub_1A56D5E38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SFAirDrop.ContactInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670A18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A54E9EF8();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  LOBYTE(v31) = 0;
  uint64_t v9 = sub_1A56D5CA8();
  uint64_t v11 = v10;
  uint64_t v29 = v9;
  LOBYTE(v31) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A56D5CF8();
  uint64_t v30 = v13;
  uint64_t v28 = v12;
  char v35 = 2;
  sub_1A54E9FF4();
  swift_bridgeObjectRetain();
  sub_1A56D5D48();
  unsigned __int8 v34 = v33;
  char v35 = 3;
  unint64_t v26 = v32;
  uint64_t v27 = v31;
  int v25 = v33;
  sub_1A54E866C();
  sub_1A54EA048();
  sub_1A56D5D48();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v14 = v32;
  unint64_t v23 = v32;
  uint64_t v24 = v31;
  swift_bridgeObjectRetain();
  uint64_t v15 = v30;
  swift_bridgeObjectRetain();
  unint64_t v17 = v26;
  uint64_t v16 = v27;
  char v18 = v25;
  sub_1A54E866C();
  sub_1A54E9E98(v24, v14);
  sub_1A54E9EF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v29;
  *(void *)(a2 + _Block_object_dispose(&a9, 8) = v11;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(unsigned char *)(a2 + 4_Block_object_dispose(&a9, 8) = v18;
  unint64_t v19 = v23;
  uint64_t v20 = v24;
  *(void *)(a2 + 56) = v24;
  *(void *)(a2 + 64) = v19;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E9EF0();
  return sub_1A54EA09C(v20, v19);
}

uint64_t sub_1A54E9964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDrop.ContactInfo.init(from:)(a1, a2);
}

uint64_t sub_1A54E997C(void *a1)
{
  return SFAirDrop.ContactInfo.encode(to:)(a1);
}

uint64_t SFAirDrop.ContactInfo.accountHandle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1A54E866C();
  return v1;
}

uint64_t _s7Sharing9SFAirDropO11ContactInfoV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  unint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  char v14 = *(unsigned char *)(a2 + 48);
  unint64_t v17 = *(void *)(a2 + 64);
  uint64_t v18 = *(void *)(a2 + 56);
  if (v3)
  {
    if (!v9 || (*(void *)a1 != *(void *)a2 || v3 != v9) && (sub_1A56D5F28() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if ((v4 != v10 || v5 != v12) && (sub_1A56D5F28() & 1) == 0) {
    return 0;
  }
  if (v8)
  {
    if (v14)
    {
      if (v6 != v11 || v7 != v13) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
LABEL_17:
    sub_1A54E866C();
    sub_1A54E866C();
    sub_1A54E9EF0();
    sub_1A54E9EF0();
    return 0;
  }
  if (v14) {
    goto LABEL_17;
  }
  if (v6 != v11 || v7 != v13)
  {
LABEL_22:
    char v15 = sub_1A56D5F28();
    sub_1A54E866C();
    sub_1A54E866C();
    sub_1A54E9EF0();
    sub_1A54E9EF0();
    if (v15) {
      goto LABEL_23;
    }
    return 0;
  }
LABEL_21:
  sub_1A54E866C();
  sub_1A54E866C();
  sub_1A54E9EF0();
  sub_1A54E9EF0();
LABEL_23:

  return sub_1A55CF004(v20, v19, v18, v17);
}

uint64_t _s7Sharing9SFAirDropO11ContactInfoV6HandleO2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_1A56D5F28();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  sub_1A54E866C();
  sub_1A54E866C();
  sub_1A54E9EF0();
  sub_1A54E9EF0();
  return v7 & 1;
}

unint64_t sub_1A54E9D9C()
{
  unint64_t result = qword_1E96709C8;
  if (!qword_1E96709C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96709C8);
  }
  return result;
}

unint64_t sub_1A54E9DF0()
{
  unint64_t result = qword_1E96709D0;
  if (!qword_1E96709D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96709D0);
  }
  return result;
}

unint64_t sub_1A54E9E44()
{
  unint64_t result = qword_1E96709D8;
  if (!qword_1E96709D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96709D8);
  }
  return result;
}

uint64_t sub_1A54E9E98(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1A54E9EF0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A54E9EF8()
{
  unint64_t result = qword_1E9670A00;
  if (!qword_1E9670A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A00);
  }
  return result;
}

unint64_t sub_1A54E9F4C()
{
  unint64_t result = qword_1E9670A08;
  if (!qword_1E9670A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A08);
  }
  return result;
}

unint64_t sub_1A54E9FA0()
{
  unint64_t result = qword_1E9670A10;
  if (!qword_1E9670A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A10);
  }
  return result;
}

unint64_t sub_1A54E9FF4()
{
  unint64_t result = qword_1E9670A20;
  if (!qword_1E9670A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A20);
  }
  return result;
}

unint64_t sub_1A54EA048()
{
  unint64_t result = qword_1E9670A28;
  if (!qword_1E9670A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A28);
  }
  return result;
}

uint64_t sub_1A54EA09C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t _s11ContactInfoVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A54E9EF0();
  uint64_t v2 = *(void *)(a1 + 56);
  unint64_t v3 = *(void *)(a1 + 64);

  return sub_1A54EA09C(v2, v3);
}

uint64_t _s11ContactInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A54E866C();
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v8;
  uint64_t v10 = *(void *)(a2 + 56);
  unint64_t v9 = *(void *)(a2 + 64);
  sub_1A54E9E98(v10, v9);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v9;
  return a1;
}

uint64_t _s11ContactInfoVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  sub_1A54E866C();
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v6;
  sub_1A54E9EF0();
  uint64_t v8 = *(void *)(a2 + 56);
  unint64_t v7 = *(void *)(a2 + 64);
  sub_1A54E9E98(v8, v7);
  uint64_t v9 = *(void *)(a1 + 56);
  unint64_t v10 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v7;
  sub_1A54EA09C(v9, v10);
  return a1;
}

uint64_t _s11ContactInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v6;
  sub_1A54E9EF0();
  uint64_t v7 = *(void *)(a1 + 56);
  unint64_t v8 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_1A54EA09C(v7, v8);
  return a1;
}

uint64_t _s11ContactInfoVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11ContactInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.ContactInfo()
{
  return &type metadata for SFAirDrop.ContactInfo;
}

uint64_t _s11ContactInfoV6HandleOwxx()
{
  return sub_1A54E9EF0();
}

uint64_t _s11ContactInfoV6HandleOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1A54E866C();
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11ContactInfoV6HandleOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1A54E866C();
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1A54E9EF0();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s11ContactInfoV6HandleOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1A54E9EF0();
  return a1;
}

uint64_t _s11ContactInfoV6HandleOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s11ContactInfoV6HandleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1A54EA548(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A54EA550(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.ContactInfo.Handle()
{
  return &type metadata for SFAirDrop.ContactInfo.Handle;
}

uint64_t _s11ContactInfoV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11ContactInfoV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A54EA6C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11ContactInfoV10CodingKeysOMa()
{
  return &_s11ContactInfoV10CodingKeysON;
}

uint64_t _s11ContactInfoV6HandleO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11ContactInfoV6HandleO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A54EA85CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1A54EA884(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *_s11ContactInfoV6HandleO10CodingKeysOMa()
{
  return &_s11ContactInfoV6HandleO10CodingKeysON;
}

ValueMetadata *_s11ContactInfoV6HandleO15PhoneCodingKeysOMa()
{
  return &_s11ContactInfoV6HandleO15PhoneCodingKeysON;
}

unsigned char *_s11ContactInfoV6HandleO15PhoneCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A54EA950);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s11ContactInfoV6HandleO15EmailCodingKeysOMa()
{
  return &_s11ContactInfoV6HandleO15EmailCodingKeysON;
}

unint64_t sub_1A54EA98C()
{
  unint64_t result = qword_1E9670A30;
  if (!qword_1E9670A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A30);
  }
  return result;
}

unint64_t sub_1A54EA9E4()
{
  unint64_t result = qword_1E9670A38;
  if (!qword_1E9670A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A38);
  }
  return result;
}

unint64_t sub_1A54EAA3C()
{
  unint64_t result = qword_1E9670A40;
  if (!qword_1E9670A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A40);
  }
  return result;
}

unint64_t sub_1A54EAA94()
{
  unint64_t result = qword_1E9670A48;
  if (!qword_1E9670A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A48);
  }
  return result;
}

unint64_t sub_1A54EAAEC()
{
  unint64_t result = qword_1E9670A50;
  if (!qword_1E9670A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A50);
  }
  return result;
}

unint64_t sub_1A54EAB44()
{
  unint64_t result = qword_1E9670A58;
  if (!qword_1E9670A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A58);
  }
  return result;
}

unint64_t sub_1A54EAB9C()
{
  unint64_t result = qword_1E9670A60;
  if (!qword_1E9670A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A60);
  }
  return result;
}

unint64_t sub_1A54EABF4()
{
  unint64_t result = qword_1E9670A68;
  if (!qword_1E9670A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A68);
  }
  return result;
}

unint64_t sub_1A54EAC4C()
{
  unint64_t result = qword_1E9670A70;
  if (!qword_1E9670A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A70);
  }
  return result;
}

unint64_t sub_1A54EACA4()
{
  unint64_t result = qword_1E9670A78;
  if (!qword_1E9670A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A78);
  }
  return result;
}

unint64_t sub_1A54EACFC()
{
  unint64_t result = qword_1E9670A80;
  if (!qword_1E9670A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A80);
  }
  return result;
}

unint64_t sub_1A54EAD54()
{
  unint64_t result = qword_1E9670A88;
  if (!qword_1E9670A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670A88);
  }
  return result;
}

uint64_t sub_1A54EADA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E6F6870 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C69616D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A54EAE8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E6C6C7566 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C646E6168 && a2 == 0xE600000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6472616376 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t AirDropMachServiceName.getter()
{
  return 0xD000000000000021;
}

unint64_t AirDropID.getter()
{
  return 0xD000000000000011;
}

ValueMetadata *type metadata accessor for SFAirDrop()
{
  return &type metadata for SFAirDrop;
}

uint64_t sub_1A54EB08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D5478();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A56D5468();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A54E4D44(a1, &qword_1EB3DB820);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A56D53F8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A54EB23C()
{
  return 1684632949;
}

uint64_t sub_1A54EB24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1A54EE58C(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1A54EB27C@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1A54EE660(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1A54DDE64, a2);
}

uint64_t sub_1A54EB294(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A54EB2E8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t SFXPCBlock.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_1A54EE7BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(void, void *))type metadata accessor for SFXPCBlock);
}

uint64_t type metadata accessor for SFXPCBlock()
{
  return swift_getGenericMetadata();
}

uint64_t SFXPCBlock.dynamicallyCall(withArguments:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = *(void *)(a3 + 16);
  v4[11] = v5;
  uint64_t v6 = sub_1A56D5898();
  _OWORD v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = *(void *)(v5 - 8);
  uint8_t v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A54EB4C8, 0, 0);
}

uint64_t sub_1A54EB4C8()
{
  if ((ValueMetadata *)v0[11] == &type metadata for VoidParameters)
  {
    uint64_t v3 = v0[17];
    v0[5] = &type metadata for VoidParameters;
    tryCast<A>(_:as:description:file:line:)((uint64_t)(v0 + 2), (uint64_t)&type metadata for VoidParameters, 0, 0, 0xD00000000000004CLL, 0x80000001A5738900, 31, (uint64_t)&type metadata for VoidParameters, v3);
    uint64_t v9 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[15];
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
    (*(void (**)(uint64_t, uint64_t, ValueMetadata *))(v10 + 32))(v8, v9, &type metadata for VoidParameters);
  }
  else
  {
    v0[6] = v0[8];
    uint64_t v1 = v0[16];
    uint64_t v2 = v0[12];
    sub_1A56D53D8();
    swift_getWitnessTable();
    sub_1A56D5718();
    Optional.tryUnwrap(_:file:line:)(0xD000000000000021, 0x80000001A57388D0, 0xD00000000000004CLL, 0x80000001A5738900, 33, v2, v1);
    uint64_t v4 = v0[18];
    uint64_t v6 = v0[15];
    uint64_t v5 = v0[16];
    uint64_t v7 = v0[11];
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v5, v7);
  }
  uint64_t v11 = (void *)(v0[10] + *(int *)(v0[9] + 68));
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))(*v11 + *(int *)*v11);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[19] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1A54EB7AC;
  uint64_t v13 = v0[18];
  uint64_t v14 = v0[7];
  return v16(v14, v13);
}

uint64_t sub_1A54EB7AC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A54EB968;
  }
  else {
    uint64_t v2 = sub_1A54EB8C0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A54EB8C0()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[18], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A54EB968()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[18], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A54EBA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A54EBBDC(a1, a2, a3, a4, a5, a6, &qword_1E966C868, 0xD000000000000012, 0x80000001A5738BE0);
}

uint64_t sub_1A54EBA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t a9)
{
  sub_1A54E3F20(a1, (uint64_t)&v20);
  a7(0);
  if (swift_dynamicCast()) {
    return v22;
  }
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1A56D5B48();
  uint64_t v17 = v20;
  unint64_t v18 = v21;
  sub_1A54F38F4();
  swift_allocError();
  *(void *)uint64_t v19 = v17;
  *(void *)(v19 + _Block_object_dispose(&a9, 8) = v18;
  *(void *)(v19 + 16) = a8;
  *(void *)(v19 + 24) = a9;
  *(void *)(v19 + 32) = a2;
  *(void *)(v19 + 40) = a3;
  *(void *)(v19 + 4_Block_object_dispose(&a9, 8) = a4;
  *(void *)(v19 + 56) = a5;
  *(void *)(v19 + 64) = a6;
  *(_OWORD *)(v19 + 72) = xmmword_1A56ED1E0;
  *(void *)(v19 + 8_Block_object_dispose(&a9, 8) = 0;
  *(void *)(v19 + 96) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1A54EBB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A54EBBDC(a1, a2, a3, a4, a5, a6, &qword_1E966C870, 0xD000000000000017, 0x80000001A57384C0);
}

uint64_t sub_1A54EBBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  sub_1A54E3F20(a1, (uint64_t)&v20);
  __swift_instantiateConcreteTypeFromMangledName(a7);
  if (swift_dynamicCast()) {
    return v22;
  }
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1A56D5B48();
  uint64_t v17 = v20;
  unint64_t v18 = v21;
  sub_1A54F38F4();
  swift_allocError();
  *(void *)uint64_t v19 = v17;
  *(void *)(v19 + _Block_object_dispose(&a9, 8) = v18;
  *(void *)(v19 + 16) = a8;
  *(void *)(v19 + 24) = a9;
  *(void *)(v19 + 32) = a2;
  *(void *)(v19 + 40) = a3;
  *(void *)(v19 + 4_Block_object_dispose(&a9, 8) = a4;
  *(void *)(v19 + 56) = a5;
  *(void *)(v19 + 64) = a6;
  *(_OWORD *)(v19 + 72) = xmmword_1A56ED1E0;
  *(void *)(v19 + 8_Block_object_dispose(&a9, 8) = 0;
  *(void *)(v19 + 96) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1A54EBD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_1A54E3F20(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670C70);
  if (swift_dynamicCast()) {
    return sub_1A54F5E4C(v16, a7);
  }
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_1A54E4D44((uint64_t)v16, &qword_1E9670C78);
  *(void *)&v16[0] = 0;
  *((void *)&v16[0] + 1) = 0xE000000000000000;
  sub_1A56D5B48();
  long long v14 = v16[0];
  sub_1A54F38F4();
  swift_allocError();
  *(_OWORD *)uint64_t v15 = v14;
  *(void *)(v15 + 16) = 0xD00000000000001ELL;
  *(void *)(v15 + 24) = 0x80000001A5738A70;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  *(void *)(v15 + 4_Block_object_dispose(&a9, 8) = a4;
  *(void *)(v15 + 56) = a5;
  *(void *)(v15 + 64) = a6;
  *(_OWORD *)(v15 + 72) = xmmword_1A56ED1E0;
  *(void *)(v15 + 8_Block_object_dispose(&a9, 8) = 0;
  *(void *)(v15 + 96) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_1A54EBE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_1A54E3F20(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E966C800);
  if (swift_dynamicCast()) {
    return sub_1A54F5E4C(v16, a7);
  }
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_1A54E4D44((uint64_t)v16, &qword_1E9670C80);
  *(void *)&v16[0] = 0;
  *((void *)&v16[0] + 1) = 0xE000000000000000;
  sub_1A56D5B48();
  long long v14 = v16[0];
  sub_1A54F38F4();
  swift_allocError();
  *(_OWORD *)uint64_t v15 = v14;
  *(void *)(v15 + 16) = 0xD00000000000001FLL;
  *(void *)(v15 + 24) = 0x80000001A5738A90;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  *(void *)(v15 + 4_Block_object_dispose(&a9, 8) = a4;
  *(void *)(v15 + 56) = a5;
  *(void *)(v15 + 64) = a6;
  *(_OWORD *)(v15 + 72) = xmmword_1A56ED1E0;
  *(void *)(v15 + 8_Block_object_dispose(&a9, 8) = 0;
  *(void *)(v15 + 96) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

void SFXPCBlock.encode(to:)(void *a1, void *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[4];
  uint64_t v5 = a2[5];
  uint64_t v6 = a2[6];
  uint64_t v7 = a2[7];
  uint64_t v29 = a2[3];
  uint64_t v30 = v3;
  *(void *)&long long v35 = v3;
  *((void *)&v35 + 1) = v29;
  *(void *)&long long v36 = v4;
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  *((void *)&v36 + 1) = v5;
  uint64_t v37 = v6;
  uint64_t v25 = v7;
  uint64_t v26 = v6;
  uint64_t v38 = v7;
  type metadata accessor for SFXPCBlock.CodingKeys();
  v24[1] = swift_getWitnessTable();
  uint64_t v8 = sub_1A56D5E68();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v31 = (char *)v24 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A56D5BA8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = sub_1A56D61C8();
  sub_1A56D5B98();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    if (*(void *)(v17 + 16))
    {
      unint64_t v18 = sub_1A54F3890((uint64_t)v16);
      uint64_t v19 = v39;
      if (v20)
      {
        sub_1A54E3F20(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v35);
      }
      else
      {
        long long v35 = 0u;
        long long v36 = 0u;
      }
    }
    else
    {
      long long v35 = 0u;
      long long v36 = 0u;
      uint64_t v19 = v39;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    unint64_t v21 = (void *)sub_1A54EC404((uint64_t)&v35, 0, 0, 0xD00000000000004CLL, 0x80000001A5738900, 39);
    sub_1A54E4D44((uint64_t)&v35, &qword_1EB3DB9F0);
    if (!v19)
    {
      sub_1A54ECC48(v34, v30, v29, v28, v27, v26, v25);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      uint64_t v22 = v31;
      sub_1A56D61D8();
      sub_1A56D4CB8();
      sub_1A54F5E64(&qword_1E966C7D8);
      uint64_t v23 = v33;
      sub_1A56D5E38();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v23);
    }
  }
}

uint64_t type metadata accessor for SFXPCBlock.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A54EC404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v21 = a4;
  uint64_t v9 = sub_1A56D6138();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for _SFXPCBlockContainer();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C7F8);
  *(void *)&long long v26 = v13;
  sub_1A56D60F8();
  *(void *)&long long v24 = 0x2874736143797274;
  *((void *)&v24 + 1) = 0xE800000000000000;
  sub_1A56D6108();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  uint64_t v14 = *((void *)&v24 + 1);
  uint64_t v15 = v24;
  sub_1A54F60EC(a1, (uint64_t)&v24, &qword_1EB3DB9F0);
  if (v25)
  {
    sub_1A54E3F10(&v24, &v26);
    swift_bridgeObjectRelease();
    uint64_t v16 = v28;
    uint64_t v17 = sub_1A54EBA54((uint64_t)&v26, a2, a3, v21, v22, v23, (void (*)(void))type metadata accessor for _SFXPCBlockContainer, 0xD000000000000014, 0x80000001A56ED2F0);
    if (!v16) {
      uint64_t v14 = v17;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v26);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    sub_1A54E4D44((uint64_t)&v24, &qword_1EB3DB9F0);
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v18 = v15;
    *(void *)(v18 + _Block_object_dispose(&a9, 8) = v14;
    *(void *)(v18 + 16) = 0xD000000000000046;
    *(void *)(v18 + 24) = 0x80000001A5738AB0;
    *(void *)(v18 + 32) = 132;
    *(_OWORD *)(v18 + 40) = 0u;
    *(_OWORD *)(v18 + 56) = 0u;
    *(void *)(v18 + 72) = 0;
    *(void *)(v18 + 80) = 0x2000000000000000;
    *(void *)(v18 + 8_Block_object_dispose(&a9, 8) = 0;
    *(void *)(v18 + 96) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1A54EC6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v21 = a4;
  uint64_t v9 = sub_1A56D6138();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966C6A0);
  *(void *)&long long v26 = v13;
  sub_1A56D60F8();
  *(void *)&long long v24 = 0x2874736143797274;
  *((void *)&v24 + 1) = 0xE800000000000000;
  sub_1A56D6108();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  uint64_t v14 = *((void *)&v24 + 1);
  uint64_t v15 = v24;
  sub_1A54F60EC(a1, (uint64_t)&v24, &qword_1EB3DB9F0);
  if (v25)
  {
    sub_1A54E3F10(&v24, &v26);
    swift_bridgeObjectRelease();
    uint64_t v16 = v28;
    uint64_t v17 = sub_1A54EBA54((uint64_t)&v26, a2, a3, v21, v22, v23, (void (*)(void))type metadata accessor for _SFXPCAsyncSequenceContainer, 0xD00000000000001CLL, 0x80000001A5738B00);
    if (!v16) {
      uint64_t v14 = v17;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v26);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    sub_1A54E4D44((uint64_t)&v24, &qword_1EB3DB9F0);
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v18 = v15;
    *(void *)(v18 + _Block_object_dispose(&a9, 8) = v14;
    *(void *)(v18 + 16) = 0xD000000000000046;
    *(void *)(v18 + 24) = 0x80000001A5738AB0;
    *(void *)(v18 + 32) = 132;
    *(_OWORD *)(v18 + 40) = 0u;
    *(_OWORD *)(v18 + 56) = 0u;
    *(void *)(v18 + 72) = 0;
    *(void *)(v18 + 80) = 0x2000000000000000;
    *(void *)(v18 + 8_Block_object_dispose(&a9, 8) = 0;
    *(void *)(v18 + 96) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1A54EC98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v21 = a4;
  uint64_t v9 = sub_1A56D6138();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C870);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670C88);
  *(void *)&long long v26 = v13;
  sub_1A56D60F8();
  *(void *)&long long v24 = 0x2874736143797274;
  *((void *)&v24 + 1) = 0xE800000000000000;
  sub_1A56D6108();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  uint64_t v14 = *((void *)&v24 + 1);
  uint64_t v15 = v24;
  sub_1A54F60EC(a1, (uint64_t)&v24, &qword_1EB3DB9F0);
  if (v25)
  {
    sub_1A54E3F10(&v24, &v26);
    swift_bridgeObjectRelease();
    uint64_t v16 = v28;
    uint64_t v17 = sub_1A54EBBDC((uint64_t)&v26, a2, a3, v21, v22, v23, &qword_1E966C870, 0xD000000000000017, 0x80000001A57384C0);
    if (!v16) {
      uint64_t v14 = v17;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v26);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    sub_1A54E4D44((uint64_t)&v24, &qword_1EB3DB9F0);
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v18 = v15;
    *(void *)(v18 + _Block_object_dispose(&a9, 8) = v14;
    *(void *)(v18 + 16) = 0xD000000000000046;
    *(void *)(v18 + 24) = 0x80000001A5738AB0;
    *(void *)(v18 + 32) = 132;
    *(_OWORD *)(v18 + 40) = 0u;
    *(_OWORD *)(v18 + 56) = 0u;
    *(void *)(v18 + 72) = 0;
    *(void *)(v18 + 80) = 0x2000000000000000;
    *(void *)(v18 + 8_Block_object_dispose(&a9, 8) = 0;
    *(void *)(v18 + 96) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1A54ECC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a7;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v25 = a4;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v10 = type metadata accessor for SFXPCBlock();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = sub_1A56D4CB8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = a3;
  uint64_t v20 = v26;
  *((void *)v19 + 4) = v25;
  *((void *)v19 + 5) = v20;
  uint64_t v21 = v28;
  *((void *)v19 + 6) = v27;
  *((void *)v19 + 7) = v21;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v18], v13, v10);
  uint64_t v22 = (uint64_t *)(v29 + OBJC_IVAR____SFXPCBlockContainer_registeredAsyncBlocks);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = *v22;
  *uint64_t v22 = 0x8000000000000000;
  sub_1A55E5A44((uint64_t)&unk_1E9670CE0, (uint64_t)v19, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
  *uint64_t v22 = v30;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return swift_endAccess();
}

uint64_t SFXPCBlock.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v86 = a8;
  uint64_t v91 = sub_1A56D4CB8();
  uint64_t v80 = *(void *)(v91 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v91);
  uint64_t v78 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v90 = (char *)&v73 - v17;
  *(void *)&long long v109 = a2;
  *((void *)&v109 + 1) = a3;
  uint64_t v110 = a4;
  uint64_t v111 = a5;
  uint64_t v112 = a6;
  uint64_t v113 = a7;
  uint64_t v18 = type metadata accessor for SFXPCBlock.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v93 = v18;
  uint64_t v92 = WitnessTable;
  uint64_t v89 = sub_1A56D5D88();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v96 = (char *)&v73 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v100 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = sub_1A56D5BA8();
  uint64_t v27 = MEMORY[0x1F4188790](v26);
  uint64_t v95 = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v73 - v30;
  uint64_t v79 = a2;
  *(void *)&long long v109 = a2;
  *((void *)&v109 + 1) = a3;
  uint64_t v32 = v29;
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v110 = a4;
  uint64_t v111 = a5;
  uint64_t v83 = a5;
  uint64_t v84 = a6;
  uint64_t v112 = a6;
  uint64_t v113 = a7;
  uint64_t v34 = v33;
  uint64_t v85 = a7;
  uint64_t v35 = type metadata accessor for SFXPCBlock();
  uint64_t v76 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  char v87 = (char *)&v73 - v36;
  uint64_t v37 = a1[3];
  uint64_t v38 = a1[4];
  uint64_t v102 = a1;
  uint64_t v97 = __swift_project_boxed_opaque_existential_1(a1, v37);
  uint64_t v99 = v38;
  uint64_t v39 = sub_1A56D6198();
  sub_1A56D5B98();
  uint64_t v98 = (uint64_t (*)(char *, uint64_t, uint64_t))v34[6];
  uint64_t result = v98(v25, 1, v32);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v94 = (void (*)(char *, char *, uint64_t))v34[4];
    v94(v31, v25, v32);
    if (*(void *)(v39 + 16) && (unint64_t v41 = sub_1A54F3890((uint64_t)v31), (v42 & 1) != 0))
    {
      sub_1A54E3F20(*(void *)(v39 + 56) + 32 * v41, (uint64_t)&v107);
    }
    else
    {
      long long v107 = 0u;
      long long v108 = 0u;
    }
    swift_bridgeObjectRelease();
    char v43 = (void (*)(char *, uint64_t))v34[1];
    v43(v31, v32);
    sub_1A54F60EC((uint64_t)&v107, (uint64_t)&v105, &qword_1EB3DB9F0);
    if (!v106)
    {
      sub_1A54E4D44((uint64_t)&v105, &qword_1EB3DB9F0);
      sub_1A54F38F4();
      swift_allocError();
      *(void *)uint64_t v47 = 0xD000000000000011;
      *(void *)(v47 + _Block_object_dispose(&a9, 8) = 0x80000001A5738970;
      *(void *)(v47 + 16) = 0xD00000000000004CLL;
      *(void *)(v47 + 24) = 0x80000001A5738900;
      *(void *)(v47 + 32) = 48;
      *(_OWORD *)(v47 + 40) = 0u;
      *(_OWORD *)(v47 + 56) = 0u;
      *(void *)(v47 + 72) = 0;
      *(void *)(v47 + 80) = 0x2000000000000000;
      *(void *)(v47 + 8_Block_object_dispose(&a9, 8) = 0;
      *(void *)(v47 + 96) = 0;
      swift_willThrow();
      sub_1A54E4D44((uint64_t)&v107, &qword_1EB3DB9F0);
      uint64_t v46 = v102;
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
    }
    uint64_t v75 = v35;
    sub_1A54E3F10(&v105, &v109);
    sub_1A54E4D44((uint64_t)&v107, &qword_1EB3DB9F0);
    uint64_t v44 = v101;
    uint64_t v45 = sub_1A54EBBDC((uint64_t)&v109, 0, 0, 0xD00000000000004CLL, 0x80000001A5738900, 49, &qword_1E966C868, 0xD000000000000012, 0x80000001A5738BE0);
    if (v44)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v109);
      uint64_t v46 = v102;
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
    }
    uint64_t v74 = v45;
    uint64_t v101 = 0;
    uint64_t v48 = sub_1A56D6198();
    uint64_t v49 = v100;
    sub_1A56D5B98();
    uint64_t result = v98(v49, 1, v32);
    if (result != 1)
    {
      uint64_t v50 = (uint64_t)v95;
      v94(v95, v49, v32);
      uint64_t v51 = v96;
      if (*(void *)(v48 + 16) && (unint64_t v52 = sub_1A54F3890(v50), (v53 & 1) != 0))
      {
        sub_1A54E3F20(*(void *)(v48 + 56) + 32 * v52, (uint64_t)&v107);
      }
      else
      {
        long long v107 = 0u;
        long long v108 = 0u;
      }
      swift_bridgeObjectRelease();
      v43((char *)v50, v32);
      sub_1A54F60EC((uint64_t)&v107, (uint64_t)&v103, &qword_1EB3DB9F0);
      if (v104)
      {
        sub_1A54E3F10(&v103, &v105);
        uint64_t v54 = v101;
        uint64_t v55 = sub_1A54EBA54((uint64_t)&v105, 0, 0, 0xD00000000000004CLL, 0x80000001A5738900, 54, (void (*)(void))type metadata accessor for _SFXPCContainerRegistry, 0xD000000000000017, 0x80000001A5738BC0);
        uint64_t v46 = v102;
        if (v54)
        {
          swift_unknownObjectRelease();
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v105);
          goto LABEL_23;
        }
        uint64_t v56 = v55;
        uint64_t v101 = 0;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v105);
      }
      else
      {
        sub_1A54E4D44((uint64_t)&v103, &qword_1EB3DB9F0);
        uint64_t v56 = 0;
        uint64_t v46 = v102;
      }
      __swift_project_boxed_opaque_existential_1(v46, v46[3]);
      uint64_t v57 = v101;
      sub_1A56D61A8();
      if (!v57)
      {
        sub_1A54F5E64(&qword_1E966C888);
        uint64_t v58 = v90;
        uint64_t v59 = v91;
        sub_1A56D5D48();
        uint64_t v60 = v80;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v87, v58, v59);
        *(void *)&long long v105 = 0x6B636F6C42637078;
        *((void *)&v105 + 1) = 0xEA0000000000203ALL;
        __swift_project_boxed_opaque_existential_1(v46, v46[3]);
        uint64_t v61 = sub_1A56D6178();
        uint64_t v62 = sub_1A54EDA20(v61);
        uint64_t v101 = 0;
        swift_bridgeObjectRelease();
        *(void *)&long long v103 = v62;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C528);
        sub_1A54F3948();
        sub_1A56D5018();
        swift_bridgeObjectRelease();
        sub_1A56D51C8();
        swift_bridgeObjectRelease();
        uint64_t v102 = (void *)*((void *)&v105 + 1);
        uint64_t v63 = v105;
        (*(void (**)(char *, uint64_t))(v88 + 8))(v51, v89);
        sub_1A54E4D44((uint64_t)&v107, &qword_1EB3DB9F0);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v109);
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
        uint64_t v65 = v78;
        uint64_t v66 = v91;
        v64(v78, v90, v91);
        unint64_t v67 = (*(unsigned __int8 *)(v60 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
        uint64_t v68 = (char *)swift_allocObject();
        uint64_t v69 = v81;
        *((void *)v68 + 2) = v79;
        *((void *)v68 + 3) = v69;
        uint64_t v70 = v83;
        *((void *)v68 + 4) = v82;
        *((void *)v68 + 5) = v70;
        uint64_t v71 = v85;
        *((void *)v68 + 6) = v84;
        *((void *)v68 + 7) = v71;
        *((void *)v68 + _Block_object_dispose(&a9, 8) = v74;
        *((void *)v68 + 9) = v63;
        *((void *)v68 + 10) = v102;
        *((void *)v68 + 11) = v56;
        v64(&v68[v67], v65, v66);
        int v72 = &v87[*(int *)(v75 + 68)];
        *(void *)int v72 = &unk_1E9670AA8;
        *((void *)v72 + 1) = v68;
        (*(void (**)(uint64_t))(v76 + 32))(v86);
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
      }
      swift_unknownObjectRelease();
      swift_release();
LABEL_23:
      sub_1A54E4D44((uint64_t)&v107, &qword_1EB3DB9F0);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v109);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A54EDA20(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1A5546168(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      uint64_t v5 = sub_1A56D61E8();
      uint64_t v7 = v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1A5546168(0, *(void *)(v12 + 16) + 1, 1);
      }
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1A5546168(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A54EDB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 112) = v17;
  *(_OWORD *)(v8 + 80) = v15;
  *(_OWORD *)(v8 + 96) = v16;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 4_Block_object_dispose(&a9, 8) = a5;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v10 = sub_1A56D4CB8();
  *(void *)(v8 + 120) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 12_Block_object_dispose(&a9, 8) = v11;
  *(void *)(v8 + 136) = *(void *)(v11 + 64);
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v12 = *(void *)(a8 - 8);
  *(void *)(v8 + 152) = v12;
  *(void *)(v8 + 160) = *(void *)(v12 + 64);
  *(void *)(v8 + 16_Block_object_dispose(&a9, 8) = swift_task_alloc();
  swift_retain();
  return MEMORY[0x1F4188298](sub_1A54EDC90, 0, 0);
}

uint64_t sub_1A54EDC90()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v23 = v4;
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v22 = v6;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v25 = *(void *)(v0 + 48);
  uint64_t v26 = *(void *)(v0 + 56);
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 24);
  ObjectCFStringRef Type = swift_getObjectType();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CD0);
  long long v19 = *(_OWORD *)(v0 + 72);
  uint64_t v9 = *(void *)(v0 + 72);
  long long v20 = *(_OWORD *)(v0 + 104);
  long long v21 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v11 = (v1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + v11 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 176) = v13;
  *(_OWORD *)(v13 + 16) = v19;
  *(_OWORD *)(v13 + 32) = v21;
  *(_OWORD *)(v13 + 4_Block_object_dispose(&a9, 8) = v20;
  *(void *)(v13 + 64) = v24;
  *(void *)(v13 + 72) = v25;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v13 + v10, v2, v9);
  *(void *)(v13 + v11) = v26;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v13 + v12, v23, v22);
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1A54EDECC;
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  uint64_t v17 = *(void *)(v0 + 16);
  return sub_1A55AC6F8(v17, v15, v16, v27, (uint64_t)sub_1A54F6568, v13, ObjectType, v27);
}

uint64_t sub_1A54EDECC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A54EE020, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A54EE020()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1A54EE098(void **a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v50 = a7;
  id v56 = a3;
  unint64_t v52 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v55 = a9;
  uint64_t v18 = sub_1A56D5428();
  uint64_t v53 = *(void *)(v18 - 8);
  uint64_t v54 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v51 = (char *)&v44 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a5, a8);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v58;
  uint64_t v26 = sub_1A55ABE30((uint64_t)v56, a4, (uint64_t)v22, a6, a8, a10, a11);
  if (!v25)
  {
    unint64_t v30 = v27;
    id v56 = v23;
    uint64_t v45 = a12;
    uint64_t v46 = a13;
    uint64_t v58 = v26;
    id v47 = v28;
    id v48 = v29;
    uint64_t v50 = sub_1A56D4C68();
    uint64_t v49 = sub_1A56D4A68();
    uint64_t v31 = v53;
    uint64_t v32 = v51;
    uint64_t v33 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v51, v52, v54);
    uint64_t v34 = *(unsigned __int8 *)(v31 + 80);
    unint64_t v52 = v30;
    uint64_t v35 = (v34 + 64) & ~v34;
    uint64_t v36 = (char *)swift_allocObject();
    uint64_t v37 = v55;
    *((void *)v36 + 2) = a8;
    *((void *)v36 + 3) = v37;
    *((void *)v36 + 4) = a10;
    *((void *)v36 + 5) = a11;
    uint64_t v38 = v46;
    *((void *)v36 + 6) = v45;
    *((void *)v36 + 7) = v38;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v36[v35], v32, v33);
    void aBlock[4] = sub_1A54F673C;
    void aBlock[5] = v36;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_73;
    uint64_t v39 = _Block_copy(aBlock);
    id v40 = v47;
    id v41 = v48;
    swift_release();
    char v43 = (void *)v49;
    char v42 = (void *)v50;
    objc_msgSend(v56, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v50, v49, v40, v41, 0, v39);
    _Block_release(v39);

    sub_1A54EA09C(v58, v52);
  }
}

uint64_t sub_1A54EE414(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  v15[1] = a6;
  v15[0] = type metadata accessor for SFXPCConnection.PerformedInvocation();
  uint64_t v9 = *(void *)(v15[0] - 8);
  MEMORY[0x1F4188790](v15[0]);
  unint64_t v11 = (char *)v15 - v10;
  sub_1A54F6308(a1, a2);
  id v12 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A55AC634(a1, a2, a5, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v13 = sub_1A56D5428();
  sub_1A5537400((uint64_t)v11, v13);
  return (*(uint64_t (**)(char *, void))(v9 + 8))(v11, v15[0]);
}

uint64_t sub_1A54EE58C(uint64_t a1, uint64_t a2)
{
  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A54EE604(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1A54F0590(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void))SFXPCBlock.init(from:));
}

void sub_1A54EE630(void *a1, void *a2)
{
}

uint64_t sub_1A54EE648@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1A54EE660(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1A54F6B8C, a2);
}

uint64_t sub_1A54EE660@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A54EE6A4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A54EE6F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t _s7Sharing10SFXPCBlockV4bodyyq_xYaKcvg_0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 68));
  swift_retain();
  return v2;
}

uint64_t SFXPCSyncBlock.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_1A54EE7BC(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(void, void *))type metadata accessor for SFXPCSyncBlock);
}

uint64_t sub_1A54EE7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t (*a10)(void, void *))
{
  sub_1A56D4CA8();
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  v21[4] = a7;
  void v21[5] = a8;
  uint64_t result = a10(0, v21);
  uint64_t v20 = (void *)(a9 + *(int *)(result + 68));
  *uint64_t v20 = a1;
  v20[1] = a2;
  return result;
}

uint64_t SFXPCSyncBlock.dynamicallyCall(withArguments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a2;
  v25[5] = a3;
  uint64_t v5 = *(ValueMetadata **)(a2 + 16);
  uint64_t v6 = sub_1A56D5898();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - v9;
  Description = (void (**)(char *, char *, ValueMetadata *))v5[-1].Description;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v21 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v21 - v17;
  if (v5 == &type metadata for VoidParameters)
  {
    v25[3] = &type metadata for VoidParameters;
    tryCast<A>(_:as:description:file:line:)((uint64_t)v25, (uint64_t)&type metadata for VoidParameters, 0, 0, 0xD00000000000004CLL, 0x80000001A5738900, 92, (uint64_t)&type metadata for VoidParameters, (uint64_t)v16);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    if (v3) {
      return result;
    }
    uint64_t v20 = Description;
    Description[4](v18, v16, &type metadata for VoidParameters);
  }
  else
  {
    v25[0] = a1;
    sub_1A56D53D8();
    swift_getWitnessTable();
    sub_1A56D5718();
    Optional.tryUnwrap(_:file:line:)(0xD000000000000025, 0x80000001A57389B0, 0xD00000000000004CLL, 0x80000001A5738900, 94, v6, (uint64_t)v13);
    if (v3) {
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v20 = Description;
    Description[4](v18, v13, v5);
  }
  (*(void (**)(char *))(v24 + *(int *)(v23 + 68)))(v18);
  return ((uint64_t (*)(char *, ValueMetadata *))v20[1])(v18, v5);
}

uint64_t SFXPCSyncBlock.encode(to:)(void *a1, void *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[4];
  uint64_t v5 = a2[5];
  uint64_t v6 = a2[6];
  uint64_t v7 = a2[7];
  uint64_t v33 = a2[3];
  uint64_t v34 = v3;
  *(void *)&long long v41 = v3;
  *((void *)&v41 + 1) = v33;
  uint64_t v32 = v4;
  uint64_t v42 = v4;
  uint64_t v43 = v5;
  uint64_t v31 = v5;
  uint64_t v30 = v6;
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  uint64_t v29 = v7;
  type metadata accessor for SFXPCSyncBlock.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = sub_1A56D5E68();
  uint64_t v27 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)&v26 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A56D5BA8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v16 = sub_1A56D61C8();
  sub_1A56D5B98();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    if (*(void *)(v16 + 16) && (unint64_t v18 = sub_1A54F3890((uint64_t)v15), (v19 & 1) != 0)) {
      sub_1A54E3F20(*(void *)(v16 + 56) + 32 * v18, (uint64_t)v40);
    }
    else {
      memset(v40, 0, sizeof(v40));
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1A54F60EC((uint64_t)v40, (uint64_t)&v38, &qword_1EB3DB9F0);
    if (v39)
    {
      sub_1A54E3F10(&v38, &v41);
      sub_1A54E4D44((uint64_t)v40, &qword_1EB3DB9F0);
      uint64_t v20 = v46;
      uint64_t v21 = sub_1A54EBA54((uint64_t)&v41, 0, 0, 0xD00000000000004CLL, 0x80000001A5738900, 101, (void (*)(void))type metadata accessor for _SFXPCBlockContainer, 0xD000000000000014, 0x80000001A56ED2F0);
      if (!v20)
      {
        uint64_t v22 = (void *)v21;
        sub_1A54EF07C(v37, v34, v33, v32, v31, v30, v29);
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        uint64_t v23 = v35;
        sub_1A56D61D8();
        sub_1A56D4CB8();
        sub_1A54F5E64(&qword_1E966C7D8);
        uint64_t v24 = v36;
        sub_1A56D5E38();

        (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v24);
      }
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
    }
    else
    {
      sub_1A54E4D44((uint64_t)&v38, &qword_1EB3DB9F0);
      sub_1A54F38F4();
      swift_allocError();
      *(void *)uint64_t v25 = 0xD000000000000011;
      *(void *)(v25 + _Block_object_dispose(&a9, 8) = 0x80000001A5738970;
      *(void *)(v25 + 16) = 0xD00000000000004CLL;
      *(void *)(v25 + 24) = 0x80000001A5738900;
      *(void *)(v25 + 32) = 100;
      *(_OWORD *)(v25 + 40) = 0u;
      *(_OWORD *)(v25 + 56) = 0u;
      *(void *)(v25 + 72) = 0;
      *(void *)(v25 + 80) = 0x2000000000000000;
      *(void *)(v25 + 8_Block_object_dispose(&a9, 8) = 0;
      *(void *)(v25 + 96) = 0;
      swift_willThrow();
      return sub_1A54E4D44((uint64_t)v40, &qword_1EB3DB9F0);
    }
  }
  return result;
}

uint64_t sub_1A54EF07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a7;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v25 = a4;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v36 = a7;
  uint64_t v10 = type metadata accessor for SFXPCSyncBlock();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = sub_1A56D4CB8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  char v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = a3;
  uint64_t v20 = v26;
  *((void *)v19 + 4) = v25;
  *((void *)v19 + 5) = v20;
  uint64_t v21 = v28;
  *((void *)v19 + 6) = v27;
  *((void *)v19 + 7) = v21;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v18], v13, v10);
  uint64_t v22 = (uint64_t *)(v29 + OBJC_IVAR____SFXPCBlockContainer_registeredSyncBlocks);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = *v22;
  *uint64_t v22 = 0x8000000000000000;
  sub_1A55E5C28((uint64_t)sub_1A54F6334, (uint64_t)v19, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
  *uint64_t v22 = v30;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return swift_endAccess();
}

uint64_t SFXPCSyncBlock.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v82 = a8;
  uint64_t v86 = sub_1A56D4CB8();
  uint64_t v77 = *(void *)(v86 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v86);
  uint64_t v74 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v85 = (char *)&v68 - v17;
  *(void *)&long long v104 = a2;
  *((void *)&v104 + 1) = a3;
  uint64_t v105 = a4;
  uint64_t v106 = a5;
  uint64_t v107 = a6;
  uint64_t v108 = a7;
  uint64_t v18 = type metadata accessor for SFXPCSyncBlock.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v88 = v18;
  uint64_t v87 = WitnessTable;
  uint64_t v92 = sub_1A56D5D88();
  uint64_t v84 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v91 = (char *)&v68 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v96 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v68 - v24;
  uint64_t v26 = sub_1A56D5BA8();
  uint64_t v27 = MEMORY[0x1F4188790](v26);
  uint64_t v93 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v68 - v30;
  uint64_t v75 = a2;
  *(void *)&long long v104 = a2;
  *((void *)&v104 + 1) = a3;
  uint64_t v76 = a3;
  uint64_t v32 = v29;
  uint64_t v78 = a4;
  uint64_t v105 = a4;
  uint64_t v106 = a5;
  uint64_t v34 = v33;
  uint64_t v79 = a5;
  uint64_t v80 = a6;
  uint64_t v107 = a6;
  uint64_t v108 = a7;
  uint64_t v81 = a7;
  uint64_t v72 = type metadata accessor for SFXPCSyncBlock();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v83 = (char *)&v68 - v35;
  uint64_t v37 = a1[3];
  uint64_t v36 = a1[4];
  long long v109 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  uint64_t v95 = v36;
  uint64_t v38 = sub_1A56D6198();
  sub_1A56D5B98();
  uint64_t v94 = (uint64_t (*)(char *, uint64_t, uint64_t))v34[6];
  uint64_t result = v94(v25, 1, v32);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v89 = (void (*)(char *, char *, uint64_t))v34[4];
    v89(v31, v25, v32);
    if (*(void *)(v38 + 16) && (unint64_t v40 = sub_1A54F3890((uint64_t)v31), (v41 & 1) != 0))
    {
      sub_1A54E3F20(*(void *)(v38 + 56) + 32 * v40, (uint64_t)&v102);
    }
    else
    {
      long long v102 = 0u;
      long long v103 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v42 = (void (*)(char *, uint64_t))v34[1];
    uint64_t v90 = v34 + 1;
    v42(v31, v32);
    sub_1A54F60EC((uint64_t)&v102, (uint64_t)&v100, &qword_1EB3DB9F0);
    if (!v101)
    {
      sub_1A54E4D44((uint64_t)&v100, &qword_1EB3DB9F0);
      sub_1A54F38F4();
      swift_allocError();
      *(void *)uint64_t v46 = 0xD000000000000011;
      *(void *)(v46 + _Block_object_dispose(&a9, 8) = 0x80000001A5738970;
      *(void *)(v46 + 16) = 0xD00000000000004CLL;
      *(void *)(v46 + 24) = 0x80000001A5738900;
      *(void *)(v46 + 32) = 110;
      *(_OWORD *)(v46 + 40) = 0u;
      *(_OWORD *)(v46 + 56) = 0u;
      *(void *)(v46 + 72) = 0;
      *(void *)(v46 + 80) = 0x2000000000000000;
      *(void *)(v46 + 8_Block_object_dispose(&a9, 8) = 0;
      *(void *)(v46 + 96) = 0;
      swift_willThrow();
      sub_1A54E4D44((uint64_t)&v102, &qword_1EB3DB9F0);
      uint64_t v45 = v109;
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    sub_1A54E3F10(&v100, &v104);
    sub_1A54E4D44((uint64_t)&v102, &qword_1EB3DB9F0);
    uint64_t v43 = v97;
    uint64_t v44 = sub_1A54EBBDC((uint64_t)&v104, 0, 0, 0xD00000000000004CLL, 0x80000001A5738900, 111, &qword_1E966C868, 0xD000000000000012, 0x80000001A5738BE0);
    if (v43)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v104);
      uint64_t v45 = v109;
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
    unint64_t v69 = (unint64_t)"sed to SFXPCBlock";
    uint64_t v70 = v44;
    uint64_t v97 = v32;
    uint64_t v47 = sub_1A56D6198();
    uint64_t v49 = v96;
    uint64_t v48 = v97;
    sub_1A56D5B98();
    uint64_t result = v94(v49, 1, v48);
    if (result != 1)
    {
      uint64_t v50 = (uint64_t)v93;
      v89(v93, v49, v48);
      if (*(void *)(v47 + 16))
      {
        unint64_t v51 = sub_1A54F3890(v50);
        uint64_t v52 = v92;
        uint64_t v53 = v91;
        if (v54)
        {
          sub_1A54E3F20(*(void *)(v47 + 56) + 32 * v51, (uint64_t)&v102);
        }
        else
        {
          long long v102 = 0u;
          long long v103 = 0u;
        }
      }
      else
      {
        long long v102 = 0u;
        long long v103 = 0u;
        uint64_t v52 = v92;
        uint64_t v53 = v91;
      }
      swift_bridgeObjectRelease();
      v42((char *)v50, v97);
      sub_1A54F60EC((uint64_t)&v102, (uint64_t)&v98, &qword_1EB3DB9F0);
      if (v99)
      {
        sub_1A54E3F10(&v98, &v100);
        uint64_t v55 = sub_1A54EBA54((uint64_t)&v100, 0, 0, 0xD00000000000004CLL, v69 | 0x8000000000000000, 116, (void (*)(void))type metadata accessor for _SFXPCContainerRegistry, 0xD000000000000017, 0x80000001A5738BC0);
        uint64_t v45 = v109;
        uint64_t v56 = v55;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v100);
      }
      else
      {
        sub_1A54E4D44((uint64_t)&v98, &qword_1EB3DB9F0);
        uint64_t v56 = 0;
        uint64_t v45 = v109;
      }
      __swift_project_boxed_opaque_existential_1(v45, v45[3]);
      sub_1A56D61A8();
      sub_1A54F5E64(&qword_1E966C888);
      uint64_t v57 = v85;
      uint64_t v58 = v86;
      sub_1A56D5D48();
      uint64_t v59 = v77;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v83, v57, v58);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v52);
      sub_1A54E4D44((uint64_t)&v102, &qword_1EB3DB9F0);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v104);
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v61 = v74;
      v60(v74, v57, v58);
      unint64_t v62 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
      uint64_t v63 = swift_allocObject();
      uint64_t v64 = v76;
      *(void *)(v63 + 16) = v75;
      *(void *)(v63 + 24) = v64;
      uint64_t v65 = v79;
      *(void *)(v63 + 32) = v78;
      *(void *)(v63 + 40) = v65;
      uint64_t v66 = v81;
      *(void *)(v63 + 4_Block_object_dispose(&a9, 8) = v80;
      *(void *)(v63 + 56) = v66;
      *(void *)(v63 + 64) = v70;
      strcpy((char *)(v63 + 72), "SFXPCSyncBlock");
      *(unsigned char *)(v63 + 87) = -18;
      *(void *)(v63 + 8_Block_object_dispose(&a9, 8) = v56;
      v60((char *)(v63 + v62), v61, v58);
      unint64_t v67 = (double (**)@<D0>(uint64_t@<X0>, uint64_t@<X8>))&v83[*(int *)(v72 + 68)];
      char *v67 = sub_1A54F3C00;
      v67[1] = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))v63;
      (*(void (**)(uint64_t))(v71 + 32))(v82);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
    }
  }
  __break(1u);
  return result;
}

__n128 sub_1A54EFDC0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, uint64_t a10, uint64_t a11)
{
  swift_getObjectType();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CD0);
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  long long v24 = a9;
  uint64_t v25 = a10;
  uint64_t v26 = a11;
  uint64_t v27 = a2;
  unint64_t v28 = a3;
  uint64_t v29 = a1;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  sub_1A55ACAB8(a2, a3, (void (*)(uint64_t))sub_1A54F6240, (uint64_t)v21, v17, a7, a8);
  return result;
}

void sub_1A54EFEA8(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v68 = a2;
  uint64_t v59 = a6;
  uint64_t v66 = a1;
  uint64_t v67 = a4;
  uint64_t v62 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v17 = sub_1A56D6158();
  uint64_t v57 = *(void *)(v17 - 8);
  uint64_t v58 = v17;
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)&v53 - v18;
  uint64_t v63 = a8;
  uint64_t v60 = a12;
  uint64_t v61 = a13;
  uint64_t v20 = type metadata accessor for SFXPCConnection.PerformedInvocation();
  uint64_t v64 = *(void *)(v20 - 8);
  uint64_t v65 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v53 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = (id *)*v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v25, v67, a7);
  swift_retain();
  swift_bridgeObjectRetain();
  id v27 = v69;
  uint64_t v28 = sub_1A55ABE30(v68, a3, (uint64_t)v25, a5, a7, a10, a11);
  if (!v27)
  {
    uint64_t v32 = v28;
    unint64_t v33 = v29;
    char v54 = v23;
    uint64_t v55 = v19;
    id v56 = v30;
    uint64_t v34 = v65;
    id v69 = v31;
    sub_1A56D5898();
    uint64_t v35 = (void *)swift_allocBox();
    uint64_t v68 = v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v36, 1, 1, v34);
    uint64_t v37 = (void *)sub_1A56D4C68();
    uint64_t v38 = (void *)sub_1A56D4A68();
    uint64_t v39 = (void *)swift_allocObject();
    uint64_t v40 = v63;
    void v39[2] = a7;
    v39[3] = v40;
    void v39[4] = a10;
    v39[5] = a11;
    uint64_t v41 = v61;
    v39[6] = v60;
    v39[7] = v41;
    v39[8] = v35;
    void aBlock[4] = sub_1A54F62B8;
    void aBlock[5] = v39;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_0;
    unint64_t v42 = v33;
    uint64_t v43 = _Block_copy(aBlock);
    uint64_t v67 = v32;
    id v44 = v56;
    id v45 = v69;
    id v69 = v35;
    swift_retain();
    swift_release();
    objc_msgSend(v66, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v37, v38, v44, v45, 1, v43);
    _Block_release(v43);

    uint64_t v46 = v68;
    swift_beginAccess();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v46, 1, v65))
    {
      sub_1A54EA09C(v67, v42);

      uint64_t v47 = 1;
      uint64_t v48 = v62;
    }
    else
    {
      uint64_t v49 = v67;
      unint64_t v50 = v42;
      unint64_t v51 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v54, v46, v65);
      uint64_t v52 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v55, v51, v58);
      uint64_t v48 = v62;
      sub_1A55AC9E8(v52, (uint64_t)&v71, v62);
      sub_1A54EA09C(v49, v50);

      uint64_t v47 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v48, v47, 1);
    swift_release();
  }
}

uint64_t sub_1A54F03BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v21[0] = a11;
  v21[1] = a8;
  uint64_t v14 = type metadata accessor for SFXPCConnection.PerformedInvocation();
  uint64_t v22 = sub_1A56D5898();
  uint64_t v15 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v17 = (char *)v21 - v16;
  uint64_t v18 = swift_projectBox();
  sub_1A54F6308(a1, a2);
  id v19 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A55AC634(a1, a2, a5, (uint64_t)v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v17, 0, 1, v14);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 40))(v18, v17, v22);
}

uint64_t sub_1A54F0564(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1A54F0590(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void))SFXPCSyncBlock.init(from:));
}

uint64_t sub_1A54F0590(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, void))
{
  return a4(a1, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7]);
}

uint64_t sub_1A54F05C0(void *a1, void *a2)
{
  return SFXPCSyncBlock.encode(to:)(a1, a2);
}

unint64_t sub_1A54F05D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC840);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E966C838);
  uint64_t v6 = sub_1A56D5BF8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A54F60EC(v12, (uint64_t)v5, &qword_1EB3DC840);
    unint64_t result = sub_1A54F380C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1A56D4CB8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    void v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A54F07CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC848);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = sub_1A56D5BF8();
  uint64_t v9 = (void *)v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v9;
  }
  uint64_t v11 = *(int *)(v4 + 48);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v24[1] = a1;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v5 + 72);
  swift_retain();
  while (1)
  {
    sub_1A54F60EC(v14, (uint64_t)v7, &qword_1EB3DC848);
    unint64_t result = sub_1A54F380C((uint64_t)v7);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v9[6];
    uint64_t v20 = sub_1A56D4CB8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v7, v20);
    *(_OWORD *)(v9[7] + 16 * v1_Block_object_dispose(&a9, 8) = *(_OWORD *)&v7[v11];
    uint64_t v21 = v9[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v9[2] = v23;
    v14 += v15;
    if (!--v10)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A54F09BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966B088);
  uint64_t v2 = (void *)sub_1A56D5BF8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1A54F3E90(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A54F0AD0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CA0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CA8);
  uint64_t v6 = sub_1A56D5BF8();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A54F60EC(v12, (uint64_t)v5, &qword_1E9670CA0);
    unint64_t result = sub_1A54F380C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1A56D4CB8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = (void *)(v7[7] + 16 * v16);
    uint64_t v20 = *((void *)v9 + 1);
    *uint64_t v19 = *(void *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    void v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A54F0CCC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670C90);
  uint64_t v2 = sub_1A56D5BF8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A54F60EC(v6, (uint64_t)&v15, &qword_1E9670C98);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1A54F3E90(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1A54E3F10(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id _SFXPCBlockContainer.__deallocating_deinit()
{
  ObjectCFStringRef Type = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1A56D4CB8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____SFXPCBlockContainer_containerRegistry];
  if (v9)
  {
    char v10 = &v0[OBJC_IVAR____SFXPCBlockContainer_uuid];
    uint64_t v11 = sub_1A56D5478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10, v2);
    unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    BOOL v13 = (char *)swift_allocObject();
    *((void *)v13 + 2) = 0;
    *((void *)v13 + 3) = 0;
    *((void *)v13 + 4) = v9;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v13[v12], v5, v2);
    swift_retain_n();
    sub_1A54EB08C((uint64_t)v8, (uint64_t)&unk_1E9670AB0, (uint64_t)v13);
    swift_release();
    swift_release();
  }
  v15.receiver = v0;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_dealloc);
}

uint64_t sub_1A54F1108(uint64_t a1, _OWORD *a2, void *a3, uint64_t *a4, void *a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 240) = v22;
  *(void *)(v8 + 24_Block_object_dispose(&a9, 8) = v23;
  *(_OWORD *)(v8 + 224) = v21;
  *(void *)(v8 + 20_Block_object_dispose(&a9, 8) = a8;
  *(void *)(v8 + 216) = v20;
  *(void *)(v8 + 192) = a1;
  *(void *)(v8 + 200) = a7;
  *(void *)(v8 + 256) = *(void *)(v20 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  *(void *)(v8 + 272) = *(void *)(a8 - 8);
  *(void *)(v8 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  *(void *)(v8 + 28_Block_object_dispose(&a9, 8) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  uint64_t v15 = sub_1A56D5BA8();
  *(void *)(v8 + 320) = v15;
  *(void *)(v8 + 32_Block_object_dispose(&a9, 8) = *(void *)(v15 - 8);
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  *(void *)(v8 + 360) = swift_task_alloc();
  *(_OWORD *)(v8 + 36_Block_object_dispose(&a9, 8) = *a2;
  uint64_t v16 = *a4;
  *(void *)(v8 + 384) = *a3;
  *(void *)(v8 + 392) = v16;
  uint64_t v17 = *a6;
  *(void *)(v8 + 400) = *a5;
  *(void *)(v8 + 40_Block_object_dispose(&a9, 8) = v17;
  return MEMORY[0x1F4188298](sub_1A54F134C, 0, 0);
}

uint64_t sub_1A54F134C()
{
  uint64_t v32 = v0;
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 312);
  sub_1A56D4878();
  swift_allocObject();
  *(void *)(v0 + 416) = sub_1A56D4868();
  sub_1A56D5B98();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  *(void *)(v0 + 424) = v4;
  *(void *)(v0 + 432) = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  uint64_t result = v4(v3, 1, v2);
  if (result == 1)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 360);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 328);
  uint64_t v10 = *(void *)(v0 + 312);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  *(void *)(v0 + 440) = v11;
  *(void *)(v0 + 44_Block_object_dispose(&a9, 8) = (v9 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v11(v7, v10, v8);
  uint64_t v28 = v4;
  if (v6)
  {
    uint64_t v12 = *(void *)(v0 + 384);
    *((void *)&v31 + 1) = swift_getObjectType();
    *(void *)&long long v30 = v12;
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  uint64_t v13 = *(void *)(v0 + 360);
  uint64_t v14 = *(void *)(v0 + 320);
  uint64_t v15 = *(void *)(v0 + 304);
  swift_unknownObjectRetain();
  uint64_t v16 = (void (*)(uint64_t, void))sub_1A56D4858();
  sub_1A553763C((uint64_t)&v30, v13);
  v16(v0 + 64, 0);
  sub_1A56D5B98();
  uint64_t result = v28(v15, 1, v14);
  if (result == 1) {
    goto LABEL_13;
  }
  uint64_t v17 = *(void *)(v0 + 392);
  v11(*(void *)(v0 + 352), *(void *)(v0 + 304), *(void *)(v0 + 320));
  if (v17)
  {
    uint64_t v18 = *(void *)(v0 + 392);
    *((void *)&v31 + 1) = swift_getObjectType();
    *(void *)&long long v30 = v18;
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  uint64_t v19 = *(void *)(v0 + 352);
  swift_unknownObjectRetain();
  uint64_t v20 = (void (*)(uint64_t, void))sub_1A56D4858();
  sub_1A553763C((uint64_t)&v30, v19);
  v20(v0 + 96, 0);
  sub_1A56D4848();
  uint64_t v21 = *(void *)(v0 + 200);
  long long v22 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 208);
  long long v23 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 32) = v22;
  *(_OWORD *)(v0 + 4_Block_object_dispose(&a9, 8) = v23;
  uint64_t v24 = (void *)(v21 + *(int *)(type metadata accessor for SFXPCBlock() + 68));
  unint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))(*v24 + *(int *)*v24);
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_1A54F1750;
  uint64_t v26 = *(void *)(v0 + 280);
  uint64_t v27 = *(void *)(v0 + 264);
  return v29(v27, v26);
}

uint64_t sub_1A54F1750()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A54F1C30;
  }
  else {
    uint64_t v2 = sub_1A54F1864;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A54F1864()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 296);
  sub_1A56D48B8();
  swift_allocObject();
  sub_1A56D48A8();
  sub_1A56D5B98();
  uint64_t result = v1(v3, 1, v2);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 424);
  uint64_t v6 = *(void **)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 288);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 440))(v7, *(void *)(v0 + 296), v8);
  uint64_t v36 = type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  v35[0] = v6;
  id v10 = v6;
  uint64_t v11 = (void (*)(uint64_t, void))sub_1A56D4898();
  sub_1A553763C((uint64_t)v35, v7);
  v11(v0 + 128, 0);
  sub_1A56D5B98();
  uint64_t result = v5(v9, 1, v8);
  if (result == 1)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(v0 + 464);
  uint64_t v13 = *(void **)(v0 + 408);
  uint64_t v14 = *(void *)(v0 + 336);
  (*(void (**)(uint64_t, void, void))(v0 + 440))(v14, *(void *)(v0 + 288), *(void *)(v0 + 320));
  uint64_t v36 = type metadata accessor for _SFXPCBlockContainer();
  v35[0] = v13;
  id v15 = v13;
  uint64_t v16 = (void (*)(uint64_t, void))sub_1A56D4898();
  sub_1A553763C((uint64_t)v35, v14);
  v16(v0 + 160, 0);
  uint64_t v17 = sub_1A56D4888();
  if (v12)
  {
    uint64_t v20 = *(void *)(v0 + 272);
    uint64_t v19 = *(void *)(v0 + 280);
    uint64_t v22 = *(void *)(v0 + 256);
    uint64_t v21 = *(void *)(v0 + 264);
    uint64_t v24 = *(void *)(v0 + 208);
    uint64_t v23 = *(void *)(v0 + 216);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v24);
  }
  else
  {
    uint64_t v26 = v17;
    uint64_t v27 = v18;
    uint64_t v28 = *(void *)(v0 + 272);
    uint64_t v29 = *(void *)(v0 + 256);
    uint64_t v30 = *(void *)(v0 + 264);
    uint64_t v31 = *(void *)(v0 + 216);
    uint64_t v33 = *(void *)(v0 + 208);
    uint64_t v34 = *(void *)(v0 + 280);
    uint64_t v32 = *(uint64_t **)(v0 + 192);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v34, v33);
    uint64_t *v32 = v26;
    v32[1] = v27;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1A54F1C30()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  uint64_t v3 = v0[26];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A54F1D40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, id *a4@<X3>, id *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t *a8@<X8>, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v80 = a6;
  long long v98 = a4;
  uint64_t v70 = a8;
  uint64_t v82 = a7;
  uint64_t v73 = *(void *)(a7 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  uint64_t v81 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = v17;
  uint64_t v79 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v90 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v76 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v78 = (char *)&v69 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v87 = (char *)&v69 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v69 - v26;
  uint64_t v28 = sub_1A56D5BA8();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v72 = (char *)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v75 = (char *)&v69 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v83 = (char *)&v69 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v37 = (char *)&v69 - v36;
  uint64_t v38 = *a1;
  uint64_t v84 = a1[1];
  uint64_t v85 = v38;
  uint64_t v39 = *a2;
  uint64_t v40 = *a3;
  id v74 = *v98;
  id v71 = *a5;
  sub_1A56D4878();
  swift_allocObject();
  uint64_t v41 = sub_1A56D4868();
  uint64_t v77 = "rProtocol>\"24@\"_SFXPCError\"32";
  sub_1A56D5B98();
  uint64_t v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  uint64_t result = v92(v27, 1, v28);
  if (result == 1)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v43 = v28;
  uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  uint64_t v89 = v29 + 32;
  v88(v37, v27, v28);
  if (v39)
  {
    *((void *)&v94 + 1) = swift_getObjectType();
    *(void *)&long long v93 = v39;
  }
  else
  {
    long long v93 = 0u;
    long long v94 = 0u;
  }
  swift_unknownObjectRetain();
  long long v98 = (id *)v41;
  id v44 = (void (*)(unsigned char *, void))sub_1A56D4858();
  sub_1A553763C((uint64_t)&v93, (uint64_t)v37);
  v44(v97, 0);
  id v45 = v87;
  sub_1A56D5B98();
  uint64_t result = v92(v45, 1, v28);
  if (result == 1) {
    goto LABEL_15;
  }
  uint64_t v46 = (uint64_t)v83;
  v88(v83, v45, v28);
  if (v40)
  {
    *((void *)&v94 + 1) = swift_getObjectType();
    *(void *)&long long v93 = v40;
  }
  else
  {
    long long v93 = 0u;
    long long v94 = 0u;
  }
  swift_unknownObjectRetain();
  uint64_t v47 = (void (*)(unsigned char *, void))sub_1A56D4858();
  sub_1A553763C((uint64_t)&v93, v46);
  v47(v97, 0);
  uint64_t v49 = v90;
  uint64_t v48 = v91;
  uint64_t v50 = v86;
  sub_1A56D4848();
  if (v50) {
    return swift_release();
  }
  *(void *)&long long v93 = v48;
  *((void *)&v93 + 1) = v82;
  long long v94 = a9;
  uint64_t v95 = a10;
  uint64_t v96 = a11;
  uint64_t v51 = type metadata accessor for SFXPCSyncBlock();
  (*(void (**)(char *))(v80 + *(int *)(v51 + 68)))(v49);
  uint64_t v86 = a11;
  sub_1A56D48B8();
  swift_allocObject();
  uint64_t v52 = sub_1A56D48A8();
  uint64_t v53 = v78;
  sub_1A56D5B98();
  char v54 = v92;
  uint64_t result = v92(v53, 1, v28);
  uint64_t v87 = (char *)(v29 + 48);
  if (result == 1) {
    goto LABEL_16;
  }
  uint64_t v55 = (uint64_t)v75;
  id v56 = v88;
  v88(v75, v53, v43);
  *((void *)&v94 + 1) = type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  *(void *)&long long v93 = v74;
  id v57 = v74;
  uint64_t v85 = v52;
  uint64_t v58 = (void (*)(unsigned char *, void))sub_1A56D4898();
  sub_1A553763C((uint64_t)&v93, v55);
  v58(v97, 0);
  uint64_t v59 = v76;
  sub_1A56D5B98();
  uint64_t result = v54(v59, 1, v43);
  if (result != 1)
  {
    uint64_t v60 = (uint64_t)v72;
    v56(v72, v59, v43);
    *((void *)&v94 + 1) = type metadata accessor for _SFXPCBlockContainer();
    *(void *)&long long v93 = v71;
    id v61 = v71;
    uint64_t v62 = (void (*)(unsigned char *, void))sub_1A56D4898();
    sub_1A553763C((uint64_t)&v93, v60);
    v62(v97, 0);
    uint64_t v63 = v81;
    uint64_t v64 = v82;
    uint64_t v65 = sub_1A56D4888();
    uint64_t v67 = v66;
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v63, v64);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v90, v91);
    uint64_t v68 = v70;
    uint64_t *v70 = v65;
    v68[1] = v67;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

void _SFXPCBlockContainer.invoke(_:parametersData:parametersAsyncSequenceContainer:parametersBlocksContainer:sync:completion:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, void (*a7)(uint64_t, unint64_t, void *, void *, void), uint64_t a8)
{
  void (*v47)(uint64_t *__return_ptr, void *, uint64_t *, uint64_t *, id *, void **);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  void *v62;
  char *v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  void (*v68)(uint64_t, unint64_t, void *, void *, void);
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  id v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, unint64_t, void *, void *, void);
  Class v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t ObjectType;
  id v94;
  id v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void v107[3];
  objc_super v108;

  uint64_t v9 = v8;
  uint64_t v96 = a8;
  uint64_t v89 = (void (*)(uint64_t, unint64_t, void *, void *, void))a7;
  LODWORD(v94) = a6;
  uint64_t v87 = a5;
  uint64_t v88 = a4;
  uint64_t v86 = a3;
  uint64_t v85 = a2;
  uint64_t v95 = a1;
  ObjectCFStringRef Type = swift_getObjectType();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v99 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A56D4CB8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  long long v98 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v82 - v16;
  uint64_t v18 = *(void *)&v9[OBJC_IVAR____SFXPCBlockContainer_name];
  uint64_t v19 = *(void *)&v9[OBJC_IVAR____SFXPCBlockContainer_name + 8];
  uint64_t v20 = *(void *)&v9[OBJC_IVAR____SFXPCBlockContainer_containerRegistry];
  uint64_t v90 = (Class)type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  id v21 = objc_allocWithZone(v90);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v22 = (char *)v21;
  sub_1A56D4CA8();
  uint64_t v92 = v13;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  long long v100 = v12;
  v23(&v22[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v17, v12);
  uint64_t v24 = &v22[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  uint64_t v91 = v18;
  *(void *)uint64_t v24 = v18;
  *((void *)v24 + 1) = v19;
  swift_bridgeObjectRetain();
  *(void *)&v22[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A54F05D8(MEMORY[0x1E4FBC860]);
  *(void *)&v22[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = v20;
  swift_retain();

  uint64_t v97 = v9;
  uint64_t v84 = v14;
  uint64_t v83 = v13 + 16;
  uint64_t v82 = (void (*)(char *, uint64_t, uint64_t))v23;
  if (v20)
  {
    uint64_t v25 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v99, 1, 1, v25);
    uint64_t v26 = v98;
    uint64_t v27 = v100;
    v23(v98, v17, v100);
    uint64_t v28 = v92;
    unint64_t v29 = (*(unsigned __int8 *)(v92 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    unint64_t v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = (char *)swift_allocObject();
    *((void *)v31 + 2) = 0;
    *((void *)v31 + 3) = 0;
    *((void *)v31 + 4) = v20;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v31[v29], v26, v27);
    uint64_t v32 = (uint64_t *)&v31[v30];
    uint64_t v33 = v91;
    uint64_t *v32 = v91;
    v32[1] = v19;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v34 = v99;
    sub_1A54EB08C(v99, (uint64_t)&unk_1E9670AD8, (uint64_t)v31);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v27);
    uint64_t v35 = v34;
    uint64_t v36 = (uint64_t)v95;
    char v37 = (char)v94;
    uint64_t v38 = (objc_class *)ObjectType;
  }
  else
  {
    uint64_t v28 = v92;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v17, v100);
    swift_bridgeObjectRelease();
    uint64_t v35 = v99;
    uint64_t v36 = (uint64_t)v95;
    char v37 = (char)v94;
    uint64_t v38 = (objc_class *)ObjectType;
    uint64_t v33 = v91;
  }
  v108.receiver = v22;
  v108.super_class = v90;
  id v39 = objc_msgSendSuper2(&v108, sel_init, v82, v83);
  swift_release();
  id v40 = objc_allocWithZone(v38);
  swift_bridgeObjectRetain();
  swift_retain();
  id v41 = sub_1A54F443C(v33, v19, v20);
  swift_release();
  if (v37)
  {
    unint64_t v42 = v41;
    uint64_t v43 = &v97[OBJC_IVAR____SFXPCBlockContainer_registeredSyncBlocks];
    swift_beginAccess();
    uint64_t v44 = *(void *)v43;
    if (*(void *)(v44 + 16) && (unint64_t v45 = sub_1A54F380C(v36), (v46 & 1) != 0))
    {
      uint64_t v47 = *(void (**)(uint64_t *__return_ptr, void *, uint64_t *, uint64_t *, id *, void **))(*(void *)(v44 + 56) + 16 * v45);
      swift_retain();
    }
    else
    {
      uint64_t v47 = 0;
    }
    uint64_t v68 = v89;
    swift_endAccess();
    strcpy((char *)v107, "no body for ");
    BYTE5(v107[1]) = 0;
    HIWORD(v107[1]) = -5120;
    sub_1A54F5E64(&qword_1E9670AD0);
    sub_1A56D5E78();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    uint64_t v69 = v107[1];
    if (v47)
    {
      swift_bridgeObjectRelease();
      v107[0] = v85;
      v107[1] = v86;
      uint64_t v105 = v87;
      uint64_t v106 = v88;
      long long v103 = v42;
      long long v104 = v39;
      v47(&v101, v107, &v106, &v105, &v104, &v103);
      uint64_t v70 = v39;
      sub_1A54F5EA8((uint64_t)v47);
      uint64_t v78 = v101;
      uint64_t v79 = v102;
      sub_1A54E9E98(v101, v102);
      uint64_t v80 = v70;
      uint64_t v81 = v42;
      v68(v78, v79, v70, v42, 0);

      sub_1A54EA09C(v78, v79);
      sub_1A54EA09C(v78, v79);
    }
    else
    {
      id v71 = v107[0];
      sub_1A54F38F4();
      uint64_t v72 = v39;
      uint64_t v73 = (void *)swift_allocError();
      *(void *)id v74 = v71;
      *(void *)(v74 + _Block_object_dispose(&a9, 8) = v69;
      *(void *)(v74 + 16) = 0xD00000000000004CLL;
      *(void *)(v74 + 24) = 0x80000001A5738900;
      *(void *)(v74 + 32) = 203;
      *(_OWORD *)(v74 + 40) = 0u;
      *(_OWORD *)(v74 + 56) = 0u;
      *(void *)(v74 + 72) = 0;
      *(void *)(v74 + 80) = 0x2000000000000000;
      *(void *)(v74 + 8_Block_object_dispose(&a9, 8) = 0;
      *(void *)(v74 + 96) = 0;
      swift_willThrow();

      uint64_t v75 = objc_allocWithZone((Class)type metadata accessor for _SFXPCError());
      uint64_t v76 = v73;
      uint64_t v77 = sub_1A5698FB8(v73);

      v68(0, 0xF000000000000000, 0, 0, v77);
    }
  }
  else
  {
    uint64_t v48 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v35, 1, 1, v48);
    uint64_t v95 = v41;
    v82(v98, v36, v100);
    uint64_t v49 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    long long v94 = v39;
    uint64_t v50 = (v84 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v51 = (v50 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    char v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v55 = (char *)swift_allocObject();
    *((void *)v55 + 2) = 0;
    *((void *)v55 + 3) = 0;
    id v57 = v97;
    id v56 = v98;
    *((void *)v55 + 4) = v97;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v55[v49], v56, v100);
    uint64_t v58 = (uint64_t *)&v55[v50];
    uint64_t v59 = v85;
    uint64_t v60 = v86;
    *uint64_t v58 = v85;
    v58[1] = v60;
    *(void *)&v55[v51] = v88;
    *(void *)&v55[v52] = v87;
    id v61 = v94;
    *(void *)&v55[v53] = v94;
    uint64_t v62 = v95;
    *(void *)&v55[v54] = v95;
    uint64_t v63 = &v55[(v54 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v64 = v96;
    *(void *)uint64_t v63 = v89;
    *((void *)v63 + 1) = v64;
    uint64_t v65 = v61;
    uint64_t v66 = v62;
    uint64_t v67 = v57;
    sub_1A54E9E98(v59, v60);
    swift_unknownObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1A54F3458(v99, (uint64_t)&unk_1E9670AC8, (uint64_t)v55);

    swift_release();
  }
}

uint64_t sub_1A54F2E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 176) = v12;
  *(_OWORD *)(v8 + 144) = v10;
  *(_OWORD *)(v8 + 160) = v11;
  *(void *)(v8 + 12_Block_object_dispose(&a9, 8) = a7;
  *(void *)(v8 + 136) = a8;
  *(void *)(v8 + 112) = a5;
  *(void *)(v8 + 120) = a6;
  *(void *)(v8 + 104) = a4;
  return MEMORY[0x1F4188298](sub_1A54F2EA0, 0, 0);
}

uint64_t sub_1A54F2EA0()
{
  uint64_t v20 = v0;
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 104) + OBJC_IVAR____SFXPCBlockContainer_registeredAsyncBlocks);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1A54F380C(*(void *)(v0 + 112)), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(v2 + 56) + 16 * v3;
    uint64_t v7 = *(int **)v5;
    uint64_t v6 = *(void *)(v5 + 8);
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *(void *)(v0 + 184) = v7;
  *(void *)(v0 + 192) = v6;
  swift_endAccess();
  strcpy((char *)v19, "no body for ");
  BYTE5(v19[1]) = 0;
  HIWORD(v19[1]) = -5120;
  sub_1A56D4CB8();
  sub_1A54F5E64(&qword_1E9670AD0);
  sub_1A56D5E78();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  uint64_t v8 = v19[1];
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 128);
    long long v17 = *(_OWORD *)(v0 + 152);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 40) = v12;
    *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = v11;
    *(void *)(v0 + 72) = v9;
    *(void *)(v0 + 96) = v10;
    *(_OWORD *)(v0 + 80) = v17;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1A54F3184;
    return v18(v0 + 56, v0 + 40, v0 + 72, v0 + 96, v0 + 80, v0 + 88);
  }
  else
  {
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v15 = v19[0];
    *(void *)(v15 + _Block_object_dispose(&a9, 8) = v8;
    *(void *)(v15 + 16) = 0xD00000000000004CLL;
    *(void *)(v15 + 24) = 0x80000001A5738900;
    *(void *)(v15 + 32) = 208;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    *(void *)(v15 + 72) = 0;
    *(void *)(v15 + 80) = 0x2000000000000000;
    *(void *)(v15 + 8_Block_object_dispose(&a9, 8) = 0;
    *(void *)(v15 + 96) = 0;
    swift_willThrow();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_1A54F3184()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 20_Block_object_dispose(&a9, 8) = v0;
  swift_task_dealloc();
  sub_1A54F5EA8(*(void *)(v2 + 184));
  if (v0)
  {
    unint64_t v3 = sub_1A54F338C;
  }
  else
  {
    *(_OWORD *)(v2 + 216) = *(_OWORD *)(v2 + 56);
    unint64_t v3 = sub_1A54F32D4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A54F32D4()
{
  uint64_t v2 = v0[27];
  unint64_t v1 = v0[28];
  unint64_t v3 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, void))v0[21];
  uint64_t v5 = v0[19];
  uint64_t v4 = v0[20];
  sub_1A54E9E98(v2, v1);
  v3(v2, v1, v5, v4, 0);
  sub_1A54EA09C(v2, v1);
  sub_1A54EA09C(v2, v1);
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1A54F338C()
{
  unint64_t v1 = (void *)v0[26];
  uint64_t v2 = (void (*)(void, unint64_t, void, void, id))v0[21];
  id v3 = objc_allocWithZone((Class)type metadata accessor for _SFXPCError());
  id v4 = v1;
  id v5 = sub_1A5698FB8(v1);

  v2(0, 0xF000000000000000, 0, 0, v5);
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1A54F3458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A56D5478();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A56D5468();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1A54E4D44(a1, &qword_1EB3DB820);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A56D53F8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

id _SFXPCBlockContainer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void _SFXPCBlockContainer.init()()
{
}

unint64_t sub_1A54F380C(uint64_t a1)
{
  sub_1A56D4CB8();
  sub_1A54F5E64(&qword_1E966C7E0);
  uint64_t v2 = sub_1A56D4FE8();

  return sub_1A54F3F4C(a1, v2);
}

unint64_t sub_1A54F3890(uint64_t a1)
{
  sub_1A56D5BA8();
  uint64_t v2 = sub_1A56D4FE8();

  return sub_1A54F40F8(a1, v2);
}

unint64_t sub_1A54F38F4()
{
  unint64_t result = qword_1E9670A98;
  if (!qword_1E9670A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9670A98);
  }
  return result;
}

unint64_t sub_1A54F3948()
{
  unint64_t result = qword_1E96703C0;
  if (!qword_1E96703C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C528);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96703C0);
  }
  return result;
}

uint64_t sub_1A54F39A8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = *(void *)(sub_1A56D4CB8() - 8);
  uint64_t v8 = v2[8];
  uint64_t v9 = v2[9];
  uint64_t v10 = v2[10];
  uint64_t v11 = v2[11];
  uint64_t v12 = (uint64_t)v2 + ((*(unsigned __int8 *)(v7 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *uint64_t v13 = v3;
  v13[1] = sub_1A54E83BC;
  return sub_1A54EDB3C(a1, a2, v8, v9, v10, v11, v12, v6);
}

uint64_t type metadata accessor for SFXPCSyncBlock()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for SFXPCSyncBlock.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

double sub_1A54F3C00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  long long v11 = *(_OWORD *)(v2 + 32);
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = *(void *)(v2 + 56);
  uint64_t v9 = *(void *)(sub_1A56D4CB8() - 8);
  *(void *)&double result = sub_1A54EFDC0(a1, *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), v2+ ((*(unsigned __int8 *)(v9 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v5, v6, a2, v11, v7, v8).n128_u64[0];
  return result;
}

uint64_t sub_1A54F3CC0()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A54F3D94(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D4CB8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A54E83BC;
  return sub_1A558594C(a1, v5, v6, v7, v8);
}

unint64_t sub_1A54F3E90(uint64_t a1, uint64_t a2)
{
  sub_1A56D60B8();
  sub_1A56D5188();
  uint64_t v4 = sub_1A56D60E8();

  return sub_1A54F4290(a1, a2, v4);
}

unint64_t sub_1A54F3F08(uint64_t a1)
{
  uint64_t v2 = sub_1A56D59D8();

  return sub_1A54F4374(a1, v2);
}

unint64_t sub_1A54F3F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1A54F5E64(&qword_1E966C080);
      char v15 = sub_1A56D5058();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1A54F40F8(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1A56D5BA8();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    char v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1A56D5058();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1A54F4290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A56D5F28() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A56D5F28() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1A54F4374(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1A54F5304(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1A6269C50](v9, a1);
      sub_1A54F5360((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

id sub_1A54F443C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  ObjectCFStringRef Type = (objc_class *)swift_getObjectType();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v32 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A56D4CB8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v28 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v27 - v14;
  uint64_t v16 = v4;
  sub_1A56D4CA8();
  char v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v17(&v16[OBJC_IVAR____SFXPCBlockContainer_uuid], v15, v10);
  uint64_t v18 = &v16[OBJC_IVAR____SFXPCBlockContainer_name];
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  *(void *)uint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  swift_bridgeObjectRetain();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  *(void *)&v16[OBJC_IVAR____SFXPCBlockContainer_registeredAsyncBlocks] = sub_1A54F07CC(MEMORY[0x1E4FBC860], &qword_1E9670CC0);
  *(void *)&v16[OBJC_IVAR____SFXPCBlockContainer_registeredSyncBlocks] = sub_1A54F07CC(v19, &qword_1E9670CB8);
  *(void *)&v16[OBJC_IVAR____SFXPCBlockContainer_containerRegistry] = a3;
  swift_retain();

  if (a3)
  {
    uint64_t v20 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v32, 1, 1, v20);
    uint64_t v21 = v28;
    v17(v28, v15, v10);
    unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = 0;
    *((void *)v23 + 3) = 0;
    *((void *)v23 + 4) = a3;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v23[v22], v21, v10);
    uint64_t v24 = &v23[(v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v25 = v30;
    *(void *)uint64_t v24 = v29;
    *((void *)v24 + 1) = v25;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1A54EB08C(v32, (uint64_t)&unk_1E9670CB0, (uint64_t)v23);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    swift_bridgeObjectRelease();
  }
  v33.receiver = v16;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

uint64_t sub_1A54F479C()
{
  uint64_t v2 = *(void *)(sub_1A56D4CB8() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)(v0 + 32);
  uint64_t v10 = v0 + v3;
  uint64_t v11 = *(void *)(v0 + v4);
  uint64_t v12 = *(void *)(v0 + v4 + 8);
  uint64_t v13 = *(void *)(v0 + v5);
  uint64_t v14 = *(void *)(v0 + v6);
  uint64_t v15 = *(void *)(v0 + v7);
  uint64_t v16 = *(void *)(v0 + v8);
  uint64_t v17 = swift_task_alloc();
  long long v18 = *(_OWORD *)(v0 + v9);
  *(void *)(v1 + 16) = v17;
  *(void *)uint64_t v17 = v1;
  *(void *)(v17 + _Block_object_dispose(&a9, 8) = sub_1A54E8628;
  *(_OWORD *)(v17 + 16_Block_object_dispose(&a9, 8) = v18;
  *(void *)(v17 + 152) = v15;
  *(void *)(v17 + 160) = v16;
  *(void *)(v17 + 136) = v13;
  *(void *)(v17 + 144) = v14;
  *(void *)(v17 + 120) = v11;
  *(void *)(v17 + 12_Block_object_dispose(&a9, 8) = v12;
  *(void *)(v17 + 104) = v20;
  *(void *)(v17 + 112) = v10;
  return MEMORY[0x1F4188298](sub_1A54F2EA0, 0, 0);
}

uint64_t sub_1A54F492C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D4CB8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1A54E8628;
  return sub_1A5585564(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1A54F4A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1A54F4A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_1A54F4AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t sub_1A54F4ABC()
{
  uint64_t result = sub_1A56D4CB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A54F4B54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1A56D4CB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 68);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1A54F4C28(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_1A54F4CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 68);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_1A54F4D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 68);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A54F4DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 68)) = *(_OWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_1A54F4E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 68)) = *(_OWORD *)(a2 + *(int *)(a3 + 68));
  swift_release();
  return a1;
}

uint64_t sub_1A54F4EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A54F4ED4);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 68));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1A54F4F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A54F4FAC);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A56D4CB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 68)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A54F506C()
{
  return type metadata accessor for _SFXPCBlockContainer();
}

uint64_t type metadata accessor for _SFXPCBlockContainer()
{
  uint64_t result = qword_1EB3DC958;
  if (!qword_1EB3DC958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A54F50C0()
{
  uint64_t result = sub_1A56D4CB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _SFXPCBlockContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SFXPCBlockContainer);
}

uint64_t sub_1A54F518C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

unsigned char *sub_1A54F5198(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A54F5234);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54F525C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A54F5278()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A54F5294()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A54F52B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A54F52CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A54F52E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A54F5304(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1A54F5360(uint64_t a1)
{
  return a1;
}

uint64_t sub_1A54F53B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, char *a7, void (**a8)(const void *, void *, id, id, void))
{
  void (*v42)(void *__return_ptr, void *, uint64_t *, uint64_t *, id *, id *);
  uint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  void *v56;
  void (**v57)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  void (*v58)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  id v59;
  id v60;
  char *v61;
  void (**v62)(const void *, void *, id, id, void);
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  id v73;
  void *v74;
  void (**v76)(const void *, void *, id, id, void);
  void (*v77)(char *, id, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  Class v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void v93[2];
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void v98[3];
  objc_super v99;

  LODWORD(v86) = a6;
  uint64_t v82 = a5;
  uint64_t v90 = a4;
  uint64_t v81 = a3;
  uint64_t v80 = a2;
  uint64_t v87 = (id)a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v92 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A56D4CB8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v89 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v76 - v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a8;
  uint64_t v20 = *(void *)&a7[OBJC_IVAR____SFXPCBlockContainer_name];
  uint64_t v19 = *(void *)&a7[OBJC_IVAR____SFXPCBlockContainer_name + 8];
  uint64_t v91 = a7;
  uint64_t v21 = *(void *)&a7[OBJC_IVAR____SFXPCBlockContainer_containerRegistry];
  uint64_t v83 = (Class)type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  id v22 = objc_allocWithZone(v83);
  uint64_t v76 = a8;
  _Block_copy(a8);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v23 = (char *)v22;
  sub_1A56D4CA8();
  uint64_t v85 = v13;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v24(&v23[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v17, v12);
  uint64_t v25 = &v23[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  uint64_t v84 = v20;
  *(void *)uint64_t v25 = v20;
  *((void *)v25 + 1) = v19;
  swift_bridgeObjectRetain();
  *(void *)&v23[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A54F05D8(MEMORY[0x1E4FBC860]);
  *(void *)&v23[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = v21;
  swift_retain();

  uint64_t v88 = v18;
  uint64_t v79 = v14;
  uint64_t v78 = v13 + 16;
  uint64_t v77 = (void (*)(char *, id, uint64_t))v24;
  if (v21)
  {
    uint64_t v26 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v92, 1, 1, v26);
    uint64_t v27 = v89;
    v24(v89, v17, v12);
    uint64_t v28 = v85;
    unint64_t v29 = (*(unsigned __int8 *)(v85 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    unint64_t v30 = (v14 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = (char *)swift_allocObject();
    *((void *)v31 + 2) = 0;
    *((void *)v31 + 3) = 0;
    *((void *)v31 + 4) = v21;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v31[v29], v27, v12);
    uint64_t v32 = (uint64_t *)&v31[v30];
    uint64_t v33 = v84;
    uint64_t *v32 = v84;
    v32[1] = v19;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v34 = v92;
    sub_1A54EB08C(v92, (uint64_t)&unk_1E9670C68, (uint64_t)v31);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v12);
    char v35 = (char)v86;
  }
  else
  {
    uint64_t v28 = v85;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v17, v12);
    swift_bridgeObjectRelease();
    uint64_t v34 = v92;
    char v35 = (char)v86;
    uint64_t v33 = v84;
  }
  v99.receiver = v23;
  v99.super_class = v83;
  id v36 = objc_msgSendSuper2(&v99, sel_init);
  swift_release();
  objc_allocWithZone((Class)type metadata accessor for _SFXPCBlockContainer());
  swift_bridgeObjectRetain();
  swift_retain();
  id v37 = sub_1A54F443C(v33, v19, v21);
  swift_release();
  if (v35)
  {
    uint64_t v38 = &v91[OBJC_IVAR____SFXPCBlockContainer_registeredSyncBlocks];
    swift_beginAccess();
    uint64_t v39 = *(void *)v38;
    if (*(void *)(v39 + 16))
    {
      unint64_t v40 = sub_1A54F380C((uint64_t)v87);
      if (v41)
      {
        unint64_t v42 = *(void (**)(void *__return_ptr, void *, uint64_t *, uint64_t *, id *, id *))(*(void *)(v39 + 56) + 16 * v40);
        swift_retain();
      }
      else
      {
        unint64_t v42 = 0;
      }
      uint64_t v62 = v76;
    }
    else
    {
      unint64_t v42 = 0;
      uint64_t v62 = v76;
    }
    swift_endAccess();
    strcpy((char *)v98, "no body for ");
    BYTE5(v98[1]) = 0;
    HIWORD(v98[1]) = -5120;
    sub_1A54F5E64(&qword_1E9670AD0);
    sub_1A56D5E78();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    uint64_t v63 = v98[1];
    if (v42)
    {
      swift_bridgeObjectRelease();
      v98[0] = v80;
      v98[1] = v81;
      uint64_t v96 = v82;
      uint64_t v97 = v90;
      long long v94 = v37;
      uint64_t v95 = v36;
      v42(v93, v98, &v97, &v96, &v95, &v94);
      sub_1A54F5EA8((uint64_t)v42);
      uint64_t v70 = v93[0];
      id v71 = v93[1];
      uint64_t v72 = v36;
      uint64_t v73 = v37;
      sub_1A54E9E98(v70, v71);
      id v74 = (void *)sub_1A56D4A68();
      v62[2](v62, v74, v72, v73, 0);

      sub_1A54EA09C(v70, v71);
      sub_1A54EA09C(v70, v71);
    }
    else
    {
      uint64_t v64 = v98[0];
      sub_1A54F38F4();
      uint64_t v65 = (void *)swift_allocError();
      *(void *)uint64_t v66 = v64;
      *(void *)(v66 + _Block_object_dispose(&a9, 8) = v63;
      *(void *)(v66 + 16) = 0xD00000000000004CLL;
      *(void *)(v66 + 24) = 0x80000001A5738900;
      *(void *)(v66 + 32) = 203;
      *(_OWORD *)(v66 + 40) = 0u;
      *(_OWORD *)(v66 + 56) = 0u;
      *(void *)(v66 + 72) = 0;
      *(void *)(v66 + 80) = 0x2000000000000000;
      *(void *)(v66 + 8_Block_object_dispose(&a9, 8) = 0;
      *(void *)(v66 + 96) = 0;
      swift_willThrow();

      uint64_t v67 = objc_allocWithZone((Class)type metadata accessor for _SFXPCError());
      uint64_t v68 = v65;
      uint64_t v69 = sub_1A5698FB8(v65);

      ((void (**)(const void *, void *, id, id, id))v62)[2](v62, 0, 0, 0, v69);
    }
  }
  else
  {
    uint64_t v43 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v34, 1, 1, v43);
    uint64_t v44 = v89;
    v77(v89, v87, v12);
    unint64_t v45 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    char v46 = (v79 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v86 = v37;
    uint64_t v87 = v36;
    uint64_t v49 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v85 = v12;
    uint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v51 = (char *)swift_allocObject();
    *((void *)v51 + 2) = 0;
    *((void *)v51 + 3) = 0;
    *((void *)v51 + 4) = v91;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v51[v45], v44, v85);
    uint64_t v52 = (uint64_t *)&v51[v46];
    uint64_t v53 = v80;
    char v54 = v81;
    *uint64_t v52 = v80;
    v52[1] = v54;
    *(void *)&v51[v47] = v90;
    *(void *)&v51[v48] = v82;
    id v56 = v86;
    uint64_t v55 = v87;
    *(void *)&v51[v49] = v87;
    *(void *)&v51[v50] = v56;
    id v57 = (void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))&v51[(v50 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v58 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))v88;
    *id v57 = sub_1A54F5CE4;
    v57[1] = v58;
    uint64_t v59 = v55;
    uint64_t v60 = v56;
    id v61 = v91;
    sub_1A54E9E98(v53, v54);
    swift_unknownObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1A54F3458(v92, (uint64_t)&unk_1E9670C60, (uint64_t)v51);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A54F5CAC()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1A54F5CE4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A5693614(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (((((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_1A54EA09C(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A54F5E4C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1A54F5E64(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1A56D4CB8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A54F5EA8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A54F5FB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D4CB8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1A54E8628;
  return sub_1A5585370(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1A54F60EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A54F6150()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A54F6188(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A54E8628;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E96743F0 + dword_1E96743F0);
  return v6(a1, v4);
}

void sub_1A54F6240(id *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A54EFEA8(a1, *(void *)(v2 + 64), *(void **)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 16), *(void *)(v2 + 24), a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1A54F6280()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A54F62B8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A54F03BC(a1, a2, a3, a4, a5, v5[8], v5[2], v5[3], v5[4], v5[5], v5[6]);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1A54F6308(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A54E9E98(a1, a2);
  }
  return a1;
}

uint64_t sub_1A54F631C()
{
  return objectdestroy_61Tm((uint64_t (*)(void, _OWORD *))type metadata accessor for SFXPCSyncBlock);
}

uint64_t sub_1A54F6334@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, id *a4@<X3>, id *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9 = v6[3];
  uint64_t v10 = v6[4];
  uint64_t v11 = v6[5];
  uint64_t v12 = v6[6];
  uint64_t v13 = v6[7];
  uint64_t v14 = *(void *)(type metadata accessor for SFXPCSyncBlock() - 8);
  *(void *)&long long v16 = v10;
  *((void *)&v16 + 1) = v11;
  return sub_1A54F1D40(a1, a2, a3, a4, a5, (uint64_t)v6 + ((*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v9, a6, v16, v12, v13);
}

uint64_t sub_1A54F6404()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_1A56D4CB8();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

__n128 sub_1A54F6568(void **a1, unint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  long long v11 = *(_OWORD *)(v2 + 40);
  long long v12 = *(_OWORD *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 56);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v8 = (*(void *)(*(void *)(v5 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_1A56D4CB8() - 8);
  sub_1A54EE098(a1, a2, *(void **)(v2 + 64), *(void **)(v2 + 72), v2 + v7, *(void *)(v2 + v8), v2 + ((v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v5, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v6);
  return result;
}

uint64_t sub_1A54F668C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v1 = sub_1A56D5428();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1A54F673C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v11 = *(void *)(sub_1A56D5428() - 8);
  return sub_1A54EE414(a1, a2, a3, a4, a5, v5 + ((*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)));
}

uint64_t sub_1A54F6828()
{
  return objectdestroy_61Tm((uint64_t (*)(void, _OWORD *))type metadata accessor for SFXPCBlock);
}

uint64_t objectdestroy_61Tm(uint64_t (*a1)(void, _OWORD *))
{
  long long v2 = v1[2];
  v7[0] = v1[1];
  v7[1] = v2;
  void v7[2] = v1[3];
  uint64_t v3 = *(void *)(a1(0, v7) - 8);
  unint64_t v4 = (char *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = sub_1A56D4CB8();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A54F694C(uint64_t a1, _OWORD *a2, void *a3, uint64_t *a4, void *a5, uint64_t *a6)
{
  uint64_t v10 = v6[2];
  uint64_t v11 = v6[3];
  uint64_t v13 = v6[4];
  uint64_t v12 = v6[5];
  uint64_t v14 = v6[6];
  uint64_t v15 = v6[7];
  void v7[2] = v10;
  _OWORD v7[3] = v11;
  v7[4] = v13;
  void v7[5] = v12;
  v7[6] = v14;
  v7[7] = v15;
  uint64_t v16 = *(void *)(type metadata accessor for SFXPCBlock() - 8);
  uint64_t v17 = (uint64_t)v6 + ((*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v18 = (void *)swift_task_alloc();
  v7[8] = v18;
  *uint64_t v18 = v7;
  v18[1] = sub_1A54F6A98;
  return sub_1A54F1108(a1, a2, a3, a4, a5, a6, v17, v10);
}

uint64_t sub_1A54F6A98()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t SFAirDropReceive.Transfer.State.sfTransferState.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v1, (uint64_t)v7, type metadata accessor for SFAirDropReceive.Transfer.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 1;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v14 = *((void *)v7 + 7);
      unint64_t v15 = *((void *)v7 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v14, v15);
      uint64_t v13 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48)];
      uint64_t v12 = (uint64_t *)&unk_1E9670D00;
      goto LABEL_6;
    case 2:
      sub_1A54E4D44((uint64_t)v7, &qword_1E9670D10);
      return 5;
    case 3:
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      sub_1A54F7390(*(void *)&v7[*(int *)(v16 + 48)], *(void *)&v7[*(int *)(v16 + 48) + 8], *(void *)&v7[*(int *)(v16 + 48) + 16]);
      goto LABEL_10;
    case 4:
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
LABEL_10:
      swift_bridgeObjectRelease();
      sub_1A54F7200((uint64_t)&v7[*(int *)(v16 + 80)], (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      goto LABEL_12;
    case 5:
    case 6:
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v7[*(int *)(v10 + 64)], &qword_1E9670D10);
      sub_1A54F7200((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 5;
    case 7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      swift_bridgeObjectRelease();
LABEL_12:
      sub_1A54F7200((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 2;
    case 8:
    case 9:
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v7[*(int *)(v11 + 80)], &qword_1E9670D10);
      sub_1A54F7200((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 7;
    case 10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54F7200((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      goto LABEL_14;
    case 11:
      uint64_t v17 = *((void *)v7 + 7);
      unint64_t v18 = *((void *)v7 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v17, v18);
      uint64_t v19 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48)];
      uint64_t v20 = &qword_1E9670D10;
      goto LABEL_18;
    case 12:
      uint64_t v22 = *((void *)v7 + 7);
      unint64_t v21 = *((void *)v7 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v22, v21);
      return 4;
    case 13:
      uint64_t v23 = *((void *)v7 + 7);
      unint64_t v24 = *((void *)v7 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v23, v24);
      uint64_t v19 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48)];
      uint64_t v20 = (uint64_t *)&unk_1E9670D00;
LABEL_18:
      sub_1A54E4D44(v19, v20);
      return 4;
    case 14:
      long long v25 = *((_OWORD *)v7 + 7);
      v32[6] = *((_OWORD *)v7 + 6);
      v32[7] = v25;
      v32[8] = *((_OWORD *)v7 + 8);
      long long v26 = *((_OWORD *)v7 + 3);
      v32[2] = *((_OWORD *)v7 + 2);
      v32[3] = v26;
      long long v27 = *((_OWORD *)v7 + 5);
      v32[4] = *((_OWORD *)v7 + 4);
      v32[5] = v27;
      long long v28 = *((_OWORD *)v7 + 1);
      v32[0] = *(_OWORD *)v7;
      v32[1] = v28;
      sub_1A54F7260((uint64_t *)v32);
      return 4;
    case 15:
      uint64_t v31 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48)];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54F7200(v31, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      goto LABEL_25;
    case 16:
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8);
      sub_1A54F8728((uint64_t)&v7[*(int *)(v29 + 48)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 5)
      {
LABEL_25:
        sub_1A54F7200((uint64_t)v7, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
        uint64_t result = 8;
      }
      else if (v30 == 4)
      {
        sub_1A54F7200((uint64_t)v7, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
        uint64_t result = 3;
      }
      else
      {
        sub_1A54F7200((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
        sub_1A54F7200((uint64_t)v7, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
        uint64_t result = 9;
      }
      break;
    case 17:
      uint64_t result = *(void *)v7;
      break;
    case 18:
    case 19:
    case 20:
      return result;
    case 21:
LABEL_14:
      uint64_t result = 4;
      break;
    default:
      uint64_t v12 = &qword_1E9670D10;
      uint64_t v13 = (uint64_t)v7;
LABEL_6:
      sub_1A54E4D44(v13, v12);
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer.State(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E966B278);
}

uint64_t sub_1A54F7200(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1A54F7260(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  unint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[14];
  uint64_t v8 = a1[15];
  uint64_t v9 = a1[16];
  unint64_t v10 = a1[17];
  sub_1A54F7304(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  sub_1A54F7304(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

void sub_1A54F7304(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  if (a4 >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E9EF0();
    sub_1A54EA09C(a8, a9);
  }
}

uint64_t sub_1A54F7390(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SFAirDropReceive.Transfer.State.permissionRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v2, (uint64_t)v6, type metadata accessor for SFAirDropReceive.Transfer.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v12 = 1;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v18 = *((void *)v6 + 7);
      unint64_t v19 = *((void *)v6 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v18, v19);
      uint64_t v20 = &qword_1E9670D48;
      goto LABEL_18;
    case 3:
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      sub_1A54F7390(*(void *)&v6[*(int *)(v21 + 48)], *(void *)&v6[*(int *)(v21 + 48) + 8], *(void *)&v6[*(int *)(v21 + 48) + 16]);
      goto LABEL_10;
    case 4:
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
LABEL_10:
      swift_bridgeObjectRelease();
      sub_1A54F7200((uint64_t)&v6[*(int *)(v21 + 80)], (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      uint64_t v17 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_22;
    case 5:
    case 6:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      uint64_t v15 = *(int *)(v14 + 64);
      goto LABEL_5;
    case 7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      goto LABEL_13;
    case 8:
    case 9:
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(int *)(v16 + 80);
LABEL_5:
      sub_1A550D4D4((uint64_t)&v6[v15], (uint64_t)v10, &qword_1E9670D10);
      sub_1A54F7200((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      goto LABEL_16;
    case 10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v17 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_22;
    case 11:
      unint64_t v22 = *((void *)v6 + 8);
      uint64_t v31 = *((void *)v6 + 7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v31, v22);
      uint64_t v13 = (uint64_t)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48)];
      goto LABEL_15;
    case 12:
    case 14:
      uint64_t v17 = type metadata accessor for SFAirDropReceive.Transfer.State;
      goto LABEL_22;
    case 13:
      uint64_t v23 = *((void *)v6 + 7);
      unint64_t v24 = *((void *)v6 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v23, v24);
      uint64_t v20 = &qword_1E9670CF8;
LABEL_18:
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(v20);
      sub_1A54E4D44((uint64_t)&v6[*(int *)(v25 + 48)], &qword_1E9670D00);
      goto LABEL_23;
    case 15:
      long long v26 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48)];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v27 = type metadata accessor for SFAirDropReceive.ItemDestination;
      uint64_t v28 = (uint64_t)v26;
      goto LABEL_21;
    case 16:
      uint64_t v28 = (uint64_t)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48)];
      long long v27 = type metadata accessor for SFAirDropReceive.Failure;
LABEL_21:
      sub_1A54F7200(v28, (uint64_t (*)(void))v27);
      uint64_t v17 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
LABEL_22:
      sub_1A54F7200((uint64_t)v6, v17);
LABEL_23:
      uint64_t v12 = 1;
      break;
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v12, 1, v7);
    default:
      uint64_t v13 = (uint64_t)v6;
LABEL_15:
      sub_1A550D4D4(v13, (uint64_t)v10, &qword_1E9670D10);
LABEL_16:
      sub_1A550D4D4((uint64_t)v10, a1, &qword_1E9670D10);
      uint64_t v12 = 0;
      break;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v12, 1, v7);
}

uint64_t SFAirDropReceive.Transfer.State.contactResponsePermissionRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v2, (uint64_t)v6, type metadata accessor for SFAirDropReceive.Transfer.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = v7;
    uint64_t v19 = a1;
    uint64_t v12 = &qword_1E9670D48;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 13)
  {
    uint64_t v18 = v7;
    uint64_t v19 = a1;
    uint64_t v12 = &qword_1E9670CF8;
LABEL_5:
    uint64_t v14 = *((void *)v6 + 7);
    unint64_t v13 = *((void *)v6 + 8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54E9EF0();
    sub_1A54EA09C(v14, v13);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(v12);
    sub_1A550D4D4((uint64_t)&v6[*(int *)(v15 + 48)], (uint64_t)v10, &qword_1E9670D00);
    uint64_t v16 = v19;
    sub_1A550D4D4((uint64_t)v10, v19, &qword_1E9670D00);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v18);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
  return sub_1A54F7200((uint64_t)v6, type metadata accessor for SFAirDropReceive.Transfer.State);
}

uint64_t SFAirDropReceive.Transfer.State.cancelAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v75 = a1;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
  uint64_t v3 = MEMORY[0x1F4188790](v71);
  uint64_t v67 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v66 = (char *)&v64 - v5;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
  uint64_t v6 = MEMORY[0x1F4188790](v70);
  uint64_t v69 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (uint64_t)&v64 - v8;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
  uint64_t v9 = MEMORY[0x1F4188790](v72);
  uint64_t v64 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v64 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v64 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v65 = (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v64 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  unint64_t v24 = (char *)&v64 - v23;
  MEMORY[0x1F4188790](v22);
  long long v26 = (char *)&v64 - v25;
  uint64_t v27 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v73 = v30;
  uint64_t v74 = v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v2, (uint64_t)v29, type metadata accessor for SFAirDropReceive.Transfer.State);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1A550D4D4((uint64_t)v29, (uint64_t)v26, &qword_1E9670D10);
      sub_1A54F60EC((uint64_t)&v26[*(int *)(v16 + 60)], (uint64_t)v15, &qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, 1, 1, v73);
        sub_1A54E4D44((uint64_t)v15, &qword_1E9670D58);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68);
        uint64_t v58 = v75;
        sub_1A54F8728((uint64_t)&v15[*(int *)(v57 + 80)], v75, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v58, 0, 1, v73);
      }
      uint64_t v52 = &qword_1E9670D10;
      uint64_t v59 = (uint64_t)v26;
      goto LABEL_29;
    case 1u:
      uint64_t v39 = *((void *)v29 + 7);
      unint64_t v40 = *((void *)v29 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v39, v40);
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48);
      uint64_t v42 = v68;
      sub_1A550D4D4((uint64_t)&v29[*(int *)(v41 + 48)], v68, &qword_1E9670D00);
      uint64_t v43 = v42 + *(int *)(v70 + 60);
      uint64_t v44 = (uint64_t)v66;
      goto LABEL_15;
    case 2u:
      sub_1A550D4D4((uint64_t)v29, (uint64_t)v24, &qword_1E9670D10);
      sub_1A54F60EC((uint64_t)&v24[*(int *)(v16 + 60)], (uint64_t)v13, &qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, 1, 1, v73);
        sub_1A54E4D44((uint64_t)v13, &qword_1E9670D58);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68);
        uint64_t v61 = v75;
        sub_1A54F8728((uint64_t)&v13[*(int *)(v60 + 80)], v75, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v61, 0, 1, v73);
      }
      uint64_t v52 = &qword_1E9670D10;
      uint64_t v59 = (uint64_t)v24;
      goto LABEL_29;
    case 3u:
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      sub_1A54F7390(*(void *)&v29[*(int *)(v45 + 48)], *(void *)&v29[*(int *)(v45 + 48) + 8], *(void *)&v29[*(int *)(v45 + 48) + 16]);
      goto LABEL_13;
    case 4u:
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
LABEL_13:
      swift_bridgeObjectRelease();
      sub_1A54F8728((uint64_t)&v29[*(int *)(v45 + 80)], (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      sub_1A54F7200((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v46 = v75;
      sub_1A54F8728((uint64_t)v33, v75, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v46, 0, 1, v73);
    case 5u:
    case 6u:
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      uint64_t v35 = *(int *)(v34 + 64);
      goto LABEL_4;
    case 8u:
    case 9u:
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = *(int *)(v36 + 80);
LABEL_4:
      sub_1A550D4D4((uint64_t)&v29[v35], (uint64_t)v21, &qword_1E9670D10);
      sub_1A54F858C(v75);
      sub_1A54E4D44((uint64_t)v21, &qword_1E9670D10);
      id v37 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_5;
    case 0xBu:
      uint64_t v53 = *((void *)v29 + 7);
      unint64_t v54 = *((void *)v29 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v53, v54);
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08);
      uint64_t v42 = v65;
      sub_1A550D4D4((uint64_t)&v29[*(int *)(v55 + 48)], v65, &qword_1E9670D10);
      uint64_t v56 = v64;
      sub_1A54F60EC(v42 + *(int *)(v16 + 60), v64, &qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, 1, 1, v73);
        sub_1A54E4D44(v56, &qword_1E9670D58);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v62 = v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v63 = v75;
        sub_1A54F8728(v62, v75, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v63, 0, 1, v73);
      }
      uint64_t v52 = &qword_1E9670D10;
      goto LABEL_28;
    case 0xDu:
      uint64_t v47 = *((void *)v29 + 7);
      unint64_t v48 = *((void *)v29 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v47, v48);
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8);
      uint64_t v42 = v69;
      sub_1A550D4D4((uint64_t)&v29[*(int *)(v49 + 48)], v69, &qword_1E9670D00);
      uint64_t v43 = v42 + *(int *)(v70 + 60);
      uint64_t v44 = (uint64_t)v67;
LABEL_15:
      sub_1A54F60EC(v43, v44, &qword_1E9670D50);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, 1, 1, v73);
        sub_1A54E4D44(v44, &qword_1E9670D50);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v50 = v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v51 = v75;
        sub_1A54F8728(v50, v75, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v51, 0, 1, v73);
      }
      uint64_t v52 = &qword_1E9670D00;
LABEL_28:
      uint64_t v59 = v42;
LABEL_29:
      uint64_t result = sub_1A54E4D44(v59, v52);
      break;
    default:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, 1, 1, v73);
      id v37 = type metadata accessor for SFAirDropReceive.Transfer.State;
LABEL_5:
      uint64_t result = sub_1A54F7200((uint64_t)v29, v37);
      break;
  }
  return result;
}

uint64_t sub_1A54F858C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  sub_1A54F60EC(v1 + *(int *)(v6 + 60), (uint64_t)v5, &qword_1E9670D58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.DeclineAction();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
    return sub_1A54E4D44((uint64_t)v5, &qword_1E9670D58);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68);
    sub_1A54F8728((uint64_t)&v5[*(int *)(v9 + 80)], a1, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
    uint64_t v10 = type metadata accessor for SFAirDrop.DeclineAction();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
}

uint64_t sub_1A54F8728(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t SFAirDropReceive.Transfer.State.description.getter()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v74 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A56D4CD8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D70);
  uint64_t v73 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v0, (uint64_t)v18, type metadata accessor for SFAirDropReceive.Transfer.State);
  unint64_t v19 = 0x646574616572632ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v22 = *((void *)v18 + 7);
      unint64_t v23 = *((void *)v18 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v22, v23);
      uint64_t v24 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48)];
      uint64_t v25 = &qword_1E9670D00;
      sub_1A550D4D4(v24, (uint64_t)v12, &qword_1E9670D00);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v26 = 0xD00000000000002ALL;
      uint64_t v27 = ".waitingForShareContactPermissionResponse(";
      goto LABEL_21;
    case 2u:
      sub_1A550D4D4((uint64_t)v18, (uint64_t)v15, &qword_1E9670D10);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000028;
      uint64_t v21 = ".waitingForSensitivePreviewIntervention(";
      goto LABEL_5;
    case 3u:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v29 = (uint64_t *)&v18[*(int *)(v28 + 48)];
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      unint64_t v32 = v29[2];
      uint64_t v33 = v29[3];
      uint64_t v34 = v29[4];
      swift_bridgeObjectRelease();
      uint64_t v35 = &v18[*(int *)(v28 + 80)];
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v76 = 0xD000000000000018;
      unint64_t v77 = 0x80000001A5738E60;
      *(void *)&long long v78 = v30;
      *((void *)&v78 + 1) = v31;
      *(void *)&long long v79 = v32;
      *((void *)&v79 + 1) = v33;
      *(void *)&long long v80 = v34;
      SFAirDrop.Progress.description.getter();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A54F7390(v30, v31, v32);
      sub_1A56D51C8();
      unint64_t v19 = v76;
      uint64_t v36 = (uint64_t)v35;
      goto LABEL_8;
    case 4u:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void *)&v18[*(int *)(v37 + 64)];
      uint64_t v39 = &v18[*(int *)(v37 + 80)];
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v78 = 0xD000000000000020;
      *((void *)&v78 + 1) = 0x80000001A5738E30;
      uint64_t v75 = v38;
      sub_1A56D4CC8();
      sub_1A5508D58();
      sub_1A56D4958();
      sub_1A54E40A8(&qword_1E9670D80, &qword_1E9670D70);
      sub_1A56D4FA8();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v9, v7);
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      uint64_t v36 = (uint64_t)v39;
LABEL_8:
      sub_1A54F7200(v36, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      goto LABEL_17;
    case 5u:
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      uint64_t v41 = (uint64_t)v15;
      sub_1A550D4D4((uint64_t)&v18[*(int *)(v40 + 64)], (uint64_t)v15, &qword_1E9670D10);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v42 = 0xD000000000000024;
      uint64_t v43 = ".waitingForSensitiveContentResponse(";
      goto LABEL_14;
    case 6u:
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      uint64_t v41 = (uint64_t)v15;
      sub_1A550D4D4((uint64_t)&v18[*(int *)(v44 + 64)], (uint64_t)v15, &qword_1E9670D10);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v42 = 0xD000000000000028;
      uint64_t v43 = ".waitingForSensitiveContentIntervention(";
      goto LABEL_14;
    case 7u:
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void *)&v18[*(int *)(v45 + 64)];
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v78 = 0xD000000000000015;
      *((void *)&v78 + 1) = 0x80000001A5738DE0;
      uint64_t v75 = v46;
      sub_1A56D4CC8();
      sub_1A5508D58();
      sub_1A56D4958();
      sub_1A54E40A8(&qword_1E9670D80, &qword_1E9670D70);
      sub_1A56D4FA8();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v9, v7);
      sub_1A56D51C8();
      goto LABEL_16;
    case 8u:
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = (uint64_t)v15;
      sub_1A550D4D4((uint64_t)&v18[*(int *)(v47 + 80)], (uint64_t)v15, &qword_1E9670D10);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v42 = 0xD000000000000018;
      uint64_t v43 = ".waitingForOpenResponse(";
      goto LABEL_14;
    case 9u:
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = (uint64_t)v15;
      sub_1A550D4D4((uint64_t)&v18[*(int *)(v48 + 80)], (uint64_t)v15, &qword_1E9670D10);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v42 = 0xD000000000000023;
      uint64_t v43 = ".waitingForOpenDestinationResponse(";
LABEL_14:
      *(void *)&long long v78 = v42;
      *((void *)&v78 + 1) = (unint64_t)(v43 - 32) | 0x8000000000000000;
      sub_1A5508524();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      sub_1A54E4D44(v41, &qword_1E9670D10);
      goto LABEL_17;
    case 0xAu:
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      swift_bridgeObjectRelease();
      uint64_t v50 = *(void *)&v18[*(int *)(v49 + 64)];
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v78 = 0xD000000000000017;
      *((void *)&v78 + 1) = 0x80000001A5738D40;
      uint64_t v51 = sub_1A56D4A28();
      MEMORY[0x1A62695D0](v50, v51);
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
LABEL_17:
      sub_1A54F7200((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return v19;
    case 0xBu:
      uint64_t v52 = *((void *)v18 + 7);
      unint64_t v53 = *((void *)v18 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v52, v53);
      uint64_t v54 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48)];
      uint64_t v25 = &qword_1E9670D10;
      sub_1A550D4D4(v54, (uint64_t)v15, &qword_1E9670D10);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      sub_1A56D51C8();
      sub_1A5508524();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      uint64_t v55 = (uint64_t)v15;
      goto LABEL_22;
    case 0xCu:
      uint64_t v57 = *((void *)v18 + 7);
      unint64_t v56 = *((void *)v18 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v57, v56);
      return 0xD000000000000019;
    case 0xDu:
      uint64_t v58 = *((void *)v18 + 7);
      unint64_t v59 = *((void *)v18 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v58, v59);
      uint64_t v60 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48)];
      uint64_t v25 = &qword_1E9670D00;
      sub_1A550D4D4(v60, (uint64_t)v12, &qword_1E9670D00);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v26 = 0xD00000000000002DLL;
      uint64_t v27 = ".waitingForContactShareBackResponse(request: ";
LABEL_21:
      *(void *)&long long v78 = v26;
      *((void *)&v78 + 1) = (unint64_t)(v27 - 32) | 0x8000000000000000;
      sub_1A5508268();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      uint64_t v55 = (uint64_t)v12;
LABEL_22:
      sub_1A54E4D44(v55, v25);
      return v19;
    case 0xEu:
      long long v61 = *((_OWORD *)v18 + 6);
      long long v62 = *((_OWORD *)v18 + 8);
      long long v85 = *((_OWORD *)v18 + 7);
      long long v86 = v62;
      long long v63 = *((_OWORD *)v18 + 3);
      long long v80 = *((_OWORD *)v18 + 2);
      long long v81 = v63;
      long long v64 = *((_OWORD *)v18 + 4);
      long long v83 = *((_OWORD *)v18 + 5);
      long long v84 = v61;
      long long v82 = v64;
      long long v65 = *((_OWORD *)v18 + 1);
      long long v78 = *(_OWORD *)v18;
      long long v79 = v65;
      sub_1A54F7260((uint64_t *)&v78);
      return 0xD000000000000013;
    case 0xFu:
      uint64_t v66 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48)];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v67 = v74;
      sub_1A54F8728((uint64_t)v18, v74, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v78 = 0xD000000000000017;
      *((void *)&v78 + 1) = 0x80000001A5738C40;
      SFAirDropReceive.Transfer.Metrics.description.getter();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      sub_1A54F7200(v67, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v68 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_26;
    case 0x10u:
      uint64_t v69 = (uint64_t)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48)];
      uint64_t v66 = v74;
      sub_1A54F8728((uint64_t)v18, v74, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      sub_1A54F8728(v69, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      sub_1A56D51C8();
      sub_1A56D5B48();
      sub_1A56D51C8();
      SFAirDropReceive.Transfer.Metrics.description.getter();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      sub_1A54F7200((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      uint64_t v68 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
LABEL_26:
      sub_1A54F7200(v66, v68);
      break;
    case 0x11u:
      unint64_t v70 = *(void *)v18;
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v78 = 0xD000000000000015;
      *((void *)&v78 + 1) = 0x80000001A5738C00;
      unint64_t v76 = v70;
      sub_1A56D5E78();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      break;
    case 0x12u:
      return v19;
    case 0x13u:
      unint64_t v19 = 0x6363416F7475612ELL;
      break;
    case 0x14u:
      unint64_t v19 = 0xD000000000000011;
      break;
    case 0x15u:
      unint64_t v19 = 0xD000000000000021;
      break;
    default:
      sub_1A550D4D4((uint64_t)v18, (uint64_t)v15, &qword_1E9670D10);
      *(void *)&long long v78 = 0;
      *((void *)&v78 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000017;
      uint64_t v21 = ".waitingForAskResponse(";
LABEL_5:
      *(void *)&long long v78 = v20;
      *((void *)&v78 + 1) = (unint64_t)(v21 - 32) | 0x8000000000000000;
      sub_1A5508524();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v19 = v78;
      sub_1A54E4D44((uint64_t)v15, &qword_1E9670D10);
      break;
  }
  return v19;
}

uint64_t SFAirDropReceive.Transfer.State.shortDescription.getter()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A56D4CD8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v0, (uint64_t)v11, type metadata accessor for SFAirDropReceive.Transfer.State);
  unint64_t v12 = 0x646574616572632ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *((void *)v11 + 7);
      unint64_t v14 = *((void *)v11 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v13, v14);
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48);
      sub_1A54E4D44((uint64_t)&v11[*(int *)(v15 + 48)], &qword_1E9670D00);
      return 0xD000000000000029;
    case 2u:
      sub_1A54E4D44((uint64_t)v11, &qword_1E9670D10);
      return 0xD000000000000027;
    case 3u:
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v17 = (uint64_t *)&v11[*(int *)(v16 + 48)];
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      unint64_t v20 = v17[2];
      uint64_t v21 = v17[3];
      uint64_t v22 = v17[4];
      swift_bridgeObjectRelease();
      unint64_t v23 = &v11[*(int *)(v16 + 80)];
      *(void *)&long long v56 = 0;
      *((void *)&v56 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      unint64_t v54 = 0xD000000000000018;
      unint64_t v55 = 0x80000001A5738E60;
      *(void *)&long long v56 = v18;
      *((void *)&v56 + 1) = v19;
      *(void *)&long long v57 = v20;
      *((void *)&v57 + 1) = v21;
      *(void *)&long long v58 = v22;
      SFAirDrop.Progress.description.getter();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A54F7390(v18, v19, v20);
      sub_1A56D51C8();
      unint64_t v12 = v54;
      uint64_t v24 = (uint64_t)v23;
      goto LABEL_7;
    case 4u:
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)&v11[*(int *)(v25 + 64)];
      uint64_t v27 = &v11[*(int *)(v25 + 80)];
      *(void *)&long long v56 = 0;
      *((void *)&v56 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v56 = 0xD000000000000020;
      *((void *)&v56 + 1) = 0x80000001A5738E30;
      uint64_t v53 = v26;
      sub_1A56D4CC8();
      sub_1A5508D58();
      sub_1A56D4958();
      sub_1A54E40A8(&qword_1E9670D80, &qword_1E9670D70);
      sub_1A56D4FA8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v12 = v56;
      uint64_t v24 = (uint64_t)v27;
LABEL_7:
      sub_1A54F7200(v24, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      goto LABEL_11;
    case 5u:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v11[*(int *)(v28 + 64)], &qword_1E9670D10);
      sub_1A54F7200((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 0xD000000000000023;
    case 6u:
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v11[*(int *)(v29 + 64)], &qword_1E9670D10);
      sub_1A54F7200((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 0xD000000000000027;
    case 7u:
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)&v11[*(int *)(v30 + 64)];
      *(void *)&long long v56 = 0;
      *((void *)&v56 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v56 = 0xD000000000000015;
      *((void *)&v56 + 1) = 0x80000001A5738DE0;
      uint64_t v53 = v31;
      sub_1A56D4CC8();
      sub_1A5508D58();
      sub_1A56D4958();
      sub_1A54E40A8(&qword_1E9670D80, &qword_1E9670D70);
      sub_1A56D4FA8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v12 = v56;
LABEL_11:
      unint64_t v32 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_21;
    case 8u:
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v11[*(int *)(v33 + 80)], &qword_1E9670D10);
      sub_1A54F7200((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 0xD000000000000017;
    case 9u:
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v11[*(int *)(v34 + 80)], &qword_1E9670D10);
      sub_1A54F7200((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 0xD000000000000022;
    case 0xAu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54F7200((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 0x676E696E65706F2ELL;
    case 0xBu:
      uint64_t v35 = *((void *)v11 + 7);
      unint64_t v36 = *((void *)v11 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v35, v36);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08);
      sub_1A54E4D44((uint64_t)&v11[*(int *)(v37 + 48)], &qword_1E9670D10);
      return 0xD000000000000026;
    case 0xCu:
      uint64_t v39 = *((void *)v11 + 7);
      unint64_t v38 = *((void *)v11 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v39, v38);
      return 0xD000000000000019;
    case 0xDu:
      uint64_t v40 = *((void *)v11 + 7);
      unint64_t v41 = *((void *)v11 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v40, v41);
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8);
      sub_1A54E4D44((uint64_t)&v11[*(int *)(v42 + 48)], &qword_1E9670D00);
      return 0xD000000000000023;
    case 0xEu:
      long long v43 = *((_OWORD *)v11 + 6);
      long long v44 = *((_OWORD *)v11 + 8);
      long long v63 = *((_OWORD *)v11 + 7);
      long long v64 = v44;
      long long v45 = *((_OWORD *)v11 + 3);
      long long v58 = *((_OWORD *)v11 + 2);
      long long v59 = v45;
      long long v46 = *((_OWORD *)v11 + 4);
      long long v61 = *((_OWORD *)v11 + 5);
      long long v62 = v43;
      long long v60 = v46;
      long long v47 = *((_OWORD *)v11 + 1);
      long long v56 = *(_OWORD *)v11;
      long long v57 = v47;
      sub_1A54F7260((uint64_t *)&v56);
      return 0xD000000000000013;
    case 0xFu:
      uint64_t v48 = (uint64_t)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48)];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54F7200(v48, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      sub_1A54F7200((uint64_t)v11, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      return 0xD000000000000016;
    case 0x10u:
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8);
      sub_1A54F8728((uint64_t)&v11[*(int *)(v49 + 48)], (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      *(void *)&long long v56 = 0;
      *((void *)&v56 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      sub_1A56D51C8();
      sub_1A56D5B48();
      sub_1A56D51C8();
      unint64_t v12 = v56;
      sub_1A54F7200((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      unint64_t v32 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
LABEL_21:
      sub_1A54F7200((uint64_t)v11, v32);
      break;
    case 0x11u:
      unint64_t v50 = *(void *)v11;
      *(void *)&long long v56 = 0;
      *((void *)&v56 + 1) = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      *(void *)&long long v56 = 0xD000000000000015;
      *((void *)&v56 + 1) = 0x80000001A5738C00;
      unint64_t v54 = v50;
      sub_1A56D5E78();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      unint64_t v12 = v56;
      break;
    case 0x12u:
      return v12;
    case 0x13u:
      unint64_t v12 = 0x6363416F7475612ELL;
      break;
    case 0x14u:
      unint64_t v12 = 0xD000000000000011;
      break;
    case 0x15u:
      unint64_t v12 = 0xD000000000000021;
      break;
    default:
      sub_1A54E4D44((uint64_t)v11, &qword_1E9670D10);
      unint64_t v12 = 0xD000000000000016;
      break;
  }
  return v12;
}

BOOL SFAirDropReceive.Transfer.State.isProgressComplete.getter()
{
  return SFAirDropReceive.Transfer.State.currentProgressCount.getter() == 1000;
}

uint64_t SFAirDropReceive.Transfer.State.totalProgressCount.getter()
{
  return 1000;
}

uint64_t SFAirDropReceive.Transfer.State.currentProgressCount.getter()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v0, (uint64_t)v3, type metadata accessor for SFAirDropReceive.Transfer.State);
  uint64_t v4 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *((void *)v3 + 7);
      unint64_t v10 = *((void *)v3 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v9, v10);
      uint64_t v6 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48)];
      uint64_t v5 = &qword_1E9670D00;
      goto LABEL_6;
    case 3u:
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      unint64_t v12 = (uint64_t *)&v3[*(int *)(v11 + 48)];
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      unint64_t v16 = v12[2];
      uint64_t v15 = v12[3];
      uint64_t v17 = v12[4];
      swift_bridgeObjectRelease();
      if (v16 >> 62)
      {
        if (v16 >> 62 == 1)
        {
          sub_1A54F7390(v14, v13, v16);
          uint64_t v4 = 900;
        }
        else
        {
          uint64_t v40 = v16 != 0x8000000000000000 || (v13 | v14 | v15 | v17) != 0;
          uint64_t v4 = v40 << 63 >> 63;
        }
        goto LABEL_41;
      }
      uint64_t v4 = 450;
      if ((v16 & 1) != 0 || v13 <= 0) {
        goto LABEL_41;
      }
      double v38 = (double)v15 * 1000.0 / (double)v13 * 0.9;
      if ((~*(void *)&v38 & 0x7FF0000000000000) == 0) {
        goto LABEL_46;
      }
      if (v38 <= -9.22337204e18) {
        goto LABEL_47;
      }
      if (v38 < 9.22337204e18)
      {
        uint64_t v4 = (uint64_t)v38;
LABEL_41:
        sub_1A54F7200((uint64_t)&v3[*(int *)(v11 + 80)], (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        goto LABEL_42;
      }
      goto LABEL_48;
    case 4u:
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      swift_bridgeObjectRelease();
      sub_1A54F7200((uint64_t)&v3[*(int *)(v18 + 80)], (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      goto LABEL_11;
    case 5u:
    case 6u:
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v3[*(int *)(v7 + 64)], &qword_1E9670D10);
LABEL_11:
      sub_1A54F7200((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return 900;
    case 7u:
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      swift_bridgeObjectRelease();
      double v20 = *(double *)&v3[*(int *)(v19 + 64)] * 1000.0 * 0.1 + 900.0;
      if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_44;
      }
      if (v20 <= -9.22337204e18)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v20 >= 9.22337204e18)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        JUMPOUT(0x1A54FAADCLL);
      }
      uint64_t v4 = (uint64_t)v20;
LABEL_42:
      sub_1A54F7200((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      return v4;
    case 8u:
    case 9u:
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E4D44((uint64_t)&v3[*(int *)(v8 + 80)], &qword_1E9670D10);
      goto LABEL_17;
    case 0xAu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v21 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_25;
    case 0xBu:
      uint64_t v22 = *((void *)v3 + 7);
      unint64_t v23 = *((void *)v3 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v22, v23);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08);
      sub_1A54E4D44((uint64_t)&v3[*(int *)(v24 + 48)], &qword_1E9670D10);
      return 1000;
    case 0xCu:
      uint64_t v26 = *((void *)v3 + 7);
      unint64_t v25 = *((void *)v3 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v26, v25);
      return 1000;
    case 0xDu:
      uint64_t v27 = *((void *)v3 + 7);
      unint64_t v28 = *((void *)v3 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v27, v28);
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8);
      sub_1A54E4D44((uint64_t)&v3[*(int *)(v29 + 48)], &qword_1E9670D00);
      return 1000;
    case 0xEu:
      long long v30 = *((_OWORD *)v3 + 7);
      v41[6] = *((_OWORD *)v3 + 6);
      v41[7] = v30;
      v41[8] = *((_OWORD *)v3 + 8);
      long long v31 = *((_OWORD *)v3 + 3);
      v41[2] = *((_OWORD *)v3 + 2);
      v41[3] = v31;
      long long v32 = *((_OWORD *)v3 + 5);
      v41[4] = *((_OWORD *)v3 + 4);
      void v41[5] = v32;
      long long v33 = *((_OWORD *)v3 + 1);
      v41[0] = *(_OWORD *)v3;
      v41[1] = v33;
      sub_1A54F7260((uint64_t *)v41);
      return 1000;
    case 0xFu:
      uint64_t v34 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48)];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = type metadata accessor for SFAirDropReceive.ItemDestination;
      uint64_t v36 = (uint64_t)v34;
      goto LABEL_24;
    case 0x10u:
      uint64_t v36 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48)];
      uint64_t v35 = type metadata accessor for SFAirDropReceive.Failure;
LABEL_24:
      sub_1A54F7200(v36, (uint64_t (*)(void))v35);
      uint64_t v21 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
LABEL_25:
      sub_1A54F7200((uint64_t)v3, v21);
      return 1000;
    case 0x11u:
    case 0x15u:
      return 1000;
    case 0x12u:
    case 0x13u:
    case 0x14u:
      return v4;
    default:
      uint64_t v5 = &qword_1E9670D10;
      uint64_t v6 = (uint64_t)v3;
LABEL_6:
      sub_1A54E4D44(v6, v5);
      return 0;
  }
}

unint64_t sub_1A54FAB38(char a1)
{
  unint64_t result = 0x64657461657263;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656363416F747561;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
    case 19:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000028;
      break;
    case 5:
      unint64_t result = 0xD000000000000026;
      break;
    case 6:
    case 20:
      unint64_t result = 0x726566736E617274;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000022;
      break;
    case 9:
      unint64_t result = 0xD000000000000026;
      break;
    case 10:
      unint64_t result = 0x6E6974726F706D69;
      break;
    case 11:
      unint64_t result = 0xD000000000000016;
      break;
    case 12:
      unint64_t result = 0xD000000000000021;
      break;
    case 13:
      unint64_t result = 0x676E696E65706FLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000020;
      break;
    case 15:
      unint64_t result = 0xD000000000000025;
      break;
    case 16:
      unint64_t result = 0xD000000000000018;
      break;
    case 17:
      unint64_t result = 0xD000000000000022;
      break;
    case 18:
      unint64_t result = 0xD000000000000012;
      break;
    case 21:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54FADD0(uint64_t a1)
{
  unint64_t v2 = sub_1A550D188();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FAE0C(uint64_t a1)
{
  unint64_t v2 = sub_1A550D188();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FAE48()
{
  uint64_t result = 0x74616E6974736564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726566736E617274;
      break;
    case 2:
      uint64_t result = 0x73736572676F7270;
      break;
    case 3:
      uint64_t result = 0x63416C65636E6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54FAEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5535374(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FAF1C(uint64_t a1)
{
  unint64_t v2 = sub_1A550CF90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FAF58(uint64_t a1)
{
  unint64_t v2 = sub_1A550CF90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FAF94(uint64_t a1)
{
  unint64_t v2 = sub_1A550D1DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FAFD0(uint64_t a1)
{
  unint64_t v2 = sub_1A550D1DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A54FB00C()
{
  return sub_1A54FAB38(*v0);
}

uint64_t sub_1A54FB014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5535584(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A54FB03C(unsigned char *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_1A54FB048(uint64_t a1)
{
  unint64_t v2 = sub_1A550C9B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB084(uint64_t a1)
{
  unint64_t v2 = sub_1A550C9B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A54FB0C0()
{
  unint64_t result = 0x7363697274656DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74616E6974736564;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x726566736E617274;
      break;
    case 4:
      unint64_t result = 0x646574726F706D69;
      break;
    case 5:
      unint64_t result = 0x525564656E65706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54FB1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5535DE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A54FB1D4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1A54FB1E0(uint64_t a1)
{
  unint64_t v2 = sub_1A550CAF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB21C(uint64_t a1)
{
  unint64_t v2 = sub_1A550CAF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB258(uint64_t a1)
{
  unint64_t v2 = sub_1A550D230();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB294(uint64_t a1)
{
  unint64_t v2 = sub_1A550D230();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB2D0()
{
  uint64_t v1 = 0x726566736E617274;
  if (*v0 != 1) {
    uint64_t v1 = 0x73736572676F7270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74616E6974736564;
  }
}

uint64_t sub_1A54FB340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55360BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A54FB368(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A54FB374(uint64_t a1)
{
  unint64_t v2 = sub_1A550CE94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB3B0(uint64_t a1)
{
  unint64_t v2 = sub_1A550CE94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB3EC()
{
  return 0x6F437265646E6573;
}

uint64_t sub_1A54FB410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F437265646E6573 && a2 == 0xED0000746361746ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A54FB4CC(uint64_t a1)
{
  unint64_t v2 = sub_1A550CC9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB508(uint64_t a1)
{
  unint64_t v2 = sub_1A550CC9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB544(uint64_t a1)
{
  unint64_t v2 = sub_1A550CA08();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB580(uint64_t a1)
{
  unint64_t v2 = sub_1A550CA08();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB5BC()
{
  uint64_t v1 = 0x726566736E617274;
  if (*v0 != 1) {
    uint64_t v1 = 0x646574726F706D69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74616E6974736564;
  }
}

uint64_t sub_1A54FB634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FB65C(uint64_t a1)
{
  unint64_t v2 = sub_1A550CD98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB698(uint64_t a1)
{
  unint64_t v2 = sub_1A550CD98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB6D4()
{
  if (*v0) {
    return 0x7265766965636572;
  }
  else {
    return 0x6F437265646E6573;
  }
}

uint64_t sub_1A54FB728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55363FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FB750(uint64_t a1)
{
  unint64_t v2 = sub_1A550CB4C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB78C(uint64_t a1)
{
  unint64_t v2 = sub_1A550CB4C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB7C8()
{
  if (*v0) {
    return 0x6572756C696166;
  }
  else {
    return 0x7363697274656DLL;
  }
}

uint64_t sub_1A54FB7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536538(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FB824(uint64_t a1)
{
  unint64_t v2 = sub_1A550CA5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB860(uint64_t a1)
{
  unint64_t v2 = sub_1A550CA5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1A54FB89C()
{
  unint64_t result = 0x74616E6974736564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73736572676F7270;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x63416C65636E6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54FB940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A553662C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FB968(uint64_t a1)
{
  unint64_t v2 = sub_1A550CFE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FB9A4(uint64_t a1)
{
  unint64_t v2 = sub_1A550CFE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FB9E0()
{
  return 0x74736575716572;
}

uint64_t sub_1A54FB9FC(uint64_t a1)
{
  unint64_t v2 = sub_1A550D134();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBA38(uint64_t a1)
{
  unint64_t v2 = sub_1A550D134();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FBA74(uint64_t a1)
{
  unint64_t v2 = sub_1A550CD44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBAB0(uint64_t a1)
{
  unint64_t v2 = sub_1A550CD44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FBAEC()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x7265766965636572;
  }
}

uint64_t sub_1A54FBB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536810(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FBB60(uint64_t a1)
{
  unint64_t v2 = sub_1A550CBF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBB9C(uint64_t a1)
{
  unint64_t v2 = sub_1A550CBF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FBBD8(uint64_t a1)
{
  unint64_t v2 = sub_1A550CDEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBC14(uint64_t a1)
{
  unint64_t v2 = sub_1A550CDEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FBC50()
{
  uint64_t result = 0x74616E6974736564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726566736E617274;
      break;
    case 2:
      uint64_t result = 0x646574726F706D69;
      break;
    case 3:
      uint64_t result = 0x74736575716572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A54FBCFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FBD24(uint64_t a1)
{
  unint64_t v2 = sub_1A550CE40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBD60(uint64_t a1)
{
  unint64_t v2 = sub_1A550CE40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FBD9C(uint64_t a1)
{
  unint64_t v2 = sub_1A550CEE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBDD8(uint64_t a1)
{
  unint64_t v2 = sub_1A550CEE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FBE14()
{
  uint64_t v1 = 0x726566736E617274;
  if (*v0 != 1) {
    uint64_t v1 = 0x74736575716572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74616E6974736564;
  }
}

uint64_t sub_1A54FBE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536B34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FBEAC(uint64_t a1)
{
  unint64_t v2 = sub_1A550CF3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBEE8(uint64_t a1)
{
  unint64_t v2 = sub_1A550CF3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FBF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A54FBFBC(uint64_t a1)
{
  unint64_t v2 = sub_1A550D08C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FBFF8(uint64_t a1)
{
  unint64_t v2 = sub_1A550D08C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FC034()
{
  if (*v0) {
    return 0x74736575716572;
  }
  else {
    return 0x7265766965636572;
  }
}

uint64_t sub_1A54FC07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536CC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FC0A4(uint64_t a1)
{
  unint64_t v2 = sub_1A550D0E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FC0E0(uint64_t a1)
{
  unint64_t v2 = sub_1A550D0E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A54FC11C()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x6F437265646E6573;
  }
}

uint64_t sub_1A54FC168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536DE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A54FC190(uint64_t a1)
{
  unint64_t v2 = sub_1A550CCF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A54FC1CC(uint64_t a1)
{
  unint64_t v2 = sub_1A550CCF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SFAirDropReceive.Transfer.State.encode(to:)(void *a1)
{
  uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D88);
  uint64_t v272 = *(void *)(v325 - 8);
  MEMORY[0x1F4188790](v325);
  v323 = (char *)&v254 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D90);
  uint64_t v274 = *(void *)(v329 - 8);
  MEMORY[0x1F4188790](v329);
  v328 = (char *)&v254 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v255 = type metadata accessor for SFAirDropReceive.Failure();
  MEMORY[0x1F4188790](v255);
  uint64_t v327 = (uint64_t)&v254 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D98);
  uint64_t v257 = *(void *)(v331 - 8);
  MEMORY[0x1F4188790](v331);
  unint64_t v330 = (unint64_t)&v254 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v343 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  uint64_t v6 = MEMORY[0x1F4188790](v343);
  uint64_t v326 = (uint64_t)&v254 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v332 = (uint64_t)&v254 - v8;
  uint64_t v324 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DA0);
  uint64_t v273 = *(void *)(v324 - 8);
  MEMORY[0x1F4188790](v324);
  v322 = (char *)&v254 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v321 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DA8);
  uint64_t v271 = *(void *)(v321 - 8);
  MEMORY[0x1F4188790](v321);
  v320 = (char *)&v254 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DB0);
  uint64_t v269 = *(void *)(v312 - 8);
  MEMORY[0x1F4188790](v312);
  v309 = (char *)&v254 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DB8);
  uint64_t v270 = *(void *)(v319 - 8);
  MEMORY[0x1F4188790](v319);
  v318 = (char *)&v254 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DC0);
  uint64_t v300 = *(void *)(v301 - 8);
  MEMORY[0x1F4188790](v301);
  v297 = (char *)&v254 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DC8);
  uint64_t v265 = *(void *)(v315 - 8);
  MEMORY[0x1F4188790](v315);
  v313 = (char *)&v254 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DD0);
  uint64_t v261 = *(void *)(v317 - 8);
  MEMORY[0x1F4188790](v317);
  v316 = (char *)&v254 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DD8);
  uint64_t v260 = *(void *)(v314 - 8);
  MEMORY[0x1F4188790](v314);
  v311 = (char *)&v254 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v308 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DE0);
  uint64_t v264 = *(void *)(v308 - 8);
  MEMORY[0x1F4188790](v308);
  v306 = (char *)&v254 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DE8);
  uint64_t v263 = *(void *)(v307 - 8);
  MEMORY[0x1F4188790](v307);
  v305 = (char *)&v254 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DF0);
  uint64_t v262 = *(void *)(v302 - 8);
  MEMORY[0x1F4188790](v302);
  v298 = (char *)&v254 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670DF8);
  uint64_t v259 = *(void *)(v304 - 8);
  MEMORY[0x1F4188790](v304);
  v299 = (char *)&v254 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E00);
  uint64_t v258 = *(void *)(v303 - 8);
  MEMORY[0x1F4188790](v303);
  v296 = (char *)&v254 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v22 = MEMORY[0x1F4188790](v254);
  uint64_t v295 = (uint64_t)&v254 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v339 = (uint64_t)&v254 - v24;
  unint64_t v345 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v25 = MEMORY[0x1F4188790](v345);
  uint64_t v310 = (uint64_t)&v254 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  unint64_t v335 = (unint64_t)&v254 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v338 = (uint64_t)&v254 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v337 = (uint64_t)&v254 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v291 = (uint64_t)&v254 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v293 = (uint64_t)&v254 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v292 = (uint64_t)&v254 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v294 = (uint64_t)&v254 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v336 = (uint64_t)&v254 - v41;
  uint64_t v288 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E08);
  uint64_t v267 = *(void *)(v288 - 8);
  MEMORY[0x1F4188790](v288);
  v285 = (char *)&v254 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E10);
  uint64_t v268 = *(void *)(v290 - 8);
  MEMORY[0x1F4188790](v290);
  v289 = (char *)&v254 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
  uint64_t v44 = MEMORY[0x1F4188790](v256);
  uint64_t v342 = (uint64_t)&v254 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  unint64_t v341 = (unint64_t)&v254 - v46;
  uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E18);
  uint64_t v266 = *(void *)(v284 - 8);
  MEMORY[0x1F4188790](v284);
  v283 = (char *)&v254 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v344 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  uint64_t v48 = MEMORY[0x1F4188790](v344);
  uint64_t v340 = (uint64_t)&v254 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v334 = (uint64_t)&v254 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v333 = (uint64_t)&v254 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v287 = (uint64_t)&v254 - v55;
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  uint64_t v286 = (uint64_t)&v254 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  uint64_t v282 = (uint64_t)&v254 - v59;
  MEMORY[0x1F4188790](v58);
  uint64_t v281 = (uint64_t)&v254 - v60;
  uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E20);
  uint64_t v279 = *(void *)(v280 - 8);
  MEMORY[0x1F4188790](v280);
  v278 = (char *)&v254 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E28);
  uint64_t v276 = *(void *)(v277 - 8);
  MEMORY[0x1F4188790](v277);
  long long v63 = (char *)&v254 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E30);
  uint64_t v275 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v66 = (char *)&v254 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v67);
  uint64_t v69 = (char *)&v254 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v350 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E38);
  uint64_t v346 = *(void *)(v350 - 8);
  MEMORY[0x1F4188790](v350);
  uint64_t v71 = (char *)&v254 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A550C9B4();
  v349 = v71;
  sub_1A56D61D8();
  sub_1A550D414(v348, (uint64_t)v69, type metadata accessor for SFAirDropReceive.Transfer.State);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v78 = *(void *)v69;
      unint64_t v79 = *((void *)v69 + 1);
      uint64_t v80 = *((void *)v69 + 3);
      uint64_t v344 = *((void *)v69 + 2);
      unint64_t v345 = v78;
      uint64_t v81 = *((void *)v69 + 4);
      uint64_t v348 = *((void *)v69 + 5);
      LODWORD(v343) = v69[48];
      uint64_t v83 = *((void *)v69 + 7);
      uint64_t v82 = *((void *)v69 + 8);
      uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48);
      sub_1A550D4D4((uint64_t)&v69[*(int *)(v84 + 48)], v341, &qword_1E9670D00);
      LOBYTE(v351) = 4;
      sub_1A550D0E0();
      long long v85 = v289;
      uint64_t v87 = v349;
      uint64_t v86 = v350;
      sub_1A56D5D98();
      uint64_t v351 = v345;
      uint64_t v352 = v79;
      uint64_t v353 = v344;
      uint64_t v354 = v80;
      uint64_t v88 = v85;
      uint64_t v355 = v81;
      uint64_t v356 = v348;
      LOBYTE(v357) = v343;
      uint64_t v342 = v83;
      uint64_t v358 = v83;
      unint64_t v359 = v82;
      uint64_t v344 = v82;
      unint64_t v345 = v79;
      char v360 = 0;
      sub_1A550CC48();
      uint64_t v89 = v290;
      uint64_t v90 = v347;
      sub_1A56D5E38();
      if (v90)
      {
        (*(void (**)(char *, uint64_t))(v268 + 8))(v85, v89);
        sub_1A54E4D44(v341, &qword_1E9670D00);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v87, v86);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        uint64_t v91 = v342;
        goto LABEL_37;
      }
      uint64_t v347 = v81;
      LOBYTE(v351) = 1;
      sub_1A54E40A8(&qword_1E9670EA0, &qword_1E9670D00);
      uint64_t v229 = v341;
      sub_1A56D5E38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v342, v344);
      v230 = &v300;
      goto LABEL_65;
    case 2u:
      uint64_t v72 = v282;
      sub_1A550D4D4((uint64_t)v69, v282, &qword_1E9670D10);
      LOBYTE(v351) = 5;
      sub_1A550D08C();
      uint64_t v73 = v285;
      uint64_t v75 = v349;
      uint64_t v74 = v350;
      sub_1A56D5D98();
      sub_1A54E40A8(&qword_1E9670EB8, &qword_1E9670D10);
      uint64_t v76 = v288;
      sub_1A56D5E38();
      unint64_t v77 = &v299;
      goto LABEL_6;
    case 3u:
      uint64_t v92 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      long long v93 = (unint64_t *)&v69[v92[12]];
      uint64_t v94 = v93[1];
      unint64_t v341 = *v93;
      uint64_t v342 = v94;
      uint64_t v95 = v93[2];
      uint64_t v97 = v93[3];
      uint64_t v96 = v93[4];
      uint64_t v343 = v95;
      uint64_t v344 = v97;
      uint64_t v348 = v96;
      long long v98 = (uint64_t *)&v69[v92[16]];
      uint64_t v99 = v98[1];
      uint64_t v340 = *v98;
      uint64_t v100 = (uint64_t)&v69[v92[20]];
      uint64_t v101 = v336;
      sub_1A54F8728((uint64_t)v69, v336, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v102 = v339;
      sub_1A54F8728(v100, v339, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      LOBYTE(v351) = 6;
      sub_1A550CFE4();
      long long v103 = v296;
      long long v104 = v349;
      uint64_t v105 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v106 = v303;
      uint64_t v107 = v347;
      sub_1A56D5E38();
      if (v107)
      {
        sub_1A54F7390(v341, v342, v343);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v258 + 8))(v103, v106);
        sub_1A54F7200(v102, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        sub_1A54F7200(v101, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v104, v105);
      }
      else
      {
        uint64_t v347 = v99;
        uint64_t v232 = v341;
        uint64_t v231 = v342;
        uint64_t v351 = v341;
        uint64_t v352 = v342;
        unint64_t v233 = v343;
        uint64_t v353 = v343;
        uint64_t v354 = v344;
        uint64_t v355 = v348;
        char v360 = 1;
        sub_1A550D038();
        sub_1A56D5E38();
        sub_1A54F7390(v232, v231, v233);
        LOBYTE(v351) = 2;
        sub_1A56D5DE8();
        v242 = v349;
        swift_bridgeObjectRelease();
        LOBYTE(v351) = 3;
        sub_1A550CAB0(&qword_1E9670F00, (void (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction);
        v244 = v103;
        uint64_t v245 = v339;
        sub_1A56D5E38();
        uint64_t v246 = v336;
        (*(void (**)(char *, uint64_t))(v258 + 8))(v244, v106);
        sub_1A54F7200(v245, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        sub_1A54F7200(v246, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v242, v350);
      }
      return;
    case 4u:
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      uint64_t v109 = *(void *)&v69[*(int *)(v108 + 48)];
      uint64_t v110 = (uint64_t)&v69[*(int *)(v108 + 80)];
      uint64_t v111 = v294;
      sub_1A54F8728((uint64_t)v69, v294, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v112 = v295;
      sub_1A54F8728(v110, v295, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      LOBYTE(v351) = 7;
      sub_1A550CF90();
      uint64_t v113 = v299;
      uint64_t v75 = v349;
      uint64_t v74 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v114 = v304;
      uint64_t v115 = v347;
      sub_1A56D5E38();
      if (v115)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v351 = v109;
        char v360 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
        sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        LOBYTE(v351) = 2;
        sub_1A56D5E08();
        LOBYTE(v351) = 3;
        sub_1A550CAB0(&qword_1E9670F00, (void (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction);
        sub_1A56D5E38();
      }
      (*(void (**)(char *, uint64_t))(v259 + 8))(v113, v114);
      sub_1A54F7200(v112, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      sub_1A54F7200(v111, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      goto LABEL_46;
    case 5u:
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      uint64_t v117 = *(void *)&v69[*(int *)(v116 + 48)];
      uint64_t v118 = (uint64_t)&v69[*(int *)(v116 + 64)];
      uint64_t v119 = v292;
      sub_1A54F8728((uint64_t)v69, v292, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v120 = v286;
      sub_1A550D4D4(v118, v286, &qword_1E9670D10);
      LOBYTE(v351) = 8;
      sub_1A550CF3C();
      char v121 = v298;
      uint64_t v75 = v349;
      uint64_t v74 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v122 = v302;
      uint64_t v123 = v347;
      sub_1A56D5E38();
      if (v123)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v351 = v117;
        char v360 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
        sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        LOBYTE(v351) = 2;
        sub_1A54E40A8(&qword_1E9670EB8, &qword_1E9670D10);
        sub_1A56D5E38();
      }
      char v124 = &v294;
      goto LABEL_18;
    case 6u:
      uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      uint64_t v126 = *(void *)&v69[*(int *)(v125 + 48)];
      uint64_t v127 = (uint64_t)&v69[*(int *)(v125 + 64)];
      uint64_t v119 = v293;
      sub_1A54F8728((uint64_t)v69, v293, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v120 = v287;
      sub_1A550D4D4(v127, v287, &qword_1E9670D10);
      LOBYTE(v351) = 9;
      sub_1A550CEE8();
      char v121 = v305;
      uint64_t v75 = v349;
      uint64_t v74 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v122 = v307;
      uint64_t v128 = v347;
      sub_1A56D5E38();
      if (v128)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v351 = v126;
        char v360 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
        sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        LOBYTE(v351) = 2;
        sub_1A54E40A8(&qword_1E9670EB8, &qword_1E9670D10);
        sub_1A56D5E38();
      }
      char v124 = &v295;
LABEL_18:
      (*(void (**)(char *, uint64_t))(*(v124 - 32) + 8))(v121, v122);
      sub_1A54E4D44(v120, &qword_1E9670D10);
      goto LABEL_22;
    case 7u:
      uint64_t v129 = *(void *)&v69[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28) + 48)];
      uint64_t v119 = v291;
      sub_1A54F8728((uint64_t)v69, v291, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      LOBYTE(v351) = 10;
      sub_1A550CE94();
      long long v130 = v306;
      uint64_t v75 = v349;
      uint64_t v74 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v131 = v308;
      uint64_t v132 = v347;
      sub_1A56D5E38();
      if (v132)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v351 = v129;
        char v360 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
        sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        LOBYTE(v351) = 2;
        sub_1A56D5E08();
      }
      (*(void (**)(char *, uint64_t))(v264 + 8))(v130, v131);
LABEL_22:
      sub_1A54F7200(v119, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      goto LABEL_46;
    case 8u:
      long long v133 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      uint64_t v348 = *(void *)&v69[v133[12]];
      uint64_t v134 = *(void *)&v69[v133[16]];
      uint64_t v135 = (uint64_t)&v69[v133[20]];
      uint64_t v136 = v337;
      sub_1A54F8728((uint64_t)v69, v337, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v137 = v333;
      sub_1A550D4D4(v135, v333, &qword_1E9670D10);
      LOBYTE(v351) = 11;
      sub_1A550CE40();
      long long v138 = v311;
      long long v140 = v349;
      uint64_t v139 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v141 = v314;
      uint64_t v142 = v347;
      sub_1A56D5E38();
      if (v142)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v143 = &v292;
        goto LABEL_27;
      }
      uint64_t v351 = v348;
      char v360 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
      v234 = v138;
      sub_1A56D5E38();
      swift_bridgeObjectRelease();
      uint64_t v351 = v134;
      char v360 = 2;
      sub_1A56D5E38();
      swift_bridgeObjectRelease();
      LOBYTE(v351) = 3;
      sub_1A54E40A8(&qword_1E9670EB8, &qword_1E9670D10);
      uint64_t v247 = v333;
      sub_1A56D5E38();
      uint64_t v248 = v337;
      v249 = &v292;
      goto LABEL_70;
    case 9u:
      uint64_t v144 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      uint64_t v348 = *(void *)&v69[v144[12]];
      uint64_t v145 = *(void *)&v69[v144[16]];
      uint64_t v146 = (uint64_t)&v69[v144[20]];
      uint64_t v136 = v338;
      sub_1A54F8728((uint64_t)v69, v338, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v137 = v334;
      sub_1A550D4D4(v146, v334, &qword_1E9670D10);
      LOBYTE(v351) = 12;
      sub_1A550CDEC();
      long long v138 = v316;
      long long v140 = v349;
      uint64_t v139 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v141 = v317;
      uint64_t v147 = v347;
      sub_1A56D5E38();
      if (v147)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v143 = &v293;
LABEL_27:
        (*(void (**)(char *, uint64_t))(*(v143 - 32) + 8))(v138, v141);
        sub_1A54E4D44(v137, &qword_1E9670D10);
        goto LABEL_30;
      }
      uint64_t v351 = v348;
      char v360 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
      v234 = v138;
      sub_1A56D5E38();
      swift_bridgeObjectRelease();
      uint64_t v351 = v145;
      char v360 = 2;
      sub_1A56D5E38();
      swift_bridgeObjectRelease();
      LOBYTE(v351) = 3;
      sub_1A54E40A8(&qword_1E9670EB8, &qword_1E9670D10);
      uint64_t v247 = v334;
      sub_1A56D5E38();
      uint64_t v248 = v338;
      v249 = &v293;
LABEL_70:
      (*(void (**)(char *, uint64_t))(*(v249 - 32) + 8))(v234, v141);
      sub_1A54E4D44(v247, &qword_1E9670D10);
      uint64_t v154 = v248;
      goto LABEL_31;
    case 0xAu:
      uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      uint64_t v149 = *(void *)&v69[*(int *)(v148 + 48)];
      uint64_t v150 = *(void *)&v69[*(int *)(v148 + 64)];
      uint64_t v136 = v335;
      sub_1A54F8728((uint64_t)v69, v335, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      LOBYTE(v351) = 13;
      sub_1A550CD98();
      v151 = v313;
      long long v140 = v349;
      uint64_t v139 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v152 = v315;
      uint64_t v153 = v347;
      sub_1A56D5E38();
      if (!v153)
      {
        uint64_t v351 = v149;
        char v360 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
        sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        uint64_t v351 = v150;
        char v360 = 2;
        sub_1A56D5E38();
        (*(void (**)(char *, uint64_t))(v265 + 8))(v151, v152);
        sub_1A54F7200(v335, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v140, v139);
        goto LABEL_59;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v265 + 8))(v151, v152);
LABEL_30:
      uint64_t v154 = v136;
LABEL_31:
      sub_1A54F7200(v154, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      (*(void (**)(char *, uint64_t))(v346 + 8))(v140, v139);
      return;
    case 0xBu:
      unint64_t v155 = *((void *)v69 + 1);
      unint64_t v345 = *(void *)v69;
      uint64_t v156 = *((void *)v69 + 3);
      uint64_t v343 = *((void *)v69 + 2);
      uint64_t v157 = *((void *)v69 + 4);
      uint64_t v348 = *((void *)v69 + 5);
      LODWORD(v342) = v69[48];
      unint64_t v159 = *((void *)v69 + 7);
      uint64_t v158 = *((void *)v69 + 8);
      uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08);
      sub_1A550D4D4((uint64_t)&v69[*(int *)(v160 + 48)], v340, &qword_1E9670D10);
      LOBYTE(v351) = 15;
      sub_1A550CCF0();
      v161 = v318;
      v163 = v349;
      uint64_t v162 = v350;
      sub_1A56D5D98();
      uint64_t v351 = v345;
      uint64_t v352 = v155;
      unint64_t v345 = v155;
      uint64_t v353 = v343;
      uint64_t v354 = v156;
      uint64_t v355 = v157;
      uint64_t v356 = v348;
      LOBYTE(v357) = v342;
      unint64_t v341 = v159;
      uint64_t v358 = v159;
      unint64_t v359 = v158;
      uint64_t v343 = v158;
      char v360 = 0;
      sub_1A550CC48();
      uint64_t v164 = v319;
      uint64_t v165 = v347;
      sub_1A56D5E38();
      if (v165)
      {
        (*(void (**)(char *, uint64_t))(v270 + 8))(v161, v164);
        sub_1A54E4D44(v340, &qword_1E9670D10);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v163, v162);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v341, v343);
        return;
      }
      uint64_t v347 = v157;
      LOBYTE(v351) = 1;
      sub_1A54E40A8(&qword_1E9670EB8, &qword_1E9670D10);
      uint64_t v229 = v340;
      sub_1A56D5E38();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v341, v343);
      (*(void (**)(char *, uint64_t))(v270 + 8))(v161, v164);
      v235 = &qword_1E9670D10;
      goto LABEL_66;
    case 0xCu:
      uint64_t v166 = *((void *)v69 + 1);
      uint64_t v348 = *(void *)v69;
      unint64_t v167 = *((void *)v69 + 2);
      uint64_t v168 = *((void *)v69 + 3);
      unint64_t v169 = *((void *)v69 + 4);
      uint64_t v344 = *((void *)v69 + 5);
      unint64_t v345 = v167;
      char v170 = v69[48];
      uint64_t v171 = *((void *)v69 + 7);
      unint64_t v172 = *((void *)v69 + 8);
      LOBYTE(v351) = 16;
      sub_1A550CC9C();
      v173 = v309;
      v174 = v349;
      sub_1A56D5D98();
      uint64_t v351 = v348;
      uint64_t v352 = v166;
      uint64_t v342 = v168;
      uint64_t v343 = v166;
      uint64_t v353 = v345;
      uint64_t v354 = v168;
      unint64_t v345 = v169;
      uint64_t v355 = v169;
      uint64_t v356 = v344;
      LOBYTE(v357) = v170;
      uint64_t v348 = v171;
      uint64_t v358 = v171;
      unint64_t v359 = v172;
      sub_1A550CC48();
      uint64_t v175 = v312;
      sub_1A56D5E38();
      (*(void (**)(char *, uint64_t))(v269 + 8))(v173, v175);
      (*(void (**)(char *, uint64_t))(v346 + 8))(v174, v350);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v348, v172);
      return;
    case 0xDu:
      unint64_t v176 = *(void *)v69;
      unint64_t v177 = *((void *)v69 + 1);
      uint64_t v178 = *((void *)v69 + 3);
      uint64_t v344 = *((void *)v69 + 2);
      unint64_t v345 = v176;
      uint64_t v179 = *((void *)v69 + 4);
      uint64_t v348 = *((void *)v69 + 5);
      LODWORD(v343) = v69[48];
      unint64_t v181 = *((void *)v69 + 7);
      uint64_t v180 = *((void *)v69 + 8);
      uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8);
      sub_1A550D4D4((uint64_t)&v69[*(int *)(v182 + 48)], v342, &qword_1E9670D00);
      LOBYTE(v351) = 17;
      sub_1A550CBF4();
      v183 = v320;
      v185 = v349;
      uint64_t v184 = v350;
      sub_1A56D5D98();
      uint64_t v351 = v345;
      uint64_t v352 = v177;
      uint64_t v353 = v344;
      uint64_t v354 = v178;
      uint64_t v88 = v183;
      uint64_t v355 = v179;
      uint64_t v356 = v348;
      LOBYTE(v357) = v343;
      unint64_t v341 = v181;
      uint64_t v358 = v181;
      unint64_t v359 = v180;
      uint64_t v344 = v180;
      unint64_t v345 = v177;
      char v360 = 0;
      sub_1A550CC48();
      uint64_t v89 = v321;
      uint64_t v186 = v347;
      sub_1A56D5E38();
      if (v186)
      {
        (*(void (**)(char *, uint64_t))(v271 + 8))(v183, v89);
        sub_1A54E4D44(v342, &qword_1E9670D00);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v185, v184);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        uint64_t v91 = v341;
LABEL_37:
        sub_1A54EA09C(v91, v344);
      }
      else
      {
        uint64_t v347 = v179;
        LOBYTE(v351) = 1;
        sub_1A54E40A8(&qword_1E9670EA0, &qword_1E9670D00);
        uint64_t v229 = v342;
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v341, v344);
        v230 = &v303;
LABEL_65:
        (*(void (**)(char *, uint64_t))(*(v230 - 32) + 8))(v88, v89);
        v235 = &qword_1E9670D00;
LABEL_66:
        sub_1A54E4D44(v229, v235);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v349, v350);
      }
      return;
    case 0xEu:
      uint64_t v187 = *(void *)v69;
      uint64_t v188 = *((void *)v69 + 1);
      uint64_t v190 = *((void *)v69 + 2);
      unint64_t v189 = *((void *)v69 + 3);
      uint64_t v191 = *((void *)v69 + 4);
      uint64_t v348 = *((void *)v69 + 5);
      uint64_t v192 = *((void *)v69 + 7);
      uint64_t v344 = *((void *)v69 + 6);
      unint64_t v345 = v189;
      unint64_t v193 = *((void *)v69 + 8);
      uint64_t v338 = *((void *)v69 + 9);
      uint64_t v339 = *((void *)v69 + 10);
      unint64_t v194 = *((void *)v69 + 12);
      uint64_t v340 = *((void *)v69 + 11);
      unint64_t v341 = v194;
      uint64_t v195 = *((void *)v69 + 14);
      uint64_t v342 = *((void *)v69 + 13);
      uint64_t v343 = v195;
      uint64_t v336 = *((void *)v69 + 15);
      uint64_t v337 = *((void *)v69 + 16);
      unint64_t v335 = *((void *)v69 + 17);
      LOBYTE(v351) = 18;
      sub_1A550CB4C();
      v196 = v322;
      sub_1A56D5D98();
      uint64_t v332 = v187;
      uint64_t v351 = v187;
      uint64_t v352 = v188;
      uint64_t v331 = v188;
      uint64_t v333 = v190;
      uint64_t v353 = v190;
      uint64_t v197 = v344;
      unint64_t v198 = v345;
      uint64_t v354 = v345;
      uint64_t v355 = v191;
      uint64_t v334 = v191;
      uint64_t v199 = v348;
      uint64_t v356 = v348;
      uint64_t v357 = v344;
      uint64_t v358 = v192;
      unint64_t v359 = v193;
      unint64_t v330 = v193;
      char v360 = 0;
      sub_1A550CBA0();
      uint64_t v200 = v324;
      uint64_t v201 = v347;
      sub_1A56D5E38();
      if (v201)
      {
        sub_1A54F7304(v338, v339, v340, v341, v342, v343, v336, v337, v335);
        (*(void (**)(char *, uint64_t))(v273 + 8))(v196, v200);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v349, v350);
        sub_1A54F7304(v332, v331, v333, v198, v334, v199, v197, v192, v330);
      }
      else
      {
        uint64_t v236 = v192;
        unint64_t v237 = v330;
        uint64_t v238 = v332;
        uint64_t v239 = v331;
        uint64_t v240 = v236;
        uint64_t v351 = v338;
        uint64_t v352 = v339;
        uint64_t v353 = v340;
        uint64_t v354 = v341;
        uint64_t v355 = v342;
        uint64_t v356 = v343;
        uint64_t v357 = v336;
        uint64_t v358 = v337;
        unint64_t v359 = v335;
        char v360 = 1;
        sub_1A56D5E38();
        sub_1A54F7304(v238, v239, v333, v345, v334, v348, v344, v240, v237);
        (*(void (**)(char *, uint64_t))(v273 + 8))(v196, v200);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v349, v350);
        sub_1A54F7304(v338, v339, v340, v341, v342, v343, v336, v337, v335);
      }
      return;
    case 0xFu:
      v202 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v203 = (uint64_t)&v69[v202[12]];
      v204 = (unint64_t *)&v69[v202[16]];
      unint64_t v205 = *v204;
      uint64_t v344 = v204[1];
      uint64_t v348 = *(void *)&v69[v202[20]];
      uint64_t v206 = *(void *)&v69[v202[24]];
      unint64_t v341 = v205;
      uint64_t v342 = v206;
      uint64_t v207 = *(void *)&v69[v202[28]];
      uint64_t v208 = v332;
      sub_1A54F8728((uint64_t)v69, v332, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v209 = v310;
      sub_1A54F8728(v203, v310, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      LOBYTE(v351) = 19;
      sub_1A550CAF8();
      unint64_t v210 = v330;
      v212 = v349;
      uint64_t v211 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E9670E58, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v213 = v331;
      uint64_t v214 = v347;
      sub_1A56D5E38();
      if (v214)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v257 + 8))(v210, v213);
        sub_1A54F7200(v209, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        sub_1A54F7200(v208, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v212, v211);
      }
      else
      {
        uint64_t v241 = v342;
        LOBYTE(v351) = 1;
        sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
        sub_1A56D5E38();
        LOBYTE(v351) = 2;
        sub_1A56D5DA8();
        uint64_t v243 = v348;
        swift_bridgeObjectRelease();
        uint64_t v351 = v243;
        char v360 = 3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
        sub_1A550D284(&qword_1E9670E78, &qword_1E9670E80);
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        uint64_t v351 = v241;
        char v360 = 4;
        sub_1A56D5E38();
        swift_bridgeObjectRelease();
        uint64_t v351 = v207;
        char v360 = 5;
        sub_1A56D5E38();
        uint64_t v250 = v213;
        uint64_t v251 = v332;
        v252 = v349;
        uint64_t v253 = v350;
        (*(void (**)(unint64_t, uint64_t))(v257 + 8))(v210, v250);
        sub_1A54F7200(v209, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        sub_1A54F7200(v251, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
        (*(void (**)(char *, uint64_t))(v346 + 8))(v252, v253);
LABEL_59:
        swift_bridgeObjectRelease();
      }
      return;
    case 0x10u:
      uint64_t v215 = (uint64_t)&v69[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48)];
      uint64_t v216 = v326;
      sub_1A54F8728((uint64_t)v69, v326, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v217 = v327;
      sub_1A54F8728(v215, v327, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      LOBYTE(v351) = 20;
      sub_1A550CA5C();
      v218 = v328;
      v220 = v349;
      uint64_t v219 = v350;
      sub_1A56D5D98();
      LOBYTE(v351) = 0;
      sub_1A550CAB0(&qword_1E9670E58, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v221 = v329;
      uint64_t v222 = v347;
      sub_1A56D5E38();
      if (!v222)
      {
        LOBYTE(v351) = 1;
        sub_1A550CAB0(&qword_1E9670E60, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Failure);
        sub_1A56D5E38();
      }
      (*(void (**)(char *, uint64_t))(v274 + 8))(v218, v221);
      sub_1A54F7200(v217, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      sub_1A54F7200(v216, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      (*(void (**)(char *, uint64_t))(v346 + 8))(v220, v219);
      return;
    case 0x11u:
      LOBYTE(v351) = 21;
      sub_1A550CA08();
      v223 = v323;
      uint64_t v75 = v349;
      uint64_t v74 = v350;
      sub_1A56D5D98();
      uint64_t v224 = v325;
      sub_1A56D5E28();
      (*(void (**)(char *, uint64_t))(v272 + 8))(v223, v224);
      goto LABEL_46;
    case 0x12u:
      LOBYTE(v351) = 0;
      sub_1A550D230();
      v226 = v349;
      uint64_t v225 = v350;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v275 + 8))(v66, v64);
      goto LABEL_52;
    case 0x13u:
      LOBYTE(v351) = 1;
      sub_1A550D1DC();
      v226 = v349;
      uint64_t v225 = v350;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v276 + 8))(v63, v277);
      goto LABEL_52;
    case 0x14u:
      LOBYTE(v351) = 2;
      sub_1A550D188();
      v227 = v278;
      v226 = v349;
      uint64_t v225 = v350;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v279 + 8))(v227, v280);
      goto LABEL_52;
    case 0x15u:
      LOBYTE(v351) = 14;
      sub_1A550CD44();
      v228 = v297;
      v226 = v349;
      uint64_t v225 = v350;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v300 + 8))(v228, v301);
LABEL_52:
      (*(void (**)(char *, uint64_t))(v346 + 8))(v226, v225);
      return;
    default:
      uint64_t v72 = v281;
      sub_1A550D4D4((uint64_t)v69, v281, &qword_1E9670D10);
      LOBYTE(v351) = 3;
      sub_1A550D134();
      uint64_t v73 = v283;
      uint64_t v75 = v349;
      uint64_t v74 = v350;
      sub_1A56D5D98();
      sub_1A54E40A8(&qword_1E9670EB8, &qword_1E9670D10);
      uint64_t v76 = v284;
      sub_1A56D5E38();
      unint64_t v77 = &v298;
LABEL_6:
      (*((void (**)(char *, uint64_t))*(v77 - 32) + 1))(v73, v76);
      sub_1A54E4D44(v72, &qword_1E9670D10);
LABEL_46:
      (*(void (**)(char *, uint64_t))(v346 + 8))(v75, v74);
      return;
  }
}

uint64_t SFAirDropReceive.Transfer.State.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v303 = a2;
  uint64_t v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F48);
  uint64_t v247 = *(void *)(v267 - 8);
  MEMORY[0x1F4188790](v267);
  uint64_t v294 = (char *)&v221 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F50);
  uint64_t v248 = *(void *)(v269 - 8);
  MEMORY[0x1F4188790](v269);
  *(void *)&long long v302 = (char *)&v221 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F58);
  uint64_t v232 = *(void *)(v282 - 8);
  MEMORY[0x1F4188790](v282);
  *((void *)&v302 + 1) = (char *)&v221 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F60);
  uint64_t v246 = *(void *)(v268 - 8);
  MEMORY[0x1F4188790](v268);
  v305 = (char *)&v221 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F68);
  uint64_t v245 = *(void *)(v278 - 8);
  MEMORY[0x1F4188790](v278);
  uint64_t v301 = (char *)&v221 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F70);
  uint64_t v240 = *(void *)(v263 - 8);
  MEMORY[0x1F4188790](v263);
  uint64_t v291 = (char *)&v221 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F78);
  uint64_t v241 = *(void *)(v277 - 8);
  MEMORY[0x1F4188790](v277);
  uint64_t v300 = (char *)&v221 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F80);
  uint64_t v260 = *(void *)(v304 - 8);
  MEMORY[0x1F4188790](v304);
  uint64_t v288 = (char *)&v221 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F88);
  uint64_t v242 = *(void *)(v264 - 8);
  MEMORY[0x1F4188790](v264);
  uint64_t v292 = (char *)&v221 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F90);
  uint64_t v244 = *(void *)(v266 - 8);
  MEMORY[0x1F4188790](v266);
  uint64_t v290 = (char *)&v221 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670F98);
  uint64_t v243 = *(void *)(v265 - 8);
  MEMORY[0x1F4188790](v265);
  uint64_t v293 = (char *)&v221 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FA0);
  uint64_t v239 = *(void *)(v275 - 8);
  MEMORY[0x1F4188790](v275);
  v299 = (char *)&v221 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FA8);
  uint64_t v234 = *(void *)(v262 - 8);
  MEMORY[0x1F4188790](v262);
  v297 = (char *)&v221 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FB0);
  uint64_t v233 = *(void *)(v261 - 8);
  MEMORY[0x1F4188790](v261);
  v296 = (char *)&v221 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FB8);
  uint64_t v231 = *(void *)(v274 - 8);
  MEMORY[0x1F4188790](v274);
  v289 = (char *)&v221 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FC0);
  uint64_t v238 = *(void *)(v259 - 8);
  MEMORY[0x1F4188790](v259);
  uint64_t v295 = (char *)&v221 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FC8);
  uint64_t v236 = *(void *)(v258 - 8);
  MEMORY[0x1F4188790](v258);
  uint64_t v287 = (char *)&v221 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FD0);
  uint64_t v237 = *(void *)(v276 - 8);
  MEMORY[0x1F4188790](v276);
  v298 = (char *)&v221 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FD8);
  uint64_t v235 = *(void *)(v257 - 8);
  MEMORY[0x1F4188790](v257);
  uint64_t v286 = (char *)&v221 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FE0);
  uint64_t v255 = *(void *)(v256 - 8);
  MEMORY[0x1F4188790](v256);
  v285 = (char *)&v221 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FE8);
  uint64_t v251 = *(void *)(v252 - 8);
  MEMORY[0x1F4188790](v252);
  uint64_t v284 = (char *)&v221 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FF0);
  uint64_t v249 = *(void *)(v250 - 8);
  MEMORY[0x1F4188790](v250);
  v283 = (char *)&v221 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670FF8);
  uint64_t v308 = *(void *)(v309 - 8);
  MEMORY[0x1F4188790](v309);
  uint64_t v312 = (char *)&v221 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v306 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  uint64_t v26 = MEMORY[0x1F4188790](v306);
  v230 = (uint64_t *)((char *)&v221 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v272 = (char *)&v221 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v270 = (char *)&v221 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v228 = (char *)&v221 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v254 = (char *)&v221 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v229 = (char *)&v221 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v253 = (char *)&v221 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v273 = (char *)&v221 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v281 = (char *)&v221 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v307 = (char *)&v221 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  uint64_t v271 = (char *)&v221 - v47;
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  uint64_t v280 = (char *)&v221 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v279 = (char *)&v221 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v54 = (char *)&v221 - v53;
  uint64_t v55 = MEMORY[0x1F4188790](v52);
  uint64_t v57 = (char *)&v221 - v56;
  uint64_t v58 = MEMORY[0x1F4188790](v55);
  uint64_t v60 = (char *)&v221 - v59;
  uint64_t v61 = MEMORY[0x1F4188790](v58);
  long long v63 = (char *)&v221 - v62;
  uint64_t v64 = MEMORY[0x1F4188790](v61);
  uint64_t v66 = (char *)&v221 - v65;
  MEMORY[0x1F4188790](v64);
  uint64_t v68 = (char *)&v221 - v67;
  uint64_t v69 = a1[3];
  uint64_t v310 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v69);
  sub_1A550C9B4();
  uint64_t v70 = v311;
  sub_1A56D61A8();
  if (v70)
  {
LABEL_51:
    uint64_t v208 = (uint64_t)v310;
    return __swift_destroy_boxed_opaque_existential_0Tm(v208);
  }
  uint64_t v222 = v66;
  uint64_t v225 = v60;
  v223 = v63;
  uint64_t v224 = v54;
  v226 = v57;
  uint64_t v71 = v304;
  uint64_t v72 = v305;
  uint64_t v311 = 0;
  v227 = v68;
  uint64_t v73 = v309;
  uint64_t v74 = v312;
  uint64_t v75 = sub_1A56D5D78();
  uint64_t v76 = (char *)v75;
  if (*(void *)(v75 + 16) != 1)
  {
    uint64_t v80 = sub_1A56D5A78();
    swift_allocError();
    uint64_t v82 = v81;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    uint64_t *v82 = v306;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v80 - 8) + 104))(v82, *MEMORY[0x1E4FBBA70], v80);
    swift_willThrow();
LABEL_50:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
    goto LABEL_51;
  }
  switch(*(unsigned char *)(v75 + 32))
  {
    case 1:
      LOBYTE(v319) = 1;
      sub_1A550D1DC();
      uint64_t v83 = v284;
      uint64_t v84 = v311;
      sub_1A56D5C88();
      if (v84) {
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v251 + 8))(v83, v252);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
      uint64_t v79 = (uint64_t)v227;
      goto LABEL_35;
    case 2:
      LOBYTE(v319) = 2;
      sub_1A550D188();
      long long v85 = v285;
      uint64_t v86 = v311;
      sub_1A56D5C88();
      if (v86) {
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v255 + 8))(v85, v256);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
      uint64_t v79 = (uint64_t)v227;
      goto LABEL_35;
    case 3:
      LOBYTE(v319) = 3;
      sub_1A550D134();
      uint64_t v87 = v286;
      uint64_t v88 = v311;
      sub_1A56D5C88();
      if (v88) {
        goto LABEL_50;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      sub_1A54E40A8(&qword_1E9671030, &qword_1E9670D10);
      uint64_t v89 = v222;
      uint64_t v90 = v257;
      sub_1A56D5D48();
      uint64_t v91 = v308;
      (*(void (**)(char *, uint64_t))(v235 + 8))(v87, v90);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v74, v73);
      goto LABEL_71;
    case 4:
      LOBYTE(v319) = 4;
      sub_1A550D0E0();
      uint64_t v92 = v311;
      sub_1A56D5C88();
      if (v92) {
        goto LABEL_50;
      }
      LOBYTE(v319) = 0;
      sub_1A550D36C();
      uint64_t v89 = v223;
      sub_1A56D5D48();
      uint64_t v93 = v308;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48);
      uint64_t v311 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      LOBYTE(v319) = 1;
      sub_1A54E40A8(&qword_1E9671028, &qword_1E9670D00);
      uint64_t v152 = v276;
      uint64_t v153 = v298;
      uint64_t v154 = v311;
      sub_1A56D5D48();
      unint64_t v155 = &v269;
      if (v154) {
        goto LABEL_64;
      }
      (*(void (**)(char *, uint64_t))(v237 + 8))(v153, v152);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v73);
      goto LABEL_71;
    case 5:
      LOBYTE(v319) = 5;
      sub_1A550D08C();
      uint64_t v94 = v287;
      uint64_t v95 = v311;
      sub_1A56D5C88();
      if (v95) {
        goto LABEL_50;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      sub_1A54E40A8(&qword_1E9671030, &qword_1E9670D10);
      uint64_t v96 = v258;
      sub_1A56D5D48();
      uint64_t v97 = v308;
      (*(void (**)(char *, uint64_t))(v236 + 8))(v94, v96);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v74, v73);
      uint64_t v156 = v225;
      goto LABEL_77;
    case 6:
      LOBYTE(v319) = 6;
      sub_1A550CFE4();
      uint64_t v98 = v311;
      sub_1A56D5C88();
      if (v98) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v99 = v226;
      uint64_t v100 = v259;
      sub_1A56D5D48();
      uint64_t v101 = v308;
      uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v158 = (uint64_t)&v99[*(int *)(v157 + 48)];
      LOBYTE(v319) = 1;
      sub_1A550D3C0();
      sub_1A56D5D48();
      uint64_t v159 = v238;
      uint64_t v311 = v158;
      LOBYTE(v319) = 2;
      uint64_t v189 = sub_1A56D5CF8();
      v305 = v76;
      uint64_t v209 = (uint64_t *)&v226[*(int *)(v157 + 64)];
      *uint64_t v209 = v189;
      v209[1] = v210;
      type metadata accessor for SFAirDrop.DeclineAction();
      LOBYTE(v319) = 3;
      sub_1A550CAB0(&qword_1E9671038, (void (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction);
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v295, v100);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v74, v73);
      uint64_t v156 = v226;
      goto LABEL_77;
    case 7:
      LOBYTE(v319) = 7;
      sub_1A550CF90();
      uint64_t v102 = v289;
      uint64_t v103 = v311;
      sub_1A56D5C88();
      if (v103) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v104 = (uint64_t)v224;
      sub_1A56D5D48();
      v305 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      uint64_t v160 = (char *)(v104 + *((int *)v305 + 12));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      uint64_t v311 = 0;
      LOBYTE(v319) = 1;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      uint64_t v307 = v160;
      uint64_t v161 = v311;
      sub_1A56D5D48();
      if (v161)
      {
        (*(void (**)(char *, uint64_t))(v231 + 8))(v102, v274);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
        goto LABEL_60;
      }
      LOBYTE(v319) = 2;
      uint64_t v190 = v274;
      sub_1A56D5D18();
      uint64_t v191 = v308;
      uint64_t v211 = *((int *)v305 + 16);
      uint64_t v311 = 0;
      *(void *)&v224[v211] = v212;
      type metadata accessor for SFAirDrop.DeclineAction();
      LOBYTE(v319) = 3;
      sub_1A550CAB0(&qword_1E9671038, (void (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction);
      uint64_t v213 = v311;
      sub_1A56D5D48();
      if (v213)
      {
        (*(void (**)(char *, uint64_t))(v231 + 8))(v102, v190);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v74, v73);
        swift_bridgeObjectRelease();
        uint64_t v184 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
        v185 = &v256;
        goto LABEL_75;
      }
      (*(void (**)(char *, uint64_t))(v231 + 8))(v102, v190);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v74, v73);
      uint64_t v156 = v224;
      goto LABEL_77;
    case 8:
      LOBYTE(v319) = 8;
      sub_1A550CF3C();
      uint64_t v105 = v311;
      sub_1A56D5C88();
      if (v105) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v106 = v261;
      sub_1A56D5D48();
      uint64_t v107 = v308;
      uint64_t v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      LOBYTE(v319) = 1;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      sub_1A56D5D48();
      v305 = v76;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      LOBYTE(v319) = 2;
      sub_1A54E40A8(&qword_1E9671030, &qword_1E9670D10);
      uint64_t v192 = v296;
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v233 + 8))(v192, v106);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v74, v73);
      uint64_t v156 = v279;
      goto LABEL_77;
    case 9:
      LOBYTE(v319) = 9;
      sub_1A550CEE8();
      uint64_t v108 = v311;
      sub_1A56D5C88();
      if (v108) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v109 = v262;
      sub_1A56D5D48();
      uint64_t v110 = v308;
      uint64_t v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      LOBYTE(v319) = 1;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      sub_1A56D5D48();
      v305 = v76;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      LOBYTE(v319) = 2;
      sub_1A54E40A8(&qword_1E9671030, &qword_1E9670D10);
      unint64_t v193 = v297;
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v234 + 8))(v193, v109);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v74, v73);
      uint64_t v156 = v280;
      goto LABEL_77;
    case 0xA:
      LOBYTE(v319) = 10;
      sub_1A550CE94();
      uint64_t v111 = v311;
      sub_1A56D5C88();
      if (v111) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v104 = (uint64_t)v271;
      sub_1A56D5D48();
      uint64_t v112 = v308;
      v305 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      uint64_t v162 = (char *)(v104 + *((int *)v305 + 12));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      uint64_t v311 = 0;
      LOBYTE(v319) = 1;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      uint64_t v307 = v162;
      v163 = v299;
      uint64_t v164 = v311;
      sub_1A56D5D48();
      if (!v164)
      {
        LOBYTE(v319) = 2;
        uint64_t v194 = v275;
        sub_1A56D5D18();
        uint64_t v195 = v194;
        uint64_t v215 = v214;
        uint64_t v216 = *((int *)v305 + 16);
        (*(void (**)(char *, uint64_t))(v239 + 8))(v163, v195);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v112 + 8))(v74, v73);
        uint64_t v187 = (uint64_t *)v271;
        *(void *)&v271[v216] = v215;
LABEL_67:
        swift_storeEnumTagMultiPayload();
        uint64_t v217 = (uint64_t)v187;
        goto LABEL_78;
      }
      (*(void (**)(char *, uint64_t))(v239 + 8))(v163, v275);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v74, v73);
LABEL_60:
      sub_1A54F7200(v104, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      goto LABEL_51;
    case 0xB:
      LOBYTE(v319) = 11;
      sub_1A550CE40();
      uint64_t v113 = v293;
      uint64_t v114 = v311;
      sub_1A56D5C88();
      if (v114) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v115 = v265;
      sub_1A56D5D48();
      uint64_t v116 = v308;
      v305 = v76;
      uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      LOBYTE(v319) = 1;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      sub_1A56D5D48();
      uint64_t v166 = v113;
      uint64_t v167 = v243;
      v196 = &v307[*(int *)(v165 + 64)];
      LOBYTE(v319) = 2;
      uint64_t v311 = (uint64_t)v196;
      sub_1A56D5D48();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      LOBYTE(v319) = 3;
      sub_1A54E40A8(&qword_1E9671030, &qword_1E9670D10);
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v166, v115);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v312, v309);
      uint64_t v156 = v307;
      goto LABEL_77;
    case 0xC:
      LOBYTE(v319) = 12;
      sub_1A550CDEC();
      uint64_t v117 = v290;
      uint64_t v118 = v311;
      sub_1A56D5C88();
      if (v118) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v119 = v266;
      sub_1A56D5D48();
      uint64_t v120 = v308;
      v305 = v76;
      uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      LOBYTE(v319) = 1;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      sub_1A56D5D48();
      unint64_t v169 = v117;
      uint64_t v170 = v244;
      uint64_t v197 = &v281[*(int *)(v168 + 64)];
      LOBYTE(v319) = 2;
      uint64_t v311 = (uint64_t)v197;
      sub_1A56D5D48();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      LOBYTE(v319) = 3;
      sub_1A54E40A8(&qword_1E9671030, &qword_1E9670D10);
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v170 + 8))(v169, v119);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v120 + 8))(v312, v309);
      uint64_t v156 = v281;
      goto LABEL_77;
    case 0xD:
      LOBYTE(v319) = 13;
      sub_1A550CD98();
      char v121 = v292;
      uint64_t v122 = v311;
      sub_1A56D5C88();
      if (v122) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v123 = v273;
      uint64_t v124 = v264;
      sub_1A56D5D48();
      uint64_t v125 = v308;
      v305 = v76;
      uint64_t v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      uint64_t v171 = &v123[*(int *)(v311 + 48)];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      LOBYTE(v319) = 1;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      sub_1A56D5D48();
      unint64_t v172 = v121;
      uint64_t v173 = v242;
      uint64_t v307 = v171;
      unint64_t v198 = v273;
      LOBYTE(v319) = 2;
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v172, v124);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v312, v73);
      swift_storeEnumTagMultiPayload();
      uint64_t v217 = (uint64_t)v198;
      goto LABEL_78;
    case 0xE:
      LOBYTE(v319) = 14;
      sub_1A550CD44();
      uint64_t v126 = v288;
      uint64_t v127 = v311;
      sub_1A56D5C88();
      if (v127) {
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v260 + 8))(v126, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
      uint64_t v79 = (uint64_t)v227;
      goto LABEL_35;
    case 0xF:
      LOBYTE(v319) = 15;
      sub_1A550CCF0();
      uint64_t v128 = v311;
      sub_1A56D5C88();
      if (v128) {
        goto LABEL_50;
      }
      LOBYTE(v319) = 0;
      sub_1A550D36C();
      uint64_t v89 = v253;
      sub_1A56D5D48();
      uint64_t v93 = v308;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08);
      uint64_t v311 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      LOBYTE(v319) = 1;
      sub_1A54E40A8(&qword_1E9671030, &qword_1E9670D10);
      uint64_t v152 = v277;
      uint64_t v153 = v300;
      uint64_t v174 = v311;
      sub_1A56D5D48();
      unint64_t v155 = (uint64_t *)&v273;
      if (v174) {
        goto LABEL_64;
      }
      (*(void (**)(char *, uint64_t))(v241 + 8))(v153, v152);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v73);
      goto LABEL_71;
    case 0x10:
      LOBYTE(v319) = 16;
      sub_1A550CC9C();
      uint64_t v129 = v291;
      uint64_t v130 = v311;
      sub_1A56D5C88();
      if (v130) {
        goto LABEL_50;
      }
      sub_1A550D36C();
      uint64_t v131 = v263;
      sub_1A56D5D48();
      uint64_t v132 = v308;
      (*(void (**)(char *, uint64_t))(v240 + 8))(v129, v131);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v132 + 8))(v74, v73);
      uint64_t v133 = v320;
      uint64_t v134 = v321;
      char v135 = v323;
      uint64_t v156 = v229;
      *(_OWORD *)uint64_t v229 = v319;
      *((void *)v156 + 2) = v133;
      *((void *)v156 + 3) = v134;
      *((_OWORD *)v156 + 2) = v322;
      v156[48] = v135;
      *(_OWORD *)(v156 + 56) = v324;
      goto LABEL_77;
    case 0x11:
      LOBYTE(v319) = 17;
      sub_1A550CBF4();
      uint64_t v136 = v311;
      sub_1A56D5C88();
      if (v136) {
        goto LABEL_50;
      }
      LOBYTE(v319) = 0;
      sub_1A550D36C();
      uint64_t v89 = v254;
      sub_1A56D5D48();
      uint64_t v93 = v308;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8);
      uint64_t v311 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      LOBYTE(v319) = 1;
      sub_1A54E40A8(&qword_1E9671028, &qword_1E9670D00);
      uint64_t v152 = v278;
      uint64_t v153 = v301;
      uint64_t v175 = v311;
      sub_1A56D5D48();
      unint64_t v155 = &v277;
      if (v175)
      {
LABEL_64:
        (*(void (**)(char *, uint64_t))(*(v155 - 32) + 8))(v153, v152);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v73);
        uint64_t v176 = *((void *)v89 + 7);
        unint64_t v177 = *((void *)v89 + 8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v176, v177);
        goto LABEL_51;
      }
      (*(void (**)(char *, uint64_t))(v245 + 8))(v153, v152);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v73);
LABEL_71:
      swift_storeEnumTagMultiPayload();
      uint64_t v217 = (uint64_t)v89;
      goto LABEL_78;
    case 0x12:
      LOBYTE(v319) = 18;
      sub_1A550CB4C();
      uint64_t v137 = v311;
      sub_1A56D5C88();
      if (v137) {
        goto LABEL_50;
      }
      LOBYTE(v314) = 0;
      sub_1A550D318();
      uint64_t v138 = v268;
      sub_1A56D5D48();
      uint64_t v178 = v72;
      long long v179 = v319;
      uint64_t v181 = v320;
      uint64_t v180 = v321;
      long long v302 = v322;
      uint64_t v304 = v323;
      uint64_t v182 = *((void *)&v324 + 1);
      uint64_t v307 = (char *)v324;
      char v313 = 1;
      sub_1A56D5D48();
      uint64_t v311 = 0;
      (*(void (**)(char *, uint64_t))(v246 + 8))(v178, v138);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v308 + 8))(v312, v309);
      long long v199 = v315;
      uint64_t v200 = (uint64_t)v228;
      *(_OWORD *)(v228 + 72) = v314;
      *(_OWORD *)(v200 + 8_Block_object_dispose(&a9, 8) = v199;
      long long v201 = v317;
      *(_OWORD *)(v200 + 104) = v316;
      uint64_t v202 = v318;
      *(_OWORD *)uint64_t v200 = v179;
      *(void *)(v200 + 16) = v181;
      *(void *)(v200 + 24) = v180;
      uint64_t v203 = *((void *)&v302 + 1);
      *(void *)(v200 + 32) = v302;
      *(void *)(v200 + 40) = v203;
      v204 = v307;
      *(void *)(v200 + 4_Block_object_dispose(&a9, 8) = v304;
      *(void *)(v200 + 56) = v204;
      *(void *)(v200 + 64) = v182;
      *(_OWORD *)(v200 + 120) = v201;
      *(void *)(v200 + 136) = v202;
      swift_storeEnumTagMultiPayload();
      uint64_t v79 = (uint64_t)v227;
      sub_1A54F8728(v200, (uint64_t)v227, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v205 = (uint64_t)v310;
      goto LABEL_80;
    case 0x13:
      LOBYTE(v319) = 19;
      sub_1A550CAF8();
      uint64_t v139 = v311;
      sub_1A56D5C88();
      if (v139)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
        uint64_t v208 = (uint64_t)v310;
        return __swift_destroy_boxed_opaque_existential_0Tm(v208);
      }
      v305 = v76;
      type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E9671000, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      v151 = v270;
      sub_1A56D5D48();
      uint64_t v307 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v188 = (uint64_t)&v151[*((int *)v307 + 12)];
      type metadata accessor for SFAirDropReceive.ItemDestination();
      LOBYTE(v319) = 1;
      sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
      sub_1A56D5D48();
      uint64_t v206 = v307;
      uint64_t v304 = v188;
      LOBYTE(v319) = 2;
      uint64_t v207 = sub_1A56D5CA8();
      v218 = (uint64_t *)&v151[*((int *)v206 + 16)];
      uint64_t v219 = &v151[*((int *)v206 + 20)];
      uint64_t *v218 = v207;
      v218[1] = v220;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670E70);
      LOBYTE(v319) = 3;
      sub_1A550D284(&qword_1E9671010, &qword_1E9671018);
      *(void *)&long long v302 = v219;
      sub_1A56D5D48();
      LOBYTE(v319) = 4;
      sub_1A56D5D48();
      uint64_t v311 = 0;
      LOBYTE(v319) = 5;
      sub_1A56D5D48();
      (*(void (**)(void, uint64_t))(v232 + 8))(*((void *)&v302 + 1), v282);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v308 + 8))(v312, v309);
      uint64_t v156 = v270;
      goto LABEL_77;
    case 0x14:
      LOBYTE(v319) = 20;
      sub_1A550CA5C();
      uint64_t v140 = v311;
      sub_1A56D5C88();
      if (v140) {
        goto LABEL_50;
      }
      type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      LOBYTE(v319) = 0;
      sub_1A550CAB0(&qword_1E9671000, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v141 = v272;
      uint64_t v142 = v269;
      uint64_t v143 = v302;
      sub_1A56D5D48();
      uint64_t v144 = v308;
      uint64_t v307 = &v141[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48)];
      type metadata accessor for SFAirDropReceive.Failure();
      uint64_t v311 = 0;
      LOBYTE(v319) = 1;
      sub_1A550CAB0(&qword_1E9671008, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Failure);
      uint64_t v183 = v311;
      sub_1A56D5D48();
      if (v183)
      {
        (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v143, v142);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v144 + 8))(v74, v73);
        uint64_t v184 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
        v185 = &v303;
LABEL_75:
        sub_1A54F7200(*(v185 - 32), v184);
        goto LABEL_51;
      }
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v143, v142);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v144 + 8))(v74, v73);
      uint64_t v156 = v272;
LABEL_77:
      swift_storeEnumTagMultiPayload();
      uint64_t v217 = (uint64_t)v156;
LABEL_78:
      uint64_t v79 = (uint64_t)v227;
      sub_1A54F8728(v217, (uint64_t)v227, type metadata accessor for SFAirDropReceive.Transfer.State);
LABEL_79:
      uint64_t v205 = (uint64_t)v310;
LABEL_80:
      sub_1A54F8728(v79, v303, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v208 = v205;
      break;
    case 0x15:
      LOBYTE(v319) = 21;
      sub_1A550CA08();
      uint64_t v145 = v294;
      uint64_t v146 = v311;
      sub_1A56D5C88();
      if (v146) {
        goto LABEL_50;
      }
      uint64_t v147 = v267;
      uint64_t v148 = sub_1A56D5D38();
      uint64_t v149 = v145;
      uint64_t v186 = v148;
      (*(void (**)(char *, uint64_t))(v247 + 8))(v149, v147);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
      uint64_t v187 = v230;
      uint64_t *v230 = v186;
      goto LABEL_67;
    default:
      LOBYTE(v319) = 0;
      sub_1A550D230();
      unint64_t v77 = v283;
      uint64_t v78 = v311;
      sub_1A56D5C88();
      if (v78) {
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v249 + 8))(v77, v250);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v308 + 8))(v74, v73);
      uint64_t v79 = (uint64_t)v227;
LABEL_35:
      swift_storeEnumTagMultiPayload();
      goto LABEL_79;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v208);
}

uint64_t sub_1A5504814@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.Transfer.State.init(from:)(a1, a2);
}

void sub_1A550482C(void *a1)
{
}

uint64_t SFAirDropReceive.Transfer.presenter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A550D414(v1, a1, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
}

uint64_t SFAirDropReceive.Transfer.receiveID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFAirDropReceive.Transfer(0) + 20);
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SFAirDropReceive.Transfer.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SFAirDropReceive.Transfer(0);
  return sub_1A550D414(v1 + *(int *)(v3 + 24), a1, type metadata accessor for SFAirDropReceive.Transfer.State);
}

uint64_t SFAirDropReceive.Transfer.displayPriority.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SFAirDropReceive.Transfer(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t SFAirDropReceive.Transfer.askRequest.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5505A5C(type metadata accessor for SFAirDropReceive.AskRequest, a1);
}

uint64_t SFAirDropReceive.Transfer.askResponse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SFAirDropReceive.Transfer(0);
  return sub_1A54F60EC(v1 + *(int *)(v3 + 36), a1, &qword_1E9671048);
}

uint64_t SFAirDropReceive.Transfer.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFAirDropReceive.Transfer(0) + 40);
  uint64_t v4 = sub_1A56D4C28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SFAirDropReceive.Transfer.isPreviewSensitive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.Transfer(0) + 44));
}

uint64_t SFAirDropReceive.Transfer.didAutoAccept.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.Transfer(0) + 48));
}

uint64_t SFAirDropReceive.Transfer.cancelAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SFAirDropReceive.Transfer(0);
  return sub_1A54F60EC(v1 + *(int *)(v3 + 52), a1, &qword_1E9671050);
}

uint64_t SFAirDropReceive.Transfer.activeInterfaceType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SFAirDropReceive.Transfer(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t SFAirDropReceive.Transfer.init(receiveID:startDate:state:displayPriority:askRequest:isPreviewSensitive:askResponse:didAutoAccept:cancelAction:activeInterfaceType:presenter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char *a11, uint64_t a12)
{
  char v18 = *a4;
  char v26 = *a11;
  sub_1A54F8728(a12, a9, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
  uint64_t v19 = (int *)type metadata accessor for SFAirDropReceive.Transfer(0);
  uint64_t v20 = a9 + v19[5];
  uint64_t v21 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a1, v21);
  uint64_t v22 = a9 + v19[10];
  uint64_t v23 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a2, v23);
  sub_1A54F8728(a3, a9 + v19[6], type metadata accessor for SFAirDropReceive.Transfer.State);
  *(unsigned char *)(a9 + v19[7]) = v18;
  sub_1A54F8728(a5, a9 + v19[8], type metadata accessor for SFAirDropReceive.AskRequest);
  sub_1A550D4D4(a7, a9 + v19[9], &qword_1E9671048);
  *(unsigned char *)(a9 + v19[11]) = a6;
  *(unsigned char *)(a9 + v19[12]) = a8;
  uint64_t result = sub_1A550D4D4(a10, a9 + v19[13], &qword_1E9671050);
  *(unsigned char *)(a9 + v19[14]) = v26;
  return result;
}

uint64_t SFAirDropReceive.Transfer.update(state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = (int *)type metadata accessor for SFAirDropReceive.Transfer(0);
  char v12 = *(unsigned char *)(v2 + v11[12]);
  sub_1A550D414(a1, (uint64_t)v10, type metadata accessor for SFAirDropReceive.Transfer.State);
  if (v12)
  {
    char v13 = 1;
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    char v13 = _s7Sharing16SFAirDropReceiveO8TransferV5StateO2eeoiySbAG_AGtFZ_0((uint64_t)v10, (uint64_t)v8);
    sub_1A54F7200((uint64_t)v8, type metadata accessor for SFAirDropReceive.Transfer.State);
  }
  sub_1A54F7200((uint64_t)v10, type metadata accessor for SFAirDropReceive.Transfer.State);
  uint64_t v14 = v11[5];
  uint64_t v15 = v2 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, v15, v17);
  uint64_t v18 = v11[10];
  uint64_t v19 = v2 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v19, v21);
  sub_1A550D414(a1, a2 + v11[6], type metadata accessor for SFAirDropReceive.Transfer.State);
  char v22 = *(unsigned char *)(v2 + v11[7]);
  sub_1A550D414(v2 + v11[8], a2 + v11[8], type metadata accessor for SFAirDropReceive.AskRequest);
  LOBYTE(v19) = *(unsigned char *)(v2 + v11[11]);
  sub_1A54F60EC(v2 + v11[9], a2 + v11[9], &qword_1E9671048);
  sub_1A54F60EC(v2 + v11[13], a2 + v11[13], &qword_1E9671050);
  LOBYTE(v20) = *(unsigned char *)(v2 + v11[14]);
  uint64_t result = sub_1A550D414(v2, a2, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
  *(unsigned char *)(a2 + v11[7]) = v22;
  *(unsigned char *)(a2 + v11[11]) = v19;
  *(unsigned char *)(a2 + v11[12]) = v13 & 1;
  *(unsigned char *)(a2 + v11[14]) = v20;
  return result;
}

uint64_t SFAirDropReceive.Transfer.update(displayPriority:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  char v5 = *a1;
  uint64_t v6 = (int *)type metadata accessor for SFAirDropReceive.Transfer(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = v3 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  uint64_t v11 = v6[10];
  uint64_t v12 = v3 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, v12, v14);
  sub_1A550D414(v3 + v6[6], a2 + v6[6], type metadata accessor for SFAirDropReceive.Transfer.State);
  sub_1A550D414(v3 + v6[8], a2 + v6[8], type metadata accessor for SFAirDropReceive.AskRequest);
  LOBYTE(v12) = *(unsigned char *)(v3 + v6[11]);
  sub_1A54F60EC(v3 + v6[9], a2 + v6[9], &qword_1E9671048);
  LOBYTE(v13) = *(unsigned char *)(v3 + v6[12]);
  sub_1A54F60EC(v3 + v6[13], a2 + v6[13], &qword_1E9671050);
  char v15 = *(unsigned char *)(v3 + v6[14]);
  uint64_t result = sub_1A550D414(v3, a2, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
  *(unsigned char *)(a2 + v6[7]) = v5;
  *(unsigned char *)(a2 + v6[11]) = v12;
  *(unsigned char *)(a2 + v6[12]) = v13;
  *(unsigned char *)(a2 + v6[14]) = v15;
  return result;
}

uint64_t SFAirDropReceive.Transfer.update(cancelAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = (int *)type metadata accessor for SFAirDropReceive.Transfer(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = v3 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  uint64_t v11 = v6[10];
  uint64_t v12 = v3 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, v12, v14);
  sub_1A550D414(v3 + v6[6], a2 + v6[6], type metadata accessor for SFAirDropReceive.Transfer.State);
  LOBYTE(v13) = *(unsigned char *)(v3 + v6[7]);
  sub_1A550D414(v3 + v6[8], a2 + v6[8], type metadata accessor for SFAirDropReceive.AskRequest);
  char v15 = *(unsigned char *)(v3 + v6[11]);
  sub_1A54F60EC(v3 + v6[9], a2 + v6[9], &qword_1E9671048);
  char v16 = *(unsigned char *)(v3 + v6[12]);
  uint64_t v17 = a2 + v6[13];
  sub_1A550D414(a1, v17, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
  uint64_t v18 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  LOBYTE(a1) = *(unsigned char *)(v3 + v6[14]);
  uint64_t result = sub_1A550D414(v3, a2, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
  *(unsigned char *)(a2 + v6[7]) = v13;
  *(unsigned char *)(a2 + v6[11]) = v15;
  *(unsigned char *)(a2 + v6[12]) = v16;
  *(unsigned char *)(a2 + v6[14]) = a1;
  return result;
}

uint64_t SFAirDropReceive.Transfer.update(activeInterfaceType:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  char v5 = *a1;
  uint64_t v6 = (int *)type metadata accessor for SFAirDropReceive.Transfer(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = v3 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  uint64_t v11 = v6[10];
  uint64_t v12 = v3 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, v12, v14);
  sub_1A550D414(v3 + v6[6], a2 + v6[6], type metadata accessor for SFAirDropReceive.Transfer.State);
  LOBYTE(v12) = *(unsigned char *)(v3 + v6[7]);
  sub_1A550D414(v3 + v6[8], a2 + v6[8], type metadata accessor for SFAirDropReceive.AskRequest);
  LOBYTE(v13) = *(unsigned char *)(v3 + v6[11]);
  sub_1A54F60EC(v3 + v6[9], a2 + v6[9], &qword_1E9671048);
  char v15 = *(unsigned char *)(v3 + v6[12]);
  sub_1A54F60EC(v3 + v6[13], a2 + v6[13], &qword_1E9671050);
  uint64_t result = sub_1A550D414(v3, a2, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
  *(unsigned char *)(a2 + v6[7]) = v12;
  *(unsigned char *)(a2 + v6[11]) = v13;
  *(unsigned char *)(a2 + v6[12]) = v15;
  *(unsigned char *)(a2 + v6[14]) = v5;
  return result;
}

uint64_t SFAirDropReceive.Transfer.update(askResponse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AskResponse();
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(a1, 1, v9);
  uint64_t v11 = (int *)type metadata accessor for SFAirDropReceive.Transfer(0);
  if (v10 == 1) {
    sub_1A550D414(v3 + v11[6], (uint64_t)v8, type metadata accessor for SFAirDropReceive.Transfer.State);
  }
  else {
    SFAirDropReceive.Transfer.State.answeredPermissionRequest()((uint64_t)v8);
  }
  type metadata accessor for SFAirDropReceive.Transfer(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = v3 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
  uint64_t v16 = v11[10];
  uint64_t v17 = v3 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v17, v19);
  LOBYTE(v17) = *(unsigned char *)(v3 + v11[7]);
  sub_1A550D414(v3 + v11[8], a2 + v11[8], type metadata accessor for SFAirDropReceive.AskRequest);
  LOBYTE(v1_Block_object_dispose(&a9, 8) = *(unsigned char *)(v3 + v11[11]);
  sub_1A54F60EC(a1, a2 + v11[9], &qword_1E9671048);
  char v20 = *(unsigned char *)(v3 + v11[12]);
  sub_1A54F60EC(v3 + v11[13], a2 + v11[13], &qword_1E9671050);
  char v21 = *(unsigned char *)(v3 + v11[14]);
  sub_1A550D414(v3, a2, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
  uint64_t result = sub_1A54F8728((uint64_t)v8, a2 + v11[6], type metadata accessor for SFAirDropReceive.Transfer.State);
  *(unsigned char *)(a2 + v11[7]) = v17;
  *(unsigned char *)(a2 + v11[11]) = v18;
  *(unsigned char *)(a2 + v11[12]) = v20;
  *(unsigned char *)(a2 + v11[14]) = v21;
  return result;
}

uint64_t SFAirDropReceive.Transfer.State.answeredPermissionRequest()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  MEMORY[0x1F4188790](v3);
  char v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v1, (uint64_t)v8, type metadata accessor for SFAirDropReceive.Transfer.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload)
  {
    sub_1A550D414(v1, a1, type metadata accessor for SFAirDropReceive.Transfer.State);
    return sub_1A54F7200((uint64_t)v8, type metadata accessor for SFAirDropReceive.Transfer.State);
  }
  else
  {
    sub_1A550D4D4((uint64_t)v8, (uint64_t)v5, &qword_1E9670D10);
    uint64_t v10 = sub_1A56D4CB8();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, v5, v10);
    uint64_t v11 = v3[14];
    uint64_t v12 = &v5[v11];
    uint64_t v13 = a1 + v11;
    uint64_t v14 = sub_1A56D4C28();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v13, v12, v14);
    sub_1A54F60EC((uint64_t)&v5[v3[15]], a1 + v3[15], &qword_1E9670D58);
    *(unsigned char *)(a1 + v3[13]) = 1;
    sub_1A54E4D44((uint64_t)v5, &qword_1E9670D10);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t SFAirDropReceive.Transfer.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5505A5C((uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier, a1);
}

uint64_t sub_1A5505A5C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer(0);
  return sub_1A550D414(v2 + *(int *)(v5 + 32), a2, a1);
}

unint64_t sub_1A5505AA4(char a1)
{
  unint64_t result = 0x65746E6573657270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4965766965636572;
      break;
    case 2:
      unint64_t result = 0x6574617473;
      break;
    case 3:
      unint64_t result = 0x5079616C70736964;
      break;
    case 4:
      unint64_t result = 0x65757165526B7361;
      break;
    case 5:
      unint64_t result = 0x6F707365526B7361;
      break;
    case 6:
      unint64_t result = 0x7461447472617473;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x416F747541646964;
      break;
    case 9:
      unint64_t result = 0x63416C65636E6163;
      break;
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5505C3C()
{
  return sub_1A5505AA4(*v0);
}

uint64_t sub_1A5505C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5536EF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5505C6C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1A5505C78(uint64_t a1)
{
  unint64_t v2 = sub_1A550D538();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5505CB4(uint64_t a1)
{
  unint64_t v2 = sub_1A550D538();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropReceive.Transfer.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671058);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A550D538();
  sub_1A56D61D8();
  v11[15] = 0;
  type metadata accessor for SFAirDropClient.Identifier();
  sub_1A550CAB0(&qword_1E9671068, (void (*)(uint64_t))type metadata accessor for SFAirDropClient.Identifier);
  sub_1A56D5E38();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer(0);
    v11[14] = 1;
    sub_1A56D4CB8();
    sub_1A550CAB0(&qword_1E966C7D8, MEMORY[0x1E4F27990]);
    sub_1A56D5E38();
    v11[13] = 2;
    type metadata accessor for SFAirDropReceive.Transfer.State(0);
    sub_1A550CAB0(&qword_1E9671070, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Transfer.State);
    sub_1A56D5E38();
    v11[12] = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    v11[11] = 3;
    sub_1A550D58C();
    sub_1A56D5E38();
    v11[10] = 4;
    type metadata accessor for SFAirDropReceive.AskRequest(0);
    sub_1A550CAB0(&qword_1E9671080, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.AskRequest);
    sub_1A56D5E38();
    v11[9] = 5;
    type metadata accessor for SFAirDropReceive.AskResponse();
    sub_1A550CAB0(&qword_1E9671088, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.AskResponse);
    sub_1A56D5DD8();
    v11[8] = 6;
    sub_1A56D4C28();
    sub_1A550CAB0(&qword_1E9670478, MEMORY[0x1E4F27928]);
    sub_1A56D5E38();
    v11[7] = 7;
    sub_1A56D5DF8();
    v11[6] = 8;
    sub_1A56D5DF8();
    v11[5] = 9;
    type metadata accessor for SFAirDrop.DeclineAction();
    sub_1A550CAB0(&qword_1E9670F00, (void (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction);
    sub_1A56D5DD8();
    void v11[4] = *(unsigned char *)(v3 + *(int *)(v9 + 56));
    v11[3] = 10;
    sub_1A550D5E0();
    sub_1A56D5DD8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SFAirDropReceive.Transfer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v36 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1A56D4C28();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v41);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1A56D4CB8();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDropClient.Identifier();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671098);
  uint64_t v18 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  char v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (int *)type metadata accessor for SFAirDropReceive.Transfer(0);
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (uint64_t)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1A550D538();
  uint64_t v42 = v20;
  uint64_t v23 = v49;
  sub_1A56D61A8();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v48);
  }
  uint64_t v49 = v18;
  char v64 = 0;
  sub_1A550CAB0(&qword_1E96710A0, (void (*)(uint64_t))type metadata accessor for SFAirDropClient.Identifier);
  sub_1A56D5D48();
  uint64_t v24 = (uint64_t)v17;
  uint64_t v25 = v50;
  sub_1A54F8728(v24, v50, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
  char v63 = 1;
  sub_1A550CAB0(&qword_1E966C888, MEMORY[0x1E4F27990]);
  char v26 = v14;
  uint64_t v27 = v47;
  sub_1A56D5D48();
  uint64_t v28 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v25 + v51[5], v26, v27);
  char v62 = 2;
  sub_1A550CAB0(&qword_1E96710A8, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.Transfer.State);
  sub_1A56D5D48();
  sub_1A54F8728((uint64_t)v11, v25 + v28[6], type metadata accessor for SFAirDropReceive.Transfer.State);
  char v60 = 3;
  sub_1A550D634();
  sub_1A56D5D48();
  *(unsigned char *)(v25 + v28[7]) = v61;
  char v59 = 4;
  sub_1A550CAB0(&qword_1E96710B8, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.AskRequest);
  uint64_t v29 = (uint64_t)v39;
  sub_1A56D5D48();
  sub_1A54F8728(v29, v25 + v28[8], type metadata accessor for SFAirDropReceive.AskRequest);
  type metadata accessor for SFAirDropReceive.AskResponse();
  char v58 = 5;
  sub_1A550CAB0(&qword_1E96710C0, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.AskResponse);
  uint64_t v30 = (uint64_t)v38;
  sub_1A56D5CE8();
  sub_1A550D4D4(v30, v25 + v28[9], &qword_1E9671048);
  char v57 = 6;
  sub_1A550CAB0(&qword_1E9670500, MEMORY[0x1E4F27928]);
  uint64_t v31 = v37;
  uint64_t v32 = v45;
  sub_1A56D5D48();
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v25 + v28[10], v31, v32);
  char v56 = 7;
  *(unsigned char *)(v25 + v28[11]) = sub_1A56D5D08() & 1;
  char v55 = 8;
  *(unsigned char *)(v25 + v28[12]) = sub_1A56D5D08() & 1;
  type metadata accessor for SFAirDrop.DeclineAction();
  char v54 = 9;
  sub_1A550CAB0(&qword_1E9671038, (void (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction);
  sub_1A56D5CE8();
  sub_1A550D4D4(v36, v50 + v51[13], &qword_1E9671050);
  char v52 = 10;
  sub_1A550D688();
  sub_1A56D5CE8();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v43);
  uint64_t v33 = v50;
  *(unsigned char *)(v50 + v51[14]) = v53;
  sub_1A550D414(v33, v35, type metadata accessor for SFAirDropReceive.Transfer);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v48);
  return sub_1A54F7200(v33, type metadata accessor for SFAirDropReceive.Transfer);
}

uint64_t sub_1A5506DE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.Transfer.init(from:)(a1, a2);
}

uint64_t sub_1A5506DF8(void *a1)
{
  return SFAirDropReceive.Transfer.encode(to:)(a1);
}

uint64_t sub_1A5506E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A550D414(v2 + *(int *)(a1 + 32), a2, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
}

BOOL SFAirDropReceive.Transfer.State.completedSuccessfully.getter()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A550D414(v0, (uint64_t)v3, type metadata accessor for SFAirDropReceive.Transfer.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.State;
  if (EnumCaseMultiPayload == 15)
  {
    uint64_t v6 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48)];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A54F7200(v6, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
    uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
  }
  sub_1A54F7200((uint64_t)v3, v5);
  return EnumCaseMultiPayload == 15;
}

uint64_t SFAirDropReceive.Transfer.State.sameCase(as:)(uint64_t a1)
{
  uint64_t v136 = (char *)a1;
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v130 = (uint64_t)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v131 = (uint64_t)&v121 - v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v134 = (uint64_t)&v121 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v129 = (uint64_t)&v121 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v133 = (uint64_t)&v121 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v126 = (uint64_t)&v121 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v132 = (uint64_t)&v121 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v122 = (uint64_t)&v121 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v128 = (uint64_t)&v121 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v125 = (uint64_t)&v121 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v127 = (uint64_t)&v121 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v124 = (uint64_t)&v121 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v121 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v121 = (uint64_t)&v121 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)&v121 - v32;
  uint64_t v34 = MEMORY[0x1F4188790](v31);
  uint64_t v123 = (uint64_t)&v121 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)&v121 - v37;
  uint64_t v39 = MEMORY[0x1F4188790](v36);
  uint64_t v41 = (char *)&v121 - v40;
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v44 = (char *)&v121 - v43;
  uint64_t v45 = MEMORY[0x1F4188790](v42);
  uint64_t v47 = (char *)&v121 - v46;
  uint64_t v48 = MEMORY[0x1F4188790](v45);
  uint64_t v50 = (char *)&v121 - v49;
  uint64_t v51 = MEMORY[0x1F4188790](v48);
  char v53 = (char *)&v121 - v52;
  MEMORY[0x1F4188790](v51);
  char v55 = (char *)&v121 - v54;
  sub_1A550D414((uint64_t)v136, (uint64_t)&v121 - v54, type metadata accessor for SFAirDropReceive.Transfer.State);
  uint64_t v136 = v55;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v57 = (uint64_t)v136;
      uint64_t v58 = *((void *)v136 + 7);
      unint64_t v59 = *((void *)v136 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v58, v59);
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48);
      uint64_t v61 = v57 + *(int *)(v60 + 48);
      sub_1A550D414(v135, (uint64_t)v41, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v62 = *((void *)v41 + 7);
        unint64_t v63 = *((void *)v41 + 8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v62, v63);
        uint64_t v64 = (uint64_t)&v41[*(int *)(v60 + 48)];
        goto LABEL_32;
      }
      uint64_t v114 = (uint64_t)v41;
      goto LABEL_65;
    case 2u:
      sub_1A550D414(v135, (uint64_t)v38, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v65 = &qword_1E9670D10;
        sub_1A54E4D44((uint64_t)v38, &qword_1E9670D10);
        uint64_t v66 = (uint64_t)v136;
        goto LABEL_34;
      }
      uint64_t v56 = (uint64_t)v38;
      goto LABEL_57;
    case 3u:
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v68 = (uint64_t)v136;
      sub_1A54F7390(*(void *)&v136[*(int *)(v67 + 48)], *(void *)&v136[*(int *)(v67 + 48) + 8], *(void *)&v136[*(int *)(v67 + 48) + 16]);
      swift_bridgeObjectRelease();
      uint64_t v69 = v68 + *(int *)(v67 + 80);
      uint64_t v70 = v123;
      sub_1A550D414(v135, v123, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1A54F7390(*(void *)(v70 + *(int *)(v67 + 48)), *(void *)(v70 + *(int *)(v67 + 48) + 8), *(void *)(v70 + *(int *)(v67 + 48) + 16));
        swift_bridgeObjectRelease();
        uint64_t v71 = v70 + *(int *)(v67 + 80);
        uint64_t v72 = type metadata accessor for SFAirDrop.DeclineAction;
        sub_1A54F7200(v71, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        uint64_t v73 = type metadata accessor for SFAirDropReceive.ItemDestination;
        goto LABEL_46;
      }
      sub_1A54F7200(v70, type metadata accessor for SFAirDropReceive.Transfer.State);
      sub_1A54F7200(v69, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      goto LABEL_23;
    case 4u:
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      uint64_t v75 = (uint64_t)v136;
      swift_bridgeObjectRelease();
      uint64_t v76 = v75 + *(int *)(v74 + 80);
      sub_1A550D414(v135, (uint64_t)v33, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        swift_bridgeObjectRelease();
        sub_1A54F7200((uint64_t)&v33[*(int *)(v74 + 80)], (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        sub_1A54F7200((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        sub_1A54F7200(v76, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        uint64_t v77 = v75;
        uint64_t v78 = type metadata accessor for SFAirDropReceive.ItemDestination;
        goto LABEL_48;
      }
      sub_1A54F7200((uint64_t)v33, type metadata accessor for SFAirDropReceive.Transfer.State);
      sub_1A54F7200(v76, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      uint64_t v115 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      uint64_t v116 = v75;
      goto LABEL_71;
    case 5u:
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      uint64_t v68 = (uint64_t)v136;
      swift_bridgeObjectRelease();
      uint64_t v80 = v68 + *(int *)(v79 + 64);
      uint64_t v81 = v121;
      sub_1A550D414(v135, v121, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_22;
      }
      goto LABEL_15;
    case 6u:
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      uint64_t v68 = (uint64_t)v136;
      swift_bridgeObjectRelease();
      uint64_t v80 = v68 + *(int *)(v79 + 64);
      uint64_t v81 = v125;
      sub_1A550D414(v135, v125, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_22;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v82 = *(int *)(v79 + 64);
      goto LABEL_20;
    case 7u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      uint64_t v83 = (uint64_t)v136;
      swift_bridgeObjectRelease();
      sub_1A550D414(v135, (uint64_t)v28, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        swift_bridgeObjectRelease();
        uint64_t v84 = (uint64_t)v28;
        goto LABEL_26;
      }
      uint64_t v117 = (uint64_t)v28;
      goto LABEL_62;
    case 8u:
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      uint64_t v68 = (uint64_t)v136;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v80 = v68 + *(int *)(v85 + 80);
      uint64_t v81 = v124;
      sub_1A550D414(v135, v124, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 8) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 9u:
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      uint64_t v68 = (uint64_t)v136;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v80 = v68 + *(int *)(v85 + 80);
      uint64_t v81 = v127;
      sub_1A550D414(v135, v127, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v82 = *(int *)(v85 + 80);
LABEL_20:
        sub_1A54E4D44(v81 + v82, &qword_1E9670D10);
        uint64_t v86 = type metadata accessor for SFAirDropReceive.ItemDestination;
        sub_1A54F7200(v81, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        sub_1A54E4D44(v80, &qword_1E9670D10);
        goto LABEL_47;
      }
LABEL_22:
      sub_1A54F7200(v81, type metadata accessor for SFAirDropReceive.Transfer.State);
      sub_1A54E4D44(v80, &qword_1E9670D10);
LABEL_23:
      uint64_t v87 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_70;
    case 0xAu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      uint64_t v83 = (uint64_t)v136;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v88 = v128;
      sub_1A550D414(v135, v128, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v84 = v88;
LABEL_26:
        sub_1A54F7200(v84, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        uint64_t v77 = v83;
        uint64_t v78 = type metadata accessor for SFAirDropReceive.ItemDestination;
        goto LABEL_48;
      }
      uint64_t v117 = v88;
LABEL_62:
      sub_1A54F7200(v117, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v115 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
      uint64_t v116 = v83;
      goto LABEL_71;
    case 0xBu:
      uint64_t v89 = (uint64_t)v136;
      uint64_t v90 = *((void *)v136 + 7);
      unint64_t v91 = *((void *)v136 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v90, v91);
      uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08);
      uint64_t v61 = v89 + *(int *)(v92 + 48);
      uint64_t v93 = v132;
      sub_1A550D414(v135, v132, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        uint64_t v94 = *(void *)(v93 + 56);
        unint64_t v95 = *(void *)(v93 + 64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v94, v95);
        uint64_t v64 = v93 + *(int *)(v92 + 48);
        uint64_t v65 = &qword_1E9670D10;
        goto LABEL_33;
      }
      sub_1A54F7200(v93, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v118 = &qword_1E9670D10;
      goto LABEL_66;
    case 0xCu:
      sub_1A54F7200((uint64_t)v136, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v96 = v126;
      sub_1A550D414(v135, v126, type metadata accessor for SFAirDropReceive.Transfer.State);
      BOOL v97 = swift_getEnumCaseMultiPayload() == 12;
      goto LABEL_37;
    case 0xDu:
      uint64_t v98 = (uint64_t)v136;
      uint64_t v99 = *((void *)v136 + 7);
      unint64_t v100 = *((void *)v136 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v99, v100);
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8);
      uint64_t v61 = v98 + *(int *)(v101 + 48);
      uint64_t v102 = v133;
      sub_1A550D414(v135, v133, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        uint64_t v103 = *(void *)(v102 + 56);
        unint64_t v104 = *(void *)(v102 + 64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v103, v104);
        uint64_t v64 = v102 + *(int *)(v101 + 48);
LABEL_32:
        uint64_t v65 = &qword_1E9670D00;
LABEL_33:
        sub_1A54E4D44(v64, v65);
        uint64_t v66 = v61;
LABEL_34:
        uint64_t v105 = v65;
        goto LABEL_35;
      }
      uint64_t v114 = v102;
LABEL_65:
      sub_1A54F7200(v114, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v118 = &qword_1E9670D00;
LABEL_66:
      sub_1A54E4D44(v61, v118);
      return 0;
    case 0xEu:
      sub_1A54F7200((uint64_t)v136, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v96 = v129;
      sub_1A550D414(v135, v129, type metadata accessor for SFAirDropReceive.Transfer.State);
      BOOL v97 = swift_getEnumCaseMultiPayload() == 14;
LABEL_37:
      BOOL v106 = v97;
      sub_1A54F7200(v96, type metadata accessor for SFAirDropReceive.Transfer.State);
      return v106;
    case 0xFu:
      uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v68 = (uint64_t)v136;
      uint64_t v69 = (uint64_t)&v136[*(int *)(v107 + 48)];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = v134;
      sub_1A550D414(v135, v134, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 15)
      {
        uint64_t v108 = v70 + *(int *)(v107 + 48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v109 = type metadata accessor for SFAirDropReceive.ItemDestination;
        uint64_t v72 = type metadata accessor for SFAirDropReceive.ItemDestination;
        uint64_t v110 = v108;
        goto LABEL_45;
      }
      sub_1A54F7200(v70, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v119 = type metadata accessor for SFAirDropReceive.ItemDestination;
      goto LABEL_69;
    case 0x10u:
      uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8);
      uint64_t v68 = (uint64_t)v136;
      uint64_t v69 = (uint64_t)&v136[*(int *)(v111 + 48)];
      uint64_t v70 = v131;
      sub_1A550D414(v135, v131, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 16)
      {
        uint64_t v110 = v70 + *(int *)(v111 + 48);
        uint64_t v109 = type metadata accessor for SFAirDropReceive.Failure;
        uint64_t v72 = type metadata accessor for SFAirDropReceive.Failure;
LABEL_45:
        sub_1A54F7200(v110, (uint64_t (*)(void))v109);
        uint64_t v73 = (uint64_t (*)())type metadata accessor for SFAirDropReceive.Transfer.Metrics;
LABEL_46:
        uint64_t v86 = v73;
        sub_1A54F7200(v70, (uint64_t (*)(void))v73);
        sub_1A54F7200(v69, (uint64_t (*)(void))v72);
LABEL_47:
        uint64_t v77 = v68;
        uint64_t v78 = v86;
LABEL_48:
        sub_1A54F7200(v77, (uint64_t (*)(void))v78);
        return 1;
      }
      sub_1A54F7200(v70, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v119 = type metadata accessor for SFAirDropReceive.Failure;
LABEL_69:
      sub_1A54F7200(v69, (uint64_t (*)(void))v119);
      uint64_t v87 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
LABEL_70:
      uint64_t v115 = v87;
      uint64_t v116 = v68;
      goto LABEL_71;
    case 0x11u:
      uint64_t v112 = v130;
      sub_1A550D414(v135, v130, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload() == 17) {
        return 1;
      }
      uint64_t v115 = type metadata accessor for SFAirDropReceive.Transfer.State;
      uint64_t v116 = v112;
LABEL_71:
      sub_1A54F7200(v116, v115);
      return 0;
    case 0x12u:
      sub_1A550D414(v135, (uint64_t)v53, type metadata accessor for SFAirDropReceive.Transfer.State);
      BOOL v106 = swift_getEnumCaseMultiPayload() == 18;
      sub_1A54F7200((uint64_t)v53, type metadata accessor for SFAirDropReceive.Transfer.State);
      return v106;
    case 0x13u:
      sub_1A550D414(v135, (uint64_t)v50, type metadata accessor for SFAirDropReceive.Transfer.State);
      BOOL v106 = swift_getEnumCaseMultiPayload() == 19;
      sub_1A54F7200((uint64_t)v50, type metadata accessor for SFAirDropReceive.Transfer.State);
      return v106;
    case 0x14u:
      sub_1A550D414(v135, (uint64_t)v47, type metadata accessor for SFAirDropReceive.Transfer.State);
      BOOL v106 = swift_getEnumCaseMultiPayload() == 20;
      sub_1A54F7200((uint64_t)v47, type metadata accessor for SFAirDropReceive.Transfer.State);
      return v106;
    case 0x15u:
      uint64_t v113 = v122;
      sub_1A550D414(v135, v122, type metadata accessor for SFAirDropReceive.Transfer.State);
      BOOL v106 = swift_getEnumCaseMultiPayload() == 21;
      sub_1A54F7200(v113, type metadata accessor for SFAirDropReceive.Transfer.State);
      return v106;
    default:
      sub_1A550D414(v135, (uint64_t)v44, type metadata accessor for SFAirDropReceive.Transfer.State);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v56 = (uint64_t)v44;
LABEL_57:
        sub_1A54F7200(v56, type metadata accessor for SFAirDropReceive.Transfer.State);
        sub_1A54E4D44((uint64_t)v136, &qword_1E9670D10);
        return 0;
      }
      else
      {
        sub_1A54E4D44((uint64_t)v44, &qword_1E9670D10);
        uint64_t v66 = (uint64_t)v136;
        uint64_t v105 = &qword_1E9670D10;
LABEL_35:
        sub_1A54E4D44(v66, v105);
        return 1;
      }
  }
}

uint64_t sub_1A5508268()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
  sub_1A54F60EC(v0 + *(int *)(v4 + 60), (uint64_t)v3, &qword_1E9670D50);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80)];
    strcpy((char *)v12, "prompt: ");
    BYTE1(v12[1]) = 0;
    WORD1(v12[1]) = 0;
    HIDWORD(v12[1]) = -402653184;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v6;
LABEL_6:
    sub_1A54F7200(v7, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
    return v10;
  }
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80)];
    strcpy((char *)v12, "alert: ");
    v12[1] = 0xE700000000000000;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v8;
    goto LABEL_6;
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "intervention: ");
  HIBYTE(v12[1]) = -18;
  uint64_t v9 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48)];
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  uint64_t v10 = v12[0];
  sub_1A54E4D44(v9, &qword_1E9671100);
  return v10;
}

uint64_t sub_1A5508524()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  sub_1A54F60EC(v0 + *(int *)(v4 + 60), (uint64_t)v3, &qword_1E9670D58);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80)];
    strcpy((char *)v12, "prompt: ");
    BYTE1(v12[1]) = 0;
    WORD1(v12[1]) = 0;
    HIDWORD(v12[1]) = -402653184;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v6;
LABEL_6:
    sub_1A54F7200(v7, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
    return v10;
  }
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80)];
    strcpy((char *)v12, "alert: ");
    v12[1] = 0xE700000000000000;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v8;
    goto LABEL_6;
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "intervention: ");
  HIBYTE(v12[1]) = -18;
  uint64_t v9 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48)];
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  uint64_t v10 = v12[0];
  sub_1A54E4D44(v9, &qword_1E96710E8);
  return v10;
}

uint64_t sub_1A55087E0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671380);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671388);
  sub_1A54F60EC(v0 + *(int *)(v4 + 60), (uint64_t)v3, &qword_1E9671380);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671390) + 80)];
    strcpy((char *)v12, "prompt: ");
    BYTE1(v12[1]) = 0;
    WORD1(v12[1]) = 0;
    HIDWORD(v12[1]) = -402653184;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v6;
LABEL_6:
    sub_1A54F7200(v7, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
    return v10;
  }
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671390) + 80)];
    strcpy((char *)v12, "alert: ");
    v12[1] = 0xE700000000000000;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v8;
    goto LABEL_6;
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "intervention: ");
  HIBYTE(v12[1]) = -18;
  uint64_t v9 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671398) + 48)];
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  uint64_t v10 = v12[0];
  sub_1A54E4D44(v9, &qword_1E96713A0);
  return v10;
}

uint64_t sub_1A5508A9C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671358);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671360);
  sub_1A54F60EC(v0 + *(int *)(v4 + 60), (uint64_t)v3, &qword_1E9671358);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671368) + 80)];
    strcpy((char *)v12, "prompt: ");
    BYTE1(v12[1]) = 0;
    WORD1(v12[1]) = 0;
    HIDWORD(v12[1]) = -402653184;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v6;
LABEL_6:
    sub_1A54F7200(v7, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
    return v10;
  }
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671368) + 80)];
    strcpy((char *)v12, "alert: ");
    v12[1] = 0xE700000000000000;
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    uint64_t v10 = v12[0];
    uint64_t v7 = (uint64_t)v8;
    goto LABEL_6;
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "intervention: ");
  HIBYTE(v12[1]) = -18;
  uint64_t v9 = (uint64_t)&v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671370) + 48)];
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  uint64_t v10 = v12[0];
  sub_1A54E4D44(v9, &qword_1E9671378);
  return v10;
}

unint64_t sub_1A5508D58()
{
  unint64_t result = qword_1E9670D78;
  if (!qword_1E9670D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670D78);
  }
  return result;
}

uint64_t _s7Sharing16SFAirDropReceiveO8TransferV5StateO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v470 = a2;
  v469 = (char *)a1;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Failure();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v445 = (uint64_t)&v425 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v446 = (uint64_t)&v425 - v5;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v444 = (uint64_t)&v425 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v450 = (uint64_t)&v425 - v9;
  uint64_t v10 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  v443 = (uint64_t *)((char *)&v425 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v447 = (unint64_t)&v425 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v454 = (uint64_t *)((char *)&v425 - v16);
  MEMORY[0x1F4188790](v15);
  v452 = (uint64_t *)((char *)&v425 - v17);
  uint64_t v18 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v451 = (uint64_t)&v425 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  unint64_t v449 = (unint64_t)&v425 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v439 = (uint64_t)&v425 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v448 = (uint64_t)&v425 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v430 = (uint64_t)&v425 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v437 = (uint64_t)&v425 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v442 = (uint64_t)&v425 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v441 = (uint64_t)&v425 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v440 = (uint64_t)&v425 - v36;
  MEMORY[0x1F4188790](v35);
  uint64_t v453 = (uint64_t)&v425 - v37;
  uint64_t v427 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
  uint64_t v38 = MEMORY[0x1F4188790](v427);
  *(void *)&long long v468 = (char *)&v425 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  *(void *)&v467[8] = (char *)&v425 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  *(void *)&v467[16] = (char *)&v425 - v43;
  MEMORY[0x1F4188790](v42);
  *(void *)v467 = (char *)&v425 - v44;
  *((void *)&v468 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  uint64_t v45 = MEMORY[0x1F4188790](*((void *)&v468 + 1));
  uint64_t v465 = (uint64_t)&v425 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  unint64_t v466 = (unint64_t)&v425 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  v436 = (char *)&v425 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  uint64_t v438 = (uint64_t)&v425 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  v428 = (char *)&v425 - v54;
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  uint64_t v429 = (uint64_t)&v425 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  uint64_t v434 = (uint64_t)&v425 - v58;
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  uint64_t v435 = (uint64_t)&v425 - v60;
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  uint64_t v432 = (uint64_t)&v425 - v62;
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  uint64_t v433 = (uint64_t)&v425 - v64;
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  uint64_t v431 = (uint64_t)&v425 - v66;
  MEMORY[0x1F4188790](v65);
  uint64_t v426 = (uint64_t)&v425 - v67;
  uint64_t v68 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  uint64_t v69 = MEMORY[0x1F4188790](v68);
  *(void *)&long long v462 = (char *)&v425 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = MEMORY[0x1F4188790](v69);
  uint64_t v463 = (uint64_t)&v425 - v72;
  uint64_t v73 = MEMORY[0x1F4188790](v71);
  uint64_t v464 = (uint64_t)&v425 - v74;
  uint64_t v75 = MEMORY[0x1F4188790](v73);
  uint64_t v77 = (char *)&v425 - v76;
  uint64_t v78 = MEMORY[0x1F4188790](v75);
  *((void *)&v460 + 1) = (char *)&v425 - v79;
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  uint64_t v82 = (char *)&v425 - v81;
  uint64_t v83 = MEMORY[0x1F4188790](v80);
  uint64_t v85 = (char *)&v425 - v84;
  uint64_t v86 = MEMORY[0x1F4188790](v83);
  uint64_t v461 = (uint64_t)&v425 - v87;
  uint64_t v88 = MEMORY[0x1F4188790](v86);
  *((void *)&v462 + 1) = (char *)&v425 - v89;
  uint64_t v90 = MEMORY[0x1F4188790](v88);
  uint64_t v455 = (uint64_t)&v425 - v91;
  uint64_t v92 = MEMORY[0x1F4188790](v90);
  unint64_t v456 = (unint64_t)&v425 - v93;
  uint64_t v94 = MEMORY[0x1F4188790](v92);
  uint64_t v459 = (uint64_t)&v425 - v95;
  uint64_t v96 = MEMORY[0x1F4188790](v94);
  uint64_t v458 = (uint64_t)&v425 - v97;
  uint64_t v98 = MEMORY[0x1F4188790](v96);
  uint64_t v457 = (uint64_t)&v425 - v99;
  uint64_t v100 = MEMORY[0x1F4188790](v98);
  *(void *)&long long v460 = (char *)&v425 - v101;
  uint64_t v102 = MEMORY[0x1F4188790](v100);
  unint64_t v104 = (char *)&v425 - v103;
  uint64_t v105 = MEMORY[0x1F4188790](v102);
  uint64_t v107 = (char *)&v425 - v106;
  MEMORY[0x1F4188790](v105);
  uint64_t v109 = (char *)&v425 - v108;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96713A8);
  uint64_t v111 = MEMORY[0x1F4188790](v110 - 8);
  uint64_t v113 = (char *)&v425 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = (uint64_t)&v113[*(int *)(v111 + 56)];
  sub_1A550D414((uint64_t)v469, (uint64_t)v113, type metadata accessor for SFAirDropReceive.Transfer.State);
  uint64_t v115 = v470;
  *(void *)&long long v470 = v114;
  sub_1A550D414(v115, v114, type metadata accessor for SFAirDropReceive.Transfer.State);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A550D414((uint64_t)v113, (uint64_t)v107, type metadata accessor for SFAirDropReceive.Transfer.State);
      *(void *)&v467[8] = *((void *)v107 + 1);
      *(void *)&long long v468 = *((void *)v107 + 3);
      unint64_t v118 = *((void *)v107 + 5);
      *((void *)&v468 + 1) = *((void *)v107 + 4);
      int v119 = v107[48];
      uint64_t v121 = *((void *)v107 + 7);
      unint64_t v120 = *((void *)v107 + 8);
      uint64_t v122 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
      uint64_t v123 = (uint64_t)&v107[v122];
      uint64_t v124 = v470;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1A54E4D44((uint64_t)&v107[v122], &qword_1E9670D00);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        uint64_t v403 = v121;
        goto LABEL_124;
      }
      v469 = v113;
      uint64_t v463 = v121;
      LODWORD(v465) = v119;
      uint64_t v464 = v120;
      unint64_t v466 = v118;
      *(void *)&long long v460 = *((void *)v107 + 2);
      uint64_t v125 = *(void *)v107;
      uint64_t v126 = *(void *)(v124 + 8);
      *(void *)&long long v462 = *(void *)v124;
      uint64_t v461 = *(void *)(v124 + 16);
      uint64_t v127 = *(void *)(v124 + 32);
      *((void *)&v460 + 1) = *(void *)(v124 + 24);
      uint64_t v128 = *(void *)(v124 + 40);
      int v129 = *(unsigned __int8 *)(v124 + 48);
      uint64_t v130 = v124 + v122;
      uint64_t v131 = *(void *)(v124 + 56);
      unint64_t v132 = *(void *)(v124 + 64);
      *((void *)&v462 + 1) = v131;
      sub_1A550D4D4(v123, *(uint64_t *)v467, &qword_1E9670D00);
      sub_1A550D4D4(v130, *(uint64_t *)&v467[16], &qword_1E9670D00);
      uint64_t v479 = v125;
      unint64_t v133 = v132;
      unint64_t v480 = *(void *)&v467[8];
      unint64_t v481 = v460;
      long long v482 = v468;
      unint64_t v483 = v466;
      LOBYTE(v484) = v465;
      *((void *)&v484 + 1) = v463;
      unint64_t v485 = v464;
      uint64_t v471 = v462;
      *(void *)&long long v472 = v126;
      *((void *)&v472 + 1) = v461;
      uint64_t v473 = *((void *)&v460 + 1);
      uint64_t v474 = v127;
      uint64_t v475 = v128;
      int v134 = v129;
      LOBYTE(v476) = v129;
      uint64_t v135 = *((void *)&v462 + 1);
      uint64_t v477 = *((void *)&v462 + 1);
      unint64_t v478 = v132;
      if ((_s7Sharing9SFAirDropO11ContactInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v479, (uint64_t)&v471) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v135, v132);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v463, v464);
        v409 = &qword_1E9670D00;
        sub_1A54E4D44(*(uint64_t *)&v467[16], &qword_1E9670D00);
        v410 = &v487;
        goto LABEL_162;
      }
      *(void *)&long long v462 = v127;
      LODWORD(v470) = v134;
      unint64_t v136 = *(void *)v467;
      uint64_t v137 = *(void *)&v467[16];
      if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) != 0
        && *(unsigned __int8 *)(v136 + *(int *)(v427 + 52)) == *(unsigned __int8 *)(v137 + *(int *)(v427 + 52))
        && (sub_1A56D4BD8() & 1) != 0)
      {
        char v138 = sub_1A564C050(v136 + *(int *)(v427 + 60), v137 + *(int *)(v427 + 60));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(*((uint64_t *)&v462 + 1), v133);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v463, v464);
        if (v138)
        {
          uint64_t v139 = &qword_1E9670D00;
          uint64_t v140 = *(void *)&v467[16];
          goto LABEL_71;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(*((uint64_t *)&v462 + 1), v133);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v463, v464);
      }
      v409 = &qword_1E9670D00;
      uint64_t v417 = *(void *)&v467[16];
      goto LABEL_170;
    case 2u:
      sub_1A550D414((uint64_t)v113, (uint64_t)v104, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v141 = v470;
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v117 = (uint64_t)v104;
        goto LABEL_112;
      }
      uint64_t v142 = v431;
      sub_1A550D4D4(v141, v431, &qword_1E9670D10);
      if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) != 0
        && v104[*(int *)(*((void *)&v468 + 1) + 52)] == *(unsigned char *)(v142 + *(int *)(*((void *)&v468 + 1) + 52))
        && (sub_1A56D4BD8() & 1) != 0
        && (sub_1A564C090((uint64_t)&v104[*(int *)(*((void *)&v468 + 1) + 60)], v142 + *(int *)(*((void *)&v468 + 1) + 60)) & 1) != 0)
      {
        sub_1A54E4D44(v142, &qword_1E9670D10);
        uint64_t v143 = (uint64_t)v104;
        goto LABEL_139;
      }
      sub_1A54E4D44(v142, &qword_1E9670D10);
      uint64_t v406 = (uint64_t)v104;
      goto LABEL_141;
    case 3u:
      v469 = v113;
      uint64_t v144 = v460;
      sub_1A550D414((uint64_t)v113, v460, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v145 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v146 = v145[12];
      uint64_t v147 = *(void *)(v144 + v146);
      uint64_t v148 = *(void *)(v144 + v146 + 8);
      unint64_t v149 = *(void *)(v144 + v146 + 16);
      *((void *)&v468 + 1) = *(void *)(v144 + v146 + 24);
      uint64_t v150 = *(void *)(v144 + v146 + 32);
      uint64_t v151 = v145[16];
      uint64_t v152 = *(void *)(v144 + v151 + 8);
      *(void *)&v467[16] = *(void *)(v144 + v151);
      uint64_t v153 = v145[20];
      *(void *)&long long v468 = v144 + v153;
      uint64_t v154 = v470;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_1A54F7200(v468, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        swift_bridgeObjectRelease();
        sub_1A54F7390(v147, v148, v149);
        v401 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
        uint64_t v402 = v144;
        goto LABEL_129;
      }
      uint64_t v464 = v147;
      uint64_t v465 = v148;
      unint64_t v466 = v149;
      *(void *)v467 = v150;
      *(void *)&v467[8] = v152;
      uint64_t v155 = v154 + v146;
      uint64_t v156 = *(void *)(v154 + v146);
      long long v462 = *(_OWORD *)(v155 + 8);
      uint64_t v157 = *(void *)(v155 + 32);
      uint64_t v463 = *(void *)(v155 + 24);
      uint64_t v158 = (uint64_t *)(v154 + v151);
      uint64_t v159 = v154 + v153;
      uint64_t v161 = *v158;
      uint64_t v160 = v158[1];
      uint64_t v162 = v154;
      uint64_t v163 = v453;
      sub_1A54F8728(v162, v453, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v164 = (uint64_t)v452;
      sub_1A54F8728(v468, (uint64_t)v452, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      uint64_t v165 = (uint64_t)v454;
      sub_1A54F8728(v159, (uint64_t)v454, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      LOBYTE(v159) = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v144, v163);
      sub_1A54F7200(v144, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if ((v159 & 1) == 0)
      {
        sub_1A54F7390(v156, v462, *((unint64_t *)&v462 + 1));
        sub_1A54F7390(v464, v465, v466);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54F7200(v165, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        sub_1A54F7200(v164, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        goto LABEL_158;
      }
      uint64_t v461 = v161;
      *(void *)&long long v470 = v160;
      uint64_t v166 = v464;
      uint64_t v167 = v465;
      uint64_t v479 = v464;
      unint64_t v480 = v465;
      unint64_t v168 = v466;
      unint64_t v481 = v466;
      *(void *)&long long v482 = *((void *)&v468 + 1);
      *((void *)&v482 + 1) = *(void *)v467;
      uint64_t v169 = v462;
      uint64_t v471 = v156;
      long long v472 = v462;
      unint64_t v170 = *((void *)&v462 + 1);
      uint64_t v473 = v463;
      uint64_t v474 = v157;
      LODWORD(v46_Block_object_dispose(&a9, 8) = _s7Sharing9SFAirDropO8ProgressO2eeoiySbAE_AEtFZ_0(&v479, &v471);
      sub_1A54F7390(v156, v169, v170);
      sub_1A54F7390(v166, v167, v168);
      if ((v468 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54F7200((uint64_t)v454, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        sub_1A54F7200((uint64_t)v452, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        v413 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
        uint64_t v414 = v453;
        goto LABEL_197;
      }
      uint64_t v113 = v469;
      uint64_t v171 = v454;
      uint64_t v172 = v453;
      if (*(_OWORD *)&v467[8] == __PAIR128__(v461, v470))
      {
        swift_bridgeObjectRelease_n();
        uint64_t v173 = v452;
      }
      else
      {
        char v420 = sub_1A56D5F28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v173 = v452;
        if ((v420 & 1) == 0)
        {
          sub_1A54F7200((uint64_t)v171, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
          sub_1A54F7200((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
          uint64_t v419 = v172;
          goto LABEL_185;
        }
      }
      char v192 = _s7Sharing9SFAirDropO13DeclineActionV2eeoiySbAE_AEtFZ_0(v173, v171);
      sub_1A54F7200((uint64_t)v171, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      sub_1A54F7200((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      sub_1A54F7200(v172, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
LABEL_99:
      sub_1A54F7200((uint64_t)v113, type metadata accessor for SFAirDropReceive.Transfer.State);
      return v192 & 1;
    case 4u:
      uint64_t v174 = (uint64_t)v113;
      uint64_t v175 = v457;
      sub_1A550D414((uint64_t)v113, v457, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v176 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      uint64_t v177 = v176[12];
      uint64_t v178 = *(void *)(v175 + v177);
      uint64_t v179 = v176[16];
      double v180 = *(double *)(v175 + v179);
      uint64_t v181 = v176[20];
      uint64_t v182 = v470;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        sub_1A54F7200(v175 + v181, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
        goto LABEL_118;
      }
      uint64_t v183 = *(void *)(v182 + v177);
      double v184 = *(double *)(v182 + v179);
      uint64_t v185 = v182 + v181;
      uint64_t v186 = v440;
      sub_1A54F8728(v182, v440, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v187 = (void *)v447;
      sub_1A54F8728(v175 + v181, v447, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      uint64_t v188 = v185;
      uint64_t v189 = v443;
      sub_1A54F8728(v188, (uint64_t)v443, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      char v190 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v175, v186);
      sub_1A54F7200(v175, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if (v190)
      {
        char v191 = sub_1A5683DD0(v178, v183);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v191 & 1) != 0 && v180 == v184)
        {
          char v192 = _s7Sharing9SFAirDropO13DeclineActionV2eeoiySbAE_AEtFZ_0(v187, v189);
          sub_1A54F7200((uint64_t)v189, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
          sub_1A54F7200((uint64_t)v187, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
          uint64_t v193 = v186;
          goto LABEL_63;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1A54F7200((uint64_t)v189, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      sub_1A54F7200((uint64_t)v187, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
      uint64_t v411 = v186;
      goto LABEL_152;
    case 5u:
      uint64_t v174 = (uint64_t)v113;
      uint64_t v175 = v458;
      sub_1A550D414((uint64_t)v113, v458, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      uint64_t v195 = *(int *)(v194 + 48);
      uint64_t v196 = *(void *)(v175 + v195);
      uint64_t v197 = *(int *)(v194 + 64);
      uint64_t v198 = v470;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v404 = v175 + v197;
        goto LABEL_117;
      }
      uint64_t v199 = *(void *)(v198 + v195);
      uint64_t v200 = v441;
      sub_1A54F8728(v198, v441, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v201 = v433;
      sub_1A550D4D4(v175 + v197, v433, &qword_1E9670D10);
      uint64_t v202 = v432;
      sub_1A550D4D4(v198 + v197, v432, &qword_1E9670D10);
      char v203 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v175, v200);
      sub_1A54F7200(v175, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if (v203)
      {
        char v204 = sub_1A5683DD0(v196, v199);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v204 & 1) != 0
          && (_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) != 0
          && *(unsigned __int8 *)(v201 + *(int *)(*((void *)&v468 + 1) + 52)) == *(unsigned __int8 *)(v202 + *(int *)(*((void *)&v468 + 1) + 52))
          && (sub_1A56D4BD8() & 1) != 0)
        {
          char v205 = sub_1A564C090(v201 + *(int *)(*((void *)&v468 + 1) + 60), v202 + *(int *)(*((void *)&v468 + 1) + 60));
          sub_1A54E4D44(v202, &qword_1E9670D10);
          uint64_t v206 = v201;
          goto LABEL_41;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1A54E4D44(v202, &qword_1E9670D10);
      uint64_t v412 = v201;
      goto LABEL_151;
    case 6u:
      uint64_t v174 = (uint64_t)v113;
      uint64_t v175 = v459;
      sub_1A550D414((uint64_t)v113, v459, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      uint64_t v208 = *(int *)(v207 + 48);
      uint64_t v209 = *(void *)(v175 + v208);
      uint64_t v210 = *(int *)(v207 + 64);
      uint64_t v211 = v470;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        uint64_t v404 = v175 + v210;
LABEL_117:
        sub_1A54E4D44(v404, &qword_1E9670D10);
LABEL_118:
        swift_bridgeObjectRelease();
        uint64_t v405 = v175;
        goto LABEL_122;
      }
      uint64_t v212 = *(void *)(v211 + v208);
      uint64_t v200 = v442;
      sub_1A54F8728(v211, v442, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v213 = v435;
      sub_1A550D4D4(v175 + v210, v435, &qword_1E9670D10);
      uint64_t v214 = v211 + v210;
      uint64_t v215 = v434;
      sub_1A550D4D4(v214, v434, &qword_1E9670D10);
      char v216 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v175, v200);
      sub_1A54F7200(v175, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if (v216)
      {
        char v217 = sub_1A5683DD0(v209, v212);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v217 & 1) != 0
          && (_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) != 0
          && *(unsigned __int8 *)(v213 + *(int *)(*((void *)&v468 + 1) + 52)) == *(unsigned __int8 *)(v215 + *(int *)(*((void *)&v468 + 1) + 52))
          && (sub_1A56D4BD8() & 1) != 0)
        {
          char v205 = sub_1A564C090(v213 + *(int *)(*((void *)&v468 + 1) + 60), v215 + *(int *)(*((void *)&v468 + 1) + 60));
          sub_1A54E4D44(v215, &qword_1E9670D10);
          uint64_t v206 = v213;
LABEL_41:
          sub_1A54E4D44(v206, &qword_1E9670D10);
          sub_1A54F7200(v200, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
          if (v205)
          {
            uint64_t v218 = v174;
            goto LABEL_108;
          }
LABEL_177:
          uint64_t v408 = v174;
LABEL_199:
          sub_1A54F7200(v408, type metadata accessor for SFAirDropReceive.Transfer.State);
LABEL_200:
          char v192 = 0;
          return v192 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1A54E4D44(v215, &qword_1E9670D10);
      uint64_t v412 = v213;
LABEL_151:
      sub_1A54E4D44(v412, &qword_1E9670D10);
      uint64_t v411 = v200;
LABEL_152:
      sub_1A54F7200(v411, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      goto LABEL_177;
    case 7u:
      uint64_t v219 = (uint64_t)v113;
      uint64_t v220 = v456;
      sub_1A550D414((uint64_t)v113, v456, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      uint64_t v222 = *(int *)(v221 + 48);
      uint64_t v223 = *(void *)(v220 + v222);
      uint64_t v224 = *(int *)(v221 + 64);
      double v225 = *(double *)(v220 + v224);
      uint64_t v226 = v470;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        swift_bridgeObjectRelease();
        sub_1A54F7200(v220, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        uint64_t v113 = (char *)v219;
        goto LABEL_131;
      }
      uint64_t v227 = *(void *)(v226 + v222);
      double v228 = *(double *)(v226 + v224);
      uint64_t v229 = v437;
      sub_1A54F8728(v226, v437, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      char v230 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v220, v229);
      sub_1A54F7200(v220, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if (v230)
      {
        char v231 = sub_1A5683DD0(v223, v227);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54F7200(v229, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        if (v231)
        {
          char v192 = v225 == v228;
          sub_1A54F7200(v219, type metadata accessor for SFAirDropReceive.Transfer.State);
          return v192 & 1;
        }
      }
      else
      {
        sub_1A54F7200(v229, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v408 = v219;
      goto LABEL_199;
    case 8u:
      v469 = v113;
      uint64_t v232 = v455;
      sub_1A550D414((uint64_t)v113, v455, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v233 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      uint64_t v234 = v233[12];
      uint64_t v235 = *(void *)(v232 + v234);
      uint64_t v236 = v233[16];
      uint64_t v237 = *(void *)(v232 + v236);
      uint64_t v238 = v233[20];
      uint64_t v239 = v232 + v238;
      uint64_t v240 = v470;
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_109;
      }
      uint64_t v241 = *(void *)(v240 + v234);
      uint64_t v242 = *(void *)(v240 + v236);
      uint64_t v243 = v240 + v238;
      uint64_t v244 = v240;
      uint64_t v163 = v430;
      sub_1A54F8728(v244, v430, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v245 = v429;
      sub_1A550D4D4(v239, v429, &qword_1E9670D10);
      uint64_t v246 = v243;
      uint64_t v247 = (unint64_t *)&v460;
      goto LABEL_51;
    case 9u:
      v469 = v113;
      uint64_t v232 = *((void *)&v462 + 1);
      sub_1A550D414((uint64_t)v113, *((uint64_t *)&v462 + 1), type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v248 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      uint64_t v249 = v248[12];
      uint64_t v235 = *(void *)(v232 + v249);
      uint64_t v250 = v248[16];
      uint64_t v237 = *(void *)(v232 + v250);
      uint64_t v251 = v248[20];
      uint64_t v239 = v232 + v251;
      uint64_t v252 = v470;
      if (swift_getEnumCaseMultiPayload() != 9)
      {
LABEL_109:
        sub_1A54E4D44(v239, &qword_1E9670D10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v401 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
        uint64_t v402 = v232;
        goto LABEL_129;
      }
      uint64_t v241 = *(void *)(v252 + v249);
      uint64_t v242 = *(void *)(v252 + v250);
      uint64_t v253 = v252 + v251;
      uint64_t v254 = v252;
      uint64_t v163 = v448;
      sub_1A54F8728(v254, v448, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v245 = v438;
      sub_1A550D4D4(v239, v438, &qword_1E9670D10);
      uint64_t v246 = v253;
      uint64_t v247 = &v466;
LABEL_51:
      uint64_t v255 = *(v247 - 32);
      sub_1A550D4D4(v246, v255, &qword_1E9670D10);
      char v256 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v232, v163);
      sub_1A54F7200(v232, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if (v256)
      {
        char v257 = sub_1A5683DD0(v235, v241);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v257)
        {
          char v258 = sub_1A5683DD0(v237, v242);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v258)
          {
            char v259 = _s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0();
            uint64_t v113 = v469;
            if ((v259 & 1) != 0
              && *(unsigned __int8 *)(v245 + *(int *)(*((void *)&v468 + 1) + 52)) == *(unsigned __int8 *)(v255 + *(int *)(*((void *)&v468 + 1) + 52))
              && (sub_1A56D4BD8() & 1) != 0)
            {
              char v260 = sub_1A564C090(v245 + *(int *)(*((void *)&v468 + 1) + 60), v255 + *(int *)(*((void *)&v468 + 1) + 60));
              sub_1A54E4D44(v255, &qword_1E9670D10);
              sub_1A54E4D44(v245, &qword_1E9670D10);
              sub_1A54F7200(v163, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
              if (v260) {
                goto LABEL_107;
              }
            }
            else
            {
              sub_1A54E4D44(v255, &qword_1E9670D10);
              sub_1A54E4D44(v245, &qword_1E9670D10);
              uint64_t v419 = v163;
LABEL_185:
              sub_1A54F7200(v419, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
            }
LABEL_142:
            uint64_t v408 = (uint64_t)v113;
            goto LABEL_199;
          }
LABEL_157:
          sub_1A54E4D44(v255, &qword_1E9670D10);
          sub_1A54E4D44(v245, &qword_1E9670D10);
LABEL_158:
          v413 = (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination;
          uint64_t v414 = v163;
          goto LABEL_197;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_157;
    case 0xAu:
      uint64_t v174 = (uint64_t)v113;
      uint64_t v261 = v461;
      sub_1A550D414((uint64_t)v113, v461, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      uint64_t v263 = *(int *)(v262 + 48);
      uint64_t v264 = *(void *)(v261 + v263);
      uint64_t v265 = *(int *)(v262 + 64);
      uint64_t v266 = *(void *)(v261 + v265);
      uint64_t v267 = v470;
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v405 = v261;
LABEL_122:
        sub_1A54F7200(v405, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        uint64_t v113 = (char *)v174;
LABEL_131:
        sub_1A54E4D44((uint64_t)v113, &qword_1E96713A8);
        goto LABEL_200;
      }
      uint64_t v268 = *(void *)(v267 + v263);
      uint64_t v269 = *(void *)(v267 + v265);
      uint64_t v270 = v267;
      uint64_t v271 = v439;
      sub_1A54F8728(v270, v439, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      char v272 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v261, v271);
      sub_1A54F7200(v261, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if (v272)
      {
        char v273 = sub_1A5683DD0(v264, v268);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v273)
        {
          char v192 = sub_1A5683DD0(v266, v269);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v193 = v271;
LABEL_63:
          sub_1A54F7200(v193, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
          sub_1A54F7200(v174, type metadata accessor for SFAirDropReceive.Transfer.State);
          return v192 & 1;
        }
        sub_1A54F7200(v271, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      }
      else
      {
        sub_1A54F7200(v271, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_177;
    case 0xBu:
      sub_1A550D414((uint64_t)v113, (uint64_t)v85, type metadata accessor for SFAirDropReceive.Transfer.State);
      *(void *)&v467[8] = *((void *)v85 + 1);
      uint64_t v274 = *((void *)v85 + 3);
      *(void *)&v467[16] = *((void *)v85 + 4);
      *(void *)&long long v468 = *((void *)v85 + 5);
      int v275 = v85[48];
      uint64_t v276 = *((void *)v85 + 7);
      unint64_t v120 = *((void *)v85 + 8);
      uint64_t v277 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
      uint64_t v278 = v470;
      if (swift_getEnumCaseMultiPayload() != 11)
      {
        sub_1A54E4D44((uint64_t)&v85[v277], &qword_1E9670D10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        uint64_t v403 = v276;
LABEL_124:
        sub_1A54EA09C(v403, v120);
        goto LABEL_131;
      }
      v469 = v113;
      uint64_t v464 = v276;
      *(void *)v467 = v120;
      LODWORD(v463) = v275;
      *(void *)&long long v460 = *((void *)v85 + 2);
      uint64_t v459 = *(void *)v85;
      uint64_t v279 = *(void *)(v278 + 8);
      uint64_t v461 = *(void *)v278;
      uint64_t v280 = *(void *)(v278 + 24);
      *((void *)&v460 + 1) = *(void *)(v278 + 16);
      uint64_t v281 = *(void *)(v278 + 40);
      *(void *)&long long v462 = *(void *)(v278 + 32);
      int v282 = *(unsigned __int8 *)(v278 + 48);
      unint64_t v283 = *(void *)(v278 + 64);
      *((void *)&v462 + 1) = *(void *)(v278 + 56);
      sub_1A550D4D4((uint64_t)&v85[v277], v466, &qword_1E9670D10);
      sub_1A550D4D4(v278 + v277, v465, &qword_1E9670D10);
      uint64_t v479 = v459;
      unint64_t v480 = *(void *)&v467[8];
      unint64_t v481 = v460;
      *(void *)&long long v482 = v274;
      *((void *)&v482 + 1) = *(void *)&v467[16];
      unint64_t v483 = v468;
      LOBYTE(v484) = v463;
      *((void *)&v484 + 1) = v464;
      unint64_t v485 = *(void *)v467;
      uint64_t v471 = v461;
      *(void *)&long long v472 = v279;
      uint64_t v461 = v279;
      *((void *)&v472 + 1) = *((void *)&v460 + 1);
      uint64_t v473 = v280;
      uint64_t v474 = v462;
      uint64_t v475 = v281;
      *(void *)&long long v470 = v281;
      int v284 = v282;
      LOBYTE(v476) = v282;
      uint64_t v285 = *((void *)&v462 + 1);
      uint64_t v477 = *((void *)&v462 + 1);
      unint64_t v478 = v283;
      if ((_s7Sharing9SFAirDropO11ContactInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v479, (uint64_t)&v471) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v285, v283);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v464, *(unint64_t *)v467);
        v409 = &qword_1E9670D10;
        sub_1A54E4D44(v465, &qword_1E9670D10);
        v410 = &v486;
        goto LABEL_162;
      }
      DWORD2(v460) = v284;
      unint64_t v136 = v466;
      uint64_t v286 = v465;
      if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) != 0
        && *(unsigned __int8 *)(v136 + *(int *)(*((void *)&v468 + 1) + 52)) == *(unsigned __int8 *)(v286 + *(int *)(*((void *)&v468 + 1) + 52))
        && (sub_1A56D4BD8() & 1) != 0)
      {
        char v287 = sub_1A564C090(v136 + *(int *)(*((void *)&v468 + 1) + 60), v286 + *(int *)(*((void *)&v468 + 1) + 60));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(*((uint64_t *)&v462 + 1), v283);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v464, *(unint64_t *)v467);
        if (v287)
        {
          uint64_t v139 = &qword_1E9670D10;
          uint64_t v140 = v286;
LABEL_71:
          sub_1A54E4D44(v140, v139);
          uint64_t v288 = v136;
          goto LABEL_81;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(*((uint64_t *)&v462 + 1), v283);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v464, *(unint64_t *)v467);
      }
      v409 = &qword_1E9670D10;
      uint64_t v417 = v286;
LABEL_170:
      sub_1A54E4D44(v417, v409);
      uint64_t v415 = v136;
      goto LABEL_173;
    case 0xCu:
      sub_1A550D414((uint64_t)v113, (uint64_t)v82, type metadata accessor for SFAirDropReceive.Transfer.State);
      unint64_t v289 = *((void *)v82 + 1);
      uint64_t v290 = *((void *)v82 + 3);
      uint64_t v291 = *((void *)v82 + 4);
      unint64_t v292 = *((void *)v82 + 5);
      DWORD2(v46_Block_object_dispose(&a9, 8) = v82[48];
      uint64_t v294 = *((void *)v82 + 7);
      unint64_t v293 = *((void *)v82 + 8);
      uint64_t v295 = v470;
      if (swift_getEnumCaseMultiPayload() == 12)
      {
        unint64_t v296 = *((void *)v82 + 2);
        uint64_t v297 = *(void *)v82;
        uint64_t v298 = *(void *)v295;
        uint64_t v299 = v294;
        *(void *)&long long v468 = v294;
        uint64_t v300 = *(void *)(v295 + 24);
        uint64_t v301 = *(void *)(v295 + 32);
        v469 = v113;
        uint64_t v302 = *(void *)(v295 + 40);
        char v303 = *(unsigned char *)(v295 + 48);
        unint64_t v304 = v293;
        *(void *)&v467[16] = v293;
        uint64_t v306 = *(void *)(v295 + 56);
        unint64_t v305 = *(void *)(v295 + 64);
        uint64_t v479 = v297;
        unint64_t v480 = v289;
        unint64_t v481 = v296;
        *(void *)&long long v482 = v290;
        *((void *)&v482 + 1) = v291;
        unint64_t v483 = v292;
        *(void *)&v467[8] = v292;
        LOBYTE(v484) = BYTE8(v468);
        *((void *)&v484 + 1) = v299;
        unint64_t v485 = v304;
        uint64_t v471 = v298;
        long long v470 = *(_OWORD *)(v295 + 8);
        long long v472 = v470;
        uint64_t v473 = v300;
        uint64_t v474 = v301;
        uint64_t v475 = v302;
        LOBYTE(v476) = v303;
        uint64_t v477 = v306;
        unint64_t v478 = v305;
        unint64_t v307 = v305;
        char v192 = _s7Sharing9SFAirDropO11ContactInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v479, (uint64_t)&v471);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v306, v307);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v468, *(unint64_t *)&v467[16]);
        goto LABEL_85;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v294, v293);
      goto LABEL_131;
    case 0xDu:
      uint64_t v308 = *((void *)&v460 + 1);
      sub_1A550D414((uint64_t)v113, *((uint64_t *)&v460 + 1), type metadata accessor for SFAirDropReceive.Transfer.State);
      *((void *)&v468 + 1) = *(void *)(v308 + 8);
      uint64_t v309 = *(void *)(v308 + 24);
      *(void *)v467 = *(void *)(v308 + 32);
      *(void *)&v467[16] = *(void *)(v308 + 40);
      int v310 = *(unsigned __int8 *)(v308 + 48);
      uint64_t v312 = *(void *)(v308 + 56);
      unint64_t v311 = *(void *)(v308 + 64);
      uint64_t v313 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
      uint64_t v314 = v308 + v313;
      uint64_t v315 = v470;
      if (swift_getEnumCaseMultiPayload() != 13)
      {
        sub_1A54E4D44(v308 + v313, &qword_1E9670D00);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v312, v311);
        goto LABEL_131;
      }
      v469 = v113;
      unint64_t v466 = v311;
      uint64_t v465 = v312;
      LODWORD(v464) = v310;
      *(void *)&long long v462 = *(void *)(v308 + 16);
      uint64_t v316 = *(void *)v308;
      uint64_t v317 = *(void *)(v315 + 8);
      uint64_t v463 = *(void *)v315;
      uint64_t v318 = *(void *)(v315 + 24);
      *((void *)&v462 + 1) = *(void *)(v315 + 16);
      uint64_t v319 = *(void *)(v315 + 32);
      uint64_t v461 = *(void *)(v315 + 40);
      int v320 = *(unsigned __int8 *)(v315 + 48);
      uint64_t v321 = *(void *)(v315 + 56);
      *(void *)&long long v470 = *(void *)(v315 + 64);
      sub_1A550D4D4(v314, *(uint64_t *)&v467[8], &qword_1E9670D00);
      sub_1A550D4D4(v315 + v313, v468, &qword_1E9670D00);
      uint64_t v479 = v316;
      unint64_t v480 = *((void *)&v468 + 1);
      unint64_t v481 = v462;
      *(void *)&long long v482 = v309;
      *((void *)&v482 + 1) = *(void *)v467;
      unint64_t v483 = *(void *)&v467[16];
      LOBYTE(v484) = v464;
      *((void *)&v484 + 1) = v465;
      unint64_t v485 = v466;
      uint64_t v471 = v463;
      *(void *)&long long v472 = v317;
      *((void *)&v472 + 1) = *((void *)&v462 + 1);
      uint64_t v473 = v318;
      uint64_t v322 = v319;
      uint64_t v474 = v319;
      uint64_t v475 = v461;
      unint64_t v323 = v470;
      LOBYTE(v476) = v320;
      uint64_t v477 = v321;
      unint64_t v478 = v470;
      if ((_s7Sharing9SFAirDropO11ContactInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v479, (uint64_t)&v471) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v321, v323);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v465, v466);
        v409 = &qword_1E9670D00;
        sub_1A54E4D44(v468, &qword_1E9670D00);
        v410 = &v488;
LABEL_162:
        uint64_t v415 = *(v410 - 32);
        goto LABEL_173;
      }
      *(void *)&long long v462 = v317;
      *((void *)&v462 + 1) = v322;
      LODWORD(v463) = v320;
      uint64_t v324 = *(void *)&v467[8];
      uint64_t v325 = v468;
      if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) == 0
        || *(unsigned __int8 *)(v324 + *(int *)(v427 + 52)) != *(unsigned __int8 *)(v325 + *(int *)(v427 + 52))
        || (sub_1A56D4BD8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v321, v323);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v465, v466);
        goto LABEL_172;
      }
      char v326 = sub_1A564C050(v324 + *(int *)(v427 + 60), v325 + *(int *)(v427 + 60));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v321, v323);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v465, v466);
      if ((v326 & 1) == 0)
      {
LABEL_172:
        v409 = &qword_1E9670D00;
        sub_1A54E4D44(v468, &qword_1E9670D00);
        uint64_t v415 = v324;
LABEL_173:
        sub_1A54E4D44(v415, v409);
        goto LABEL_198;
      }
      uint64_t v139 = &qword_1E9670D00;
      sub_1A54E4D44(v468, &qword_1E9670D00);
      uint64_t v288 = v324;
LABEL_81:
      sub_1A54E4D44(v288, v139);
      uint64_t v218 = (uint64_t)v469;
LABEL_108:
      sub_1A54F7200(v218, type metadata accessor for SFAirDropReceive.Transfer.State);
      char v192 = 1;
      return v192 & 1;
    case 0xEu:
      v469 = v113;
      sub_1A550D414((uint64_t)v113, (uint64_t)v77, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v464 = *(void *)v77;
      unint64_t v466 = *((void *)v77 + 1);
      uint64_t v465 = *((void *)v77 + 2);
      *(void *)v467 = *((void *)v77 + 3);
      *(void *)&v467[8] = *((void *)v77 + 4);
      *(void *)&v467[16] = *((void *)v77 + 5);
      long long v468 = *((_OWORD *)v77 + 3);
      uint64_t v327 = *((void *)v77 + 9);
      uint64_t v463 = *((void *)v77 + 8);
      uint64_t v329 = *((void *)v77 + 10);
      uint64_t v328 = *((void *)v77 + 11);
      unint64_t v330 = *((void *)v77 + 12);
      uint64_t v331 = *((void *)v77 + 13);
      uint64_t v332 = *((void *)v77 + 14);
      uint64_t v333 = *((void *)v77 + 15);
      uint64_t v335 = *((void *)v77 + 16);
      unint64_t v334 = *((void *)v77 + 17);
      uint64_t v336 = (uint64_t *)v470;
      if (swift_getEnumCaseMultiPayload() != 14)
      {
        sub_1A54F7304(v327, v329, v328, v330, v331, v332, v333, v335, v334);
        sub_1A54F7304(v464, v466, v465, *(unint64_t *)v467, *(uint64_t *)&v467[8], *(uint64_t *)&v467[16], v468, *((uint64_t *)&v468 + 1), v463);
        goto LABEL_130;
      }
      unint64_t v456 = v334;
      uint64_t v457 = v327;
      uint64_t v458 = v329;
      uint64_t v459 = v328;
      *(void *)&long long v460 = v330;
      *((void *)&v460 + 1) = v331;
      uint64_t v461 = v332;
      *(void *)&long long v462 = v333;
      *((void *)&v462 + 1) = v335;
      uint64_t v337 = *v336;
      uint64_t v338 = v336[1];
      uint64_t v339 = v336[2];
      unint64_t v340 = v336[3];
      uint64_t v341 = v336[4];
      uint64_t v342 = v336[5];
      uint64_t v343 = v336[6];
      uint64_t v344 = v336[7];
      unint64_t v345 = v336[8];
      uint64_t v346 = v336[9];
      uint64_t v347 = v336[10];
      uint64_t v348 = v336[11];
      unint64_t v350 = v336[12];
      uint64_t v349 = v336[13];
      uint64_t v450 = v336[14];
      uint64_t v451 = v336[15];
      uint64_t v351 = v336[16];
      unint64_t v352 = v336[17];
      v452 = (void *)v351;
      uint64_t v479 = v464;
      unint64_t v480 = v466;
      unint64_t v481 = v465;
      long long v482 = *(_OWORD *)v467;
      unint64_t v483 = *(void *)&v467[16];
      long long v484 = v468;
      unint64_t v485 = v463;
      uint64_t v471 = v337;
      *(void *)&long long v472 = v338;
      *((void *)&v472 + 1) = v339;
      uint64_t v473 = v340;
      *(void *)&long long v470 = v341;
      uint64_t v474 = v341;
      uint64_t v475 = v342;
      uint64_t v455 = v342;
      v454 = (void *)v343;
      uint64_t v476 = v343;
      uint64_t v477 = v344;
      uint64_t v453 = v344;
      unint64_t v449 = v345;
      unint64_t v478 = v345;
      if (_s7Sharing9SFAirDropO14ContactRequestO2eeoiySbAE_AEtFZ_0(&v479, &v471))
      {
        uint64_t v479 = v457;
        unint64_t v480 = v458;
        uint64_t v448 = v339;
        unint64_t v481 = v459;
        long long v482 = v460;
        uint64_t v446 = v337;
        uint64_t v445 = v338;
        unint64_t v483 = v461;
        unint64_t v447 = v340;
        long long v484 = v462;
        unint64_t v485 = v456;
        uint64_t v471 = v346;
        *(void *)&long long v472 = v347;
        uint64_t v353 = v347;
        uint64_t v354 = v348;
        *((void *)&v472 + 1) = v348;
        uint64_t v473 = v350;
        unint64_t v355 = v350;
        uint64_t v356 = v450;
        uint64_t v474 = v349;
        uint64_t v475 = v450;
        uint64_t v357 = v451;
        uint64_t v358 = (uint64_t)v452;
        uint64_t v476 = v451;
        uint64_t v477 = (uint64_t)v452;
        unint64_t v359 = v352;
        unint64_t v478 = v352;
        char v192 = _s7Sharing9SFAirDropO14ContactRequestO2eeoiySbAE_AEtFZ_0(&v479, &v471);
        sub_1A54F7304(v446, v445, v448, v447, v470, v455, (uint64_t)v454, v453, v449);
        sub_1A54F7304(v464, v466, v465, *(unint64_t *)v467, *(uint64_t *)&v467[8], *(uint64_t *)&v467[16], v468, *((uint64_t *)&v468 + 1), v463);
        sub_1A54F7304(v346, v353, v354, v355, v349, v356, v357, v358, v359);
        sub_1A54F7304(v457, v458, v459, v460, *((uint64_t *)&v460 + 1), v461, v462, *((uint64_t *)&v462 + 1), v456);
        goto LABEL_85;
      }
      sub_1A54F7304(v346, v347, v348, v350, v349, v450, v451, (uint64_t)v452, v352);
      sub_1A54F7304(v457, v458, v459, v460, *((uint64_t *)&v460 + 1), v461, v462, *((uint64_t *)&v462 + 1), v456);
      sub_1A54F7304(v337, v338, v339, v340, v470, v455, (uint64_t)v454, v453, v449);
      sub_1A54F7304(v464, v466, v465, *(unint64_t *)v467, *(uint64_t *)&v467[8], *(uint64_t *)&v467[16], v468, *((uint64_t *)&v468 + 1), v463);
      goto LABEL_198;
    case 0xFu:
      v469 = v113;
      uint64_t v360 = v464;
      sub_1A550D414((uint64_t)v113, v464, type metadata accessor for SFAirDropReceive.Transfer.State);
      v361 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v362 = v361[12];
      *(void *)&long long v468 = v360 + v362;
      uint64_t v363 = v361[16];
      uint64_t v364 = *(void *)(v360 + v363 + 8);
      *(void *)&v467[16] = *(void *)(v360 + v363);
      *((void *)&v468 + 1) = v364;
      uint64_t v365 = v361[20];
      uint64_t v366 = *(void *)(v360 + v365);
      uint64_t v367 = v361[24];
      uint64_t v368 = *(void *)(v360 + v367);
      uint64_t v369 = v361[28];
      unint64_t v370 = *(void *)(v360 + v369);
      uint64_t v371 = v470;
      if (swift_getEnumCaseMultiPayload() != 15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54F7200(v468, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        v401 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
        uint64_t v402 = v360;
LABEL_129:
        sub_1A54F7200(v402, v401);
LABEL_130:
        uint64_t v113 = v469;
        goto LABEL_131;
      }
      *(void *)v467 = v366;
      unint64_t v466 = v370;
      *(void *)&v467[8] = v368;
      uint64_t v372 = v371 + v362;
      uint64_t v373 = *(void *)(v371 + v363 + 8);
      uint64_t v465 = *(void *)(v371 + v363);
      uint64_t v374 = *(void *)(v371 + v365);
      uint64_t v375 = *(void *)(v371 + v367);
      uint64_t v376 = *(void *)(v371 + v369);
      uint64_t v377 = v371;
      uint64_t v378 = v450;
      sub_1A54F8728(v377, v450, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v379 = v449;
      sub_1A54F8728(v468, v449, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v380 = v372;
      uint64_t v381 = v451;
      sub_1A54F8728(v380, v451, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      BOOL v382 = _s7Sharing16SFAirDropReceiveO8TransferV7MetricsV2eeoiySbAG_AGtFZ_0(v360, v378);
      sub_1A54F7200(v360, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      if (!v382)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54F7200(v381, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        uint64_t v416 = v379;
        goto LABEL_196;
      }
      uint64_t v383 = v375;
      *(void *)&long long v470 = v376;
      char v384 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(v379, v381);
      uint64_t v385 = v381;
      uint64_t v386 = v379;
      uint64_t v387 = *(void *)v467;
      if ((v384 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v418 = v385;
        goto LABEL_195;
      }
      uint64_t v388 = *(void *)&v467[8];
      if (*((void *)&v468 + 1))
      {
        if (!v373)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_193;
        }
        if (*(void *)&v467[16] == v465 && *((void *)&v468 + 1) == v373)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v389 = v375;
          goto LABEL_188;
        }
        char v421 = sub_1A56D5F28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v389 = v383;
        if (v421)
        {
LABEL_188:
          char v422 = sub_1A5683DD0(v387, v374);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v422)
          {
            char v423 = sub_1A5683DD0(v388, v389);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v423)
            {
              char v192 = sub_1A5683DD0(v466, v470);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1A54F7200(v451, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
              sub_1A54F7200(v386, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
              sub_1A54F7200(v378, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
LABEL_85:
              sub_1A54F7200((uint64_t)v469, type metadata accessor for SFAirDropReceive.Transfer.State);
              return v192 & 1;
            }
LABEL_194:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v418 = v451;
LABEL_195:
            sub_1A54F7200(v418, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
            uint64_t v416 = v386;
LABEL_196:
            sub_1A54F7200(v416, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
            v413 = type metadata accessor for SFAirDropReceive.Transfer.Metrics;
            uint64_t v414 = v378;
LABEL_197:
            sub_1A54F7200(v414, v413);
LABEL_198:
            uint64_t v408 = (uint64_t)v469;
            goto LABEL_199;
          }
LABEL_193:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_194;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v389 = v375;
        if (!v373) {
          goto LABEL_188;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_193;
    case 0x10u:
      uint64_t v390 = v463;
      sub_1A550D414((uint64_t)v113, v463, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v391 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
      uint64_t v392 = v390 + v391;
      uint64_t v393 = v470;
      if (swift_getEnumCaseMultiPayload() != 16)
      {
        sub_1A54F7200(v390 + v391, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
        sub_1A54F7200(v390, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
        goto LABEL_131;
      }
      uint64_t v394 = v393 + v391;
      uint64_t v395 = v444;
      sub_1A54F8728(v393, v444, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v396 = v446;
      sub_1A54F8728(v392, v446, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      uint64_t v397 = v445;
      sub_1A54F8728(v394, v445, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      BOOL v398 = _s7Sharing16SFAirDropReceiveO8TransferV7MetricsV2eeoiySbAG_AGtFZ_0(v390, v395);
      sub_1A54F7200(v390, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      if (v398)
      {
        char v192 = _s7Sharing16SFAirDropReceiveO7FailureO2eeoiySbAE_AEtFZ_0(v396, v397);
        sub_1A54F7200(v397, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
        sub_1A54F7200(v396, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
        sub_1A54F7200(v395, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
        sub_1A54F7200((uint64_t)v113, type metadata accessor for SFAirDropReceive.Transfer.State);
        return v192 & 1;
      }
      sub_1A54F7200(v397, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      sub_1A54F7200(v396, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.Failure);
      sub_1A54F7200(v395, type metadata accessor for SFAirDropReceive.Transfer.Metrics);
      uint64_t v408 = (uint64_t)v113;
      goto LABEL_199;
    case 0x11u:
      v399 = (void *)v462;
      sub_1A550D414((uint64_t)v113, v462, type metadata accessor for SFAirDropReceive.Transfer.State);
      v400 = (void *)v470;
      if (swift_getEnumCaseMultiPayload() != 17) {
        goto LABEL_131;
      }
      char v192 = *v399 == *v400;
      goto LABEL_99;
    case 0x12u:
      if (swift_getEnumCaseMultiPayload() != 18) {
        goto LABEL_131;
      }
      goto LABEL_107;
    case 0x13u:
      if (swift_getEnumCaseMultiPayload() != 19) {
        goto LABEL_131;
      }
      goto LABEL_107;
    case 0x14u:
      if (swift_getEnumCaseMultiPayload() != 20) {
        goto LABEL_131;
      }
      goto LABEL_107;
    case 0x15u:
      if (swift_getEnumCaseMultiPayload() == 21) {
        goto LABEL_107;
      }
      goto LABEL_131;
    default:
      sub_1A550D414((uint64_t)v113, (uint64_t)v109, type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v116 = v470;
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v117 = (uint64_t)v109;
LABEL_112:
        sub_1A54E4D44(v117, &qword_1E9670D10);
        goto LABEL_131;
      }
      uint64_t v407 = v426;
      sub_1A550D4D4(v116, v426, &qword_1E9670D10);
      if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) == 0
        || v109[*(int *)(*((void *)&v468 + 1) + 52)] != *(unsigned char *)(v407 + *(int *)(*((void *)&v468 + 1) + 52))
        || (sub_1A56D4BD8() & 1) == 0
        || (sub_1A564C090((uint64_t)&v109[*(int *)(*((void *)&v468 + 1) + 60)], v407 + *(int *)(*((void *)&v468 + 1) + 60)) & 1) == 0)
      {
        sub_1A54E4D44(v407, &qword_1E9670D10);
        uint64_t v406 = (uint64_t)v109;
LABEL_141:
        sub_1A54E4D44(v406, &qword_1E9670D10);
        goto LABEL_142;
      }
      sub_1A54E4D44(v407, &qword_1E9670D10);
      uint64_t v143 = (uint64_t)v109;
LABEL_139:
      sub_1A54E4D44(v143, &qword_1E9670D10);
LABEL_107:
      uint64_t v218 = (uint64_t)v113;
      goto LABEL_108;
  }
}

unint64_t sub_1A550C9B4()
{
  unint64_t result = qword_1E9670E40;
  if (!qword_1E9670E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670E40);
  }
  return result;
}

unint64_t sub_1A550CA08()
{
  unint64_t result = qword_1E9670E48;
  if (!qword_1E9670E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670E48);
  }
  return result;
}

unint64_t sub_1A550CA5C()
{
  unint64_t result = qword_1E9670E50;
  if (!qword_1E9670E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670E50);
  }
  return result;
}

uint64_t sub_1A550CAB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A550CAF8()
{
  unint64_t result = qword_1E9670E68;
  if (!qword_1E9670E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670E68);
  }
  return result;
}

unint64_t sub_1A550CB4C()
{
  unint64_t result = qword_1E9670E88;
  if (!qword_1E9670E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670E88);
  }
  return result;
}

unint64_t sub_1A550CBA0()
{
  unint64_t result = qword_1E966B9C8;
  if (!qword_1E966B9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B9C8);
  }
  return result;
}

unint64_t sub_1A550CBF4()
{
  unint64_t result = qword_1E9670E90;
  if (!qword_1E9670E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670E90);
  }
  return result;
}

unint64_t sub_1A550CC48()
{
  unint64_t result = qword_1E9670E98;
  if (!qword_1E9670E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670E98);
  }
  return result;
}

unint64_t sub_1A550CC9C()
{
  unint64_t result = qword_1E9670EA8;
  if (!qword_1E9670EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EA8);
  }
  return result;
}

unint64_t sub_1A550CCF0()
{
  unint64_t result = qword_1E9670EB0;
  if (!qword_1E9670EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EB0);
  }
  return result;
}

unint64_t sub_1A550CD44()
{
  unint64_t result = qword_1E9670EC0;
  if (!qword_1E9670EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EC0);
  }
  return result;
}

unint64_t sub_1A550CD98()
{
  unint64_t result = qword_1E9670EC8;
  if (!qword_1E9670EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EC8);
  }
  return result;
}

unint64_t sub_1A550CDEC()
{
  unint64_t result = qword_1E9670ED0;
  if (!qword_1E9670ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670ED0);
  }
  return result;
}

unint64_t sub_1A550CE40()
{
  unint64_t result = qword_1E9670ED8;
  if (!qword_1E9670ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670ED8);
  }
  return result;
}

unint64_t sub_1A550CE94()
{
  unint64_t result = qword_1E9670EE0;
  if (!qword_1E9670EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EE0);
  }
  return result;
}

unint64_t sub_1A550CEE8()
{
  unint64_t result = qword_1E9670EE8;
  if (!qword_1E9670EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EE8);
  }
  return result;
}

unint64_t sub_1A550CF3C()
{
  unint64_t result = qword_1E9670EF0;
  if (!qword_1E9670EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EF0);
  }
  return result;
}

unint64_t sub_1A550CF90()
{
  unint64_t result = qword_1E9670EF8;
  if (!qword_1E9670EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670EF8);
  }
  return result;
}

unint64_t sub_1A550CFE4()
{
  unint64_t result = qword_1E9670F08;
  if (!qword_1E9670F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F08);
  }
  return result;
}

unint64_t sub_1A550D038()
{
  unint64_t result = qword_1E9670F10;
  if (!qword_1E9670F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F10);
  }
  return result;
}

unint64_t sub_1A550D08C()
{
  unint64_t result = qword_1E9670F18;
  if (!qword_1E9670F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F18);
  }
  return result;
}

unint64_t sub_1A550D0E0()
{
  unint64_t result = qword_1E9670F20;
  if (!qword_1E9670F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F20);
  }
  return result;
}

unint64_t sub_1A550D134()
{
  unint64_t result = qword_1E9670F28;
  if (!qword_1E9670F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F28);
  }
  return result;
}

unint64_t sub_1A550D188()
{
  unint64_t result = qword_1E9670F30;
  if (!qword_1E9670F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F30);
  }
  return result;
}

unint64_t sub_1A550D1DC()
{
  unint64_t result = qword_1E9670F38;
  if (!qword_1E9670F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F38);
  }
  return result;
}

unint64_t sub_1A550D230()
{
  unint64_t result = qword_1E9670F40;
  if (!qword_1E9670F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9670F40);
  }
  return result;
}

uint64_t sub_1A550D284(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9670E70);
    sub_1A550CAB0(a2, MEMORY[0x1E4F276F0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A550D318()
{
  unint64_t result = qword_1E966B9D8[0];
  if (!qword_1E966B9D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E966B9D8);
  }
  return result;
}

unint64_t sub_1A550D36C()
{
  unint64_t result = qword_1E9671020;
  if (!qword_1E9671020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671020);
  }
  return result;
}

unint64_t sub_1A550D3C0()
{
  unint64_t result = qword_1E9671040;
  if (!qword_1E9671040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671040);
  }
  return result;
}

uint64_t sub_1A550D414(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E966B2B0);
}

uint64_t sub_1A550D49C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A550D4D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1A550D538()
{
  unint64_t result = qword_1E9671060;
  if (!qword_1E9671060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671060);
  }
  return result;
}

unint64_t sub_1A550D58C()
{
  unint64_t result = qword_1E9671078;
  if (!qword_1E9671078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671078);
  }
  return result;
}

unint64_t sub_1A550D5E0()
{
  unint64_t result = qword_1E9671090;
  if (!qword_1E9671090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671090);
  }
  return result;
}

unint64_t sub_1A550D634()
{
  unint64_t result = qword_1E96710B0;
  if (!qword_1E96710B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96710B0);
  }
  return result;
}

unint64_t sub_1A550D688()
{
  unint64_t result = qword_1E96710C8;
  if (!qword_1E96710C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96710C8);
  }
  return result;
}

uint64_t sub_1A550D6DC()
{
  return sub_1A550CAB0(&qword_1E96710D0, (void (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier);
}

void *_s8TransferVwCP(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for SFAirDropClient.Identifier();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = v3[1];
      *a1 = *v3;
      a1[1] = v12;
      a1[2] = v3[2];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, v3, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v9 = sub_1A56D4CB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, v3, v9);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v13 = v6[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)v3 + v13;
    uint64_t v16 = sub_1A56D4CB8();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    uint64_t v18 = v6[6];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)v3 + v18;
    uint64_t v21 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
    v606 = v3;
    v607 = v6;
    uint64_t v587 = v16;
    v604 = a1;
    v605 = v17;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v17(v19, v20, v16);
        uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v19[v22[13]] = v20[v22[13]];
        uint64_t v23 = v22[14];
        uint64_t v24 = &v19[v23];
        uint64_t v25 = &v20[v23];
        uint64_t v26 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        uint64_t v27 = v22[15];
        uint64_t v28 = &v19[v27];
        uint64_t v29 = &v20[v27];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v30 = swift_getEnumCaseMultiPayload();
        if (v30 == 2) {
          goto LABEL_83;
        }
        if (v30 == 1) {
          goto LABEL_18;
        }
        uint64_t v200 = *((void *)v29 + 1);
        *(void *)uint64_t v28 = *(void *)v29;
        *((void *)v28 + 1) = v200;
        uint64_t v201 = *((void *)v29 + 3);
        *((void *)v28 + 2) = *((void *)v29 + 2);
        *((void *)v28 + 3) = v201;
        *((void *)v28 + 4) = *((void *)v29 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v202 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        char v203 = &v28[v202];
        char v204 = &v29[v202];
        uint64_t v205 = *(void *)&v29[v202 + 8];
        *(void *)char v203 = *(void *)&v29[v202];
        *((void *)v203 + 1) = v205;
        uint64_t v206 = *(void *)&v29[v202 + 16];
        uint64_t v207 = *(void *)&v29[v202 + 24];
        uint64_t v208 = *(void *)&v29[v202 + 32];
        uint64_t v209 = *(void *)&v29[v202 + 40];
        unsigned __int8 v210 = v204[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v206, v207, v208, v209, v210);
        *((void *)v203 + 2) = v206;
        *((void *)v203 + 3) = v207;
        *((void *)v203 + 4) = v208;
        *((void *)v203 + 5) = v209;
        v203[48] = v210;
        v203[49] = v204[49];
        uint64_t v211 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v212 = &v203[v211];
        uint64_t v213 = &v204[v211];
        uint64_t v17 = v605;
        v605(&v203[v211], &v204[v211], v16);
        uint64_t v214 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v215 = &v212[v214];
        char v216 = &v213[v214];
        a1 = v604;
        uint64_t v6 = v607;
        goto LABEL_86;
      case 1u:
        uint64_t v31 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v31;
        uint64_t v32 = *((void *)v20 + 3);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = v32;
        uint64_t v33 = *((void *)v20 + 4);
        uint64_t v34 = *((void *)v20 + 5);
        uint64_t v35 = v17;
        char v36 = v20[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *((void *)v19 + 4) = v33;
        *((void *)v19 + 5) = v34;
        v19[48] = v36;
        uint64_t v37 = *((void *)v20 + 7);
        unint64_t v38 = *((void *)v20 + 8);
        sub_1A54E9E98(v37, v38);
        *((void *)v19 + 7) = v37;
        *((void *)v19 + _Block_object_dispose(&a9, 8) = v38;
        uint64_t v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
        uint64_t v40 = &v19[v39];
        uint64_t v41 = &v20[v39];
        v35(&v19[v39], &v20[v39], v16);
        uint64_t v42 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        v40[v42[13]] = v41[v42[13]];
        uint64_t v43 = v42[14];
        uint64_t v44 = &v40[v43];
        uint64_t v45 = &v41[v43];
        uint64_t v46 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        uint64_t v47 = v42[15];
        uint64_t v48 = &v40[v47];
        uint64_t v49 = &v41[v47];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v50 = swift_getEnumCaseMultiPayload();
        if (v50 == 2) {
          goto LABEL_81;
        }
        if (v50 == 1) {
          goto LABEL_57;
        }
        goto LABEL_82;
      case 2u:
        v17(v19, v20, v16);
        uint64_t v51 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v19[v51[13]] = v20[v51[13]];
        uint64_t v52 = v51[14];
        uint64_t v53 = &v19[v52];
        uint64_t v54 = &v20[v52];
        uint64_t v55 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        uint64_t v56 = v51[15];
        uint64_t v28 = &v19[v56];
        uint64_t v29 = &v20[v56];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v57 = swift_getEnumCaseMultiPayload();
        if (v57 == 2)
        {
LABEL_83:
          uint64_t v247 = *((void *)v29 + 1);
          *(void *)uint64_t v28 = *(void *)v29;
          *((void *)v28 + 1) = v247;
          uint64_t v248 = *((void *)v29 + 3);
          *((void *)v28 + 2) = *((void *)v29 + 2);
          *((void *)v28 + 3) = v248;
          *((void *)v28 + 4) = *((void *)v29 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v249 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v250 = &v28[v249];
          uint64_t v251 = &v29[v249];
          uint64_t v252 = *(void *)&v29[v249 + 8];
          *(void *)uint64_t v250 = *(void *)&v29[v249];
          *((void *)v250 + 1) = v252;
          uint64_t v253 = *(void *)&v29[v249 + 16];
          uint64_t v254 = *(void *)&v29[v249 + 24];
          uint64_t v255 = *(void *)&v29[v249 + 32];
          uint64_t v256 = *(void *)&v29[v249 + 40];
          char v257 = a1;
          unsigned __int8 v258 = v251[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v253, v254, v255, v256, v258);
          *((void *)v250 + 2) = v253;
          *((void *)v250 + 3) = v254;
          *((void *)v250 + 4) = v255;
          *((void *)v250 + 5) = v256;
          v250[48] = v258;
          a1 = v257;
          uint64_t v16 = v587;
          v250[49] = v251[49];
          uint64_t v259 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v63 = &v250[v259];
          uint64_t v64 = &v251[v259];
          uint64_t v17 = v605;
          v605(&v250[v259], &v251[v259], v587);
          uint64_t v65 = &qword_1E96710D8;
          goto LABEL_84;
        }
        if (v57 == 1)
        {
LABEL_18:
          *uint64_t v28 = *v29;
          uint64_t v58 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v59 = &v28[v58];
          uint64_t v60 = &v29[v58];
          uint64_t v61 = &v29[v58];
          uint64_t v17 = v605;
          v605(&v28[v58], v61, v16);
          uint64_t v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v63 = &v59[v62];
          uint64_t v64 = &v60[v62];
          v605(v63, v64, v16);
          uint64_t v65 = (uint64_t *)&unk_1E96710F0;
LABEL_84:
          uint64_t v260 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v65) + 68);
          uint64_t v215 = &v63[v260];
          char v216 = &v64[v260];
          uint64_t v6 = v607;
          goto LABEL_86;
        }
        uint64_t v261 = *((void *)v29 + 1);
        *(void *)uint64_t v28 = *(void *)v29;
        *((void *)v28 + 1) = v261;
        uint64_t v262 = *((void *)v29 + 3);
        *((void *)v28 + 2) = *((void *)v29 + 2);
        *((void *)v28 + 3) = v262;
        *((void *)v28 + 4) = *((void *)v29 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v263 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v264 = &v28[v263];
        uint64_t v265 = &v29[v263];
        uint64_t v266 = *(void *)&v29[v263 + 8];
        *(void *)uint64_t v264 = *(void *)&v29[v263];
        *((void *)v264 + 1) = v266;
        uint64_t v267 = *(void *)&v29[v263 + 16];
        uint64_t v268 = *(void *)&v29[v263 + 24];
        uint64_t v269 = *(void *)&v29[v263 + 32];
        uint64_t v270 = *(void *)&v29[v263 + 40];
        unsigned __int8 v271 = v265[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v267, v268, v269, v270, v271);
        *((void *)v264 + 2) = v267;
        *((void *)v264 + 3) = v268;
        *((void *)v264 + 4) = v269;
        *((void *)v264 + 5) = v270;
        v264[48] = v271;
        v264[49] = v265[49];
        uint64_t v272 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        char v273 = &v264[v272];
        uint64_t v274 = &v265[v272];
        uint64_t v17 = v605;
        v605(&v264[v272], &v265[v272], v16);
        uint64_t v275 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v215 = &v273[v275];
        char v216 = &v274[v275];
        a1 = v604;
        uint64_t v6 = v607;
LABEL_86:
        uint64_t v276 = *((void *)v216 + 1);
        *(void *)uint64_t v215 = *(void *)v216;
        *((void *)v215 + 1) = v276;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v3 = v606;
LABEL_199:
        uint64_t v464 = v6[8];
        *((unsigned char *)a1 + v6[7]) = *((unsigned char *)v3 + v6[7]);
        uint64_t v465 = (char *)a1 + v464;
        unint64_t v466 = (char *)v3 + v464;
        v17((char *)a1 + v464, (char *)v3 + v464, v16);
        v467 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
        uint64_t v468 = v467[5];
        v469 = &v465[v468];
        long long v470 = &v466[v468];
        uint64_t v471 = *(void *)v470;
        uint64_t v472 = *((void *)v470 + 1);
        unsigned __int8 v473 = v470[16];
        sub_1A55118A0(*(void *)v470, v472, v473);
        *(void *)v469 = v471;
        *((void *)v469 + 1) = v472;
        v469[16] = v473;
        *(void *)&v465[v467[6]] = *(void *)&v466[v467[6]];
        v465[v467[7]] = v466[v467[7]];
        v465[v467[8]] = v466[v467[8]];
        v465[v467[9]] = v466[v467[9]];
        uint64_t v474 = v467[10];
        uint64_t v475 = &v465[v474];
        uint64_t v476 = &v466[v474];
        uint64_t v602 = *((void *)v476 + 1);
        *(void *)uint64_t v475 = *(void *)v476;
        *((void *)v475 + 1) = v602;
        uint64_t v477 = v467[11];
        unint64_t v478 = &v465[v477];
        uint64_t v479 = &v466[v477];
        uint64_t v598 = *((void *)v479 + 1);
        *(void *)unint64_t v478 = *(void *)v479;
        *((void *)v478 + 1) = v598;
        uint64_t v480 = v467[12];
        unint64_t v481 = &v465[v480];
        long long v482 = &v466[v480];
        uint64_t v596 = *((void *)v482 + 1);
        *(void *)unint64_t v481 = *(void *)v482;
        *((void *)v481 + 1) = v596;
        uint64_t v483 = v467[13];
        long long v484 = &v465[v483];
        unint64_t v485 = &v466[v483];
        uint64_t v595 = *((void *)v485 + 1);
        *(void *)long long v484 = *(void *)v485;
        *((void *)v484 + 1) = v595;
        uint64_t v486 = v467[14];
        uint64_t v487 = &v465[v486];
        uint64_t v488 = &v466[v486];
        uint64_t v594 = *((void *)v488 + 1);
        *(void *)uint64_t v487 = *(void *)v488;
        *((void *)v487 + 1) = v594;
        uint64_t v489 = v467[15];
        v490 = &v465[v489];
        v491 = &v466[v489];
        uint64_t v593 = *((void *)v491 + 1);
        *(void *)v490 = *(void *)v491;
        *((void *)v490 + 1) = v593;
        uint64_t v492 = v467[16];
        v493 = &v465[v492];
        v494 = &v466[v492];
        uint64_t v592 = *((void *)v494 + 1);
        *(void *)v493 = *(void *)v494;
        *((void *)v493 + 1) = v592;
        uint64_t v495 = v467[17];
        v496 = &v465[v495];
        v497 = &v466[v495];
        uint64_t v591 = *((void *)v497 + 1);
        *(void *)v496 = *(void *)v497;
        *((void *)v496 + 1) = v591;
        uint64_t v498 = v467[18];
        v499 = &v465[v498];
        v500 = &v466[v498];
        uint64_t v501 = *((void *)v500 + 1);
        *(void *)v499 = *(void *)v500;
        *((void *)v499 + 1) = v501;
        uint64_t v502 = v467[19];
        v503 = &v465[v502];
        v504 = &v466[v502];
        uint64_t v505 = *((void *)v504 + 1);
        *(void *)v503 = *(void *)v504;
        *((void *)v503 + 1) = v505;
        uint64_t v506 = v467[20];
        v507 = *(void **)&v466[v506];
        *(void *)&v465[v506] = v507;
        uint64_t v508 = v467[21];
        v509 = *(void **)&v466[v508];
        *(void *)&v465[v508] = v509;
        uint64_t v510 = v467[22];
        v590 = *(void **)&v466[v510];
        *(void *)&v465[v510] = v590;
        uint64_t v511 = v467[23];
        v512 = &v465[v511];
        v513 = &v466[v511];
        uint64_t v514 = *((void *)v513 + 1);
        *(void *)v512 = *(void *)v513;
        *((void *)v512 + 1) = v514;
        uint64_t v515 = v467[24];
        __dst = &v465[v515];
        v589 = &v466[v515];
        uint64_t v516 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
        uint64_t v586 = *(void *)(v516 - 8);
        v588 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v586 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v517 = v507;
        id v518 = v509;
        id v519 = v590;
        swift_bridgeObjectRetain();
        if (v588(v589, 1, v516))
        {
          uint64_t v520 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
          memcpy(__dst, v589, *(void *)(*(void *)(v520 - 8) + 64));
          uint64_t v11 = v604;
          v521 = v606;
        }
        else
        {
          uint64_t v11 = v604;
          v521 = v606;
          uint64_t v522 = v586;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v541 = *((void *)v589 + 1);
              *(void *)__dst = *(void *)v589;
              *((void *)__dst + 1) = v541;
              uint64_t v603 = v516;
              uint64_t v542 = *((void *)v589 + 3);
              *((void *)__dst + 2) = *((void *)v589 + 2);
              *((void *)__dst + 3) = v542;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v543 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
              uint64_t v544 = *(int *)(v543 + 64);
              v545 = &__dst[v544];
              v597 = &v589[v544];
              uint64_t v546 = sub_1A56D4C28();
              v547 = v545;
              uint64_t v522 = v586;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v546 - 8) + 16))(v547, v597, v546);
              uint64_t v548 = *(int *)(v543 + 80);
              uint64_t v516 = v603;
              __dst[v548] = v589[v548];
              break;
            case 6u:
              uint64_t v549 = *((void *)v589 + 1);
              *(void *)__dst = *(void *)v589;
              *((void *)__dst + 1) = v549;
              goto LABEL_203;
            default:
              uint64_t v523 = *((void *)v589 + 1);
              *(void *)__dst = *(void *)v589;
              *((void *)__dst + 1) = v523;
              *((void *)__dst + 2) = *((void *)v589 + 2);
LABEL_203:
              swift_bridgeObjectRetain();
              break;
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v522 + 56))(__dst, 0, 1, v516);
        }
        *(void *)&v465[v467[25]] = *(void *)&v466[v467[25]];
        *(void *)&v465[v467[26]] = *(void *)&v466[v467[26]];
        uint64_t v524 = v467[27];
        v525 = &v465[v524];
        v526 = (uint64_t *)&v466[v524];
        unint64_t v527 = *(void *)&v466[v524 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v527 >> 60 == 15)
        {
          *(_OWORD *)v525 = *(_OWORD *)v526;
        }
        else
        {
          uint64_t v528 = *v526;
          sub_1A54E9E98(*v526, v527);
          *(void *)v525 = v528;
          *((void *)v525 + 1) = v527;
        }
        v529 = v607;
        uint64_t v530 = v607[9];
        v531 = (void *)((char *)v11 + v530);
        v532 = (void *)((char *)v521 + v530);
        uint64_t v533 = type metadata accessor for SFAirDropReceive.AskResponse();
        uint64_t v534 = *(void *)(v533 - 8);
        if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v534 + 48))(v532, 1, v533))
        {
          uint64_t v535 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048);
          memcpy(v531, v532, *(void *)(*(void *)(v535 - 8) + 64));
          goto LABEL_229;
        }
        uint64_t v536 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
        uint64_t v537 = *(void *)(v536 - 8);
        if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v537 + 48))(v532, 3, v536))
        {
          memcpy(v531, v532, *(void *)(v534 + 64));
          goto LABEL_228;
        }
        uint64_t v538 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v539 = swift_getEnumCaseMultiPayload();
        if (v539 == 2)
        {
          unint64_t v550 = v532[1];
          if (v550 >> 60 == 15)
          {
            *(_OWORD *)v531 = *(_OWORD *)v532;
          }
          else
          {
            unint64_t v552 = *v532;
            sub_1A54E9E98(*v532, v532[1]);
            unint64_t *v531 = v552;
            v531[1] = v550;
          }
        }
        else if (v539 == 1)
        {
          unint64_t v551 = v532[1];
          unint64_t *v531 = *v532;
          v531[1] = v551;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v539)
          {
            memcpy(v531, v532, *(void *)(*(void *)(v538 - 8) + 64));
            goto LABEL_224;
          }
          uint64_t v540 = sub_1A56D4A28();
          (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v540 - 8) + 16))(v531, v532, v540);
        }
        swift_storeEnumTagMultiPayload();
LABEL_224:
        uint64_t v553 = *(int *)(v536 + 48);
        v554 = (char *)v531 + v553;
        v555 = (char *)v532 + v553;
        *((unsigned char *)v531 + v553) = *((unsigned char *)v532 + v553);
        v556 = (_OWORD *)((char *)v531 + v553 + 8);
        v557 = (uint64_t *)((char *)v532 + v553 + 8);
        unint64_t v558 = *((void *)v555 + 2);
        if (v558 >> 60 == 15)
        {
          _OWORD *v556 = *(_OWORD *)v557;
        }
        else
        {
          uint64_t v559 = *v557;
          sub_1A54E9E98(*v557, v558);
          *((void *)v554 + 1) = v559;
          *((void *)v554 + 2) = v558;
        }
        v529 = v607;
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v537 + 56))(v531, 0, 3, v536);
LABEL_228:
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v534 + 56))(v531, 0, 1, v533);
        v521 = v606;
LABEL_229:
        uint64_t v560 = v529[10];
        uint64_t v561 = (uint64_t)v11 + v560;
        uint64_t v562 = (uint64_t)v521 + v560;
        uint64_t v563 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v563 - 8) + 16))(v561, v562, v563);
        uint64_t v564 = v529[12];
        *((unsigned char *)v11 + v529[11]) = *((unsigned char *)v521 + v529[11]);
        *((unsigned char *)v11 + v564) = *((unsigned char *)v521 + v564);
        uint64_t v565 = v529[13];
        v566 = (void *)((char *)v11 + v565);
        v567 = (unsigned __int8 *)v521 + v565;
        uint64_t v568 = type metadata accessor for SFAirDrop.DeclineAction();
        uint64_t v569 = *(void *)(v568 - 8);
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v569 + 48))(v567, 1, v568))
        {
          uint64_t v570 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
          memcpy(v566, v567, *(void *)(*(void *)(v570 - 8) + 64));
        }
        else
        {
          uint64_t v571 = *((void *)v567 + 1);
          void *v566 = *(void *)v567;
          v566[1] = v571;
          uint64_t v572 = *((void *)v567 + 2);
          uint64_t v573 = *((void *)v567 + 3);
          uint64_t v574 = *((void *)v567 + 4);
          uint64_t v575 = *((void *)v567 + 5);
          unsigned __int8 v576 = v567[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v572, v573, v574, v575, v576);
          v566[2] = v572;
          v566[3] = v573;
          v566[4] = v574;
          v566[5] = v575;
          *((unsigned char *)v566 + 4_Block_object_dispose(&a9, 8) = v576;
          v521 = v606;
          *((unsigned char *)v566 + 49) = v567[49];
          uint64_t v577 = *(int *)(v568 + 28);
          v578 = (char *)v566 + v577;
          v579 = &v567[v577];
          v605((char *)v566 + v577, (char *)v579, v587);
          uint64_t v580 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          v581 = &v578[v580];
          v529 = v607;
          v582 = (char *)&v579[v580];
          uint64_t v583 = *((void *)v582 + 1);
          *(void *)v581 = *(void *)v582;
          *((void *)v581 + 1) = v583;
          v584 = *(void (**)(void *, void, uint64_t, uint64_t))(v569 + 56);
          swift_retain();
          v584(v566, 0, 1, v568);
        }
        *((unsigned char *)v11 + v529[14]) = *((unsigned char *)v521 + v529[14]);
        break;
      case 3u:
        uint64_t v66 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 2)
        {
          unint64_t v277 = *((void *)v20 + 1);
          if (v277 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v303 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v303;
            *((void *)v19 + 1) = v277;
          }
        }
        else if (v67 == 1)
        {
          uint64_t v278 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v278;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v67)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v66 - 8) + 64));
            goto LABEL_131;
          }
          uint64_t v68 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v19, v20, v68);
        }
        swift_storeEnumTagMultiPayload();
LABEL_131:
        unint64_t v304 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
        uint64_t v305 = v304[12];
        uint64_t v306 = (uint64_t *)&v19[v305];
        unint64_t v307 = (uint64_t *)&v20[v305];
        uint64_t v308 = *v307;
        uint64_t v309 = v307[1];
        unint64_t v310 = v307[2];
        uint64_t v311 = v307[3];
        uint64_t v312 = v307[4];
        sub_1A551188C(*v307, v309, v310);
        uint64_t *v306 = v308;
        v306[1] = v309;
        v306[2] = v310;
        v306[3] = v311;
        v306[4] = v312;
        uint64_t v313 = v304[16];
        uint64_t v314 = &v19[v313];
        uint64_t v315 = &v20[v313];
        uint64_t v316 = *((void *)v315 + 1);
        *(void *)uint64_t v314 = *(void *)v315;
        *((void *)v314 + 1) = v316;
        uint64_t v317 = v304[20];
        uint64_t v318 = &v19[v317];
        uint64_t v319 = &v20[v317];
        uint64_t v320 = *(void *)&v20[v317 + 8];
        *(void *)uint64_t v318 = *(void *)&v20[v317];
        *((void *)v318 + 1) = v320;
        uint64_t v321 = *(void *)&v20[v317 + 16];
        uint64_t v322 = *(void *)&v20[v317 + 24];
        uint64_t v323 = *(void *)&v20[v317 + 32];
        uint64_t v324 = *(void *)&v20[v317 + 40];
        LOBYTE(v311) = v319[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v321, v322, v323, v324, v311);
        *((void *)v318 + 2) = v321;
        *((void *)v318 + 3) = v322;
        *((void *)v318 + 4) = v323;
        *((void *)v318 + 5) = v324;
        v318[48] = v311;
        v318[49] = v319[49];
        uint64_t v325 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        char v326 = &v318[v325];
        uint64_t v327 = &v319[v325];
        uint64_t v328 = &v319[v325];
        uint64_t v16 = v587;
        uint64_t v17 = v605;
        v605(&v318[v325], v328, v587);
        uint64_t v329 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        unint64_t v330 = &v326[v329];
        uint64_t v331 = &v327[v329];
        uint64_t v332 = *((void *)v331 + 1);
        *(void *)unint64_t v330 = *(void *)v331;
        *((void *)v330 + 1) = v332;
        swift_retain();
        goto LABEL_187;
      case 4u:
        uint64_t v69 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v70 = swift_getEnumCaseMultiPayload();
        if (v70 == 2)
        {
          unint64_t v279 = *((void *)v20 + 1);
          if (v279 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v333 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v333;
            *((void *)v19 + 1) = v279;
          }
        }
        else if (v70 == 1)
        {
          uint64_t v280 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v280;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v70)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v69 - 8) + 64));
            goto LABEL_134;
          }
          uint64_t v71 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v19, v20, v71);
        }
        swift_storeEnumTagMultiPayload();
LABEL_134:
        unint64_t v334 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
        *(void *)&v19[v334[12]] = *(void *)&v20[v334[12]];
        *(void *)&v19[v334[16]] = *(void *)&v20[v334[16]];
        uint64_t v335 = v334[20];
        uint64_t v336 = &v19[v335];
        uint64_t v337 = &v20[v335];
        uint64_t v338 = *(void *)&v20[v335 + 8];
        *(void *)uint64_t v336 = *(void *)&v20[v335];
        *((void *)v336 + 1) = v338;
        uint64_t v339 = *(void *)&v20[v335 + 16];
        uint64_t v340 = *(void *)&v20[v335 + 24];
        uint64_t v341 = *(void *)&v20[v335 + 32];
        uint64_t v342 = *(void *)&v20[v335 + 40];
        unsigned __int8 v343 = v337[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v339, v340, v341, v342, v343);
        *((void *)v336 + 2) = v339;
        *((void *)v336 + 3) = v340;
        *((void *)v336 + 4) = v341;
        *((void *)v336 + 5) = v342;
        v336[48] = v343;
        v336[49] = v337[49];
        uint64_t v344 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        unint64_t v345 = &v336[v344];
        uint64_t v346 = &v337[v344];
        uint64_t v347 = &v337[v344];
        uint64_t v16 = v587;
        uint64_t v17 = v605;
        v605(&v336[v344], v347, v587);
        uint64_t v348 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v349 = &v345[v348];
        unint64_t v350 = &v346[v348];
        uint64_t v351 = *((void *)v350 + 1);
        *(void *)uint64_t v349 = *(void *)v350;
        *((void *)v349 + 1) = v351;
        swift_retain();
        goto LABEL_187;
      case 5u:
        uint64_t v72 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v73 = swift_getEnumCaseMultiPayload();
        if (v73 == 2)
        {
          unint64_t v281 = *((void *)v20 + 1);
          if (v281 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v352 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v352;
            *((void *)v19 + 1) = v281;
          }
        }
        else if (v73 == 1)
        {
          uint64_t v282 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v282;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v73)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v72 - 8) + 64));
            goto LABEL_137;
          }
          uint64_t v74 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v19, v20, v74);
        }
        swift_storeEnumTagMultiPayload();
LABEL_137:
        uint64_t v353 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)&v19[*(int *)(v353 + 48)] = *(void *)&v20[*(int *)(v353 + 48)];
        uint64_t v354 = *(int *)(v353 + 64);
        unint64_t v355 = &v19[v354];
        uint64_t v356 = &v20[v354];
        swift_bridgeObjectRetain();
        v17(v355, v356, v16);
        uint64_t v357 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v355[v357[13]] = v356[v357[13]];
        uint64_t v358 = v357[14];
        unint64_t v359 = &v355[v358];
        uint64_t v360 = &v356[v358];
        uint64_t v361 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 16))(v359, v360, v361);
        uint64_t v362 = v357[15];
        uint64_t v107 = &v355[v362];
        uint64_t v108 = &v356[v362];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v363 = swift_getEnumCaseMultiPayload();
        if (v363 == 2) {
          goto LABEL_164;
        }
        if (v363 == 1) {
          goto LABEL_53;
        }
        goto LABEL_166;
      case 6u:
        uint64_t v75 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v76 = swift_getEnumCaseMultiPayload();
        if (v76 == 2)
        {
          unint64_t v283 = *((void *)v20 + 1);
          if (v283 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v364 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v364;
            *((void *)v19 + 1) = v283;
          }
        }
        else if (v76 == 1)
        {
          uint64_t v284 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v284;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v76)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v75 - 8) + 64));
            goto LABEL_144;
          }
          uint64_t v77 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v19, v20, v77);
        }
        swift_storeEnumTagMultiPayload();
LABEL_144:
        uint64_t v365 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)&v19[*(int *)(v365 + 48)] = *(void *)&v20[*(int *)(v365 + 48)];
        uint64_t v366 = *(int *)(v365 + 64);
        uint64_t v367 = &v19[v366];
        uint64_t v368 = &v20[v366];
        swift_bridgeObjectRetain();
        v17(v367, v368, v16);
        uint64_t v369 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v367[v369[13]] = v368[v369[13]];
        uint64_t v370 = v369[14];
        uint64_t v371 = &v367[v370];
        uint64_t v372 = &v368[v370];
        uint64_t v373 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 16))(v371, v372, v373);
        uint64_t v374 = v369[15];
        uint64_t v107 = &v367[v374];
        uint64_t v108 = &v368[v374];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v375 = swift_getEnumCaseMultiPayload();
        if (v375 == 2) {
          goto LABEL_164;
        }
        if (v375 == 1) {
          goto LABEL_53;
        }
        goto LABEL_166;
      case 7u:
        uint64_t v78 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v79 = swift_getEnumCaseMultiPayload();
        if (v79 == 2)
        {
          unint64_t v285 = *((void *)v20 + 1);
          if (v285 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v376 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v376;
            *((void *)v19 + 1) = v285;
            uint64_t v6 = v607;
          }
        }
        else if (v79 == 1)
        {
          uint64_t v286 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v286;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v79)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v78 - 8) + 64));
            goto LABEL_151;
          }
          uint64_t v80 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v19, v20, v80);
        }
        swift_storeEnumTagMultiPayload();
LABEL_151:
        uint64_t v377 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
        *(void *)&v19[*(int *)(v377 + 48)] = *(void *)&v20[*(int *)(v377 + 48)];
        *(void *)&v19[*(int *)(v377 + 64)] = *(void *)&v20[*(int *)(v377 + 64)];
        swift_bridgeObjectRetain();
        goto LABEL_198;
      case 8u:
        uint64_t v81 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v82 = swift_getEnumCaseMultiPayload();
        if (v82 == 2)
        {
          unint64_t v287 = *((void *)v20 + 1);
          if (v287 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v378 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v378;
            *((void *)v19 + 1) = v287;
          }
        }
        else if (v82 == 1)
        {
          uint64_t v288 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v288;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v82)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v81 - 8) + 64));
            goto LABEL_154;
          }
          uint64_t v83 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v19, v20, v83);
        }
        swift_storeEnumTagMultiPayload();
LABEL_154:
        uint64_t v379 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)&v19[v379[12]] = *(void *)&v20[v379[12]];
        *(void *)&v19[v379[16]] = *(void *)&v20[v379[16]];
        uint64_t v380 = v379[20];
        uint64_t v381 = &v19[v380];
        BOOL v382 = &v20[v380];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(v381, v382, v16);
        uint64_t v383 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v381[v383[13]] = v382[v383[13]];
        uint64_t v384 = v383[14];
        uint64_t v385 = &v381[v384];
        uint64_t v386 = &v382[v384];
        uint64_t v387 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 16))(v385, v386, v387);
        uint64_t v388 = v383[15];
        uint64_t v107 = &v381[v388];
        uint64_t v108 = &v382[v388];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v389 = swift_getEnumCaseMultiPayload();
        if (v389 == 2) {
          goto LABEL_164;
        }
        if (v389 == 1) {
          goto LABEL_53;
        }
        goto LABEL_166;
      case 9u:
        uint64_t v84 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v85 = swift_getEnumCaseMultiPayload();
        if (v85 == 2)
        {
          unint64_t v289 = *((void *)v20 + 1);
          if (v289 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v390 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v390;
            *((void *)v19 + 1) = v289;
          }
        }
        else if (v85 == 1)
        {
          uint64_t v290 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v290;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v85)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v84 - 8) + 64));
            goto LABEL_161;
          }
          uint64_t v86 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v19, v20, v86);
        }
        swift_storeEnumTagMultiPayload();
LABEL_161:
        uint64_t v391 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)&v19[v391[12]] = *(void *)&v20[v391[12]];
        *(void *)&v19[v391[16]] = *(void *)&v20[v391[16]];
        uint64_t v392 = v391[20];
        uint64_t v393 = &v19[v392];
        uint64_t v394 = &v20[v392];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(v393, v394, v16);
        uint64_t v395 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v393[v395[13]] = v394[v395[13]];
        uint64_t v396 = v395[14];
        uint64_t v397 = &v393[v396];
        BOOL v398 = &v394[v396];
        uint64_t v399 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v399 - 8) + 16))(v397, v398, v399);
        uint64_t v400 = v395[15];
        uint64_t v107 = &v393[v400];
        uint64_t v108 = &v394[v400];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v401 = swift_getEnumCaseMultiPayload();
        if (v401 == 2)
        {
LABEL_164:
          uint64_t v402 = *((void *)v108 + 1);
          *(void *)uint64_t v107 = *(void *)v108;
          *((void *)v107 + 1) = v402;
          uint64_t v403 = *((void *)v108 + 3);
          *((void *)v107 + 2) = *((void *)v108 + 2);
          *((void *)v107 + 3) = v403;
          *((void *)v107 + 4) = *((void *)v108 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v404 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v405 = &v107[v404];
          uint64_t v406 = &v108[v404];
          uint64_t v407 = *(void *)&v108[v404 + 8];
          *(void *)uint64_t v405 = *(void *)&v108[v404];
          *((void *)v405 + 1) = v407;
          uint64_t v408 = *(void *)&v108[v404 + 16];
          uint64_t v409 = *(void *)&v108[v404 + 24];
          uint64_t v410 = *(void *)&v108[v404 + 32];
          uint64_t v411 = *(void *)&v108[v404 + 40];
          uint64_t v412 = a1;
          unsigned __int8 v413 = v406[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v408, v409, v410, v411, v413);
          *((void *)v405 + 2) = v408;
          *((void *)v405 + 3) = v409;
          *((void *)v405 + 4) = v410;
          *((void *)v405 + 5) = v411;
          v405[48] = v413;
          a1 = v412;
          uint64_t v16 = v587;
          v405[49] = v406[49];
          uint64_t v414 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v115 = &v405[v414];
          uint64_t v116 = &v406[v414];
          uint64_t v3 = v606;
          uint64_t v17 = v605;
          v605(&v405[v414], v116, v587);
          uint64_t v117 = &qword_1E96710D8;
          goto LABEL_165;
        }
        if (v401 == 1)
        {
LABEL_53:
          *uint64_t v107 = *v108;
          uint64_t v110 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v111 = &v107[v110];
          uint64_t v112 = &v108[v110];
          uint64_t v113 = &v108[v110];
          uint64_t v17 = v605;
          v605(&v107[v110], v113, v16);
          uint64_t v114 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v115 = &v111[v114];
          uint64_t v116 = &v112[v114];
          v605(v115, v116, v16);
          uint64_t v117 = (uint64_t *)&unk_1E96710F0;
          goto LABEL_165;
        }
LABEL_166:
        uint64_t v416 = *((void *)v108 + 1);
        *(void *)uint64_t v107 = *(void *)v108;
        *((void *)v107 + 1) = v416;
        uint64_t v417 = *((void *)v108 + 3);
        *((void *)v107 + 2) = *((void *)v108 + 2);
        *((void *)v107 + 3) = v417;
        *((void *)v107 + 4) = *((void *)v108 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v418 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v419 = &v107[v418];
        char v420 = &v108[v418];
        uint64_t v421 = *(void *)&v108[v418 + 8];
        *(void *)uint64_t v419 = *(void *)&v108[v418];
        *((void *)v419 + 1) = v421;
        uint64_t v422 = *(void *)&v108[v418 + 16];
        uint64_t v423 = *(void *)&v108[v418 + 24];
        uint64_t v424 = *(void *)&v108[v418 + 32];
        uint64_t v425 = *(void *)&v108[v418 + 40];
        unsigned __int8 v426 = v420[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v422, v423, v424, v425, v426);
        *((void *)v419 + 2) = v422;
        *((void *)v419 + 3) = v423;
        *((void *)v419 + 4) = v424;
        *((void *)v419 + 5) = v425;
        v419[48] = v426;
        v419[49] = v420[49];
        uint64_t v427 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v428 = &v419[v427];
        uint64_t v429 = &v420[v427];
        uint64_t v17 = v605;
        v605(&v419[v427], &v420[v427], v16);
        uint64_t v430 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v245 = &v428[v430];
        uint64_t v246 = &v429[v430];
        a1 = v604;
        uint64_t v3 = v606;
        uint64_t v6 = v607;
        goto LABEL_167;
      case 0xAu:
        uint64_t v87 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v88 = swift_getEnumCaseMultiPayload();
        if (v88 == 2)
        {
          unint64_t v291 = *((void *)v20 + 1);
          if (v291 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          }
          else
          {
            uint64_t v432 = *(void *)v20;
            sub_1A54E9E98(*(void *)v20, *((void *)v20 + 1));
            *(void *)uint64_t v19 = v432;
            *((void *)v19 + 1) = v291;
            uint64_t v6 = v607;
          }
        }
        else if (v88 == 1)
        {
          uint64_t v292 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v292;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v88)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v87 - 8) + 64));
            goto LABEL_170;
          }
          uint64_t v89 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v19, v20, v89);
        }
        swift_storeEnumTagMultiPayload();
LABEL_170:
        uint64_t v433 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
        *(void *)&v19[*(int *)(v433 + 48)] = *(void *)&v20[*(int *)(v433 + 48)];
        *(void *)&v19[*(int *)(v433 + 64)] = *(void *)&v20[*(int *)(v433 + 64)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_198;
      case 0xBu:
        uint64_t v90 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v90;
        uint64_t v91 = *((void *)v20 + 3);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = v91;
        uint64_t v92 = *((void *)v20 + 4);
        uint64_t v93 = *((void *)v20 + 5);
        uint64_t v94 = v17;
        char v95 = v20[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *((void *)v19 + 4) = v92;
        *((void *)v19 + 5) = v93;
        v19[48] = v95;
        uint64_t v96 = *((void *)v20 + 7);
        unint64_t v97 = *((void *)v20 + 8);
        sub_1A54E9E98(v96, v97);
        *((void *)v19 + 7) = v96;
        *((void *)v19 + _Block_object_dispose(&a9, 8) = v97;
        uint64_t v98 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
        uint64_t v99 = &v19[v98];
        uint64_t v100 = &v20[v98];
        v94(&v19[v98], &v20[v98], v16);
        uint64_t v101 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v99[v101[13]] = v100[v101[13]];
        uint64_t v102 = v101[14];
        uint64_t v103 = &v99[v102];
        unint64_t v104 = &v100[v102];
        uint64_t v105 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
        uint64_t v106 = v101[15];
        uint64_t v107 = &v99[v106];
        uint64_t v108 = &v100[v106];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v109 = swift_getEnumCaseMultiPayload();
        if (v109 == 2) {
          goto LABEL_164;
        }
        if (v109 == 1) {
          goto LABEL_53;
        }
        goto LABEL_166;
      case 0xCu:
        uint64_t v118 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v118;
        uint64_t v119 = *((void *)v20 + 3);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = v119;
        uint64_t v120 = *((void *)v20 + 4);
        uint64_t v121 = *((void *)v20 + 5);
        char v122 = v20[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *((void *)v19 + 4) = v120;
        *((void *)v19 + 5) = v121;
        uint64_t v6 = v607;
        v19[48] = v122;
        uint64_t v17 = v605;
        uint64_t v123 = *((void *)v20 + 7);
        unint64_t v124 = *((void *)v20 + 8);
        sub_1A54E9E98(v123, v124);
        *((void *)v19 + 7) = v123;
        *((void *)v19 + _Block_object_dispose(&a9, 8) = v124;
        goto LABEL_198;
      case 0xDu:
        uint64_t v125 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v125;
        uint64_t v126 = *((void *)v20 + 3);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = v126;
        uint64_t v127 = *((void *)v20 + 4);
        uint64_t v128 = *((void *)v20 + 5);
        int v129 = v17;
        char v130 = v20[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *((void *)v19 + 4) = v127;
        *((void *)v19 + 5) = v128;
        v19[48] = v130;
        uint64_t v131 = *((void *)v20 + 7);
        unint64_t v132 = *((void *)v20 + 8);
        sub_1A54E9E98(v131, v132);
        *((void *)v19 + 7) = v131;
        *((void *)v19 + _Block_object_dispose(&a9, 8) = v132;
        uint64_t v133 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
        int v134 = &v19[v133];
        uint64_t v135 = &v20[v133];
        v129(&v19[v133], &v20[v133], v16);
        unint64_t v136 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        v134[v136[13]] = v135[v136[13]];
        uint64_t v137 = v136[14];
        char v138 = &v134[v137];
        uint64_t v139 = &v135[v137];
        uint64_t v140 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
        uint64_t v141 = v136[15];
        uint64_t v48 = &v134[v141];
        uint64_t v49 = &v135[v141];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v142 = swift_getEnumCaseMultiPayload();
        if (v142 == 2)
        {
LABEL_81:
          uint64_t v217 = *((void *)v49 + 1);
          *(void *)uint64_t v48 = *(void *)v49;
          *((void *)v48 + 1) = v217;
          uint64_t v218 = *((void *)v49 + 3);
          *((void *)v48 + 2) = *((void *)v49 + 2);
          *((void *)v48 + 3) = v218;
          *((void *)v48 + 4) = *((void *)v49 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v219 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v220 = &v48[v219];
          uint64_t v221 = &v49[v219];
          uint64_t v222 = *(void *)&v49[v219 + 8];
          *(void *)uint64_t v220 = *(void *)&v49[v219];
          *((void *)v220 + 1) = v222;
          uint64_t v223 = *(void *)&v49[v219 + 16];
          uint64_t v224 = *(void *)&v49[v219 + 24];
          uint64_t v225 = *(void *)&v49[v219 + 32];
          uint64_t v226 = *(void *)&v49[v219 + 40];
          uint64_t v227 = a1;
          unsigned __int8 v228 = v221[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v223, v224, v225, v226, v228);
          *((void *)v220 + 2) = v223;
          *((void *)v220 + 3) = v224;
          *((void *)v220 + 4) = v225;
          *((void *)v220 + 5) = v226;
          v220[48] = v228;
          a1 = v227;
          uint64_t v16 = v587;
          v220[49] = v221[49];
          uint64_t v229 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v115 = &v220[v229];
          uint64_t v116 = &v221[v229];
          uint64_t v3 = v606;
          uint64_t v17 = v605;
          v605(&v220[v229], v116, v587);
          uint64_t v117 = &qword_1E96710D8;
        }
        else
        {
          if (v142 != 1)
          {
LABEL_82:
            uint64_t v230 = *((void *)v49 + 1);
            *(void *)uint64_t v48 = *(void *)v49;
            *((void *)v48 + 1) = v230;
            uint64_t v231 = *((void *)v49 + 3);
            *((void *)v48 + 2) = *((void *)v49 + 2);
            *((void *)v48 + 3) = v231;
            *((void *)v48 + 4) = *((void *)v49 + 4);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v232 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
            uint64_t v233 = &v48[v232];
            uint64_t v234 = &v49[v232];
            uint64_t v235 = *(void *)&v49[v232 + 8];
            *(void *)uint64_t v233 = *(void *)&v49[v232];
            *((void *)v233 + 1) = v235;
            uint64_t v236 = *(void *)&v49[v232 + 16];
            uint64_t v237 = *(void *)&v49[v232 + 24];
            uint64_t v238 = *(void *)&v49[v232 + 32];
            uint64_t v239 = *(void *)&v49[v232 + 40];
            unsigned __int8 v240 = v234[48];
            swift_bridgeObjectRetain();
            sub_1A551182C(v236, v237, v238, v239, v240);
            *((void *)v233 + 2) = v236;
            *((void *)v233 + 3) = v237;
            *((void *)v233 + 4) = v238;
            *((void *)v233 + 5) = v239;
            v233[48] = v240;
            v233[49] = v234[49];
            uint64_t v241 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
            uint64_t v242 = &v233[v241];
            uint64_t v243 = &v234[v241];
            uint64_t v17 = v605;
            v605(&v233[v241], &v234[v241], v16);
            uint64_t v244 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
            uint64_t v245 = &v242[v244];
            uint64_t v246 = &v243[v244];
            a1 = v604;
            uint64_t v3 = v606;
            uint64_t v6 = v607;
            goto LABEL_167;
          }
LABEL_57:
          *uint64_t v48 = *v49;
          uint64_t v143 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          uint64_t v144 = &v48[v143];
          uint64_t v145 = &v49[v143];
          uint64_t v146 = &v49[v143];
          uint64_t v17 = v605;
          v605(&v48[v143], v146, v16);
          uint64_t v147 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          uint64_t v115 = &v144[v147];
          uint64_t v116 = &v145[v147];
          v605(v115, v116, v16);
          uint64_t v117 = (uint64_t *)&unk_1E96710F0;
        }
LABEL_165:
        uint64_t v415 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v117) + 68);
        uint64_t v245 = &v115[v415];
        uint64_t v246 = &v116[v415];
        uint64_t v6 = v607;
LABEL_167:
        uint64_t v431 = *((void *)v246 + 1);
        *(void *)uint64_t v245 = *(void *)v246;
        *((void *)v245 + 1) = v431;
        swift_retain();
        swift_storeEnumTagMultiPayload();
LABEL_198:
        swift_storeEnumTagMultiPayload();
        goto LABEL_199;
      case 0xEu:
        unint64_t v148 = *((void *)v20 + 3);
        if (v148 >= 2)
        {
          uint64_t v169 = *((void *)v20 + 1);
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v169;
          *((void *)v19 + 2) = *((void *)v20 + 2);
          *((void *)v19 + 3) = v148;
          uint64_t v170 = *((void *)v20 + 4);
          uint64_t v171 = *((void *)v20 + 5);
          char v172 = v20[48];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          *((void *)v19 + 4) = v170;
          *((void *)v19 + 5) = v171;
          v19[48] = v172;
          uint64_t v173 = *((void *)v20 + 7);
          unint64_t v174 = *((void *)v20 + 8);
          sub_1A54E9E98(v173, v174);
          *((void *)v19 + 7) = v173;
          *((void *)v19 + _Block_object_dispose(&a9, 8) = v174;
        }
        else
        {
          long long v149 = *((_OWORD *)v20 + 3);
          *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
          *((_OWORD *)v19 + 3) = v149;
          *((void *)v19 + _Block_object_dispose(&a9, 8) = *((void *)v20 + 8);
          long long v150 = *((_OWORD *)v20 + 1);
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          *((_OWORD *)v19 + 1) = v150;
        }
        unint64_t v175 = *((void *)v20 + 12);
        if (v175 >= 2)
        {
          uint64_t v178 = *((void *)v20 + 10);
          *((void *)v19 + 9) = *((void *)v20 + 9);
          *((void *)v19 + 10) = v178;
          *((void *)v19 + 11) = *((void *)v20 + 11);
          *((void *)v19 + 12) = v175;
          uint64_t v179 = *((void *)v20 + 13);
          uint64_t v180 = *((void *)v20 + 14);
          char v181 = v20[120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          *((void *)v19 + 13) = v179;
          *((void *)v19 + 14) = v180;
          v19[120] = v181;
          uint64_t v182 = *((void *)v20 + 16);
          unint64_t v183 = *((void *)v20 + 17);
          sub_1A54E9E98(v182, v183);
          *((void *)v19 + 16) = v182;
          *((void *)v19 + 17) = v183;
        }
        else
        {
          long long v176 = *(_OWORD *)(v20 + 120);
          *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
          *(_OWORD *)(v19 + 120) = v176;
          *((void *)v19 + 17) = *((void *)v20 + 17);
          long long v177 = *(_OWORD *)(v20 + 88);
          *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
          *(_OWORD *)(v19 + 8_Block_object_dispose(&a9, 8) = v177;
        }
        uint64_t v6 = v607;
        uint64_t v17 = v605;
        goto LABEL_198;
      case 0xFu:
        uint64_t v151 = a1;
        uint64_t v152 = sub_1A56D4C28();
        uint64_t v153 = *(void *)(v152 - 8);
        uint64_t v154 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
        v154(v19, v20, v152);
        uint64_t v155 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v156 = v155[5];
        uint64_t v157 = &v19[v156];
        uint64_t v158 = &v20[v156];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(&v20[v156], 1, v152))
        {
          uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v157, v158, *(void *)(*(void *)(v159 - 8) + 64));
        }
        else
        {
          v154(v157, v158, v152);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v157, 0, 1, v152);
        }
        v19[v155[6]] = v20[v155[6]];
        uint64_t v184 = v155[7];
        uint64_t v185 = &v19[v184];
        uint64_t v186 = &v20[v184];
        uint64_t v187 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v188 = *(void *)(v187 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(v186, 1, v187))
        {
          uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v185, v186, *(void *)(*(void *)(v189 - 8) + 64));
          uint64_t v17 = v605;
        }
        else
        {
          uint64_t v196 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v197 = *(void *)(v196 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v186, 1, v196))
          {
            memcpy(v185, v186, *(void *)(v188 + 64));
          }
          else
          {
            int v293 = swift_getEnumCaseMultiPayload();
            if (v293 == 1)
            {
              uint64_t v434 = *((void *)v186 + 1);
              *(void *)uint64_t v185 = *(void *)v186;
              *((void *)v185 + 1) = v434;
              *((_OWORD *)v185 + 1) = *((_OWORD *)v186 + 1);
              uint64_t v435 = *((void *)v186 + 5);
              *((void *)v185 + 4) = *((void *)v186 + 4);
              *((void *)v185 + 5) = v435;
              *((void *)v185 + 6) = *((void *)v186 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v293)
            {
              memcpy(v185, v186, *(void *)(v197 + 64));
            }
            else
            {
              uint64_t v294 = *((void *)v186 + 1);
              *(void *)uint64_t v185 = *(void *)v186;
              *((void *)v185 + 1) = v294;
              swift_bridgeObjectRetain();
              uint64_t v295 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              __dsta = &v185[v295];
              unint64_t v296 = &v186[v295];
              uint64_t v297 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16))(__dsta, v296, v297);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v197 + 56))(v185, 0, 1, v196);
          }
          a1 = v151;
          uint64_t v17 = v605;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
        }
        v436 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
        uint64_t v437 = v436[12];
        uint64_t v438 = (uint64_t *)&v19[v437];
        uint64_t v439 = (uint64_t *)&v20[v437];
        uint64_t v440 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v441 = swift_getEnumCaseMultiPayload();
        uint64_t v16 = v587;
        if (v441 == 2)
        {
          unint64_t v443 = v439[1];
          if (v443 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v438 = *(_OWORD *)v439;
          }
          else
          {
            uint64_t v445 = *v439;
            sub_1A54E9E98(v445, v443);
            *uint64_t v438 = v445;
            v438[1] = v443;
          }
          uint64_t v17 = v605;
        }
        else if (v441 == 1)
        {
          uint64_t v444 = v439[1];
          *uint64_t v438 = *v439;
          v438[1] = v444;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v441)
          {
            memcpy(v438, v439, *(void *)(*(void *)(v440 - 8) + 64));
            goto LABEL_186;
          }
          uint64_t v442 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v442 - 8) + 16))(v438, v439, v442);
        }
        swift_storeEnumTagMultiPayload();
LABEL_186:
        uint64_t v446 = v436[16];
        unint64_t v447 = &v19[v446];
        uint64_t v448 = &v20[v446];
        uint64_t v449 = *((void *)v448 + 1);
        *(void *)unint64_t v447 = *(void *)v448;
        *((void *)v447 + 1) = v449;
        *(void *)&v19[v436[20]] = *(void *)&v20[v436[20]];
        *(void *)&v19[v436[24]] = *(void *)&v20[v436[24]];
        *(void *)&v19[v436[28]] = *(void *)&v20[v436[28]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_187:
        swift_storeEnumTagMultiPayload();
        uint64_t v3 = v606;
        uint64_t v6 = v607;
        goto LABEL_199;
      case 0x10u:
        uint64_t v160 = a1;
        uint64_t v161 = sub_1A56D4C28();
        uint64_t v162 = *(void *)(v161 - 8);
        uint64_t v163 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
        v163(v19, v20, v161);
        uint64_t v164 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v165 = v164[5];
        uint64_t v166 = &v19[v165];
        uint64_t v167 = &v20[v165];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(&v20[v165], 1, v161))
        {
          uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
        }
        else
        {
          v163(v166, v167, v161);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v166, 0, 1, v161);
        }
        v19[v164[6]] = v20[v164[6]];
        uint64_t v190 = v164[7];
        char v191 = &v19[v190];
        char v192 = &v20[v190];
        uint64_t v193 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v194 = *(void *)(v193 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v192, 1, v193))
        {
          uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v191, v192, *(void *)(*(void *)(v195 - 8) + 64));
        }
        else
        {
          uint64_t v198 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v199 = *(void *)(v198 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48))(v192, 1, v198))
          {
            memcpy(v191, v192, *(void *)(v194 + 64));
          }
          else
          {
            int v298 = swift_getEnumCaseMultiPayload();
            if (v298 == 1)
            {
              uint64_t v450 = *((void *)v192 + 1);
              *(void *)char v191 = *(void *)v192;
              *((void *)v191 + 1) = v450;
              *((_OWORD *)v191 + 1) = *((_OWORD *)v192 + 1);
              uint64_t v451 = *((void *)v192 + 5);
              *((void *)v191 + 4) = *((void *)v192 + 4);
              *((void *)v191 + 5) = v451;
              *((void *)v191 + 6) = *((void *)v192 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v298)
            {
              memcpy(v191, v192, *(void *)(v199 + 64));
            }
            else
            {
              uint64_t v299 = *((void *)v192 + 1);
              *(void *)char v191 = *(void *)v192;
              *((void *)v191 + 1) = v299;
              swift_bridgeObjectRetain();
              uint64_t v300 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              __dstb = &v191[v300];
              uint64_t v301 = &v192[v300];
              uint64_t v302 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(__dstb, v301, v302);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v199 + 56))(v191, 0, 1, v198);
          }
          a1 = v160;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v191, 0, 1, v193);
        }
        uint64_t v452 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
        uint64_t v453 = &v19[v452];
        v454 = &v20[v452];
        uint64_t v455 = type metadata accessor for SFAirDropReceive.Failure();
        int v456 = swift_getEnumCaseMultiPayload();
        uint64_t v3 = v606;
        uint64_t v16 = v587;
        if (v456 == 1)
        {
          uint64_t v462 = *((void *)v454 + 1);
          *(void *)uint64_t v453 = *(void *)v454;
          *((void *)v453 + 1) = v462;
          *((_OWORD *)v453 + 1) = *((_OWORD *)v454 + 1);
          uint64_t v463 = *((void *)v454 + 5);
          *((void *)v453 + 4) = *((void *)v454 + 4);
          *((void *)v453 + 5) = v463;
          *((void *)v453 + 6) = *((void *)v454 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v456)
        {
          memcpy(v453, v454, *(void *)(*(void *)(v455 - 8) + 64));
        }
        else
        {
          uint64_t v457 = *((void *)v454 + 1);
          *(void *)uint64_t v453 = *(void *)v454;
          *((void *)v453 + 1) = v457;
          swift_bridgeObjectRetain();
          uint64_t v458 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
          uint64_t v459 = &v453[v458];
          long long v460 = &v454[v458];
          uint64_t v461 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v461 - 8) + 16))(v459, v460, v461);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v6 = v607;
        uint64_t v17 = v605;
        goto LABEL_198;
      default:
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_199;
    }
  }
  return v11;
}

uint64_t sub_1A551182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 2u)
  {
    if (a5 != 2) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A551188C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A55118A0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s8TransferVwxx(uint64_t a1, int *a2)
{
  type metadata accessor for SFAirDropClient.Identifier();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v5 = sub_1A56D4CB8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_1A56D4CB8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = (uint64_t *)(a1 + a2[6]);
  type metadata accessor for SFAirDropReceive.Transfer.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
      goto LABEL_71;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v9[7], v9[8]);
      uint64_t v10 = (char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
      v8((uint64_t)v10, v7);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      uint64_t v12 = &v10[*(int *)(v11 + 56)];
      uint64_t v13 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      uint64_t v9 = (uint64_t *)&v10[*(int *)(v11 + 60)];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 2) {
        goto LABEL_44;
      }
      if (v14 == 1) {
        goto LABEL_8;
      }
      goto LABEL_43;
    case 3u:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v17 = swift_getEnumCaseMultiPayload();
      switch(v17)
      {
        case 2:
          unint64_t v69 = v9[1];
          if (v69 >> 60 != 15) {
            sub_1A54EA09C(*v9, v69);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v18 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v18 - 8) + 8))(v9, v18);
          break;
      }
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      sub_1A54F7390(*(uint64_t *)((char *)v9 + *(int *)(v70 + 48)), *(uint64_t *)((char *)v9 + *(int *)(v70 + 48) + 8), *(uint64_t *)((char *)v9 + *(int *)(v70 + 48) + 16));
      goto LABEL_87;
    case 4u:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v19 = swift_getEnumCaseMultiPayload();
      switch(v19)
      {
        case 2:
          unint64_t v71 = v9[1];
          if (v71 >> 60 != 15) {
            sub_1A54EA09C(*v9, v71);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v20 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v20 - 8) + 8))(v9, v20);
          break;
      }
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
LABEL_87:
      swift_bridgeObjectRelease();
      uint64_t v66 = *(int *)(v70 + 80);
      goto LABEL_88;
    case 5u:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v21 = swift_getEnumCaseMultiPayload();
      if (v21 == 2) {
        goto LABEL_64;
      }
      if (v21 == 1) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 6u:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v21 = swift_getEnumCaseMultiPayload();
      if (v21 == 2)
      {
LABEL_64:
        unint64_t v58 = v9[1];
        if (v58 >> 60 != 15) {
          sub_1A54EA09C(*v9, v58);
        }
      }
      else if (v21 == 1)
      {
LABEL_19:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_22:
        if (!v21)
        {
          uint64_t v22 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v22 - 8) + 8))(v9, v22);
        }
      }
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      uint64_t v29 = *(int *)(v59 + 64);
      goto LABEL_70;
    case 7u:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v23 = swift_getEnumCaseMultiPayload();
      switch(v23)
      {
        case 2:
          unint64_t v74 = v9[1];
          if (v74 >> 60 != 15) {
            sub_1A54EA09C(*v9, v74);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v24 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v24 - 8) + 8))(v9, v24);
          break;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      goto LABEL_102;
    case 8u:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2) {
        goto LABEL_67;
      }
      if (v25 == 1) {
        goto LABEL_30;
      }
      goto LABEL_33;
    case 9u:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2)
      {
LABEL_67:
        unint64_t v60 = v9[1];
        if (v60 >> 60 != 15) {
          sub_1A54EA09C(*v9, v60);
        }
      }
      else if (v25 == 1)
      {
LABEL_30:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_33:
        if (!v25)
        {
          uint64_t v26 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v26 - 8) + 8))(v9, v26);
        }
      }
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = *(int *)(v61 + 80);
LABEL_70:
      uint64_t v9 = (uint64_t *)((char *)v9 + v29);
LABEL_71:
      v8((uint64_t)v9, v7);
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      uint64_t v63 = (char *)v9 + *(int *)(v62 + 56);
      uint64_t v64 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
      uint64_t v9 = (uint64_t *)((char *)v9 + *(int *)(v62 + 60));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v65 = swift_getEnumCaseMultiPayload();
      if (v65 == 2) {
        goto LABEL_74;
      }
      if (v65 == 1)
      {
        uint64_t v15 = (char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        v8((uint64_t)v15, v7);
        uint64_t v16 = &qword_1E96710E8;
        goto LABEL_77;
      }
      if (v65) {
        goto LABEL_103;
      }
LABEL_74:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = &qword_1E9670D68;
      goto LABEL_75;
    case 0xAu:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v27 = swift_getEnumCaseMultiPayload();
      switch(v27)
      {
        case 2:
          unint64_t v75 = v9[1];
          if (v75 >> 60 != 15) {
            sub_1A54EA09C(*v9, v75);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v28 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v28 - 8) + 8))(v9, v28);
          break;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      swift_bridgeObjectRelease();
      goto LABEL_102;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v9[7], v9[8]);
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
      goto LABEL_70;
    case 0xCu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v9[7], v9[8]);
      goto LABEL_103;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(v9[7], v9[8]);
      int v30 = (char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
      v8((uint64_t)v30, v7);
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      uint64_t v32 = &v30[*(int *)(v31 + 56)];
      uint64_t v33 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      uint64_t v9 = (uint64_t *)&v30[*(int *)(v31 + 60)];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 2) {
        goto LABEL_44;
      }
      if (v14 == 1)
      {
LABEL_8:
        uint64_t v15 = (char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
        v8((uint64_t)v15, v7);
        uint64_t v16 = &qword_1E9671100;
LABEL_77:
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(v16);
        v8((uint64_t)&v15[*(int *)(v67 + 52)], v7);
        uint64_t v68 = (uint64_t *)&unk_1E96710F0;
      }
      else
      {
LABEL_43:
        if (v14) {
          goto LABEL_103;
        }
LABEL_44:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v34 = &qword_1E9670D60;
LABEL_75:
        uint64_t v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v34) + 80);
LABEL_88:
        uint64_t v72 = (char *)v9 + v66;
        swift_bridgeObjectRelease();
        sub_1A5512C74(*((void *)v72 + 2), *((void *)v72 + 3), *((void *)v72 + 4), *((void *)v72 + 5), v72[48]);
        uint64_t v73 = type metadata accessor for SFAirDrop.DeclineAction();
        v8((uint64_t)&v72[*(int *)(v73 + 28)], v7);
        uint64_t v68 = &qword_1E96710D8;
      }
      __swift_instantiateConcreteTypeFromMangledName(v68);
      swift_release();
LABEL_103:
      uint64_t v77 = a1 + a2[8];
      v8(v77, v7);
      uint64_t v78 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
      sub_1A5512CD4(*(void *)(v77 + v78[5]), *(void *)(v77 + v78[5] + 8), *(unsigned char *)(v77 + v78[5] + 16));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v79 = v77 + v78[24];
      uint64_t v80 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 48))(v79, 1, v80))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            swift_bridgeObjectRelease();
            break;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v88 = v79 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120) + 64);
            uint64_t v89 = sub_1A56D4C28();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v89 - 8) + 8))(v88, v89);
            break;
          default:
            break;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v81 = (uint64_t *)(v77 + v78[27]);
      unint64_t v82 = v81[1];
      if (v82 >> 60 != 15) {
        sub_1A54EA09C(*v81, v82);
      }
      uint64_t v83 = (uint64_t *)(a1 + a2[9]);
      uint64_t v84 = type metadata accessor for SFAirDropReceive.AskResponse();
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48))(v83, 1, v84))
      {
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
        if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v83, 3, v85))
        {
          type metadata accessor for SFAirDropReceive.ItemDestination();
          int v86 = swift_getEnumCaseMultiPayload();
          switch(v86)
          {
            case 2:
              unint64_t v90 = v83[1];
              if (v90 >> 60 != 15) {
                sub_1A54EA09C(*v83, v90);
              }
              break;
            case 1:
              swift_bridgeObjectRelease();
              break;
            case 0:
              uint64_t v87 = sub_1A56D4A28();
              (*(void (**)(uint64_t *, uint64_t))(*(void *)(v87 - 8) + 8))(v83, v87);
              break;
          }
          uint64_t v91 = (char *)v83 + *(int *)(v85 + 48);
          unint64_t v92 = *((void *)v91 + 2);
          if (v92 >> 60 != 15) {
            sub_1A54EA09C(*((void *)v91 + 1), v92);
          }
        }
      }
      uint64_t v93 = a1 + a2[10];
      uint64_t v94 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v94 - 8) + 8))(v93, v94);
      uint64_t v95 = a1 + a2[13];
      uint64_t v96 = type metadata accessor for SFAirDrop.DeclineAction();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 48))(v95, 1, v96);
      if (!result)
      {
        swift_bridgeObjectRelease();
        sub_1A5512C74(*(void *)(v95 + 16), *(void *)(v95 + 24), *(void *)(v95 + 32), *(void *)(v95 + 40), *(unsigned char *)(v95 + 48));
        v8(v95 + *(int *)(v96 + 28), v7);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
        return swift_release();
      }
      return result;
    case 0xEu:
      if ((unint64_t)v9[3] >= 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v9[7], v9[8]);
      }
      if ((unint64_t)v9[12] >= 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        sub_1A54EA09C(v9[16], v9[17]);
      }
      goto LABEL_103;
    case 0xFu:
      uint64_t v35 = sub_1A56D4C28();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void (**)(uint64_t *, uint64_t))(v36 + 8);
      v37(v9, v35);
      uint64_t v38 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v39 = (char *)v9 + *(int *)(v38 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v39, 1, v35)) {
        v37((uint64_t *)v39, v35);
      }
      uint64_t v40 = (char *)v9 + *(int *)(v38 + 28);
      uint64_t v41 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41))
      {
        uint64_t v42 = type metadata accessor for SFAirDropReceive.Failure();
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v40, 1, v42))
        {
          int v101 = swift_getEnumCaseMultiPayload();
          if (v101 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v101)
          {
            swift_bridgeObjectRelease();
            uint64_t v102 = &v40[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48)];
            uint64_t v103 = sub_1A56D4A28();
            (*(void (**)(char *, uint64_t))(*(void *)(v103 - 8) + 8))(v102, v103);
          }
        }
      }
      uint64_t v43 = (uint64_t *)((char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48));
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v44 = swift_getEnumCaseMultiPayload();
      switch(v44)
      {
        case 2:
          unint64_t v76 = v43[1];
          if (v76 >> 60 != 15) {
            sub_1A54EA09C(*v43, v76);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v45 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_102;
    case 0x10u:
      uint64_t v46 = sub_1A56D4C28();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = *(void (**)(uint64_t *, uint64_t))(v47 + 8);
      v48(v9, v46);
      uint64_t v49 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      int v50 = (char *)v9 + *(int *)(v49 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46)) {
        v48((uint64_t *)v50, v46);
      }
      uint64_t v51 = (char *)v9 + *(int *)(v49 + 28);
      uint64_t v52 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v51, 1, v52))
      {
        uint64_t v53 = type metadata accessor for SFAirDropReceive.Failure();
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v51, 1, v53))
        {
          int v98 = swift_getEnumCaseMultiPayload();
          if (v98 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v98)
          {
            swift_bridgeObjectRelease();
            uint64_t v99 = &v51[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48)];
            uint64_t v100 = sub_1A56D4A28();
            (*(void (**)(char *, uint64_t))(*(void *)(v100 - 8) + 8))(v99, v100);
          }
        }
      }
      uint64_t v54 = (char *)v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
      type metadata accessor for SFAirDropReceive.Failure();
      int v55 = swift_getEnumCaseMultiPayload();
      if (v55 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_102:
        swift_bridgeObjectRelease();
      }
      else if (!v55)
      {
        swift_bridgeObjectRelease();
        uint64_t v56 = &v54[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48)];
        uint64_t v57 = sub_1A56D4A28();
        (*(void (**)(char *, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
      }
      goto LABEL_103;
    default:
      goto LABEL_103;
  }
}

uint64_t sub_1A5512C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 2u)
  {
    if (a5 != 2) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5512CD4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s8TransferVwcp(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1A56D4CB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1A56D4CB8();
  int v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  v14(v11, v12, v13);
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  int v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  v604 = a2;
  v605 = a3;
  uint64_t v585 = v13;
  uint64_t v602 = a1;
  uint64_t v603 = v14;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v14(v16, v17, v13);
      int v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v16[v19[13]] = v17[v19[13]];
      uint64_t v20 = v19[14];
      int v21 = &v16[v20];
      uint64_t v22 = &v17[v20];
      uint64_t v23 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      uint64_t v24 = v19[15];
      int v25 = &v16[v24];
      uint64_t v26 = &v17[v24];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v27 = swift_getEnumCaseMultiPayload();
      if (v27 == 2) {
        goto LABEL_81;
      }
      if (v27 == 1) {
        goto LABEL_16;
      }
      uint64_t v197 = *((void *)v26 + 1);
      *(void *)int v25 = *(void *)v26;
      *((void *)v25 + 1) = v197;
      uint64_t v198 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v198;
      *((void *)v25 + 4) = *((void *)v26 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v199 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      uint64_t v200 = &v25[v199];
      uint64_t v201 = &v26[v199];
      uint64_t v202 = *(void *)&v26[v199 + 8];
      *(void *)uint64_t v200 = *(void *)&v26[v199];
      *((void *)v200 + 1) = v202;
      uint64_t v203 = *(void *)&v26[v199 + 16];
      uint64_t v204 = *(void *)&v26[v199 + 24];
      uint64_t v205 = *(void *)&v26[v199 + 32];
      uint64_t v206 = *(void *)&v26[v199 + 40];
      unsigned __int8 v207 = v201[48];
      swift_bridgeObjectRetain();
      sub_1A551182C(v203, v204, v205, v206, v207);
      *((void *)v200 + 2) = v203;
      *((void *)v200 + 3) = v204;
      *((void *)v200 + 4) = v205;
      *((void *)v200 + 5) = v206;
      v200[48] = v207;
      v200[49] = v201[49];
      uint64_t v208 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v209 = &v200[v208];
      unsigned __int8 v210 = &v201[v208];
      int v14 = v603;
      v603(&v200[v208], &v201[v208], v13);
      uint64_t v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v212 = &v209[v211];
      uint64_t v213 = &v210[v211];
      a1 = v602;
      a3 = v605;
      goto LABEL_84;
    case 1u:
      uint64_t v28 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v28;
      uint64_t v29 = *((void *)v17 + 3);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = v29;
      uint64_t v30 = *((void *)v17 + 4);
      uint64_t v31 = *((void *)v17 + 5);
      uint64_t v32 = v14;
      char v33 = v17[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *((void *)v16 + 4) = v30;
      *((void *)v16 + 5) = v31;
      v16[48] = v33;
      uint64_t v34 = *((void *)v17 + 7);
      unint64_t v35 = *((void *)v17 + 8);
      sub_1A54E9E98(v34, v35);
      *((void *)v16 + 7) = v34;
      *((void *)v16 + _Block_object_dispose(&a9, 8) = v35;
      uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
      uint64_t v37 = &v16[v36];
      uint64_t v38 = &v17[v36];
      v32(&v16[v36], &v17[v36], v13);
      uint64_t v39 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      v37[v39[13]] = v38[v39[13]];
      uint64_t v40 = v39[14];
      uint64_t v41 = &v37[v40];
      uint64_t v42 = &v38[v40];
      uint64_t v43 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      uint64_t v44 = v39[15];
      uint64_t v45 = &v37[v44];
      uint64_t v46 = &v38[v44];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 2) {
        goto LABEL_79;
      }
      if (v47 == 1) {
        goto LABEL_55;
      }
      goto LABEL_80;
    case 2u:
      v14(v16, v17, v13);
      uint64_t v48 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v16[v48[13]] = v17[v48[13]];
      uint64_t v49 = v48[14];
      int v50 = &v16[v49];
      uint64_t v51 = &v17[v49];
      uint64_t v52 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      uint64_t v53 = v48[15];
      int v25 = &v16[v53];
      uint64_t v26 = &v17[v53];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v54 = swift_getEnumCaseMultiPayload();
      if (v54 == 2)
      {
LABEL_81:
        uint64_t v244 = *((void *)v26 + 1);
        *(void *)int v25 = *(void *)v26;
        *((void *)v25 + 1) = v244;
        uint64_t v245 = *((void *)v26 + 3);
        *((void *)v25 + 2) = *((void *)v26 + 2);
        *((void *)v25 + 3) = v245;
        *((void *)v25 + 4) = *((void *)v26 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v246 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v247 = &v25[v246];
        uint64_t v248 = &v26[v246];
        uint64_t v249 = *(void *)&v26[v246 + 8];
        *(void *)uint64_t v247 = *(void *)&v26[v246];
        *((void *)v247 + 1) = v249;
        uint64_t v250 = *(void *)&v26[v246 + 16];
        uint64_t v251 = *(void *)&v26[v246 + 24];
        uint64_t v252 = *(void *)&v26[v246 + 32];
        uint64_t v253 = *(void *)&v26[v246 + 40];
        uint64_t v254 = a1;
        unsigned __int8 v255 = v248[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v250, v251, v252, v253, v255);
        *((void *)v247 + 2) = v250;
        *((void *)v247 + 3) = v251;
        *((void *)v247 + 4) = v252;
        *((void *)v247 + 5) = v253;
        v247[48] = v255;
        a1 = v254;
        uint64_t v13 = v585;
        v247[49] = v248[49];
        uint64_t v256 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        unint64_t v60 = &v247[v256];
        uint64_t v61 = &v248[v256];
        int v14 = v603;
        v603(&v247[v256], &v248[v256], v585);
        uint64_t v62 = &qword_1E96710D8;
        goto LABEL_82;
      }
      if (v54 == 1)
      {
LABEL_16:
        *int v25 = *v26;
        uint64_t v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        uint64_t v56 = &v25[v55];
        uint64_t v57 = &v26[v55];
        unint64_t v58 = &v26[v55];
        int v14 = v603;
        v603(&v25[v55], v58, v13);
        uint64_t v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
        unint64_t v60 = &v56[v59];
        uint64_t v61 = &v57[v59];
        v603(v60, v61, v13);
        uint64_t v62 = (uint64_t *)&unk_1E96710F0;
LABEL_82:
        uint64_t v257 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v62) + 68);
        uint64_t v212 = &v60[v257];
        uint64_t v213 = &v61[v257];
        a3 = v605;
        goto LABEL_84;
      }
      uint64_t v258 = *((void *)v26 + 1);
      *(void *)int v25 = *(void *)v26;
      *((void *)v25 + 1) = v258;
      uint64_t v259 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v259;
      *((void *)v25 + 4) = *((void *)v26 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v260 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      uint64_t v261 = &v25[v260];
      uint64_t v262 = &v26[v260];
      uint64_t v263 = *(void *)&v26[v260 + 8];
      *(void *)uint64_t v261 = *(void *)&v26[v260];
      *((void *)v261 + 1) = v263;
      uint64_t v264 = *(void *)&v26[v260 + 16];
      uint64_t v265 = *(void *)&v26[v260 + 24];
      uint64_t v266 = *(void *)&v26[v260 + 32];
      uint64_t v267 = *(void *)&v26[v260 + 40];
      unsigned __int8 v268 = v262[48];
      swift_bridgeObjectRetain();
      sub_1A551182C(v264, v265, v266, v267, v268);
      *((void *)v261 + 2) = v264;
      *((void *)v261 + 3) = v265;
      *((void *)v261 + 4) = v266;
      *((void *)v261 + 5) = v267;
      v261[48] = v268;
      v261[49] = v262[49];
      uint64_t v269 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v270 = &v261[v269];
      unsigned __int8 v271 = &v262[v269];
      int v14 = v603;
      v603(&v261[v269], &v262[v269], v13);
      uint64_t v272 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v212 = &v270[v272];
      uint64_t v213 = &v271[v272];
      a1 = v602;
      a3 = v605;
LABEL_84:
      uint64_t v273 = *((void *)v213 + 1);
      *(void *)uint64_t v212 = *(void *)v213;
      *((void *)v212 + 1) = v273;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      a2 = v604;
LABEL_197:
      uint64_t v461 = a3[8];
      *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
      uint64_t v462 = (char *)a1 + v461;
      uint64_t v463 = (char *)a2 + v461;
      v14((char *)a1 + v461, (char *)a2 + v461, v13);
      uint64_t v464 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
      uint64_t v465 = v464[5];
      unint64_t v466 = &v462[v465];
      v467 = &v463[v465];
      uint64_t v468 = *(void *)v467;
      uint64_t v469 = *((void *)v467 + 1);
      unsigned __int8 v470 = v467[16];
      sub_1A55118A0(*(void *)v467, v469, v470);
      *(void *)unint64_t v466 = v468;
      *((void *)v466 + 1) = v469;
      v466[16] = v470;
      *(void *)&v462[v464[6]] = *(void *)&v463[v464[6]];
      v462[v464[7]] = v463[v464[7]];
      v462[v464[8]] = v463[v464[8]];
      v462[v464[9]] = v463[v464[9]];
      uint64_t v471 = v464[10];
      uint64_t v472 = &v462[v471];
      unsigned __int8 v473 = &v463[v471];
      uint64_t v600 = *((void *)v473 + 1);
      *(void *)uint64_t v472 = *(void *)v473;
      *((void *)v472 + 1) = v600;
      uint64_t v474 = v464[11];
      uint64_t v475 = &v462[v474];
      uint64_t v476 = &v463[v474];
      uint64_t v596 = *((void *)v476 + 1);
      *(void *)uint64_t v475 = *(void *)v476;
      *((void *)v475 + 1) = v596;
      uint64_t v477 = v464[12];
      unint64_t v478 = &v462[v477];
      uint64_t v479 = &v463[v477];
      uint64_t v594 = *((void *)v479 + 1);
      *(void *)unint64_t v478 = *(void *)v479;
      *((void *)v478 + 1) = v594;
      uint64_t v480 = v464[13];
      unint64_t v481 = &v462[v480];
      long long v482 = &v463[v480];
      uint64_t v593 = *((void *)v482 + 1);
      *(void *)unint64_t v481 = *(void *)v482;
      *((void *)v481 + 1) = v593;
      uint64_t v483 = v464[14];
      long long v484 = &v462[v483];
      unint64_t v485 = &v463[v483];
      uint64_t v592 = *((void *)v485 + 1);
      *(void *)long long v484 = *(void *)v485;
      *((void *)v484 + 1) = v592;
      uint64_t v486 = v464[15];
      uint64_t v487 = &v462[v486];
      uint64_t v488 = &v463[v486];
      uint64_t v591 = *((void *)v488 + 1);
      *(void *)uint64_t v487 = *(void *)v488;
      *((void *)v487 + 1) = v591;
      uint64_t v489 = v464[16];
      v490 = &v462[v489];
      v491 = &v463[v489];
      uint64_t v590 = *((void *)v491 + 1);
      *(void *)v490 = *(void *)v491;
      *((void *)v490 + 1) = v590;
      uint64_t v492 = v464[17];
      v493 = &v462[v492];
      v494 = &v463[v492];
      uint64_t v589 = *((void *)v494 + 1);
      *(void *)v493 = *(void *)v494;
      *((void *)v493 + 1) = v589;
      uint64_t v495 = v464[18];
      v496 = &v462[v495];
      v497 = &v463[v495];
      uint64_t v498 = *((void *)v497 + 1);
      *(void *)v496 = *(void *)v497;
      *((void *)v496 + 1) = v498;
      uint64_t v499 = v464[19];
      v500 = &v462[v499];
      uint64_t v501 = &v463[v499];
      uint64_t v502 = *((void *)v501 + 1);
      *(void *)v500 = *(void *)v501;
      *((void *)v500 + 1) = v502;
      uint64_t v503 = v464[20];
      v504 = *(void **)&v463[v503];
      *(void *)&v462[v503] = v504;
      uint64_t v505 = v464[21];
      uint64_t v506 = *(void **)&v463[v505];
      *(void *)&v462[v505] = v506;
      uint64_t v507 = v464[22];
      v588 = *(void **)&v463[v507];
      *(void *)&v462[v507] = v588;
      uint64_t v508 = v464[23];
      v509 = &v462[v508];
      uint64_t v510 = &v463[v508];
      uint64_t v511 = *((void *)v510 + 1);
      *(void *)v509 = *(void *)v510;
      *((void *)v509 + 1) = v511;
      uint64_t v512 = v464[24];
      __dst = &v462[v512];
      uint64_t v587 = &v463[v512];
      uint64_t v513 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
      uint64_t v584 = *(void *)(v513 - 8);
      uint64_t v586 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v584 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v514 = v504;
      id v515 = v506;
      id v516 = v588;
      swift_bridgeObjectRetain();
      if (v586(v587, 1, v513))
      {
        uint64_t v517 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
        memcpy(__dst, v587, *(void *)(*(void *)(v517 - 8) + 64));
        id v518 = v602;
        id v519 = v604;
      }
      else
      {
        id v518 = v602;
        id v519 = v604;
        uint64_t v520 = v584;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v539 = *((void *)v587 + 1);
            *(void *)__dst = *(void *)v587;
            *((void *)__dst + 1) = v539;
            uint64_t v601 = v513;
            uint64_t v540 = *((void *)v587 + 3);
            *((void *)__dst + 2) = *((void *)v587 + 2);
            *((void *)__dst + 3) = v540;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v541 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
            uint64_t v542 = *(int *)(v541 + 64);
            uint64_t v543 = &__dst[v542];
            uint64_t v595 = &v587[v542];
            uint64_t v544 = sub_1A56D4C28();
            v545 = v543;
            uint64_t v520 = v584;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v544 - 8) + 16))(v545, v595, v544);
            uint64_t v546 = *(int *)(v541 + 80);
            uint64_t v513 = v601;
            __dst[v546] = v587[v546];
            break;
          case 6u:
            uint64_t v547 = *((void *)v587 + 1);
            *(void *)__dst = *(void *)v587;
            *((void *)__dst + 1) = v547;
            goto LABEL_201;
          default:
            uint64_t v521 = *((void *)v587 + 1);
            *(void *)__dst = *(void *)v587;
            *((void *)__dst + 1) = v521;
            *((void *)__dst + 2) = *((void *)v587 + 2);
LABEL_201:
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v520 + 56))(__dst, 0, 1, v513);
      }
      *(void *)&v462[v464[25]] = *(void *)&v463[v464[25]];
      *(void *)&v462[v464[26]] = *(void *)&v463[v464[26]];
      uint64_t v522 = v464[27];
      uint64_t v523 = &v462[v522];
      uint64_t v524 = (uint64_t *)&v463[v522];
      unint64_t v525 = *(void *)&v463[v522 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v525 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v523 = *(_OWORD *)v524;
      }
      else
      {
        uint64_t v526 = *v524;
        sub_1A54E9E98(*v524, v525);
        *(void *)uint64_t v523 = v526;
        *((void *)v523 + 1) = v525;
      }
      unint64_t v527 = v605;
      uint64_t v528 = v605[9];
      v529 = (void *)((char *)v518 + v528);
      uint64_t v530 = (void *)((char *)v519 + v528);
      uint64_t v531 = type metadata accessor for SFAirDropReceive.AskResponse();
      uint64_t v532 = *(void *)(v531 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v532 + 48))(v530, 1, v531))
      {
        uint64_t v533 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048);
        memcpy(v529, v530, *(void *)(*(void *)(v533 - 8) + 64));
        goto LABEL_227;
      }
      uint64_t v534 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
      uint64_t v535 = *(void *)(v534 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v535 + 48))(v530, 3, v534))
      {
        memcpy(v529, v530, *(void *)(v532 + 64));
        goto LABEL_226;
      }
      uint64_t v536 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v537 = swift_getEnumCaseMultiPayload();
      if (v537 == 2)
      {
        unint64_t v548 = v530[1];
        if (v548 >> 60 == 15)
        {
          *(_OWORD *)v529 = *(_OWORD *)v530;
        }
        else
        {
          unint64_t v550 = *v530;
          sub_1A54E9E98(*v530, v530[1]);
          unint64_t *v529 = v550;
          v529[1] = v548;
        }
      }
      else if (v537 == 1)
      {
        unint64_t v549 = v530[1];
        unint64_t *v529 = *v530;
        v529[1] = v549;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v537)
        {
          memcpy(v529, v530, *(void *)(*(void *)(v536 - 8) + 64));
          goto LABEL_222;
        }
        uint64_t v538 = sub_1A56D4A28();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v538 - 8) + 16))(v529, v530, v538);
      }
      swift_storeEnumTagMultiPayload();
LABEL_222:
      uint64_t v551 = *(int *)(v534 + 48);
      unint64_t v552 = (char *)v529 + v551;
      uint64_t v553 = (char *)v530 + v551;
      *((unsigned char *)v529 + v551) = *((unsigned char *)v530 + v551);
      v554 = (_OWORD *)((char *)v529 + v551 + 8);
      v555 = (uint64_t *)((char *)v530 + v551 + 8);
      unint64_t v556 = *((void *)v553 + 2);
      if (v556 >> 60 == 15)
      {
        _OWORD *v554 = *(_OWORD *)v555;
      }
      else
      {
        uint64_t v557 = *v555;
        sub_1A54E9E98(*v555, v556);
        *((void *)v552 + 1) = v557;
        *((void *)v552 + 2) = v556;
      }
      unint64_t v527 = v605;
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v535 + 56))(v529, 0, 3, v534);
LABEL_226:
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v532 + 56))(v529, 0, 1, v531);
      id v519 = v604;
LABEL_227:
      uint64_t v558 = v527[10];
      uint64_t v559 = (uint64_t)v518 + v558;
      uint64_t v560 = (uint64_t)v519 + v558;
      uint64_t v561 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v561 - 8) + 16))(v559, v560, v561);
      uint64_t v562 = v527[12];
      *((unsigned char *)v518 + v527[11]) = *((unsigned char *)v519 + v527[11]);
      *((unsigned char *)v518 + v562) = *((unsigned char *)v519 + v562);
      uint64_t v563 = v527[13];
      uint64_t v564 = (void *)((char *)v518 + v563);
      uint64_t v565 = (unsigned __int8 *)v519 + v563;
      uint64_t v566 = type metadata accessor for SFAirDrop.DeclineAction();
      uint64_t v567 = *(void *)(v566 - 8);
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v567 + 48))(v565, 1, v566))
      {
        uint64_t v568 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
        memcpy(v564, v565, *(void *)(*(void *)(v568 - 8) + 64));
      }
      else
      {
        uint64_t v569 = *((void *)v565 + 1);
        *uint64_t v564 = *(void *)v565;
        v564[1] = v569;
        uint64_t v570 = *((void *)v565 + 2);
        uint64_t v571 = *((void *)v565 + 3);
        uint64_t v572 = *((void *)v565 + 4);
        uint64_t v573 = *((void *)v565 + 5);
        unsigned __int8 v574 = v565[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v570, v571, v572, v573, v574);
        v564[2] = v570;
        v564[3] = v571;
        v564[4] = v572;
        v564[5] = v573;
        *((unsigned char *)v564 + 4_Block_object_dispose(&a9, 8) = v574;
        id v519 = v604;
        *((unsigned char *)v564 + 49) = v565[49];
        uint64_t v575 = *(int *)(v566 + 28);
        unsigned __int8 v576 = (char *)v564 + v575;
        uint64_t v577 = &v565[v575];
        v603((char *)v564 + v575, (char *)v577, v585);
        uint64_t v578 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        v579 = &v576[v578];
        unint64_t v527 = v605;
        uint64_t v580 = (char *)&v577[v578];
        uint64_t v581 = *((void *)v580 + 1);
        *(void *)v579 = *(void *)v580;
        *((void *)v579 + 1) = v581;
        v582 = *(void (**)(void *, void, uint64_t, uint64_t))(v567 + 56);
        swift_retain();
        v582(v564, 0, 1, v566);
      }
      *((unsigned char *)v518 + v527[14]) = *((unsigned char *)v519 + v527[14]);
      return v518;
    case 3u:
      uint64_t v63 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v64 = swift_getEnumCaseMultiPayload();
      if (v64 == 2)
      {
        unint64_t v274 = *((void *)v17 + 1);
        if (v274 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v300 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v300;
          *((void *)v16 + 1) = v274;
        }
      }
      else if (v64 == 1)
      {
        uint64_t v275 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v275;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v64)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v63 - 8) + 64));
          goto LABEL_129;
        }
        uint64_t v65 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v16, v17, v65);
      }
      swift_storeEnumTagMultiPayload();
LABEL_129:
      uint64_t v301 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v302 = v301[12];
      uint64_t v303 = (uint64_t *)&v16[v302];
      unint64_t v304 = (uint64_t *)&v17[v302];
      uint64_t v305 = *v304;
      uint64_t v306 = v304[1];
      unint64_t v307 = v304[2];
      uint64_t v308 = v304[3];
      uint64_t v309 = v304[4];
      sub_1A551188C(*v304, v306, v307);
      *uint64_t v303 = v305;
      v303[1] = v306;
      v303[2] = v307;
      v303[3] = v308;
      v303[4] = v309;
      uint64_t v310 = v301[16];
      uint64_t v311 = &v16[v310];
      uint64_t v312 = &v17[v310];
      uint64_t v313 = *((void *)v312 + 1);
      *(void *)uint64_t v311 = *(void *)v312;
      *((void *)v311 + 1) = v313;
      uint64_t v314 = v301[20];
      uint64_t v315 = &v16[v314];
      uint64_t v316 = &v17[v314];
      uint64_t v317 = *(void *)&v17[v314 + 8];
      *(void *)uint64_t v315 = *(void *)&v17[v314];
      *((void *)v315 + 1) = v317;
      uint64_t v318 = *(void *)&v17[v314 + 16];
      uint64_t v319 = *(void *)&v17[v314 + 24];
      uint64_t v320 = *(void *)&v17[v314 + 32];
      uint64_t v321 = *(void *)&v17[v314 + 40];
      LOBYTE(v30_Block_object_dispose(&a9, 8) = v316[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A551182C(v318, v319, v320, v321, v308);
      *((void *)v315 + 2) = v318;
      *((void *)v315 + 3) = v319;
      *((void *)v315 + 4) = v320;
      *((void *)v315 + 5) = v321;
      v315[48] = v308;
      v315[49] = v316[49];
      uint64_t v322 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v323 = &v315[v322];
      uint64_t v324 = &v316[v322];
      uint64_t v325 = &v316[v322];
      uint64_t v13 = v585;
      int v14 = v603;
      v603(&v315[v322], v325, v585);
      uint64_t v326 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v327 = &v323[v326];
      uint64_t v328 = &v324[v326];
      uint64_t v329 = *((void *)v328 + 1);
      *(void *)uint64_t v327 = *(void *)v328;
      *((void *)v327 + 1) = v329;
      swift_retain();
      goto LABEL_185;
    case 4u:
      uint64_t v66 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v67 = swift_getEnumCaseMultiPayload();
      if (v67 == 2)
      {
        unint64_t v276 = *((void *)v17 + 1);
        if (v276 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v330 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v330;
          *((void *)v16 + 1) = v276;
        }
      }
      else if (v67 == 1)
      {
        uint64_t v277 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v277;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v67)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v66 - 8) + 64));
          goto LABEL_132;
        }
        uint64_t v68 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v16, v17, v68);
      }
      swift_storeEnumTagMultiPayload();
LABEL_132:
      uint64_t v331 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      *(void *)&v16[v331[12]] = *(void *)&v17[v331[12]];
      *(void *)&v16[v331[16]] = *(void *)&v17[v331[16]];
      uint64_t v332 = v331[20];
      uint64_t v333 = &v16[v332];
      unint64_t v334 = &v17[v332];
      uint64_t v335 = *(void *)&v17[v332 + 8];
      *(void *)uint64_t v333 = *(void *)&v17[v332];
      *((void *)v333 + 1) = v335;
      uint64_t v336 = *(void *)&v17[v332 + 16];
      uint64_t v337 = *(void *)&v17[v332 + 24];
      uint64_t v338 = *(void *)&v17[v332 + 32];
      uint64_t v339 = *(void *)&v17[v332 + 40];
      unsigned __int8 v340 = v334[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A551182C(v336, v337, v338, v339, v340);
      *((void *)v333 + 2) = v336;
      *((void *)v333 + 3) = v337;
      *((void *)v333 + 4) = v338;
      *((void *)v333 + 5) = v339;
      v333[48] = v340;
      v333[49] = v334[49];
      uint64_t v341 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v342 = &v333[v341];
      unsigned __int8 v343 = &v334[v341];
      uint64_t v344 = &v334[v341];
      uint64_t v13 = v585;
      int v14 = v603;
      v603(&v333[v341], v344, v585);
      uint64_t v345 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v346 = &v342[v345];
      uint64_t v347 = &v343[v345];
      uint64_t v348 = *((void *)v347 + 1);
      *(void *)uint64_t v346 = *(void *)v347;
      *((void *)v346 + 1) = v348;
      swift_retain();
      goto LABEL_185;
    case 5u:
      uint64_t v69 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v70 = swift_getEnumCaseMultiPayload();
      if (v70 == 2)
      {
        unint64_t v278 = *((void *)v17 + 1);
        if (v278 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v349 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v349;
          *((void *)v16 + 1) = v278;
        }
      }
      else if (v70 == 1)
      {
        uint64_t v279 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v279;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v70)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v69 - 8) + 64));
          goto LABEL_135;
        }
        uint64_t v71 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v16, v17, v71);
      }
      swift_storeEnumTagMultiPayload();
LABEL_135:
      uint64_t v350 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)&v16[*(int *)(v350 + 48)] = *(void *)&v17[*(int *)(v350 + 48)];
      uint64_t v351 = *(int *)(v350 + 64);
      uint64_t v352 = &v16[v351];
      uint64_t v353 = &v17[v351];
      swift_bridgeObjectRetain();
      v14(v352, v353, v13);
      uint64_t v354 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v352[v354[13]] = v353[v354[13]];
      uint64_t v355 = v354[14];
      uint64_t v356 = &v352[v355];
      uint64_t v357 = &v353[v355];
      uint64_t v358 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16))(v356, v357, v358);
      uint64_t v359 = v354[15];
      unint64_t v104 = &v352[v359];
      uint64_t v105 = &v353[v359];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v360 = swift_getEnumCaseMultiPayload();
      if (v360 == 2) {
        goto LABEL_162;
      }
      if (v360 == 1) {
        goto LABEL_51;
      }
      goto LABEL_164;
    case 6u:
      uint64_t v72 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v73 = swift_getEnumCaseMultiPayload();
      if (v73 == 2)
      {
        unint64_t v280 = *((void *)v17 + 1);
        if (v280 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v361 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v361;
          *((void *)v16 + 1) = v280;
        }
      }
      else if (v73 == 1)
      {
        uint64_t v281 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v281;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v73)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v72 - 8) + 64));
          goto LABEL_142;
        }
        uint64_t v74 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v16, v17, v74);
      }
      swift_storeEnumTagMultiPayload();
LABEL_142:
      uint64_t v362 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)&v16[*(int *)(v362 + 48)] = *(void *)&v17[*(int *)(v362 + 48)];
      uint64_t v363 = *(int *)(v362 + 64);
      uint64_t v364 = &v16[v363];
      uint64_t v365 = &v17[v363];
      swift_bridgeObjectRetain();
      v14(v364, v365, v13);
      uint64_t v366 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v364[v366[13]] = v365[v366[13]];
      uint64_t v367 = v366[14];
      uint64_t v368 = &v364[v367];
      uint64_t v369 = &v365[v367];
      uint64_t v370 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v370 - 8) + 16))(v368, v369, v370);
      uint64_t v371 = v366[15];
      unint64_t v104 = &v364[v371];
      uint64_t v105 = &v365[v371];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v372 = swift_getEnumCaseMultiPayload();
      if (v372 == 2) {
        goto LABEL_162;
      }
      if (v372 == 1) {
        goto LABEL_51;
      }
      goto LABEL_164;
    case 7u:
      uint64_t v75 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v76 = swift_getEnumCaseMultiPayload();
      if (v76 == 2)
      {
        unint64_t v282 = *((void *)v17 + 1);
        if (v282 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v373 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v373;
          *((void *)v16 + 1) = v282;
          a3 = v605;
        }
      }
      else if (v76 == 1)
      {
        uint64_t v283 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v283;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v76)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v75 - 8) + 64));
          goto LABEL_149;
        }
        uint64_t v77 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v16, v17, v77);
      }
      swift_storeEnumTagMultiPayload();
LABEL_149:
      uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      *(void *)&v16[*(int *)(v374 + 48)] = *(void *)&v17[*(int *)(v374 + 48)];
      *(void *)&v16[*(int *)(v374 + 64)] = *(void *)&v17[*(int *)(v374 + 64)];
      swift_bridgeObjectRetain();
      goto LABEL_196;
    case 8u:
      uint64_t v78 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v79 = swift_getEnumCaseMultiPayload();
      if (v79 == 2)
      {
        unint64_t v284 = *((void *)v17 + 1);
        if (v284 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v375 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v375;
          *((void *)v16 + 1) = v284;
        }
      }
      else if (v79 == 1)
      {
        uint64_t v285 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v285;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v79)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v78 - 8) + 64));
          goto LABEL_152;
        }
        uint64_t v80 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v16, v17, v80);
      }
      swift_storeEnumTagMultiPayload();
LABEL_152:
      uint64_t v376 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)&v16[v376[12]] = *(void *)&v17[v376[12]];
      *(void *)&v16[v376[16]] = *(void *)&v17[v376[16]];
      uint64_t v377 = v376[20];
      uint64_t v378 = &v16[v377];
      uint64_t v379 = &v17[v377];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v378, v379, v13);
      uint64_t v380 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v378[v380[13]] = v379[v380[13]];
      uint64_t v381 = v380[14];
      BOOL v382 = &v378[v381];
      uint64_t v383 = &v379[v381];
      uint64_t v384 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 16))(v382, v383, v384);
      uint64_t v385 = v380[15];
      unint64_t v104 = &v378[v385];
      uint64_t v105 = &v379[v385];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v386 = swift_getEnumCaseMultiPayload();
      if (v386 == 2) {
        goto LABEL_162;
      }
      if (v386 == 1) {
        goto LABEL_51;
      }
      goto LABEL_164;
    case 9u:
      uint64_t v81 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v82 = swift_getEnumCaseMultiPayload();
      if (v82 == 2)
      {
        unint64_t v286 = *((void *)v17 + 1);
        if (v286 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v387 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v387;
          *((void *)v16 + 1) = v286;
        }
      }
      else if (v82 == 1)
      {
        uint64_t v287 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v287;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v82)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v81 - 8) + 64));
          goto LABEL_159;
        }
        uint64_t v83 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v16, v17, v83);
      }
      swift_storeEnumTagMultiPayload();
LABEL_159:
      uint64_t v388 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)&v16[v388[12]] = *(void *)&v17[v388[12]];
      *(void *)&v16[v388[16]] = *(void *)&v17[v388[16]];
      uint64_t v389 = v388[20];
      uint64_t v390 = &v16[v389];
      uint64_t v391 = &v17[v389];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v390, v391, v13);
      uint64_t v392 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v390[v392[13]] = v391[v392[13]];
      uint64_t v393 = v392[14];
      uint64_t v394 = &v390[v393];
      uint64_t v395 = &v391[v393];
      uint64_t v396 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v396 - 8) + 16))(v394, v395, v396);
      uint64_t v397 = v392[15];
      unint64_t v104 = &v390[v397];
      uint64_t v105 = &v391[v397];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v398 = swift_getEnumCaseMultiPayload();
      if (v398 == 2)
      {
LABEL_162:
        uint64_t v399 = *((void *)v105 + 1);
        *(void *)unint64_t v104 = *(void *)v105;
        *((void *)v104 + 1) = v399;
        uint64_t v400 = *((void *)v105 + 3);
        *((void *)v104 + 2) = *((void *)v105 + 2);
        *((void *)v104 + 3) = v400;
        *((void *)v104 + 4) = *((void *)v105 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v401 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v402 = &v104[v401];
        uint64_t v403 = &v105[v401];
        uint64_t v404 = *(void *)&v105[v401 + 8];
        *(void *)uint64_t v402 = *(void *)&v105[v401];
        *((void *)v402 + 1) = v404;
        uint64_t v405 = *(void *)&v105[v401 + 16];
        uint64_t v406 = *(void *)&v105[v401 + 24];
        uint64_t v407 = *(void *)&v105[v401 + 32];
        uint64_t v408 = *(void *)&v105[v401 + 40];
        uint64_t v409 = a1;
        unsigned __int8 v410 = v403[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v405, v406, v407, v408, v410);
        *((void *)v402 + 2) = v405;
        *((void *)v402 + 3) = v406;
        *((void *)v402 + 4) = v407;
        *((void *)v402 + 5) = v408;
        v402[48] = v410;
        a1 = v409;
        uint64_t v13 = v585;
        v402[49] = v403[49];
        uint64_t v411 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v112 = &v402[v411];
        uint64_t v113 = &v403[v411];
        a2 = v604;
        int v14 = v603;
        v603(&v402[v411], v113, v585);
        uint64_t v114 = &qword_1E96710D8;
        goto LABEL_163;
      }
      if (v398 == 1)
      {
LABEL_51:
        *unint64_t v104 = *v105;
        uint64_t v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        uint64_t v108 = &v104[v107];
        int v109 = &v105[v107];
        uint64_t v110 = &v105[v107];
        int v14 = v603;
        v603(&v104[v107], v110, v13);
        uint64_t v111 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
        uint64_t v112 = &v108[v111];
        uint64_t v113 = &v109[v111];
        v603(v112, v113, v13);
        uint64_t v114 = (uint64_t *)&unk_1E96710F0;
        goto LABEL_163;
      }
LABEL_164:
      uint64_t v413 = *((void *)v105 + 1);
      *(void *)unint64_t v104 = *(void *)v105;
      *((void *)v104 + 1) = v413;
      uint64_t v414 = *((void *)v105 + 3);
      *((void *)v104 + 2) = *((void *)v105 + 2);
      *((void *)v104 + 3) = v414;
      *((void *)v104 + 4) = *((void *)v105 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v415 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      uint64_t v416 = &v104[v415];
      uint64_t v417 = &v105[v415];
      uint64_t v418 = *(void *)&v105[v415 + 8];
      *(void *)uint64_t v416 = *(void *)&v105[v415];
      *((void *)v416 + 1) = v418;
      uint64_t v419 = *(void *)&v105[v415 + 16];
      uint64_t v420 = *(void *)&v105[v415 + 24];
      uint64_t v421 = *(void *)&v105[v415 + 32];
      uint64_t v422 = *(void *)&v105[v415 + 40];
      unsigned __int8 v423 = v417[48];
      swift_bridgeObjectRetain();
      sub_1A551182C(v419, v420, v421, v422, v423);
      *((void *)v416 + 2) = v419;
      *((void *)v416 + 3) = v420;
      *((void *)v416 + 4) = v421;
      *((void *)v416 + 5) = v422;
      v416[48] = v423;
      v416[49] = v417[49];
      uint64_t v424 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v425 = &v416[v424];
      unsigned __int8 v426 = &v417[v424];
      int v14 = v603;
      v603(&v416[v424], &v417[v424], v13);
      uint64_t v427 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v242 = &v425[v427];
      uint64_t v243 = &v426[v427];
      a1 = v602;
      a2 = v604;
      a3 = v605;
      goto LABEL_165;
    case 0xAu:
      uint64_t v84 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v85 = swift_getEnumCaseMultiPayload();
      if (v85 == 2)
      {
        unint64_t v288 = *((void *)v17 + 1);
        if (v288 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        }
        else
        {
          uint64_t v429 = *(void *)v17;
          sub_1A54E9E98(*(void *)v17, *((void *)v17 + 1));
          *(void *)uint64_t v16 = v429;
          *((void *)v16 + 1) = v288;
          a3 = v605;
        }
      }
      else if (v85 == 1)
      {
        uint64_t v289 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v289;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v85)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v84 - 8) + 64));
          goto LABEL_168;
        }
        uint64_t v86 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v16, v17, v86);
      }
      swift_storeEnumTagMultiPayload();
LABEL_168:
      uint64_t v430 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      *(void *)&v16[*(int *)(v430 + 48)] = *(void *)&v17[*(int *)(v430 + 48)];
      *(void *)&v16[*(int *)(v430 + 64)] = *(void *)&v17[*(int *)(v430 + 64)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_196;
    case 0xBu:
      uint64_t v87 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v87;
      uint64_t v88 = *((void *)v17 + 3);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = v88;
      uint64_t v89 = *((void *)v17 + 4);
      uint64_t v90 = *((void *)v17 + 5);
      uint64_t v91 = v14;
      char v92 = v17[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *((void *)v16 + 4) = v89;
      *((void *)v16 + 5) = v90;
      v16[48] = v92;
      uint64_t v93 = *((void *)v17 + 7);
      unint64_t v94 = *((void *)v17 + 8);
      sub_1A54E9E98(v93, v94);
      *((void *)v16 + 7) = v93;
      *((void *)v16 + _Block_object_dispose(&a9, 8) = v94;
      uint64_t v95 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
      uint64_t v96 = &v16[v95];
      unint64_t v97 = &v17[v95];
      v91(&v16[v95], &v17[v95], v13);
      int v98 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v96[v98[13]] = v97[v98[13]];
      uint64_t v99 = v98[14];
      uint64_t v100 = &v96[v99];
      int v101 = &v97[v99];
      uint64_t v102 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
      uint64_t v103 = v98[15];
      unint64_t v104 = &v96[v103];
      uint64_t v105 = &v97[v103];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v106 = swift_getEnumCaseMultiPayload();
      if (v106 == 2) {
        goto LABEL_162;
      }
      if (v106 == 1) {
        goto LABEL_51;
      }
      goto LABEL_164;
    case 0xCu:
      uint64_t v115 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v115;
      uint64_t v116 = *((void *)v17 + 3);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = v116;
      uint64_t v117 = *((void *)v17 + 4);
      uint64_t v118 = *((void *)v17 + 5);
      char v119 = v17[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *((void *)v16 + 4) = v117;
      *((void *)v16 + 5) = v118;
      a3 = v605;
      v16[48] = v119;
      int v14 = v603;
      uint64_t v120 = *((void *)v17 + 7);
      unint64_t v121 = *((void *)v17 + 8);
      sub_1A54E9E98(v120, v121);
      *((void *)v16 + 7) = v120;
      *((void *)v16 + _Block_object_dispose(&a9, 8) = v121;
      goto LABEL_196;
    case 0xDu:
      uint64_t v122 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v122;
      uint64_t v123 = *((void *)v17 + 3);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = v123;
      uint64_t v124 = *((void *)v17 + 4);
      uint64_t v125 = *((void *)v17 + 5);
      uint64_t v126 = v14;
      char v127 = v17[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *((void *)v16 + 4) = v124;
      *((void *)v16 + 5) = v125;
      v16[48] = v127;
      uint64_t v128 = *((void *)v17 + 7);
      unint64_t v129 = *((void *)v17 + 8);
      sub_1A54E9E98(v128, v129);
      *((void *)v16 + 7) = v128;
      *((void *)v16 + _Block_object_dispose(&a9, 8) = v129;
      uint64_t v130 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
      uint64_t v131 = &v16[v130];
      unint64_t v132 = &v17[v130];
      v126(&v16[v130], &v17[v130], v13);
      uint64_t v133 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      v131[v133[13]] = v132[v133[13]];
      uint64_t v134 = v133[14];
      uint64_t v135 = &v131[v134];
      unint64_t v136 = &v132[v134];
      uint64_t v137 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
      uint64_t v138 = v133[15];
      uint64_t v45 = &v131[v138];
      uint64_t v46 = &v132[v138];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v139 = swift_getEnumCaseMultiPayload();
      if (v139 == 2)
      {
LABEL_79:
        uint64_t v214 = *((void *)v46 + 1);
        *(void *)uint64_t v45 = *(void *)v46;
        *((void *)v45 + 1) = v214;
        uint64_t v215 = *((void *)v46 + 3);
        *((void *)v45 + 2) = *((void *)v46 + 2);
        *((void *)v45 + 3) = v215;
        *((void *)v45 + 4) = *((void *)v46 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v216 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v217 = &v45[v216];
        uint64_t v218 = &v46[v216];
        uint64_t v219 = *(void *)&v46[v216 + 8];
        *(void *)uint64_t v217 = *(void *)&v46[v216];
        *((void *)v217 + 1) = v219;
        uint64_t v220 = *(void *)&v46[v216 + 16];
        uint64_t v221 = *(void *)&v46[v216 + 24];
        uint64_t v222 = *(void *)&v46[v216 + 32];
        uint64_t v223 = *(void *)&v46[v216 + 40];
        uint64_t v224 = a1;
        unsigned __int8 v225 = v218[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v220, v221, v222, v223, v225);
        *((void *)v217 + 2) = v220;
        *((void *)v217 + 3) = v221;
        *((void *)v217 + 4) = v222;
        *((void *)v217 + 5) = v223;
        v217[48] = v225;
        a1 = v224;
        uint64_t v13 = v585;
        v217[49] = v218[49];
        uint64_t v226 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v112 = &v217[v226];
        uint64_t v113 = &v218[v226];
        a2 = v604;
        int v14 = v603;
        v603(&v217[v226], v113, v585);
        uint64_t v114 = &qword_1E96710D8;
      }
      else
      {
        if (v139 != 1)
        {
LABEL_80:
          uint64_t v227 = *((void *)v46 + 1);
          *(void *)uint64_t v45 = *(void *)v46;
          *((void *)v45 + 1) = v227;
          uint64_t v228 = *((void *)v46 + 3);
          *((void *)v45 + 2) = *((void *)v46 + 2);
          *((void *)v45 + 3) = v228;
          *((void *)v45 + 4) = *((void *)v46 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v229 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v230 = &v45[v229];
          uint64_t v231 = &v46[v229];
          uint64_t v232 = *(void *)&v46[v229 + 8];
          *(void *)uint64_t v230 = *(void *)&v46[v229];
          *((void *)v230 + 1) = v232;
          uint64_t v233 = *(void *)&v46[v229 + 16];
          uint64_t v234 = *(void *)&v46[v229 + 24];
          uint64_t v235 = *(void *)&v46[v229 + 32];
          uint64_t v236 = *(void *)&v46[v229 + 40];
          unsigned __int8 v237 = v231[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v233, v234, v235, v236, v237);
          *((void *)v230 + 2) = v233;
          *((void *)v230 + 3) = v234;
          *((void *)v230 + 4) = v235;
          *((void *)v230 + 5) = v236;
          v230[48] = v237;
          v230[49] = v231[49];
          uint64_t v238 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v239 = &v230[v238];
          unsigned __int8 v240 = &v231[v238];
          int v14 = v603;
          v603(&v230[v238], &v231[v238], v13);
          uint64_t v241 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v242 = &v239[v241];
          uint64_t v243 = &v240[v241];
          a1 = v602;
          a2 = v604;
          a3 = v605;
          goto LABEL_165;
        }
LABEL_55:
        *uint64_t v45 = *v46;
        uint64_t v140 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
        uint64_t v141 = &v45[v140];
        int v142 = &v46[v140];
        uint64_t v143 = &v46[v140];
        int v14 = v603;
        v603(&v45[v140], v143, v13);
        uint64_t v144 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
        uint64_t v112 = &v141[v144];
        uint64_t v113 = &v142[v144];
        v603(v112, v113, v13);
        uint64_t v114 = (uint64_t *)&unk_1E96710F0;
      }
LABEL_163:
      uint64_t v412 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v114) + 68);
      uint64_t v242 = &v112[v412];
      uint64_t v243 = &v113[v412];
      a3 = v605;
LABEL_165:
      uint64_t v428 = *((void *)v243 + 1);
      *(void *)uint64_t v242 = *(void *)v243;
      *((void *)v242 + 1) = v428;
      swift_retain();
      swift_storeEnumTagMultiPayload();
LABEL_196:
      swift_storeEnumTagMultiPayload();
      goto LABEL_197;
    case 0xEu:
      unint64_t v145 = *((void *)v17 + 3);
      if (v145 >= 2)
      {
        uint64_t v166 = *((void *)v17 + 1);
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = v166;
        *((void *)v16 + 2) = *((void *)v17 + 2);
        *((void *)v16 + 3) = v145;
        uint64_t v167 = *((void *)v17 + 4);
        uint64_t v168 = *((void *)v17 + 5);
        char v169 = v17[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *((void *)v16 + 4) = v167;
        *((void *)v16 + 5) = v168;
        v16[48] = v169;
        uint64_t v170 = *((void *)v17 + 7);
        unint64_t v171 = *((void *)v17 + 8);
        sub_1A54E9E98(v170, v171);
        *((void *)v16 + 7) = v170;
        *((void *)v16 + _Block_object_dispose(&a9, 8) = v171;
      }
      else
      {
        long long v146 = *((_OWORD *)v17 + 3);
        *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
        *((_OWORD *)v16 + 3) = v146;
        *((void *)v16 + _Block_object_dispose(&a9, 8) = *((void *)v17 + 8);
        long long v147 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v147;
      }
      unint64_t v172 = *((void *)v17 + 12);
      if (v172 >= 2)
      {
        uint64_t v175 = *((void *)v17 + 10);
        *((void *)v16 + 9) = *((void *)v17 + 9);
        *((void *)v16 + 10) = v175;
        *((void *)v16 + 11) = *((void *)v17 + 11);
        *((void *)v16 + 12) = v172;
        uint64_t v176 = *((void *)v17 + 13);
        uint64_t v177 = *((void *)v17 + 14);
        char v178 = v17[120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *((void *)v16 + 13) = v176;
        *((void *)v16 + 14) = v177;
        v16[120] = v178;
        uint64_t v179 = *((void *)v17 + 16);
        unint64_t v180 = *((void *)v17 + 17);
        sub_1A54E9E98(v179, v180);
        *((void *)v16 + 16) = v179;
        *((void *)v16 + 17) = v180;
      }
      else
      {
        long long v173 = *(_OWORD *)(v17 + 120);
        *(_OWORD *)(v16 + 104) = *(_OWORD *)(v17 + 104);
        *(_OWORD *)(v16 + 120) = v173;
        *((void *)v16 + 17) = *((void *)v17 + 17);
        long long v174 = *(_OWORD *)(v17 + 88);
        *(_OWORD *)(v16 + 72) = *(_OWORD *)(v17 + 72);
        *(_OWORD *)(v16 + 8_Block_object_dispose(&a9, 8) = v174;
      }
      a3 = v605;
      int v14 = v603;
      goto LABEL_196;
    case 0xFu:
      unint64_t v148 = a1;
      uint64_t v149 = sub_1A56D4C28();
      uint64_t v150 = *(void *)(v149 - 8);
      uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v150 + 16);
      v151(v16, v17, v149);
      uint64_t v152 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v153 = v152[5];
      uint64_t v154 = &v16[v153];
      uint64_t v155 = &v17[v153];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(&v17[v153], 1, v149))
      {
        uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        v151(v154, v155, v149);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v154, 0, 1, v149);
      }
      v16[v152[6]] = v17[v152[6]];
      uint64_t v181 = v152[7];
      uint64_t v182 = &v16[v181];
      unint64_t v183 = &v17[v181];
      uint64_t v184 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v185 = *(void *)(v184 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v185 + 48))(v183, 1, v184))
      {
        uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v182, v183, *(void *)(*(void *)(v186 - 8) + 64));
        int v14 = v603;
      }
      else
      {
        uint64_t v193 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v194 = *(void *)(v193 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v183, 1, v193))
        {
          memcpy(v182, v183, *(void *)(v185 + 64));
        }
        else
        {
          int v290 = swift_getEnumCaseMultiPayload();
          if (v290 == 1)
          {
            uint64_t v431 = *((void *)v183 + 1);
            *(void *)uint64_t v182 = *(void *)v183;
            *((void *)v182 + 1) = v431;
            *((_OWORD *)v182 + 1) = *((_OWORD *)v183 + 1);
            uint64_t v432 = *((void *)v183 + 5);
            *((void *)v182 + 4) = *((void *)v183 + 4);
            *((void *)v182 + 5) = v432;
            *((void *)v182 + 6) = *((void *)v183 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v290)
          {
            memcpy(v182, v183, *(void *)(v194 + 64));
          }
          else
          {
            uint64_t v291 = *((void *)v183 + 1);
            *(void *)uint64_t v182 = *(void *)v183;
            *((void *)v182 + 1) = v291;
            swift_bridgeObjectRetain();
            uint64_t v292 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            __dsta = &v182[v292];
            int v293 = &v183[v292];
            uint64_t v294 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 16))(__dsta, v293, v294);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v182, 0, 1, v193);
        }
        a1 = v148;
        int v14 = v603;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(v182, 0, 1, v184);
      }
      uint64_t v433 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v434 = v433[12];
      uint64_t v435 = (uint64_t *)&v16[v434];
      v436 = (uint64_t *)&v17[v434];
      uint64_t v437 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v438 = swift_getEnumCaseMultiPayload();
      uint64_t v13 = v585;
      if (v438 == 2)
      {
        unint64_t v440 = v436[1];
        if (v440 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v435 = *(_OWORD *)v436;
        }
        else
        {
          uint64_t v442 = *v436;
          sub_1A54E9E98(v442, v440);
          *uint64_t v435 = v442;
          v435[1] = v440;
        }
        int v14 = v603;
      }
      else if (v438 == 1)
      {
        uint64_t v441 = v436[1];
        *uint64_t v435 = *v436;
        v435[1] = v441;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v438)
        {
          memcpy(v435, v436, *(void *)(*(void *)(v437 - 8) + 64));
          goto LABEL_184;
        }
        uint64_t v439 = sub_1A56D4A28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v439 - 8) + 16))(v435, v436, v439);
      }
      swift_storeEnumTagMultiPayload();
LABEL_184:
      uint64_t v443 = v433[16];
      uint64_t v444 = &v16[v443];
      uint64_t v445 = &v17[v443];
      uint64_t v446 = *((void *)v445 + 1);
      *(void *)uint64_t v444 = *(void *)v445;
      *((void *)v444 + 1) = v446;
      *(void *)&v16[v433[20]] = *(void *)&v17[v433[20]];
      *(void *)&v16[v433[24]] = *(void *)&v17[v433[24]];
      *(void *)&v16[v433[28]] = *(void *)&v17[v433[28]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_185:
      swift_storeEnumTagMultiPayload();
      a2 = v604;
      a3 = v605;
      goto LABEL_197;
    case 0x10u:
      uint64_t v157 = a1;
      uint64_t v158 = sub_1A56D4C28();
      uint64_t v159 = *(void *)(v158 - 8);
      uint64_t v160 = *(void (**)(char *, char *, uint64_t))(v159 + 16);
      v160(v16, v17, v158);
      uint64_t v161 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v162 = v161[5];
      uint64_t v163 = &v16[v162];
      uint64_t v164 = &v17[v162];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(&v17[v162], 1, v158))
      {
        uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v163, v164, *(void *)(*(void *)(v165 - 8) + 64));
      }
      else
      {
        v160(v163, v164, v158);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v159 + 56))(v163, 0, 1, v158);
      }
      v16[v161[6]] = v17[v161[6]];
      uint64_t v187 = v161[7];
      uint64_t v188 = &v16[v187];
      uint64_t v189 = &v17[v187];
      uint64_t v190 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v191 = *(void *)(v190 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
      {
        uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v188, v189, *(void *)(*(void *)(v192 - 8) + 64));
      }
      else
      {
        uint64_t v195 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v196 = *(void *)(v195 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v189, 1, v195))
        {
          memcpy(v188, v189, *(void *)(v191 + 64));
        }
        else
        {
          int v295 = swift_getEnumCaseMultiPayload();
          if (v295 == 1)
          {
            uint64_t v447 = *((void *)v189 + 1);
            *(void *)uint64_t v188 = *(void *)v189;
            *((void *)v188 + 1) = v447;
            *((_OWORD *)v188 + 1) = *((_OWORD *)v189 + 1);
            uint64_t v448 = *((void *)v189 + 5);
            *((void *)v188 + 4) = *((void *)v189 + 4);
            *((void *)v188 + 5) = v448;
            *((void *)v188 + 6) = *((void *)v189 + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v295)
          {
            memcpy(v188, v189, *(void *)(v196 + 64));
          }
          else
          {
            uint64_t v296 = *((void *)v189 + 1);
            *(void *)uint64_t v188 = *(void *)v189;
            *((void *)v188 + 1) = v296;
            swift_bridgeObjectRetain();
            uint64_t v297 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            __dstb = &v188[v297];
            int v298 = &v189[v297];
            uint64_t v299 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 16))(__dstb, v298, v299);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v196 + 56))(v188, 0, 1, v195);
        }
        a1 = v157;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56))(v188, 0, 1, v190);
      }
      uint64_t v449 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
      uint64_t v450 = &v16[v449];
      uint64_t v451 = &v17[v449];
      uint64_t v452 = type metadata accessor for SFAirDropReceive.Failure();
      int v453 = swift_getEnumCaseMultiPayload();
      a2 = v604;
      uint64_t v13 = v585;
      if (v453 == 1)
      {
        uint64_t v459 = *((void *)v451 + 1);
        *(void *)uint64_t v450 = *(void *)v451;
        *((void *)v450 + 1) = v459;
        *((_OWORD *)v450 + 1) = *((_OWORD *)v451 + 1);
        uint64_t v460 = *((void *)v451 + 5);
        *((void *)v450 + 4) = *((void *)v451 + 4);
        *((void *)v450 + 5) = v460;
        *((void *)v450 + 6) = *((void *)v451 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (v453)
      {
        memcpy(v450, v451, *(void *)(*(void *)(v452 - 8) + 64));
      }
      else
      {
        uint64_t v454 = *((void *)v451 + 1);
        *(void *)uint64_t v450 = *(void *)v451;
        *((void *)v450 + 1) = v454;
        swift_bridgeObjectRetain();
        uint64_t v455 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
        int v456 = &v450[v455];
        uint64_t v457 = &v451[v455];
        uint64_t v458 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v458 - 8) + 16))(v456, v457, v458);
        swift_storeEnumTagMultiPayload();
      }
      a3 = v605;
      int v14 = v603;
      goto LABEL_196;
    default:
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      goto LABEL_197;
  }
}

void *_s8TransferVwca(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_1A54F7200(a1, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
    uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v5 = *v4;
      v5[1] = v4[1];
      v5[2] = v4[2];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v5, v4, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = sub_1A56D4CB8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v4, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)v5 + v9;
  uint64_t v11 = (char *)v4 + v9;
  uint64_t v12 = sub_1A56D4CB8();
  uint64_t v723 = *(void *)(v12 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v723 + 24);
  v13(v10, v11, v12);
  v726 = v4;
  v727 = a3;
  uint64_t v724 = v12;
  v725 = v5;
  v722 = v13;
  if (v5 != v4)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)((char *)v5 + v14);
    uint64_t v16 = (char *)v4 + v14;
    sub_1A54F7200((uint64_t)v5 + v14, type metadata accessor for SFAirDropReceive.Transfer.State);
    uint64_t v17 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v710 = *(void (**)(uint64_t *, char *, uint64_t))(v723 + 16);
        v710(v15, v16, v12);
        uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *((unsigned char *)v15 + v18[13]) = v16[v18[13]];
        uint64_t v19 = v18[14];
        uint64_t v20 = (char *)v15 + v19;
        int v21 = &v16[v19];
        uint64_t v22 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        uint64_t v23 = v18[15];
        uint64_t v24 = (uint64_t *)((char *)v15 + v23);
        int v25 = &v16[v23];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v26 = swift_getEnumCaseMultiPayload();
        if (v26 == 2) {
          goto LABEL_79;
        }
        if (v26 != 1) {
          goto LABEL_80;
        }
        goto LABEL_11;
      case 1u:
        uint64_t *v15 = *(void *)v16;
        v15[1] = *((void *)v16 + 1);
        void v15[2] = *((void *)v16 + 2);
        v15[3] = *((void *)v16 + 3);
        uint64_t v36 = *((void *)v16 + 4);
        uint64_t v37 = *((void *)v16 + 5);
        uint64_t v38 = v12;
        char v39 = v16[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        void v15[4] = v36;
        v15[5] = v37;
        *((unsigned char *)v15 + 4_Block_object_dispose(&a9, 8) = v39;
        uint64_t v40 = *((void *)v16 + 7);
        unint64_t v41 = *((void *)v16 + 8);
        sub_1A54E9E98(v40, v41);
        v15[7] = v40;
        _DWORD v15[8] = v41;
        uint64_t v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
        uint64_t v43 = (char *)v15 + v42;
        uint64_t v44 = &v16[v42];
        v719 = *(void (**)(char *, char *, uint64_t))(v723 + 16);
        v719((char *)v15 + v42, &v16[v42], v38);
        uint64_t v45 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        v43[v45[13]] = v44[v45[13]];
        uint64_t v46 = v45[14];
        int v47 = &v43[v46];
        uint64_t v48 = &v44[v46];
        uint64_t v49 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
        uint64_t v50 = v45[15];
        uint64_t v51 = &v43[v50];
        uint64_t v52 = &v44[v50];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v53 = swift_getEnumCaseMultiPayload();
        if (v53 == 2)
        {
          *(void *)uint64_t v51 = *(void *)v52;
          *((void *)v51 + 1) = *((void *)v52 + 1);
          *((void *)v51 + 2) = *((void *)v52 + 2);
          *((void *)v51 + 3) = *((void *)v52 + 3);
          *((void *)v51 + 4) = *((void *)v52 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v229 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v230 = &v51[v229];
          uint64_t v231 = &v52[v229];
          *(void *)uint64_t v230 = *(void *)&v52[v229];
          *((void *)v230 + 1) = *(void *)&v52[v229 + 8];
          uint64_t v232 = *(void *)&v52[v229 + 16];
          uint64_t v233 = *((void *)v231 + 3);
          uint64_t v234 = *((void *)v231 + 4);
          uint64_t v235 = *((void *)v231 + 5);
          unsigned __int8 v236 = v231[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v232, v233, v234, v235, v236);
          *((void *)v230 + 2) = v232;
          *((void *)v230 + 3) = v233;
          *((void *)v230 + 4) = v234;
          *((void *)v230 + 5) = v235;
          v230[48] = v236;
          a3 = v727;
          v230[49] = v231[49];
          uint64_t v237 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v238 = &v230[v237];
          uint64_t v239 = &v231[v237];
          uint64_t v12 = v724;
          v719(&v230[v237], &v231[v237], v724);
          uint64_t v240 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v61 = &v238[v240];
          uint64_t v62 = &v239[v240];
          goto LABEL_83;
        }
        if (v53 == 1)
        {
          *uint64_t v51 = *v52;
          uint64_t v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          uint64_t v55 = &v51[v54];
          uint64_t v56 = &v52[v54];
          uint64_t v12 = v724;
          v719(&v51[v54], v56, v724);
          uint64_t v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          unint64_t v58 = &v55[v57];
          uint64_t v59 = &v56[v57];
          v719(v58, v59, v724);
          uint64_t v60 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v61 = &v58[v60];
          uint64_t v62 = &v59[v60];
LABEL_83:
          uint64_t v4 = v726;
          goto LABEL_173;
        }
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = *((void *)v52 + 1);
        *((void *)v51 + 2) = *((void *)v52 + 2);
        *((void *)v51 + 3) = *((void *)v52 + 3);
        *((void *)v51 + 4) = *((void *)v52 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v241 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v242 = &v51[v241];
        uint64_t v243 = &v52[v241];
        *(void *)uint64_t v242 = *(void *)&v52[v241];
        *((void *)v242 + 1) = *(void *)&v52[v241 + 8];
        uint64_t v244 = *(void *)&v52[v241 + 16];
        uint64_t v245 = *((void *)v243 + 3);
        uint64_t v247 = *((void *)v243 + 4);
        uint64_t v246 = *((void *)v243 + 5);
        unsigned __int8 v248 = v243[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v244, v245, v247, v246, v248);
        *((void *)v242 + 2) = v244;
        *((void *)v242 + 3) = v245;
        *((void *)v242 + 4) = v247;
        *((void *)v242 + 5) = v246;
        v242[48] = v248;
        v242[49] = v243[49];
        uint64_t v249 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v250 = &v242[v249];
        uint64_t v251 = &v243[v249];
        uint64_t v12 = v724;
        v719(&v242[v249], &v243[v249], v724);
        uint64_t v252 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v61 = &v250[v252];
        uint64_t v62 = &v251[v252];
        uint64_t v4 = v726;
        a3 = v727;
        goto LABEL_173;
      case 2u:
        v710 = *(void (**)(uint64_t *, char *, uint64_t))(v723 + 16);
        v710(v15, v16, v12);
        uint64_t v63 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *((unsigned char *)v15 + v63[13]) = v16[v63[13]];
        uint64_t v64 = v63[14];
        uint64_t v65 = (char *)v15 + v64;
        uint64_t v66 = &v16[v64];
        uint64_t v67 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
        uint64_t v68 = v63[15];
        uint64_t v24 = (uint64_t *)((char *)v15 + v68);
        int v25 = &v16[v68];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 == 2)
        {
LABEL_79:
          *uint64_t v24 = *(void *)v25;
          v24[1] = *((void *)v25 + 1);
          void v24[2] = *((void *)v25 + 2);
          v24[3] = *((void *)v25 + 3);
          v24[4] = *((void *)v25 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v204 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v205 = (char *)v24 + v204;
          uint64_t v206 = &v25[v204];
          *(void *)uint64_t v205 = *(void *)&v25[v204];
          *((void *)v205 + 1) = *(void *)&v25[v204 + 8];
          uint64_t v207 = *(void *)&v25[v204 + 16];
          uint64_t v208 = *((void *)v206 + 3);
          uint64_t v209 = *((void *)v206 + 4);
          uint64_t v210 = *((void *)v206 + 5);
          unsigned __int8 v211 = v206[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v207, v208, v209, v210, v211);
          *((void *)v205 + 2) = v207;
          *((void *)v205 + 3) = v208;
          *((void *)v205 + 4) = v209;
          *((void *)v205 + 5) = v210;
          uint64_t v12 = v724;
          v205[48] = v211;
          a3 = v727;
          v205[49] = v206[49];
          uint64_t v212 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v213 = &v205[v212];
          uint64_t v214 = &v206[v212];
          v710((uint64_t *)&v205[v212], &v206[v212], v724);
          uint64_t v215 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v34 = &v213[v215];
          unint64_t v35 = &v214[v215];
        }
        else if (v69 == 1)
        {
LABEL_11:
          *(unsigned char *)uint64_t v24 = *v25;
          uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v28 = (char *)v24 + v27;
          uint64_t v29 = &v25[v27];
          v710((void *)((char *)v24 + v27), v29, v12);
          uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v31 = &v28[v30];
          uint64_t v32 = &v29[v30];
          v710((uint64_t *)v31, v32, v12);
          uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v34 = &v31[v33];
          unint64_t v35 = &v32[v33];
        }
        else
        {
LABEL_80:
          *uint64_t v24 = *(void *)v25;
          v24[1] = *((void *)v25 + 1);
          void v24[2] = *((void *)v25 + 2);
          v24[3] = *((void *)v25 + 3);
          v24[4] = *((void *)v25 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v216 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v217 = (char *)v24 + v216;
          uint64_t v218 = &v25[v216];
          *(void *)uint64_t v217 = *(void *)&v25[v216];
          *((void *)v217 + 1) = *(void *)&v25[v216 + 8];
          uint64_t v219 = *(void *)&v25[v216 + 16];
          uint64_t v220 = *((void *)v218 + 3);
          uint64_t v222 = *((void *)v218 + 4);
          uint64_t v221 = *((void *)v218 + 5);
          unsigned __int8 v223 = v218[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v219, v220, v222, v221, v223);
          *((void *)v217 + 2) = v219;
          *((void *)v217 + 3) = v220;
          *((void *)v217 + 4) = v222;
          *((void *)v217 + 5) = v221;
          v217[48] = v223;
          v217[49] = v218[49];
          uint64_t v224 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          unsigned __int8 v225 = &v217[v224];
          uint64_t v226 = &v218[v224];
          uint64_t v12 = v724;
          v710((uint64_t *)&v217[v224], &v218[v224], v724);
          uint64_t v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v34 = &v225[v227];
          unint64_t v35 = &v226[v227];
          a3 = v727;
        }
        uint64_t v228 = *((void *)v35 + 1);
        *(void *)uint64_t v34 = *(void *)v35;
        *((void *)v34 + 1) = v228;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_193;
      case 3u:
        uint64_t v70 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v71 = swift_getEnumCaseMultiPayload();
        if (v71 == 2)
        {
          unint64_t v290 = *((void *)v16 + 1);
          if (v290 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            uint64_t v310 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            uint64_t *v15 = v310;
            v15[1] = v290;
          }
        }
        else if (v71 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v71)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v70 - 8) + 64));
            goto LABEL_133;
          }
          uint64_t v72 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v15, v16, v72);
        }
        swift_storeEnumTagMultiPayload();
LABEL_133:
        uint64_t v311 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
        uint64_t v312 = v311[12];
        uint64_t v313 = (uint64_t *)((char *)v15 + v312);
        uint64_t v314 = (uint64_t *)&v16[v312];
        uint64_t v315 = *v314;
        uint64_t v316 = v314[1];
        unint64_t v317 = v314[2];
        uint64_t v318 = v314[3];
        uint64_t v319 = v15;
        uint64_t v320 = v314[4];
        sub_1A551188C(*v314, v316, v317);
        uint64_t *v313 = v315;
        v313[1] = v316;
        v313[2] = v317;
        v313[3] = v318;
        v313[4] = v320;
        uint64_t v321 = v311[16];
        uint64_t v322 = (uint64_t *)((char *)v319 + v321);
        uint64_t v323 = &v16[v321];
        void *v322 = *(void *)v323;
        v322[1] = *((void *)v323 + 1);
        uint64_t v324 = v311[20];
        uint64_t v325 = (uint64_t)v319 + v324;
        uint64_t v326 = &v16[v324];
        *(void *)uint64_t v325 = *(void *)&v16[v324];
        *(void *)(v325 + _Block_object_dispose(&a9, 8) = *(void *)&v16[v324 + 8];
        uint64_t v327 = *(void *)&v16[v324 + 16];
        uint64_t v328 = *(void *)&v16[v324 + 24];
        uint64_t v329 = *(void *)&v16[v324 + 32];
        uint64_t v330 = *((void *)v326 + 5);
        LOBYTE(v317) = v326[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v327, v328, v329, v330, v317);
        *(void *)(v325 + 16) = v327;
        *(void *)(v325 + 24) = v328;
        *(void *)(v325 + 32) = v329;
        *(void *)(v325 + 40) = v330;
        *(unsigned char *)(v325 + 4_Block_object_dispose(&a9, 8) = v317;
        *(unsigned char *)(v325 + 49) = v326[49];
        uint64_t v331 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v332 = v325 + v331;
        uint64_t v333 = &v326[v331];
        uint64_t v12 = v724;
        (*(void (**)(uint64_t, char *, uint64_t))(v723 + 16))(v325 + v331, &v326[v331], v724);
        uint64_t v334 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v335 = (void *)(v332 + v334);
        uint64_t v336 = &v333[v334];
        uint64_t v337 = *((void *)v336 + 1);
        *uint64_t v335 = *(void *)v336;
        v335[1] = v337;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        uint64_t v5 = v725;
        uint64_t v4 = v726;
        a3 = v727;
        uint64_t v13 = v722;
        break;
      case 4u:
        uint64_t v73 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v74 = swift_getEnumCaseMultiPayload();
        if (v74 == 2)
        {
          unint64_t v291 = *((void *)v16 + 1);
          if (v291 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            uint64_t v338 = v15;
            uint64_t v339 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            *uint64_t v338 = v339;
            v338[1] = v291;
            uint64_t v15 = v338;
          }
        }
        else if (v74 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v74)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v73 - 8) + 64));
            goto LABEL_136;
          }
          uint64_t v75 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v15, v16, v75);
        }
        swift_storeEnumTagMultiPayload();
LABEL_136:
        unsigned __int8 v340 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
        *(uint64_t *)((char *)v15 + v340[12]) = *(void *)&v16[v340[12]];
        *(uint64_t *)((char *)v15 + v340[16]) = *(void *)&v16[v340[16]];
        uint64_t v341 = v340[20];
        uint64_t v342 = (char *)v15 + v341;
        unsigned __int8 v343 = &v16[v341];
        *(void *)uint64_t v342 = *(void *)&v16[v341];
        *((void *)v342 + 1) = *(void *)&v16[v341 + 8];
        uint64_t v344 = *(void *)&v16[v341 + 16];
        uint64_t v345 = *(void *)&v16[v341 + 24];
        uint64_t v346 = *(void *)&v16[v341 + 32];
        uint64_t v347 = *((void *)v343 + 5);
        unsigned __int8 v348 = v343[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v344, v345, v346, v347, v348);
        *((void *)v342 + 2) = v344;
        *((void *)v342 + 3) = v345;
        *((void *)v342 + 4) = v346;
        *((void *)v342 + 5) = v347;
        v342[48] = v348;
        v342[49] = v343[49];
        uint64_t v349 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v350 = &v342[v349];
        uint64_t v351 = &v343[v349];
        uint64_t v12 = v724;
        (*(void (**)(char *, char *, uint64_t))(v723 + 16))(&v342[v349], &v343[v349], v724);
        uint64_t v352 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v353 = &v350[v352];
        uint64_t v354 = &v351[v352];
        uint64_t v355 = *((void *)v354 + 1);
        *(void *)uint64_t v353 = *(void *)v354;
        *((void *)v353 + 1) = v355;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        uint64_t v5 = v725;
        uint64_t v4 = v726;
        uint64_t v13 = v722;
        break;
      case 5u:
        uint64_t v76 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v77 = swift_getEnumCaseMultiPayload();
        if (v77 == 2)
        {
          unint64_t v292 = *((void *)v16 + 1);
          if (v292 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            uint64_t v356 = v15;
            uint64_t v357 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            *uint64_t v356 = v357;
            v356[1] = v292;
            uint64_t v15 = v356;
          }
        }
        else if (v77 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v77)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v76 - 8) + 64));
            goto LABEL_139;
          }
          uint64_t v78 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v15, v16, v78);
        }
        swift_storeEnumTagMultiPayload();
LABEL_139:
        uint64_t v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(uint64_t *)((char *)v15 + *(int *)(v358 + 48)) = *(void *)&v16[*(int *)(v358 + 48)];
        uint64_t v359 = *(int *)(v358 + 64);
        int v360 = (char *)v15 + v359;
        uint64_t v361 = &v16[v359];
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v723 + 16);
        swift_bridgeObjectRetain();
        v103(v360, v361, v12);
        uint64_t v362 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v360[v362[13]] = v361[v362[13]];
        uint64_t v363 = v362[14];
        uint64_t v364 = &v360[v363];
        uint64_t v365 = &v361[v363];
        uint64_t v366 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 16))(v364, v365, v366);
        uint64_t v367 = v362[15];
        uint64_t v110 = &v360[v367];
        uint64_t v111 = &v361[v367];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v368 = swift_getEnumCaseMultiPayload();
        if (v368 == 2)
        {
          *(void *)uint64_t v110 = *(void *)v111;
          *((void *)v110 + 1) = *((void *)v111 + 1);
          *((void *)v110 + 2) = *((void *)v111 + 2);
          *((void *)v110 + 3) = *((void *)v111 + 3);
          *((void *)v110 + 4) = *((void *)v111 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v376 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          v714 = v103;
          uint64_t v377 = &v110[v376];
          uint64_t v378 = &v111[v376];
          *(void *)uint64_t v377 = *(void *)&v111[v376];
          *((void *)v377 + 1) = *(void *)&v111[v376 + 8];
          uint64_t v379 = *(void *)&v111[v376 + 16];
          uint64_t v380 = *((void *)v378 + 3);
          uint64_t v381 = *((void *)v378 + 4);
          uint64_t v382 = *((void *)v378 + 5);
          unsigned __int8 v383 = v378[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v379, v380, v381, v382, v383);
          *((void *)v377 + 2) = v379;
          *((void *)v377 + 3) = v380;
          *((void *)v377 + 4) = v381;
          *((void *)v377 + 5) = v382;
          v377[48] = v383;
          a3 = v727;
          v377[49] = v378[49];
          uint64_t v384 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v385 = &v377[v384];
          int v386 = &v378[v384];
          uint64_t v12 = v724;
          v714(&v377[v384], v386, v724);
          uint64_t v387 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v61 = &v385[v387];
          uint64_t v62 = &v386[v387];
        }
        else
        {
          if (v368 != 1) {
            goto LABEL_172;
          }
          char *v110 = *v111;
          uint64_t v369 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v370 = &v110[v369];
          uint64_t v371 = &v111[v369];
          v103(&v110[v369], v371, v12);
          uint64_t v372 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v373 = &v370[v372];
          uint64_t v374 = &v371[v372];
          v103(v373, v374, v12);
          uint64_t v375 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v61 = &v373[v375];
          uint64_t v62 = &v374[v375];
        }
        uint64_t v4 = v726;
        goto LABEL_173;
      case 6u:
        uint64_t v79 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v80 = swift_getEnumCaseMultiPayload();
        if (v80 == 2)
        {
          unint64_t v293 = *((void *)v16 + 1);
          if (v293 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            uint64_t v388 = v15;
            uint64_t v389 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            *uint64_t v388 = v389;
            v388[1] = v293;
            uint64_t v15 = v388;
          }
        }
        else if (v80 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v80)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v79 - 8) + 64));
            goto LABEL_147;
          }
          uint64_t v81 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v15, v16, v81);
        }
        swift_storeEnumTagMultiPayload();
LABEL_147:
        uint64_t v390 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(uint64_t *)((char *)v15 + *(int *)(v390 + 48)) = *(void *)&v16[*(int *)(v390 + 48)];
        uint64_t v391 = *(int *)(v390 + 64);
        uint64_t v392 = (char *)v15 + v391;
        uint64_t v393 = &v16[v391];
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v723 + 16);
        swift_bridgeObjectRetain();
        v103(v392, v393, v12);
        uint64_t v394 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v392[v394[13]] = v393[v394[13]];
        uint64_t v395 = v394[14];
        uint64_t v396 = &v392[v395];
        uint64_t v397 = &v393[v395];
        uint64_t v398 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 16))(v396, v397, v398);
        uint64_t v399 = v394[15];
        uint64_t v110 = &v392[v399];
        uint64_t v111 = &v393[v399];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v400 = swift_getEnumCaseMultiPayload();
        if (v400 == 2)
        {
          *(void *)uint64_t v110 = *(void *)v111;
          *((void *)v110 + 1) = *((void *)v111 + 1);
          *((void *)v110 + 2) = *((void *)v111 + 2);
          *((void *)v110 + 3) = *((void *)v111 + 3);
          *((void *)v110 + 4) = *((void *)v111 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v408 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          v715 = v103;
          uint64_t v409 = &v110[v408];
          unsigned __int8 v410 = &v111[v408];
          *(void *)uint64_t v409 = *(void *)&v111[v408];
          *((void *)v409 + 1) = *(void *)&v111[v408 + 8];
          uint64_t v411 = *(void *)&v111[v408 + 16];
          uint64_t v412 = *((void *)v410 + 3);
          uint64_t v413 = *((void *)v410 + 4);
          uint64_t v414 = *((void *)v410 + 5);
          unsigned __int8 v415 = v410[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v411, v412, v413, v414, v415);
          *((void *)v409 + 2) = v411;
          *((void *)v409 + 3) = v412;
          *((void *)v409 + 4) = v413;
          *((void *)v409 + 5) = v414;
          v409[48] = v415;
          a3 = v727;
          v409[49] = v410[49];
          uint64_t v416 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v417 = &v409[v416];
          uint64_t v418 = &v410[v416];
          uint64_t v12 = v724;
          v715(&v409[v416], v418, v724);
          uint64_t v419 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v61 = &v417[v419];
          uint64_t v62 = &v418[v419];
        }
        else
        {
          if (v400 != 1) {
            goto LABEL_172;
          }
          char *v110 = *v111;
          uint64_t v401 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v402 = &v110[v401];
          uint64_t v403 = &v111[v401];
          v103(&v110[v401], v403, v12);
          uint64_t v404 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v405 = &v402[v404];
          uint64_t v406 = &v403[v404];
          v103(v405, v406, v12);
          uint64_t v407 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v61 = &v405[v407];
          uint64_t v62 = &v406[v407];
        }
        uint64_t v4 = v726;
        goto LABEL_173;
      case 7u:
        uint64_t v82 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v83 = swift_getEnumCaseMultiPayload();
        if (v83 == 2)
        {
          unint64_t v294 = *((void *)v16 + 1);
          if (v294 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            uint64_t v420 = v15;
            uint64_t v421 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            *uint64_t v420 = v421;
            v420[1] = v294;
            uint64_t v15 = v420;
          }
          uint64_t v4 = v726;
        }
        else if (v83 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v83)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v82 - 8) + 64));
            goto LABEL_156;
          }
          uint64_t v84 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v15, v16, v84);
        }
        swift_storeEnumTagMultiPayload();
LABEL_156:
        uint64_t v422 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
        *(uint64_t *)((char *)v15 + *(int *)(v422 + 48)) = *(void *)&v16[*(int *)(v422 + 48)];
        *(uint64_t *)((char *)v15 + *(int *)(v422 + 64)) = *(void *)&v16[*(int *)(v422 + 64)];
        swift_bridgeObjectRetain();
        goto LABEL_204;
      case 8u:
        uint64_t v85 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v86 = swift_getEnumCaseMultiPayload();
        if (v86 == 2)
        {
          unint64_t v295 = *((void *)v16 + 1);
          if (v295 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            unsigned __int8 v423 = v15;
            uint64_t v424 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            *unsigned __int8 v423 = v424;
            v423[1] = v295;
            uint64_t v15 = v423;
          }
        }
        else if (v86 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v86)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v85 - 8) + 64));
            goto LABEL_159;
          }
          uint64_t v87 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v15, v16, v87);
        }
        swift_storeEnumTagMultiPayload();
LABEL_159:
        uint64_t v425 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(uint64_t *)((char *)v15 + v425[12]) = *(void *)&v16[v425[12]];
        *(uint64_t *)((char *)v15 + v425[16]) = *(void *)&v16[v425[16]];
        uint64_t v426 = v425[20];
        uint64_t v427 = (char *)v15 + v426;
        uint64_t v428 = &v16[v426];
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v723 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v103(v427, v428, v12);
        uint64_t v429 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v427[v429[13]] = v428[v429[13]];
        uint64_t v430 = v429[14];
        uint64_t v431 = &v427[v430];
        uint64_t v432 = &v428[v430];
        uint64_t v433 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v433 - 8) + 16))(v431, v432, v433);
        uint64_t v434 = v429[15];
        uint64_t v110 = &v427[v434];
        uint64_t v111 = &v428[v434];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v435 = swift_getEnumCaseMultiPayload();
        if (v435 == 2)
        {
          *(void *)uint64_t v110 = *(void *)v111;
          *((void *)v110 + 1) = *((void *)v111 + 1);
          *((void *)v110 + 2) = *((void *)v111 + 2);
          *((void *)v110 + 3) = *((void *)v111 + 3);
          *((void *)v110 + 4) = *((void *)v111 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v443 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          v716 = v103;
          uint64_t v444 = &v110[v443];
          uint64_t v445 = &v111[v443];
          *(void *)uint64_t v444 = *(void *)&v111[v443];
          *((void *)v444 + 1) = *(void *)&v111[v443 + 8];
          uint64_t v446 = *(void *)&v111[v443 + 16];
          uint64_t v447 = *((void *)v445 + 3);
          uint64_t v448 = *((void *)v445 + 4);
          uint64_t v449 = *((void *)v445 + 5);
          unsigned __int8 v450 = v445[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v446, v447, v448, v449, v450);
          *((void *)v444 + 2) = v446;
          *((void *)v444 + 3) = v447;
          *((void *)v444 + 4) = v448;
          *((void *)v444 + 5) = v449;
          v444[48] = v450;
          a3 = v727;
          v444[49] = v445[49];
          uint64_t v451 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v452 = &v444[v451];
          int v453 = &v445[v451];
          uint64_t v12 = v724;
          v716(&v444[v451], v453, v724);
          uint64_t v454 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v61 = &v452[v454];
          uint64_t v62 = &v453[v454];
        }
        else
        {
          if (v435 != 1) {
            goto LABEL_172;
          }
          char *v110 = *v111;
          uint64_t v436 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v437 = &v110[v436];
          int v438 = &v111[v436];
          v103(&v110[v436], v438, v12);
          uint64_t v439 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          unint64_t v440 = &v437[v439];
          uint64_t v441 = &v438[v439];
          v103(v440, v441, v12);
          uint64_t v442 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v61 = &v440[v442];
          uint64_t v62 = &v441[v442];
        }
        uint64_t v4 = v726;
        goto LABEL_173;
      case 9u:
        uint64_t v88 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v89 = swift_getEnumCaseMultiPayload();
        if (v89 == 2)
        {
          unint64_t v296 = *((void *)v16 + 1);
          if (v296 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            uint64_t v455 = v15;
            uint64_t v456 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            *uint64_t v455 = v456;
            v455[1] = v296;
            uint64_t v15 = v455;
          }
        }
        else if (v89 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v89)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v88 - 8) + 64));
            goto LABEL_167;
          }
          uint64_t v90 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v15, v16, v90);
        }
        swift_storeEnumTagMultiPayload();
LABEL_167:
        uint64_t v457 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(uint64_t *)((char *)v15 + v457[12]) = *(void *)&v16[v457[12]];
        *(uint64_t *)((char *)v15 + v457[16]) = *(void *)&v16[v457[16]];
        uint64_t v458 = v457[20];
        uint64_t v459 = (char *)v15 + v458;
        uint64_t v460 = &v16[v458];
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v723 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v103(v459, v460, v12);
        uint64_t v461 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v459[v461[13]] = v460[v461[13]];
        uint64_t v462 = v461[14];
        uint64_t v463 = &v459[v462];
        uint64_t v464 = &v460[v462];
        uint64_t v465 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v465 - 8) + 16))(v463, v464, v465);
        uint64_t v466 = v461[15];
        uint64_t v110 = &v459[v466];
        uint64_t v111 = &v460[v466];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v467 = swift_getEnumCaseMultiPayload();
        if (v467 == 2)
        {
          *(void *)uint64_t v110 = *(void *)v111;
          *((void *)v110 + 1) = *((void *)v111 + 1);
          *((void *)v110 + 2) = *((void *)v111 + 2);
          *((void *)v110 + 3) = *((void *)v111 + 3);
          *((void *)v110 + 4) = *((void *)v111 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v475 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          v717 = v103;
          uint64_t v476 = &v110[v475];
          uint64_t v477 = &v111[v475];
          *(void *)uint64_t v476 = *(void *)&v111[v475];
          *((void *)v476 + 1) = *(void *)&v111[v475 + 8];
          uint64_t v478 = *(void *)&v111[v475 + 16];
          uint64_t v479 = *((void *)v477 + 3);
          uint64_t v480 = *((void *)v477 + 4);
          uint64_t v481 = *((void *)v477 + 5);
          unsigned __int8 v482 = v477[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v478, v479, v480, v481, v482);
          *((void *)v476 + 2) = v478;
          *((void *)v476 + 3) = v479;
          *((void *)v476 + 4) = v480;
          *((void *)v476 + 5) = v481;
          v476[48] = v482;
          a3 = v727;
          v476[49] = v477[49];
          uint64_t v483 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          long long v484 = &v476[v483];
          unint64_t v485 = &v477[v483];
          uint64_t v12 = v724;
          v717(&v476[v483], v485, v724);
          uint64_t v486 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v61 = &v484[v486];
          uint64_t v62 = &v485[v486];
        }
        else
        {
          if (v467 != 1) {
            goto LABEL_172;
          }
          char *v110 = *v111;
          uint64_t v468 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v469 = &v110[v468];
          unsigned __int8 v470 = &v111[v468];
          v103(&v110[v468], v470, v12);
          uint64_t v471 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v472 = &v469[v471];
          unsigned __int8 v473 = &v470[v471];
          v103(v472, v473, v12);
          uint64_t v474 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v61 = &v472[v474];
          uint64_t v62 = &v473[v474];
        }
        uint64_t v4 = v726;
        goto LABEL_173;
      case 0xAu:
        uint64_t v91 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v92 = swift_getEnumCaseMultiPayload();
        if (v92 == 2)
        {
          unint64_t v297 = *((void *)v16 + 1);
          if (v297 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          }
          else
          {
            uint64_t v501 = v15;
            uint64_t v502 = *(void *)v16;
            sub_1A54E9E98(*(void *)v16, *((void *)v16 + 1));
            *uint64_t v501 = v502;
            v501[1] = v297;
            uint64_t v15 = v501;
          }
          uint64_t v4 = v726;
        }
        else if (v92 == 1)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v92)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v91 - 8) + 64));
            goto LABEL_177;
          }
          uint64_t v93 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v15, v16, v93);
        }
        swift_storeEnumTagMultiPayload();
LABEL_177:
        uint64_t v503 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
        *(uint64_t *)((char *)v15 + *(int *)(v503 + 48)) = *(void *)&v16[*(int *)(v503 + 48)];
        *(uint64_t *)((char *)v15 + *(int *)(v503 + 64)) = *(void *)&v16[*(int *)(v503 + 64)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_204;
      case 0xBu:
        uint64_t *v15 = *(void *)v16;
        v15[1] = *((void *)v16 + 1);
        void v15[2] = *((void *)v16 + 2);
        v15[3] = *((void *)v16 + 3);
        unint64_t v94 = v15;
        uint64_t v95 = *((void *)v16 + 4);
        uint64_t v96 = *((void *)v16 + 5);
        char v97 = v16[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        v94[4] = v95;
        v94[5] = v96;
        *((unsigned char *)v94 + 4_Block_object_dispose(&a9, 8) = v97;
        uint64_t v98 = *((void *)v16 + 7);
        unint64_t v99 = *((void *)v16 + 8);
        sub_1A54E9E98(v98, v99);
        v94[7] = v98;
        v94[8] = v99;
        uint64_t v100 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
        int v101 = (char *)v94 + v100;
        uint64_t v102 = &v16[v100];
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v723 + 16);
        v103(v101, &v16[v100], v12);
        unint64_t v104 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v101[v104[13]] = v102[v104[13]];
        uint64_t v105 = v104[14];
        int v106 = &v101[v105];
        uint64_t v107 = &v102[v105];
        uint64_t v108 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
        uint64_t v109 = v104[15];
        uint64_t v110 = &v101[v109];
        uint64_t v111 = &v102[v109];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v112 = swift_getEnumCaseMultiPayload();
        if (v112 == 2)
        {
          *(void *)uint64_t v110 = *(void *)v111;
          *((void *)v110 + 1) = *((void *)v111 + 1);
          *((void *)v110 + 2) = *((void *)v111 + 2);
          *((void *)v110 + 3) = *((void *)v111 + 3);
          *((void *)v110 + 4) = *((void *)v111 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v253 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          v711 = v103;
          uint64_t v254 = &v110[v253];
          unsigned __int8 v255 = &v111[v253];
          *(void *)uint64_t v254 = *(void *)&v111[v253];
          *((void *)v254 + 1) = *(void *)&v111[v253 + 8];
          uint64_t v256 = *(void *)&v111[v253 + 16];
          uint64_t v257 = *((void *)v255 + 3);
          uint64_t v258 = *((void *)v255 + 4);
          uint64_t v259 = *((void *)v255 + 5);
          unsigned __int8 v260 = v255[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v256, v257, v258, v259, v260);
          *((void *)v254 + 2) = v256;
          *((void *)v254 + 3) = v257;
          *((void *)v254 + 4) = v258;
          *((void *)v254 + 5) = v259;
          v254[48] = v260;
          a3 = v727;
          v254[49] = v255[49];
          uint64_t v261 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v262 = &v254[v261];
          uint64_t v263 = &v255[v261];
          uint64_t v12 = v724;
          v711(&v254[v261], v263, v724);
          uint64_t v264 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v61 = &v262[v264];
          uint64_t v62 = &v263[v264];
          goto LABEL_88;
        }
        if (v112 == 1)
        {
          char *v110 = *v111;
          uint64_t v113 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v114 = &v110[v113];
          uint64_t v115 = &v111[v113];
          v103(&v110[v113], v115, v12);
          uint64_t v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v117 = &v114[v116];
          uint64_t v118 = &v115[v116];
          v103(v117, v118, v12);
          uint64_t v119 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v61 = &v117[v119];
          uint64_t v62 = &v118[v119];
LABEL_88:
          uint64_t v4 = v726;
          goto LABEL_173;
        }
LABEL_172:
        v718 = v103;
        *(void *)uint64_t v110 = *(void *)v111;
        *((void *)v110 + 1) = *((void *)v111 + 1);
        *((void *)v110 + 2) = *((void *)v111 + 2);
        *((void *)v110 + 3) = *((void *)v111 + 3);
        *((void *)v110 + 4) = *((void *)v111 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v487 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v488 = &v110[v487];
        uint64_t v489 = &v111[v487];
        *(void *)uint64_t v488 = *(void *)&v111[v487];
        *((void *)v488 + 1) = *(void *)&v111[v487 + 8];
        uint64_t v490 = *(void *)&v111[v487 + 16];
        uint64_t v491 = *((void *)v489 + 3);
        uint64_t v492 = *((void *)v489 + 4);
        uint64_t v493 = *((void *)v489 + 5);
        unsigned __int8 v494 = v489[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v490, v491, v492, v493, v494);
        *((void *)v488 + 2) = v490;
        *((void *)v488 + 3) = v491;
        *((void *)v488 + 4) = v492;
        *((void *)v488 + 5) = v493;
        v488[48] = v494;
        v488[49] = v489[49];
        uint64_t v495 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        v496 = &v488[v495];
        v497 = &v489[v495];
        uint64_t v498 = &v489[v495];
        uint64_t v12 = v724;
        v718(&v488[v495], v498, v724);
        uint64_t v499 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v61 = &v496[v499];
        uint64_t v62 = &v497[v499];
        uint64_t v4 = v726;
        a3 = v727;
        goto LABEL_173;
      case 0xCu:
        uint64_t *v15 = *(void *)v16;
        v15[1] = *((void *)v16 + 1);
        void v15[2] = *((void *)v16 + 2);
        v15[3] = *((void *)v16 + 3);
        uint64_t v120 = *((void *)v16 + 4);
        uint64_t v121 = *((void *)v16 + 5);
        char v122 = v16[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        void v15[4] = v120;
        v15[5] = v121;
        *((unsigned char *)v15 + 4_Block_object_dispose(&a9, 8) = v122;
        uint64_t v4 = v726;
        uint64_t v123 = *((void *)v16 + 7);
        unint64_t v124 = *((void *)v16 + 8);
        sub_1A54E9E98(v123, v124);
        v15[7] = v123;
        _DWORD v15[8] = v124;
        goto LABEL_204;
      case 0xDu:
        uint64_t *v15 = *(void *)v16;
        v15[1] = *((void *)v16 + 1);
        void v15[2] = *((void *)v16 + 2);
        v15[3] = *((void *)v16 + 3);
        uint64_t v125 = v15;
        uint64_t v126 = *((void *)v16 + 4);
        uint64_t v127 = *((void *)v16 + 5);
        char v128 = v16[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        v125[4] = v126;
        v125[5] = v127;
        *((unsigned char *)v125 + 4_Block_object_dispose(&a9, 8) = v128;
        uint64_t v129 = *((void *)v16 + 7);
        unint64_t v130 = *((void *)v16 + 8);
        sub_1A54E9E98(v129, v130);
        v125[7] = v129;
        v125[8] = v130;
        uint64_t v131 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
        uint64_t v132 = (uint64_t)v125 + v131;
        uint64_t v133 = &v16[v131];
        uint64_t v134 = *(void (**)(uint64_t, char *, uint64_t))(v723 + 16);
        v134(v132, &v16[v131], v12);
        uint64_t v135 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        *(unsigned char *)(v132 + v135[13]) = v133[v135[13]];
        uint64_t v136 = v135[14];
        uint64_t v137 = v132 + v136;
        uint64_t v138 = &v133[v136];
        uint64_t v139 = sub_1A56D4C28();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
        uint64_t v140 = v135[15];
        uint64_t v141 = (void *)(v132 + v140);
        int v142 = &v133[v140];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v143 = swift_getEnumCaseMultiPayload();
        if (v143 == 2)
        {
          *uint64_t v141 = *(void *)v142;
          v141[1] = *((void *)v142 + 1);
          v141[2] = *((void *)v142 + 2);
          v141[3] = *((void *)v142 + 3);
          v141[4] = *((void *)v142 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v265 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          v712 = (void (*)(char *, char *, uint64_t))v134;
          uint64_t v266 = (char *)v141 + v265;
          uint64_t v267 = &v142[v265];
          *(void *)uint64_t v266 = *(void *)&v142[v265];
          *((void *)v266 + 1) = *(void *)&v142[v265 + 8];
          uint64_t v268 = *(void *)&v142[v265 + 16];
          uint64_t v269 = *((void *)v267 + 3);
          uint64_t v270 = *((void *)v267 + 4);
          uint64_t v271 = *((void *)v267 + 5);
          unsigned __int8 v272 = v267[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v268, v269, v270, v271, v272);
          *((void *)v266 + 2) = v268;
          *((void *)v266 + 3) = v269;
          *((void *)v266 + 4) = v270;
          *((void *)v266 + 5) = v271;
          v266[48] = v272;
          a3 = v727;
          v266[49] = v267[49];
          uint64_t v273 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          unint64_t v274 = &v266[v273];
          uint64_t v275 = &v267[v273];
          uint64_t v12 = v724;
          v712(&v266[v273], v275, v724);
          uint64_t v276 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v61 = &v274[v276];
          uint64_t v62 = &v275[v276];
          goto LABEL_91;
        }
        if (v143 == 1)
        {
          *(unsigned char *)uint64_t v141 = *v142;
          uint64_t v144 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          unint64_t v145 = (char *)v141 + v144;
          long long v146 = &v142[v144];
          v134((uint64_t)v141 + v144, v146, v12);
          uint64_t v147 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          unint64_t v148 = &v145[v147];
          uint64_t v149 = &v146[v147];
          v134((uint64_t)v148, v149, v12);
          uint64_t v150 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v61 = &v148[v150];
          uint64_t v62 = &v149[v150];
LABEL_91:
          uint64_t v4 = v726;
          goto LABEL_173;
        }
        v713 = (void (*)(char *, char *, uint64_t))v134;
        *uint64_t v141 = *(void *)v142;
        v141[1] = *((void *)v142 + 1);
        v141[2] = *((void *)v142 + 2);
        v141[3] = *((void *)v142 + 3);
        v141[4] = *((void *)v142 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v277 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        unint64_t v278 = (char *)v141 + v277;
        uint64_t v279 = &v142[v277];
        *(void *)unint64_t v278 = *(void *)&v142[v277];
        *((void *)v278 + 1) = *(void *)&v142[v277 + 8];
        uint64_t v280 = *(void *)&v142[v277 + 16];
        uint64_t v281 = *((void *)v279 + 3);
        uint64_t v282 = *((void *)v279 + 4);
        uint64_t v283 = *((void *)v279 + 5);
        unsigned __int8 v284 = v279[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v280, v281, v282, v283, v284);
        *((void *)v278 + 2) = v280;
        *((void *)v278 + 3) = v281;
        *((void *)v278 + 4) = v282;
        *((void *)v278 + 5) = v283;
        v278[48] = v284;
        v278[49] = v279[49];
        uint64_t v285 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        unint64_t v286 = &v278[v285];
        uint64_t v287 = &v279[v285];
        unint64_t v288 = &v279[v285];
        uint64_t v12 = v724;
        v713(&v278[v285], v288, v724);
        uint64_t v289 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v61 = &v286[v289];
        uint64_t v62 = &v287[v289];
        uint64_t v4 = v726;
        a3 = v727;
LABEL_173:
        uint64_t v500 = *((void *)v62 + 1);
        *(void *)uint64_t v61 = *(void *)v62;
        *((void *)v61 + 1) = v500;
        swift_retain();
        swift_storeEnumTagMultiPayload();
LABEL_204:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        if (*((void *)v16 + 3) >= 2uLL)
        {
          uint64_t *v15 = *(void *)v16;
          v15[1] = *((void *)v16 + 1);
          void v15[2] = *((void *)v16 + 2);
          v15[3] = *((void *)v16 + 3);
          long long v173 = v15;
          uint64_t v174 = *((void *)v16 + 4);
          uint64_t v175 = *((void *)v16 + 5);
          char v176 = v16[48];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          v173[4] = v174;
          v173[5] = v175;
          *((unsigned char *)v173 + 4_Block_object_dispose(&a9, 8) = v176;
          uint64_t v177 = *((void *)v16 + 7);
          unint64_t v178 = *((void *)v16 + 8);
          sub_1A54E9E98(v177, v178);
          v173[7] = v177;
          v173[8] = v178;
          uint64_t v15 = v173;
        }
        else
        {
          *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          long long v151 = *((_OWORD *)v16 + 1);
          long long v152 = *((_OWORD *)v16 + 2);
          long long v153 = *((_OWORD *)v16 + 3);
          _DWORD v15[8] = *((void *)v16 + 8);
          *((_OWORD *)v15 + 2) = v152;
          *((_OWORD *)v15 + 3) = v153;
          *((_OWORD *)v15 + 1) = v151;
        }
        if (*((void *)v16 + 12) >= 2uLL)
        {
          v15[9] = *((void *)v16 + 9);
          v15[10] = *((void *)v16 + 10);
          v15[11] = *((void *)v16 + 11);
          v15[12] = *((void *)v16 + 12);
          uint64_t v182 = v15;
          uint64_t v183 = *((void *)v16 + 13);
          uint64_t v184 = *((void *)v16 + 14);
          char v185 = v16[120];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          v182[13] = v183;
          v182[14] = v184;
          *((unsigned char *)v182 + 120) = v185;
          uint64_t v186 = *((void *)v16 + 16);
          unint64_t v187 = *((void *)v16 + 17);
          sub_1A54E9E98(v186, v187);
          v182[16] = v186;
          v182[17] = v187;
        }
        else
        {
          *(_OWORD *)(v15 + 9) = *(_OWORD *)(v16 + 72);
          long long v179 = *(_OWORD *)(v16 + 88);
          long long v180 = *(_OWORD *)(v16 + 104);
          long long v181 = *(_OWORD *)(v16 + 120);
          v15[17] = *((void *)v16 + 17);
          *(_OWORD *)(v15 + 13) = v180;
          *(_OWORD *)(v15 + 15) = v181;
          *(_OWORD *)(v15 + 11) = v179;
        }
        uint64_t v4 = v726;
        goto LABEL_204;
      case 0xFu:
        uint64_t v154 = v13;
        uint64_t v155 = sub_1A56D4C28();
        uint64_t v156 = *(void *)(v155 - 8);
        uint64_t v157 = *(void (**)(uint64_t *, char *, uint64_t))(v156 + 16);
        v157(v15, v16, v155);
        uint64_t v158 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v159 = v158[5];
        uint64_t v160 = v15;
        uint64_t v161 = (char *)v15 + v159;
        uint64_t v162 = &v16[v159];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(&v16[v159], 1, v155))
        {
          uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
          v157((uint64_t *)v161, v162, v155);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v161, 0, 1, v155);
        }
        *((unsigned char *)v15 + v158[6]) = v16[v158[6]];
        uint64_t v188 = v158[7];
        uint64_t v189 = (uint64_t *)((char *)v15 + v188);
        uint64_t v190 = &v16[v188];
        uint64_t v191 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v192 = *(void *)(v191 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v190, 1, v191))
        {
          uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v189, v190, *(void *)(*(void *)(v193 - 8) + 64));
        }
        else
        {
          uint64_t v200 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v201 = *(void *)(v200 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v201 + 48))(v190, 1, v200))
          {
            memcpy(v189, v190, *(void *)(v192 + 64));
          }
          else
          {
            int v298 = swift_getEnumCaseMultiPayload();
            if (v298 == 1)
            {
              *uint64_t v189 = *(void *)v190;
              v189[1] = *((void *)v190 + 1);
              v189[2] = *((void *)v190 + 2);
              v189[3] = *((void *)v190 + 3);
              v189[4] = *((void *)v190 + 4);
              v189[5] = *((void *)v190 + 5);
              v189[6] = *((void *)v190 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v298)
            {
              memcpy(v189, v190, *(void *)(v201 + 64));
            }
            else
            {
              *uint64_t v189 = *(void *)v190;
              v189[1] = *((void *)v190 + 1);
              swift_bridgeObjectRetain();
              uint64_t v299 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              uint64_t v300 = (char *)v189 + v299;
              uint64_t v301 = &v190[v299];
              uint64_t v302 = sub_1A56D4A28();
              uint64_t v303 = v300;
              uint64_t v15 = v160;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(v303, v301, v302);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v201 + 56))(v189, 0, 1, v200);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v192 + 56))(v189, 0, 1, v191);
        }
        v504 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
        uint64_t v505 = v504[12];
        uint64_t v506 = (uint64_t *)((char *)v15 + v505);
        uint64_t v507 = &v16[v505];
        uint64_t v508 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v509 = swift_getEnumCaseMultiPayload();
        uint64_t v13 = v154;
        if (v509 == 2)
        {
          unint64_t v511 = *((void *)v507 + 1);
          if (v511 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v506 = *(_OWORD *)v507;
          }
          else
          {
            uint64_t v512 = *(void *)v507;
            sub_1A54E9E98(*(void *)v507, *((void *)v507 + 1));
            *uint64_t v506 = v512;
            v506[1] = v511;
            uint64_t v15 = v160;
          }
        }
        else if (v509 == 1)
        {
          *uint64_t v506 = *(void *)v507;
          v506[1] = *((void *)v507 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v509)
          {
            memcpy(v506, v507, *(void *)(*(void *)(v508 - 8) + 64));
            goto LABEL_192;
          }
          uint64_t v510 = sub_1A56D4A28();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v510 - 8) + 16))(v506, v507, v510);
        }
        swift_storeEnumTagMultiPayload();
LABEL_192:
        uint64_t v5 = v725;
        a3 = v727;
        uint64_t v12 = v724;
        uint64_t v513 = v504[16];
        id v514 = (uint64_t *)((char *)v15 + v513);
        id v515 = &v16[v513];
        *id v514 = *(void *)v515;
        v514[1] = *((void *)v515 + 1);
        *(uint64_t *)((char *)v15 + v504[20]) = *(void *)&v16[v504[20]];
        *(uint64_t *)((char *)v15 + v504[24]) = *(void *)&v16[v504[24]];
        *(uint64_t *)((char *)v15 + v504[28]) = *(void *)&v16[v504[28]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_193:
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v726;
        break;
      case 0x10u:
        uint64_t v164 = v13;
        uint64_t v165 = sub_1A56D4C28();
        uint64_t v166 = *(void *)(v165 - 8);
        uint64_t v167 = *(void (**)(uint64_t *, char *, uint64_t))(v166 + 16);
        v167(v15, v16, v165);
        uint64_t v168 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v169 = v168[5];
        v720 = v15;
        uint64_t v170 = (char *)v15 + v169;
        unint64_t v171 = &v16[v169];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(&v16[v169], 1, v165))
        {
          uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          v167((uint64_t *)v170, v171, v165);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v166 + 56))(v170, 0, 1, v165);
        }
        *((unsigned char *)v15 + v168[6]) = v16[v168[6]];
        uint64_t v194 = v168[7];
        uint64_t v195 = (uint64_t *)((char *)v15 + v194);
        uint64_t v196 = &v16[v194];
        uint64_t v197 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v198 = *(void *)(v197 - 8);
        a3 = v727;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48))(v196, 1, v197))
        {
          uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v195, v196, *(void *)(*(void *)(v199 - 8) + 64));
        }
        else
        {
          uint64_t v202 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v203 = *(void *)(v202 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v196, 1, v202))
          {
            memcpy(v195, v196, *(void *)(v198 + 64));
          }
          else
          {
            int v304 = swift_getEnumCaseMultiPayload();
            if (v304 == 1)
            {
              *uint64_t v195 = *(void *)v196;
              v195[1] = *((void *)v196 + 1);
              v195[2] = *((void *)v196 + 2);
              v195[3] = *((void *)v196 + 3);
              v195[4] = *((void *)v196 + 4);
              v195[5] = *((void *)v196 + 5);
              v195[6] = *((void *)v196 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v304)
            {
              memcpy(v195, v196, *(void *)(v203 + 64));
            }
            else
            {
              *uint64_t v195 = *(void *)v196;
              v195[1] = *((void *)v196 + 1);
              swift_bridgeObjectRetain();
              uint64_t v305 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              uint64_t v306 = (char *)v195 + v305;
              unint64_t v307 = &v196[v305];
              uint64_t v308 = sub_1A56D4A28();
              uint64_t v309 = v306;
              uint64_t v15 = v720;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 16))(v309, v307, v308);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v203 + 56))(v195, 0, 1, v202);
          }
          a3 = v727;
          (*(void (**)(void *, void, uint64_t, uint64_t))(v198 + 56))(v195, 0, 1, v197);
        }
        uint64_t v516 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
        uint64_t v517 = (uint64_t *)((char *)v15 + v516);
        id v518 = &v16[v516];
        uint64_t v519 = type metadata accessor for SFAirDropReceive.Failure();
        int v520 = swift_getEnumCaseMultiPayload();
        uint64_t v12 = v724;
        uint64_t v13 = v164;
        if (v520 == 1)
        {
          *uint64_t v517 = *(void *)v518;
          v517[1] = *((void *)v518 + 1);
          v517[2] = *((void *)v518 + 2);
          v517[3] = *((void *)v518 + 3);
          v517[4] = *((void *)v518 + 4);
          v517[5] = *((void *)v518 + 5);
          v517[6] = *((void *)v518 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v520)
        {
          memcpy(v517, v518, *(void *)(*(void *)(v519 - 8) + 64));
        }
        else
        {
          *uint64_t v517 = *(void *)v518;
          v517[1] = *((void *)v518 + 1);
          swift_bridgeObjectRetain();
          uint64_t v521 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
          uint64_t v522 = (char *)v517 + v521;
          uint64_t v523 = &v518[v521];
          uint64_t v524 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v524 - 8) + 16))(v522, v523, v524);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v4 = v726;
        goto LABEL_204;
      default:
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)v5 + a3[7]) = *((unsigned char *)v4 + a3[7]);
  uint64_t v525 = a3[8];
  uint64_t v526 = (char *)v5 + v525;
  unint64_t v527 = (char *)v4 + v525;
  v13((char *)v5 + v525, (char *)v4 + v525, v12);
  uint64_t v528 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
  uint64_t v529 = v528[5];
  uint64_t v530 = &v526[v529];
  uint64_t v531 = &v527[v529];
  uint64_t v532 = *(void *)v531;
  uint64_t v533 = *((void *)v531 + 1);
  unsigned __int8 v534 = v531[16];
  sub_1A55118A0(*(void *)v531, v533, v534);
  uint64_t v535 = *(void *)v530;
  uint64_t v536 = *((void *)v530 + 1);
  *(void *)uint64_t v530 = v532;
  *((void *)v530 + 1) = v533;
  unsigned __int8 v537 = v530[16];
  v530[16] = v534;
  sub_1A5512CD4(v535, v536, v537);
  *(void *)&v526[v528[6]] = *(void *)&v527[v528[6]];
  v526[v528[7]] = v527[v528[7]];
  v526[v528[8]] = v527[v528[8]];
  v526[v528[9]] = v527[v528[9]];
  uint64_t v538 = v528[10];
  uint64_t v539 = &v526[v538];
  uint64_t v540 = &v527[v538];
  *(void *)uint64_t v539 = *(void *)v540;
  *((void *)v539 + 1) = *((void *)v540 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v541 = v528[11];
  uint64_t v542 = &v526[v541];
  uint64_t v543 = &v527[v541];
  *(void *)uint64_t v542 = *(void *)v543;
  *((void *)v542 + 1) = *((void *)v543 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v544 = v528[12];
  v545 = &v526[v544];
  uint64_t v546 = &v527[v544];
  *(void *)v545 = *(void *)v546;
  *((void *)v545 + 1) = *((void *)v546 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v547 = v528[13];
  unint64_t v548 = &v526[v547];
  unint64_t v549 = &v527[v547];
  *(void *)unint64_t v548 = *(void *)v549;
  *((void *)v548 + 1) = *((void *)v549 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v550 = v528[14];
  uint64_t v551 = &v526[v550];
  unint64_t v552 = &v527[v550];
  *(void *)uint64_t v551 = *(void *)v552;
  *((void *)v551 + 1) = *((void *)v552 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v553 = v528[15];
  v554 = &v526[v553];
  v555 = &v527[v553];
  *(void *)v554 = *(void *)v555;
  *((void *)v554 + 1) = *((void *)v555 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v556 = v528[16];
  uint64_t v557 = &v526[v556];
  uint64_t v558 = &v527[v556];
  *(void *)uint64_t v557 = *(void *)v558;
  *((void *)v557 + 1) = *((void *)v558 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v559 = v528[17];
  uint64_t v560 = &v526[v559];
  uint64_t v561 = &v527[v559];
  *(void *)uint64_t v560 = *(void *)v561;
  *((void *)v560 + 1) = *((void *)v561 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v562 = v528[18];
  uint64_t v563 = &v526[v562];
  uint64_t v564 = &v527[v562];
  *(void *)uint64_t v563 = *(void *)v564;
  *((void *)v563 + 1) = *((void *)v564 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v565 = v528[19];
  uint64_t v566 = &v526[v565];
  uint64_t v567 = &v527[v565];
  *(void *)uint64_t v566 = *(void *)v567;
  *((void *)v566 + 1) = *((void *)v567 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v568 = v528[20];
  uint64_t v569 = *(void **)&v526[v568];
  uint64_t v570 = *(void **)&v527[v568];
  *(void *)&v526[v568] = v570;
  id v571 = v570;

  uint64_t v572 = v528[21];
  uint64_t v573 = *(void **)&v526[v572];
  unsigned __int8 v574 = *(void **)&v527[v572];
  *(void *)&v526[v572] = v574;
  id v575 = v574;

  uint64_t v576 = v528[22];
  uint64_t v577 = *(void **)&v526[v576];
  uint64_t v578 = *(void **)&v527[v576];
  *(void *)&v526[v576] = v578;
  id v579 = v578;

  uint64_t v580 = v528[23];
  uint64_t v581 = &v526[v580];
  v582 = &v527[v580];
  *(void *)uint64_t v581 = *(void *)v582;
  *((void *)v581 + 1) = *((void *)v582 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v583 = v528[24];
  uint64_t v584 = &v526[v583];
  uint64_t v585 = &v527[v583];
  uint64_t v586 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v587 = *(void *)(v586 - 8);
  v588 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v587 + 48);
  LODWORD(v532) = v588(v584, 1, v586);
  int v589 = v588(v585, 1, v586);
  if (v532)
  {
    if (!v589)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v584 = *(void *)v585;
          *((void *)v584 + 1) = *((void *)v585 + 1);
          *((void *)v584 + 2) = *((void *)v585 + 2);
          *((void *)v584 + 3) = *((void *)v585 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v626 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
          uint64_t v627 = *(int *)(v626 + 64);
          v628 = &v584[v627];
          v721 = &v585[v627];
          uint64_t v629 = sub_1A56D4C28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v629 - 8) + 16))(v628, v721, v629);
          v584[*(int *)(v626 + 80)] = v585[*(int *)(v626 + 80)];
          break;
        case 6u:
          *(void *)uint64_t v584 = *(void *)v585;
          *((void *)v584 + 1) = *((void *)v585 + 1);
          goto LABEL_209;
        default:
          *(void *)uint64_t v584 = *(void *)v585;
          *((void *)v584 + 1) = *((void *)v585 + 1);
          *((void *)v584 + 2) = *((void *)v585 + 2);
LABEL_209:
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v587 + 56))(v584, 0, 1, v586);
      goto LABEL_214;
    }
LABEL_213:
    uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
    memcpy(v584, v585, *(void *)(*(void *)(v590 - 8) + 64));
    goto LABEL_214;
  }
  if (v589)
  {
    sub_1A54F7200((uint64_t)v584, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
    goto LABEL_213;
  }
  if (v725 != v726)
  {
    sub_1A54F7200((uint64_t)v584, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v584 = *(void *)v585;
        *((void *)v584 + 1) = *((void *)v585 + 1);
        *((void *)v584 + 2) = *((void *)v585 + 2);
        *((void *)v584 + 3) = *((void *)v585 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v634 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
        uint64_t v635 = *(int *)(v634 + 64);
        v636 = &v584[v635];
        v637 = &v585[v635];
        uint64_t v638 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v638 - 8) + 16))(v636, v637, v638);
        v584[*(int *)(v634 + 80)] = v585[*(int *)(v634 + 80)];
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)uint64_t v584 = *(void *)v585;
        *((void *)v584 + 1) = *((void *)v585 + 1);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *(void *)uint64_t v584 = *(void *)v585;
        *((void *)v584 + 1) = *((void *)v585 + 1);
        *((void *)v584 + 2) = *((void *)v585 + 2);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_214:
  *(void *)&v526[v528[25]] = *(void *)&v527[v528[25]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v526[v528[26]] = *(void *)&v527[v528[26]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v591 = v528[27];
  uint64_t v592 = (uint64_t *)&v526[v591];
  uint64_t v593 = &v527[v591];
  unint64_t v594 = *(void *)&v526[v591 + 8];
  unint64_t v595 = *((void *)v593 + 1);
  if (v594 >> 60 == 15)
  {
    v597 = v725;
    uint64_t v596 = v726;
    uint64_t v598 = v727;
    if (v595 >> 60 != 15)
    {
      uint64_t v599 = *(void *)v593;
      sub_1A54E9E98(*(void *)v593, *((void *)v593 + 1));
      *uint64_t v592 = v599;
      v592[1] = v595;
      goto LABEL_221;
    }
    goto LABEL_219;
  }
  v597 = v725;
  uint64_t v596 = v726;
  uint64_t v598 = v727;
  if (v595 >> 60 == 15)
  {
    sub_1A551BBE0((uint64_t)v592);
LABEL_219:
    *(_OWORD *)uint64_t v592 = *(_OWORD *)v593;
    goto LABEL_221;
  }
  uint64_t v600 = *(void *)v593;
  sub_1A54E9E98(*(void *)v593, *((void *)v593 + 1));
  uint64_t v601 = *v592;
  unint64_t v602 = v592[1];
  *uint64_t v592 = v600;
  v592[1] = v595;
  sub_1A54EA09C(v601, v602);
LABEL_221:
  uint64_t v603 = v598[9];
  v604 = (void *)((char *)v597 + v603);
  v605 = (void *)((char *)v596 + v603);
  uint64_t v606 = type metadata accessor for SFAirDropReceive.AskResponse();
  uint64_t v607 = *(void *)(v606 - 8);
  v608 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(v607 + 48);
  int v609 = v608(v604, 1, v606);
  int v610 = v608(v605, 1, v606);
  if (v609)
  {
    if (!v610)
    {
      uint64_t v611 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
      uint64_t v612 = *(void *)(v611 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v612 + 48))(v605, 3, v611))
      {
        memcpy(v604, v605, *(void *)(v607 + 64));
LABEL_263:
        uint64_t v596 = v726;
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v607 + 56))(v604, 0, 1, v606);
        goto LABEL_264;
      }
      uint64_t v623 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v624 = swift_getEnumCaseMultiPayload();
      if (v624 == 2)
      {
        unint64_t v630 = v605[1];
        if (v630 >> 60 == 15)
        {
          *(_OWORD *)v604 = *(_OWORD *)v605;
        }
        else
        {
          unint64_t v639 = *v605;
          sub_1A54E9E98(*v605, v605[1]);
          unint64_t *v604 = v639;
          v604[1] = v630;
        }
      }
      else if (v624 == 1)
      {
        unint64_t *v604 = *v605;
        v604[1] = v605[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v624)
        {
          memcpy(v604, v605, *(void *)(*(void *)(v623 - 8) + 64));
LABEL_259:
          uint64_t v640 = *(int *)(v611 + 48);
          v641 = (char *)v604 + v640;
          v642 = (char *)v605 + v640;
          *((unsigned char *)v604 + v640) = *((unsigned char *)v605 + v640);
          v643 = (_OWORD *)((char *)v604 + v640 + 8);
          v644 = (uint64_t *)((char *)v605 + v640 + 8);
          unint64_t v645 = *((void *)v642 + 2);
          if (v645 >> 60 == 15)
          {
            _OWORD *v643 = *(_OWORD *)v644;
          }
          else
          {
            uint64_t v646 = *v644;
            sub_1A54E9E98(*v644, v645);
            *((void *)v641 + 1) = v646;
            *((void *)v641 + 2) = v645;
          }
          v597 = v725;
          (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v612 + 56))(v604, 0, 3, v611);
          goto LABEL_263;
        }
        uint64_t v625 = sub_1A56D4A28();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v625 - 8) + 16))(v604, v605, v625);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_259;
    }
    goto LABEL_227;
  }
  if (v610)
  {
    sub_1A54F7200((uint64_t)v604, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.AskResponse);
LABEL_227:
    uint64_t v613 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048);
    memcpy(v604, v605, *(void *)(*(void *)(v613 - 8) + 64));
LABEL_264:
    v621 = v727;
    goto LABEL_265;
  }
  uint64_t v614 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v615 = *(void *)(v614 - 8);
  v616 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(v615 + 48);
  int v617 = v616(v604, 3, v614);
  int v618 = v616(v605, 3, v614);
  if (!v617)
  {
    if (v618)
    {
      sub_1A54E4D44((uint64_t)v604, &qword_1E9671130);
      goto LABEL_243;
    }
    v597 = v725;
    v621 = v727;
    if (v725 != v596)
    {
      sub_1A54F7200((uint64_t)v604, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v631 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v632 = swift_getEnumCaseMultiPayload();
      if (v632 == 2)
      {
        unint64_t v699 = v605[1];
        if (v699 >> 60 == 15)
        {
          *(_OWORD *)v604 = *(_OWORD *)v605;
        }
        else
        {
          unint64_t v700 = *v605;
          sub_1A54E9E98(*v605, v605[1]);
          unint64_t *v604 = v700;
          v604[1] = v699;
        }
        uint64_t v596 = v726;
      }
      else if (v632 == 1)
      {
        unint64_t *v604 = *v605;
        v604[1] = v605[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v632)
        {
          memcpy(v604, v605, *(void *)(*(void *)(v631 - 8) + 64));
          goto LABEL_290;
        }
        uint64_t v633 = sub_1A56D4A28();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v633 - 8) + 16))(v604, v605, v633);
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_290:
    uint64_t v701 = *(int *)(v614 + 48);
    v702 = (char *)v604 + v701;
    v703 = (char *)v605 + v701;
    char *v702 = *v703;
    v704 = (uint64_t *)(v703 + 8);
    unint64_t v705 = *((void *)v703 + 2);
    if (*((void *)v702 + 2) >> 60 == 15)
    {
      if (v705 >> 60 != 15)
      {
        uint64_t v706 = *v704;
        sub_1A54E9E98(v706, v705);
        *((void *)v702 + 1) = v706;
        *((void *)v702 + 2) = v705;
        goto LABEL_265;
      }
    }
    else
    {
      if (v705 >> 60 != 15)
      {
        uint64_t v707 = *v704;
        sub_1A54E9E98(v707, v705);
        uint64_t v708 = *((void *)v702 + 1);
        unint64_t v709 = *((void *)v702 + 2);
        *((void *)v702 + 1) = v707;
        *((void *)v702 + 2) = v705;
        sub_1A54EA09C(v708, v709);
        goto LABEL_265;
      }
      sub_1A551BBE0((uint64_t)(v702 + 8));
    }
    *(_OWORD *)(v702 + _Block_object_dispose(&a9, 8) = *(_OWORD *)v704;
    goto LABEL_265;
  }
  if (v618)
  {
LABEL_243:
    memcpy(v604, v605, *(void *)(v607 + 64));
    v597 = v725;
    goto LABEL_264;
  }
  uint64_t v619 = type metadata accessor for SFAirDropReceive.ItemDestination();
  int v620 = swift_getEnumCaseMultiPayload();
  if (v620 == 2)
  {
    unint64_t v690 = v605[1];
    if (v690 >> 60 == 15)
    {
      *(_OWORD *)v604 = *(_OWORD *)v605;
    }
    else
    {
      unint64_t v691 = *v605;
      sub_1A54E9E98(*v605, v605[1]);
      unint64_t *v604 = v691;
      v604[1] = v690;
    }
    v621 = v727;
    swift_storeEnumTagMultiPayload();
    uint64_t v596 = v726;
  }
  else if (v620 == 1)
  {
    unint64_t *v604 = *v605;
    v604[1] = v605[1];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v621 = v727;
  }
  else
  {
    v621 = v727;
    if (v620)
    {
      memcpy(v604, v605, *(void *)(*(void *)(v619 - 8) + 64));
    }
    else
    {
      uint64_t v622 = sub_1A56D4A28();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v622 - 8) + 16))(v604, v605, v622);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v692 = *(int *)(v614 + 48);
  v693 = (char *)v604 + v692;
  v694 = (char *)v605 + v692;
  *((unsigned char *)v604 + v692) = *((unsigned char *)v605 + v692);
  v695 = (_OWORD *)((char *)v604 + v692 + 8);
  v696 = (uint64_t *)((char *)v605 + v692 + 8);
  unint64_t v697 = *((void *)v694 + 2);
  if (v697 >> 60 == 15)
  {
    _OWORD *v695 = *(_OWORD *)v696;
  }
  else
  {
    uint64_t v698 = *v696;
    sub_1A54E9E98(*v696, v697);
    *((void *)v693 + 1) = v698;
    *((void *)v693 + 2) = v697;
  }
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v615 + 56))(v604, 0, 3, v614);
  v597 = v725;
LABEL_265:
  uint64_t v647 = v621[10];
  uint64_t v648 = (uint64_t)v597 + v647;
  uint64_t v649 = (uint64_t)v596 + v647;
  uint64_t v650 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v650 - 8) + 24))(v648, v649, v650);
  *((unsigned char *)v597 + v621[11]) = *((unsigned char *)v596 + v621[11]);
  *((unsigned char *)v597 + v621[12]) = *((unsigned char *)v596 + v621[12]);
  uint64_t v651 = v621[13];
  uint64_t v652 = (uint64_t)v597 + v651;
  uint64_t v653 = (uint64_t)v596 + v651;
  uint64_t v654 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v655 = *(void *)(v654 - 8);
  v656 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v655 + 48);
  LODWORD(v64_Block_object_dispose(&a9, 8) = v656(v652, 1, v654);
  int v657 = v656(v653, 1, v654);
  if (!v648)
  {
    if (!v657)
    {
      *(void *)uint64_t v652 = *(void *)v653;
      *(void *)(v652 + _Block_object_dispose(&a9, 8) = *(void *)(v653 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v673 = *(void *)(v653 + 16);
      uint64_t v674 = *(void *)(v653 + 24);
      uint64_t v675 = *(void *)(v653 + 32);
      uint64_t v676 = *(void *)(v653 + 40);
      unsigned __int8 v677 = *(unsigned char *)(v653 + 48);
      sub_1A551182C(v673, v674, v675, v676, v677);
      uint64_t v678 = *(void *)(v652 + 16);
      uint64_t v679 = *(void *)(v652 + 24);
      uint64_t v680 = *(void *)(v652 + 32);
      uint64_t v681 = *(void *)(v652 + 40);
      *(void *)(v652 + 16) = v673;
      *(void *)(v652 + 24) = v674;
      *(void *)(v652 + 32) = v675;
      *(void *)(v652 + 40) = v676;
      v597 = v725;
      uint64_t v596 = v726;
      unsigned __int8 v682 = *(unsigned char *)(v652 + 48);
      *(unsigned char *)(v652 + 4_Block_object_dispose(&a9, 8) = v677;
      v621 = v727;
      sub_1A5512C74(v678, v679, v680, v681, v682);
      *(unsigned char *)(v652 + 49) = *(unsigned char *)(v653 + 49);
      uint64_t v683 = *(int *)(v654 + 28);
      uint64_t v684 = v652 + v683;
      uint64_t v685 = v653 + v683;
      v722((char *)(v652 + v683), (char *)(v653 + v683), v724);
      uint64_t v686 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      v687 = (void *)(v684 + v686);
      v688 = (void *)(v685 + v686);
      uint64_t v689 = v688[1];
      void *v687 = *v688;
      v687[1] = v689;
      swift_retain();
      swift_release();
      goto LABEL_271;
    }
    sub_1A54F7200(v652, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
    goto LABEL_270;
  }
  if (v657)
  {
LABEL_270:
    uint64_t v671 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
    memcpy((void *)v652, (const void *)v653, *(void *)(*(void *)(v671 - 8) + 64));
    goto LABEL_271;
  }
  *(void *)uint64_t v652 = *(void *)v653;
  *(void *)(v652 + _Block_object_dispose(&a9, 8) = *(void *)(v653 + 8);
  uint64_t v658 = *(void *)(v653 + 16);
  uint64_t v659 = *(void *)(v653 + 24);
  uint64_t v660 = *(void *)(v653 + 32);
  uint64_t v661 = *(void *)(v653 + 40);
  unsigned __int8 v662 = *(unsigned char *)(v653 + 48);
  swift_bridgeObjectRetain();
  sub_1A551182C(v658, v659, v660, v661, v662);
  *(void *)(v652 + 16) = v658;
  *(void *)(v652 + 24) = v659;
  *(void *)(v652 + 32) = v660;
  *(void *)(v652 + 40) = v661;
  v597 = v725;
  uint64_t v596 = v726;
  *(unsigned char *)(v652 + 4_Block_object_dispose(&a9, 8) = v662;
  v621 = v727;
  *(unsigned char *)(v652 + 49) = *(unsigned char *)(v653 + 49);
  uint64_t v663 = *(int *)(v654 + 28);
  uint64_t v664 = v652 + v663;
  uint64_t v665 = v653 + v663;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v723 + 16))(v652 + v663, v653 + v663, v724);
  uint64_t v666 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
  v667 = (void *)(v664 + v666);
  v668 = (void *)(v665 + v666);
  uint64_t v669 = v668[1];
  void *v667 = *v668;
  v667[1] = v669;
  v670 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v655 + 56);
  swift_retain();
  v670(v652, 0, 1, v654);
LABEL_271:
  *((unsigned char *)v597 + v621[14]) = *((unsigned char *)v596 + v621[14]);
  return v597;
}

uint64_t sub_1A551BBE0(uint64_t a1)
{
  return a1;
}

char *_s8TransferVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1A56D4CB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = a1;
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1A56D4CB8();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  uint64_t v14 = a3[6];
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  unsigned __int8 v410 = v13;
  uint64_t v411 = v12;
  uint64_t v412 = a2;
  uint64_t v413 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v13(v15, v16, v12);
      uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v15[v18[13]] = v16[v18[13]];
      uint64_t v19 = v18[14];
      uint64_t v20 = &v15[v19];
      int v21 = &v16[v19];
      uint64_t v22 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      uint64_t v23 = v18[15];
      uint64_t v24 = &v15[v23];
      int v25 = &v16[v23];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        long long v209 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v209;
        *((void *)v24 + 4) = *((void *)v25 + 4);
        uint64_t v210 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        unsigned __int8 v211 = &v24[v210];
        uint64_t v212 = &v25[v210];
        *((_WORD *)v211 + 24) = *(_WORD *)&v25[v210 + 48];
        long long v213 = *(_OWORD *)&v25[v210 + 16];
        *(_OWORD *)unsigned __int8 v211 = *(_OWORD *)&v25[v210];
        *((_OWORD *)v211 + 1) = v213;
        *((_OWORD *)v211 + 2) = *(_OWORD *)&v25[v210 + 32];
        uint64_t v214 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v211[v214];
        uint64_t v32 = &v212[v214];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (EnumCaseMultiPayload == 1) {
          goto LABEL_7;
        }
        long long v215 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v215;
        *((void *)v24 + 4) = *((void *)v25 + 4);
        uint64_t v216 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v217 = &v24[v216];
        uint64_t v218 = &v25[v216];
        *((_WORD *)v217 + 24) = *(_WORD *)&v25[v216 + 48];
        long long v219 = *(_OWORD *)&v25[v216 + 16];
        *(_OWORD *)uint64_t v217 = *(_OWORD *)&v25[v216];
        *((_OWORD *)v217 + 1) = v219;
        *((_OWORD *)v217 + 2) = *(_OWORD *)&v25[v216 + 32];
        uint64_t v220 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v217[v220];
        uint64_t v32 = &v218[v220];
        uint64_t v221 = &v217[v220];
        uint64_t v222 = &v218[v220];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v221, v222, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 1u:
      long long v34 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v34;
      *((void *)v15 + _Block_object_dispose(&a9, 8) = *((void *)v16 + 8);
      long long v35 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v35;
      uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
      uint64_t v37 = &v15[v36];
      uint64_t v38 = &v16[v36];
      v13(&v15[v36], &v16[v36], v12);
      char v39 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      v37[v39[13]] = v38[v39[13]];
      uint64_t v40 = v39[14];
      unint64_t v41 = &v37[v40];
      uint64_t v42 = &v38[v40];
      uint64_t v43 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      uint64_t v44 = v39[15];
      uint64_t v45 = &v37[v44];
      uint64_t v46 = &v38[v44];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 2)
      {
        long long v223 = *((_OWORD *)v46 + 1);
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v223;
        *((void *)v45 + 4) = *((void *)v46 + 4);
        uint64_t v224 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        unsigned __int8 v225 = &v45[v224];
        uint64_t v226 = &v46[v224];
        *((_WORD *)v225 + 24) = *(_WORD *)&v46[v224 + 48];
        long long v227 = *(_OWORD *)&v46[v224 + 16];
        *(_OWORD *)unsigned __int8 v225 = *(_OWORD *)&v46[v224];
        *((_OWORD *)v225 + 1) = v227;
        *((_OWORD *)v225 + 2) = *(_OWORD *)&v46[v224 + 32];
        uint64_t v228 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v225[v228];
        uint64_t v32 = &v226[v228];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v47 == 1) {
          goto LABEL_10;
        }
        long long v229 = *((_OWORD *)v46 + 1);
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v229;
        *((void *)v45 + 4) = *((void *)v46 + 4);
        uint64_t v230 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v231 = &v45[v230];
        uint64_t v232 = &v46[v230];
        *((_WORD *)v231 + 24) = *(_WORD *)&v46[v230 + 48];
        long long v233 = *(_OWORD *)&v46[v230 + 16];
        *(_OWORD *)uint64_t v231 = *(_OWORD *)&v46[v230];
        *((_OWORD *)v231 + 1) = v233;
        *((_OWORD *)v231 + 2) = *(_OWORD *)&v46[v230 + 32];
        uint64_t v234 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v231[v234];
        uint64_t v32 = &v232[v234];
        uint64_t v235 = &v231[v234];
        unsigned __int8 v236 = &v232[v234];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v235, v236, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 2u:
      v13(v15, v16, v12);
      uint64_t v52 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v15[v52[13]] = v16[v52[13]];
      uint64_t v53 = v52[14];
      uint64_t v54 = &v15[v53];
      uint64_t v55 = &v16[v53];
      uint64_t v56 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
      uint64_t v57 = v52[15];
      uint64_t v24 = &v15[v57];
      int v25 = &v16[v57];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v58 = swift_getEnumCaseMultiPayload();
      if (v58 == 2)
      {
        long long v237 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v237;
        *((void *)v24 + 4) = *((void *)v25 + 4);
        uint64_t v238 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v239 = &v24[v238];
        uint64_t v240 = &v25[v238];
        *((_WORD *)v239 + 24) = *(_WORD *)&v25[v238 + 48];
        long long v241 = *(_OWORD *)&v25[v238 + 16];
        *(_OWORD *)uint64_t v239 = *(_OWORD *)&v25[v238];
        *((_OWORD *)v239 + 1) = v241;
        *((_OWORD *)v239 + 2) = *(_OWORD *)&v25[v238 + 32];
        uint64_t v242 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v239[v242];
        uint64_t v32 = &v240[v242];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v58 == 1)
        {
LABEL_7:
          *uint64_t v24 = *v25;
          uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v28 = &v24[v27];
          uint64_t v29 = &v25[v27];
          v13(&v24[v27], v29, v12);
          uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v31 = &v28[v30];
          uint64_t v32 = &v29[v30];
          v13(v31, v32, v12);
          uint64_t v33 = &qword_1E96710F0;
          goto LABEL_102;
        }
        long long v243 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v243;
        *((void *)v24 + 4) = *((void *)v25 + 4);
        uint64_t v244 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v245 = &v24[v244];
        uint64_t v246 = &v25[v244];
        *((_WORD *)v245 + 24) = *(_WORD *)&v25[v244 + 48];
        long long v247 = *(_OWORD *)&v25[v244 + 16];
        *(_OWORD *)uint64_t v245 = *(_OWORD *)&v25[v244];
        *((_OWORD *)v245 + 1) = v247;
        *((_OWORD *)v245 + 2) = *(_OWORD *)&v25[v244 + 32];
        uint64_t v248 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v245[v248];
        uint64_t v32 = &v246[v248];
        uint64_t v249 = &v245[v248];
        uint64_t v250 = &v246[v248];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v249, v250, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 3u:
      uint64_t v59 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        uint64_t v109 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v15, v16, v109);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v110 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v111 = v110[12];
      int v112 = &v15[v111];
      uint64_t v113 = &v16[v111];
      long long v114 = *((_OWORD *)v113 + 1);
      *(_OWORD *)int v112 = *(_OWORD *)v113;
      *((_OWORD *)v112 + 1) = v114;
      *((void *)v112 + 4) = *((void *)v113 + 4);
      *(_OWORD *)&v15[v110[16]] = *(_OWORD *)&v16[v110[16]];
      uint64_t v115 = v110[20];
      uint64_t v116 = &v15[v115];
      uint64_t v117 = &v16[v115];
      long long v118 = *(_OWORD *)&v16[v115 + 16];
      *(_OWORD *)uint64_t v116 = *(_OWORD *)&v16[v115];
      *((_OWORD *)v116 + 1) = v118;
      *((_OWORD *)v116 + 2) = *(_OWORD *)&v16[v115 + 32];
      v116[48] = v16[v115 + 48];
      v116[49] = v16[v115 + 49];
      uint64_t v119 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v120 = &v116[v119];
      uint64_t v121 = &v117[v119];
      char v122 = &v116[v119];
      uint64_t v123 = &v117[v119];
      uint64_t v13 = v410;
      uint64_t v12 = v411;
      v410(v122, v123, v411);
      uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
      *(_OWORD *)&v120[*(int *)(v124 + 68)] = *(_OWORD *)&v121[*(int *)(v124 + 68)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_103;
    case 4u:
      uint64_t v60 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        uint64_t v125 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v15, v16, v125);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v126 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      *(void *)&v15[v126[12]] = *(void *)&v16[v126[12]];
      *(void *)&v15[v126[16]] = *(void *)&v16[v126[16]];
      uint64_t v127 = v126[20];
      char v128 = &v15[v127];
      uint64_t v129 = &v16[v127];
      *((_WORD *)v128 + 24) = *(_WORD *)&v16[v127 + 48];
      long long v130 = *(_OWORD *)&v16[v127 + 16];
      *(_OWORD *)char v128 = *(_OWORD *)&v16[v127];
      *((_OWORD *)v128 + 1) = v130;
      *((_OWORD *)v128 + 2) = *(_OWORD *)&v16[v127 + 32];
      uint64_t v131 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v132 = &v128[v131];
      uint64_t v133 = &v129[v131];
      uint64_t v134 = &v128[v131];
      uint64_t v135 = &v129[v131];
      uint64_t v13 = v410;
      uint64_t v12 = v411;
      v410(v134, v135, v411);
      uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
      *(_OWORD *)&v132[*(int *)(v136 + 68)] = *(_OWORD *)&v133[*(int *)(v136 + 68)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_103;
    case 5u:
      uint64_t v61 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        uint64_t v137 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v15, v16, v137);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)&v15[*(int *)(v138 + 48)] = *(void *)&v16[*(int *)(v138 + 48)];
      uint64_t v139 = *(int *)(v138 + 64);
      uint64_t v140 = &v15[v139];
      uint64_t v141 = &v16[v139];
      v13(&v15[v139], &v16[v139], v12);
      int v142 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v140[v142[13]] = v141[v142[13]];
      uint64_t v143 = v142[14];
      uint64_t v144 = &v140[v143];
      unint64_t v145 = &v141[v143];
      uint64_t v146 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
      uint64_t v147 = v142[15];
      uint64_t v78 = &v140[v147];
      uint64_t v79 = &v141[v147];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v148 = swift_getEnumCaseMultiPayload();
      if (v148 == 2)
      {
        long long v279 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v279;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v280 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v281 = &v78[v280];
        uint64_t v282 = &v79[v280];
        *((_WORD *)v281 + 24) = *(_WORD *)&v79[v280 + 48];
        long long v283 = *(_OWORD *)&v79[v280 + 16];
        *(_OWORD *)uint64_t v281 = *(_OWORD *)&v79[v280];
        *((_OWORD *)v281 + 1) = v283;
        *((_OWORD *)v281 + 2) = *(_OWORD *)&v79[v280 + 32];
        uint64_t v284 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v281[v284];
        uint64_t v32 = &v282[v284];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v148 == 1) {
          goto LABEL_58;
        }
        long long v285 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v285;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v286 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v287 = &v78[v286];
        unint64_t v288 = &v79[v286];
        *((_WORD *)v287 + 24) = *(_WORD *)&v79[v286 + 48];
        long long v289 = *(_OWORD *)&v79[v286 + 16];
        *(_OWORD *)uint64_t v287 = *(_OWORD *)&v79[v286];
        *((_OWORD *)v287 + 1) = v289;
        *((_OWORD *)v287 + 2) = *(_OWORD *)&v79[v286 + 32];
        uint64_t v290 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v287[v290];
        uint64_t v32 = &v288[v290];
        unint64_t v291 = &v287[v290];
        unint64_t v292 = &v288[v290];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v291, v292, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 6u:
      uint64_t v62 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        uint64_t v149 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v15, v16, v149);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)&v15[*(int *)(v150 + 48)] = *(void *)&v16[*(int *)(v150 + 48)];
      uint64_t v151 = *(int *)(v150 + 64);
      long long v152 = &v15[v151];
      long long v153 = &v16[v151];
      v13(&v15[v151], &v16[v151], v12);
      uint64_t v154 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v152[v154[13]] = v153[v154[13]];
      uint64_t v155 = v154[14];
      uint64_t v156 = &v152[v155];
      uint64_t v157 = &v153[v155];
      uint64_t v158 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
      uint64_t v159 = v154[15];
      uint64_t v78 = &v152[v159];
      uint64_t v79 = &v153[v159];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v160 = swift_getEnumCaseMultiPayload();
      if (v160 == 2)
      {
        long long v293 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v293;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v294 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        unint64_t v295 = &v78[v294];
        unint64_t v296 = &v79[v294];
        *((_WORD *)v295 + 24) = *(_WORD *)&v79[v294 + 48];
        long long v297 = *(_OWORD *)&v79[v294 + 16];
        *(_OWORD *)unint64_t v295 = *(_OWORD *)&v79[v294];
        *((_OWORD *)v295 + 1) = v297;
        *((_OWORD *)v295 + 2) = *(_OWORD *)&v79[v294 + 32];
        uint64_t v298 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v295[v298];
        uint64_t v32 = &v296[v298];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v160 == 1) {
          goto LABEL_58;
        }
        long long v299 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v299;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v300 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v301 = &v78[v300];
        uint64_t v302 = &v79[v300];
        *((_WORD *)v301 + 24) = *(_WORD *)&v79[v300 + 48];
        long long v303 = *(_OWORD *)&v79[v300 + 16];
        *(_OWORD *)uint64_t v301 = *(_OWORD *)&v79[v300];
        *((_OWORD *)v301 + 1) = v303;
        *((_OWORD *)v301 + 2) = *(_OWORD *)&v79[v300 + 32];
        uint64_t v304 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v301[v304];
        uint64_t v32 = &v302[v304];
        uint64_t v305 = &v301[v304];
        uint64_t v306 = &v302[v304];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v305, v306, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 7u:
      uint64_t v63 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        uint64_t v161 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v15, v16, v161);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      *(void *)&v15[*(int *)(v162 + 48)] = *(void *)&v16[*(int *)(v162 + 48)];
      *(void *)&v15[*(int *)(v162 + 64)] = *(void *)&v16[*(int *)(v162 + 64)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_103;
    case 8u:
      uint64_t v64 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        uint64_t v163 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v15, v16, v163);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v164 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)&v15[v164[12]] = *(void *)&v16[v164[12]];
      *(void *)&v15[v164[16]] = *(void *)&v16[v164[16]];
      uint64_t v165 = v164[20];
      uint64_t v166 = &v15[v165];
      uint64_t v167 = &v16[v165];
      v13(&v15[v165], &v16[v165], v12);
      uint64_t v168 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v166[v168[13]] = v167[v168[13]];
      uint64_t v169 = v168[14];
      uint64_t v170 = &v166[v169];
      unint64_t v171 = &v167[v169];
      uint64_t v172 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 32))(v170, v171, v172);
      uint64_t v173 = v168[15];
      uint64_t v78 = &v166[v173];
      uint64_t v79 = &v167[v173];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v174 = swift_getEnumCaseMultiPayload();
      if (v174 == 2)
      {
        long long v307 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v307;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v308 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v309 = &v78[v308];
        uint64_t v310 = &v79[v308];
        *((_WORD *)v309 + 24) = *(_WORD *)&v79[v308 + 48];
        long long v311 = *(_OWORD *)&v79[v308 + 16];
        *(_OWORD *)uint64_t v309 = *(_OWORD *)&v79[v308];
        *((_OWORD *)v309 + 1) = v311;
        *((_OWORD *)v309 + 2) = *(_OWORD *)&v79[v308 + 32];
        uint64_t v312 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v309[v312];
        uint64_t v32 = &v310[v312];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v174 == 1) {
          goto LABEL_58;
        }
        long long v313 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v313;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v314 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v315 = &v78[v314];
        uint64_t v316 = &v79[v314];
        *((_WORD *)v315 + 24) = *(_WORD *)&v79[v314 + 48];
        long long v317 = *(_OWORD *)&v79[v314 + 16];
        *(_OWORD *)uint64_t v315 = *(_OWORD *)&v79[v314];
        *((_OWORD *)v315 + 1) = v317;
        *((_OWORD *)v315 + 2) = *(_OWORD *)&v79[v314 + 32];
        uint64_t v318 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v315[v318];
        uint64_t v32 = &v316[v318];
        uint64_t v319 = &v315[v318];
        uint64_t v320 = &v316[v318];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v319, v320, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 9u:
      uint64_t v65 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        uint64_t v179 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 32))(v15, v16, v179);
        swift_storeEnumTagMultiPayload();
      }
      long long v180 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)&v15[v180[12]] = *(void *)&v16[v180[12]];
      *(void *)&v15[v180[16]] = *(void *)&v16[v180[16]];
      uint64_t v181 = v180[20];
      uint64_t v182 = &v15[v181];
      uint64_t v183 = &v16[v181];
      v13(&v15[v181], &v16[v181], v12);
      uint64_t v184 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v182[v184[13]] = v183[v184[13]];
      uint64_t v185 = v184[14];
      uint64_t v186 = &v182[v185];
      unint64_t v187 = &v183[v185];
      uint64_t v188 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 32))(v186, v187, v188);
      uint64_t v189 = v184[15];
      uint64_t v78 = &v182[v189];
      uint64_t v79 = &v183[v189];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v190 = swift_getEnumCaseMultiPayload();
      if (v190 == 2)
      {
        long long v321 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v321;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v322 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v323 = &v78[v322];
        uint64_t v324 = &v79[v322];
        *((_WORD *)v323 + 24) = *(_WORD *)&v79[v322 + 48];
        long long v325 = *(_OWORD *)&v79[v322 + 16];
        *(_OWORD *)uint64_t v323 = *(_OWORD *)&v79[v322];
        *((_OWORD *)v323 + 1) = v325;
        *((_OWORD *)v323 + 2) = *(_OWORD *)&v79[v322 + 32];
        uint64_t v326 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v323[v326];
        uint64_t v32 = &v324[v326];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v190 == 1) {
          goto LABEL_58;
        }
        long long v327 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v327;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v328 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v329 = &v78[v328];
        uint64_t v330 = &v79[v328];
        *((_WORD *)v329 + 24) = *(_WORD *)&v79[v328 + 48];
        long long v331 = *(_OWORD *)&v79[v328 + 16];
        *(_OWORD *)uint64_t v329 = *(_OWORD *)&v79[v328];
        *((_OWORD *)v329 + 1) = v331;
        *((_OWORD *)v329 + 2) = *(_OWORD *)&v79[v328 + 32];
        uint64_t v332 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v329[v332];
        uint64_t v32 = &v330[v332];
        uint64_t v333 = &v329[v332];
        uint64_t v334 = &v330[v332];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v333, v334, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 0xAu:
      uint64_t v66 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        uint64_t v191 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v15, v16, v191);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      *(void *)&v15[*(int *)(v192 + 48)] = *(void *)&v16[*(int *)(v192 + 48)];
      *(void *)&v15[*(int *)(v192 + 64)] = *(void *)&v16[*(int *)(v192 + 64)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_103;
    case 0xBu:
      long long v67 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v67;
      *((void *)v15 + _Block_object_dispose(&a9, 8) = *((void *)v16 + 8);
      long long v68 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v68;
      uint64_t v69 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
      uint64_t v70 = &v15[v69];
      int v71 = &v16[v69];
      v13(&v15[v69], &v16[v69], v12);
      uint64_t v72 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      v70[v72[13]] = v71[v72[13]];
      uint64_t v73 = v72[14];
      int v74 = &v70[v73];
      uint64_t v75 = &v71[v73];
      uint64_t v76 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
      uint64_t v77 = v72[15];
      uint64_t v78 = &v70[v77];
      uint64_t v79 = &v71[v77];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v80 = swift_getEnumCaseMultiPayload();
      if (v80 == 2)
      {
        long long v251 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v251;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v252 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v253 = &v78[v252];
        uint64_t v254 = &v79[v252];
        *((_WORD *)v253 + 24) = *(_WORD *)&v79[v252 + 48];
        long long v255 = *(_OWORD *)&v79[v252 + 16];
        *(_OWORD *)uint64_t v253 = *(_OWORD *)&v79[v252];
        *((_OWORD *)v253 + 1) = v255;
        *((_OWORD *)v253 + 2) = *(_OWORD *)&v79[v252 + 32];
        uint64_t v256 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v253[v256];
        uint64_t v32 = &v254[v256];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v80 == 1)
        {
LABEL_58:
          char *v78 = *v79;
          uint64_t v175 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          char v176 = &v78[v175];
          uint64_t v177 = &v79[v175];
          v13(&v78[v175], v177, v12);
          uint64_t v178 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v31 = &v176[v178];
          uint64_t v32 = &v177[v178];
          v13(v31, v32, v12);
          uint64_t v33 = &qword_1E96710F0;
          goto LABEL_102;
        }
        long long v257 = *((_OWORD *)v79 + 1);
        *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v257;
        *((void *)v78 + 4) = *((void *)v79 + 4);
        uint64_t v258 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v259 = &v78[v258];
        unsigned __int8 v260 = &v79[v258];
        *((_WORD *)v259 + 24) = *(_WORD *)&v79[v258 + 48];
        long long v261 = *(_OWORD *)&v79[v258 + 16];
        *(_OWORD *)uint64_t v259 = *(_OWORD *)&v79[v258];
        *((_OWORD *)v259 + 1) = v261;
        *((_OWORD *)v259 + 2) = *(_OWORD *)&v79[v258 + 32];
        uint64_t v262 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v259[v262];
        uint64_t v32 = &v260[v262];
        uint64_t v263 = &v259[v262];
        uint64_t v264 = &v260[v262];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v263, v264, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
      goto LABEL_102;
    case 0xDu:
      long long v81 = *((_OWORD *)v16 + 3);
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      *((_OWORD *)v15 + 3) = v81;
      *((void *)v15 + _Block_object_dispose(&a9, 8) = *((void *)v16 + 8);
      long long v82 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v82;
      uint64_t v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
      uint64_t v84 = &v15[v83];
      uint64_t v85 = &v16[v83];
      v13(&v15[v83], &v16[v83], v12);
      int v86 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      v84[v86[13]] = v85[v86[13]];
      uint64_t v87 = v86[14];
      uint64_t v88 = &v84[v87];
      int v89 = &v85[v87];
      uint64_t v90 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
      uint64_t v91 = v86[15];
      uint64_t v45 = &v84[v91];
      uint64_t v46 = &v85[v91];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v92 = swift_getEnumCaseMultiPayload();
      if (v92 == 2)
      {
        long long v265 = *((_OWORD *)v46 + 1);
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v265;
        *((void *)v45 + 4) = *((void *)v46 + 4);
        uint64_t v266 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v267 = &v45[v266];
        uint64_t v268 = &v46[v266];
        *((_WORD *)v267 + 24) = *(_WORD *)&v46[v266 + 48];
        long long v269 = *(_OWORD *)&v46[v266 + 16];
        *(_OWORD *)uint64_t v267 = *(_OWORD *)&v46[v266];
        *((_OWORD *)v267 + 1) = v269;
        *((_OWORD *)v267 + 2) = *(_OWORD *)&v46[v266 + 32];
        uint64_t v270 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v267[v270];
        uint64_t v32 = &v268[v270];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v31, v32, v411);
      }
      else
      {
        if (v92 == 1)
        {
LABEL_10:
          *uint64_t v45 = *v46;
          uint64_t v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          uint64_t v49 = &v45[v48];
          uint64_t v50 = &v46[v48];
          v13(&v45[v48], v50, v12);
          uint64_t v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          uint64_t v31 = &v49[v51];
          uint64_t v32 = &v50[v51];
          v13(v31, v32, v12);
          uint64_t v33 = &qword_1E96710F0;
          goto LABEL_102;
        }
        long long v271 = *((_OWORD *)v46 + 1);
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v271;
        *((void *)v45 + 4) = *((void *)v46 + 4);
        uint64_t v272 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v273 = &v45[v272];
        unint64_t v274 = &v46[v272];
        *((_WORD *)v273 + 24) = *(_WORD *)&v46[v272 + 48];
        long long v275 = *(_OWORD *)&v46[v272 + 16];
        *(_OWORD *)uint64_t v273 = *(_OWORD *)&v46[v272];
        *((_OWORD *)v273 + 1) = v275;
        *((_OWORD *)v273 + 2) = *(_OWORD *)&v46[v272 + 32];
        uint64_t v276 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v31 = &v273[v276];
        uint64_t v32 = &v274[v276];
        uint64_t v277 = &v273[v276];
        unint64_t v278 = &v274[v276];
        uint64_t v13 = v410;
        uint64_t v12 = v411;
        v410(v277, v278, v411);
      }
      uint64_t v33 = &qword_1E96710D8;
LABEL_102:
      uint64_t v335 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v33) + 68);
      *(_OWORD *)&v31[v335] = *(_OWORD *)&v32[v335];
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      a3 = v413;
LABEL_103:
      uint64_t v336 = a3[8];
      v8[a3[7]] = a2[a3[7]];
      uint64_t v337 = &v8[v336];
      uint64_t v338 = &a2[v336];
      v13(&v8[v336], &a2[v336], v12);
      uint64_t v339 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
      uint64_t v340 = v339[5];
      uint64_t v341 = &v337[v340];
      uint64_t v342 = &v338[v340];
      *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
      v341[16] = v342[16];
      *(void *)&v337[v339[6]] = *(void *)&v338[v339[6]];
      v337[v339[7]] = v338[v339[7]];
      v337[v339[8]] = v338[v339[8]];
      v337[v339[9]] = v338[v339[9]];
      *(_OWORD *)&v337[v339[10]] = *(_OWORD *)&v338[v339[10]];
      *(_OWORD *)&v337[v339[11]] = *(_OWORD *)&v338[v339[11]];
      *(_OWORD *)&v337[v339[12]] = *(_OWORD *)&v338[v339[12]];
      *(_OWORD *)&v337[v339[13]] = *(_OWORD *)&v338[v339[13]];
      *(_OWORD *)&v337[v339[14]] = *(_OWORD *)&v338[v339[14]];
      *(_OWORD *)&v337[v339[15]] = *(_OWORD *)&v338[v339[15]];
      *(_OWORD *)&v337[v339[16]] = *(_OWORD *)&v338[v339[16]];
      *(_OWORD *)&v337[v339[17]] = *(_OWORD *)&v338[v339[17]];
      *(_OWORD *)&v337[v339[18]] = *(_OWORD *)&v338[v339[18]];
      *(_OWORD *)&v337[v339[19]] = *(_OWORD *)&v338[v339[19]];
      *(void *)&v337[v339[20]] = *(void *)&v338[v339[20]];
      *(void *)&v337[v339[21]] = *(void *)&v338[v339[21]];
      *(void *)&v337[v339[22]] = *(void *)&v338[v339[22]];
      *(_OWORD *)&v337[v339[23]] = *(_OWORD *)&v338[v339[23]];
      uint64_t v343 = v339[24];
      uint64_t v344 = &v337[v343];
      uint64_t v345 = &v338[v343];
      uint64_t v346 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
      uint64_t v347 = *(void *)(v346 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v347 + 48))(v345, 1, v346))
      {
        uint64_t v348 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
        memcpy(v344, v345, *(void *)(*(void *)(v348 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          long long v349 = *((_OWORD *)v345 + 1);
          *(_OWORD *)uint64_t v344 = *(_OWORD *)v345;
          *((_OWORD *)v344 + 1) = v349;
          uint64_t v409 = v8;
          uint64_t v350 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
          uint64_t v351 = *(int *)(v350 + 64);
          uint64_t v352 = &v344[v351];
          uint64_t v353 = &v345[v351];
          uint64_t v354 = sub_1A56D4C28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 32))(v352, v353, v354);
          uint64_t v355 = *(int *)(v350 + 80);
          uint64_t v8 = v409;
          v344[v355] = v345[v355];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v344, v345, *(void *)(v347 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(v344, 0, 1, v346);
      }
      uint64_t v356 = v413;
      *(void *)&v337[v339[25]] = *(void *)&v338[v339[25]];
      *(void *)&v337[v339[26]] = *(void *)&v338[v339[26]];
      *(_OWORD *)&v337[v339[27]] = *(_OWORD *)&v338[v339[27]];
      uint64_t v357 = v413[9];
      uint64_t v358 = &v8[v357];
      uint64_t v359 = &v412[v357];
      uint64_t v360 = type metadata accessor for SFAirDropReceive.AskResponse();
      uint64_t v361 = *(void *)(v360 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v361 + 48))(v359, 1, v360))
      {
        uint64_t v362 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048);
        memcpy(v358, v359, *(void *)(*(void *)(v362 - 8) + 64));
      }
      else
      {
        uint64_t v363 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v359, 3, v363))
        {
          memcpy(v358, v359, *(void *)(v361 + 64));
        }
        else
        {
          uint64_t v365 = type metadata accessor for SFAirDropReceive.ItemDestination();
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v358, v359, *(void *)(*(void *)(v365 - 8) + 64));
          }
          else
          {
            uint64_t v366 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 32))(v358, v359, v366);
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v367 = *(int *)(v363 + 48);
          int v368 = &v358[v367];
          uint64_t v369 = &v359[v367];
          *(_OWORD *)int v368 = *(_OWORD *)v369;
          *((void *)v368 + 2) = *((void *)v369 + 2);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v364 + 56))(v358, 0, 3, v363);
          uint64_t v356 = v413;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v361 + 56))(v358, 0, 1, v360);
      }
      uint64_t v370 = v356[10];
      uint64_t v371 = &v8[v370];
      uint64_t v372 = &v412[v370];
      uint64_t v373 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 32))(v371, v372, v373);
      uint64_t v374 = v356[12];
      v8[v356[11]] = v412[v356[11]];
      v8[v374] = v412[v374];
      uint64_t v375 = v356[13];
      uint64_t v376 = &v8[v375];
      uint64_t v377 = &v412[v375];
      uint64_t v378 = type metadata accessor for SFAirDrop.DeclineAction();
      uint64_t v379 = *(void *)(v378 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v379 + 48))(v377, 1, v378))
      {
        uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
        memcpy(v376, v377, *(void *)(*(void *)(v380 - 8) + 64));
      }
      else
      {
        long long v381 = *((_OWORD *)v377 + 1);
        *(_OWORD *)uint64_t v376 = *(_OWORD *)v377;
        *((_OWORD *)v376 + 1) = v381;
        *((_OWORD *)v376 + 2) = *((_OWORD *)v377 + 2);
        *((_WORD *)v376 + 24) = *((_WORD *)v377 + 24);
        uint64_t v382 = *(int *)(v378 + 28);
        unsigned __int8 v383 = &v376[v382];
        uint64_t v384 = &v377[v382];
        v410(&v376[v382], &v377[v382], v411);
        uint64_t v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
        *(_OWORD *)&v383[*(int *)(v385 + 68)] = *(_OWORD *)&v384[*(int *)(v385 + 68)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v379 + 56))(v376, 0, 1, v378);
      }
      v8[v356[14]] = v412[v356[14]];
      return v8;
    case 0xFu:
      uint64_t v93 = sub_1A56D4C28();
      uint64_t v94 = *(void *)(v93 - 8);
      uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
      v95(v15, v16, v93);
      uint64_t v96 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v97 = v96[5];
      uint64_t v98 = &v15[v97];
      unint64_t v99 = &v16[v97];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(&v16[v97], 1, v93))
      {
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        v95(v98, v99, v93);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v98, 0, 1, v93);
      }
      v15[v96[6]] = v16[v96[6]];
      uint64_t v193 = v96[7];
      uint64_t v194 = &v15[v193];
      uint64_t v195 = &v16[v193];
      uint64_t v196 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v197 = *(void *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
      {
        uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v194, v195, *(void *)(*(void *)(v198 - 8) + 64));
      }
      else
      {
        uint64_t v205 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v206 = *(void *)(v205 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v195, 1, v205))
        {
          memcpy(v194, v195, *(void *)(v197 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v194, v195, *(void *)(v206 + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v194 = *(_OWORD *)v195;
            uint64_t v387 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            uint64_t v388 = &v194[v387];
            uint64_t v389 = &v195[v387];
            uint64_t v390 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v390 - 8) + 32))(v388, v389, v390);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v206 + 56))(v194, 0, 1, v205);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
      }
      uint64_t v13 = v410;
      uint64_t v12 = v411;
      uint64_t v391 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v392 = v391[12];
      uint64_t v393 = &v15[v392];
      uint64_t v394 = &v16[v392];
      uint64_t v395 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v393, v394, *(void *)(*(void *)(v395 - 8) + 64));
      }
      else
      {
        uint64_t v396 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v396 - 8) + 32))(v393, v394, v396);
        swift_storeEnumTagMultiPayload();
      }
      a2 = v412;
      a3 = v413;
      *(_OWORD *)&v15[v391[16]] = *(_OWORD *)&v16[v391[16]];
      *(void *)&v15[v391[20]] = *(void *)&v16[v391[20]];
      *(void *)&v15[v391[24]] = *(void *)&v16[v391[24]];
      *(void *)&v15[v391[28]] = *(void *)&v16[v391[28]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_103;
    case 0x10u:
      uint64_t v101 = sub_1A56D4C28();
      uint64_t v102 = *(void *)(v101 - 8);
      uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
      v103(v15, v16, v101);
      unint64_t v104 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v105 = v104[5];
      int v106 = &v15[v105];
      uint64_t v107 = &v16[v105];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(&v16[v105], 1, v101))
      {
        uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
      }
      else
      {
        v103(v106, v107, v101);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v106, 0, 1, v101);
      }
      v15[v104[6]] = v16[v104[6]];
      uint64_t v199 = v104[7];
      uint64_t v200 = &v15[v199];
      uint64_t v201 = &v16[v199];
      uint64_t v202 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v203 = *(void *)(v202 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
      {
        uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v200, v201, *(void *)(*(void *)(v204 - 8) + 64));
        uint64_t v12 = v411;
        uint64_t v13 = v410;
      }
      else
      {
        uint64_t v207 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v208 = *(void *)(v207 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v201, 1, v207))
        {
          memcpy(v200, v201, *(void *)(v203 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v200, v201, *(void *)(v208 + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v200 = *(_OWORD *)v201;
            uint64_t v397 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            uint64_t v398 = &v200[v397];
            uint64_t v399 = &v201[v397];
            uint64_t v400 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v400 - 8) + 32))(v398, v399, v400);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v208 + 56))(v200, 0, 1, v207);
        }
        a2 = v412;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
        uint64_t v13 = v410;
        uint64_t v12 = v411;
      }
      uint64_t v401 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
      uint64_t v402 = &v15[v401];
      uint64_t v403 = &v16[v401];
      uint64_t v404 = type metadata accessor for SFAirDropReceive.Failure();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v402, v403, *(void *)(*(void *)(v404 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v402 = *(_OWORD *)v403;
        uint64_t v405 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
        uint64_t v406 = &v402[v405];
        uint64_t v407 = &v403[v405];
        uint64_t v408 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v408 - 8) + 32))(v406, v407, v408);
        swift_storeEnumTagMultiPayload();
      }
      a3 = v413;
      swift_storeEnumTagMultiPayload();
      goto LABEL_103;
    default:
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      goto LABEL_103;
  }
}

char *_s8TransferVwta(uint64_t a1, char *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = (char *)a1;
  if ((char *)a1 != a2)
  {
    sub_1A54F7200(a1, (uint64_t (*)(void))type metadata accessor for SFAirDropClient.Identifier);
    uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v5, v4, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1A56D4CB8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v4, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v4[v8];
  uint64_t v11 = sub_1A56D4CB8();
  uint64_t v479 = *(void *)(v11 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v479 + 40);
  v12(v9, v10, v11);
  uint64_t v480 = v11;
  uint64_t v481 = v5;
  unsigned __int8 v482 = v4;
  uint64_t v483 = a3;
  uint64_t v478 = v12;
  if (v5 != v4)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = &v5[v13];
    uint64_t v15 = &v4[v13];
    sub_1A54F7200((uint64_t)&v5[v13], type metadata accessor for SFAirDropReceive.Transfer.State);
    uint64_t v16 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v17(v14, v15, v11);
        uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v14[v18[13]] = v15[v18[13]];
        uint64_t v19 = v18[14];
        uint64_t v20 = &v14[v19];
        int v21 = &v15[v19];
        uint64_t v22 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        uint64_t v23 = v18[15];
        uint64_t v24 = &v14[v23];
        int v25 = &v15[v23];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2) {
          goto LABEL_77;
        }
        if (EnumCaseMultiPayload != 1) {
          goto LABEL_78;
        }
        goto LABEL_9;
      case 1u:
        long long v34 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v34;
        *((void *)v14 + _Block_object_dispose(&a9, 8) = *((void *)v15 + 8);
        long long v35 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v35;
        uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
        uint64_t v37 = &v14[v36];
        uint64_t v38 = &v15[v36];
        char v39 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v39(&v14[v36], &v15[v36], v11);
        uint64_t v40 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        v37[v40[13]] = v38[v40[13]];
        uint64_t v41 = v40[14];
        uint64_t v42 = &v37[v41];
        uint64_t v43 = &v38[v41];
        uint64_t v44 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        uint64_t v45 = v40[15];
        uint64_t v46 = &v37[v45];
        int v47 = &v38[v45];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v48 = swift_getEnumCaseMultiPayload();
        if (v48 == 2) {
          goto LABEL_79;
        }
        if (v48 == 1) {
          goto LABEL_12;
        }
        goto LABEL_87;
      case 2u:
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v17(v14, v15, v11);
        uint64_t v53 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v14[v53[13]] = v15[v53[13]];
        uint64_t v54 = v53[14];
        uint64_t v55 = &v14[v54];
        uint64_t v56 = &v15[v54];
        uint64_t v57 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        uint64_t v58 = v53[15];
        uint64_t v24 = &v14[v58];
        int v25 = &v15[v58];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v59 = swift_getEnumCaseMultiPayload();
        if (v59 == 2)
        {
LABEL_77:
          long long v219 = *((_OWORD *)v25 + 1);
          *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
          *((_OWORD *)v24 + 1) = v219;
          *((void *)v24 + 4) = *((void *)v25 + 4);
          uint64_t v220 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v221 = &v24[v220];
          uint64_t v222 = v12;
          long long v223 = &v25[v220];
          *((_WORD *)v221 + 24) = *(_WORD *)&v25[v220 + 48];
          long long v224 = *(_OWORD *)&v25[v220 + 16];
          *(_OWORD *)uint64_t v221 = *(_OWORD *)&v25[v220];
          *((_OWORD *)v221 + 1) = v224;
          *((_OWORD *)v221 + 2) = *(_OWORD *)&v25[v220 + 32];
          uint64_t v225 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v31 = &v221[v225];
          uint64_t v11 = v480;
          uint64_t v32 = &v223[v225];
          uint64_t v12 = v222;
          v17(v31, v32, v480);
          uint64_t v33 = &qword_1E96710D8;
          goto LABEL_84;
        }
        if (v59 == 1)
        {
LABEL_9:
          *uint64_t v24 = *v25;
          uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v28 = &v24[v27];
          uint64_t v29 = &v25[v27];
          v17(&v24[v27], v29, v11);
          uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v31 = &v28[v30];
          uint64_t v32 = &v29[v30];
          v17(v31, v32, v11);
          uint64_t v33 = &qword_1E96710F0;
          goto LABEL_84;
        }
LABEL_78:
        long long v226 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v226;
        *((void *)v24 + 4) = *((void *)v25 + 4);
        uint64_t v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v228 = &v24[v227];
        long long v229 = &v25[v227];
        *((_WORD *)v228 + 24) = *(_WORD *)&v25[v227 + 48];
        long long v230 = *(_OWORD *)&v25[v227 + 16];
        *(_OWORD *)uint64_t v228 = *(_OWORD *)&v25[v227];
        *((_OWORD *)v228 + 1) = v230;
        *((_OWORD *)v228 + 2) = *(_OWORD *)&v25[v227 + 32];
        uint64_t v231 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v232 = &v228[v231];
        long long v233 = &v229[v231];
        uint64_t v234 = &v228[v231];
        uint64_t v11 = v480;
        v17(v234, &v229[v231], v480);
        uint64_t v235 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        unsigned __int8 v236 = &v232[v235];
        long long v237 = &v233[v235];
        uint64_t v5 = v481;
        uint64_t v12 = v478;
        goto LABEL_88;
      case 3u:
        uint64_t v60 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          uint64_t v117 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v14, v15, v117);
          swift_storeEnumTagMultiPayload();
        }
        long long v118 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
        uint64_t v119 = v118[12];
        uint64_t v120 = &v14[v119];
        uint64_t v121 = &v15[v119];
        long long v122 = *((_OWORD *)v121 + 1);
        *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
        *((_OWORD *)v120 + 1) = v122;
        *((void *)v120 + 4) = *((void *)v121 + 4);
        *(_OWORD *)&v14[v118[16]] = *(_OWORD *)&v15[v118[16]];
        uint64_t v123 = v118[20];
        uint64_t v124 = &v14[v123];
        uint64_t v125 = &v15[v123];
        long long v126 = *(_OWORD *)&v15[v123 + 16];
        *(_OWORD *)uint64_t v124 = *(_OWORD *)&v15[v123];
        *((_OWORD *)v124 + 1) = v126;
        *((_OWORD *)v124 + 2) = *(_OWORD *)&v15[v123 + 32];
        v124[48] = v15[v123 + 48];
        v124[49] = v15[v123 + 49];
        uint64_t v127 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        char v128 = &v124[v127];
        uint64_t v129 = &v125[v127];
        uint64_t v11 = v480;
        (*(void (**)(char *, char *, uint64_t))(v479 + 32))(v128, &v125[v127], v480);
        uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
        *(_OWORD *)&v128[*(int *)(v130 + 68)] = *(_OWORD *)&v129[*(int *)(v130 + 68)];
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v61 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          uint64_t v131 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v14, v15, v131);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v132 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
        *(void *)&v14[v132[12]] = *(void *)&v15[v132[12]];
        *(void *)&v14[v132[16]] = *(void *)&v15[v132[16]];
        uint64_t v133 = v132[20];
        uint64_t v134 = &v14[v133];
        uint64_t v135 = &v15[v133];
        *((_WORD *)v134 + 24) = *(_WORD *)&v15[v133 + 48];
        long long v136 = *(_OWORD *)&v15[v133 + 16];
        *(_OWORD *)uint64_t v134 = *(_OWORD *)&v15[v133];
        *((_OWORD *)v134 + 1) = v136;
        *((_OWORD *)v134 + 2) = *(_OWORD *)&v15[v133 + 32];
        uint64_t v137 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v138 = &v134[v137];
        uint64_t v139 = &v135[v137];
        uint64_t v11 = v480;
        (*(void (**)(char *, char *, uint64_t))(v479 + 32))(v138, &v135[v137], v480);
        uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
        *(_OWORD *)&v138[*(int *)(v140 + 68)] = *(_OWORD *)&v139[*(int *)(v140 + 68)];
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v62 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          uint64_t v141 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v14, v15, v141);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)&v14[*(int *)(v142 + 48)] = *(void *)&v15[*(int *)(v142 + 48)];
        uint64_t v143 = *(int *)(v142 + 64);
        uint64_t v144 = &v14[v143];
        unint64_t v145 = &v15[v143];
        uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v146(&v14[v143], &v15[v143], v11);
        uint64_t v147 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v144[v147[13]] = v145[v147[13]];
        uint64_t v148 = v147[14];
        uint64_t v149 = &v144[v148];
        uint64_t v150 = &v145[v148];
        uint64_t v151 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v149, v150, v151);
        uint64_t v152 = v147[15];
        long long v153 = &v144[v152];
        uint64_t v154 = &v145[v152];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v155 = swift_getEnumCaseMultiPayload();
        if (v155 == 2) {
          goto LABEL_91;
        }
        if (v155 == 1) {
          goto LABEL_60;
        }
        goto LABEL_96;
      case 6u:
        uint64_t v63 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          uint64_t v156 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v14, v15, v156);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)&v14[*(int *)(v157 + 48)] = *(void *)&v15[*(int *)(v157 + 48)];
        uint64_t v158 = *(int *)(v157 + 64);
        uint64_t v159 = &v14[v158];
        int v160 = &v15[v158];
        uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v146(&v14[v158], &v15[v158], v11);
        uint64_t v161 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v159[v161[13]] = v160[v161[13]];
        uint64_t v162 = v161[14];
        uint64_t v163 = &v159[v162];
        uint64_t v164 = &v160[v162];
        uint64_t v165 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v163, v164, v165);
        uint64_t v166 = v161[15];
        long long v153 = &v159[v166];
        uint64_t v154 = &v160[v166];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v167 = swift_getEnumCaseMultiPayload();
        if (v167 == 2) {
          goto LABEL_91;
        }
        if (v167 == 1) {
          goto LABEL_60;
        }
        goto LABEL_96;
      case 7u:
        uint64_t v64 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          uint64_t v168 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v14, v15, v168);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
        *(void *)&v14[*(int *)(v169 + 48)] = *(void *)&v15[*(int *)(v169 + 48)];
        *(void *)&v14[*(int *)(v169 + 64)] = *(void *)&v15[*(int *)(v169 + 64)];
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v65 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          uint64_t v170 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v14, v15, v170);
          swift_storeEnumTagMultiPayload();
        }
        unint64_t v171 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)&v14[v171[12]] = *(void *)&v15[v171[12]];
        *(void *)&v14[v171[16]] = *(void *)&v15[v171[16]];
        uint64_t v172 = v171[20];
        uint64_t v173 = &v14[v172];
        int v174 = &v15[v172];
        uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v146(&v14[v172], &v15[v172], v11);
        uint64_t v175 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v173[v175[13]] = v174[v175[13]];
        uint64_t v176 = v175[14];
        uint64_t v177 = &v173[v176];
        uint64_t v178 = &v174[v176];
        uint64_t v179 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 32))(v177, v178, v179);
        uint64_t v180 = v175[15];
        long long v153 = &v173[v180];
        uint64_t v154 = &v174[v180];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v181 = swift_getEnumCaseMultiPayload();
        if (v181 == 2) {
          goto LABEL_91;
        }
        if (v181 == 1) {
          goto LABEL_60;
        }
        goto LABEL_96;
      case 9u:
        uint64_t v66 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          uint64_t v189 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 32))(v14, v15, v189);
          swift_storeEnumTagMultiPayload();
        }
        int v190 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)&v14[v190[12]] = *(void *)&v15[v190[12]];
        *(void *)&v14[v190[16]] = *(void *)&v15[v190[16]];
        uint64_t v191 = v190[20];
        uint64_t v192 = &v14[v191];
        uint64_t v193 = &v15[v191];
        uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v146(&v14[v191], &v15[v191], v11);
        uint64_t v194 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v192[v194[13]] = v193[v194[13]];
        uint64_t v195 = v194[14];
        uint64_t v196 = &v192[v195];
        uint64_t v197 = &v193[v195];
        uint64_t v198 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
        uint64_t v199 = v194[15];
        long long v153 = &v192[v199];
        uint64_t v154 = &v193[v199];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v200 = swift_getEnumCaseMultiPayload();
        if (v200 == 2)
        {
LABEL_91:
          long long v273 = *((_OWORD *)v154 + 1);
          *(_OWORD *)long long v153 = *(_OWORD *)v154;
          *((_OWORD *)v153 + 1) = v273;
          *((void *)v153 + 4) = *((void *)v154 + 4);
          uint64_t v274 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          long long v275 = &v153[v274];
          uint64_t v276 = &v154[v274];
          *((_WORD *)v275 + 24) = *(_WORD *)&v154[v274 + 48];
          long long v277 = *(_OWORD *)&v154[v274 + 16];
          *(_OWORD *)long long v275 = *(_OWORD *)&v154[v274];
          *((_OWORD *)v275 + 1) = v277;
          *((_OWORD *)v275 + 2) = *(_OWORD *)&v154[v274 + 32];
          uint64_t v278 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v186 = &v275[v278];
          uint64_t v11 = v480;
          unint64_t v187 = &v276[v278];
          long long v279 = v186;
          uint64_t v280 = &v276[v278];
        }
        else
        {
          if (v200 == 1)
          {
LABEL_60:
            *long long v153 = *v154;
            uint64_t v182 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
            uint64_t v183 = &v153[v182];
            uint64_t v184 = &v154[v182];
            v146(&v153[v182], v184, v11);
            uint64_t v185 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
            uint64_t v186 = &v183[v185];
            unint64_t v187 = &v184[v185];
            v146(v186, v187, v11);
            uint64_t v188 = &qword_1E96710F0;
            goto LABEL_98;
          }
LABEL_96:
          long long v281 = *((_OWORD *)v154 + 1);
          *(_OWORD *)long long v153 = *(_OWORD *)v154;
          *((_OWORD *)v153 + 1) = v281;
          *((void *)v153 + 4) = *((void *)v154 + 4);
          uint64_t v282 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          long long v283 = &v153[v282];
          uint64_t v284 = &v154[v282];
          *((_WORD *)v283 + 24) = *(_WORD *)&v154[v282 + 48];
          long long v285 = *(_OWORD *)&v154[v282 + 16];
          *(_OWORD *)long long v283 = *(_OWORD *)&v154[v282];
          *((_OWORD *)v283 + 1) = v285;
          *((_OWORD *)v283 + 2) = *(_OWORD *)&v154[v282 + 32];
          uint64_t v286 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v186 = &v283[v286];
          unint64_t v187 = &v284[v286];
          long long v279 = &v283[v286];
          uint64_t v280 = &v284[v286];
          uint64_t v11 = v480;
        }
        v146(v279, v280, v11);
        uint64_t v188 = &qword_1E96710D8;
LABEL_98:
        uint64_t v287 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v188) + 68);
        uint64_t v5 = v481;
        uint64_t v12 = v478;
        *(_OWORD *)&v186[v287] = *(_OWORD *)&v187[v287];
        swift_storeEnumTagMultiPayload();
        goto LABEL_99;
      case 0xAu:
        uint64_t v67 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v14, v15, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          uint64_t v201 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v14, v15, v201);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
        *(void *)&v14[*(int *)(v202 + 48)] = *(void *)&v15[*(int *)(v202 + 48)];
        *(void *)&v14[*(int *)(v202 + 64)] = *(void *)&v15[*(int *)(v202 + 64)];
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        long long v68 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v68;
        *((void *)v14 + _Block_object_dispose(&a9, 8) = *((void *)v15 + 8);
        long long v69 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v69;
        uint64_t v70 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
        int v71 = &v14[v70];
        uint64_t v72 = &v15[v70];
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v73(&v14[v70], &v15[v70], v11);
        int v74 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        v71[v74[13]] = v72[v74[13]];
        uint64_t v75 = v74[14];
        uint64_t v76 = &v71[v75];
        uint64_t v77 = &v72[v75];
        uint64_t v78 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
        uint64_t v79 = v74[15];
        int v80 = &v71[v79];
        long long v81 = &v72[v79];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v82 = swift_getEnumCaseMultiPayload();
        if (v82 == 2)
        {
          long long v245 = *((_OWORD *)v81 + 1);
          *(_OWORD *)int v80 = *(_OWORD *)v81;
          *((_OWORD *)v80 + 1) = v245;
          *((void *)v80 + 4) = *((void *)v81 + 4);
          uint64_t v246 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          long long v247 = &v80[v246];
          uint64_t v248 = v12;
          uint64_t v249 = &v81[v246];
          *((_WORD *)v247 + 24) = *(_WORD *)&v81[v246 + 48];
          long long v250 = *(_OWORD *)&v81[v246 + 16];
          *(_OWORD *)long long v247 = *(_OWORD *)&v81[v246];
          *((_OWORD *)v247 + 1) = v250;
          *((_OWORD *)v247 + 2) = *(_OWORD *)&v81[v246 + 32];
          uint64_t v251 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v31 = &v247[v251];
          uint64_t v11 = v480;
          uint64_t v32 = &v249[v251];
          uint64_t v12 = v248;
          v73(v31, v32, v480);
          uint64_t v33 = &qword_1E96710D8;
          goto LABEL_84;
        }
        if (v82 == 1)
        {
          *int v80 = *v81;
          uint64_t v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v84 = &v80[v83];
          uint64_t v85 = &v81[v83];
          v73(&v80[v83], v85, v11);
          uint64_t v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v31 = &v84[v86];
          uint64_t v32 = &v85[v86];
          v73(v31, v32, v11);
          uint64_t v33 = &qword_1E96710F0;
          goto LABEL_84;
        }
        long long v253 = *((_OWORD *)v81 + 1);
        *(_OWORD *)int v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v253;
        *((void *)v80 + 4) = *((void *)v81 + 4);
        uint64_t v254 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        long long v255 = &v80[v254];
        uint64_t v256 = &v81[v254];
        *((_WORD *)v255 + 24) = *(_WORD *)&v81[v254 + 48];
        long long v257 = *(_OWORD *)&v81[v254 + 16];
        *(_OWORD *)long long v255 = *(_OWORD *)&v81[v254];
        *((_OWORD *)v255 + 1) = v257;
        *((_OWORD *)v255 + 2) = *(_OWORD *)&v81[v254 + 32];
        uint64_t v258 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v259 = &v255[v258];
        unsigned __int8 v260 = &v256[v258];
        long long v261 = &v255[v258];
        uint64_t v11 = v480;
        v73(v261, &v256[v258], v480);
        uint64_t v262 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        unsigned __int8 v236 = &v259[v262];
        long long v237 = &v260[v262];
        uint64_t v5 = v481;
        uint64_t v12 = v478;
        goto LABEL_88;
      case 0xDu:
        long long v87 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v87;
        *((void *)v14 + _Block_object_dispose(&a9, 8) = *((void *)v15 + 8);
        long long v88 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v88;
        uint64_t v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
        uint64_t v90 = &v14[v89];
        uint64_t v91 = &v15[v89];
        char v39 = *(void (**)(char *, char *, uint64_t))(v479 + 32);
        v39(&v14[v89], &v15[v89], v11);
        int v92 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        v90[v92[13]] = v91[v92[13]];
        uint64_t v93 = v92[14];
        uint64_t v94 = &v90[v93];
        uint64_t v95 = &v91[v93];
        uint64_t v96 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
        uint64_t v97 = v92[15];
        uint64_t v46 = &v90[v97];
        int v47 = &v91[v97];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v98 = swift_getEnumCaseMultiPayload();
        if (v98 == 2)
        {
LABEL_79:
          long long v238 = *((_OWORD *)v47 + 1);
          *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
          *((_OWORD *)v46 + 1) = v238;
          *((void *)v46 + 4) = *((void *)v47 + 4);
          uint64_t v239 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v240 = &v46[v239];
          long long v241 = v12;
          uint64_t v242 = &v47[v239];
          *((_WORD *)v240 + 24) = *(_WORD *)&v47[v239 + 48];
          long long v243 = *(_OWORD *)&v47[v239 + 16];
          *(_OWORD *)uint64_t v240 = *(_OWORD *)&v47[v239];
          *((_OWORD *)v240 + 1) = v243;
          *((_OWORD *)v240 + 2) = *(_OWORD *)&v47[v239 + 32];
          uint64_t v244 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v31 = &v240[v244];
          uint64_t v11 = v480;
          uint64_t v32 = &v242[v244];
          uint64_t v12 = v241;
          v39(v31, v32, v480);
          uint64_t v33 = &qword_1E96710D8;
          goto LABEL_84;
        }
        if (v98 == 1)
        {
LABEL_12:
          *uint64_t v46 = *v47;
          uint64_t v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          uint64_t v50 = &v46[v49];
          uint64_t v51 = &v47[v49];
          v39(&v46[v49], v51, v11);
          uint64_t v52 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          uint64_t v31 = &v50[v52];
          uint64_t v32 = &v51[v52];
          v39(v31, v32, v11);
          uint64_t v33 = &qword_1E96710F0;
LABEL_84:
          uint64_t v252 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v33) + 68);
          unsigned __int8 v236 = &v31[v252];
          long long v237 = &v32[v252];
          uint64_t v5 = v481;
          goto LABEL_88;
        }
LABEL_87:
        long long v263 = *((_OWORD *)v47 + 1);
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
        *((_OWORD *)v46 + 1) = v263;
        *((void *)v46 + 4) = *((void *)v47 + 4);
        uint64_t v264 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        long long v265 = &v46[v264];
        uint64_t v266 = &v47[v264];
        *((_WORD *)v265 + 24) = *(_WORD *)&v47[v264 + 48];
        long long v267 = *(_OWORD *)&v47[v264 + 16];
        *(_OWORD *)long long v265 = *(_OWORD *)&v47[v264];
        *((_OWORD *)v265 + 1) = v267;
        *((_OWORD *)v265 + 2) = *(_OWORD *)&v47[v264 + 32];
        uint64_t v268 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        long long v269 = &v265[v268];
        uint64_t v270 = &v266[v268];
        long long v271 = &v265[v268];
        uint64_t v11 = v480;
        v39(v271, &v266[v268], v480);
        uint64_t v272 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        unsigned __int8 v236 = &v269[v272];
        long long v237 = &v270[v272];
        uint64_t v5 = v481;
        uint64_t v12 = v478;
LABEL_88:
        *(_OWORD *)unsigned __int8 v236 = *(_OWORD *)v237;
        swift_storeEnumTagMultiPayload();
LABEL_99:
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v482;
        a3 = v483;
        break;
      case 0xFu:
        unint64_t v99 = v5;
        uint64_t v100 = sub_1A56D4C28();
        uint64_t v101 = *(void *)(v100 - 8);
        uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
        v102(v14, v15, v100);
        uint64_t v103 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v104 = v103[5];
        uint64_t v105 = &v14[v104];
        int v106 = &v15[v104];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(&v15[v104], 1, v100))
        {
          uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          v102(v105, v106, v100);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v105, 0, 1, v100);
        }
        uint64_t v11 = v480;
        v14[v103[6]] = v15[v103[6]];
        uint64_t v203 = v103[7];
        uint64_t v204 = &v14[v203];
        uint64_t v205 = &v15[v203];
        uint64_t v206 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v207 = *(void *)(v206 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48))(v205, 1, v206))
        {
          uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v204, v205, *(void *)(*(void *)(v208 - 8) + 64));
        }
        else
        {
          uint64_t v215 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v216 = *(void *)(v215 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48))(v205, 1, v215))
          {
            memcpy(v204, v205, *(void *)(v207 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v204, v205, *(void *)(v216 + 64));
            }
            else
            {
              *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
              uint64_t v456 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              uint64_t v457 = &v204[v456];
              uint64_t v458 = &v205[v456];
              uint64_t v459 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v459 - 8) + 32))(v457, v458, v459);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v216 + 56))(v204, 0, 1, v215);
          }
          uint64_t v11 = v480;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v207 + 56))(v204, 0, 1, v206);
        }
        uint64_t v460 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
        uint64_t v461 = v460[12];
        uint64_t v462 = &v14[v461];
        uint64_t v463 = &v15[v461];
        uint64_t v464 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v462, v463, *(void *)(*(void *)(v464 - 8) + 64));
        }
        else
        {
          uint64_t v465 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v465 - 8) + 32))(v462, v463, v465);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v5 = v99;
        uint64_t v4 = v482;
        uint64_t v12 = v478;
        *(_OWORD *)&v14[v460[16]] = *(_OWORD *)&v15[v460[16]];
        *(void *)&v14[v460[20]] = *(void *)&v15[v460[20]];
        *(void *)&v14[v460[24]] = *(void *)&v15[v460[24]];
        *(void *)&v14[v460[28]] = *(void *)&v15[v460[28]];
        swift_storeEnumTagMultiPayload();
        a3 = v483;
        break;
      case 0x10u:
        uint64_t v108 = v5;
        uint64_t v109 = sub_1A56D4C28();
        uint64_t v110 = *(void *)(v109 - 8);
        uint64_t v111 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
        v111(v14, v15, v109);
        int v112 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v113 = v112[5];
        long long v114 = &v14[v113];
        uint64_t v115 = &v15[v113];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(&v15[v113], 1, v109))
        {
          uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          v111(v114, v115, v109);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v114, 0, 1, v109);
        }
        uint64_t v11 = v480;
        v14[v112[6]] = v15[v112[6]];
        uint64_t v209 = v112[7];
        uint64_t v210 = &v14[v209];
        unsigned __int8 v211 = &v15[v209];
        uint64_t v212 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v213 = *(void *)(v212 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v213 + 48))(v211, 1, v212))
        {
          uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v210, v211, *(void *)(*(void *)(v214 - 8) + 64));
          uint64_t v12 = v478;
        }
        else
        {
          uint64_t v217 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v218 = *(void *)(v217 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v211, 1, v217))
          {
            memcpy(v210, v211, *(void *)(v213 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v210, v211, *(void *)(v218 + 64));
            }
            else
            {
              *(_OWORD *)uint64_t v210 = *(_OWORD *)v211;
              uint64_t v466 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              int v467 = &v210[v466];
              uint64_t v468 = &v211[v466];
              uint64_t v469 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v469 - 8) + 32))(v467, v468, v469);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v218 + 56))(v210, 0, 1, v217);
          }
          uint64_t v5 = v108;
          uint64_t v11 = v480;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v213 + 56))(v210, 0, 1, v212);
          uint64_t v12 = v478;
        }
        uint64_t v470 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
        uint64_t v471 = &v14[v470];
        uint64_t v472 = &v15[v470];
        uint64_t v473 = type metadata accessor for SFAirDropReceive.Failure();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v471, v472, *(void *)(*(void *)(v473 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v471 = *(_OWORD *)v472;
          uint64_t v474 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
          uint64_t v475 = &v471[v474];
          uint64_t v476 = &v472[v474];
          uint64_t v477 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v477 - 8) + 32))(v475, v476, v477);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v4 = v482;
        a3 = v483;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        break;
    }
  }
  uint64_t v288 = a3[8];
  v5[a3[7]] = v4[a3[7]];
  long long v289 = &v5[v288];
  uint64_t v290 = &v4[v288];
  v12(&v5[v288], &v4[v288], v11);
  unint64_t v291 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
  uint64_t v292 = v291[5];
  long long v293 = &v289[v292];
  uint64_t v294 = &v290[v292];
  char v295 = v294[16];
  uint64_t v296 = *(void *)v293;
  uint64_t v297 = *((void *)v293 + 1);
  *(_OWORD *)long long v293 = *(_OWORD *)v294;
  unsigned __int8 v298 = v293[16];
  v293[16] = v295;
  sub_1A5512CD4(v296, v297, v298);
  *(void *)&v289[v291[6]] = *(void *)&v290[v291[6]];
  v289[v291[7]] = v290[v291[7]];
  v289[v291[8]] = v290[v291[8]];
  v289[v291[9]] = v290[v291[9]];
  uint64_t v299 = v291[10];
  uint64_t v300 = &v289[v299];
  uint64_t v301 = &v290[v299];
  uint64_t v303 = *(void *)v301;
  uint64_t v302 = *((void *)v301 + 1);
  *(void *)uint64_t v300 = v303;
  *((void *)v300 + 1) = v302;
  swift_bridgeObjectRelease();
  uint64_t v304 = v291[11];
  uint64_t v305 = &v289[v304];
  uint64_t v306 = &v290[v304];
  uint64_t v308 = *(void *)v306;
  uint64_t v307 = *((void *)v306 + 1);
  *(void *)uint64_t v305 = v308;
  *((void *)v305 + 1) = v307;
  swift_bridgeObjectRelease();
  uint64_t v309 = v291[12];
  uint64_t v310 = &v289[v309];
  long long v311 = &v290[v309];
  uint64_t v313 = *(void *)v311;
  uint64_t v312 = *((void *)v311 + 1);
  *(void *)uint64_t v310 = v313;
  *((void *)v310 + 1) = v312;
  swift_bridgeObjectRelease();
  uint64_t v314 = v291[13];
  uint64_t v315 = &v289[v314];
  uint64_t v316 = &v290[v314];
  uint64_t v318 = *(void *)v316;
  uint64_t v317 = *((void *)v316 + 1);
  *(void *)uint64_t v315 = v318;
  *((void *)v315 + 1) = v317;
  swift_bridgeObjectRelease();
  uint64_t v319 = v291[14];
  uint64_t v320 = &v289[v319];
  long long v321 = &v290[v319];
  uint64_t v323 = *(void *)v321;
  uint64_t v322 = *((void *)v321 + 1);
  *(void *)uint64_t v320 = v323;
  *((void *)v320 + 1) = v322;
  swift_bridgeObjectRelease();
  uint64_t v324 = v291[15];
  long long v325 = &v289[v324];
  uint64_t v326 = &v290[v324];
  uint64_t v328 = *(void *)v326;
  uint64_t v327 = *((void *)v326 + 1);
  *(void *)long long v325 = v328;
  *((void *)v325 + 1) = v327;
  swift_bridgeObjectRelease();
  uint64_t v329 = v291[16];
  uint64_t v330 = &v289[v329];
  long long v331 = &v290[v329];
  uint64_t v333 = *(void *)v331;
  uint64_t v332 = *((void *)v331 + 1);
  *(void *)uint64_t v330 = v333;
  *((void *)v330 + 1) = v332;
  swift_bridgeObjectRelease();
  uint64_t v334 = v291[17];
  uint64_t v335 = &v289[v334];
  uint64_t v336 = &v290[v334];
  uint64_t v338 = *(void *)v336;
  uint64_t v337 = *((void *)v336 + 1);
  *(void *)uint64_t v335 = v338;
  *((void *)v335 + 1) = v337;
  swift_bridgeObjectRelease();
  uint64_t v339 = v291[18];
  uint64_t v340 = &v289[v339];
  uint64_t v341 = &v290[v339];
  uint64_t v343 = *(void *)v341;
  uint64_t v342 = *((void *)v341 + 1);
  *(void *)uint64_t v340 = v343;
  *((void *)v340 + 1) = v342;
  swift_bridgeObjectRelease();
  uint64_t v344 = v291[19];
  uint64_t v345 = &v289[v344];
  uint64_t v346 = &v290[v344];
  uint64_t v348 = *(void *)v346;
  uint64_t v347 = *((void *)v346 + 1);
  *(void *)uint64_t v345 = v348;
  *((void *)v345 + 1) = v347;
  swift_bridgeObjectRelease();
  uint64_t v349 = v291[20];
  uint64_t v350 = *(void **)&v289[v349];
  *(void *)&v289[v349] = *(void *)&v290[v349];

  uint64_t v351 = v291[21];
  uint64_t v352 = *(void **)&v289[v351];
  *(void *)&v289[v351] = *(void *)&v290[v351];

  uint64_t v353 = v291[22];
  uint64_t v354 = *(void **)&v289[v353];
  *(void *)&v289[v353] = *(void *)&v290[v353];

  uint64_t v355 = v291[23];
  uint64_t v356 = &v289[v355];
  uint64_t v357 = &v290[v355];
  uint64_t v359 = *(void *)v357;
  uint64_t v358 = *((void *)v357 + 1);
  *(void *)uint64_t v356 = v359;
  *((void *)v356 + 1) = v358;
  swift_bridgeObjectRelease();
  uint64_t v360 = v291[24];
  uint64_t v361 = &v289[v360];
  uint64_t v362 = &v290[v360];
  uint64_t v363 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v364 = *(void *)(v363 - 8);
  uint64_t v365 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v364 + 48);
  int v366 = v365(v361, 1, v363);
  int v367 = v365(v362, 1, v363);
  if (!v366)
  {
    if (!v367)
    {
      if (v481 == v482) {
        goto LABEL_113;
      }
      sub_1A54F7200((uint64_t)v361, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v375 = *((_OWORD *)v362 + 1);
        *(_OWORD *)uint64_t v361 = *(_OWORD *)v362;
        *((_OWORD *)v361 + 1) = v375;
        uint64_t v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
        uint64_t v377 = *(int *)(v376 + 64);
        uint64_t v378 = &v361[v377];
        uint64_t v379 = &v362[v377];
        uint64_t v380 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v380 - 8) + 32))(v378, v379, v380);
        v361[*(int *)(v376 + 80)] = v362[*(int *)(v376 + 80)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_113;
      }
      size_t v374 = *(void *)(v364 + 64);
LABEL_107:
      memcpy(v361, v362, v374);
      goto LABEL_113;
    }
    sub_1A54F7200((uint64_t)v361, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
LABEL_106:
    size_t v374 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128) - 8) + 64);
    goto LABEL_107;
  }
  if (v367) {
    goto LABEL_106;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v368 = *((_OWORD *)v362 + 1);
    *(_OWORD *)uint64_t v361 = *(_OWORD *)v362;
    *((_OWORD *)v361 + 1) = v368;
    uint64_t v369 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
    uint64_t v370 = *(int *)(v369 + 64);
    uint64_t v371 = &v361[v370];
    uint64_t v372 = &v362[v370];
    uint64_t v373 = sub_1A56D4C28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 32))(v371, v372, v373);
    v361[*(int *)(v369 + 80)] = v362[*(int *)(v369 + 80)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v361, v362, *(void *)(v364 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v364 + 56))(v361, 0, 1, v363);
LABEL_113:
  *(void *)&v289[v291[25]] = *(void *)&v290[v291[25]];
  swift_bridgeObjectRelease();
  *(void *)&v289[v291[26]] = *(void *)&v290[v291[26]];
  swift_bridgeObjectRelease();
  uint64_t v381 = v291[27];
  uint64_t v382 = (uint64_t)&v289[v381];
  unsigned __int8 v383 = &v290[v381];
  unint64_t v384 = *(void *)(v382 + 8);
  if (v384 >> 60 == 15)
  {
LABEL_116:
    *(_OWORD *)uint64_t v382 = *(_OWORD *)v383;
    goto LABEL_118;
  }
  unint64_t v385 = *((void *)v383 + 1);
  if (v385 >> 60 == 15)
  {
    sub_1A551BBE0(v382);
    goto LABEL_116;
  }
  uint64_t v386 = *(void *)v382;
  *(void *)uint64_t v382 = *(void *)v383;
  *(void *)(v382 + _Block_object_dispose(&a9, 8) = v385;
  sub_1A54EA09C(v386, v384);
LABEL_118:
  uint64_t v387 = v482;
  uint64_t v388 = v483;
  uint64_t v389 = v483[9];
  uint64_t v390 = &v481[v389];
  uint64_t v391 = &v482[v389];
  uint64_t v392 = type metadata accessor for SFAirDropReceive.AskResponse();
  uint64_t v393 = *(void *)(v392 - 8);
  uint64_t v394 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v393 + 48);
  int v395 = v394(v390, 1, v392);
  int v396 = v394(v391, 1, v392);
  if (!v395)
  {
    if (!v396)
    {
      uint64_t v400 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
      uint64_t v401 = *(void *)(v400 - 8);
      uint64_t v402 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v401 + 48);
      int v403 = v402(v390, 3, v400);
      int v404 = v402(v391, 3, v400);
      if (v403)
      {
        uint64_t v388 = v483;
        if (!v404)
        {
          uint64_t v405 = type metadata accessor for SFAirDropReceive.ItemDestination();
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v390, v391, *(void *)(*(void *)(v405 - 8) + 64));
          }
          else
          {
            uint64_t v443 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v443 - 8) + 32))(v390, v391, v443);
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v444 = *(int *)(v400 + 48);
          uint64_t v445 = &v390[v444];
          uint64_t v446 = &v391[v444];
          *(_OWORD *)uint64_t v445 = *(_OWORD *)v446;
          *((void *)v445 + 2) = *((void *)v446 + 2);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v401 + 56))(v390, 0, 3, v400);
          uint64_t v388 = v483;
          goto LABEL_139;
        }
      }
      else
      {
        uint64_t v388 = v483;
        if (!v404)
        {
          if (v481 != v482)
          {
            sub_1A54F7200((uint64_t)v390, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
            uint64_t v442 = type metadata accessor for SFAirDropReceive.ItemDestination();
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v390, v391, *(void *)(*(void *)(v442 - 8) + 64));
            }
            else
            {
              uint64_t v447 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v447 - 8) + 32))(v390, v391, v447);
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v388 = v483;
          }
          uint64_t v448 = *(int *)(v400 + 48);
          uint64_t v449 = &v390[v448];
          unsigned __int8 v450 = &v391[v448];
          *uint64_t v449 = *v450;
          uint64_t v451 = v449 + 8;
          uint64_t v452 = v450 + 8;
          unint64_t v453 = *((void *)v449 + 2);
          if (v453 >> 60 != 15)
          {
            unint64_t v454 = *((void *)v450 + 2);
            if (v454 >> 60 != 15)
            {
              uint64_t v455 = *((void *)v449 + 1);
              *((void *)v449 + 1) = *v452;
              *((void *)v449 + 2) = v454;
              sub_1A54EA09C(v455, v453);
              goto LABEL_139;
            }
            sub_1A551BBE0((uint64_t)(v449 + 8));
          }
          *uint64_t v451 = *(_OWORD *)v452;
          goto LABEL_139;
        }
        sub_1A54E4D44((uint64_t)v390, &qword_1E9671130);
      }
      size_t v399 = *(void *)(v393 + 64);
LABEL_125:
      memcpy(v390, v391, v399);
      goto LABEL_139;
    }
    sub_1A54F7200((uint64_t)v390, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.AskResponse);
LABEL_124:
    size_t v399 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048) - 8) + 64);
    goto LABEL_125;
  }
  if (v396) {
    goto LABEL_124;
  }
  uint64_t v397 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v398 = *(void *)(v397 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v398 + 48))(v391, 3, v397))
  {
    memcpy(v390, v391, *(void *)(v393 + 64));
  }
  else
  {
    uint64_t v406 = type metadata accessor for SFAirDropReceive.ItemDestination();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v390, v391, *(void *)(*(void *)(v406 - 8) + 64));
    }
    else
    {
      uint64_t v407 = sub_1A56D4A28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v407 - 8) + 32))(v390, v391, v407);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v408 = *(int *)(v397 + 48);
    uint64_t v409 = &v390[v408];
    unsigned __int8 v410 = &v391[v408];
    *(_OWORD *)uint64_t v409 = *(_OWORD *)v410;
    *((void *)v409 + 2) = *((void *)v410 + 2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v398 + 56))(v390, 0, 3, v397);
    uint64_t v387 = v482;
  }
  uint64_t v388 = v483;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v393 + 56))(v390, 0, 1, v392);
LABEL_139:
  uint64_t v411 = v388[10];
  uint64_t v412 = &v481[v411];
  uint64_t v413 = &v387[v411];
  uint64_t v414 = sub_1A56D4C28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 40))(v412, v413, v414);
  uint64_t v415 = v388[12];
  v481[v388[11]] = v387[v388[11]];
  v481[v415] = v387[v415];
  uint64_t v416 = v388[13];
  uint64_t v417 = (uint64_t)&v481[v416];
  uint64_t v418 = &v387[v416];
  uint64_t v419 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v420 = *(void *)(v419 - 8);
  uint64_t v421 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v420 + 48);
  LODWORD(v412) = v421(v417, 1, v419);
  int v422 = v421((uint64_t)v418, 1, v419);
  if (!v412)
  {
    if (!v422)
    {
      uint64_t v430 = *((void *)v418 + 1);
      *(void *)uint64_t v417 = *(void *)v418;
      *(void *)(v417 + _Block_object_dispose(&a9, 8) = v430;
      swift_bridgeObjectRelease();
      char v431 = v418[48];
      uint64_t v432 = *(void *)(v417 + 16);
      uint64_t v433 = *(void *)(v417 + 24);
      uint64_t v434 = *(void *)(v417 + 32);
      uint64_t v435 = *(void *)(v417 + 40);
      long long v436 = *((_OWORD *)v418 + 2);
      *(_OWORD *)(v417 + 16) = *((_OWORD *)v418 + 1);
      *(_OWORD *)(v417 + 32) = v436;
      unsigned __int8 v437 = *(unsigned char *)(v417 + 48);
      *(unsigned char *)(v417 + 4_Block_object_dispose(&a9, 8) = v431;
      sub_1A5512C74(v432, v433, v434, v435, v437);
      *(unsigned char *)(v417 + 49) = v418[49];
      uint64_t v438 = *(int *)(v419 + 28);
      uint64_t v439 = v417 + v438;
      unint64_t v440 = &v418[v438];
      v478((char *)(v417 + v438), &v418[v438], v480);
      uint64_t v441 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
      *(_OWORD *)(v439 + *(int *)(v441 + 68)) = *(_OWORD *)&v440[*(int *)(v441 + 68)];
      swift_release();
      goto LABEL_145;
    }
    sub_1A54F7200(v417, (uint64_t (*)(void))type metadata accessor for SFAirDrop.DeclineAction);
    goto LABEL_144;
  }
  if (v422)
  {
LABEL_144:
    uint64_t v428 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
    memcpy((void *)v417, v418, *(void *)(*(void *)(v428 - 8) + 64));
    goto LABEL_145;
  }
  long long v423 = *((_OWORD *)v418 + 1);
  *(_OWORD *)uint64_t v417 = *(_OWORD *)v418;
  *(_OWORD *)(v417 + 16) = v423;
  *(_OWORD *)(v417 + 32) = *((_OWORD *)v418 + 2);
  *(_WORD *)(v417 + 4_Block_object_dispose(&a9, 8) = *((_WORD *)v418 + 24);
  uint64_t v424 = *(int *)(v419 + 28);
  uint64_t v425 = v417 + v424;
  uint64_t v426 = &v418[v424];
  (*(void (**)(uint64_t, char *, uint64_t))(v479 + 32))(v417 + v424, &v418[v424], v480);
  uint64_t v427 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
  *(_OWORD *)(v425 + *(int *)(v427 + 68)) = *(_OWORD *)&v426[*(int *)(v427 + 68)];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v420 + 56))(v417, 0, 1, v419);
LABEL_145:
  v481[v388[14]] = v387[v388[14]];
  return v481;
}

uint64_t _s8TransferVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A5521DCC);
}

uint64_t sub_1A5521DCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1A56D4CB8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  uint64_t v14 = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  if (a2 == 254)
  {
    unsigned int v15 = *(unsigned __int8 *)(a1 + a3[7]);
    if (v15 >= 2) {
      return v15 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v17 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_17;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_17;
  }
  uint64_t v19 = sub_1A56D4C28();
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_17;
  }
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
  int v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[13];

  return v21(v23, a2, v22);
}

uint64_t _s8TransferVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A5522090);
}

uint64_t sub_1A5522090(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for SFAirDropClient.Identifier();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1A56D4CB8();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  uint64_t result = type metadata accessor for SFAirDropReceive.Transfer.State(0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[7]) = a2 + 1;
    return result;
  }
  uint64_t v17 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671048);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  uint64_t v19 = sub_1A56D4C28();
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671050);
  int v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[13];

  return v21(v23, a2, a2, v22);
}

void sub_1A5522344()
{
  type metadata accessor for SFAirDropClient.Identifier();
  if (v0 <= 0x3F)
  {
    sub_1A56D4CB8();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SFAirDropReceive.Transfer.State(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for SFAirDropReceive.AskRequest(319);
        if (v3 <= 0x3F)
        {
          sub_1A5522584(319, &qword_1E966BCC0, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.AskResponse);
          if (v4 <= 0x3F)
          {
            sub_1A56D4C28();
            if (v5 <= 0x3F)
            {
              sub_1A5522584(319, &qword_1E966B9C0, (void (*)(uint64_t))type metadata accessor for SFAirDrop.DeclineAction);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_1A5522584(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1A56D5898();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t _s8TransferV5StateOwCP(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_1A56D4CB8();
        uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        uint64_t v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(a1 + v9[13]) = *(unsigned char *)(a2 + v9[13]);
        uint64_t v10 = v9[14];
        uint64_t v11 = a1 + v10;
        uint64_t v12 = a2 + v10;
        uint64_t v13 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        uint64_t v14 = v9[15];
        uint64_t v15 = (void *)(a1 + v14);
        uint64_t v16 = (void *)(a2 + v14);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2) {
          goto LABEL_79;
        }
        if (EnumCaseMultiPayload != 1) {
          goto LABEL_76;
        }
        goto LABEL_14;
      case 1u:
        uint64_t v20 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v20;
        uint64_t v21 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v21;
        uint64_t v22 = *(void *)(a2 + 32);
        uint64_t v23 = *(void *)(a2 + 40);
        char v24 = *(unsigned char *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v22;
        *(void *)(a1 + 40) = v23;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v24;
        uint64_t v25 = *(void *)(a2 + 56);
        unint64_t v26 = *(void *)(a2 + 64);
        sub_1A54E9E98(v25, v26);
        *(void *)(a1 + 56) = v25;
        *(void *)(a1 + 64) = v26;
        uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
        uint64_t v28 = a1 + v27;
        uint64_t v29 = a2 + v27;
        uint64_t v30 = sub_1A56D4CB8();
        uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
        v31(v28, v29, v30);
        uint64_t v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        *(unsigned char *)(v28 + v32[13]) = *(unsigned char *)(v29 + v32[13]);
        uint64_t v33 = v32[14];
        uint64_t v34 = v28 + v33;
        uint64_t v35 = v29 + v33;
        uint64_t v36 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        uint64_t v37 = v32[15];
        uint64_t v38 = (void *)(v28 + v37);
        char v39 = (void *)(v29 + v37);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v40 = swift_getEnumCaseMultiPayload();
        if (v40 == 2) {
          goto LABEL_77;
        }
        if (v40 == 1) {
          goto LABEL_11;
        }
        goto LABEL_78;
      case 2u:
        uint64_t v7 = sub_1A56D4CB8();
        uint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        int v48 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(a1 + v48[13]) = *(unsigned char *)(a2 + v48[13]);
        uint64_t v49 = v48[14];
        uint64_t v50 = a1 + v49;
        uint64_t v51 = a2 + v49;
        uint64_t v52 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
        uint64_t v53 = v48[15];
        uint64_t v15 = (void *)(a1 + v53);
        uint64_t v16 = (void *)(a2 + v53);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v54 = swift_getEnumCaseMultiPayload();
        if (v54 == 2)
        {
LABEL_79:
          uint64_t v225 = v16[1];
          void *v15 = *v16;
          v15[1] = v225;
          uint64_t v226 = v16[3];
          void v15[2] = v16[2];
          v15[3] = v226;
          uint64_t v472 = v7;
          void v15[4] = v16[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v228 = (char *)v15 + v227;
          long long v229 = (char *)v16 + v227;
          uint64_t v230 = *(void *)((char *)v16 + v227 + 8);
          *(void *)uint64_t v228 = *(void *)((char *)v16 + v227);
          *((void *)v228 + 1) = v230;
          uint64_t v231 = *(void *)((char *)v16 + v227 + 16);
          uint64_t v232 = *(void *)((char *)v16 + v227 + 24);
          uint64_t v466 = (void (*)(char *, char *, uint64_t))v8;
          uint64_t v233 = *((void *)v229 + 4);
          uint64_t v234 = *((void *)v229 + 5);
          unsigned __int8 v235 = v229[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v231, v232, v233, v234, v235);
          *((void *)v228 + 2) = v231;
          *((void *)v228 + 3) = v232;
          *((void *)v228 + 4) = v233;
          *((void *)v228 + 5) = v234;
          v228[48] = v235;
          v228[49] = v229[49];
          uint64_t v236 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          int v59 = &v228[v236];
          uint64_t v60 = &v229[v236];
          v466(&v228[v236], &v229[v236], v472);
          uint64_t v61 = &qword_1E96710D8;
        }
        else
        {
          if (v54 != 1)
          {
LABEL_76:
            uint64_t v463 = (void (*)(char *, char *, uint64_t))v8;
            uint64_t v471 = v7;
            uint64_t v181 = v16[1];
            void *v15 = *v16;
            v15[1] = v181;
            uint64_t v182 = v16[3];
            void v15[2] = v16[2];
            v15[3] = v182;
            void v15[4] = v16[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v183 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
            uint64_t v184 = (char *)v15 + v183;
            uint64_t v185 = (char *)v16 + v183;
            uint64_t v186 = *(void *)((char *)v16 + v183 + 8);
            *(void *)uint64_t v184 = *(void *)((char *)v16 + v183);
            *((void *)v184 + 1) = v186;
            uint64_t v187 = *(void *)((char *)v16 + v183 + 16);
            uint64_t v188 = *((void *)v185 + 3);
            uint64_t v189 = *((void *)v185 + 4);
            uint64_t v190 = *((void *)v185 + 5);
            unsigned __int8 v191 = v185[48];
            swift_bridgeObjectRetain();
            sub_1A551182C(v187, v188, v189, v190, v191);
            *((void *)v184 + 2) = v187;
            *((void *)v184 + 3) = v188;
            *((void *)v184 + 4) = v189;
            *((void *)v184 + 5) = v190;
            v184[48] = v191;
            v184[49] = v185[49];
            uint64_t v192 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
            uint64_t v193 = &v184[v192];
            uint64_t v194 = &v185[v192];
            v463(&v184[v192], &v185[v192], v471);
            uint64_t v195 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
            uint64_t v196 = &v193[v195];
            uint64_t v197 = &v194[v195];
            goto LABEL_162;
          }
LABEL_14:
          *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
          uint64_t v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v56 = (char *)v15 + v55;
          uint64_t v57 = (char *)v16 + v55;
          v8((unint64_t)v15 + v55, (uint64_t)v57, v7);
          uint64_t v58 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          int v59 = &v56[v58];
          uint64_t v60 = &v57[v58];
          v8((unint64_t)v59, (uint64_t)v60, v7);
          uint64_t v61 = &qword_1E96710F0;
        }
        uint64_t v237 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v61) + 68);
        uint64_t v196 = &v59[v237];
        uint64_t v197 = &v60[v237];
        goto LABEL_162;
      case 3u:
        uint64_t v62 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v63 = swift_getEnumCaseMultiPayload();
        if (v63 == 2)
        {
          unint64_t v238 = *(void *)(a2 + 8);
          if (v238 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v266 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v266;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v238;
          }
        }
        else if (v63 == 1)
        {
          uint64_t v239 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v239;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v63)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v62 - 8) + 64));
            goto LABEL_126;
          }
          uint64_t v64 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
        }
        swift_storeEnumTagMultiPayload();
LABEL_126:
        long long v267 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
        uint64_t v268 = v267[12];
        long long v269 = (uint64_t *)(a1 + v268);
        uint64_t v270 = (uint64_t *)(a2 + v268);
        uint64_t v271 = *v270;
        uint64_t v272 = v270[1];
        unint64_t v273 = v270[2];
        uint64_t v274 = v270[3];
        uint64_t v275 = v270[4];
        sub_1A551188C(*v270, v272, v273);
        *long long v269 = v271;
        v269[1] = v272;
        v269[2] = v273;
        v269[3] = v274;
        v269[4] = v275;
        uint64_t v276 = v267[16];
        long long v277 = (void *)(a1 + v276);
        uint64_t v278 = (void *)(a2 + v276);
        uint64_t v279 = v278[1];
        *long long v277 = *v278;
        v277[1] = v279;
        uint64_t v280 = v267[20];
        uint64_t v281 = a1 + v280;
        uint64_t v282 = a2 + v280;
        uint64_t v283 = *(void *)(a2 + v280);
        uint64_t v284 = *(void *)(v282 + 8);
        *(void *)uint64_t v281 = v283;
        *(void *)(v281 + _Block_object_dispose(&a9, 8) = v284;
        uint64_t v285 = *(void *)(v282 + 16);
        uint64_t v286 = *(void *)(v282 + 24);
        uint64_t v287 = *(void *)(v282 + 32);
        uint64_t v288 = *(void *)(v282 + 40);
        LOBYTE(v274) = *(unsigned char *)(v282 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v285, v286, v287, v288, v274);
        *(void *)(v281 + 16) = v285;
        *(void *)(v281 + 24) = v286;
        *(void *)(v281 + 32) = v287;
        *(void *)(v281 + 40) = v288;
        *(unsigned char *)(v281 + 4_Block_object_dispose(&a9, 8) = v274;
        *(unsigned char *)(v281 + 49) = *(unsigned char *)(v282 + 49);
        uint64_t v289 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v290 = v281 + v289;
        uint64_t v291 = v282 + v289;
        uint64_t v292 = sub_1A56D4CB8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v292 - 8) + 16))(v290, v291, v292);
        uint64_t v293 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v294 = (void *)(v290 + v293);
        char v295 = (void *)(v291 + v293);
        uint64_t v296 = v295[1];
        *uint64_t v294 = *v295;
        v294[1] = v296;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        uint64_t v65 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v66 = swift_getEnumCaseMultiPayload();
        if (v66 == 2)
        {
          unint64_t v240 = *(void *)(a2 + 8);
          if (v240 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v297 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v297;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v240;
          }
        }
        else if (v66 == 1)
        {
          uint64_t v241 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v241;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v66)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v65 - 8) + 64));
            goto LABEL_129;
          }
          uint64_t v67 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
        }
        swift_storeEnumTagMultiPayload();
LABEL_129:
        unsigned __int8 v298 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
        *(void *)(a1 + v298[12]) = *(void *)(a2 + v298[12]);
        *(void *)(a1 + v298[16]) = *(void *)(a2 + v298[16]);
        uint64_t v299 = v298[20];
        uint64_t v300 = a1 + v299;
        uint64_t v301 = a2 + v299;
        uint64_t v302 = *(void *)(a2 + v299);
        uint64_t v303 = *(void *)(v301 + 8);
        *(void *)uint64_t v300 = v302;
        *(void *)(v300 + _Block_object_dispose(&a9, 8) = v303;
        uint64_t v304 = *(void *)(v301 + 16);
        uint64_t v305 = *(void *)(v301 + 24);
        uint64_t v306 = *(void *)(v301 + 32);
        uint64_t v307 = *(void *)(v301 + 40);
        unsigned __int8 v308 = *(unsigned char *)(v301 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v304, v305, v306, v307, v308);
        *(void *)(v300 + 16) = v304;
        *(void *)(v300 + 24) = v305;
        *(void *)(v300 + 32) = v306;
        *(void *)(v300 + 40) = v307;
        *(unsigned char *)(v300 + 4_Block_object_dispose(&a9, 8) = v308;
        *(unsigned char *)(v300 + 49) = *(unsigned char *)(v301 + 49);
        uint64_t v309 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v310 = v300 + v309;
        uint64_t v311 = v301 + v309;
        uint64_t v312 = sub_1A56D4CB8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v312 - 8) + 16))(v310, v311, v312);
        uint64_t v313 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v314 = (void *)(v310 + v313);
        uint64_t v315 = (void *)(v311 + v313);
        uint64_t v316 = v315[1];
        *uint64_t v314 = *v315;
        v314[1] = v316;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        uint64_t v68 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 == 2)
        {
          unint64_t v242 = *(void *)(a2 + 8);
          if (v242 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v317 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v317;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v242;
          }
        }
        else if (v69 == 1)
        {
          uint64_t v243 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v243;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v69)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v68 - 8) + 64));
            goto LABEL_132;
          }
          uint64_t v70 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
        }
        swift_storeEnumTagMultiPayload();
LABEL_132:
        uint64_t v318 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)(a1 + *(int *)(v318 + 48)) = *(void *)(a2 + *(int *)(v318 + 48));
        uint64_t v319 = *(int *)(v318 + 64);
        uint64_t v320 = a1 + v319;
        uint64_t v321 = a2 + v319;
        uint64_t v96 = sub_1A56D4CB8();
        uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v97(v320, v321, v96);
        uint64_t v322 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v320 + v322[13]) = *(unsigned char *)(v321 + v322[13]);
        uint64_t v323 = v322[14];
        uint64_t v324 = v320 + v323;
        uint64_t v325 = v321 + v323;
        uint64_t v326 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v326 - 8) + 16))(v324, v325, v326);
        uint64_t v327 = v322[15];
        uint64_t v104 = (void *)(v320 + v327);
        uint64_t v105 = (void *)(v321 + v327);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v328 = swift_getEnumCaseMultiPayload();
        if (v328 == 2) {
          goto LABEL_142;
        }
        if (v328 == 1) {
          goto LABEL_151;
        }
        goto LABEL_143;
      case 6u:
        uint64_t v71 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v72 = swift_getEnumCaseMultiPayload();
        if (v72 == 2)
        {
          unint64_t v244 = *(void *)(a2 + 8);
          if (v244 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v329 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v329;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v244;
          }
        }
        else if (v72 == 1)
        {
          uint64_t v245 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v245;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v72)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v71 - 8) + 64));
            goto LABEL_139;
          }
          uint64_t v73 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
        }
        swift_storeEnumTagMultiPayload();
LABEL_139:
        uint64_t v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)(a1 + *(int *)(v330 + 48)) = *(void *)(a2 + *(int *)(v330 + 48));
        uint64_t v331 = *(int *)(v330 + 64);
        uint64_t v332 = a1 + v331;
        uint64_t v333 = a2 + v331;
        uint64_t v96 = sub_1A56D4CB8();
        uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v97(v332, v333, v96);
        uint64_t v334 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v332 + v334[13]) = *(unsigned char *)(v333 + v334[13]);
        uint64_t v335 = v334[14];
        uint64_t v336 = v332 + v335;
        uint64_t v337 = v333 + v335;
        uint64_t v338 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v338 - 8) + 16))(v336, v337, v338);
        uint64_t v339 = v334[15];
        uint64_t v104 = (void *)(v332 + v339);
        uint64_t v105 = (void *)(v333 + v339);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v340 = swift_getEnumCaseMultiPayload();
        if (v340 == 2)
        {
LABEL_142:
          uint64_t v341 = v105[1];
          *uint64_t v104 = *v105;
          v104[1] = v341;
          uint64_t v342 = v105[3];
          v104[2] = v105[2];
          v104[3] = v342;
          v104[4] = v105[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v343 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v344 = (char *)v104 + v343;
          uint64_t v345 = (char *)v105 + v343;
          uint64_t v346 = *(void *)((char *)v105 + v343 + 8);
          *(void *)uint64_t v344 = *(void *)((char *)v105 + v343);
          *((void *)v344 + 1) = v346;
          uint64_t v347 = *(void *)((char *)v105 + v343 + 16);
          uint64_t v348 = *(void *)((char *)v105 + v343 + 24);
          uint64_t v461 = (void (*)(char *, char *, uint64_t))v97;
          uint64_t v467 = v96;
          uint64_t v349 = *((void *)v345 + 4);
          uint64_t v350 = *((void *)v345 + 5);
          unsigned __int8 v351 = v345[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v347, v348, v349, v350, v351);
          *((void *)v344 + 2) = v347;
          *((void *)v344 + 3) = v348;
          *((void *)v344 + 4) = v349;
          *((void *)v344 + 5) = v350;
          v344[48] = v351;
          v344[49] = v345[49];
          uint64_t v352 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v45 = &v344[v352];
          uint64_t v46 = &v345[v352];
          v461(&v344[v352], &v345[v352], v467);
          int v47 = &qword_1E96710D8;
          goto LABEL_160;
        }
        if (v340 == 1) {
          goto LABEL_151;
        }
LABEL_143:
        uint64_t v462 = (void (*)(char *, char *, uint64_t))v97;
        uint64_t v468 = v96;
        uint64_t v353 = v105[1];
        *uint64_t v104 = *v105;
        v104[1] = v353;
        uint64_t v354 = v105[3];
        v104[2] = v105[2];
        v104[3] = v354;
        v104[4] = v105[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v355 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v356 = (char *)v104 + v355;
        uint64_t v357 = (char *)v105 + v355;
        uint64_t v358 = *(void *)((char *)v105 + v355 + 8);
        *(void *)uint64_t v356 = *(void *)((char *)v105 + v355);
        *((void *)v356 + 1) = v358;
        uint64_t v359 = *(void *)((char *)v105 + v355 + 16);
        uint64_t v360 = *((void *)v357 + 3);
        uint64_t v361 = *((void *)v357 + 4);
        uint64_t v362 = *((void *)v357 + 5);
        unsigned __int8 v363 = v357[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v359, v360, v361, v362, v363);
        *((void *)v356 + 2) = v359;
        *((void *)v356 + 3) = v360;
        *((void *)v356 + 4) = v361;
        *((void *)v356 + 5) = v362;
        v356[48] = v363;
        v356[49] = v357[49];
        uint64_t v364 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v365 = &v356[v364];
        int v366 = &v357[v364];
        v462(&v356[v364], &v357[v364], v468);
        uint64_t v367 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v196 = &v365[v367];
        uint64_t v197 = &v366[v367];
        goto LABEL_162;
      case 7u:
        uint64_t v74 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v75 = swift_getEnumCaseMultiPayload();
        if (v75 == 2)
        {
          unint64_t v246 = *(void *)(a2 + 8);
          if (v246 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v368 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v368;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v246;
          }
        }
        else if (v75 == 1)
        {
          uint64_t v247 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v247;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v75)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v74 - 8) + 64));
            goto LABEL_146;
          }
          uint64_t v76 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
        }
        swift_storeEnumTagMultiPayload();
LABEL_146:
        uint64_t v369 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
        *(void *)(a1 + *(int *)(v369 + 48)) = *(void *)(a2 + *(int *)(v369 + 48));
        *(void *)(a1 + *(int *)(v369 + 64)) = *(void *)(a2 + *(int *)(v369 + 64));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 8u:
        uint64_t v77 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v78 = swift_getEnumCaseMultiPayload();
        if (v78 == 2)
        {
          unint64_t v248 = *(void *)(a2 + 8);
          if (v248 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v370 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v370;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v248;
          }
        }
        else if (v78 == 1)
        {
          uint64_t v249 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v249;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v78)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v77 - 8) + 64));
            goto LABEL_149;
          }
          uint64_t v79 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
        }
        swift_storeEnumTagMultiPayload();
LABEL_149:
        uint64_t v371 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)(a1 + v371[12]) = *(void *)(a2 + v371[12]);
        *(void *)(a1 + v371[16]) = *(void *)(a2 + v371[16]);
        uint64_t v372 = v371[20];
        uint64_t v373 = a1 + v372;
        uint64_t v374 = a2 + v372;
        uint64_t v96 = sub_1A56D4CB8();
        uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v97(v373, v374, v96);
        long long v375 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v373 + v375[13]) = *(unsigned char *)(v374 + v375[13]);
        uint64_t v376 = v375[14];
        uint64_t v377 = v373 + v376;
        uint64_t v378 = v374 + v376;
        uint64_t v379 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v379 - 8) + 16))(v377, v378, v379);
        uint64_t v380 = v375[15];
        uint64_t v104 = (void *)(v373 + v380);
        uint64_t v105 = (void *)(v374 + v380);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v381 = swift_getEnumCaseMultiPayload();
        if (v381 == 2) {
          goto LABEL_159;
        }
        if (v381 == 1) {
          goto LABEL_151;
        }
        goto LABEL_161;
      case 9u:
        uint64_t v80 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v81 = swift_getEnumCaseMultiPayload();
        if (v81 == 2)
        {
          unint64_t v250 = *(void *)(a2 + 8);
          if (v250 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v386 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v386;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v250;
          }
        }
        else if (v81 == 1)
        {
          uint64_t v251 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v251;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v81)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v80 - 8) + 64));
            goto LABEL_156;
          }
          uint64_t v82 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
        }
        swift_storeEnumTagMultiPayload();
LABEL_156:
        uint64_t v387 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)(a1 + v387[12]) = *(void *)(a2 + v387[12]);
        *(void *)(a1 + v387[16]) = *(void *)(a2 + v387[16]);
        uint64_t v388 = v387[20];
        uint64_t v389 = a1 + v388;
        uint64_t v390 = a2 + v388;
        uint64_t v96 = sub_1A56D4CB8();
        uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v97(v389, v390, v96);
        uint64_t v391 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v389 + v391[13]) = *(unsigned char *)(v390 + v391[13]);
        uint64_t v392 = v391[14];
        uint64_t v393 = v389 + v392;
        uint64_t v394 = v390 + v392;
        uint64_t v395 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v395 - 8) + 16))(v393, v394, v395);
        uint64_t v396 = v391[15];
        uint64_t v104 = (void *)(v389 + v396);
        uint64_t v105 = (void *)(v390 + v396);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v397 = swift_getEnumCaseMultiPayload();
        if (v397 == 2)
        {
LABEL_159:
          uint64_t v398 = v105[1];
          *uint64_t v104 = *v105;
          v104[1] = v398;
          uint64_t v399 = v105[3];
          v104[2] = v105[2];
          v104[3] = v399;
          v104[4] = v105[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v400 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v473 = v96;
          uint64_t v401 = (char *)v104 + v400;
          uint64_t v402 = (char *)v105 + v400;
          uint64_t v403 = *(void *)((char *)v105 + v400 + 8);
          *(void *)uint64_t v401 = *(void *)((char *)v105 + v400);
          *((void *)v401 + 1) = v403;
          uint64_t v404 = *(void *)((char *)v105 + v400 + 16);
          uint64_t v405 = *(void *)((char *)v105 + v400 + 24);
          uint64_t v406 = *((void *)v402 + 4);
          uint64_t v407 = *((void *)v402 + 5);
          uint64_t v469 = (void (*)(char *, char *, uint64_t))v97;
          unsigned __int8 v408 = v402[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v404, v405, v406, v407, v408);
          *((void *)v401 + 2) = v404;
          *((void *)v401 + 3) = v405;
          *((void *)v401 + 4) = v406;
          *((void *)v401 + 5) = v407;
          v401[48] = v408;
          v401[49] = v402[49];
          uint64_t v409 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v45 = &v401[v409];
          uint64_t v46 = &v402[v409];
          v469(&v401[v409], &v402[v409], v473);
          int v47 = &qword_1E96710D8;
          goto LABEL_160;
        }
        if (v397 == 1)
        {
LABEL_151:
          *(unsigned char *)uint64_t v104 = *(unsigned char *)v105;
          uint64_t v382 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          unsigned __int8 v383 = (char *)v104 + v382;
          unint64_t v384 = (char *)v105 + v382;
          v97((uint64_t)v104 + v382, (uint64_t)v384, v96);
          uint64_t v385 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v45 = &v383[v385];
          uint64_t v46 = &v384[v385];
          v97((uint64_t)v45, (uint64_t)v46, v96);
          int v47 = &qword_1E96710F0;
          goto LABEL_160;
        }
LABEL_161:
        uint64_t v470 = (void (*)(char *, char *, uint64_t))v97;
        uint64_t v474 = v96;
        uint64_t v411 = v105[1];
        *uint64_t v104 = *v105;
        v104[1] = v411;
        uint64_t v412 = v105[3];
        v104[2] = v105[2];
        v104[3] = v412;
        v104[4] = v105[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v413 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v414 = (char *)v104 + v413;
        uint64_t v415 = (char *)v105 + v413;
        uint64_t v416 = *(void *)((char *)v105 + v413 + 8);
        *(void *)uint64_t v414 = *(void *)((char *)v105 + v413);
        *((void *)v414 + 1) = v416;
        uint64_t v417 = *(void *)((char *)v105 + v413 + 16);
        uint64_t v418 = *((void *)v415 + 3);
        uint64_t v419 = *((void *)v415 + 4);
        uint64_t v420 = *((void *)v415 + 5);
        unsigned __int8 v421 = v415[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v417, v418, v419, v420, v421);
        *((void *)v414 + 2) = v417;
        *((void *)v414 + 3) = v418;
        *((void *)v414 + 4) = v419;
        *((void *)v414 + 5) = v420;
        v414[48] = v421;
        v414[49] = v415[49];
        uint64_t v422 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        long long v423 = &v414[v422];
        uint64_t v424 = &v415[v422];
        v470(&v414[v422], &v415[v422], v474);
        uint64_t v425 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v196 = &v423[v425];
        uint64_t v197 = &v424[v425];
        goto LABEL_162;
      case 0xAu:
        uint64_t v83 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v84 = swift_getEnumCaseMultiPayload();
        if (v84 == 2)
        {
          unint64_t v252 = *(void *)(a2 + 8);
          if (v252 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v427 = *(void *)a2;
            sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
            *(void *)a1 = v427;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v252;
          }
        }
        else if (v84 == 1)
        {
          uint64_t v253 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v253;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v84)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v83 - 8) + 64));
            goto LABEL_165;
          }
          uint64_t v85 = sub_1A56D4A28();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 16))(a1, a2, v85);
        }
        swift_storeEnumTagMultiPayload();
LABEL_165:
        uint64_t v428 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
        *(void *)(a1 + *(int *)(v428 + 48)) = *(void *)(a2 + *(int *)(v428 + 48));
        *(void *)(a1 + *(int *)(v428 + 64)) = *(void *)(a2 + *(int *)(v428 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xBu:
        uint64_t v86 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v86;
        uint64_t v87 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v87;
        uint64_t v88 = *(void *)(a2 + 32);
        uint64_t v89 = *(void *)(a2 + 40);
        char v90 = *(unsigned char *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v88;
        *(void *)(a1 + 40) = v89;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v90;
        uint64_t v91 = *(void *)(a2 + 56);
        unint64_t v92 = *(void *)(a2 + 64);
        sub_1A54E9E98(v91, v92);
        *(void *)(a1 + 56) = v91;
        *(void *)(a1 + 64) = v92;
        uint64_t v93 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
        uint64_t v94 = a1 + v93;
        uint64_t v95 = a2 + v93;
        uint64_t v96 = sub_1A56D4CB8();
        uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
        v97(v94, v95, v96);
        int v98 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v94 + v98[13]) = *(unsigned char *)(v95 + v98[13]);
        uint64_t v99 = v98[14];
        uint64_t v100 = v94 + v99;
        uint64_t v101 = v95 + v99;
        uint64_t v102 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
        uint64_t v103 = v98[15];
        uint64_t v104 = (void *)(v94 + v103);
        uint64_t v105 = (void *)(v95 + v103);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v106 = swift_getEnumCaseMultiPayload();
        if (v106 == 2) {
          goto LABEL_142;
        }
        if (v106 == 1) {
          goto LABEL_151;
        }
        goto LABEL_143;
      case 0xCu:
        uint64_t v107 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v107;
        uint64_t v108 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v108;
        uint64_t v109 = *(void *)(a2 + 32);
        uint64_t v110 = *(void *)(a2 + 40);
        char v111 = *(unsigned char *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v109;
        *(void *)(a1 + 40) = v110;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v111;
        uint64_t v113 = *(void *)(a2 + 56);
        unint64_t v112 = *(void *)(a2 + 64);
        sub_1A54E9E98(v113, v112);
        *(void *)(a1 + 56) = v113;
        *(void *)(a1 + 64) = v112;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xDu:
        uint64_t v114 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v114;
        uint64_t v115 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v115;
        uint64_t v116 = *(void *)(a2 + 32);
        uint64_t v117 = *(void *)(a2 + 40);
        char v118 = *(unsigned char *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v116;
        *(void *)(a1 + 40) = v117;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v118;
        uint64_t v119 = *(void *)(a2 + 56);
        unint64_t v120 = *(void *)(a2 + 64);
        sub_1A54E9E98(v119, v120);
        *(void *)(a1 + 56) = v119;
        *(void *)(a1 + 64) = v120;
        uint64_t v121 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
        uint64_t v122 = a1 + v121;
        uint64_t v123 = a2 + v121;
        uint64_t v30 = sub_1A56D4CB8();
        uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
        v31(v122, v123, v30);
        uint64_t v124 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        *(unsigned char *)(v122 + v124[13]) = *(unsigned char *)(v123 + v124[13]);
        uint64_t v125 = v124[14];
        uint64_t v126 = v122 + v125;
        uint64_t v127 = v123 + v125;
        uint64_t v128 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
        uint64_t v129 = v124[15];
        uint64_t v38 = (void *)(v122 + v129);
        char v39 = (void *)(v123 + v129);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v130 = swift_getEnumCaseMultiPayload();
        if (v130 == 2)
        {
LABEL_77:
          uint64_t v198 = v39[1];
          *uint64_t v38 = *v39;
          v38[1] = v198;
          uint64_t v199 = v39[3];
          void v38[2] = v39[2];
          v38[3] = v199;
          v38[4] = v39[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v200 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v201 = (char *)v38 + v200;
          uint64_t v202 = (char *)v39 + v200;
          uint64_t v203 = *(void *)((char *)v39 + v200 + 8);
          *(void *)uint64_t v201 = *(void *)((char *)v39 + v200);
          *((void *)v201 + 1) = v203;
          uint64_t v204 = *(void *)((char *)v39 + v200 + 16);
          uint64_t v205 = *(void *)((char *)v39 + v200 + 24);
          uint64_t v459 = (void (*)(char *, char *, uint64_t))v31;
          uint64_t v464 = v30;
          uint64_t v206 = *((void *)v202 + 4);
          uint64_t v207 = *((void *)v202 + 5);
          unsigned __int8 v208 = v202[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v204, v205, v206, v207, v208);
          *((void *)v201 + 2) = v204;
          *((void *)v201 + 3) = v205;
          *((void *)v201 + 4) = v206;
          *((void *)v201 + 5) = v207;
          v201[48] = v208;
          v201[49] = v202[49];
          uint64_t v209 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v45 = &v201[v209];
          uint64_t v46 = &v202[v209];
          v459(&v201[v209], &v202[v209], v464);
          int v47 = &qword_1E96710D8;
        }
        else
        {
          if (v130 != 1)
          {
LABEL_78:
            uint64_t v460 = (void (*)(char *, char *, uint64_t))v31;
            uint64_t v465 = v30;
            uint64_t v210 = v39[1];
            *uint64_t v38 = *v39;
            v38[1] = v210;
            uint64_t v211 = v39[3];
            void v38[2] = v39[2];
            v38[3] = v211;
            v38[4] = v39[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v212 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
            uint64_t v213 = (char *)v38 + v212;
            uint64_t v214 = (char *)v39 + v212;
            uint64_t v215 = *(void *)((char *)v39 + v212 + 8);
            *(void *)uint64_t v213 = *(void *)((char *)v39 + v212);
            *((void *)v213 + 1) = v215;
            uint64_t v216 = *(void *)((char *)v39 + v212 + 16);
            uint64_t v217 = *((void *)v214 + 3);
            uint64_t v218 = *((void *)v214 + 4);
            uint64_t v219 = *((void *)v214 + 5);
            unsigned __int8 v220 = v214[48];
            swift_bridgeObjectRetain();
            sub_1A551182C(v216, v217, v218, v219, v220);
            *((void *)v213 + 2) = v216;
            *((void *)v213 + 3) = v217;
            *((void *)v213 + 4) = v218;
            *((void *)v213 + 5) = v219;
            v213[48] = v220;
            v213[49] = v214[49];
            uint64_t v221 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
            uint64_t v222 = &v213[v221];
            long long v223 = &v214[v221];
            v460(&v213[v221], &v214[v221], v465);
            uint64_t v224 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
            uint64_t v196 = &v222[v224];
            uint64_t v197 = &v223[v224];
            goto LABEL_162;
          }
LABEL_11:
          *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
          uint64_t v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          uint64_t v42 = (char *)v38 + v41;
          uint64_t v43 = (char *)v39 + v41;
          v31((uint64_t)v38 + v41, (uint64_t)v43, v30);
          uint64_t v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          uint64_t v45 = &v42[v44];
          uint64_t v46 = &v43[v44];
          v31((uint64_t)v45, (uint64_t)v46, v30);
          int v47 = &qword_1E96710F0;
        }
LABEL_160:
        uint64_t v410 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v47) + 68);
        uint64_t v196 = &v45[v410];
        uint64_t v197 = &v46[v410];
LABEL_162:
        uint64_t v426 = *((void *)v197 + 1);
        *(void *)uint64_t v196 = *(void *)v197;
        *((void *)v196 + 1) = v426;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xEu:
        unint64_t v131 = *(void *)(a2 + 24);
        if (v131 >= 2)
        {
          uint64_t v150 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v150;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v131;
          uint64_t v151 = *(void *)(a2 + 32);
          uint64_t v152 = *(void *)(a2 + 40);
          char v153 = *(unsigned char *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          *(void *)(a1 + 32) = v151;
          *(void *)(a1 + 40) = v152;
          *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v153;
          uint64_t v154 = *(void *)(a2 + 56);
          unint64_t v155 = *(void *)(a2 + 64);
          sub_1A54E9E98(v154, v155);
          *(void *)(a1 + 56) = v154;
          *(void *)(a1 + 64) = v155;
        }
        else
        {
          long long v132 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v132;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          long long v133 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v133;
        }
        unint64_t v156 = *(void *)(a2 + 96);
        if (v156 >= 2)
        {
          uint64_t v159 = *(void *)(a2 + 80);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = v159;
          *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = v156;
          uint64_t v160 = *(void *)(a2 + 104);
          uint64_t v161 = *(void *)(a2 + 112);
          char v162 = *(unsigned char *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          *(void *)(a1 + 104) = v160;
          *(void *)(a1 + 112) = v161;
          *(unsigned char *)(a1 + 120) = v162;
          uint64_t v164 = *(void *)(a2 + 128);
          unint64_t v163 = *(void *)(a2 + 136);
          sub_1A54E9E98(v164, v163);
          *(void *)(a1 + 12_Block_object_dispose(&a9, 8) = v164;
          *(void *)(a1 + 136) = v163;
        }
        else
        {
          long long v157 = *(_OWORD *)(a2 + 120);
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 120) = v157;
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          long long v158 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 8_Block_object_dispose(&a9, 8) = v158;
        }
        goto LABEL_64;
      case 0xFu:
        uint64_t v134 = sub_1A56D4C28();
        uint64_t v135 = *(void *)(v134 - 8);
        long long v136 = *(void (**)(unint64_t, uint64_t, uint64_t))(v135 + 16);
        v136(a1, a2, v134);
        uint64_t v137 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v138 = v137[5];
        uint64_t v139 = (void *)(a1 + v138);
        uint64_t v140 = (const void *)(a2 + v138);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(a2 + v138, 1, v134))
        {
          uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          v136((unint64_t)v139, (uint64_t)v140, v134);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v139, 0, 1, v134);
        }
        *(unsigned char *)(a1 + v137[6]) = *(unsigned char *)(a2 + v137[6]);
        uint64_t v165 = v137[7];
        uint64_t v166 = (void *)(a1 + v165);
        int v167 = (void *)(a2 + v165);
        uint64_t v168 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v169 = *(void *)(v168 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v169 + 48))(v167, 1, v168))
        {
          uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v166, v167, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          uint64_t v177 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v178 = *(void *)(v177 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v178 + 48))(v167, 1, v177))
          {
            memcpy(v166, v167, *(void *)(v169 + 64));
          }
          else
          {
            int v254 = swift_getEnumCaseMultiPayload();
            if (v254 == 1)
            {
              uint64_t v429 = v167[1];
              *uint64_t v166 = *v167;
              v166[1] = v429;
              *((_OWORD *)v166 + 1) = *((_OWORD *)v167 + 1);
              uint64_t v430 = v167[5];
              v166[4] = v167[4];
              v166[5] = v430;
              v166[6] = v167[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v254)
            {
              memcpy(v166, v167, *(void *)(v178 + 64));
            }
            else
            {
              uint64_t v255 = v167[1];
              *uint64_t v166 = *v167;
              v166[1] = v255;
              swift_bridgeObjectRetain();
              uint64_t v256 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              long long v257 = (char *)v166 + v256;
              uint64_t v258 = (char *)v167 + v256;
              uint64_t v259 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v178 + 56))(v166, 0, 1, v177);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
        }
        char v431 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
        uint64_t v432 = v431[12];
        uint64_t v433 = (uint64_t *)(a1 + v432);
        uint64_t v434 = (uint64_t *)(a2 + v432);
        uint64_t v435 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v436 = swift_getEnumCaseMultiPayload();
        if (v436 == 2)
        {
          unint64_t v438 = v434[1];
          if (v438 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v433 = *(_OWORD *)v434;
          }
          else
          {
            uint64_t v440 = *v434;
            sub_1A54E9E98(v440, v438);
            *uint64_t v433 = v440;
            v433[1] = v438;
          }
        }
        else if (v436 == 1)
        {
          uint64_t v439 = v434[1];
          *uint64_t v433 = *v434;
          v433[1] = v439;
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v436)
          {
            memcpy(v433, v434, *(void *)(*(void *)(v435 - 8) + 64));
            goto LABEL_180;
          }
          uint64_t v437 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v437 - 8) + 16))(v433, v434, v437);
        }
        swift_storeEnumTagMultiPayload();
LABEL_180:
        uint64_t v441 = v431[16];
        uint64_t v442 = (void *)(a1 + v441);
        uint64_t v443 = (void *)(a2 + v441);
        uint64_t v444 = v443[1];
        *uint64_t v442 = *v443;
        v442[1] = v444;
        *(void *)(a1 + v431[20]) = *(void *)(a2 + v431[20]);
        *(void *)(a1 + v431[24]) = *(void *)(a2 + v431[24]);
        *(void *)(a1 + v431[28]) = *(void *)(a2 + v431[28]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        uint64_t v142 = sub_1A56D4C28();
        uint64_t v143 = *(void *)(v142 - 8);
        uint64_t v144 = *(void (**)(unint64_t, uint64_t, uint64_t))(v143 + 16);
        v144(a1, a2, v142);
        unint64_t v145 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v146 = v145[5];
        uint64_t v147 = (void *)(a1 + v146);
        uint64_t v148 = (const void *)(a2 + v146);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(a2 + v146, 1, v142))
        {
          uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          v144((unint64_t)v147, (uint64_t)v148, v142);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v143 + 56))(v147, 0, 1, v142);
        }
        *(unsigned char *)(a1 + v145[6]) = *(unsigned char *)(a2 + v145[6]);
        uint64_t v171 = v145[7];
        uint64_t v172 = (void *)(a1 + v171);
        uint64_t v173 = (void *)(a2 + v171);
        uint64_t v174 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v175 = *(void *)(v174 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v175 + 48))(v173, 1, v174))
        {
          uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v172, v173, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          uint64_t v179 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v180 = *(void *)(v179 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v180 + 48))(v173, 1, v179))
          {
            memcpy(v172, v173, *(void *)(v175 + 64));
          }
          else
          {
            int v260 = swift_getEnumCaseMultiPayload();
            if (v260 == 1)
            {
              uint64_t v445 = v173[1];
              *uint64_t v172 = *v173;
              v172[1] = v445;
              *((_OWORD *)v172 + 1) = *((_OWORD *)v173 + 1);
              uint64_t v446 = v173[5];
              v172[4] = v173[4];
              v172[5] = v446;
              v172[6] = v173[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v260)
            {
              memcpy(v172, v173, *(void *)(v180 + 64));
            }
            else
            {
              uint64_t v261 = v173[1];
              *uint64_t v172 = *v173;
              v172[1] = v261;
              swift_bridgeObjectRetain();
              uint64_t v262 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              long long v263 = (char *)v172 + v262;
              uint64_t v264 = (char *)v173 + v262;
              uint64_t v265 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 16))(v263, v264, v265);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v180 + 56))(v172, 0, 1, v179);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
        }
        uint64_t v447 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
        uint64_t v448 = (void *)(a1 + v447);
        uint64_t v449 = (void *)(a2 + v447);
        uint64_t v450 = type metadata accessor for SFAirDropReceive.Failure();
        int v451 = swift_getEnumCaseMultiPayload();
        if (v451 == 1)
        {
          uint64_t v457 = v449[1];
          *uint64_t v448 = *v449;
          v448[1] = v457;
          *((_OWORD *)v448 + 1) = *((_OWORD *)v449 + 1);
          uint64_t v458 = v449[5];
          v448[4] = v449[4];
          v448[5] = v458;
          v448[6] = v449[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v451)
        {
          memcpy(v448, v449, *(void *)(*(void *)(v450 - 8) + 64));
        }
        else
        {
          uint64_t v452 = v449[1];
          *uint64_t v448 = *v449;
          v448[1] = v452;
          swift_bridgeObjectRetain();
          uint64_t v453 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
          unint64_t v454 = (char *)v448 + v453;
          uint64_t v455 = (char *)v449 + v453;
          uint64_t v456 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 16))(v454, v455, v456);
          swift_storeEnumTagMultiPayload();
        }
LABEL_64:
        swift_storeEnumTagMultiPayload();
        return a1;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t _s8TransferV5StateOwxx(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_1A56D4CB8();
      unint64_t v4 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      uint64_t v6 = (char *)a1 + *(int *)(v5 + 56);
      uint64_t v7 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t v8 = (char *)a1 + *(int *)(v5 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2) {
        goto LABEL_11;
      }
      if (result != 1) {
        goto LABEL_10;
      }
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(a1[7], a1[8]);
      uint64_t v12 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
      uint64_t v13 = sub_1A56D4CB8();
      uint64_t v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
      v14(v12, v13);
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      uint64_t v16 = &v12[*(int *)(v15 + 56)];
      uint64_t v17 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      uint64_t v18 = &v12[*(int *)(v15 + 60)];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2) {
        goto LABEL_47;
      }
      if (result == 1) {
        goto LABEL_7;
      }
      goto LABEL_46;
    case 2:
      uint64_t v3 = sub_1A56D4CB8();
      unint64_t v4 = *(void (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      uint64_t v22 = (char *)a1 + *(int *)(v21 + 56);
      uint64_t v23 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      uint64_t v8 = (char *)a1 + *(int *)(v21 + 60);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2) {
        goto LABEL_11;
      }
      if (result == 1)
      {
LABEL_4:
        uint64_t v9 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48)];
        v4((uint64_t *)v9, v3);
        uint64_t v10 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52)];
        v4((uint64_t *)v10, v3);
        uint64_t v11 = &qword_1E96710F0;
        goto LABEL_97;
      }
LABEL_10:
      if (result) {
        return result;
      }
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v24 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80)];
      swift_bridgeObjectRelease();
      sub_1A5512C74(*((void *)v24 + 2), *((void *)v24 + 3), *((void *)v24 + 4), *((void *)v24 + 5), v24[48]);
      uint64_t v25 = &v24[*(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28)];
      v4((uint64_t *)v25, v3);
LABEL_96:
      uint64_t v11 = &qword_1E96710D8;
      goto LABEL_97;
    case 3:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          unint64_t v80 = a1[1];
          if (v80 >> 60 != 15) {
            sub_1A54EA09C(*a1, v80);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v27 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v27 - 8) + 8))(a1, v27);
          break;
      }
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      sub_1A54F7390(*(uint64_t *)((char *)a1 + *(int *)(v81 + 48)), *(uint64_t *)((char *)a1 + *(int *)(v81 + 48) + 8), *(uint64_t *)((char *)a1 + *(int *)(v81 + 48) + 16));
      goto LABEL_95;
    case 4:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v28 = swift_getEnumCaseMultiPayload();
      switch(v28)
      {
        case 2:
          unint64_t v82 = a1[1];
          if (v82 >> 60 != 15) {
            sub_1A54EA09C(*a1, v82);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v29 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
          break;
      }
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
LABEL_95:
      swift_bridgeObjectRelease();
      uint64_t v83 = (char *)a1 + *(int *)(v81 + 80);
      swift_bridgeObjectRelease();
      sub_1A5512C74(*((void *)v83 + 2), *((void *)v83 + 3), *((void *)v83 + 4), *((void *)v83 + 5), v83[48]);
      int v84 = &v83[*(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28)];
      uint64_t v85 = sub_1A56D4CB8();
      (*(void (**)(char *, uint64_t))(*(void *)(v85 - 8) + 8))(v84, v85);
      goto LABEL_96;
    case 5:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 2) {
        goto LABEL_72;
      }
      if (v30 == 1) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 6:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 2)
      {
LABEL_72:
        unint64_t v69 = a1[1];
        if (v69 >> 60 != 15) {
          sub_1A54EA09C(*a1, v69);
        }
      }
      else if (v30 == 1)
      {
LABEL_22:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_25:
        if (!v30)
        {
          uint64_t v31 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v31 - 8) + 8))(a1, v31);
        }
      }
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      swift_bridgeObjectRelease();
      uint64_t v38 = *(int *)(v70 + 64);
      goto LABEL_78;
    case 7:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v32 = swift_getEnumCaseMultiPayload();
      switch(v32)
      {
        case 2:
          unint64_t v86 = a1[1];
          if (v86 >> 60 != 15) {
            sub_1A54EA09C(*a1, v86);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v33 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v33 - 8) + 8))(a1, v33);
          break;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      goto LABEL_112;
    case 8:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 2) {
        goto LABEL_75;
      }
      if (v34 == 1) {
        goto LABEL_33;
      }
      goto LABEL_36;
    case 9:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 2)
      {
LABEL_75:
        unint64_t v71 = a1[1];
        if (v71 >> 60 != 15) {
          sub_1A54EA09C(*a1, v71);
        }
      }
      else if (v34 == 1)
      {
LABEL_33:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_36:
        if (!v34)
        {
          uint64_t v35 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v35 - 8) + 8))(a1, v35);
        }
      }
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = *(int *)(v72 + 80);
LABEL_78:
      uint64_t v73 = (char *)a1 + v38;
      uint64_t v13 = sub_1A56D4CB8();
      uint64_t v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
      v14(v73, v13);
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      int v75 = &v73[*(int *)(v74 + 56)];
      uint64_t v76 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v76 - 8) + 8))(v75, v76);
      uint64_t v18 = &v73[*(int *)(v74 + 60)];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2) {
        goto LABEL_81;
      }
      if (result == 1)
      {
        uint64_t v19 = &v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48)];
        v14(v19, v13);
        uint64_t v20 = &qword_1E96710E8;
        goto LABEL_85;
      }
      if (result) {
        return result;
      }
LABEL_81:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = &qword_1E9670D68;
      goto LABEL_82;
    case 10:
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v36 = swift_getEnumCaseMultiPayload();
      switch(v36)
      {
        case 2:
          unint64_t v87 = a1[1];
          if (v87 >> 60 != 15) {
            sub_1A54EA09C(*a1, v87);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v37 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v37 - 8) + 8))(a1, v37);
          break;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      swift_bridgeObjectRelease();
      goto LABEL_112;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(a1[7], a1[8]);
      uint64_t v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
      goto LABEL_78;
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      uint64_t v39 = a1[7];
      unint64_t v40 = a1[8];
      goto LABEL_52;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      sub_1A54EA09C(a1[7], a1[8]);
      uint64_t v41 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
      uint64_t v13 = sub_1A56D4CB8();
      uint64_t v14 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
      v14(v41, v13);
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      uint64_t v43 = &v41[*(int *)(v42 + 56)];
      uint64_t v44 = sub_1A56D4C28();
      (*(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
      uint64_t v18 = &v41[*(int *)(v42 + 60)];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2) {
        goto LABEL_47;
      }
      if (result == 1)
      {
LABEL_7:
        uint64_t v19 = &v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48)];
        v14(v19, v13);
        uint64_t v20 = &qword_1E9671100;
LABEL_85:
        uint64_t v79 = &v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(v20) + 52)];
        v14(v79, v13);
        uint64_t v11 = &qword_1E96710F0;
      }
      else
      {
LABEL_46:
        if (result) {
          return result;
        }
LABEL_47:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = &qword_1E9670D60;
LABEL_82:
        uint64_t v77 = &v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(v45) + 80)];
        swift_bridgeObjectRelease();
        sub_1A5512C74(*((void *)v77 + 2), *((void *)v77 + 3), *((void *)v77 + 4), *((void *)v77 + 5), v77[48]);
        int v78 = &v77[*(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28)];
        v14(v78, v13);
        uint64_t v11 = &qword_1E96710D8;
      }
LABEL_97:
      __swift_instantiateConcreteTypeFromMangledName(v11);
      return swift_release();
    case 14:
      if ((unint64_t)a1[3] >= 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A54E9EF0();
        uint64_t result = sub_1A54EA09C(a1[7], a1[8]);
      }
      if ((unint64_t)a1[12] < 2) {
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A54E9EF0();
      uint64_t v39 = a1[16];
      unint64_t v40 = a1[17];
LABEL_52:
      return sub_1A54EA09C(v39, v40);
    case 15:
      uint64_t v46 = sub_1A56D4C28();
      uint64_t v47 = *(void *)(v46 - 8);
      int v48 = *(void (**)(uint64_t *, uint64_t))(v47 + 8);
      v48(a1, v46);
      uint64_t v49 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v50 = (char *)a1 + *(int *)(v49 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v46)) {
        v48((uint64_t *)v50, v46);
      }
      uint64_t v51 = (char *)a1 + *(int *)(v49 + 28);
      uint64_t v52 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v51, 1, v52))
      {
        uint64_t v53 = type metadata accessor for SFAirDropReceive.Failure();
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v51, 1, v53))
        {
          int v92 = swift_getEnumCaseMultiPayload();
          if (v92 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v92)
          {
            swift_bridgeObjectRelease();
            uint64_t v93 = &v51[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48)];
            uint64_t v94 = sub_1A56D4A28();
            (*(void (**)(char *, uint64_t))(*(void *)(v94 - 8) + 8))(v93, v94);
          }
        }
      }
      int v54 = (uint64_t *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0) + 48));
      type metadata accessor for SFAirDropReceive.ItemDestination();
      int v55 = swift_getEnumCaseMultiPayload();
      switch(v55)
      {
        case 2:
          unint64_t v88 = v54[1];
          if (v88 >> 60 != 15) {
            sub_1A54EA09C(*v54, v88);
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v56 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t))(*(void *)(v56 - 8) + 8))(v54, v56);
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_112;
    case 16:
      uint64_t v57 = sub_1A56D4C28();
      uint64_t v58 = *(void *)(v57 - 8);
      int v59 = *(void (**)(uint64_t *, uint64_t))(v58 + 8);
      v59(a1, v57);
      uint64_t v60 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v61 = (char *)a1 + *(int *)(v60 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v61, 1, v57)) {
        v59((uint64_t *)v61, v57);
      }
      uint64_t v62 = (char *)a1 + *(int *)(v60 + 28);
      uint64_t v63 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v62, 1, v63))
      {
        uint64_t v64 = type metadata accessor for SFAirDropReceive.Failure();
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48))(v62, 1, v64))
        {
          int v89 = swift_getEnumCaseMultiPayload();
          if (v89 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else if (!v89)
          {
            swift_bridgeObjectRelease();
            char v90 = &v62[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48)];
            uint64_t v91 = sub_1A56D4A28();
            (*(void (**)(char *, uint64_t))(*(void *)(v91 - 8) + 8))(v90, v91);
          }
        }
      }
      uint64_t v65 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
      type metadata accessor for SFAirDropReceive.Failure();
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_112:
        return swift_bridgeObjectRelease();
      }
      else if (!result)
      {
        swift_bridgeObjectRelease();
        int v66 = &v65[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48)];
        uint64_t v67 = sub_1A56D4A28();
        uint64_t v68 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8);
        return v68(v66, v67);
      }
      return result;
    default:
      return result;
  }
}

uint64_t _s8TransferV5StateOwcp(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1A56D4CB8();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
      uint64_t v9 = v8[14];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = (uint64_t)a2 + v9;
      uint64_t v12 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      uint64_t v13 = v8[15];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (uint64_t *)((char *)a2 + v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2) {
        goto LABEL_71;
      }
      if (EnumCaseMultiPayload == 1) {
        goto LABEL_4;
      }
      uint64_t v475 = (void (*)(char *, char *, uint64_t))v7;
      uint64_t v187 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v187;
      uint64_t v188 = v15[3];
      v14[2] = v15[2];
      void v14[3] = v188;
      void v14[4] = v15[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v189 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      uint64_t v190 = (char *)v14 + v189;
      unsigned __int8 v191 = (char *)v15 + v189;
      uint64_t v192 = *(void *)((char *)v15 + v189 + 8);
      *(void *)uint64_t v190 = *(void *)((char *)v15 + v189);
      *((void *)v190 + 1) = v192;
      uint64_t v193 = *(void *)((char *)v15 + v189 + 16);
      uint64_t v194 = *((void *)v191 + 3);
      uint64_t v195 = *((void *)v191 + 4);
      uint64_t v196 = *((void *)v191 + 5);
      unsigned __int8 v197 = v191[48];
      swift_bridgeObjectRetain();
      sub_1A551182C(v193, v194, v195, v196, v197);
      *((void *)v190 + 2) = v193;
      *((void *)v190 + 3) = v194;
      *((void *)v190 + 4) = v195;
      *((void *)v190 + 5) = v196;
      v190[48] = v197;
      v190[49] = v191[49];
      uint64_t v198 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v199 = &v190[v198];
      uint64_t v200 = &v191[v198];
      v475(&v190[v198], &v191[v198], v6);
      uint64_t v201 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v202 = &v199[v201];
      uint64_t v203 = &v200[v201];
      goto LABEL_157;
    case 1u:
      uint64_t v24 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = v24;
      uint64_t v25 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v25;
      uint64_t v26 = a2[4];
      uint64_t v27 = a2[5];
      char v28 = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *(void *)(a1 + 32) = v26;
      *(void *)(a1 + 40) = v27;
      *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v28;
      uint64_t v29 = a2[7];
      unint64_t v30 = a2[8];
      sub_1A54E9E98(v29, v30);
      *(void *)(a1 + 56) = v29;
      *(void *)(a1 + 64) = v30;
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
      uint64_t v32 = a1 + v31;
      uint64_t v33 = (uint64_t)a2 + v31;
      uint64_t v34 = sub_1A56D4CB8();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
      v35(v32, v33, v34);
      int v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      *(unsigned char *)(v32 + v36[13]) = *(unsigned char *)(v33 + v36[13]);
      uint64_t v37 = v36[14];
      uint64_t v38 = v32 + v37;
      uint64_t v39 = v33 + v37;
      uint64_t v40 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      uint64_t v41 = v36[15];
      uint64_t v42 = (void *)(v32 + v41);
      uint64_t v43 = (void *)(v33 + v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v44 = swift_getEnumCaseMultiPayload();
      if (v44 == 2) {
        goto LABEL_73;
      }
      if (v44 == 1) {
        goto LABEL_8;
      }
      goto LABEL_74;
    case 2u:
      uint64_t v6 = sub_1A56D4CB8();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v49 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(a1 + v49[13]) = *((unsigned char *)a2 + v49[13]);
      uint64_t v50 = v49[14];
      uint64_t v51 = a1 + v50;
      uint64_t v52 = (uint64_t)a2 + v50;
      uint64_t v53 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      uint64_t v54 = v49[15];
      uint64_t v14 = (void *)(a1 + v54);
      uint64_t v15 = (uint64_t *)((char *)a2 + v54);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v55 = swift_getEnumCaseMultiPayload();
      if (v55 == 2)
      {
LABEL_71:
        uint64_t v175 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v175;
        uint64_t v176 = v15[3];
        v14[2] = v15[2];
        void v14[3] = v176;
        uint64_t v474 = (void (*)(char *, char *, uint64_t))v7;
        void v14[4] = v15[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v177 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v178 = (char *)v14 + v177;
        uint64_t v179 = (char *)v15 + v177;
        uint64_t v180 = *(void *)((char *)v15 + v177 + 8);
        *(void *)uint64_t v178 = *(void *)((char *)v15 + v177);
        *((void *)v178 + 1) = v180;
        uint64_t v181 = *(void *)((char *)v15 + v177 + 16);
        uint64_t v182 = *(void *)((char *)v15 + v177 + 24);
        uint64_t v183 = *((void *)v179 + 4);
        uint64_t v184 = *((void *)v179 + 5);
        unsigned __int8 v185 = v179[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v181, v182, v183, v184, v185);
        *((void *)v178 + 2) = v181;
        *((void *)v178 + 3) = v182;
        *((void *)v178 + 4) = v183;
        *((void *)v178 + 5) = v184;
        v178[48] = v185;
        v178[49] = v179[49];
        uint64_t v186 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v21 = &v178[v186];
        uint64_t v22 = &v179[v186];
        v474(&v178[v186], &v179[v186], v6);
        uint64_t v23 = &qword_1E96710D8;
        goto LABEL_148;
      }
      if (v55 == 1)
      {
LABEL_4:
        *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
        uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        uint64_t v18 = (char *)v14 + v17;
        uint64_t v19 = (char *)v15 + v17;
        v7((uint64_t)v14 + v17, (uint64_t *)v19, v6);
        uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
        uint64_t v21 = &v18[v20];
        uint64_t v22 = &v19[v20];
        v7((uint64_t)v21, (uint64_t *)v22, v6);
        uint64_t v23 = &qword_1E96710F0;
        goto LABEL_148;
      }
      uint64_t v478 = (void (*)(char *, char *, uint64_t))v7;
      uint64_t v231 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v231;
      uint64_t v232 = v15[3];
      v14[2] = v15[2];
      void v14[3] = v232;
      void v14[4] = v15[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v233 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      uint64_t v234 = (char *)v14 + v233;
      unsigned __int8 v235 = (char *)v15 + v233;
      uint64_t v236 = *(void *)((char *)v15 + v233 + 8);
      *(void *)uint64_t v234 = *(void *)((char *)v15 + v233);
      *((void *)v234 + 1) = v236;
      uint64_t v237 = *(void *)((char *)v15 + v233 + 16);
      uint64_t v238 = *(void *)((char *)v15 + v233 + 24);
      uint64_t v239 = *((void *)v235 + 4);
      uint64_t v240 = *((void *)v235 + 5);
      unsigned __int8 v241 = v235[48];
      swift_bridgeObjectRetain();
      sub_1A551182C(v237, v238, v239, v240, v241);
      *((void *)v234 + 2) = v237;
      *((void *)v234 + 3) = v238;
      *((void *)v234 + 4) = v239;
      *((void *)v234 + 5) = v240;
      v234[48] = v241;
      v234[49] = v235[49];
      uint64_t v242 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v243 = &v234[v242];
      unint64_t v244 = &v235[v242];
      v478(&v234[v242], &v235[v242], v6);
      uint64_t v245 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v202 = &v243[v245];
      uint64_t v203 = &v244[v245];
      goto LABEL_157;
    case 3u:
      uint64_t v56 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v57 = swift_getEnumCaseMultiPayload();
      if (v57 == 2)
      {
        unint64_t v246 = a2[1];
        if (v246 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v274 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v274;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v246;
        }
      }
      else if (v57 == 1)
      {
        uint64_t v247 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v247;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v57)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
          goto LABEL_121;
        }
        uint64_t v58 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
      }
      swift_storeEnumTagMultiPayload();
LABEL_121:
      uint64_t v275 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v276 = v275[12];
      long long v277 = (uint64_t *)(a1 + v276);
      uint64_t v278 = (uint64_t *)((char *)a2 + v276);
      uint64_t v279 = *v278;
      uint64_t v280 = v278[1];
      unint64_t v281 = v278[2];
      uint64_t v282 = v278[3];
      uint64_t v283 = v278[4];
      sub_1A551188C(*v278, v280, v281);
      *long long v277 = v279;
      v277[1] = v280;
      v277[2] = v281;
      v277[3] = v282;
      v277[4] = v283;
      uint64_t v284 = v275[16];
      uint64_t v285 = (void *)(a1 + v284);
      uint64_t v286 = (uint64_t *)((char *)a2 + v284);
      uint64_t v287 = v286[1];
      void *v285 = *v286;
      v285[1] = v287;
      uint64_t v288 = v275[20];
      uint64_t v289 = a1 + v288;
      uint64_t v290 = (uint64_t)a2 + v288;
      uint64_t v291 = *(uint64_t *)((char *)a2 + v288 + 8);
      *(void *)uint64_t v289 = *(uint64_t *)((char *)a2 + v288);
      *(void *)(v289 + _Block_object_dispose(&a9, 8) = v291;
      uint64_t v292 = *(uint64_t *)((char *)a2 + v288 + 16);
      uint64_t v293 = *(void *)(v290 + 24);
      uint64_t v294 = *(void *)(v290 + 32);
      uint64_t v295 = *(void *)(v290 + 40);
      LOBYTE(v282) = *(unsigned char *)(v290 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A551182C(v292, v293, v294, v295, v282);
      *(void *)(v289 + 16) = v292;
      *(void *)(v289 + 24) = v293;
      *(void *)(v289 + 32) = v294;
      *(void *)(v289 + 40) = v295;
      *(unsigned char *)(v289 + 4_Block_object_dispose(&a9, 8) = v282;
      *(unsigned char *)(v289 + 49) = *(unsigned char *)(v290 + 49);
      uint64_t v296 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v297 = v289 + v296;
      uint64_t v298 = v290 + v296;
      uint64_t v299 = sub_1A56D4CB8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v299 - 8) + 16))(v297, v298, v299);
      uint64_t v300 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v301 = (void *)(v297 + v300);
      uint64_t v302 = (void *)(v298 + v300);
      uint64_t v303 = v302[1];
      *uint64_t v301 = *v302;
      v301[1] = v303;
      swift_retain();
      goto LABEL_185;
    case 4u:
      uint64_t v59 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v60 = swift_getEnumCaseMultiPayload();
      if (v60 == 2)
      {
        unint64_t v248 = a2[1];
        if (v248 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v304 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v304;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v248;
        }
      }
      else if (v60 == 1)
      {
        uint64_t v249 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v249;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v60)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v59 - 8) + 64));
          goto LABEL_124;
        }
        uint64_t v61 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v61 - 8) + 16))(a1, a2, v61);
      }
      swift_storeEnumTagMultiPayload();
LABEL_124:
      uint64_t v305 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      *(void *)(a1 + v305[12]) = *(uint64_t *)((char *)a2 + v305[12]);
      *(void *)(a1 + v305[16]) = *(uint64_t *)((char *)a2 + v305[16]);
      uint64_t v306 = v305[20];
      uint64_t v307 = a1 + v306;
      uint64_t v308 = (uint64_t)a2 + v306;
      uint64_t v309 = *(uint64_t *)((char *)a2 + v306 + 8);
      *(void *)uint64_t v307 = *(uint64_t *)((char *)a2 + v306);
      *(void *)(v307 + _Block_object_dispose(&a9, 8) = v309;
      uint64_t v310 = *(uint64_t *)((char *)a2 + v306 + 16);
      uint64_t v311 = *(void *)(v308 + 24);
      uint64_t v312 = *(void *)(v308 + 32);
      uint64_t v313 = *(void *)(v308 + 40);
      unsigned __int8 v314 = *(unsigned char *)(v308 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A551182C(v310, v311, v312, v313, v314);
      *(void *)(v307 + 16) = v310;
      *(void *)(v307 + 24) = v311;
      *(void *)(v307 + 32) = v312;
      *(void *)(v307 + 40) = v313;
      *(unsigned char *)(v307 + 4_Block_object_dispose(&a9, 8) = v314;
      *(unsigned char *)(v307 + 49) = *(unsigned char *)(v308 + 49);
      uint64_t v315 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v316 = v307 + v315;
      uint64_t v317 = v308 + v315;
      uint64_t v318 = sub_1A56D4CB8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v318 - 8) + 16))(v316, v317, v318);
      uint64_t v319 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v320 = (void *)(v316 + v319);
      uint64_t v321 = (void *)(v317 + v319);
      uint64_t v322 = v321[1];
      void *v320 = *v321;
      v320[1] = v322;
      swift_retain();
      goto LABEL_185;
    case 5u:
      uint64_t v62 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v63 = swift_getEnumCaseMultiPayload();
      if (v63 == 2)
      {
        unint64_t v250 = a2[1];
        if (v250 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v323 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v323;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v250;
        }
      }
      else if (v63 == 1)
      {
        uint64_t v251 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v251;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v63)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v62 - 8) + 64));
          goto LABEL_127;
        }
        uint64_t v64 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
      }
      swift_storeEnumTagMultiPayload();
LABEL_127:
      uint64_t v324 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)(a1 + *(int *)(v324 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v324 + 48));
      uint64_t v325 = *(int *)(v324 + 64);
      uint64_t v326 = a1 + v325;
      uint64_t v327 = (uint64_t)a2 + v325;
      uint64_t v90 = sub_1A56D4CB8();
      uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      v91(v326, v327, v90);
      int v328 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v326 + v328[13]) = *(unsigned char *)(v327 + v328[13]);
      uint64_t v329 = v328[14];
      uint64_t v330 = v326 + v329;
      uint64_t v331 = v327 + v329;
      uint64_t v332 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v332 - 8) + 16))(v330, v331, v332);
      uint64_t v333 = v328[15];
      int v98 = (void *)(v326 + v333);
      uint64_t v99 = (void *)(v327 + v333);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v334 = swift_getEnumCaseMultiPayload();
      if (v334 == 2) {
        goto LABEL_137;
      }
      if (v334 == 1) {
        goto LABEL_136;
      }
      goto LABEL_138;
    case 6u:
      uint64_t v65 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v66 = swift_getEnumCaseMultiPayload();
      if (v66 == 2)
      {
        unint64_t v252 = a2[1];
        if (v252 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v335 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v335;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v252;
        }
      }
      else if (v66 == 1)
      {
        uint64_t v253 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v253;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v66)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v65 - 8) + 64));
          goto LABEL_134;
        }
        uint64_t v67 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
      }
      swift_storeEnumTagMultiPayload();
LABEL_134:
      uint64_t v336 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)(a1 + *(int *)(v336 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v336 + 48));
      uint64_t v337 = *(int *)(v336 + 64);
      uint64_t v338 = a1 + v337;
      uint64_t v339 = (uint64_t)a2 + v337;
      uint64_t v90 = sub_1A56D4CB8();
      uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      v91(v338, v339, v90);
      int v340 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v338 + v340[13]) = *(unsigned char *)(v339 + v340[13]);
      uint64_t v341 = v340[14];
      uint64_t v342 = v338 + v341;
      uint64_t v343 = v339 + v341;
      uint64_t v344 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v344 - 8) + 16))(v342, v343, v344);
      uint64_t v345 = v340[15];
      int v98 = (void *)(v338 + v345);
      uint64_t v99 = (void *)(v339 + v345);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v346 = swift_getEnumCaseMultiPayload();
      if (v346 == 2)
      {
LABEL_137:
        uint64_t v351 = v99[1];
        *int v98 = *v99;
        v98[1] = v351;
        uint64_t v352 = v99[3];
        v98[2] = v99[2];
        v98[3] = v352;
        uint64_t v479 = (void (*)(char *, char *, uint64_t))v91;
        v98[4] = v99[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v353 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v354 = (char *)v98 + v353;
        uint64_t v355 = (char *)v99 + v353;
        uint64_t v356 = *(void *)((char *)v99 + v353 + 8);
        *(void *)uint64_t v354 = *(void *)((char *)v99 + v353);
        *((void *)v354 + 1) = v356;
        uint64_t v357 = *(void *)((char *)v99 + v353 + 16);
        uint64_t v358 = *(void *)((char *)v99 + v353 + 24);
        uint64_t v359 = *((void *)v355 + 4);
        uint64_t v360 = *((void *)v355 + 5);
        unsigned __int8 v361 = v355[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v357, v358, v359, v360, v361);
        *((void *)v354 + 2) = v357;
        *((void *)v354 + 3) = v358;
        *((void *)v354 + 4) = v359;
        *((void *)v354 + 5) = v360;
        v354[48] = v361;
        v354[49] = v355[49];
        uint64_t v362 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v21 = &v354[v362];
        uint64_t v22 = &v355[v362];
        v479(&v354[v362], &v355[v362], v90);
        uint64_t v23 = &qword_1E96710D8;
        goto LABEL_148;
      }
      if (v346 == 1)
      {
LABEL_136:
        *(unsigned char *)int v98 = *(unsigned char *)v99;
        uint64_t v347 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        uint64_t v348 = (char *)v98 + v347;
        uint64_t v349 = (char *)v99 + v347;
        v91((uint64_t)v98 + v347, (uint64_t)v349, v90);
        uint64_t v350 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
        uint64_t v21 = &v348[v350];
        uint64_t v22 = &v349[v350];
        v91((uint64_t)v21, (uint64_t)v22, v90);
        uint64_t v23 = &qword_1E96710F0;
        goto LABEL_148;
      }
LABEL_138:
      uint64_t v480 = (void (*)(char *, char *, uint64_t))v91;
      uint64_t v363 = v99[1];
      *int v98 = *v99;
      v98[1] = v363;
      uint64_t v364 = v99[3];
      v98[2] = v99[2];
      v98[3] = v364;
      v98[4] = v99[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v365 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      int v366 = (char *)v98 + v365;
      uint64_t v367 = (char *)v99 + v365;
      uint64_t v368 = *(void *)((char *)v99 + v365 + 8);
      *(void *)int v366 = *(void *)((char *)v99 + v365);
      *((void *)v366 + 1) = v368;
      uint64_t v369 = *(void *)((char *)v99 + v365 + 16);
      uint64_t v370 = *(void *)((char *)v99 + v365 + 24);
      uint64_t v371 = *((void *)v367 + 4);
      uint64_t v372 = *((void *)v367 + 5);
      unsigned __int8 v373 = v367[48];
      swift_bridgeObjectRetain();
      sub_1A551182C(v369, v370, v371, v372, v373);
      *((void *)v366 + 2) = v369;
      *((void *)v366 + 3) = v370;
      *((void *)v366 + 4) = v371;
      *((void *)v366 + 5) = v372;
      v366[48] = v373;
      v366[49] = v367[49];
      uint64_t v374 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      long long v375 = &v366[v374];
      uint64_t v376 = &v367[v374];
      v480(&v366[v374], &v367[v374], v90);
      uint64_t v377 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v202 = &v375[v377];
      uint64_t v203 = &v376[v377];
      goto LABEL_157;
    case 7u:
      uint64_t v68 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v69 = swift_getEnumCaseMultiPayload();
      if (v69 == 2)
      {
        unint64_t v254 = a2[1];
        if (v254 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v378 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v378;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v254;
        }
      }
      else if (v69 == 1)
      {
        uint64_t v255 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v255;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v69)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v68 - 8) + 64));
          goto LABEL_141;
        }
        uint64_t v70 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
      }
      swift_storeEnumTagMultiPayload();
LABEL_141:
      uint64_t v379 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      *(void *)(a1 + *(int *)(v379 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v379 + 48));
      *(void *)(a1 + *(int *)(v379 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v379 + 64));
      swift_bridgeObjectRetain();
      goto LABEL_185;
    case 8u:
      uint64_t v71 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v72 = swift_getEnumCaseMultiPayload();
      if (v72 == 2)
      {
        unint64_t v256 = a2[1];
        if (v256 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v380 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v380;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v256;
        }
      }
      else if (v72 == 1)
      {
        uint64_t v257 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v257;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v72)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v71 - 8) + 64));
          goto LABEL_144;
        }
        uint64_t v73 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
      }
      swift_storeEnumTagMultiPayload();
LABEL_144:
      int v381 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)(a1 + v381[12]) = *(uint64_t *)((char *)a2 + v381[12]);
      *(void *)(a1 + v381[16]) = *(uint64_t *)((char *)a2 + v381[16]);
      uint64_t v382 = v381[20];
      uint64_t v383 = a1 + v382;
      uint64_t v384 = (uint64_t)a2 + v382;
      uint64_t v385 = sub_1A56D4CB8();
      uint64_t v386 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v385 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v386(v383, v384, v385);
      uint64_t v387 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v383 + v387[13]) = *(unsigned char *)(v384 + v387[13]);
      uint64_t v388 = v387[14];
      uint64_t v389 = v383 + v388;
      uint64_t v390 = v384 + v388;
      uint64_t v391 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v391 - 8) + 16))(v389, v390, v391);
      uint64_t v392 = v387[15];
      uint64_t v393 = (void *)(v383 + v392);
      uint64_t v394 = (void *)(v384 + v392);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v395 = swift_getEnumCaseMultiPayload();
      if (v395 == 2) {
        goto LABEL_147;
      }
      if (v395 == 1) {
        goto LABEL_146;
      }
      goto LABEL_156;
    case 9u:
      uint64_t v74 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v75 = swift_getEnumCaseMultiPayload();
      if (v75 == 2)
      {
        unint64_t v258 = a2[1];
        if (v258 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v413 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v413;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v258;
        }
      }
      else if (v75 == 1)
      {
        uint64_t v259 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v259;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v75)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v74 - 8) + 64));
          goto LABEL_152;
        }
        uint64_t v76 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
      }
      swift_storeEnumTagMultiPayload();
LABEL_152:
      uint64_t v414 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)(a1 + v414[12]) = *(uint64_t *)((char *)a2 + v414[12]);
      *(void *)(a1 + v414[16]) = *(uint64_t *)((char *)a2 + v414[16]);
      uint64_t v415 = v414[20];
      uint64_t v416 = a1 + v415;
      uint64_t v417 = (uint64_t)a2 + v415;
      uint64_t v385 = sub_1A56D4CB8();
      uint64_t v386 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v385 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v386(v416, v417, v385);
      uint64_t v418 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v416 + v418[13]) = *(unsigned char *)(v417 + v418[13]);
      uint64_t v419 = v418[14];
      uint64_t v420 = v416 + v419;
      uint64_t v421 = v417 + v419;
      uint64_t v422 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v422 - 8) + 16))(v420, v421, v422);
      uint64_t v423 = v418[15];
      uint64_t v393 = (void *)(v416 + v423);
      uint64_t v394 = (void *)(v417 + v423);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v424 = swift_getEnumCaseMultiPayload();
      if (v424 == 2)
      {
LABEL_147:
        uint64_t v400 = v394[1];
        *uint64_t v393 = *v394;
        v393[1] = v400;
        uint64_t v401 = v394[3];
        v393[2] = v394[2];
        v393[3] = v401;
        uint64_t v481 = (void (*)(char *, char *, uint64_t))v386;
        v393[4] = v394[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v402 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v403 = (char *)v393 + v402;
        uint64_t v404 = (char *)v394 + v402;
        uint64_t v405 = *(void *)((char *)v394 + v402 + 8);
        *(void *)uint64_t v403 = *(void *)((char *)v394 + v402);
        *((void *)v403 + 1) = v405;
        uint64_t v406 = *(void *)((char *)v394 + v402 + 16);
        uint64_t v407 = *(void *)((char *)v394 + v402 + 24);
        uint64_t v408 = *((void *)v404 + 4);
        uint64_t v409 = *((void *)v404 + 5);
        unsigned __int8 v410 = v404[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v406, v407, v408, v409, v410);
        *((void *)v403 + 2) = v406;
        *((void *)v403 + 3) = v407;
        *((void *)v403 + 4) = v408;
        *((void *)v403 + 5) = v409;
        v403[48] = v410;
        v403[49] = v404[49];
        uint64_t v411 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v21 = &v403[v411];
        uint64_t v22 = &v404[v411];
        v481(&v403[v411], &v404[v411], v385);
        uint64_t v23 = &qword_1E96710D8;
        goto LABEL_148;
      }
      if (v424 == 1)
      {
LABEL_146:
        *(unsigned char *)uint64_t v393 = *(unsigned char *)v394;
        uint64_t v396 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        int v397 = (char *)v393 + v396;
        uint64_t v398 = (char *)v394 + v396;
        v386((uint64_t)v393 + v396, (uint64_t)v398, v385);
        uint64_t v399 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
        uint64_t v21 = &v397[v399];
        uint64_t v22 = &v398[v399];
        v386((uint64_t)v21, (uint64_t)v22, v385);
        uint64_t v23 = &qword_1E96710F0;
        goto LABEL_148;
      }
LABEL_156:
      unsigned __int8 v482 = (void (*)(char *, char *, uint64_t))v386;
      uint64_t v425 = v394[1];
      *uint64_t v393 = *v394;
      v393[1] = v425;
      uint64_t v426 = v394[3];
      v393[2] = v394[2];
      v393[3] = v426;
      v393[4] = v394[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v427 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      uint64_t v428 = (char *)v393 + v427;
      uint64_t v429 = (char *)v394 + v427;
      uint64_t v430 = *(void *)((char *)v394 + v427 + 8);
      *(void *)uint64_t v428 = *(void *)((char *)v394 + v427);
      *((void *)v428 + 1) = v430;
      uint64_t v431 = *(void *)((char *)v394 + v427 + 16);
      uint64_t v432 = *(void *)((char *)v394 + v427 + 24);
      uint64_t v433 = *((void *)v429 + 4);
      uint64_t v434 = *((void *)v429 + 5);
      unsigned __int8 v435 = v429[48];
      swift_bridgeObjectRetain();
      sub_1A551182C(v431, v432, v433, v434, v435);
      *((void *)v428 + 2) = v431;
      *((void *)v428 + 3) = v432;
      *((void *)v428 + 4) = v433;
      *((void *)v428 + 5) = v434;
      v428[48] = v435;
      v428[49] = v429[49];
      uint64_t v436 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v437 = &v428[v436];
      unint64_t v438 = &v429[v436];
      v482(&v428[v436], &v429[v436], v385);
      uint64_t v439 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v202 = &v437[v439];
      uint64_t v203 = &v438[v439];
      goto LABEL_157;
    case 0xAu:
      uint64_t v77 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v78 = swift_getEnumCaseMultiPayload();
      if (v78 == 2)
      {
        unint64_t v260 = a2[1];
        if (v260 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v441 = *a2;
          sub_1A54E9E98(*a2, a2[1]);
          *(void *)a1 = v441;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = v260;
        }
      }
      else if (v78 == 1)
      {
        uint64_t v261 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v261;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v78)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v77 - 8) + 64));
          goto LABEL_160;
        }
        uint64_t v79 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
      }
      swift_storeEnumTagMultiPayload();
LABEL_160:
      uint64_t v442 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      *(void *)(a1 + *(int *)(v442 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v442 + 48));
      *(void *)(a1 + *(int *)(v442 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v442 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_185;
    case 0xBu:
      uint64_t v80 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = v80;
      uint64_t v81 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v81;
      uint64_t v82 = a2[4];
      uint64_t v83 = a2[5];
      char v84 = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *(void *)(a1 + 32) = v82;
      *(void *)(a1 + 40) = v83;
      *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v84;
      uint64_t v85 = a2[7];
      unint64_t v86 = a2[8];
      sub_1A54E9E98(v85, v86);
      *(void *)(a1 + 56) = v85;
      *(void *)(a1 + 64) = v86;
      uint64_t v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
      uint64_t v88 = a1 + v87;
      uint64_t v89 = (uint64_t)a2 + v87;
      uint64_t v90 = sub_1A56D4CB8();
      uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16);
      v91(v88, v89, v90);
      int v92 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v88 + v92[13]) = *(unsigned char *)(v89 + v92[13]);
      uint64_t v93 = v92[14];
      uint64_t v94 = v88 + v93;
      uint64_t v95 = v89 + v93;
      uint64_t v96 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
      uint64_t v97 = v92[15];
      int v98 = (void *)(v88 + v97);
      uint64_t v99 = (void *)(v89 + v97);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int v100 = swift_getEnumCaseMultiPayload();
      if (v100 == 2) {
        goto LABEL_137;
      }
      if (v100 == 1) {
        goto LABEL_136;
      }
      goto LABEL_138;
    case 0xCu:
      uint64_t v101 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = v101;
      uint64_t v102 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v102;
      uint64_t v103 = a2[4];
      uint64_t v104 = a2[5];
      char v105 = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *(void *)(a1 + 32) = v103;
      *(void *)(a1 + 40) = v104;
      *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v105;
      uint64_t v106 = a2[7];
      unint64_t v107 = a2[8];
      sub_1A54E9E98(v106, v107);
      *(void *)(a1 + 56) = v106;
      *(void *)(a1 + 64) = v107;
      goto LABEL_185;
    case 0xDu:
      uint64_t v108 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = v108;
      uint64_t v109 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v109;
      uint64_t v110 = a2[4];
      uint64_t v111 = a2[5];
      char v112 = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A54E866C();
      *(void *)(a1 + 32) = v110;
      *(void *)(a1 + 40) = v111;
      *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v112;
      uint64_t v113 = a2[7];
      unint64_t v114 = a2[8];
      sub_1A54E9E98(v113, v114);
      *(void *)(a1 + 56) = v113;
      *(void *)(a1 + 64) = v114;
      uint64_t v115 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
      uint64_t v116 = a1 + v115;
      uint64_t v117 = (uint64_t)a2 + v115;
      uint64_t v34 = sub_1A56D4CB8();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
      v35(v116, v117, v34);
      char v118 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      *(unsigned char *)(v116 + v118[13]) = *(unsigned char *)(v117 + v118[13]);
      uint64_t v119 = v118[14];
      uint64_t v120 = v116 + v119;
      uint64_t v121 = v117 + v119;
      uint64_t v122 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
      uint64_t v123 = v118[15];
      uint64_t v42 = (void *)(v116 + v123);
      uint64_t v43 = (void *)(v117 + v123);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      int v124 = swift_getEnumCaseMultiPayload();
      if (v124 == 2)
      {
LABEL_73:
        uint64_t v204 = v43[1];
        *uint64_t v42 = *v43;
        v42[1] = v204;
        uint64_t v205 = v43[3];
        v42[2] = v43[2];
        v42[3] = v205;
        uint64_t v476 = (void (*)(char *, char *, uint64_t))v35;
        v42[4] = v43[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v206 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v207 = (char *)v42 + v206;
        unsigned __int8 v208 = (char *)v43 + v206;
        uint64_t v209 = *(void *)((char *)v43 + v206 + 8);
        *(void *)uint64_t v207 = *(void *)((char *)v43 + v206);
        *((void *)v207 + 1) = v209;
        uint64_t v210 = *(void *)((char *)v43 + v206 + 16);
        uint64_t v211 = *(void *)((char *)v43 + v206 + 24);
        uint64_t v212 = *((void *)v208 + 4);
        uint64_t v213 = *((void *)v208 + 5);
        unsigned __int8 v214 = v208[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v210, v211, v212, v213, v214);
        *((void *)v207 + 2) = v210;
        *((void *)v207 + 3) = v211;
        *((void *)v207 + 4) = v212;
        *((void *)v207 + 5) = v213;
        v207[48] = v214;
        v207[49] = v208[49];
        uint64_t v215 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v21 = &v207[v215];
        uint64_t v22 = &v208[v215];
        v476(&v207[v215], &v208[v215], v34);
        uint64_t v23 = &qword_1E96710D8;
      }
      else
      {
        if (v124 != 1)
        {
LABEL_74:
          uint64_t v477 = (void (*)(char *, char *, uint64_t))v35;
          uint64_t v216 = v43[1];
          *uint64_t v42 = *v43;
          v42[1] = v216;
          uint64_t v217 = v43[3];
          v42[2] = v43[2];
          v42[3] = v217;
          v42[4] = v43[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v218 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v219 = (char *)v42 + v218;
          unsigned __int8 v220 = (char *)v43 + v218;
          uint64_t v221 = *(void *)((char *)v43 + v218 + 8);
          *(void *)uint64_t v219 = *(void *)((char *)v43 + v218);
          *((void *)v219 + 1) = v221;
          uint64_t v222 = *(void *)((char *)v43 + v218 + 16);
          uint64_t v223 = *(void *)((char *)v43 + v218 + 24);
          uint64_t v224 = *((void *)v220 + 4);
          uint64_t v225 = *((void *)v220 + 5);
          unsigned __int8 v226 = v220[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v222, v223, v224, v225, v226);
          *((void *)v219 + 2) = v222;
          *((void *)v219 + 3) = v223;
          *((void *)v219 + 4) = v224;
          *((void *)v219 + 5) = v225;
          v219[48] = v226;
          v219[49] = v220[49];
          uint64_t v227 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v228 = &v219[v227];
          long long v229 = &v220[v227];
          v477(&v219[v227], &v220[v227], v34);
          uint64_t v230 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v202 = &v228[v230];
          uint64_t v203 = &v229[v230];
          goto LABEL_157;
        }
LABEL_8:
        *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
        uint64_t v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
        uint64_t v46 = (char *)v42 + v45;
        uint64_t v47 = (char *)v43 + v45;
        v35((uint64_t)v42 + v45, (uint64_t)v47, v34);
        uint64_t v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
        uint64_t v21 = &v46[v48];
        uint64_t v22 = &v47[v48];
        v35((uint64_t)v21, (uint64_t)v22, v34);
        uint64_t v23 = &qword_1E96710F0;
      }
LABEL_148:
      uint64_t v412 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v23) + 68);
      uint64_t v202 = &v21[v412];
      uint64_t v203 = &v22[v412];
LABEL_157:
      uint64_t v440 = *((void *)v203 + 1);
      *(void *)uint64_t v202 = *(void *)v203;
      *((void *)v202 + 1) = v440;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_185;
    case 0xEu:
      unint64_t v125 = a2[3];
      if (v125 >= 2)
      {
        uint64_t v144 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = v144;
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v125;
        uint64_t v145 = a2[4];
        uint64_t v146 = a2[5];
        char v147 = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v145;
        *(void *)(a1 + 40) = v146;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v147;
        uint64_t v148 = a2[7];
        unint64_t v149 = a2[8];
        sub_1A54E9E98(v148, v149);
        *(void *)(a1 + 56) = v148;
        *(void *)(a1 + 64) = v149;
      }
      else
      {
        long long v126 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v126;
        *(void *)(a1 + 64) = a2[8];
        long long v127 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v127;
      }
      unint64_t v150 = a2[12];
      if (v150 >= 2)
      {
        uint64_t v153 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v153;
        *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = a2[11];
        *(void *)(a1 + 96) = v150;
        uint64_t v154 = a2[13];
        uint64_t v155 = a2[14];
        char v156 = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 104) = v154;
        *(void *)(a1 + 112) = v155;
        *(unsigned char *)(a1 + 120) = v156;
        uint64_t v157 = a2[16];
        unint64_t v158 = a2[17];
        sub_1A54E9E98(v157, v158);
        *(void *)(a1 + 12_Block_object_dispose(&a9, 8) = v157;
        *(void *)(a1 + 136) = v158;
      }
      else
      {
        long long v151 = *(_OWORD *)(a2 + 15);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 120) = v151;
        *(void *)(a1 + 136) = a2[17];
        long long v152 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 8_Block_object_dispose(&a9, 8) = v152;
      }
      goto LABEL_185;
    case 0xFu:
      uint64_t v128 = sub_1A56D4C28();
      uint64_t v129 = *(void *)(v128 - 8);
      int v130 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v129 + 16);
      v130(a1, a2, v128);
      unint64_t v131 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v132 = v131[5];
      long long v133 = (void *)(a1 + v132);
      uint64_t v134 = (char *)a2 + v132;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))((uint64_t)a2 + v132, 1, v128))
      {
        uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
      }
      else
      {
        v130((uint64_t)v133, (uint64_t *)v134, v128);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v133, 0, 1, v128);
      }
      *(unsigned char *)(a1 + v131[6]) = *((unsigned char *)a2 + v131[6]);
      uint64_t v159 = v131[7];
      uint64_t v160 = (void *)(a1 + v159);
      uint64_t v161 = (uint64_t *)((char *)a2 + v159);
      uint64_t v162 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v163 = *(void *)(v162 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
      {
        uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
      }
      else
      {
        uint64_t v171 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v172 = *(void *)(v171 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v172 + 48))(v161, 1, v171))
        {
          memcpy(v160, v161, *(void *)(v163 + 64));
        }
        else
        {
          int v262 = swift_getEnumCaseMultiPayload();
          if (v262 == 1)
          {
            uint64_t v443 = v161[1];
            *uint64_t v160 = *v161;
            v160[1] = v443;
            *((_OWORD *)v160 + 1) = *((_OWORD *)v161 + 1);
            uint64_t v444 = v161[5];
            v160[4] = v161[4];
            v160[5] = v444;
            v160[6] = v161[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v262)
          {
            memcpy(v160, v161, *(void *)(v172 + 64));
          }
          else
          {
            uint64_t v263 = v161[1];
            *uint64_t v160 = *v161;
            v160[1] = v263;
            swift_bridgeObjectRetain();
            uint64_t v264 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            uint64_t v265 = (char *)v160 + v264;
            uint64_t v266 = (char *)v161 + v264;
            uint64_t v267 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v265, v266, v267);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v172 + 56))(v160, 0, 1, v171);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
      }
      uint64_t v445 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v446 = v445[12];
      uint64_t v447 = (uint64_t *)(a1 + v446);
      uint64_t v448 = (uint64_t *)((char *)a2 + v446);
      uint64_t v449 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int v450 = swift_getEnumCaseMultiPayload();
      if (v450 == 2)
      {
        unint64_t v452 = v448[1];
        if (v452 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v447 = *(_OWORD *)v448;
        }
        else
        {
          uint64_t v454 = *v448;
          sub_1A54E9E98(*v448, v448[1]);
          *uint64_t v447 = v454;
          v447[1] = v452;
        }
      }
      else if (v450 == 1)
      {
        uint64_t v453 = v448[1];
        *uint64_t v447 = *v448;
        v447[1] = v453;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v450)
        {
          memcpy(v447, v448, *(void *)(*(void *)(v449 - 8) + 64));
          goto LABEL_175;
        }
        uint64_t v451 = sub_1A56D4A28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v451 - 8) + 16))(v447, v448, v451);
      }
      swift_storeEnumTagMultiPayload();
LABEL_175:
      uint64_t v455 = v445[16];
      uint64_t v456 = (void *)(a1 + v455);
      uint64_t v457 = (uint64_t *)((char *)a2 + v455);
      uint64_t v458 = v457[1];
      *uint64_t v456 = *v457;
      v456[1] = v458;
      *(void *)(a1 + v445[20]) = *(uint64_t *)((char *)a2 + v445[20]);
      *(void *)(a1 + v445[24]) = *(uint64_t *)((char *)a2 + v445[24]);
      *(void *)(a1 + v445[28]) = *(uint64_t *)((char *)a2 + v445[28]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_185:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x10u:
      uint64_t v136 = sub_1A56D4C28();
      uint64_t v137 = *(void *)(v136 - 8);
      uint64_t v138 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v137 + 16);
      v138(a1, a2, v136);
      uint64_t v139 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v140 = v139[5];
      uint64_t v141 = (void *)(a1 + v140);
      uint64_t v142 = (char *)a2 + v140;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))((uint64_t)a2 + v140, 1, v136))
      {
        uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v141, v142, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        v138((uint64_t)v141, (uint64_t *)v142, v136);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v141, 0, 1, v136);
      }
      *(unsigned char *)(a1 + v139[6]) = *((unsigned char *)a2 + v139[6]);
      uint64_t v165 = v139[7];
      uint64_t v166 = (void *)(a1 + v165);
      int v167 = (uint64_t *)((char *)a2 + v165);
      uint64_t v168 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v169 = *(void *)(v168 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v169 + 48))(v167, 1, v168))
      {
        uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v166, v167, *(void *)(*(void *)(v170 - 8) + 64));
      }
      else
      {
        uint64_t v173 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v174 = *(void *)(v173 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v174 + 48))(v167, 1, v173))
        {
          memcpy(v166, v167, *(void *)(v169 + 64));
        }
        else
        {
          int v268 = swift_getEnumCaseMultiPayload();
          if (v268 == 1)
          {
            uint64_t v459 = v167[1];
            *uint64_t v166 = *v167;
            v166[1] = v459;
            *((_OWORD *)v166 + 1) = *((_OWORD *)v167 + 1);
            uint64_t v460 = v167[5];
            v166[4] = v167[4];
            v166[5] = v460;
            v166[6] = v167[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v268)
          {
            memcpy(v166, v167, *(void *)(v174 + 64));
          }
          else
          {
            uint64_t v269 = v167[1];
            *uint64_t v166 = *v167;
            v166[1] = v269;
            swift_bridgeObjectRetain();
            uint64_t v270 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            uint64_t v271 = (char *)v166 + v270;
            uint64_t v272 = (char *)v167 + v270;
            uint64_t v273 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v271, v272, v273);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v174 + 56))(v166, 0, 1, v173);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v168);
      }
      uint64_t v461 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
      uint64_t v462 = (void *)(a1 + v461);
      uint64_t v463 = (uint64_t *)((char *)a2 + v461);
      uint64_t v464 = type metadata accessor for SFAirDropReceive.Failure();
      int v465 = swift_getEnumCaseMultiPayload();
      if (v465 == 1)
      {
        uint64_t v471 = v463[1];
        *uint64_t v462 = *v463;
        v462[1] = v471;
        *((_OWORD *)v462 + 1) = *((_OWORD *)v463 + 1);
        uint64_t v472 = v463[5];
        v462[4] = v463[4];
        v462[5] = v472;
        v462[6] = v463[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (v465)
      {
        memcpy(v462, v463, *(void *)(*(void *)(v464 - 8) + 64));
      }
      else
      {
        uint64_t v466 = v463[1];
        *uint64_t v462 = *v463;
        v462[1] = v466;
        swift_bridgeObjectRetain();
        uint64_t v467 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
        uint64_t v468 = (char *)v462 + v467;
        uint64_t v469 = (char *)v463 + v467;
        uint64_t v470 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v470 - 8) + 16))(v468, v469, v470);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_185;
    default:
      memcpy((void *)a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t _s8TransferV5StateOwca(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_1A54F7200(a1, type metadata accessor for SFAirDropReceive.Transfer.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1A56D4CB8();
        uint64_t v7 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
        uint64_t v9 = v8[14];
        uint64_t v10 = a1 + v9;
        uint64_t v11 = (uint64_t)a2 + v9;
        uint64_t v12 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        uint64_t v13 = v8[15];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (uint64_t *)((char *)a2 + v13);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2) {
          goto LABEL_76;
        }
        if (EnumCaseMultiPayload != 1) {
          goto LABEL_73;
        }
        goto LABEL_12;
      case 1u:
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        uint64_t v17 = a2[4];
        uint64_t v18 = a2[5];
        char v19 = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v17;
        *(void *)(a1 + 40) = v18;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v19;
        uint64_t v20 = a2[7];
        unint64_t v21 = a2[8];
        sub_1A54E9E98(v20, v21);
        *(void *)(a1 + 56) = v20;
        *(void *)(a1 + 64) = v21;
        uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
        uint64_t v23 = a1 + v22;
        uint64_t v24 = (uint64_t)a2 + v22;
        uint64_t v25 = sub_1A56D4CB8();
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
        v26(v23, v24, v25);
        uint64_t v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        *(unsigned char *)(v23 + v27[13]) = *(unsigned char *)(v24 + v27[13]);
        uint64_t v28 = v27[14];
        uint64_t v29 = v23 + v28;
        uint64_t v30 = v24 + v28;
        uint64_t v31 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        uint64_t v32 = v27[15];
        uint64_t v33 = (void *)(v23 + v32);
        uint64_t v34 = (void *)(v24 + v32);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v35 = swift_getEnumCaseMultiPayload();
        if (v35 == 2) {
          goto LABEL_74;
        }
        if (v35 == 1) {
          goto LABEL_9;
        }
        goto LABEL_75;
      case 2u:
        uint64_t v6 = sub_1A56D4CB8();
        uint64_t v7 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(a1 + v43[13]) = *((unsigned char *)a2 + v43[13]);
        uint64_t v44 = v43[14];
        uint64_t v45 = a1 + v44;
        uint64_t v46 = (uint64_t)a2 + v44;
        uint64_t v47 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        uint64_t v48 = v43[15];
        uint64_t v14 = (void *)(a1 + v48);
        uint64_t v15 = (uint64_t *)((char *)a2 + v48);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v49 = swift_getEnumCaseMultiPayload();
        if (v49 == 2)
        {
LABEL_76:
          *uint64_t v14 = *v15;
          v14[1] = v15[1];
          v14[2] = v15[2];
          void v14[3] = v15[3];
          void v14[4] = v15[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v203 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v204 = (char *)v14 + v203;
          uint64_t v205 = (char *)v15 + v203;
          *(void *)uint64_t v204 = *(void *)((char *)v15 + v203);
          *((void *)v204 + 1) = *(void *)((char *)v15 + v203 + 8);
          uint64_t v206 = *(void *)((char *)v15 + v203 + 16);
          uint64_t v207 = *(void *)((char *)v15 + v203 + 24);
          unsigned __int8 v410 = (void (*)(char *, char *, uint64_t))v7;
          uint64_t v208 = *((void *)v205 + 4);
          uint64_t v209 = *((void *)v205 + 5);
          unsigned __int8 v210 = v205[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v206, v207, v208, v209, v210);
          *((void *)v204 + 2) = v206;
          *((void *)v204 + 3) = v207;
          *((void *)v204 + 4) = v208;
          *((void *)v204 + 5) = v209;
          v204[48] = v210;
          v204[49] = v205[49];
          uint64_t v211 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v54 = &v204[v211];
          int v55 = &v205[v211];
          v410(&v204[v211], &v205[v211], v6);
          uint64_t v56 = &qword_1E96710D8;
        }
        else
        {
          if (v49 != 1)
          {
LABEL_73:
            uint64_t v407 = (void (*)(char *, char *, uint64_t))v7;
            *uint64_t v14 = *v15;
            v14[1] = v15[1];
            v14[2] = v15[2];
            void v14[3] = v15[3];
            void v14[4] = v15[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v168 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
            uint64_t v169 = (char *)v14 + v168;
            uint64_t v170 = (char *)v15 + v168;
            *(void *)uint64_t v169 = *(void *)((char *)v15 + v168);
            *((void *)v169 + 1) = *(void *)((char *)v15 + v168 + 8);
            uint64_t v171 = *(void *)((char *)v15 + v168 + 16);
            uint64_t v172 = *((void *)v170 + 3);
            uint64_t v173 = *((void *)v170 + 4);
            uint64_t v174 = *((void *)v170 + 5);
            unsigned __int8 v175 = v170[48];
            swift_bridgeObjectRetain();
            sub_1A551182C(v171, v172, v173, v174, v175);
            *((void *)v169 + 2) = v171;
            *((void *)v169 + 3) = v172;
            *((void *)v169 + 4) = v173;
            *((void *)v169 + 5) = v174;
            v169[48] = v175;
            v169[49] = v170[49];
            uint64_t v176 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
            uint64_t v177 = &v169[v176];
            uint64_t v178 = &v170[v176];
            v407(&v169[v176], &v170[v176], v6);
            uint64_t v179 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
            uint64_t v180 = &v177[v179];
            uint64_t v181 = &v178[v179];
            goto LABEL_159;
          }
LABEL_12:
          *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
          uint64_t v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v51 = (char *)v14 + v50;
          uint64_t v52 = (char *)v15 + v50;
          v7((uint64_t)v14 + v50, (uint64_t *)v52, v6);
          uint64_t v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v54 = &v51[v53];
          int v55 = &v52[v53];
          v7((uint64_t)v54, (uint64_t *)v55, v6);
          uint64_t v56 = &qword_1E96710F0;
        }
        uint64_t v212 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v56) + 68);
        uint64_t v180 = &v54[v212];
        uint64_t v181 = &v55[v212];
        goto LABEL_159;
      case 3u:
        uint64_t v57 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v58 = swift_getEnumCaseMultiPayload();
        if (v58 == 2)
        {
          unint64_t v213 = a2[1];
          if (v213 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v231 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v231;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v213;
          }
        }
        else if (v58 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v58)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v57 - 8) + 64));
            goto LABEL_123;
          }
          uint64_t v59 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
        }
        swift_storeEnumTagMultiPayload();
LABEL_123:
        uint64_t v232 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
        uint64_t v233 = v232[12];
        uint64_t v234 = (uint64_t *)(a1 + v233);
        unsigned __int8 v235 = (uint64_t *)((char *)a2 + v233);
        uint64_t v236 = *v235;
        uint64_t v237 = v235[1];
        unint64_t v238 = v235[2];
        uint64_t v239 = v235[3];
        uint64_t v240 = v235[4];
        sub_1A551188C(*v235, v237, v238);
        uint64_t *v234 = v236;
        v234[1] = v237;
        v234[2] = v238;
        v234[3] = v239;
        v234[4] = v240;
        uint64_t v241 = v232[16];
        uint64_t v242 = (void *)(a1 + v241);
        uint64_t v243 = (uint64_t *)((char *)a2 + v241);
        void *v242 = *v243;
        v242[1] = v243[1];
        uint64_t v244 = v232[20];
        uint64_t v245 = a1 + v244;
        uint64_t v246 = (uint64_t)a2 + v244;
        *(void *)uint64_t v245 = *(uint64_t *)((char *)a2 + v244);
        *(void *)(v245 + _Block_object_dispose(&a9, 8) = *(uint64_t *)((char *)a2 + v244 + 8);
        uint64_t v247 = *(uint64_t *)((char *)a2 + v244 + 16);
        uint64_t v248 = *(uint64_t *)((char *)a2 + v244 + 24);
        uint64_t v249 = *(uint64_t *)((char *)a2 + v244 + 32);
        uint64_t v250 = *(uint64_t *)((char *)a2 + v244 + 40);
        LOBYTE(v239) = *((unsigned char *)a2 + v244 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v247, v248, v249, v250, v239);
        *(void *)(v245 + 16) = v247;
        *(void *)(v245 + 24) = v248;
        *(void *)(v245 + 32) = v249;
        *(void *)(v245 + 40) = v250;
        *(unsigned char *)(v245 + 4_Block_object_dispose(&a9, 8) = v239;
        *(unsigned char *)(v245 + 49) = *(unsigned char *)(v246 + 49);
        uint64_t v251 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v252 = v245 + v251;
        uint64_t v253 = v246 + v251;
        uint64_t v254 = sub_1A56D4CB8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v254 - 8) + 16))(v252, v253, v254);
        uint64_t v255 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        unint64_t v256 = (void *)(v252 + v255);
        uint64_t v257 = (void *)(v253 + v255);
        uint64_t v258 = v257[1];
        *unint64_t v256 = *v257;
        v256[1] = v258;
        swift_retain();
        goto LABEL_187;
      case 4u:
        uint64_t v60 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v61 = swift_getEnumCaseMultiPayload();
        if (v61 == 2)
        {
          unint64_t v214 = a2[1];
          if (v214 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v259 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v259;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v214;
          }
        }
        else if (v61 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v61)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v60 - 8) + 64));
            goto LABEL_126;
          }
          uint64_t v62 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
        }
        swift_storeEnumTagMultiPayload();
LABEL_126:
        unint64_t v260 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
        *(void *)(a1 + v260[12]) = *(uint64_t *)((char *)a2 + v260[12]);
        *(void *)(a1 + v260[16]) = *(uint64_t *)((char *)a2 + v260[16]);
        uint64_t v261 = v260[20];
        uint64_t v262 = a1 + v261;
        uint64_t v263 = (uint64_t)a2 + v261;
        *(void *)uint64_t v262 = *(uint64_t *)((char *)a2 + v261);
        *(void *)(v262 + _Block_object_dispose(&a9, 8) = *(uint64_t *)((char *)a2 + v261 + 8);
        uint64_t v264 = *(uint64_t *)((char *)a2 + v261 + 16);
        uint64_t v265 = *(uint64_t *)((char *)a2 + v261 + 24);
        uint64_t v266 = *(uint64_t *)((char *)a2 + v261 + 32);
        uint64_t v267 = *(uint64_t *)((char *)a2 + v261 + 40);
        unsigned __int8 v268 = *((unsigned char *)a2 + v261 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A551182C(v264, v265, v266, v267, v268);
        *(void *)(v262 + 16) = v264;
        *(void *)(v262 + 24) = v265;
        *(void *)(v262 + 32) = v266;
        *(void *)(v262 + 40) = v267;
        *(unsigned char *)(v262 + 4_Block_object_dispose(&a9, 8) = v268;
        *(unsigned char *)(v262 + 49) = *(unsigned char *)(v263 + 49);
        uint64_t v269 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v270 = v262 + v269;
        uint64_t v271 = v263 + v269;
        uint64_t v272 = sub_1A56D4CB8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v272 - 8) + 16))(v270, v271, v272);
        uint64_t v273 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v274 = (void *)(v270 + v273);
        uint64_t v275 = (void *)(v271 + v273);
        uint64_t v276 = v275[1];
        *uint64_t v274 = *v275;
        v274[1] = v276;
        swift_retain();
        goto LABEL_187;
      case 5u:
        uint64_t v63 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v64 = swift_getEnumCaseMultiPayload();
        if (v64 == 2)
        {
          unint64_t v215 = a2[1];
          if (v215 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v277 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v277;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v215;
          }
        }
        else if (v64 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v64)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v63 - 8) + 64));
            goto LABEL_129;
          }
          uint64_t v65 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
        }
        swift_storeEnumTagMultiPayload();
LABEL_129:
        uint64_t v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)(a1 + *(int *)(v278 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v278 + 48));
        uint64_t v279 = *(int *)(v278 + 64);
        uint64_t v280 = a1 + v279;
        uint64_t v281 = (uint64_t)a2 + v279;
        uint64_t v89 = sub_1A56D4CB8();
        uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16);
        swift_bridgeObjectRetain();
        v90(v280, v281, v89);
        uint64_t v282 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v280 + v282[13]) = *(unsigned char *)(v281 + v282[13]);
        uint64_t v283 = v282[14];
        uint64_t v284 = v280 + v283;
        uint64_t v285 = v281 + v283;
        uint64_t v286 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v286 - 8) + 16))(v284, v285, v286);
        uint64_t v287 = v282[15];
        uint64_t v97 = (void *)(v280 + v287);
        int v98 = (void *)(v281 + v287);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v288 = swift_getEnumCaseMultiPayload();
        if (v288 == 2) {
          goto LABEL_139;
        }
        if (v288 == 1) {
          goto LABEL_138;
        }
        goto LABEL_140;
      case 6u:
        uint64_t v66 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 2)
        {
          unint64_t v216 = a2[1];
          if (v216 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v289 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v289;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v216;
          }
        }
        else if (v67 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v67)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v66 - 8) + 64));
            goto LABEL_136;
          }
          uint64_t v68 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
        }
        swift_storeEnumTagMultiPayload();
LABEL_136:
        uint64_t v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)(a1 + *(int *)(v290 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v290 + 48));
        uint64_t v291 = *(int *)(v290 + 64);
        uint64_t v292 = a1 + v291;
        uint64_t v293 = (uint64_t)a2 + v291;
        uint64_t v89 = sub_1A56D4CB8();
        uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16);
        swift_bridgeObjectRetain();
        v90(v292, v293, v89);
        uint64_t v294 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v292 + v294[13]) = *(unsigned char *)(v293 + v294[13]);
        uint64_t v295 = v294[14];
        uint64_t v296 = v292 + v295;
        uint64_t v297 = v293 + v295;
        uint64_t v298 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v298 - 8) + 16))(v296, v297, v298);
        uint64_t v299 = v294[15];
        uint64_t v97 = (void *)(v292 + v299);
        int v98 = (void *)(v293 + v299);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v300 = swift_getEnumCaseMultiPayload();
        if (v300 == 2)
        {
LABEL_139:
          *uint64_t v97 = *v98;
          v97[1] = v98[1];
          v97[2] = v98[2];
          v97[3] = v98[3];
          v97[4] = v98[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v305 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v306 = (char *)v97 + v305;
          uint64_t v307 = (char *)v98 + v305;
          *(void *)uint64_t v306 = *(void *)((char *)v98 + v305);
          *((void *)v306 + 1) = *(void *)((char *)v98 + v305 + 8);
          uint64_t v308 = *(void *)((char *)v98 + v305 + 16);
          uint64_t v309 = *(void *)((char *)v98 + v305 + 24);
          uint64_t v411 = (void (*)(char *, char *, uint64_t))v90;
          uint64_t v310 = *((void *)v307 + 4);
          uint64_t v311 = *((void *)v307 + 5);
          unsigned __int8 v312 = v307[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v308, v309, v310, v311, v312);
          *((void *)v306 + 2) = v308;
          *((void *)v306 + 3) = v309;
          *((void *)v306 + 4) = v310;
          *((void *)v306 + 5) = v311;
          v306[48] = v312;
          v306[49] = v307[49];
          uint64_t v313 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v40 = &v306[v313];
          uint64_t v41 = &v307[v313];
          v411(&v306[v313], &v307[v313], v89);
          uint64_t v42 = &qword_1E96710D8;
          goto LABEL_157;
        }
        if (v300 == 1)
        {
LABEL_138:
          *(unsigned char *)uint64_t v97 = *(unsigned char *)v98;
          uint64_t v301 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v302 = (char *)v97 + v301;
          uint64_t v303 = (char *)v98 + v301;
          v90((uint64_t)v97 + v301, (uint64_t)v303, v89);
          uint64_t v304 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v40 = &v302[v304];
          uint64_t v41 = &v303[v304];
          v90((uint64_t)v40, (uint64_t)v41, v89);
          uint64_t v42 = &qword_1E96710F0;
          goto LABEL_157;
        }
LABEL_140:
        uint64_t v412 = (void (*)(char *, char *, uint64_t))v90;
        *uint64_t v97 = *v98;
        v97[1] = v98[1];
        v97[2] = v98[2];
        v97[3] = v98[3];
        v97[4] = v98[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v314 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v315 = (char *)v97 + v314;
        uint64_t v316 = (char *)v98 + v314;
        *(void *)uint64_t v315 = *(void *)((char *)v98 + v314);
        *((void *)v315 + 1) = *(void *)((char *)v98 + v314 + 8);
        uint64_t v317 = *(void *)((char *)v98 + v314 + 16);
        uint64_t v318 = *((void *)v316 + 3);
        uint64_t v319 = *((void *)v316 + 4);
        uint64_t v320 = *((void *)v316 + 5);
        unsigned __int8 v321 = v316[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v317, v318, v319, v320, v321);
        *((void *)v315 + 2) = v317;
        *((void *)v315 + 3) = v318;
        *((void *)v315 + 4) = v319;
        *((void *)v315 + 5) = v320;
        v315[48] = v321;
        v315[49] = v316[49];
        uint64_t v322 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v323 = &v315[v322];
        uint64_t v324 = &v316[v322];
        v412(&v315[v322], &v316[v322], v89);
        uint64_t v325 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v180 = &v323[v325];
        uint64_t v181 = &v324[v325];
        goto LABEL_159;
      case 7u:
        uint64_t v69 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v70 = swift_getEnumCaseMultiPayload();
        if (v70 == 2)
        {
          unint64_t v217 = a2[1];
          if (v217 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v326 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v326;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v217;
          }
        }
        else if (v70 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v70)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v69 - 8) + 64));
            goto LABEL_143;
          }
          uint64_t v71 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
        }
        swift_storeEnumTagMultiPayload();
LABEL_143:
        uint64_t v327 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
        *(void *)(a1 + *(int *)(v327 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v327 + 48));
        *(void *)(a1 + *(int *)(v327 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v327 + 64));
        swift_bridgeObjectRetain();
        goto LABEL_187;
      case 8u:
        uint64_t v72 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v73 = swift_getEnumCaseMultiPayload();
        if (v73 == 2)
        {
          unint64_t v218 = a2[1];
          if (v218 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v328 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v328;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v218;
          }
        }
        else if (v73 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v73)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v72 - 8) + 64));
            goto LABEL_146;
          }
          uint64_t v74 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v74 - 8) + 16))(a1, a2, v74);
        }
        swift_storeEnumTagMultiPayload();
LABEL_146:
        uint64_t v329 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)(a1 + v329[12]) = *(uint64_t *)((char *)a2 + v329[12]);
        *(void *)(a1 + v329[16]) = *(uint64_t *)((char *)a2 + v329[16]);
        uint64_t v330 = v329[20];
        uint64_t v331 = a1 + v330;
        uint64_t v332 = (uint64_t)a2 + v330;
        uint64_t v333 = sub_1A56D4CB8();
        int v334 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v333 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v334(v331, v332, v333);
        uint64_t v335 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v331 + v335[13]) = *(unsigned char *)(v332 + v335[13]);
        uint64_t v336 = v335[14];
        uint64_t v337 = v331 + v336;
        uint64_t v338 = v332 + v336;
        uint64_t v339 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v339 - 8) + 16))(v337, v338, v339);
        uint64_t v340 = v335[15];
        uint64_t v341 = (void *)(v331 + v340);
        uint64_t v342 = (void *)(v332 + v340);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v343 = swift_getEnumCaseMultiPayload();
        if (v343 == 2) {
          goto LABEL_156;
        }
        if (v343 == 1) {
          goto LABEL_155;
        }
        goto LABEL_158;
      case 9u:
        uint64_t v75 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v76 = swift_getEnumCaseMultiPayload();
        if (v76 == 2)
        {
          unint64_t v219 = a2[1];
          if (v219 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v344 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v344;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v219;
          }
        }
        else if (v76 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v76)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v75 - 8) + 64));
            goto LABEL_153;
          }
          uint64_t v77 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
        }
        swift_storeEnumTagMultiPayload();
LABEL_153:
        uint64_t v345 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)(a1 + v345[12]) = *(uint64_t *)((char *)a2 + v345[12]);
        *(void *)(a1 + v345[16]) = *(uint64_t *)((char *)a2 + v345[16]);
        uint64_t v346 = v345[20];
        uint64_t v347 = a1 + v346;
        uint64_t v348 = (uint64_t)a2 + v346;
        uint64_t v333 = sub_1A56D4CB8();
        int v334 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v333 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v334(v347, v348, v333);
        uint64_t v349 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v347 + v349[13]) = *(unsigned char *)(v348 + v349[13]);
        uint64_t v350 = v349[14];
        uint64_t v351 = v347 + v350;
        uint64_t v352 = v348 + v350;
        uint64_t v353 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v353 - 8) + 16))(v351, v352, v353);
        uint64_t v354 = v349[15];
        uint64_t v341 = (void *)(v347 + v354);
        uint64_t v342 = (void *)(v348 + v354);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v355 = swift_getEnumCaseMultiPayload();
        if (v355 == 2)
        {
LABEL_156:
          *uint64_t v341 = *v342;
          v341[1] = v342[1];
          v341[2] = v342[2];
          v341[3] = v342[3];
          v341[4] = v342[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v360 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          unsigned __int8 v361 = (char *)v341 + v360;
          uint64_t v362 = (char *)v342 + v360;
          *(void *)unsigned __int8 v361 = *(void *)((char *)v342 + v360);
          *((void *)v361 + 1) = *(void *)((char *)v342 + v360 + 8);
          uint64_t v363 = *(void *)((char *)v342 + v360 + 16);
          uint64_t v364 = *(void *)((char *)v342 + v360 + 24);
          uint64_t v413 = (void (*)(char *, char *, uint64_t))v334;
          uint64_t v365 = *((void *)v362 + 4);
          uint64_t v366 = *((void *)v362 + 5);
          unsigned __int8 v367 = v362[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v363, v364, v365, v366, v367);
          *((void *)v361 + 2) = v363;
          *((void *)v361 + 3) = v364;
          *((void *)v361 + 4) = v365;
          *((void *)v361 + 5) = v366;
          v361[48] = v367;
          v361[49] = v362[49];
          uint64_t v368 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v40 = &v361[v368];
          uint64_t v41 = &v362[v368];
          v413(&v361[v368], &v362[v368], v333);
          uint64_t v42 = &qword_1E96710D8;
          goto LABEL_157;
        }
        if (v355 == 1)
        {
LABEL_155:
          *(unsigned char *)uint64_t v341 = *(unsigned char *)v342;
          uint64_t v356 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v357 = (char *)v341 + v356;
          uint64_t v358 = (char *)v342 + v356;
          v334((uint64_t)v341 + v356, (uint64_t)v358, v333);
          uint64_t v359 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v40 = &v357[v359];
          uint64_t v41 = &v358[v359];
          v334((uint64_t)v40, (uint64_t)v41, v333);
          uint64_t v42 = &qword_1E96710F0;
          goto LABEL_157;
        }
LABEL_158:
        uint64_t v414 = (void (*)(char *, char *, uint64_t))v334;
        *uint64_t v341 = *v342;
        v341[1] = v342[1];
        v341[2] = v342[2];
        v341[3] = v342[3];
        v341[4] = v342[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v370 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v371 = (char *)v341 + v370;
        uint64_t v372 = (char *)v342 + v370;
        *(void *)uint64_t v371 = *(void *)((char *)v342 + v370);
        *((void *)v371 + 1) = *(void *)((char *)v342 + v370 + 8);
        uint64_t v373 = *(void *)((char *)v342 + v370 + 16);
        uint64_t v374 = *((void *)v372 + 3);
        uint64_t v375 = *((void *)v372 + 4);
        uint64_t v376 = *((void *)v372 + 5);
        unsigned __int8 v377 = v372[48];
        swift_bridgeObjectRetain();
        sub_1A551182C(v373, v374, v375, v376, v377);
        *((void *)v371 + 2) = v373;
        *((void *)v371 + 3) = v374;
        *((void *)v371 + 4) = v375;
        *((void *)v371 + 5) = v376;
        v371[48] = v377;
        v371[49] = v372[49];
        uint64_t v378 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v379 = &v371[v378];
        uint64_t v380 = &v372[v378];
        v414(&v371[v378], &v372[v378], v333);
        uint64_t v381 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v180 = &v379[v381];
        uint64_t v181 = &v380[v381];
        goto LABEL_159;
      case 0xAu:
        uint64_t v78 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v79 = swift_getEnumCaseMultiPayload();
        if (v79 == 2)
        {
          unint64_t v220 = a2[1];
          if (v220 >> 60 == 15)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          else
          {
            uint64_t v383 = *a2;
            sub_1A54E9E98(*a2, a2[1]);
            *(void *)a1 = v383;
            *(void *)(a1 + _Block_object_dispose(&a9, 8) = v220;
          }
        }
        else if (v79 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v79)
          {
            memcpy((void *)a1, a2, *(void *)(*(void *)(v78 - 8) + 64));
            goto LABEL_162;
          }
          uint64_t v80 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
        }
        swift_storeEnumTagMultiPayload();
LABEL_162:
        uint64_t v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
        *(void *)(a1 + *(int *)(v384 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v384 + 48));
        *(void *)(a1 + *(int *)(v384 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v384 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_187;
      case 0xBu:
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        uint64_t v81 = a2[4];
        uint64_t v82 = a2[5];
        char v83 = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v81;
        *(void *)(a1 + 40) = v82;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v83;
        uint64_t v84 = a2[7];
        unint64_t v85 = a2[8];
        sub_1A54E9E98(v84, v85);
        *(void *)(a1 + 56) = v84;
        *(void *)(a1 + 64) = v85;
        uint64_t v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
        uint64_t v87 = a1 + v86;
        uint64_t v88 = (uint64_t)a2 + v86;
        uint64_t v89 = sub_1A56D4CB8();
        uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16);
        v90(v87, v88, v89);
        uint64_t v91 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v87 + v91[13]) = *(unsigned char *)(v88 + v91[13]);
        uint64_t v92 = v91[14];
        uint64_t v93 = v87 + v92;
        uint64_t v94 = v88 + v92;
        uint64_t v95 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
        uint64_t v96 = v91[15];
        uint64_t v97 = (void *)(v87 + v96);
        int v98 = (void *)(v88 + v96);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v99 = swift_getEnumCaseMultiPayload();
        if (v99 == 2) {
          goto LABEL_139;
        }
        if (v99 == 1) {
          goto LABEL_138;
        }
        goto LABEL_140;
      case 0xCu:
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        uint64_t v100 = a2[4];
        uint64_t v101 = a2[5];
        char v102 = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v100;
        *(void *)(a1 + 40) = v101;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v102;
        uint64_t v104 = a2[7];
        unint64_t v103 = a2[8];
        sub_1A54E9E98(v104, v103);
        *(void *)(a1 + 56) = v104;
        *(void *)(a1 + 64) = v103;
        goto LABEL_187;
      case 0xDu:
        *(void *)a1 = *a2;
        *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        uint64_t v105 = a2[4];
        uint64_t v106 = a2[5];
        char v107 = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54E866C();
        *(void *)(a1 + 32) = v105;
        *(void *)(a1 + 40) = v106;
        *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v107;
        uint64_t v108 = a2[7];
        unint64_t v109 = a2[8];
        sub_1A54E9E98(v108, v109);
        *(void *)(a1 + 56) = v108;
        *(void *)(a1 + 64) = v109;
        uint64_t v110 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
        uint64_t v111 = a1 + v110;
        uint64_t v112 = (uint64_t)a2 + v110;
        uint64_t v25 = sub_1A56D4CB8();
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
        v26(v111, v112, v25);
        uint64_t v113 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        *(unsigned char *)(v111 + v113[13]) = *(unsigned char *)(v112 + v113[13]);
        uint64_t v114 = v113[14];
        uint64_t v115 = v111 + v114;
        uint64_t v116 = v112 + v114;
        uint64_t v117 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
        uint64_t v118 = v113[15];
        uint64_t v33 = (void *)(v111 + v118);
        uint64_t v34 = (void *)(v112 + v118);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v119 = swift_getEnumCaseMultiPayload();
        if (v119 == 2)
        {
LABEL_74:
          *uint64_t v33 = *v34;
          v33[1] = v34[1];
          v33[2] = v34[2];
          v33[3] = v34[3];
          v33[4] = v34[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v182 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v183 = (char *)v33 + v182;
          uint64_t v184 = (char *)v34 + v182;
          *(void *)uint64_t v183 = *(void *)((char *)v34 + v182);
          *((void *)v183 + 1) = *(void *)((char *)v34 + v182 + 8);
          uint64_t v185 = *(void *)((char *)v34 + v182 + 16);
          uint64_t v186 = *(void *)((char *)v34 + v182 + 24);
          uint64_t v408 = (void (*)(char *, char *, uint64_t))v26;
          uint64_t v187 = *((void *)v184 + 4);
          uint64_t v188 = *((void *)v184 + 5);
          unsigned __int8 v189 = v184[48];
          swift_bridgeObjectRetain();
          sub_1A551182C(v185, v186, v187, v188, v189);
          *((void *)v183 + 2) = v185;
          *((void *)v183 + 3) = v186;
          *((void *)v183 + 4) = v187;
          *((void *)v183 + 5) = v188;
          v183[48] = v189;
          v183[49] = v184[49];
          uint64_t v190 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v40 = &v183[v190];
          uint64_t v41 = &v184[v190];
          v408(&v183[v190], &v184[v190], v25);
          uint64_t v42 = &qword_1E96710D8;
        }
        else
        {
          if (v119 != 1)
          {
LABEL_75:
            uint64_t v409 = (void (*)(char *, char *, uint64_t))v26;
            *uint64_t v33 = *v34;
            v33[1] = v34[1];
            v33[2] = v34[2];
            v33[3] = v34[3];
            v33[4] = v34[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v191 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
            uint64_t v192 = (char *)v33 + v191;
            uint64_t v193 = (char *)v34 + v191;
            *(void *)uint64_t v192 = *(void *)((char *)v34 + v191);
            *((void *)v192 + 1) = *(void *)((char *)v34 + v191 + 8);
            uint64_t v194 = *(void *)((char *)v34 + v191 + 16);
            uint64_t v195 = *((void *)v193 + 3);
            uint64_t v196 = *((void *)v193 + 4);
            uint64_t v197 = *((void *)v193 + 5);
            unsigned __int8 v198 = v193[48];
            swift_bridgeObjectRetain();
            sub_1A551182C(v194, v195, v196, v197, v198);
            *((void *)v192 + 2) = v194;
            *((void *)v192 + 3) = v195;
            *((void *)v192 + 4) = v196;
            *((void *)v192 + 5) = v197;
            v192[48] = v198;
            v192[49] = v193[49];
            uint64_t v199 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
            uint64_t v200 = &v192[v199];
            uint64_t v201 = &v193[v199];
            v409(&v192[v199], &v193[v199], v25);
            uint64_t v202 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
            uint64_t v180 = &v200[v202];
            uint64_t v181 = &v201[v202];
            goto LABEL_159;
          }
LABEL_9:
          *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
          uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          uint64_t v37 = (char *)v33 + v36;
          uint64_t v38 = (char *)v34 + v36;
          v26((uint64_t)v33 + v36, (uint64_t)v38, v25);
          uint64_t v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          uint64_t v40 = &v37[v39];
          uint64_t v41 = &v38[v39];
          v26((uint64_t)v40, (uint64_t)v41, v25);
          uint64_t v42 = &qword_1E96710F0;
        }
LABEL_157:
        uint64_t v369 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(v42) + 68);
        uint64_t v180 = &v40[v369];
        uint64_t v181 = &v41[v369];
LABEL_159:
        uint64_t v382 = *((void *)v181 + 1);
        *(void *)uint64_t v180 = *(void *)v181;
        *((void *)v180 + 1) = v382;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_187;
      case 0xEu:
        if ((unint64_t)a2[3] >= 2)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + _Block_object_dispose(&a9, 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          uint64_t v139 = a2[4];
          uint64_t v140 = a2[5];
          char v141 = *((unsigned char *)a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          *(void *)(a1 + 32) = v139;
          *(void *)(a1 + 40) = v140;
          *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = v141;
          uint64_t v142 = a2[7];
          unint64_t v143 = a2[8];
          sub_1A54E9E98(v142, v143);
          *(void *)(a1 + 56) = v142;
          *(void *)(a1 + 64) = v143;
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          long long v120 = *((_OWORD *)a2 + 1);
          long long v121 = *((_OWORD *)a2 + 2);
          long long v122 = *((_OWORD *)a2 + 3);
          *(void *)(a1 + 64) = a2[8];
          *(_OWORD *)(a1 + 32) = v121;
          *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v122;
          *(_OWORD *)(a1 + 16) = v120;
        }
        if ((unint64_t)a2[12] >= 2)
        {
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 8_Block_object_dispose(&a9, 8) = a2[11];
          *(void *)(a1 + 96) = a2[12];
          uint64_t v147 = a2[13];
          uint64_t v148 = a2[14];
          char v149 = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1A54E866C();
          *(void *)(a1 + 104) = v147;
          *(void *)(a1 + 112) = v148;
          *(unsigned char *)(a1 + 120) = v149;
          uint64_t v151 = a2[16];
          unint64_t v150 = a2[17];
          sub_1A54E9E98(v151, v150);
          *(void *)(a1 + 12_Block_object_dispose(&a9, 8) = v151;
          *(void *)(a1 + 136) = v150;
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
          long long v144 = *(_OWORD *)(a2 + 11);
          long long v145 = *(_OWORD *)(a2 + 13);
          long long v146 = *(_OWORD *)(a2 + 15);
          *(void *)(a1 + 136) = a2[17];
          *(_OWORD *)(a1 + 104) = v145;
          *(_OWORD *)(a1 + 120) = v146;
          *(_OWORD *)(a1 + 8_Block_object_dispose(&a9, 8) = v144;
        }
        goto LABEL_187;
      case 0xFu:
        uint64_t v123 = sub_1A56D4C28();
        uint64_t v124 = *(void *)(v123 - 8);
        unint64_t v125 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v124 + 16);
        v125(a1, a2, v123);
        long long v126 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v127 = v126[5];
        uint64_t v128 = (void *)(a1 + v127);
        uint64_t v129 = (char *)a2 + v127;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))((uint64_t)a2 + v127, 1, v123))
        {
          uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          v125((uint64_t)v128, (uint64_t *)v129, v123);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v128, 0, 1, v123);
        }
        *(unsigned char *)(a1 + v126[6]) = *((unsigned char *)a2 + v126[6]);
        uint64_t v152 = v126[7];
        uint64_t v153 = (void *)(a1 + v152);
        uint64_t v154 = (uint64_t *)((char *)a2 + v152);
        uint64_t v155 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v156 = *(void *)(v155 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
        {
          uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          uint64_t v164 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v165 = *(void *)(v164 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v165 + 48))(v154, 1, v164))
          {
            memcpy(v153, v154, *(void *)(v156 + 64));
          }
          else
          {
            int v221 = swift_getEnumCaseMultiPayload();
            if (v221 == 1)
            {
              *uint64_t v153 = *v154;
              v153[1] = v154[1];
              v153[2] = v154[2];
              v153[3] = v154[3];
              v153[4] = v154[4];
              v153[5] = v154[5];
              v153[6] = v154[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v221)
            {
              memcpy(v153, v154, *(void *)(v165 + 64));
            }
            else
            {
              *uint64_t v153 = *v154;
              v153[1] = v154[1];
              swift_bridgeObjectRetain();
              uint64_t v222 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              uint64_t v223 = (char *)v153 + v222;
              uint64_t v224 = (char *)v154 + v222;
              uint64_t v225 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v223, v224, v225);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v165 + 56))(v153, 0, 1, v164);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
        }
        uint64_t v385 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
        uint64_t v386 = v385[12];
        uint64_t v387 = (uint64_t *)(a1 + v386);
        uint64_t v388 = (uint64_t *)((char *)a2 + v386);
        uint64_t v389 = type metadata accessor for SFAirDropReceive.ItemDestination();
        int v390 = swift_getEnumCaseMultiPayload();
        if (v390 == 2)
        {
          unint64_t v392 = v388[1];
          if (v392 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v387 = *(_OWORD *)v388;
          }
          else
          {
            uint64_t v393 = *v388;
            sub_1A54E9E98(v393, v392);
            *uint64_t v387 = v393;
            v387[1] = v392;
          }
        }
        else if (v390 == 1)
        {
          *uint64_t v387 = *v388;
          v387[1] = v388[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          if (v390)
          {
            memcpy(v387, v388, *(void *)(*(void *)(v389 - 8) + 64));
            goto LABEL_177;
          }
          uint64_t v391 = sub_1A56D4A28();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v391 - 8) + 16))(v387, v388, v391);
        }
        swift_storeEnumTagMultiPayload();
LABEL_177:
        uint64_t v394 = v385[16];
        int v395 = (void *)(a1 + v394);
        uint64_t v396 = (uint64_t *)((char *)a2 + v394);
        *int v395 = *v396;
        v395[1] = v396[1];
        *(void *)(a1 + v385[20]) = *(uint64_t *)((char *)a2 + v385[20]);
        *(void *)(a1 + v385[24]) = *(uint64_t *)((char *)a2 + v385[24]);
        *(void *)(a1 + v385[28]) = *(uint64_t *)((char *)a2 + v385[28]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_187:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        uint64_t v131 = sub_1A56D4C28();
        uint64_t v132 = *(void *)(v131 - 8);
        long long v133 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v132 + 16);
        v133(a1, a2, v131);
        uint64_t v134 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v135 = v134[5];
        uint64_t v136 = (void *)(a1 + v135);
        uint64_t v137 = (char *)a2 + v135;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))((uint64_t)a2 + v135, 1, v131))
        {
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          v133((uint64_t)v136, (uint64_t *)v137, v131);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v136, 0, 1, v131);
        }
        *(unsigned char *)(a1 + v134[6]) = *((unsigned char *)a2 + v134[6]);
        uint64_t v158 = v134[7];
        uint64_t v159 = (void *)(a1 + v158);
        uint64_t v160 = (uint64_t *)((char *)a2 + v158);
        uint64_t v161 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v162 = *(void *)(v161 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
        {
          uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v159, v160, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
          uint64_t v166 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v167 = *(void *)(v166 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v167 + 48))(v160, 1, v166))
          {
            memcpy(v159, v160, *(void *)(v162 + 64));
          }
          else
          {
            int v226 = swift_getEnumCaseMultiPayload();
            if (v226 == 1)
            {
              *uint64_t v159 = *v160;
              v159[1] = v160[1];
              v159[2] = v160[2];
              v159[3] = v160[3];
              v159[4] = v160[4];
              v159[5] = v160[5];
              v159[6] = v160[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (v226)
            {
              memcpy(v159, v160, *(void *)(v167 + 64));
            }
            else
            {
              *uint64_t v159 = *v160;
              v159[1] = v160[1];
              swift_bridgeObjectRetain();
              uint64_t v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              uint64_t v228 = (char *)v159 + v227;
              long long v229 = (char *)v160 + v227;
              uint64_t v230 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16))(v228, v229, v230);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v167 + 56))(v159, 0, 1, v166);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
        }
        uint64_t v397 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
        uint64_t v398 = (void *)(a1 + v397);
        uint64_t v399 = (uint64_t *)((char *)a2 + v397);
        uint64_t v400 = type metadata accessor for SFAirDropReceive.Failure();
        int v401 = swift_getEnumCaseMultiPayload();
        if (v401 == 1)
        {
          *uint64_t v398 = *v399;
          v398[1] = v399[1];
          v398[2] = v399[2];
          v398[3] = v399[3];
          v398[4] = v399[4];
          v398[5] = v399[5];
          v398[6] = v399[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v401)
        {
          memcpy(v398, v399, *(void *)(*(void *)(v400 - 8) + 64));
        }
        else
        {
          *uint64_t v398 = *v399;
          v398[1] = v399[1];
          swift_bridgeObjectRetain();
          uint64_t v402 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
          uint64_t v403 = (char *)v398 + v402;
          uint64_t v404 = (char *)v399 + v402;
          uint64_t v405 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v405 - 8) + 16))(v403, v404, v405);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_187;
      default:
        memcpy((void *)a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t _s8TransferV5StateOwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1A56D4CB8();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
      uint64_t v9 = v8[14];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      uint64_t v13 = v8[15];
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2) {
        goto LABEL_69;
      }
      if (EnumCaseMultiPayload == 1) {
        goto LABEL_4;
      }
      long long v210 = *(_OWORD *)(v15 + 16);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *(_OWORD *)(v14 + 16) = v210;
      *(void *)(v14 + 32) = *(void *)(v15 + 32);
      uint64_t v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
      uint64_t v212 = v14 + v211;
      uint64_t v213 = v15 + v211;
      *(_WORD *)(v212 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v15 + v211 + 48);
      long long v214 = *(_OWORD *)(v15 + v211 + 16);
      *(_OWORD *)uint64_t v212 = *(_OWORD *)(v15 + v211);
      *(_OWORD *)(v212 + 16) = v214;
      *(_OWORD *)(v212 + 32) = *(_OWORD *)(v15 + v211 + 32);
      uint64_t v215 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v216 = v212 + v215;
      uint64_t v217 = v213 + v215;
      v7(v216, v213 + v215, v6);
      uint64_t v218 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
      uint64_t v24 = (_OWORD *)(v216 + v218);
      uint64_t v25 = (_OWORD *)(v217 + v218);
      goto LABEL_53;
    case 1u:
      long long v26 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v26;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      long long v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v27;
      uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
      uint64_t v29 = a1 + v28;
      uint64_t v30 = a2 + v28;
      uint64_t v31 = sub_1A56D4CB8();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v29, v30, v31);
      uint64_t v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      *(unsigned char *)(v29 + v33[13]) = *(unsigned char *)(v30 + v33[13]);
      uint64_t v34 = v33[14];
      uint64_t v35 = v29 + v34;
      uint64_t v36 = v30 + v34;
      uint64_t v37 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      uint64_t v38 = v33[15];
      uint64_t v39 = v29 + v38;
      uint64_t v40 = v30 + v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_6;
      }
      goto LABEL_68;
    case 2u:
      uint64_t v6 = sub_1A56D4CB8();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v48 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(a1 + v48[13]) = *(unsigned char *)(a2 + v48[13]);
      uint64_t v49 = v48[14];
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      uint64_t v52 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      uint64_t v53 = v48[15];
      uint64_t v14 = a1 + v53;
      uint64_t v15 = a2 + v53;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_4:
        *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
        uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        uint64_t v18 = v14 + v17;
        uint64_t v19 = v15 + v17;
        v7(v14 + v17, v19, v6);
        uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
        uint64_t v21 = v18 + v20;
        uint64_t v22 = v19 + v20;
        v7(v21, v22, v6);
        uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
        uint64_t v24 = (_OWORD *)(v21 + v23);
        uint64_t v25 = (_OWORD *)(v22 + v23);
      }
      else
      {
LABEL_69:
        long long v228 = *(_OWORD *)(v15 + 16);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *(_OWORD *)(v14 + 16) = v228;
        *(void *)(v14 + 32) = *(void *)(v15 + 32);
        uint64_t v229 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v230 = v14 + v229;
        uint64_t v231 = v15 + v229;
        *(_WORD *)(v230 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v15 + v229 + 48);
        long long v232 = *(_OWORD *)(v15 + v229 + 16);
        *(_OWORD *)uint64_t v230 = *(_OWORD *)(v15 + v229);
        *(_OWORD *)(v230 + 16) = v232;
        *(_OWORD *)(v230 + 32) = *(_OWORD *)(v15 + v229 + 32);
        uint64_t v233 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v234 = v230 + v233;
        uint64_t v235 = v231 + v233;
        v7(v230 + v233, v235, v6);
        uint64_t v236 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v24 = (_OWORD *)(v234 + v236);
        uint64_t v25 = (_OWORD *)(v235 + v236);
      }
      goto LABEL_53;
    case 3u:
      uint64_t v54 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        uint64_t v111 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 32))(a1, a2, v111);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v112 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
      uint64_t v113 = v112[12];
      uint64_t v114 = a1 + v113;
      uint64_t v115 = a2 + v113;
      long long v116 = *(_OWORD *)(v115 + 16);
      *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
      *(_OWORD *)(v114 + 16) = v116;
      *(void *)(v114 + 32) = *(void *)(v115 + 32);
      *(_OWORD *)(a1 + v112[16]) = *(_OWORD *)(a2 + v112[16]);
      uint64_t v117 = v112[20];
      uint64_t v118 = a1 + v117;
      uint64_t v119 = a2 + v117;
      long long v120 = *(_OWORD *)(a2 + v117 + 16);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)(a2 + v117);
      *(_OWORD *)(v118 + 16) = v120;
      *(_OWORD *)(v118 + 32) = *(_OWORD *)(a2 + v117 + 32);
      *(unsigned char *)(v118 + 4_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + v117 + 48);
      *(unsigned char *)(v118 + 49) = *(unsigned char *)(a2 + v117 + 49);
      uint64_t v121 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v122 = v118 + v121;
      uint64_t v123 = v119 + v121;
      uint64_t v124 = sub_1A56D4CB8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
      uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
      *(_OWORD *)(v122 + *(int *)(v125 + 68)) = *(_OWORD *)(v123 + *(int *)(v125 + 68));
      goto LABEL_89;
    case 4u:
      uint64_t v55 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v126 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 32))(a1, a2, v126);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v127 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
      *(void *)(a1 + v127[12]) = *(void *)(a2 + v127[12]);
      *(void *)(a1 + v127[16]) = *(void *)(a2 + v127[16]);
      uint64_t v128 = v127[20];
      uint64_t v129 = a1 + v128;
      uint64_t v130 = a2 + v128;
      *(_WORD *)(v129 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(a2 + v128 + 48);
      long long v131 = *(_OWORD *)(a2 + v128 + 16);
      *(_OWORD *)uint64_t v129 = *(_OWORD *)(a2 + v128);
      *(_OWORD *)(v129 + 16) = v131;
      *(_OWORD *)(v129 + 32) = *(_OWORD *)(a2 + v128 + 32);
      uint64_t v132 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
      uint64_t v133 = v129 + v132;
      uint64_t v134 = v130 + v132;
      uint64_t v135 = sub_1A56D4CB8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
      uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
      *(_OWORD *)(v133 + *(int *)(v136 + 68)) = *(_OWORD *)(v134 + *(int *)(v136 + 68));
      goto LABEL_89;
    case 5u:
      uint64_t v56 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        uint64_t v137 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 32))(a1, a2, v137);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)(a1 + *(int *)(v138 + 48)) = *(void *)(a2 + *(int *)(v138 + 48));
      uint64_t v139 = *(int *)(v138 + 64);
      uint64_t v140 = a1 + v139;
      uint64_t v141 = a2 + v139;
      uint64_t v67 = sub_1A56D4CB8();
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32);
      v68(v140, v141, v67);
      uint64_t v142 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v140 + v142[13]) = *(unsigned char *)(v141 + v142[13]);
      uint64_t v143 = v142[14];
      uint64_t v144 = v140 + v143;
      uint64_t v145 = v141 + v143;
      uint64_t v146 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
      uint64_t v147 = v142[15];
      uint64_t v75 = v140 + v147;
      uint64_t v76 = v141 + v147;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_52;
      }
      goto LABEL_26;
    case 6u:
      uint64_t v57 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        uint64_t v148 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 32))(a1, a2, v148);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
      *(void *)(a1 + *(int *)(v149 + 48)) = *(void *)(a2 + *(int *)(v149 + 48));
      uint64_t v150 = *(int *)(v149 + 64);
      uint64_t v151 = a1 + v150;
      uint64_t v152 = a2 + v150;
      uint64_t v67 = sub_1A56D4CB8();
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32);
      v68(v151, v152, v67);
      uint64_t v153 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v151 + v153[13]) = *(unsigned char *)(v152 + v153[13]);
      uint64_t v154 = v153[14];
      uint64_t v155 = v151 + v154;
      uint64_t v156 = v152 + v154;
      uint64_t v157 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
      uint64_t v158 = v153[15];
      uint64_t v75 = v151 + v158;
      uint64_t v76 = v152 + v158;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_52;
      }
      goto LABEL_26;
    case 7u:
      uint64_t v58 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        uint64_t v159 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 32))(a1, a2, v159);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
      *(void *)(a1 + *(int *)(v160 + 48)) = *(void *)(a2 + *(int *)(v160 + 48));
      *(void *)(a1 + *(int *)(v160 + 64)) = *(void *)(a2 + *(int *)(v160 + 64));
      goto LABEL_89;
    case 8u:
      uint64_t v59 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        uint64_t v161 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 32))(a1, a2, v161);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v162 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)(a1 + v162[12]) = *(void *)(a2 + v162[12]);
      *(void *)(a1 + v162[16]) = *(void *)(a2 + v162[16]);
      uint64_t v163 = v162[20];
      uint64_t v164 = a1 + v163;
      uint64_t v165 = a2 + v163;
      uint64_t v67 = sub_1A56D4CB8();
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32);
      v68(v164, v165, v67);
      uint64_t v166 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v164 + v166[13]) = *(unsigned char *)(v165 + v166[13]);
      uint64_t v167 = v166[14];
      uint64_t v168 = v164 + v167;
      uint64_t v169 = v165 + v167;
      uint64_t v170 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
      uint64_t v171 = v166[15];
      uint64_t v75 = v164 + v171;
      uint64_t v76 = v165 + v171;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_52;
      }
      goto LABEL_26;
    case 9u:
      uint64_t v60 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        uint64_t v172 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v172 - 8) + 32))(a1, a2, v172);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v173 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
      *(void *)(a1 + v173[12]) = *(void *)(a2 + v173[12]);
      *(void *)(a1 + v173[16]) = *(void *)(a2 + v173[16]);
      uint64_t v174 = v173[20];
      uint64_t v175 = a1 + v174;
      uint64_t v176 = a2 + v174;
      uint64_t v67 = sub_1A56D4CB8();
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32);
      v68(v175, v176, v67);
      uint64_t v177 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v175 + v177[13]) = *(unsigned char *)(v176 + v177[13]);
      uint64_t v178 = v177[14];
      uint64_t v179 = v175 + v178;
      uint64_t v180 = v176 + v178;
      uint64_t v181 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v181 - 8) + 32))(v179, v180, v181);
      uint64_t v182 = v177[15];
      uint64_t v75 = v175 + v182;
      uint64_t v76 = v176 + v182;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_26;
      }
      goto LABEL_52;
    case 0xAu:
      uint64_t v61 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        uint64_t v192 = sub_1A56D4A28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 32))(a1, a2, v192);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
      *(void *)(a1 + *(int *)(v193 + 48)) = *(void *)(a2 + *(int *)(v193 + 48));
      *(void *)(a1 + *(int *)(v193 + 64)) = *(void *)(a2 + *(int *)(v193 + 64));
      goto LABEL_89;
    case 0xBu:
      long long v62 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v62;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      long long v63 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v63;
      uint64_t v64 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
      uint64_t v65 = a1 + v64;
      uint64_t v66 = a2 + v64;
      uint64_t v67 = sub_1A56D4CB8();
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32);
      v68(v65, v66, v67);
      uint64_t v69 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
      *(unsigned char *)(v65 + v69[13]) = *(unsigned char *)(v66 + v69[13]);
      uint64_t v70 = v69[14];
      uint64_t v71 = v65 + v70;
      uint64_t v72 = v66 + v70;
      uint64_t v73 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
      uint64_t v74 = v69[15];
      uint64_t v75 = v65 + v74;
      uint64_t v76 = v66 + v74;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_26:
        *(unsigned char *)uint64_t v75 = *(unsigned char *)v76;
        uint64_t v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
        uint64_t v78 = v75 + v77;
        uint64_t v79 = v76 + v77;
        v68(v75 + v77, v79, v67);
        uint64_t v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
        uint64_t v81 = v78 + v80;
        uint64_t v82 = v79 + v80;
        v68(v81, v82, v67);
        uint64_t v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
        uint64_t v24 = (_OWORD *)(v81 + v83);
        uint64_t v25 = (_OWORD *)(v82 + v83);
      }
      else
      {
LABEL_52:
        long long v183 = *(_OWORD *)(v76 + 16);
        *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
        *(_OWORD *)(v75 + 16) = v183;
        *(void *)(v75 + 32) = *(void *)(v76 + 32);
        uint64_t v184 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
        uint64_t v185 = v75 + v184;
        uint64_t v186 = v76 + v184;
        *(_WORD *)(v185 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v76 + v184 + 48);
        long long v187 = *(_OWORD *)(v76 + v184 + 16);
        *(_OWORD *)uint64_t v185 = *(_OWORD *)(v76 + v184);
        *(_OWORD *)(v185 + 16) = v187;
        *(_OWORD *)(v185 + 32) = *(_OWORD *)(v76 + v184 + 32);
        uint64_t v188 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v189 = v185 + v188;
        uint64_t v190 = v186 + v188;
        v68(v185 + v188, v190, v67);
        uint64_t v191 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v24 = (_OWORD *)(v189 + v191);
        uint64_t v25 = (_OWORD *)(v190 + v191);
      }
      goto LABEL_53;
    case 0xDu:
      long long v84 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v84;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      long long v85 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v85;
      uint64_t v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
      uint64_t v87 = a1 + v86;
      uint64_t v88 = a2 + v86;
      uint64_t v31 = sub_1A56D4CB8();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v87, v88, v31);
      uint64_t v89 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
      *(unsigned char *)(v87 + v89[13]) = *(unsigned char *)(v88 + v89[13]);
      uint64_t v90 = v89[14];
      uint64_t v91 = v87 + v90;
      uint64_t v92 = v88 + v90;
      uint64_t v93 = sub_1A56D4C28();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
      uint64_t v94 = v89[15];
      uint64_t v39 = v87 + v94;
      uint64_t v40 = v88 + v94;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_6:
        *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
        uint64_t v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
        uint64_t v42 = v39 + v41;
        uint64_t v43 = v40 + v41;
        v32(v39 + v41, v43, v31);
        uint64_t v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
        uint64_t v45 = v42 + v44;
        uint64_t v46 = v43 + v44;
        v32(v45, v46, v31);
        uint64_t v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
        uint64_t v24 = (_OWORD *)(v45 + v47);
        uint64_t v25 = (_OWORD *)(v46 + v47);
      }
      else
      {
LABEL_68:
        long long v219 = *(_OWORD *)(v40 + 16);
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
        *(_OWORD *)(v39 + 16) = v219;
        *(void *)(v39 + 32) = *(void *)(v40 + 32);
        uint64_t v220 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
        uint64_t v221 = v39 + v220;
        uint64_t v222 = v40 + v220;
        *(_WORD *)(v221 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v40 + v220 + 48);
        long long v223 = *(_OWORD *)(v40 + v220 + 16);
        *(_OWORD *)uint64_t v221 = *(_OWORD *)(v40 + v220);
        *(_OWORD *)(v221 + 16) = v223;
        *(_OWORD *)(v221 + 32) = *(_OWORD *)(v40 + v220 + 32);
        uint64_t v224 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v225 = v221 + v224;
        uint64_t v226 = v222 + v224;
        v32(v221 + v224, v226, v31);
        uint64_t v227 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
        uint64_t v24 = (_OWORD *)(v225 + v227);
        uint64_t v25 = (_OWORD *)(v226 + v227);
      }
LABEL_53:
      *uint64_t v24 = *v25;
      swift_storeEnumTagMultiPayload();
      goto LABEL_89;
    case 0xFu:
      uint64_t v95 = sub_1A56D4C28();
      uint64_t v96 = *(void *)(v95 - 8);
      uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 32);
      v97(a1, a2, v95);
      int v98 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v99 = v98[5];
      uint64_t v100 = (void *)(a1 + v99);
      uint64_t v101 = (const void *)(a2 + v99);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(a2 + v99, 1, v95))
      {
        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        v97((uint64_t)v100, (uint64_t)v101, v95);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v100, 0, 1, v95);
      }
      *(unsigned char *)(a1 + v98[6]) = *(unsigned char *)(a2 + v98[6]);
      uint64_t v194 = v98[7];
      uint64_t v195 = (_OWORD *)(a1 + v194);
      uint64_t v196 = (_OWORD *)(a2 + v194);
      uint64_t v197 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v198 = *(void *)(v197 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v198 + 48))(v196, 1, v197))
      {
        uint64_t v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v195, v196, *(void *)(*(void *)(v199 - 8) + 64));
      }
      else
      {
        uint64_t v206 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v207 = *(void *)(v206 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v207 + 48))(v196, 1, v206))
        {
          memcpy(v195, v196, *(void *)(v198 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v195, v196, *(void *)(v207 + 64));
          }
          else
          {
            *uint64_t v195 = *v196;
            uint64_t v237 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            unint64_t v238 = (char *)v195 + v237;
            uint64_t v239 = (char *)v196 + v237;
            uint64_t v240 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v207 + 56))(v195, 0, 1, v206);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v198 + 56))(v195, 0, 1, v197);
      }
      uint64_t v241 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
      uint64_t v242 = v241[12];
      uint64_t v243 = (void *)(a1 + v242);
      uint64_t v244 = (const void *)(a2 + v242);
      uint64_t v245 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
      }
      else
      {
        uint64_t v246 = sub_1A56D4A28();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v246 - 8) + 32))(v243, v244, v246);
        swift_storeEnumTagMultiPayload();
      }
      *(_OWORD *)(a1 + v241[16]) = *(_OWORD *)(a2 + v241[16]);
      *(void *)(a1 + v241[20]) = *(void *)(a2 + v241[20]);
      *(void *)(a1 + v241[24]) = *(void *)(a2 + v241[24]);
      *(void *)(a1 + v241[28]) = *(void *)(a2 + v241[28]);
      goto LABEL_89;
    case 0x10u:
      uint64_t v103 = sub_1A56D4C28();
      uint64_t v104 = *(void *)(v103 - 8);
      uint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32);
      v105(a1, a2, v103);
      uint64_t v106 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
      uint64_t v107 = v106[5];
      uint64_t v108 = (void *)(a1 + v107);
      unint64_t v109 = (const void *)(a2 + v107);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(a2 + v107, 1, v103))
      {
        uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
        memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        v105((uint64_t)v108, (uint64_t)v109, v103);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v104 + 56))(v108, 0, 1, v103);
      }
      *(unsigned char *)(a1 + v106[6]) = *(unsigned char *)(a2 + v106[6]);
      uint64_t v200 = v106[7];
      uint64_t v201 = (_OWORD *)(a1 + v200);
      uint64_t v202 = (_OWORD *)(a2 + v200);
      uint64_t v203 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
      uint64_t v204 = *(void *)(v203 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v204 + 48))(v202, 1, v203))
      {
        uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
        memcpy(v201, v202, *(void *)(*(void *)(v205 - 8) + 64));
      }
      else
      {
        uint64_t v208 = type metadata accessor for SFAirDropReceive.Failure();
        uint64_t v209 = *(void *)(v208 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v209 + 48))(v202, 1, v208))
        {
          memcpy(v201, v202, *(void *)(v204 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v201, v202, *(void *)(v209 + 64));
          }
          else
          {
            *uint64_t v201 = *v202;
            uint64_t v247 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
            uint64_t v248 = (char *)v201 + v247;
            uint64_t v249 = (char *)v202 + v247;
            uint64_t v250 = sub_1A56D4A28();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 32))(v248, v249, v250);
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v209 + 56))(v201, 0, 1, v208);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v204 + 56))(v201, 0, 1, v203);
      }
      uint64_t v251 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
      uint64_t v252 = (_OWORD *)(a1 + v251);
      uint64_t v253 = (_OWORD *)(a2 + v251);
      uint64_t v254 = type metadata accessor for SFAirDropReceive.Failure();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
      }
      else
      {
        _OWORD *v252 = *v253;
        uint64_t v255 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
        unint64_t v256 = (char *)v252 + v255;
        uint64_t v257 = (char *)v253 + v255;
        uint64_t v258 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v258 - 8) + 32))(v256, v257, v258);
        swift_storeEnumTagMultiPayload();
      }
LABEL_89:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t _s8TransferV5StateOwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A54F7200(a1, type metadata accessor for SFAirDropReceive.Transfer.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1A56D4CB8();
        uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
        uint64_t v9 = v8[14];
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v12 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        uint64_t v13 = v8[15];
        uint64_t v14 = a1 + v13;
        uint64_t v15 = a2 + v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2) {
          goto LABEL_77;
        }
        if (EnumCaseMultiPayload != 1) {
          goto LABEL_74;
        }
        goto LABEL_5;
      case 1u:
        long long v26 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v26;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        long long v27 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v27;
        uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D48) + 48);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = a2 + v28;
        uint64_t v31 = sub_1A56D4CB8();
        uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
        v32(v29, v30, v31);
        uint64_t v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        *(unsigned char *)(v29 + v33[13]) = *(unsigned char *)(v30 + v33[13]);
        uint64_t v34 = v33[14];
        uint64_t v35 = v29 + v34;
        uint64_t v36 = v30 + v34;
        uint64_t v37 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        uint64_t v38 = v33[15];
        uint64_t v39 = v29 + v38;
        uint64_t v40 = v30 + v38;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v41 = swift_getEnumCaseMultiPayload();
        if (v41 == 2) {
          goto LABEL_81;
        }
        if (v41 == 1) {
          goto LABEL_8;
        }
        goto LABEL_76;
      case 2u:
        uint64_t v6 = sub_1A56D4CB8();
        uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        uint64_t v49 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(a1 + v49[13]) = *(unsigned char *)(a2 + v49[13]);
        uint64_t v50 = v49[14];
        uint64_t v51 = a1 + v50;
        uint64_t v52 = a2 + v50;
        uint64_t v53 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        uint64_t v54 = v49[15];
        uint64_t v14 = a1 + v54;
        uint64_t v15 = a2 + v54;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v55 = swift_getEnumCaseMultiPayload();
        if (v55 == 2)
        {
LABEL_77:
          long long v227 = *(_OWORD *)(v15 + 16);
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          *(_OWORD *)(v14 + 16) = v227;
          *(void *)(v14 + 32) = *(void *)(v15 + 32);
          uint64_t v228 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v229 = v14 + v228;
          uint64_t v230 = v15 + v228;
          *(_WORD *)(v229 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v15 + v228 + 48);
          long long v231 = *(_OWORD *)(v15 + v228 + 16);
          *(_OWORD *)uint64_t v229 = *(_OWORD *)(v15 + v228);
          *(_OWORD *)(v229 + 16) = v231;
          *(_OWORD *)(v229 + 32) = *(_OWORD *)(v15 + v228 + 32);
          uint64_t v232 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v233 = v229 + v232;
          uint64_t v234 = v230 + v232;
          v7(v229 + v232, v234, v6);
          uint64_t v235 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v24 = (_OWORD *)(v233 + v235);
          uint64_t v25 = (_OWORD *)(v234 + v235);
        }
        else if (v55 == 1)
        {
LABEL_5:
          *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
          uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v18 = v14 + v17;
          uint64_t v19 = v15 + v17;
          v7(v14 + v17, v19, v6);
          uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v21 = v18 + v20;
          uint64_t v22 = v19 + v20;
          v7(v21, v22, v6);
          uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v24 = (_OWORD *)(v21 + v23);
          uint64_t v25 = (_OWORD *)(v22 + v23);
        }
        else
        {
LABEL_74:
          long long v209 = *(_OWORD *)(v15 + 16);
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          *(_OWORD *)(v14 + 16) = v209;
          *(void *)(v14 + 32) = *(void *)(v15 + 32);
          uint64_t v210 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v211 = v14 + v210;
          uint64_t v212 = v15 + v210;
          *(_WORD *)(v211 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v15 + v210 + 48);
          long long v213 = *(_OWORD *)(v15 + v210 + 16);
          *(_OWORD *)uint64_t v211 = *(_OWORD *)(v15 + v210);
          *(_OWORD *)(v211 + 16) = v213;
          *(_OWORD *)(v211 + 32) = *(_OWORD *)(v15 + v210 + 32);
          uint64_t v214 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v215 = v211 + v214;
          uint64_t v216 = v212 + v214;
          v7(v215, v212 + v214, v6);
          uint64_t v217 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v24 = (_OWORD *)(v215 + v217);
          uint64_t v25 = (_OWORD *)(v216 + v217);
        }
        break;
      case 3u:
        uint64_t v56 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          uint64_t v108 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 32))(a1, a2, v108);
          swift_storeEnumTagMultiPayload();
        }
        unint64_t v109 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D40);
        uint64_t v110 = v109[12];
        uint64_t v111 = a1 + v110;
        uint64_t v112 = a2 + v110;
        long long v113 = *(_OWORD *)(v112 + 16);
        *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
        *(_OWORD *)(v111 + 16) = v113;
        *(void *)(v111 + 32) = *(void *)(v112 + 32);
        *(_OWORD *)(a1 + v109[16]) = *(_OWORD *)(a2 + v109[16]);
        uint64_t v114 = v109[20];
        uint64_t v115 = a1 + v114;
        uint64_t v116 = a2 + v114;
        long long v117 = *(_OWORD *)(a2 + v114 + 16);
        *(_OWORD *)uint64_t v115 = *(_OWORD *)(a2 + v114);
        *(_OWORD *)(v115 + 16) = v117;
        *(_OWORD *)(v115 + 32) = *(_OWORD *)(a2 + v114 + 32);
        *(unsigned char *)(v115 + 4_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + v114 + 48);
        *(unsigned char *)(v115 + 49) = *(unsigned char *)(a2 + v114 + 49);
        uint64_t v118 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v119 = v115 + v118;
        uint64_t v120 = v116 + v118;
        uint64_t v121 = sub_1A56D4CB8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 32))(v119, v120, v121);
        uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
        *(_OWORD *)(v119 + *(int *)(v122 + 68)) = *(_OWORD *)(v120 + *(int *)(v122 + 68));
        goto LABEL_109;
      case 4u:
        uint64_t v57 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          uint64_t v123 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 32))(a1, a2, v123);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v124 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D38);
        *(void *)(a1 + v124[12]) = *(void *)(a2 + v124[12]);
        *(void *)(a1 + v124[16]) = *(void *)(a2 + v124[16]);
        uint64_t v125 = v124[20];
        uint64_t v126 = a1 + v125;
        uint64_t v127 = a2 + v125;
        *(_WORD *)(v126 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(a2 + v125 + 48);
        long long v128 = *(_OWORD *)(a2 + v125 + 16);
        *(_OWORD *)uint64_t v126 = *(_OWORD *)(a2 + v125);
        *(_OWORD *)(v126 + 16) = v128;
        *(_OWORD *)(v126 + 32) = *(_OWORD *)(a2 + v125 + 32);
        uint64_t v129 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
        uint64_t v130 = v126 + v129;
        uint64_t v131 = v127 + v129;
        uint64_t v132 = sub_1A56D4CB8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 32))(v130, v131, v132);
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8);
        *(_OWORD *)(v130 + *(int *)(v133 + 68)) = *(_OWORD *)(v131 + *(int *)(v133 + 68));
        goto LABEL_109;
      case 5u:
        uint64_t v58 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          uint64_t v134 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 32))(a1, a2, v134);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)(a1 + *(int *)(v135 + 48)) = *(void *)(a2 + *(int *)(v135 + 48));
        uint64_t v136 = *(int *)(v135 + 64);
        uint64_t v137 = a1 + v136;
        uint64_t v138 = a2 + v136;
        uint64_t v69 = sub_1A56D4CB8();
        uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32);
        v70(v137, v138, v69);
        uint64_t v139 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v137 + v139[13]) = *(unsigned char *)(v138 + v139[13]);
        uint64_t v140 = v139[14];
        uint64_t v141 = v137 + v140;
        uint64_t v142 = v138 + v140;
        uint64_t v143 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 32))(v141, v142, v143);
        uint64_t v144 = v139[15];
        uint64_t v77 = v137 + v144;
        uint64_t v78 = v138 + v144;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v145 = swift_getEnumCaseMultiPayload();
        if (v145 == 2) {
          goto LABEL_89;
        }
        if (v145 == 1) {
          goto LABEL_56;
        }
        goto LABEL_90;
      case 6u:
        uint64_t v59 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          uint64_t v146 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 32))(a1, a2, v146);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D30);
        *(void *)(a1 + *(int *)(v147 + 48)) = *(void *)(a2 + *(int *)(v147 + 48));
        uint64_t v148 = *(int *)(v147 + 64);
        uint64_t v149 = a1 + v148;
        uint64_t v150 = a2 + v148;
        uint64_t v69 = sub_1A56D4CB8();
        uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32);
        v70(v149, v150, v69);
        uint64_t v151 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v149 + v151[13]) = *(unsigned char *)(v150 + v151[13]);
        uint64_t v152 = v151[14];
        uint64_t v153 = v149 + v152;
        uint64_t v154 = v150 + v152;
        uint64_t v155 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
        uint64_t v156 = v151[15];
        uint64_t v77 = v149 + v156;
        uint64_t v78 = v150 + v156;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v157 = swift_getEnumCaseMultiPayload();
        if (v157 == 2) {
          goto LABEL_89;
        }
        if (v157 == 1) {
          goto LABEL_56;
        }
        goto LABEL_90;
      case 7u:
        uint64_t v60 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          uint64_t v158 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 32))(a1, a2, v158);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D28);
        *(void *)(a1 + *(int *)(v159 + 48)) = *(void *)(a2 + *(int *)(v159 + 48));
        *(void *)(a1 + *(int *)(v159 + 64)) = *(void *)(a2 + *(int *)(v159 + 64));
        goto LABEL_109;
      case 8u:
        uint64_t v61 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          uint64_t v160 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 32))(a1, a2, v160);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v161 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)(a1 + v161[12]) = *(void *)(a2 + v161[12]);
        *(void *)(a1 + v161[16]) = *(void *)(a2 + v161[16]);
        uint64_t v162 = v161[20];
        uint64_t v163 = a1 + v162;
        uint64_t v164 = a2 + v162;
        uint64_t v69 = sub_1A56D4CB8();
        uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32);
        v70(v163, v164, v69);
        uint64_t v165 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v163 + v165[13]) = *(unsigned char *)(v164 + v165[13]);
        uint64_t v166 = v165[14];
        uint64_t v167 = v163 + v166;
        uint64_t v168 = v164 + v166;
        uint64_t v169 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 32))(v167, v168, v169);
        uint64_t v170 = v165[15];
        uint64_t v77 = v163 + v170;
        uint64_t v78 = v164 + v170;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v171 = swift_getEnumCaseMultiPayload();
        if (v171 == 2) {
          goto LABEL_89;
        }
        if (v171 == 1) {
          goto LABEL_56;
        }
        goto LABEL_90;
      case 9u:
        uint64_t v62 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          uint64_t v179 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 32))(a1, a2, v179);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v180 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D20);
        *(void *)(a1 + v180[12]) = *(void *)(a2 + v180[12]);
        *(void *)(a1 + v180[16]) = *(void *)(a2 + v180[16]);
        uint64_t v181 = v180[20];
        uint64_t v182 = a1 + v181;
        uint64_t v183 = a2 + v181;
        uint64_t v69 = sub_1A56D4CB8();
        uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32);
        v70(v182, v183, v69);
        uint64_t v184 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v182 + v184[13]) = *(unsigned char *)(v183 + v184[13]);
        uint64_t v185 = v184[14];
        uint64_t v186 = v182 + v185;
        uint64_t v187 = v183 + v185;
        uint64_t v188 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 32))(v186, v187, v188);
        uint64_t v189 = v184[15];
        uint64_t v77 = v182 + v189;
        uint64_t v78 = v183 + v189;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v190 = swift_getEnumCaseMultiPayload();
        if (v190 == 2) {
          goto LABEL_89;
        }
        if (v190 == 1) {
          goto LABEL_56;
        }
        goto LABEL_90;
      case 0xAu:
        uint64_t v63 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          uint64_t v191 = sub_1A56D4A28();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v191 - 8) + 32))(a1, a2, v191);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D18);
        *(void *)(a1 + *(int *)(v192 + 48)) = *(void *)(a2 + *(int *)(v192 + 48));
        *(void *)(a1 + *(int *)(v192 + 64)) = *(void *)(a2 + *(int *)(v192 + 64));
        goto LABEL_109;
      case 0xBu:
        long long v64 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v64;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        long long v65 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v65;
        uint64_t v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D08) + 48);
        uint64_t v67 = a1 + v66;
        uint64_t v68 = a2 + v66;
        uint64_t v69 = sub_1A56D4CB8();
        uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32);
        v70(v67, v68, v69);
        uint64_t v71 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
        *(unsigned char *)(v67 + v71[13]) = *(unsigned char *)(v68 + v71[13]);
        uint64_t v72 = v71[14];
        uint64_t v73 = v67 + v72;
        uint64_t v74 = v68 + v72;
        uint64_t v75 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        uint64_t v76 = v71[15];
        uint64_t v77 = v67 + v76;
        uint64_t v78 = v68 + v76;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
        int v79 = swift_getEnumCaseMultiPayload();
        if (v79 == 2)
        {
LABEL_89:
          long long v245 = *(_OWORD *)(v78 + 16);
          *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
          *(_OWORD *)(v77 + 16) = v245;
          *(void *)(v77 + 32) = *(void *)(v78 + 32);
          uint64_t v246 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v247 = v77 + v246;
          uint64_t v248 = v78 + v246;
          *(_WORD *)(v247 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v78 + v246 + 48);
          long long v249 = *(_OWORD *)(v78 + v246 + 16);
          *(_OWORD *)uint64_t v247 = *(_OWORD *)(v78 + v246);
          *(_OWORD *)(v247 + 16) = v249;
          *(_OWORD *)(v247 + 32) = *(_OWORD *)(v78 + v246 + 32);
          uint64_t v250 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v251 = v247 + v250;
          uint64_t v252 = v248 + v250;
          v70(v247 + v250, v252, v69);
          uint64_t v253 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v24 = (_OWORD *)(v251 + v253);
          uint64_t v25 = (_OWORD *)(v252 + v253);
        }
        else if (v79 == 1)
        {
LABEL_56:
          *(unsigned char *)uint64_t v77 = *(unsigned char *)v78;
          uint64_t v172 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
          uint64_t v173 = v77 + v172;
          uint64_t v174 = v78 + v172;
          v70(v77 + v172, v174, v69);
          uint64_t v175 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
          uint64_t v176 = v173 + v175;
          uint64_t v177 = v174 + v175;
          v70(v176, v177, v69);
          uint64_t v178 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v24 = (_OWORD *)(v176 + v178);
          uint64_t v25 = (_OWORD *)(v177 + v178);
        }
        else
        {
LABEL_90:
          long long v254 = *(_OWORD *)(v78 + 16);
          *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
          *(_OWORD *)(v77 + 16) = v254;
          *(void *)(v77 + 32) = *(void *)(v78 + 32);
          uint64_t v255 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
          uint64_t v256 = v77 + v255;
          uint64_t v257 = v78 + v255;
          *(_WORD *)(v256 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v78 + v255 + 48);
          long long v258 = *(_OWORD *)(v78 + v255 + 16);
          *(_OWORD *)uint64_t v256 = *(_OWORD *)(v78 + v255);
          *(_OWORD *)(v256 + 16) = v258;
          *(_OWORD *)(v256 + 32) = *(_OWORD *)(v78 + v255 + 32);
          uint64_t v259 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v260 = v256 + v259;
          uint64_t v261 = v257 + v259;
          v70(v260, v257 + v259, v69);
          uint64_t v262 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v24 = (_OWORD *)(v260 + v262);
          uint64_t v25 = (_OWORD *)(v261 + v262);
        }
        break;
      case 0xDu:
        long long v80 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v80;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        long long v81 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v81;
        uint64_t v82 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF8) + 48);
        uint64_t v83 = a1 + v82;
        uint64_t v84 = a2 + v82;
        uint64_t v31 = sub_1A56D4CB8();
        uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
        v32(v83, v84, v31);
        long long v85 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D00);
        *(unsigned char *)(v83 + v85[13]) = *(unsigned char *)(v84 + v85[13]);
        uint64_t v86 = v85[14];
        uint64_t v87 = v83 + v86;
        uint64_t v88 = v84 + v86;
        uint64_t v89 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
        uint64_t v90 = v85[15];
        uint64_t v39 = v83 + v90;
        uint64_t v40 = v84 + v90;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D50);
        int v91 = swift_getEnumCaseMultiPayload();
        if (v91 == 2)
        {
LABEL_81:
          long long v236 = *(_OWORD *)(v40 + 16);
          *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
          *(_OWORD *)(v39 + 16) = v236;
          *(void *)(v39 + 32) = *(void *)(v40 + 32);
          uint64_t v237 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v238 = v39 + v237;
          uint64_t v239 = v40 + v237;
          *(_WORD *)(v238 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v40 + v237 + 48);
          long long v240 = *(_OWORD *)(v40 + v237 + 16);
          *(_OWORD *)uint64_t v238 = *(_OWORD *)(v40 + v237);
          *(_OWORD *)(v238 + 16) = v240;
          *(_OWORD *)(v238 + 32) = *(_OWORD *)(v40 + v237 + 32);
          uint64_t v241 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v242 = v238 + v241;
          uint64_t v243 = v239 + v241;
          v32(v238 + v241, v243, v31);
          uint64_t v244 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v24 = (_OWORD *)(v242 + v244);
          uint64_t v25 = (_OWORD *)(v243 + v244);
        }
        else if (v91 == 1)
        {
LABEL_8:
          *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
          uint64_t v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F8) + 48);
          uint64_t v43 = v39 + v42;
          uint64_t v44 = v40 + v42;
          v32(v39 + v42, v44, v31);
          uint64_t v45 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671100) + 52);
          uint64_t v46 = v43 + v45;
          uint64_t v47 = v44 + v45;
          v32(v46, v47, v31);
          uint64_t v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710F0) + 68);
          uint64_t v24 = (_OWORD *)(v46 + v48);
          uint64_t v25 = (_OWORD *)(v47 + v48);
        }
        else
        {
LABEL_76:
          long long v218 = *(_OWORD *)(v40 + 16);
          *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
          *(_OWORD *)(v39 + 16) = v218;
          *(void *)(v39 + 32) = *(void *)(v40 + 32);
          uint64_t v219 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D60) + 80);
          uint64_t v220 = v39 + v219;
          uint64_t v221 = v40 + v219;
          *(_WORD *)(v220 + 4_Block_object_dispose(&a9, 8) = *(_WORD *)(v40 + v219 + 48);
          long long v222 = *(_OWORD *)(v40 + v219 + 16);
          *(_OWORD *)uint64_t v220 = *(_OWORD *)(v40 + v219);
          *(_OWORD *)(v220 + 16) = v222;
          *(_OWORD *)(v220 + 32) = *(_OWORD *)(v40 + v219 + 32);
          uint64_t v223 = *(int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
          uint64_t v224 = v220 + v223;
          uint64_t v225 = v221 + v223;
          v32(v224, v221 + v223, v31);
          uint64_t v226 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710D8) + 68);
          uint64_t v24 = (_OWORD *)(v224 + v226);
          uint64_t v25 = (_OWORD *)(v225 + v226);
        }
        break;
      case 0xFu:
        uint64_t v92 = sub_1A56D4C28();
        uint64_t v93 = *(void *)(v92 - 8);
        uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32);
        v94(a1, a2, v92);
        uint64_t v95 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v96 = v95[5];
        uint64_t v97 = (void *)(a1 + v96);
        int v98 = (const void *)(a2 + v96);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(a2 + v96, 1, v92))
        {
          uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          v94((uint64_t)v97, (uint64_t)v98, v92);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v97, 0, 1, v92);
        }
        *(unsigned char *)(a1 + v95[6]) = *(unsigned char *)(a2 + v95[6]);
        uint64_t v193 = v95[7];
        uint64_t v194 = (_OWORD *)(a1 + v193);
        uint64_t v195 = (_OWORD *)(a2 + v193);
        uint64_t v196 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v197 = *(void *)(v196 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        {
          uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v194, v195, *(void *)(*(void *)(v198 - 8) + 64));
        }
        else
        {
          uint64_t v205 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v206 = *(void *)(v205 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v206 + 48))(v195, 1, v205))
          {
            memcpy(v194, v195, *(void *)(v197 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v194, v195, *(void *)(v206 + 64));
            }
            else
            {
              *uint64_t v194 = *v195;
              uint64_t v263 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              uint64_t v264 = (char *)v194 + v263;
              uint64_t v265 = (char *)v195 + v263;
              uint64_t v266 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v264, v265, v266);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v206 + 56))(v194, 0, 1, v205);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
        }
        uint64_t v267 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CF0);
        uint64_t v268 = v267[12];
        uint64_t v269 = (void *)(a1 + v268);
        uint64_t v270 = (const void *)(a2 + v268);
        uint64_t v271 = type metadata accessor for SFAirDropReceive.ItemDestination();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v269, v270, *(void *)(*(void *)(v271 - 8) + 64));
        }
        else
        {
          uint64_t v272 = sub_1A56D4A28();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v272 - 8) + 32))(v269, v270, v272);
          swift_storeEnumTagMultiPayload();
        }
        *(_OWORD *)(a1 + v267[16]) = *(_OWORD *)(a2 + v267[16]);
        *(void *)(a1 + v267[20]) = *(void *)(a2 + v267[20]);
        *(void *)(a1 + v267[24]) = *(void *)(a2 + v267[24]);
        *(void *)(a1 + v267[28]) = *(void *)(a2 + v267[28]);
        goto LABEL_109;
      case 0x10u:
        uint64_t v100 = sub_1A56D4C28();
        uint64_t v101 = *(void *)(v100 - 8);
        uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32);
        v102(a1, a2, v100);
        uint64_t v103 = (int *)type metadata accessor for SFAirDropReceive.Transfer.Metrics(0);
        uint64_t v104 = v103[5];
        uint64_t v105 = (void *)(a1 + v104);
        uint64_t v106 = (const void *)(a2 + v104);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(a2 + v104, 1, v100))
        {
          uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
          memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          v102((uint64_t)v105, (uint64_t)v106, v100);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v105, 0, 1, v100);
        }
        *(unsigned char *)(a1 + v103[6]) = *(unsigned char *)(a2 + v103[6]);
        uint64_t v199 = v103[7];
        uint64_t v200 = (_OWORD *)(a1 + v199);
        uint64_t v201 = (_OWORD *)(a2 + v199);
        uint64_t v202 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult(0);
        uint64_t v203 = *(void *)(v202 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202))
        {
          uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671118);
          memcpy(v200, v201, *(void *)(*(void *)(v204 - 8) + 64));
        }
        else
        {
          uint64_t v207 = type metadata accessor for SFAirDropReceive.Failure();
          uint64_t v208 = *(void *)(v207 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v208 + 48))(v201, 1, v207))
          {
            memcpy(v200, v201, *(void *)(v203 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v200, v201, *(void *)(v208 + 64));
            }
            else
            {
              *uint64_t v200 = *v201;
              uint64_t v273 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
              uint64_t v274 = (char *)v200 + v273;
              uint64_t v275 = (char *)v201 + v273;
              uint64_t v276 = sub_1A56D4A28();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 32))(v274, v275, v276);
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v208 + 56))(v200, 0, 1, v207);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
        }
        uint64_t v277 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670CE8) + 48);
        uint64_t v278 = (_OWORD *)(a1 + v277);
        uint64_t v279 = (_OWORD *)(a2 + v277);
        uint64_t v280 = type metadata accessor for SFAirDropReceive.Failure();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
        }
        else
        {
          _OWORD *v278 = *v279;
          uint64_t v281 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671110) + 48);
          uint64_t v282 = (char *)v278 + v281;
          uint64_t v283 = (char *)v279 + v281;
          uint64_t v284 = sub_1A56D4A28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 32))(v282, v283, v284);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_109;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    *uint64_t v24 = *v25;
    swift_storeEnumTagMultiPayload();
LABEL_109:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1A5532C54()
{
  sub_1A5532FE0();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(v0 - 8) + 64;
    uint64_t v32 = v2;
    sub_1A55330E4();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v33 = &v31;
      uint64_t v34 = v2;
      uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (v5 <= 0x3F)
      {
        uint64_t v6 = *(void *)(v4 - 8) + 64;
        uint64_t v14 = v6;
        uint64_t v15 = &unk_1A56ED7B0;
        uint64_t v16 = &unk_1A56ED7C8;
        type metadata accessor for SFAirDrop.DeclineAction();
        if (v7 <= 0x3F)
        {
          swift_getTupleTypeLayout();
          uint64_t v35 = &v30;
          uint64_t v8 = MEMORY[0x1E4FBAD80] + 64;
          uint64_t v9 = MEMORY[0x1E4FBADA0];
          swift_getTupleTypeLayout();
          uint64_t v36 = &v29;
          swift_getTupleTypeLayout3();
          uint64_t v37 = &v28;
          swift_getTupleTypeLayout3();
          uint64_t v38 = &v27;
          swift_getTupleTypeLayout3();
          uint64_t v39 = &v26;
          swift_getTupleTypeLayout();
          uint64_t v40 = &v25;
          uint64_t v14 = v6;
          uint64_t v15 = (void *)v8;
          uint64_t v16 = (void *)v8;
          uint64_t v17 = v2;
          swift_getTupleTypeLayout();
          int v41 = &v24;
          swift_getTupleTypeLayout3();
          uint64_t v42 = &v23;
          swift_getTupleTypeLayout2();
          uint64_t v43 = &v22;
          uint64_t v44 = "H";
          swift_getTupleTypeLayout2();
          uint64_t v45 = &v21;
          uint64_t v46 = &unk_1A56ED7E0;
          uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(319);
          if (v11 <= 0x3F)
          {
            uint64_t v14 = *(void *)(v10 - 8) + 64;
            uint64_t v15 = (void *)v6;
            uint64_t v16 = &unk_1A56ED7F8;
            uint64_t v17 = v8;
            uint64_t v18 = v8;
            uint64_t v19 = v8;
            swift_getTupleTypeLayout();
            uint64_t v47 = &v20;
            type metadata accessor for SFAirDropReceive.Failure();
            if (v12 <= 0x3F)
            {
              swift_getTupleTypeLayout2();
              uint64_t v48 = &v13;
              uint64_t v49 = v9 + 64;
              swift_initEnumMetadataMultiPayload();
            }
          }
        }
      }
    }
  }
}

void sub_1A5532FE0()
{
  if (!qword_1E966BB60)
  {
    type metadata accessor for SFAirDropReceive.ItemDestination();
    sub_1A550CAB0(&qword_1E966B250, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1A550CAB0(&qword_1E966B240, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1A550CAB0(&qword_1E966B248, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
    unint64_t v0 = type metadata accessor for SFAirDrop.PermissionRequest();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E966BB60);
    }
  }
}

void sub_1A55330E4()
{
  if (!qword_1E966BB70)
  {
    sub_1A550D318();
    sub_1A550CBA0();
    sub_1A5533168();
    unint64_t v0 = type metadata accessor for SFAirDrop.PermissionRequest();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E966BB70);
    }
  }
}

unint64_t sub_1A5533168()
{
  unint64_t result = qword_1E966B9D0;
  if (!qword_1E966B9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B9D0);
  }
  return result;
}

uint64_t _s8TransferV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8TransferV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5533318);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TransferV10CodingKeysOMa()
{
  return &_s8TransferV10CodingKeysON;
}

uint64_t _s8TransferV5StateO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8TransferV5StateO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55334ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TransferV5StateO10CodingKeysOMa()
{
  return &_s8TransferV5StateO10CodingKeysON;
}

ValueMetadata *_s8TransferV5StateO17CreatedCodingKeysOMa()
{
  return &_s8TransferV5StateO17CreatedCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO22AutoAcceptedCodingKeysOMa()
{
  return &_s8TransferV5StateO22AutoAcceptedCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO27AnalyizingPreviewCodingKeysOMa()
{
  return &_s8TransferV5StateO27AnalyizingPreviewCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO31WaitingForAskResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO31WaitingForAskResponseCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO48WaitingForSensitivePreviewInterventionCodingKeysOMa()
{
  return &_s8TransferV5StateO48WaitingForSensitivePreviewInterventionCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO22TransferringCodingKeysOMa()
{
  return &_s8TransferV5StateO22TransferringCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO30AnalyzingFullContentCodingKeysOMa()
{
  return &_s8TransferV5StateO30AnalyzingFullContentCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO48WaitingForSensitiveContentInterventionCodingKeysOMa()
{
  return &_s8TransferV5StateO48WaitingForSensitiveContentInterventionCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO19ImportingCodingKeysOMa()
{
  return &_s8TransferV5StateO19ImportingCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO32WaitingForOpenResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO32WaitingForOpenResponseCodingKeysON;
}

unsigned char *_s8TransferV5StateO22TransferringCodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A553368CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TransferV5StateO43WaitingForOpenDestinationResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO43WaitingForOpenDestinationResponseCodingKeysON;
}

uint64_t getEnumTagSinglePayload for SFInterventionWorkflow(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8TransferV5StateO44WaitingForSensitiveContentResponseCodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5533820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TransferV5StateO17OpeningCodingKeysOMa()
{
  return &_s8TransferV5StateO17OpeningCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO42WaitingForContactExchangeRequestCodingKeysOMa()
{
  return &_s8TransferV5StateO42WaitingForContactExchangeRequestCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO47WaitingForShouldImportContactResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO47WaitingForShouldImportContactResponseCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO34ImportingReceivedContactCodingKeysOMa()
{
  return &_s8TransferV5StateO34ImportingReceivedContactCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO44WaitingForContactShareBackResponseCodingKeysOMa()
{
  return &_s8TransferV5StateO44WaitingForContactShareBackResponseCodingKeysON;
}

ValueMetadata *_s8TransferV5StateO28SharingContactBackCodingKeysOMa()
{
  return &_s8TransferV5StateO28SharingContactBackCodingKeysON;
}

uint64_t _s8TransferV5StateO31CompletedSuccessfullyCodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8TransferV5StateO31CompletedSuccessfullyCodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5533A04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TransferV5StateO31CompletedSuccessfullyCodingKeysOMa()
{
  return &_s8TransferV5StateO31CompletedSuccessfullyCodingKeysON;
}

unsigned char *_s8TransferV5StateO50WaitingForShareContactPermissionResponseCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5533B08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TransferV5StateO24TransferFailedCodingKeysOMa()
{
  return &_s8TransferV5StateO24TransferFailedCodingKeysON;
}

unsigned char *_s8TransferV5StateO31WaitingForAskResponseCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A5533BDCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s8TransferV5StateO29LegacyTransferStateCodingKeysOMa()
{
  return &_s8TransferV5StateO29LegacyTransferStateCodingKeysON;
}

unint64_t sub_1A5533C18()
{
  unint64_t result = qword_1E9671138;
  if (!qword_1E9671138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671138);
  }
  return result;
}

unint64_t sub_1A5533C70()
{
  unint64_t result = qword_1E9671140;
  if (!qword_1E9671140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671140);
  }
  return result;
}

unint64_t sub_1A5533CC8()
{
  unint64_t result = qword_1E9671148;
  if (!qword_1E9671148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671148);
  }
  return result;
}

unint64_t sub_1A5533D20()
{
  unint64_t result = qword_1E9671150;
  if (!qword_1E9671150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671150);
  }
  return result;
}

unint64_t sub_1A5533D78()
{
  unint64_t result = qword_1E9671158;
  if (!qword_1E9671158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671158);
  }
  return result;
}

unint64_t sub_1A5533DD0()
{
  unint64_t result = qword_1E9671160;
  if (!qword_1E9671160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671160);
  }
  return result;
}

unint64_t sub_1A5533E28()
{
  unint64_t result = qword_1E9671168;
  if (!qword_1E9671168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671168);
  }
  return result;
}

unint64_t sub_1A5533E80()
{
  unint64_t result = qword_1E9671170;
  if (!qword_1E9671170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671170);
  }
  return result;
}

unint64_t sub_1A5533ED8()
{
  unint64_t result = qword_1E9671178;
  if (!qword_1E9671178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671178);
  }
  return result;
}

unint64_t sub_1A5533F30()
{
  unint64_t result = qword_1E9671180;
  if (!qword_1E9671180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671180);
  }
  return result;
}

unint64_t sub_1A5533F88()
{
  unint64_t result = qword_1E9671188;
  if (!qword_1E9671188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671188);
  }
  return result;
}

unint64_t sub_1A5533FE0()
{
  unint64_t result = qword_1E9671190;
  if (!qword_1E9671190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671190);
  }
  return result;
}

unint64_t sub_1A5534038()
{
  unint64_t result = qword_1E9671198;
  if (!qword_1E9671198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671198);
  }
  return result;
}

unint64_t sub_1A5534090()
{
  unint64_t result = qword_1E96711A0;
  if (!qword_1E96711A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711A0);
  }
  return result;
}

unint64_t sub_1A55340E8()
{
  unint64_t result = qword_1E96711A8;
  if (!qword_1E96711A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711A8);
  }
  return result;
}

unint64_t sub_1A5534140()
{
  unint64_t result = qword_1E96711B0;
  if (!qword_1E96711B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711B0);
  }
  return result;
}

unint64_t sub_1A5534198()
{
  unint64_t result = qword_1E96711B8;
  if (!qword_1E96711B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711B8);
  }
  return result;
}

unint64_t sub_1A55341F0()
{
  unint64_t result = qword_1E96711C0;
  if (!qword_1E96711C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711C0);
  }
  return result;
}

unint64_t sub_1A5534248()
{
  unint64_t result = qword_1E96711C8;
  if (!qword_1E96711C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711C8);
  }
  return result;
}

unint64_t sub_1A55342A0()
{
  unint64_t result = qword_1E96711D0;
  if (!qword_1E96711D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711D0);
  }
  return result;
}

unint64_t sub_1A55342F8()
{
  unint64_t result = qword_1E96711D8;
  if (!qword_1E96711D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711D8);
  }
  return result;
}

unint64_t sub_1A5534350()
{
  unint64_t result = qword_1E96711E0;
  if (!qword_1E96711E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711E0);
  }
  return result;
}

unint64_t sub_1A55343A8()
{
  unint64_t result = qword_1E96711E8;
  if (!qword_1E96711E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711E8);
  }
  return result;
}

unint64_t sub_1A5534400()
{
  unint64_t result = qword_1E96711F0;
  if (!qword_1E96711F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711F0);
  }
  return result;
}

unint64_t sub_1A5534458()
{
  unint64_t result = qword_1E96711F8;
  if (!qword_1E96711F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96711F8);
  }
  return result;
}

unint64_t sub_1A55344B0()
{
  unint64_t result = qword_1E9671200;
  if (!qword_1E9671200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671200);
  }
  return result;
}

unint64_t sub_1A5534508()
{
  unint64_t result = qword_1E9671208;
  if (!qword_1E9671208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671208);
  }
  return result;
}

unint64_t sub_1A5534560()
{
  unint64_t result = qword_1E9671210;
  if (!qword_1E9671210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671210);
  }
  return result;
}

unint64_t sub_1A55345B8()
{
  unint64_t result = qword_1E9671218;
  if (!qword_1E9671218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671218);
  }
  return result;
}

unint64_t sub_1A5534610()
{
  unint64_t result = qword_1E9671220;
  if (!qword_1E9671220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671220);
  }
  return result;
}

unint64_t sub_1A5534668()
{
  unint64_t result = qword_1E9671228;
  if (!qword_1E9671228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671228);
  }
  return result;
}

unint64_t sub_1A55346C0()
{
  unint64_t result = qword_1E9671230;
  if (!qword_1E9671230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671230);
  }
  return result;
}

unint64_t sub_1A5534718()
{
  unint64_t result = qword_1E9671238;
  if (!qword_1E9671238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671238);
  }
  return result;
}

unint64_t sub_1A5534770()
{
  unint64_t result = qword_1E9671240;
  if (!qword_1E9671240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671240);
  }
  return result;
}

unint64_t sub_1A55347C8()
{
  unint64_t result = qword_1E9671248;
  if (!qword_1E9671248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671248);
  }
  return result;
}

unint64_t sub_1A5534820()
{
  unint64_t result = qword_1E9671250;
  if (!qword_1E9671250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671250);
  }
  return result;
}

unint64_t sub_1A5534878()
{
  unint64_t result = qword_1E9671258;
  if (!qword_1E9671258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671258);
  }
  return result;
}

unint64_t sub_1A55348D0()
{
  unint64_t result = qword_1E9671260;
  if (!qword_1E9671260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671260);
  }
  return result;
}

unint64_t sub_1A5534928()
{
  unint64_t result = qword_1E9671268;
  if (!qword_1E9671268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671268);
  }
  return result;
}

unint64_t sub_1A5534980()
{
  unint64_t result = qword_1E9671270;
  if (!qword_1E9671270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671270);
  }
  return result;
}

unint64_t sub_1A55349D8()
{
  unint64_t result = qword_1E9671278;
  if (!qword_1E9671278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671278);
  }
  return result;
}

unint64_t sub_1A5534A30()
{
  unint64_t result = qword_1E9671280;
  if (!qword_1E9671280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671280);
  }
  return result;
}

unint64_t sub_1A5534A88()
{
  unint64_t result = qword_1E9671288;
  if (!qword_1E9671288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671288);
  }
  return result;
}

unint64_t sub_1A5534AE0()
{
  unint64_t result = qword_1E9671290;
  if (!qword_1E9671290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671290);
  }
  return result;
}

unint64_t sub_1A5534B38()
{
  unint64_t result = qword_1E9671298;
  if (!qword_1E9671298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671298);
  }
  return result;
}

unint64_t sub_1A5534B90()
{
  unint64_t result = qword_1E96712A0;
  if (!qword_1E96712A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712A0);
  }
  return result;
}

unint64_t sub_1A5534BE8()
{
  unint64_t result = qword_1E96712A8;
  if (!qword_1E96712A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712A8);
  }
  return result;
}

unint64_t sub_1A5534C40()
{
  unint64_t result = qword_1E96712B0;
  if (!qword_1E96712B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712B0);
  }
  return result;
}

unint64_t sub_1A5534C98()
{
  unint64_t result = qword_1E96712B8;
  if (!qword_1E96712B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712B8);
  }
  return result;
}

unint64_t sub_1A5534CF0()
{
  unint64_t result = qword_1E96712C0;
  if (!qword_1E96712C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712C0);
  }
  return result;
}

unint64_t sub_1A5534D48()
{
  unint64_t result = qword_1E96712C8;
  if (!qword_1E96712C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712C8);
  }
  return result;
}

unint64_t sub_1A5534DA0()
{
  unint64_t result = qword_1E96712D0;
  if (!qword_1E96712D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712D0);
  }
  return result;
}

unint64_t sub_1A5534DF8()
{
  unint64_t result = qword_1E96712D8;
  if (!qword_1E96712D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712D8);
  }
  return result;
}

unint64_t sub_1A5534E50()
{
  unint64_t result = qword_1E96712E0;
  if (!qword_1E96712E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712E0);
  }
  return result;
}

unint64_t sub_1A5534EA8()
{
  unint64_t result = qword_1E96712E8;
  if (!qword_1E96712E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712E8);
  }
  return result;
}

unint64_t sub_1A5534F00()
{
  unint64_t result = qword_1E96712F0;
  if (!qword_1E96712F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712F0);
  }
  return result;
}

unint64_t sub_1A5534F58()
{
  unint64_t result = qword_1E96712F8;
  if (!qword_1E96712F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96712F8);
  }
  return result;
}

unint64_t sub_1A5534FB0()
{
  unint64_t result = qword_1E9671300;
  if (!qword_1E9671300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671300);
  }
  return result;
}

unint64_t sub_1A5535008()
{
  unint64_t result = qword_1E9671308;
  if (!qword_1E9671308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671308);
  }
  return result;
}

unint64_t sub_1A5535060()
{
  unint64_t result = qword_1E9671310;
  if (!qword_1E9671310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671310);
  }
  return result;
}

unint64_t sub_1A55350B8()
{
  unint64_t result = qword_1E9671318;
  if (!qword_1E9671318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671318);
  }
  return result;
}

unint64_t sub_1A5535110()
{
  unint64_t result = qword_1E9671320;
  if (!qword_1E9671320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671320);
  }
  return result;
}

unint64_t sub_1A5535168()
{
  unint64_t result = qword_1E9671328;
  if (!qword_1E9671328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671328);
  }
  return result;
}

unint64_t sub_1A55351C0()
{
  unint64_t result = qword_1E9671330;
  if (!qword_1E9671330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671330);
  }
  return result;
}

unint64_t sub_1A5535218()
{
  unint64_t result = qword_1E9671338;
  if (!qword_1E9671338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671338);
  }
  return result;
}

unint64_t sub_1A5535270()
{
  unint64_t result = qword_1E9671340;
  if (!qword_1E9671340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671340);
  }
  return result;
}

unint64_t sub_1A55352C8()
{
  unint64_t result = qword_1E9671348;
  if (!qword_1E9671348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671348);
  }
  return result;
}

unint64_t sub_1A5535320()
{
  unint64_t result = qword_1E9671350;
  if (!qword_1E9671350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671350);
  }
  return result;
}

uint64_t sub_1A5535374(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEF734C5255646572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A5535584(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64657461657263 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656363416F747561 && a2 == 0xEC00000064657470 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A57390D0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A57390F0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001A5739110 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001A5739140 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEC000000676E6972 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A5739170 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001A5739190 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001A57391C0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E6974726F706D69 && a2 == 0xE900000000000067 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A57391F0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A5739210 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x676E696E65706FLL && a2 == 0xE700000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001A5739240 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001A5739270 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A57392A0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001A57392C0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A57392F0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A5739310 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEE0064656C696146 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A5739330)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 21;
    }
    else {
      return 22;
    }
  }
}

uint64_t sub_1A5535DE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7363697274656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A5739350 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEF734C5255646572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646574726F706D69 && a2 == 0xEC000000734C5255 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x525564656E65706FLL && a2 == 0xEA0000000000734CLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A55360BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEF734C5255646572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A5536250(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEF734C5255646572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646574726F706D69 && a2 == 0xEC000000734C5255)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A55363FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F437265646E6573 && a2 == 0xED0000746361746ELL;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265766965636572 && a2 == 0xEF746361746E6F43)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A5536538(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7363697274656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A553662C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A5739390 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A5536810(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265766965636572 && a2 == 0xEF746361746E6F43;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5739370)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A5536924(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEF734C5255646572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646574726F706D69 && a2 == 0xEC000000734C5255 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A5536B34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xEF734C5255646572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1A5536CC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265766965636572 && a2 == 0xEF746361746E6F43;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A5536DE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F437265646E6573 && a2 == 0xED0000746361746ELL;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5739370)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A5536EF4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65746E6573657270 && a2 == 0xE900000000000072 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4965766965636572 && a2 == 0xE900000000000044 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5079616C70736964 && a2 == 0xEF797469726F6972 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65757165526B7361 && a2 == 0xEA00000000007473 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F707365526B7361 && a2 == 0xEB0000000065736ELL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A57393B0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x416F747541646964 && a2 == 0xED00007470656363 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x63416C65636E6163 && a2 == 0xEC0000006E6F6974 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A57393D0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1A5537400(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  BOOL v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1A56D6158();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_1A56D5408();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_1A56D5418();
  }
}

uint64_t sub_1A553763C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1A54E3F10((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *BOOL v2 = 0x8000000000000000;
    sub_1A55E5A50(v9, a2, isUniquelyReferenced_nonNull_native);
    *BOOL v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1A56D5BA8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1A553E2C0(a1);
    sub_1A553D6CC(a2, v9);
    uint64_t v7 = sub_1A56D5BA8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1A553E2C0((uint64_t)v9);
  }
}

id _SFXPCAsyncSequenceContainer.__allocating_init(name:containerRegistry:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1A56D4CB8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  char v26 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v26 - v13;
  char v28 = v3;
  uint64_t v15 = (char *)objc_allocWithZone(v3);
  sub_1A56D4CA8();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v16(&v15[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v14, v9);
  uint64_t v17 = &v15[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  uint64_t v27 = a1;
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  swift_bridgeObjectRetain();
  *(void *)&v15[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A54F05D8(MEMORY[0x1E4FBC860]);
  *(void *)&v15[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = a3;
  swift_retain();

  if (a3)
  {
    uint64_t v18 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v29, 1, 1, v18);
    uint64_t v19 = v26;
    v16(v26, v14, v9);
    unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v22 = (char *)swift_allocObject();
    *((void *)v22 + 2) = 0;
    *((void *)v22 + 3) = 0;
    *((void *)v22 + 4) = a3;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v22[v20], v19, v9);
    char v23 = &v22[v21];
    *(void *)char v23 = v27;
    *((void *)v23 + 1) = a2;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1A54EB08C(v29, (uint64_t)&unk_1E9670AD8, (uint64_t)v22);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    swift_bridgeObjectRelease();
  }
  v30.receiver = v15;
  v30.super_class = v28;
  id v24 = objc_msgSendSuper2(&v30, sel_init);
  swift_release();
  return v24;
}

uint64_t AsyncSequence<>.xpc.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v5, a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return SFXPCAsyncSequence.init<A>(_:)((uint64_t)v12, AssociatedTypeWitness, a1, a3, a4, a2, a5);
}

uint64_t SFXPCAsyncSequence.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = *(void *)(a3 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a2;
  *((void *)v16 + 3) = a3;
  *((void *)v16 + 4) = a4;
  *((void *)v16 + 5) = a5;
  *((void *)v16 + 6) = a6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v16[v15], a1, a3);
  *a7 = sub_1A553E260;
  a7[1] = v16;
  return result;
}

uint64_t sub_1A5537C9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1A54DDE64();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A5537CD4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1A5537D28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void *sub_1A5537D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v20 = a5;
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  sub_1A56D55A8();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  uint64_t v18 = v20;
  void result[4] = a4;
  result[5] = v18;
  result[6] = a6;
  result[7] = v16;
  *a7 = &unk_1E9671468;
  a7[1] = result;
  return result;
}

uint64_t sub_1A5537ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a4;
  v7[7] = a7;
  void v7[5] = a1;
  v7[8] = swift_getAssociatedTypeWitness();
  v7[9] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1A5537F74, 0, 0);
}

uint64_t sub_1A5537F74()
{
  swift_beginAccess();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  BOOL v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *BOOL v2 = v0;
  v2[1] = sub_1A5538058;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  return MEMORY[0x1F4187C78](v4, v3, AssociatedConformanceWitness);
}

uint64_t sub_1A5538058()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 8_Block_object_dispose(&a9, 8) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A5538194, 0, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A5538194()
{
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SFXPCAsyncSequence.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v81 = sub_1A56D4CB8();
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v79 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v83 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  long long v85 = (char *)&v71 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v89 = (char *)&v71 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v71 - v13;
  uint64_t v95 = sub_1A56D5BA8();
  uint64_t v99 = *(void *)(v95 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v95);
  uint64_t v75 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v82 = (char *)&v71 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v87 = (char *)&v71 - v20;
  MEMORY[0x1F4188790](v19);
  char v22 = (char *)&v71 - v21;
  uint64_t v23 = *(void *)(a2 + 24);
  uint64_t v78 = a2;
  uint64_t v24 = *(void *)(a2 + 32);
  uint64_t v77 = v23;
  uint64_t v76 = v24;
  type metadata accessor for SFXPCAsyncSequence.CodingKeys();
  swift_getWitnessTable();
  uint64_t v25 = sub_1A56D5E68();
  uint64_t v92 = *(void *)(v25 - 8);
  uint64_t v93 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v71 - v26;
  long long v74 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  int v91 = v27;
  uint64_t v28 = v95;
  uint64_t v29 = v99;
  sub_1A56D61D8();
  uint64_t v30 = a1[3];
  uint64_t v88 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v30);
  uint64_t v31 = sub_1A56D61C8();
  uint64_t v84 = "rProtocol>\"24@\"_SFXPCError\"32";
  sub_1A56D5B98();
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  uint64_t result = v32(v14, 1, v28);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v34 = v29;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  uint64_t v86 = v29 + 32;
  v35(v22, v14, v28);
  uint64_t v36 = *(void *)(v31 + 16);
  uint64_t v90 = v32;
  if (v36)
  {
    uint64_t v37 = v22;
    unint64_t v38 = sub_1A54F3890((uint64_t)v22);
    if (v39)
    {
      sub_1A54E3F20(*(void *)(v31 + 56) + 32 * v38, (uint64_t)&v97);
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v37 = v22;
  }
  long long v97 = 0u;
  long long v98 = 0u;
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  uint64_t v40 = v34 + 8;
  int v41 = v42;
  v42((uint64_t)v37, v28);
  uint64_t v43 = v94;
  uint64_t v44 = (void *)sub_1A54EC6C8((uint64_t)&v97, 0, 0, 0xD000000000000054, 0x80000001A57393F0, 43);
  if (!v43)
  {
    id v72 = v44;
    uint64_t v99 = v40;
    uint64_t v73 = v35;
    uint64_t v94 = 0;
    sub_1A553E2C0((uint64_t)&v97);
    __swift_project_boxed_opaque_existential_1(v88, v88[3]);
    uint64_t v45 = sub_1A56D61C8();
    uint64_t v46 = v89;
    sub_1A56D5B98();
    uint64_t result = v90(v46, 1, v28);
    if (result != 1)
    {
      uint64_t v47 = (uint64_t)v87;
      v73(v87, v46, v28);
      if (*(void *)(v45 + 16) && (unint64_t v48 = sub_1A54F3890(v47), (v49 & 1) != 0))
      {
        sub_1A54E3F20(*(void *)(v45 + 56) + 32 * v48, (uint64_t)&v97);
      }
      else
      {
        long long v97 = 0u;
        long long v98 = 0u;
      }
      swift_bridgeObjectRelease();
      v41(v47, v28);
      uint64_t v50 = v94;
      uint64_t v51 = (char *)sub_1A54EC404((uint64_t)&v97, 0, 0, 0xD000000000000054, 0x80000001A57393F0, 44);
      if (v50)
      {

        goto LABEL_15;
      }
      uint64_t v89 = v51;
      uint64_t v94 = 0;
      sub_1A553E2C0((uint64_t)&v97);
      sub_1A56D48B8();
      swift_allocObject();
      uint64_t v52 = v28;
      uint64_t v99 = sub_1A56D48A8();
      uint64_t v53 = v85;
      sub_1A56D5B98();
      uint64_t v54 = v90;
      uint64_t result = v90(v53, 1, v28);
      if (result != 1)
      {
        uint64_t v55 = (uint64_t)v82;
        uint64_t v56 = v28;
        uint64_t v57 = v73;
        v73(v82, v53, v56);
        *((void *)&v98 + 1) = type metadata accessor for _SFXPCAsyncSequenceContainer(0);
        *(void *)&long long v97 = v72;
        uint64_t v88 = v72;
        uint64_t v58 = (void (*)(unsigned char *, void))sub_1A56D4898();
        sub_1A553763C((uint64_t)&v97, v55);
        v58(v96, 0);
        uint64_t v59 = v83;
        sub_1A56D5B98();
        uint64_t result = v54(v59, 1, v52);
        if (result != 1)
        {
          uint64_t v60 = (uint64_t)v75;
          v57(v75, v59, v52);
          *((void *)&v98 + 1) = type metadata accessor for _SFXPCBlockContainer();
          *(void *)&long long v97 = v89;
          uint64_t v61 = v89;
          uint64_t v62 = (void (*)(unsigned char *, void))sub_1A56D4898();
          sub_1A553763C((uint64_t)&v97, v60);
          v62(v96, 0);
          type metadata accessor for _SFEncodedDataAsyncSequence();
          long long v97 = v74;
          swift_retain();
          uint64_t v63 = v78;
          uint64_t WitnessTable = swift_getWitnessTable();
          uint64_t v65 = swift_allocObject();
          sub_1A553CE7C((uint64_t)&v97, v63, WitnessTable, v77, v76);
          uint64_t v66 = v79;
          uint64_t v67 = v88;
          sub_1A5538B78(v65, v79);
          sub_1A54F5E64(&qword_1E966C7D8);
          uint64_t v68 = v93;
          uint64_t v69 = v81;
          uint64_t v70 = v91;
          sub_1A56D5E38();

          swift_release();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v66, v69);
          return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v70, v68);
        }
        goto LABEL_23;
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_15:
  sub_1A553E2C0((uint64_t)&v97);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v91, v93);
}

uint64_t sub_1A5538B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_1A553CE7C(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1A5538B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A56D4CB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A56D4CA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v9;
  *uint64_t v9 = 0x8000000000000000;
  sub_1A55E5DF4(a1, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v9 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_endAccess();
}

uint64_t SFXPCAsyncSequence.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v47 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1A56D5BA8();
  uint64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  char v49 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1A56D4CB8();
  uint64_t v46 = *(void *)(v53 - 8);
  uint64_t v12 = *(void *)(v46 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v53);
  MEMORY[0x1F4188790](v13);
  uint64_t v52 = (char *)&v38 - v14;
  uint64_t v42 = a2;
  uint64_t v44 = a3;
  uint64_t v43 = a4;
  type metadata accessor for SFXPCAsyncSequence.CodingKeys();
  swift_getWitnessTable();
  uint64_t v15 = sub_1A56D5D88();
  uint64_t v51 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v38 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = v59;
  sub_1A56D61A8();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v41 = v12;
  uint64_t v59 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54F5E64(&qword_1E966C888);
  sub_1A56D5D48();
  char v39 = v17;
  uint64_t v40 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v19 = sub_1A56D6198();
  uint64_t v20 = v47;
  sub_1A56D5B98();
  uint64_t v21 = v50;
  uint64_t v22 = v48;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v20, 1, v48);
  if (result != 1)
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v25 = (uint64_t)v49;
    v24(v49, v20, v22);
    uint64_t v26 = v46;
    if (*(void *)(v19 + 16))
    {
      unint64_t v27 = sub_1A54F3890(v25);
      uint64_t v28 = v59;
      uint64_t v29 = v51;
      if (v30)
      {
        sub_1A54E3F20(*(void *)(v19 + 56) + 32 * v27, (uint64_t)&v56);
      }
      else
      {
        long long v56 = 0u;
        long long v57 = 0u;
      }
    }
    else
    {
      long long v56 = 0u;
      long long v57 = 0u;
      uint64_t v28 = v59;
      uint64_t v29 = v51;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v22);
    sub_1A553E364((uint64_t)&v56, (uint64_t)&v54);
    if (v55)
    {
      sub_1A54E3F10(&v54, v58);
      sub_1A553E2C0((uint64_t)&v56);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v39, v40);
      sub_1A54E3F10(v58, &v56);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
      uint64_t v32 = v53;
      v31(v28, v52, v53);
      unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v44;
      *(void *)(v34 + 16) = v42;
      *(void *)(v34 + 24) = v35;
      *(void *)(v34 + 32) = v43;
      sub_1A54E3F10(&v56, (_OWORD *)(v34 + 40));
      v31((char *)(v34 + v33), v28, v32);
      uint64_t v36 = v45;
      *uint64_t v45 = sub_1A553E498;
      v36[1] = v34;
    }
    else
    {
      sub_1A553E2C0((uint64_t)&v54);
      sub_1A54F38F4();
      swift_allocError();
      *(void *)uint64_t v37 = 0xD00000000000001FLL;
      *(void *)(v37 + _Block_object_dispose(&a9, 8) = 0x80000001A5739450;
      *(void *)(v37 + 16) = 0xD000000000000054;
      *(void *)(v37 + 24) = 0x80000001A57393F0;
      *(void *)(v37 + 32) = 56;
      *(_OWORD *)(v37 + 40) = 0u;
      *(_OWORD *)(v37 + 56) = 0u;
      *(void *)(v37 + 72) = 0;
      *(void *)(v37 + 80) = 0x2000000000000000;
      *(void *)(v37 + 8_Block_object_dispose(&a9, 8) = 0;
      *(void *)(v37 + 96) = 0;
      swift_willThrow();
      sub_1A553E2C0((uint64_t)&v56);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v52, v53);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v39, v40);
    }
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5539310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  sub_1A54E3F20(a1, (uint64_t)&v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C868);
  if (swift_dynamicCast())
  {
    uint64_t v21 = a5;
    swift_getObjectType();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C860);
    MEMORY[0x1F4188790](v11);
    void v19[2] = a2;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C850);
    sub_1A55ACAB8(0xD000000000000020, 0x80000001A5739570, (void (*)(uint64_t))sub_1A553FE68, (uint64_t)v19, v11, v12, (uint64_t)&v22);
    swift_unknownObjectRelease();
    long long v20 = v22;
    uint64_t v16 = v23;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = a3;
    *(void *)(result + 24) = a4;
    *(void *)(result + 32) = v21;
    *(_OWORD *)(result + 40) = v20;
    *(void *)(result + 56) = v16;
    uint64_t v18 = &unk_1E9671438;
  }
  else
  {
    *(void *)&long long v22 = 0;
    *((void *)&v22 + 1) = 0xE000000000000000;
    sub_1A56D5B48();
    long long v13 = v22;
    sub_1A54F38F4();
    uint64_t v14 = swift_allocError();
    *(_OWORD *)uint64_t v15 = v13;
    *(void *)(v15 + 16) = 0xD000000000000012;
    *(void *)(v15 + 24) = 0x80000001A5738BE0;
    *(void *)(v15 + 32) = 0;
    *(void *)(v15 + 40) = 0;
    *(void *)(v15 + 4_Block_object_dispose(&a9, 8) = 0xD000000000000054;
    *(void *)(v15 + 56) = 0x80000001A57393F0;
    *(_OWORD *)(v15 + 64) = xmmword_1A56EF330;
    *(void *)(v15 + 8_Block_object_dispose(&a9, 8) = 0;
    *(void *)(v15 + 96) = 0;
    *(void *)(v15 + 80) = 0xA000000000000000;
    swift_willThrow();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = a3;
    *(void *)(result + 24) = a4;
    *(void *)(result + 32) = a5;
    *(void *)(result + 40) = v14;
    uint64_t v18 = &unk_1E9671428;
  }
  *a6 = v18;
  a6[1] = result;
  return result;
}

uint64_t sub_1A553958C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  uint64_t v6 = (void *)sub_1A56D4C68();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = v3;
  _OWORD v7[3] = v4;
  v7[4] = v5;
  void aBlock[4] = sub_1A554037C;
  void aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5539908;
  aBlock[3] = &block_descriptor_117;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_xpcMakeAsyncIteratorFor_completion_, v6, v8);
  _Block_release(v8);

  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 16);
  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = *(void *)(v4 + 16);
    swift_beginAccess();
    uint64_t v11 = *(void *)(v5 + 16);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
  }
  else
  {
    sub_1A54F38F4();
    swift_allocError();
    *(_OWORD *)uint64_t v13 = xmmword_1A56EF340;
    *(void *)(v13 + 16) = 0xD000000000000054;
    *(void *)(v13 + 24) = 0x80000001A57393F0;
    *(void *)(v13 + 32) = 69;
    *(_OWORD *)(v13 + 40) = 0u;
    *(_OWORD *)(v13 + 56) = 0u;
    *(void *)(v13 + 72) = 0;
    *(void *)(v13 + 80) = 0x2000000000000000;
    *(void *)(v13 + 8_Block_object_dispose(&a9, 8) = 0;
    *(void *)(v13 + 96) = 0;
    swift_willThrow();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A553982C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a4 + 16) = a1;
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(void *)(a5 + 16) = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(void *)(a6 + 16) = a3;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5539908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(a2, a3, a4);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1A55399A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  v7[6] = a1;
  return MEMORY[0x1F4188298](sub_1A55399D0, 0, 0);
}

uint64_t sub_1A55399D0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  ObjectCFStringRef Type = swift_getObjectType();
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 40) = ObjectType;
  swift_unknownObjectRetain();
  uint64_t v3 = sub_1A54EBA10(v0 + 16, 0, 0, 0xD000000000000054, 0x80000001A57393F0, 73);
  *(void *)(v0 + 104) = v3;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 56);
  long long v15 = *(_OWORD *)(v0 + 80);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 112) = v9;
  *(_OWORD *)(v9 + 16) = v15;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 4_Block_object_dispose(&a9, 8) = v8;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v10;
  void v10[2] = v8;
  void v10[3] = v7;
  void v10[4] = v6;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = v11;
  uint64_t v12 = sub_1A56D5898();
  *uint64_t v11 = v0;
  v11[1] = sub_1A5539BC8;
  uint64_t v13 = *(void *)(v0 + 48);
  return MEMORY[0x1F4188148](v13, &unk_1E9671448, v9, sub_1A5540048, v10, 0, 0, v12);
}

uint64_t sub_1A5539BC8()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A5539D50;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1A5539CEC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5539CEC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A5539D50()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A5539DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  void v8[2] = a1;
  void v8[3] = a2;
  return MEMORY[0x1F4188298](sub_1A5539DF4, 0, 0);
}

uint64_t sub_1A5539DF4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 32);
  ObjectCFStringRef Type = swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C858);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 80) = v7;
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v7 + 32) = v1;
  *(void *)(v7 + 40) = v4;
  *(void *)(v7 + 4_Block_object_dispose(&a9, 8) = v3;
  *(void *)(v7 + 56) = v2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v8;
  sub_1A56D5898();
  *uint64_t v8 = v0;
  v8[1] = sub_1A5539F70;
  uint64_t v9 = *(void *)(v0 + 16);
  return sub_1A55AC6F8(v9, 0xD00000000000001BLL, 0x80000001A57395A0, v6, (uint64_t)sub_1A55400A4, v7, ObjectType, v6);
}

uint64_t sub_1A5539F70()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A553A0AC, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A553A0AC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1A553A110(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a7;
  uint64_t v25 = a8;
  uint64_t v23 = a4;
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v13 = sub_1A56D5428();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - v15, a2, v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = v24;
  *((void *)v19 + 2) = a6;
  *((void *)v19 + 3) = v20;
  *((void *)v19 + 4) = v25;
  *((void *)v19 + 5) = a3;
  *((void *)v19 + 6) = v23;
  *((void *)v19 + 7) = a5;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v16, v13);
  void aBlock[4] = sub_1A55401D0;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A553AA54;
  aBlock[3] = &block_descriptor_1;
  uint64_t v21 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v17, sel_xpcNextWithCompletion_, v21);
  _Block_release(v21);
}

uint64_t sub_1A553A33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v20 = a2;
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v13 = sub_1A56D6158();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v25 = a8;
  uint64_t v26 = a9;
  uint64_t v27 = a10;
  uint64_t v28 = a3;
  uint64_t v29 = a1;
  uint64_t v30 = v20;
  uint64_t v31 = v21;
  uint64_t v32 = v22;
  uint64_t v33 = v23;
  sub_1A55ADA88((void (*)(unsigned char *))sub_1A55402C0, (uint64_t)&v19 - v15);
  uint64_t v17 = sub_1A56D5428();
  sub_1A5537400((uint64_t)v16, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1A553A4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t *a10)
{
  uint64_t v67 = a6;
  uint64_t v68 = a7;
  unint64_t v72 = a3;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v58 - v20;
  uint64_t v22 = sub_1A56D5BA8();
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)v58 - v27;
  if (a1)
  {
    unint64_t v72 = *(void *)(a1 + OBJC_IVAR____SFXPCError_errorCode);
    uint64_t v29 = *(void *)(a1 + OBJC_IVAR____SFXPCError_domain + 8);
    uint64_t v68 = *(void *)(a1 + OBJC_IVAR____SFXPCError_domain);
    uint64_t v30 = *(void *)(a1 + OBJC_IVAR____SFXPCError_internalLocalizedDescription + 8);
    uint64_t v67 = *(void *)(a1 + OBJC_IVAR____SFXPCError_internalLocalizedDescription);
    uint64_t v31 = *(void *)(a1 + OBJC_IVAR____SFXPCError_internalDebugDescription + 8);
    uint64_t v66 = *(void *)(a1 + OBJC_IVAR____SFXPCError_internalDebugDescription);
    uint64_t v33 = *(void *)(a1 + OBJC_IVAR____SFXPCError_file);
    uint64_t v32 = *(void *)(a1 + OBJC_IVAR____SFXPCError_file + 8);
    uint64_t v34 = *(void *)(a1 + OBJC_IVAR____SFXPCError_line);
    uint64_t v35 = *(unsigned __int8 *)(a1 + OBJC_IVAR____SFXPCError_line + 8);
    uint64_t v37 = *(void *)(a1 + OBJC_IVAR____SFXPCError_process);
    uint64_t v36 = *(void *)(a1 + OBJC_IVAR____SFXPCError_process + 8);
    unint64_t v38 = v35 | 0xC000000000000000;
    sub_1A54F38F4();
    uint64_t v39 = swift_allocError();
    void *v40 = v68;
    v40[1] = v29;
    uint64_t v41 = v67;
    _OWORD v40[2] = v72;
    v40[3] = v41;
    uint64_t v42 = v66;
    void v40[4] = v30;
    v40[5] = v42;
    void v40[6] = v31;
    v40[7] = v33;
    v40[8] = v32;
    v40[9] = v34;
    v40[10] = v38;
    v40[11] = v37;
    uint64_t v43 = v39;
    v40[12] = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_willThrow();
LABEL_3:
    *a10 = v43;
    return result;
  }
  uint64_t v63 = v19;
  uint64_t v64 = a4;
  uint64_t v62 = a5;
  uint64_t v65 = a8;
  uint64_t v66 = a2;
  unint64_t v45 = v72;
  if (v72 >> 60 == 15) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v65, 1, 1);
  }
  uint64_t v61 = v25;
  uint64_t v59 = v10;
  uint64_t v46 = v24;
  uint64_t v47 = v26;
  sub_1A56D4878();
  swift_allocObject();
  sub_1A54E9E98(v66, v45);
  sub_1A56D4868();
  sub_1A56D5B98();
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  uint64_t result = v60(v21, 1, v46);
  if (result == 1)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  v58[0] = *(void *)(v47 + 32);
  v58[1] = v47 + 32;
  ((void (*)(char *, char *, uint64_t))v58[0])(v28, v21, v46);
  uint64_t v48 = v64;
  if (v64)
  {
    *((void *)&v71 + 1) = swift_getObjectType();
    *(void *)&long long v70 = v48;
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  char v49 = v63;
  swift_unknownObjectRetain();
  uint64_t v50 = (void (*)(unsigned char *, void))sub_1A56D4858();
  sub_1A553763C((uint64_t)&v70, (uint64_t)v28);
  v50(v69, 0);
  sub_1A56D5B98();
  uint64_t result = v60(v49, 1, v46);
  if (result == 1) {
    goto LABEL_18;
  }
  ((void (*)(uint64_t, char *, uint64_t))v58[0])(v61, v49, v46);
  uint64_t v51 = v62;
  if (v62)
  {
    *((void *)&v71 + 1) = swift_getObjectType();
    *(void *)&long long v70 = v51;
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  unint64_t v52 = v72;
  uint64_t v53 = v66;
  uint64_t v54 = v67;
  uint64_t v55 = v65;
  swift_unknownObjectRetain();
  long long v56 = (void (*)(unsigned char *, void))sub_1A56D4858();
  sub_1A553763C((uint64_t)&v70, v61);
  v56(v69, 0);
  uint64_t v57 = v59;
  sub_1A56D4848();
  uint64_t v43 = v57;
  if (v57)
  {
    swift_release();
    uint64_t result = sub_1A553FC9C(v53, v52);
    goto LABEL_3;
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v55, 0, 1, v54);
  swift_release();
  return sub_1A553FC9C(v53, v52);
}

uint64_t sub_1A553AA54(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)sub_1A56D4A78();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_1A553FC9C((uint64_t)v4, v8);

  return swift_release();
}

uint64_t sub_1A553AB00(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return MEMORY[0x1F4188298](sub_1A553AB20, 0, 0);
}

uint64_t sub_1A553AB20()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_willThrow();
  id v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t SFXPCAsyncSequence.AsyncIterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1A553ABB8, 0, 0);
}

uint64_t sub_1A553ABB8()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))(**(void **)(v0 + 24) + ***(int ***)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_1A553AC8C;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2);
}

uint64_t sub_1A553AC8C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A553AD80(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  void v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1A54E83BC;
  return MEMORY[0x1F4188298](sub_1A553ABB8, 0, 0);
}

uint64_t sub_1A553AE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1A553AF0C;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6);
}

uint64_t sub_1A553AF0C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t SFXPCAsyncSequence.makeAsyncIterator()()
{
  return (*v0)();
}

uint64_t sub_1A553B044()
{
  SFXPCAsyncSequence.makeAsyncIterator()();

  return swift_release();
}

uint64_t sub_1A553B070@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return SFXPCAsyncSequence.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1A553B094(void *a1, uint64_t a2)
{
  return SFXPCAsyncSequence.encode(to:)(a1, a2);
}

id sub_1A553B0AC()
{
  return sub_1A553B75C(&OBJC_IVAR____SFXPCAsyncIterator_containerRegistry, &OBJC_IVAR____SFXPCAsyncIterator_uuid, (uint64_t)&unk_1EF9B9BD0, (uint64_t)&unk_1E9671418);
}

uint64_t sub_1A553B1AC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[8] = a6;
  uint64_t v11 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v9 = (void *)swift_task_alloc();
  v8[11] = v9;
  *id v9 = v8;
  v9[1] = sub_1A553B280;
  return v11();
}

uint64_t sub_1A553B280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  _OWORD v4[12] = a1;
  v4[13] = a2;
  v4[14] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1A553B464;
  }
  else {
    uint64_t v5 = sub_1A553B398;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1A553B398()
{
  uint64_t v1 = *(void *)(v0 + 64) + 16;
  swift_beginAccess();
  uint64_t v2 = (char *)MEMORY[0x1A626CEF0](v1);
  if (v2)
  {
    *(void *)&v2[OBJC_IVAR____SFXPCAsyncIterator_currentTask] = 0;

    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + 96);
  unint64_t v3 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, unint64_t, void))(v0 + 72))(v4, v3, 0);
  sub_1A553FC9C(v4, v3);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1A553B464()
{
  uint64_t v1 = v0[8] + 16;
  swift_beginAccess();
  uint64_t v2 = (char *)MEMORY[0x1A626CEF0](v1);
  if (v2)
  {
    *(void *)&v2[OBJC_IVAR____SFXPCAsyncIterator_currentTask] = 0;

    swift_release();
  }
  unint64_t v3 = (void *)v0[14];
  uint64_t v4 = (void (*)(void, unint64_t, id))v0[9];
  id v5 = objc_allocWithZone((Class)type metadata accessor for _SFXPCError());
  id v6 = v3;
  id v7 = sub_1A5698FB8(v3);

  v4(0, 0xF000000000000000, v7);
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_1A553B5D4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 == 15) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = sub_1A56D4A68();
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t))(a4 + 16))(a4);
}

id _SFXPCAsyncSequenceContainer.init(name:containerRegistry:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = sub_1A553DEA0(a1, a2, a3);
  swift_release();
  return v3;
}

id _SFXPCAsyncSequenceContainer.__deallocating_deinit()
{
  return sub_1A553B75C(&OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry, &OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid, (uint64_t)&unk_1EF9B9A40, (uint64_t)&unk_1E9670AB0);
}

id sub_1A553B75C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a4;
  ObjectCFStringRef Type = (objc_class *)swift_getObjectType();
  uint64_t v8 = sub_1A56D4CB8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)&v4[*a1];
  if (v14)
  {
    uint64_t v15 = &v4[*a2];
    uint64_t v16 = sub_1A56D5478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v8);
    unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v18 = (char *)swift_allocObject();
    *((void *)v18 + 2) = 0;
    *((void *)v18 + 3) = 0;
    *((void *)v18 + 4) = v14;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    swift_retain_n();
    sub_1A54EB08C((uint64_t)v13, v21, (uint64_t)v18);
    swift_release();
    swift_release();
  }
  v22.receiver = v4;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, sel_dealloc);
}

void _SFXPCAsyncSequenceContainer.xpcMakeAsyncIterator(for:completion:)(uint64_t a1, void (*a2)(void *, Class, void *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v130 = a3;
  uint64_t v131 = a2;
  ObjectCFStringRef Type = (Class)swift_getObjectType();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v114 - v10;
  uint64_t v127 = sub_1A56D5BA8();
  uint64_t v126 = *(void **)(v127 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v127);
  uint64_t v124 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v125 = (char *)&v114 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v132 = (uint64_t)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1A56D4CB8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v133 = v17;
  uint64_t v134 = v18;
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v114 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  long long v128 = (char *)&v114 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v114 - v27;
  uint64_t v29 = (uint64_t *)(v3 + OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences);
  swift_beginAccess();
  uint64_t v30 = *v29;
  if (!*(void *)(v30 + 16) || (unint64_t v31 = sub_1A54F380C(a1), (v32 & 1) == 0))
  {
    swift_endAccess();
    id v52 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v53 = (void *)sub_1A56D5098();
    id v54 = objc_msgSend(v52, sel_initWithDomain_code_userInfo_, v53, 0, 0);

    uint64_t v55 = *(void *)(v4 + OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry);
    long long v56 = (objc_class *)type metadata accessor for _SFXPCAsyncIterator(0);
    uint64_t v57 = (char *)objc_allocWithZone(v56);
    *(void *)&v57[OBJC_IVAR____SFXPCAsyncIterator_currentTask] = 0;
    swift_retain();
    uint64_t v58 = v57;
    sub_1A56D4CA8();
    uint64_t v59 = v133;
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
    v60(&v58[OBJC_IVAR____SFXPCAsyncIterator_uuid], v21, v133);
    uint64_t v61 = &v58[OBJC_IVAR____SFXPCAsyncIterator_iterator];
    *(void *)uint64_t v61 = v54;
    *((void *)v61 + 1) = 0;
    v61[16] = 1;
    *(void *)&v58[OBJC_IVAR____SFXPCAsyncIterator_containerRegistry] = v55;
    swift_retain();
    id v62 = v54;

    if (v55)
    {
      uint64_t v63 = sub_1A56D5478();
      uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56);
      uint64_t v65 = v134;
      uint64_t v127 = (uint64_t)v62;
      uint64_t v66 = v132;
      v64(v132, 1, 1, v63);
      ObjectCFStringRef Type = v56;
      uint64_t v67 = v128;
      v60(v128, v21, v59);
      unint64_t v68 = (*(unsigned __int8 *)(v65 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      uint64_t v69 = (char *)swift_allocObject();
      *((void *)v69 + 2) = 0;
      *((void *)v69 + 3) = 0;
      *((void *)v69 + 4) = v55;
      long long v70 = v67;
      long long v56 = ObjectType;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(&v69[v68], v70, v59);
      long long v71 = &v69[(v19 + v68 + 7) & 0xFFFFFFFFFFFFFFF8];
      *(void *)long long v71 = 0xD000000000000012;
      *((void *)v71 + 1) = 0x80000001A5739470;
      swift_retain_n();
      uint64_t v72 = v66;
      id v62 = (id)v127;
      sub_1A54EB08C(v72, (uint64_t)&unk_1E96713B8, (uint64_t)v69);
      swift_release();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v134 + 8))(v21, v59);
    v140.receiver = v58;
    v140.super_class = v56;
    uint64_t v73 = objc_msgSendSuper2(&v140, sel_init);

    swift_release();
    v131(v73, 0, 0);
    goto LABEL_14;
  }
  uint64_t v121 = v11;
  uint64_t v119 = v9;
  uint64_t v122 = v24;
  uint64_t v33 = *(void *)(*(void *)(v30 + 56) + 8 * v31);
  swift_endAccess();
  uint64_t v35 = *(objc_class **)(v4 + OBJC_IVAR____SFXPCAsyncSequenceContainer_name);
  uint64_t v34 = *(void *)(v4 + OBJC_IVAR____SFXPCAsyncSequenceContainer_name + 8);
  uint64_t v36 = *(void *)(v4 + OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry);
  id v37 = objc_allocWithZone(ObjectType);
  swift_retain();
  uint64_t v123 = v33;
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v38 = (char *)v37;
  sub_1A56D4CA8();
  uint64_t v39 = v133;
  uint64_t v41 = v134 + 16;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  v40(&v38[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v28, v133);
  uint64_t v42 = (objc_class **)&v38[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  Class v120 = v35;
  *uint64_t v42 = v35;
  v42[1] = (objc_class *)v34;
  swift_bridgeObjectRetain();
  *(void *)&v38[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A54F05D8(MEMORY[0x1E4FBC860]);
  *(void *)&v38[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = v36;
  swift_retain();

  uint64_t v117 = v41;
  uint64_t v118 = v40;
  uint64_t v114 = v19;
  if (v36)
  {
    uint64_t v43 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v132, 1, 1, v43);
    uint64_t v44 = v128;
    v40(v128, v28, v39);
    uint64_t v45 = v134;
    unint64_t v46 = (*(unsigned __int8 *)(v134 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
    unint64_t v47 = (v19 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = v39;
    char v49 = (char *)swift_allocObject();
    *((void *)v49 + 2) = 0;
    *((void *)v49 + 3) = 0;
    *((void *)v49 + 4) = v36;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v49[v46], v44, v48);
    uint64_t v50 = &v49[v47];
    Class v51 = v120;
    *(void *)uint64_t v50 = v120;
    *((void *)v50 + 1) = v34;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1A54EB08C(v132, (uint64_t)&unk_1E96713C8, (uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v116 = *(void (**)(char *, uint64_t))(v45 + 8);
    v116(v28, v48);
  }
  else
  {
    uint64_t v116 = *(void (**)(char *, uint64_t))(v134 + 8);
    v116(v28, v39);
    swift_bridgeObjectRelease();
    Class v51 = v120;
  }
  v139.receiver = v38;
  v139.super_class = ObjectType;
  id v74 = objc_msgSendSuper2(&v139, sel_init, v114);
  swift_release();
  Class v120 = (Class)type metadata accessor for _SFXPCBlockContainer();
  id v75 = objc_allocWithZone(v120);
  swift_bridgeObjectRetain();
  swift_retain();
  id v115 = sub_1A54F443C((uint64_t)v51, v34, v36);
  swift_release();
  sub_1A56D48B8();
  swift_allocObject();
  uint64_t v76 = sub_1A56D48A8();
  uint64_t v77 = v121;
  sub_1A56D5B98();
  uint64_t v78 = v126;
  uint64_t v79 = (uint64_t (*)(char *, uint64_t, uint64_t))v126[6];
  uint64_t v80 = v127;
  if (v79(v77, 1, v127) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v81 = (void (*)(char *, char *, uint64_t))v78[4];
    uint64_t v82 = (uint64_t)v125;
    v81(v125, v77, v80);
    Class v138 = ObjectType;
    v137[0] = v74;
    ObjectCFStringRef Type = (Class)v74;
    uint64_t v83 = (void (*)(unsigned char *, void))sub_1A56D4898();
    sub_1A553763C((uint64_t)v137, v82);
    v83(v136, 0);
    uint64_t v84 = v119;
    sub_1A56D5B98();
    int v85 = v79(v84, 1, v80);
    uint64_t v86 = v118;
    if (v85 != 1)
    {
      uint64_t v87 = v80;
      uint64_t v88 = (uint64_t)v124;
      v81(v124, v84, v87);
      Class v138 = v120;
      v137[0] = v115;
      uint64_t v126 = v115;
      uint64_t v89 = (void (*)(unsigned char *, void))sub_1A56D4898();
      sub_1A553763C((uint64_t)v137, v88);
      v89(v136, 0);
      uint64_t v90 = *(uint64_t (**)(uint64_t))(v123 + 16);
      uint64_t v127 = v76;
      uint64_t v91 = v90(v76);
      uint64_t v93 = v92;
      uint64_t v94 = (objc_class *)type metadata accessor for _SFXPCAsyncIterator(0);
      uint64_t v95 = (char *)objc_allocWithZone(v94);
      *(void *)&v95[OBJC_IVAR____SFXPCAsyncIterator_currentTask] = 0;
      swift_retain();
      uint64_t v96 = v95;
      long long v97 = v122;
      sub_1A56D4CA8();
      uint64_t v98 = v133;
      v86(&v96[OBJC_IVAR____SFXPCAsyncIterator_uuid], v97, v133);
      uint64_t v99 = &v96[OBJC_IVAR____SFXPCAsyncIterator_iterator];
      *(void *)uint64_t v99 = v91;
      *((void *)v99 + 1) = v93;
      v99[16] = 0;
      *(void *)&v96[OBJC_IVAR____SFXPCAsyncIterator_containerRegistry] = v36;
      swift_retain();
      swift_retain();

      if (v36)
      {
        uint64_t v100 = sub_1A56D5478();
        uint64_t v101 = v132;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v132, 1, 1, v100);
        uint64_t v102 = v128;
        v86(v128, v97, v133);
        uint64_t v103 = v134;
        unint64_t v104 = (*(unsigned __int8 *)(v134 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
        unint64_t v105 = (v114 + v104 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v106 = (void *)swift_allocObject();
        v106[2] = 0;
        v106[3] = 0;
        v106[4] = v36;
        uint64_t v107 = (char *)v106 + v104;
        long long v97 = v122;
        (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v107, v102, v133);
        uint64_t v108 = (void *)((char *)v106 + v105);
        *uint64_t v108 = 0xD000000000000012;
        v108[1] = 0x80000001A5739470;
        swift_retain_n();
        uint64_t v109 = v101;
        uint64_t v98 = v133;
        sub_1A54EB08C(v109, (uint64_t)&unk_1E96713C0, (uint64_t)v106);
        swift_release();
        swift_release();
      }
      v116(v97, v98);
      v135.receiver = v96;
      v135.super_class = v94;
      uint64_t v110 = objc_msgSendSuper2(&v135, sel_init);
      swift_release();
      Class v111 = ObjectType;
      uint64_t v112 = ObjectType;
      long long v113 = v126;
      uint64_t v73 = v126;
      v131(v110, v111, v113);
      swift_release();
      swift_release();
      swift_release();

LABEL_14:
      return;
    }
  }
  __break(1u);
}

id _SFXPCAsyncSequenceContainer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void _SFXPCAsyncSequenceContainer.init()()
{
}

uint64_t sub_1A553C8BC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))(*v1 + *(int *)*v1);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1A553C988;
  return v5();
}

uint64_t sub_1A553C988(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = a1;
    return MEMORY[0x1F4188298](sub_1A553CAE4, 0, 0);
  }
}

uint64_t sub_1A553CAE4()
{
  *(int8x16_t *)*(void *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 32), *(int8x16_t *)(v0 + 32), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A553CB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[4] = v4;
  v5[5] = a4;
  v5[3] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_1A56D53F8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  v5[6] = v6;
  v5[7] = v8;
  return MEMORY[0x1F4188298](sub_1A553CBB0, v6, v8);
}

uint64_t sub_1A553CBB0()
{
  uint64_t v3 = (uint64_t (*)(void))(**(void **)(v0 + 32) + ***(int ***)(v0 + 32));
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_1A553CC7C;
  return v3();
}

uint64_t sub_1A553CC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 72) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[6];
    uint64_t v8 = v6[7];
    uint64_t v9 = sub_1A553CDE4;
  }
  else
  {
    v6[10] = a2;
    v6[11] = a1;
    uint64_t v9 = sub_1A553CDBC;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x1F4188298](v9, v7, v8);
}

uint64_t sub_1A553CDBC()
{
  *(int8x16_t *)*(void *)(v0 + 24) = vextq_s8(*(int8x16_t *)(v0 + 80), *(int8x16_t *)(v0 + 80), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A553CDE4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = (void *)v0[5];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  swift_willThrowTypedImpl();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A553CE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a2 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a2;
  *((void *)v13 + 3) = a3;
  *((void *)v13 + 4) = a4;
  *((void *)v13 + 5) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(&v13[v12], a1, a2);
  *(void *)(v5 + 16) = sub_1A5540410;
  *(void *)(v5 + 24) = v13;
  return v5;
}

void *sub_1A553CF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, a3);
  sub_1A56D55A8();
  uint64_t v16 = (void *)swift_allocObject();
  long long v16[2] = a3;
  v16[3] = a4;
  void v16[4] = a5;
  v16[5] = a6;
  v16[6] = v15;
  v16[7] = a1;
  swift_retain();
  return &unk_1E9671458;
}

uint64_t sub_1A553D0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a4;
  v6[8] = a6;
  v6[5] = a2;
  v6[6] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[9] = AssociatedTypeWitness;
  uint64_t v8 = sub_1A56D5898();
  v6[10] = v8;
  v6[11] = *(void *)(v8 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = *(void *)(AssociatedTypeWitness - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_getAssociatedTypeWitness();
  v6[16] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1A553D258, 0, 0);
}

uint64_t sub_1A553D258()
{
  swift_beginAccess();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1A553D33C;
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  return MEMORY[0x1F4187C78](v4, v3, AssociatedConformanceWitness);
}

uint64_t sub_1A553D33C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A553D61C;
  }
  else
  {
    swift_endAccess();
    uint64_t v2 = sub_1A553D458;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A553D458()
{
  uint64_t v1 = v0 + 13;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0 + 9;
  uint64_t v4 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v4) == 1)
  {
    uint64_t v6 = 0;
    uint64_t v1 = v0 + 11;
    uint64_t v5 = v0 + 10;
    unint64_t v7 = 0xF000000000000000;
    uint64_t v8 = v3;
LABEL_8:
    (*(void (**)(uint64_t, void))(*v1 + 8))(v8, *v5);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v14(v6, v7);
  }
  uint64_t v9 = v0[18];
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[14], v3, v4);
  uint64_t v10 = sub_1A56D4888();
  if (!v9)
  {
    uint64_t v6 = v10;
    unint64_t v7 = v11;
    uint64_t v8 = v0[14];
    goto LABEL_8;
  }
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1A553D61C()
{
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A553D694()
{
  swift_release();

  return swift_deallocClassInstance();
}

double sub_1A553D6CC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1A54F3890(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A55E654C();
      uint64_t v9 = v13;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1A56D5BA8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    sub_1A54E3F10((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1A553D904(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1A553D7F8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1A54F380C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A55E6D30();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1A56D4CB8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_1A553DBBC(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1A553D904(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D5BA8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    unint64_t result = sub_1A56D59B8();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v36 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v35 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v35(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        uint64_t v18 = sub_1A56D4FE8();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 32 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 32 * v10);
            uint64_t v12 = v38;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *uint64_t v26 = *v27;
              v26[1] = v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A553DBBC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_1A56D59B8();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1A54F5E64(&qword_1E966C7E0);
        uint64_t v17 = sub_1A56D4FE8();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            unint64_t v23 = (_OWORD *)(v22 + 16 * a1);
            uint64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *unint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1A553DEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  ObjectCFStringRef Type = (objc_class *)swift_getObjectType();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v29 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A56D4CB8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v26 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - v14;
  int64_t v16 = v4;
  sub_1A56D4CA8();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v17(&v16[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v15, v10);
  unint64_t v18 = &v16[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  uint64_t v27 = a1;
  *(void *)unint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  swift_bridgeObjectRetain();
  *(void *)&v16[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A54F05D8(MEMORY[0x1E4FBC860]);
  *(void *)&v16[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = a3;
  swift_retain();

  if (a3)
  {
    uint64_t v19 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v29, 1, 1, v19);
    uint64_t v20 = v26;
    v17(v26, v15, v10);
    unint64_t v21 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = 0;
    *((void *)v23 + 3) = 0;
    *((void *)v23 + 4) = a3;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v23[v21], v20, v10);
    uint64_t v24 = &v23[v22];
    *(void *)uint64_t v24 = v27;
    *((void *)v24 + 1) = a2;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1A54EB08C(v29, (uint64_t)&unk_1E9671470, (uint64_t)v23);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    swift_bridgeObjectRelease();
  }
  v30.receiver = v16;
  v30.super_class = ObjectType;
  return objc_msgSendSuper2(&v30, sel_init);
}

uint64_t sub_1A553E1D8()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));

  return swift_deallocObject();
}

void *sub_1A553E260@<X0>(void *a1@<X8>)
{
  return sub_1A5537D7C((uint64_t)v1+ ((*(unsigned __int8 *)(*(void *)(v1[3] - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[3] - 8) + 80)), v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t type metadata accessor for SFXPCAsyncSequence.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A553E2C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB9F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for _SFXPCAsyncSequenceContainer(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1EB3DCFC8);
}

uint64_t type metadata accessor for _SFEncodedDataAsyncSequence()
{
  return self;
}

uint64_t sub_1A553E364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A553E3CC()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A553E498@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(sub_1A56D4CB8() - 8);
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1A5539310((uint64_t)(v1 + 5), v7, v3, v4, v5, a1);
}

uint64_t sub_1A553E534(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D4CB8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A54E8628;
  return sub_1A558594C(a1, v5, v6, v7, v8);
}

uint64_t type metadata accessor for _SFXPCAsyncIterator(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E966C7E8);
}

uint64_t sub_1A553E654(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D4CB8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1A54E8628;
  return sub_1A5585758(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1A553E798()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_1A553E7A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A553E7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t type metadata accessor for SFXPCAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

void *_s7Sharing27_SFEncodedDataAsyncSequenceC13AsyncIteratorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t _s7Sharing27_SFEncodedDataAsyncSequenceC13AsyncIteratorVwxx_0()
{
  return swift_release();
}

_OWORD *_s7Sharing27_SFEncodedDataAsyncSequenceC13AsyncIteratorVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for SFXPCAsyncSequence.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A553E870()
{
  return type metadata accessor for _SFXPCAsyncIterator(0);
}

uint64_t sub_1A553E878()
{
  return sub_1A553E8AC();
}

uint64_t sub_1A553E88C()
{
  return type metadata accessor for _SFXPCAsyncSequenceContainer(0);
}

uint64_t sub_1A553E894()
{
  return sub_1A553E8AC();
}

uint64_t sub_1A553E8AC()
{
  uint64_t result = sub_1A56D4CB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _SFXPCAsyncSequenceContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SFXPCAsyncSequenceContainer);
}

uint64_t dispatch thunk of _SFXPCAsyncSequenceContainer.__allocating_init(name:containerRegistry:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void *_s7Sharing27_SFEncodedDataAsyncSequenceC13AsyncIteratorVwca_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s7Sharing27_SFEncodedDataAsyncSequenceC13AsyncIteratorVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A553EA08(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _SFEncodedDataAsyncSequence.AsyncIterator()
{
  return &type metadata for _SFEncodedDataAsyncSequence.AsyncIterator;
}

unsigned char *sub_1A553EA54(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A553EAF0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A553EB18()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A553EB34()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A553EB50()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A553EB6C(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR____SFXPCAsyncIterator_iterator);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____SFXPCAsyncIterator_iterator + 8);
  if (*(unsigned char *)(a1 + OBJC_IVAR____SFXPCAsyncIterator_iterator + 16))
  {
    id v10 = objc_allocWithZone((Class)type metadata accessor for _SFXPCError());
    _Block_copy(a2);
    sub_1A553FAC0(v9, v8, 1);
    id v11 = sub_1A5698FB8(v9);
    ((void (**)(void, void, id))a2)[2](a2, 0, v11);

    sub_1A553FAD0(v9, v8, 1);
    return swift_release();
  }
  else
  {
    uint64_t v13 = sub_1A56D5478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = (void *)swift_allocObject();
    void v15[2] = 0;
    v15[3] = 0;
    void v15[4] = v9;
    v15[5] = v8;
    v15[6] = v14;
    v15[7] = sub_1A553FAB8;
    _DWORD v15[8] = v7;
    _Block_copy(a2);
    sub_1A553FAC0(v9, v8, 0);
    swift_retain();
    *(void *)(a1 + OBJC_IVAR____SFXPCAsyncIterator_currentTask) = sub_1A54EB08C((uint64_t)v6, (uint64_t)&unk_1E9671410, (uint64_t)v15);
    swift_release();
    return swift_release();
  }
}

void sub_1A553EDB4(uint64_t a1, uint64_t a2, void (**a3)(void, void, void, void))
{
  uint64_t v121 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v116 = (char *)&v103 - v9;
  uint64_t v10 = sub_1A56D5BA8();
  uint64_t v117 = *(unsigned int (***)(char *, uint64_t, objc_class *))(v10 - 8);
  uint64_t v118 = (objc_class *)v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v114 = (objc_class *)((char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  Class v115 = (Class)((char *)&v103 - v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v122 = (uint64_t)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1A56D4CB8();
  uint64_t v16 = *(void *)(v123 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v123);
  uint64_t v19 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  unint64_t v22 = (char *)&v103 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v119 = v25;
  Class v120 = (char *)&v103 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v103 - v26;
  uint64_t v28 = (uint64_t *)(a2 + OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences);
  swift_beginAccess();
  uint64_t v29 = *v28;
  if (!*(void *)(v29 + 16) || (unint64_t v30 = sub_1A54F380C(a1), (v31 & 1) == 0))
  {
    swift_endAccess();
    id v48 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    char v49 = (void *)sub_1A56D5098();
    id v50 = objc_msgSend(v48, sel_initWithDomain_code_userInfo_, v49, 0, 0);

    uint64_t v51 = *(void *)(a2 + OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry);
    id v52 = (objc_class *)type metadata accessor for _SFXPCAsyncIterator(0);
    uint64_t v53 = (char *)objc_allocWithZone(v52);
    *(void *)&v53[OBJC_IVAR____SFXPCAsyncIterator_currentTask] = 0;
    swift_retain();
    id v54 = v53;
    sub_1A56D4CA8();
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v56 = v123;
    v55(&v54[OBJC_IVAR____SFXPCAsyncIterator_uuid], v27, v123);
    uint64_t v57 = &v54[OBJC_IVAR____SFXPCAsyncIterator_iterator];
    *(void *)uint64_t v57 = v50;
    *((void *)v57 + 1) = 0;
    v57[16] = 1;
    *(void *)&v54[OBJC_IVAR____SFXPCAsyncIterator_containerRegistry] = v51;
    swift_retain();
    uint64_t v58 = (unsigned int (**)(char *, uint64_t, objc_class *))v50;

    if (v51)
    {
      uint64_t v59 = sub_1A56D5478();
      uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
      uint64_t v117 = v58;
      uint64_t v61 = v122;
      v60(v122, 1, 1, v59);
      uint64_t v118 = v52;
      id v62 = v120;
      v55(v120, v27, v56);
      unint64_t v63 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      unint64_t v64 = (v119 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v65 = (char *)swift_allocObject();
      *((void *)v65 + 2) = 0;
      *((void *)v65 + 3) = 0;
      *((void *)v65 + 4) = v51;
      uint64_t v66 = v62;
      id v52 = v118;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v65[v63], v66, v56);
      uint64_t v67 = &v65[v64];
      *(void *)uint64_t v67 = 0xD000000000000012;
      *((void *)v67 + 1) = 0x80000001A5739470;
      swift_retain_n();
      uint64_t v68 = v61;
      uint64_t v58 = v117;
      sub_1A54EB08C(v68, (uint64_t)&unk_1E96713F0, (uint64_t)v65);
      swift_release();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v27, v56);
    v129.receiver = v54;
    v129.super_class = v52;
    id v69 = objc_msgSendSuper2(&v129, sel_init);

    swift_release();
    ((void (**)(void, id, void, void))v121)[2](v121, v69, 0, 0);
    goto LABEL_14;
  }
  uint64_t v109 = v8;
  uint64_t v110 = v19;
  uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
  swift_endAccess();
  uint64_t v34 = *(void *)(a2 + OBJC_IVAR____SFXPCAsyncSequenceContainer_name);
  uint64_t v33 = *(void *)(a2 + OBJC_IVAR____SFXPCAsyncSequenceContainer_name + 8);
  uint64_t v35 = *(void *)(a2 + OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry);
  Class v113 = (Class)type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  id v36 = objc_allocWithZone(v113);
  swift_retain();
  uint64_t v111 = v32;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v37 = (char *)v36;
  sub_1A56D4CA8();
  uint64_t v38 = *(void (**)(char *, char *))(v16 + 16);
  uint64_t v39 = v123;
  v38(&v37[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v22);
  uint64_t v40 = (uint64_t *)&v37[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  uint64_t v112 = v34;
  uint64_t *v40 = v34;
  v40[1] = v33;
  swift_bridgeObjectRetain();
  *(void *)&v37[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A54F05D8(MEMORY[0x1E4FBC860]);
  *(void *)&v37[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = v35;
  swift_retain();

  uint64_t v108 = v16 + 16;
  uint64_t v107 = v38;
  if (v35)
  {
    uint64_t v41 = sub_1A56D5478();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v122, 1, 1, v41);
    uint64_t v42 = v120;
    ((void (*)(char *, char *, uint64_t))v38)(v120, v22, v39);
    unint64_t v43 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v44 = (v119 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = (char *)swift_allocObject();
    *((void *)v45 + 2) = 0;
    *((void *)v45 + 3) = 0;
    *((void *)v45 + 4) = v35;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v45[v43], v42, v39);
    unint64_t v46 = (uint64_t *)&v45[v44];
    uint64_t v47 = v112;
    *unint64_t v46 = v112;
    v46[1] = v33;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1A54EB08C(v122, (uint64_t)&unk_1E9671400, (uint64_t)v45);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v106 = *(void (**)(char *, uint64_t))(v16 + 8);
    v106(v22, v39);
  }
  else
  {
    uint64_t v106 = *(void (**)(char *, uint64_t))(v16 + 8);
    v106(v22, v39);
    swift_bridgeObjectRelease();
    uint64_t v47 = v112;
  }
  v128.receiver = v37;
  v128.super_class = v113;
  id v70 = objc_msgSendSuper2(&v128, sel_init);
  swift_release();
  Class v105 = (Class)type metadata accessor for _SFXPCBlockContainer();
  objc_allocWithZone(v105);
  swift_bridgeObjectRetain();
  swift_retain();
  id v104 = sub_1A54F443C(v47, v33, v35);
  swift_release();
  sub_1A56D48B8();
  swift_allocObject();
  uint64_t v112 = sub_1A56D48A8();
  long long v71 = v116;
  sub_1A56D5B98();
  uint64_t v73 = v117;
  uint64_t v72 = v118;
  id v74 = v117[6];
  if (v74(v71, 1, v118) == 1)
  {
    _Block_release(v121);
    __break(1u);
  }
  else
  {
    id v75 = (void (*)(Class, char *, objc_class *))v73[4];
    Class v76 = v115;
    v75(v115, v71, v72);
    Class v127 = v113;
    v126[0] = v70;
    uint64_t v117 = (unsigned int (**)(char *, uint64_t, objc_class *))v70;
    uint64_t v77 = (void (*)(unsigned char *, void))sub_1A56D4898();
    sub_1A553763C((uint64_t)v126, (uint64_t)v76);
    uint64_t v78 = v118;
    v77(v125, 0);
    uint64_t v79 = v109;
    sub_1A56D5B98();
    if (v74(v79, 1, v78) != 1)
    {
      uint64_t v80 = (uint64_t)v114;
      v75(v114, v79, v78);
      Class v127 = v105;
      v126[0] = v104;
      uint64_t v118 = (objc_class *)v104;
      uint64_t v81 = v112;
      uint64_t v82 = (void (*)(unsigned char *, void))sub_1A56D4898();
      sub_1A553763C((uint64_t)v126, v80);
      v82(v125, 0);
      uint64_t v83 = (*(uint64_t (**)(uint64_t))(v111 + 16))(v81);
      int v85 = v84;
      Class v115 = (Class)type metadata accessor for _SFXPCAsyncIterator(0);
      uint64_t v86 = (char *)objc_allocWithZone(v115);
      *(void *)&v86[OBJC_IVAR____SFXPCAsyncIterator_currentTask] = 0;
      swift_retain();
      uint64_t v87 = v86;
      uint64_t v88 = v110;
      sub_1A56D4CA8();
      uint64_t v89 = v123;
      uint64_t v90 = (void (*)(char *, char *, uint64_t))v107;
      ((void (*)(char *, char *, uint64_t))v107)(&v87[OBJC_IVAR____SFXPCAsyncIterator_uuid], v88, v123);
      uint64_t v91 = &v87[OBJC_IVAR____SFXPCAsyncIterator_iterator];
      *(void *)uint64_t v91 = v83;
      *((void *)v91 + 1) = v85;
      v91[16] = 0;
      *(void *)&v87[OBJC_IVAR____SFXPCAsyncIterator_containerRegistry] = v35;
      swift_retain();
      uint64_t v116 = v85;
      swift_retain();

      if (v35)
      {
        uint64_t v92 = sub_1A56D5478();
        uint64_t v93 = v122;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v122, 1, 1, v92);
        uint64_t v94 = v90;
        uint64_t v95 = v120;
        v94(v120, v88, v89);
        unint64_t v96 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        unint64_t v97 = (v119 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v98 = (void *)swift_allocObject();
        v98[2] = 0;
        v98[3] = 0;
        v98[4] = v35;
        uint64_t v99 = (char *)v98 + v96;
        uint64_t v88 = v110;
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v99, v95, v89);
        uint64_t v100 = (void *)((char *)v98 + v97);
        *uint64_t v100 = 0xD000000000000012;
        v100[1] = 0x80000001A5739470;
        swift_retain_n();
        sub_1A54EB08C(v93, (uint64_t)&unk_1E96713F8, (uint64_t)v98);
        swift_release();
        swift_release();
      }
      v106(v88, v89);
      v124.receiver = v87;
      v124.super_class = v115;
      id v69 = objc_msgSendSuper2(&v124, sel_init);
      swift_release();
      uint64_t v101 = v117;
      uint64_t v102 = v118;
      ((void (**)(void, id, unsigned int (**)(char *, uint64_t, objc_class *), objc_class *))v121)[2](v121, v69, v117, v118);
      swift_release();

      swift_release();
      swift_release();
LABEL_14:

      return;
    }
  }
  _Block_release(v121);
  __break(1u);
}