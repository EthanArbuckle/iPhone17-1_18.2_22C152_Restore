uint64_t sub_1A553FA80()
{
  uint64_t v0;
  uint64_t vars8;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1A553FAB8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1A553B5D4(a1, a2, a3, *(void *)(v3 + 16));
}

id sub_1A553FAC0(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

void sub_1A553FAD0(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_1A553FAE0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A553FB18()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A553FB68()
{
  v2 = *(int **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1A54E83BC;
  *(void *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 64) = v5;
  v8 = (uint64_t (*)(void))((char *)v2 + *v2);
  v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 88) = v6;
  void *v6 = v4;
  v6[1] = sub_1A553B280;
  return v8();
}

uint64_t sub_1A553FC9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1A54EA09C(a1, a2);
  }
  return a1;
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A553FD88()
{
  return swift_deallocObject();
}

uint64_t sub_1A553FDC0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_1A54E8628;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1A553AB20, 0, 0);
}

uint64_t sub_1A553FE68@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1A553958C(a1, a2);
}

uint64_t sub_1A553FE88(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  long long v9 = *(_OWORD *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_1A54E8628;
  *(void *)(v6 + 96) = v4;
  *(_OWORD *)(v6 + 80) = v7;
  *(void *)(v6 + 72) = v5;
  *(_OWORD *)(v6 + 56) = v9;
  *(void *)(v6 + 48) = a1;
  return MEMORY[0x1F4188298](sub_1A55399D0, 0, 0);
}

uint64_t sub_1A553FF6C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 40);
  long long v9 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_1A54E83BC;
  *(void *)(v7 + 72) = v4;
  *(_OWORD *)(v7 + 56) = v9;
  *(void *)(v7 + 40) = v5;
  *(void *)(v7 + 48) = v6;
  *(_OWORD *)(v7 + 24) = v8;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1A5539DF4, 0, 0);
}

id sub_1A5540048()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_xpcCancel);
}

uint64_t objectdestroy_89Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1A55400A4(void **a1, uint64_t a2)
{
  sub_1A553A110(a1, a2, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4]);
}

uint64_t sub_1A55400C8()
{
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v1 = sub_1A56D5428();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A55401D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = v3[4];
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v10 = *(void *)(sub_1A56D5428() - 8);
  return sub_1A553A33C(a1, a2, a3, v3[5], v3[6], v3[7], (uint64_t)v3 + ((*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v7, v8, v9);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1A55402C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A553A4D4(*(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 16), *(void *)(v2 + 24), a2, *(void *)(v2 + 32), a1);
}

uint64_t sub_1A55402FC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A5540334()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A554037C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A553982C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1A5540388()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

void *sub_1A5540410(uint64_t a1)
{
  return sub_1A553CF70(a1, (uint64_t)v1+ ((*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80)), v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A5540454()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A5540494()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1A5540554;
  return sub_1A553D0D0(v7, v6, v2, v3, v4, v5);
}

uint64_t sub_1A5540554(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_1A5540660()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A5540698(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1A54E8628;
  return sub_1A5537ED8(a1, v8, v4, v5, v6, v7, v9);
}

Sharing::SFBoopController::Service __swiftcall SFBoopController.Service.init(name:)(Sharing::SFBoopController::Service name)
{
  *uint64_t v1 = name;
  return name;
}

uint64_t SFBoopController.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SFBoopController.init()()
{
  return v0;
}

uint64_t SFBoopController.send<A>(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  return MEMORY[0x1F4188298](sub_1A55407D0, 0, 0);
}

uint64_t sub_1A55407D0()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  uint64_t v2 = (void *)sub_1A56D5098();
  id v3 = objc_msgSend(v1, sel_initWithSuiteName_, v2);

  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_1A56D5098();
    id v6 = objc_msgSend(v4, sel_stringForKey_, v5);

    if (v6)
    {
      uint64_t v7 = sub_1A56D50D8();
      unint64_t v9 = v8;

      uint64_t v10 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0) {
        uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
      }
      if (v10)
      {
        if (v7 == 0xD000000000000012 && v9 == 0x80000001A57396D0 || (sub_1A56D5F28() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          char v11 = 1;
LABEL_10:
          sub_1A5540AC8();
          swift_allocError();
          *uint64_t v12 = v11;
          swift_willThrow();

          v13 = (uint64_t (*)(void))v0[1];
          goto LABEL_14;
        }
        if (v7 == 0x726566736E617274 && v9 == 0xEE0064656C696146 || (sub_1A56D5F28() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          char v11 = 0;
          goto LABEL_10;
        }
        if (v7 == 0x74754F64656D6974 && v9 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_25:
          char v11 = 2;
          goto LABEL_10;
        }
        char v15 = sub_1A56D5F28();
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_25;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  (*(void (**)(void, void))(*(void *)(v0[4] - 8) + 16))(v0[2], v0[3]);
  v13 = (uint64_t (*)(void))v0[1];
LABEL_14:
  return v13();
}

unint64_t sub_1A5540AC8()
{
  unint64_t result = qword_1E9671480;
  if (!qword_1E9671480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671480);
  }
  return result;
}

uint64_t SFBoopController.register<A>(_:type:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[8] = a3;
  v5[11] = *(void *)(a5 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v6 = sub_1A56D5898();
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5540C3C, 0, 0);
}

uint64_t sub_1A5540C3C()
{
  id v1 = *(int **)(v0 + 64);
  strcpy((char *)(v0 + 16), "John Appleseed");
  *(unsigned char *)(v0 + 31) = -18;
  *(_OWORD *)(v0 + 32) = xmmword_1A56EF6F0;
  *(void *)(v0 + 48) = 0xD000000000000015;
  *(void *)(v0 + 56) = 0x80000001A57396F0;
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  void *v2 = v0;
  v2[1] = sub_1A5540D84;
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  return v6(v3, v4);
}

uint64_t sub_1A5540D84()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v3 = sub_1A5540F64;
  }
  else
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    uint64_t v3 = sub_1A5540EB4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A5540EB4()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  (*(void (**)(uint64_t, void, uint64_t, void))(v0[11] + 56))(v1, 0, 1, v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1A5540F64()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[11] + 56))(v1, 1, 1, v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Contact.init(name:avatar:email:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t SFBoopController.deinit()
{
  return v0;
}

uint64_t SFBoopController.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t Contact.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  sub_1A54E9E98(v1, v2);
  sub_1A56D4A48();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A54EA09C(v1, v2);
  sub_1A56D51C8();
  swift_bridgeObjectRetain();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  return 0x3A746361746E6F43;
}

uint64_t sub_1A5541198()
{
  uint64_t v1 = 0x726174617661;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C69616D65;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1A55411E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5541DF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A554120C(uint64_t a1)
{
  unint64_t v2 = sub_1A5541458();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5541248(uint64_t a1)
{
  unint64_t v2 = sub_1A5541458();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Contact.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671490);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5541458();
  sub_1A56D61D8();
  LOBYTE(v15) = 0;
  uint64_t v9 = v14;
  sub_1A56D5DE8();
  if (!v9)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v12;
    char v17 = 1;
    sub_1A54E9FA0();
    sub_1A56D5E38();
    LOBYTE(v15) = 2;
    sub_1A56D5DE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A5541458()
{
  unint64_t result = qword_1E9671498;
  if (!qword_1E9671498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671498);
  }
  return result;
}

uint64_t Contact.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96714A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5541458();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  LOBYTE(v24) = 0;
  uint64_t v9 = sub_1A56D5CF8();
  uint64_t v11 = v10;
  uint64_t v23 = v9;
  char v26 = 1;
  sub_1A54EA048();
  swift_bridgeObjectRetain();
  sub_1A56D5D48();
  uint64_t v12 = v24;
  LOBYTE(v24) = 2;
  unint64_t v21 = v25;
  uint64_t v22 = v12;
  sub_1A54E9E98(v12, v25);
  uint64_t v13 = sub_1A56D5CF8();
  uint64_t v15 = v14;
  uint64_t v16 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  unint64_t v18 = v21;
  uint64_t v17 = v22;
  sub_1A54E9E98(v22, v21);
  swift_bridgeObjectRetain();
  sub_1A54EA09C(v17, v18);
  swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v17;
  a2[3] = v18;
  a2[4] = v16;
  a2[5] = v15;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_1A54EA09C(v17, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5541788@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Contact.init(from:)(a1, a2);
}

uint64_t sub_1A55417A0(void *a1)
{
  return Contact.encode(to:)(a1);
}

BOOL static SFBoopControllerErrors.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SFBoopControllerErrors.hash(into:)()
{
  return sub_1A56D60C8();
}

uint64_t SFBoopControllerErrors.hashValue.getter()
{
  return sub_1A56D60E8();
}

unint64_t sub_1A5541848()
{
  unint64_t result = qword_1E96714A8;
  if (!qword_1E96714A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96714A8);
  }
  return result;
}

uint64_t type metadata accessor for SFBoopController()
{
  return self;
}

uint64_t method lookup function for SFBoopController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFBoopController);
}

uint64_t dispatch thunk of SFBoopController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

void *initializeBufferWithCopyOfBuffer for SFBoopController.Service(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SFBoopController.Service()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SFBoopController.Service(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SFBoopController.Service(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFBoopController.Service(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFBoopController.Service(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFBoopController.Service()
{
  return &type metadata for SFBoopController.Service;
}

uint64_t destroy for Contact(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1A54EA09C(*(void *)(a1 + 16), *(void *)(a1 + 24));

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Contact(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_1A54E9E98(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Contact(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_1A54E9E98(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_1A54EA09C(v6, v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Contact(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1A54EA09C(v5, v6);
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Contact()
{
  return &type metadata for Contact;
}

ValueMetadata *type metadata accessor for SFBoopControllerErrors()
{
  return &type metadata for SFBoopControllerErrors;
}

unsigned char *_s7Sharing22SFBoopControllerErrorsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5541CB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Contact.CodingKeys()
{
  return &type metadata for Contact.CodingKeys;
}

unint64_t sub_1A5541CF0()
{
  unint64_t result = qword_1E96714B0;
  if (!qword_1E96714B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96714B0);
  }
  return result;
}

unint64_t sub_1A5541D48()
{
  unint64_t result = qword_1E96714B8;
  if (!qword_1E96714B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96714B8);
  }
  return result;
}

unint64_t sub_1A5541DA0()
{
  unint64_t result = qword_1E96714C0;
  if (!qword_1E96714C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96714C0);
  }
  return result;
}

uint64_t sub_1A5541DF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726174617661 && a2 == 0xE600000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C69616D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t Sequence.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(void *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_1A56D5898();
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a3 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v6[16] = v9;
  v6[17] = *(void *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5542144, 0, 0);
}

uint64_t sub_1A5542144()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  v0[2] = sub_1A56D4F88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1A56D5288();
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_1A56D5918();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[19] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1A5542394;
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[9];
    return v15(v14, v13);
  }
}

uint64_t sub_1A5542394()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A55426EC;
  }
  else
  {
    uint64_t v2 = sub_1A55424B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A55424B0()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_1A56D53D8();
  sub_1A56D53B8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_1A56D5918();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v7 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
  else
  {
    uint64_t v10 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1A5542394;
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[9];
    return v14(v13, v12);
  }
}

uint64_t sub_1A55426EC()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Sequence<>.coordinateRead(withSaveToTempDir:options:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 136) = a4;
  *(void *)(v5 + 144) = v4;
  *(void *)(v5 + 120) = a2;
  *(void *)(v5 + 128) = a3;
  *(unsigned char *)(v5 + 296) = a1;
  uint64_t v7 = sub_1A56D4A28();
  *(void *)(v5 + 152) = v7;
  *(void *)(v5 + 160) = *(void *)(v7 - 8);
  *(void *)(v5 + 168) = swift_task_alloc();
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = swift_task_alloc();
  *(void *)(v5 + 192) = swift_task_alloc();
  *(void *)(v5 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96714D8);
  *(void *)(v5 + 208) = swift_task_alloc();
  *(void *)(v5 + 216) = *(void *)(a3 - 8);
  *(void *)(v5 + 224) = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v5 + 232) = AssociatedTypeWitness;
  *(void *)(v5 + 240) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v5 + 248) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55429CC, 0, 0);
}

uint64_t sub_1A55429CC()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 216) + 16))(*(void *)(v0 + 224), *(void *)(v0 + 144), *(void *)(v0 + 128));
  sub_1A56D5288();
  unint64_t v1 = MEMORY[0x1E4FBC860];
  while (1)
  {
    *(void *)(v0 + 256) = v1;
    uint64_t v2 = *(void *)(v0 + 208);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 160);
    swift_getAssociatedConformanceWitness();
    sub_1A56D5918();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
      break;
    }
    unint64_t v6 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32);
    *(void *)(v0 + 264) = v9;
    *(void *)(v0 + 272) = (v8 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v9(v6, v5, v7);
    if (sub_1A56D4998())
    {
      uint64_t v18 = *(void *)(v0 + 184);
      uint64_t v19 = *(void *)(v0 + 120);
      uint64_t v20 = *(unsigned __int8 *)(v0 + 296);
      unint64_t v21 = (void *)sub_1A56D49D8();
      *(void *)(v0 + 280) = v21;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v18;
      *(void *)(v0 + 24) = sub_1A5542D54;
      uint64_t v22 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_1A55433D4;
      *(void *)(v0 + 104) = &block_descriptor;
      *(void *)(v0 + 112) = v22;
      objc_msgSend(v21, sel_coordinateReadingWithSaveToTempDir_options_completionHandler_, v20, v19, v0 + 80);
      return MEMORY[0x1F41881E8](v0 + 16);
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 16))(*(void *)(v0 + 168), *(void *)(v0 + 200), *(void *)(v0 + 152));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v1 = sub_1A54E2AD0(0, *(void *)(v1 + 16) + 1, 1, v1);
    }
    unint64_t v11 = *(void *)(v1 + 16);
    unint64_t v10 = *(void *)(v1 + 24);
    if (v11 >= v10 >> 1) {
      unint64_t v1 = sub_1A54E2AD0(v10 > 1, v11 + 1, 1, v1);
    }
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v15 = *(void *)(v0 + 152);
    *(void *)(v1 + 16) = v11 + 1;
    v9(v1+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v11, v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v15);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v16(v1);
}

uint64_t sub_1A5542D54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 288) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1A55432B0;
  }
  else
  {
    uint64_t v2 = sub_1A5542E6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5542E6C()
{
  uint64_t v1 = *(void **)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 264))(v2, *(void *)(v0 + 184), v4);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v7 = *(void *)(v0 + 256);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v7 = sub_1A54E2AD0(0, *(void *)(v7 + 16) + 1, 1, *(void *)(v0 + 256));
  }
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_1A54E2AD0(v8 > 1, v9 + 1, 1, v7);
  }
  unint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 200);
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 152);
  uint64_t v15 = *(void *)(v0 + 160);
  *(void *)(v7 + 16) = v9 + 1;
  v10(v7+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v9, v13, v14);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v16(v12, v14);
  v16(v11, v14);
  while (1)
  {
    *(void *)(v0 + 256) = v7;
    uint64_t v17 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 152);
    uint64_t v18 = *(void *)(v0 + 160);
    swift_getAssociatedConformanceWitness();
    sub_1A56D5918();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v17, 1, v19) == 1) {
      break;
    }
    unint64_t v21 = *(void *)(v0 + 200);
    uint64_t v20 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32);
    *(void *)(v0 + 264) = v24;
    *(void *)(v0 + 272) = (v23 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v24(v21, v20, v22);
    if (sub_1A56D4998())
    {
      uint64_t v33 = *(void *)(v0 + 184);
      uint64_t v34 = *(void *)(v0 + 120);
      uint64_t v35 = *(unsigned __int8 *)(v0 + 296);
      v36 = (void *)sub_1A56D49D8();
      *(void *)(v0 + 280) = v36;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v33;
      *(void *)(v0 + 24) = sub_1A5542D54;
      uint64_t v37 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_1A55433D4;
      *(void *)(v0 + 104) = &block_descriptor;
      *(void *)(v0 + 112) = v37;
      objc_msgSend(v36, sel_coordinateReadingWithSaveToTempDir_options_completionHandler_, v35, v34, v0 + 80);
      return MEMORY[0x1F41881E8](v0 + 16);
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 16))(*(void *)(v0 + 168), *(void *)(v0 + 200), *(void *)(v0 + 152));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v7 = sub_1A54E2AD0(0, *(void *)(v7 + 16) + 1, 1, v7);
    }
    unint64_t v26 = *(void *)(v7 + 16);
    unint64_t v25 = *(void *)(v7 + 24);
    if (v26 >= v25 >> 1) {
      unint64_t v7 = sub_1A54E2AD0(v25 > 1, v26 + 1, 1, v7);
    }
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v29 = *(void *)(v0 + 160);
    uint64_t v28 = *(void *)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 152);
    *(void *)(v7 + 16) = v26 + 1;
    v24(v7+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v26, v28, v30);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v30);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v31 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v31(v7);
}

uint64_t sub_1A55432B0()
{
  uint64_t v1 = (void *)v0[35];
  uint64_t v3 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[19];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A55433D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1A56D4A28();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    swift_allocError();
    *uint64_t v10 = a3;
    id v11 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1A56D49F8();
    (*(void (**)(void, char *, uint64_t))(v6 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v8, v5);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1A5543530(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1A5546188(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = *(void *)(type metadata accessor for SFSandboxTokenURLPair(0) - 8);
    uint64_t v5 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = *v5;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_1A5546188(v8 > 1, v9 + 1, 1);
      }
      uint64_t v5 = (uint64_t *)((char *)v5 + v6);
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A5543654(uint64_t a1)
{
  uint64_t v3 = sub_1A56D4A28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v14[1] = v1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1A55461A8(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v17 = type metadata accessor for SFSandboxTokenURLPair(0);
    uint64_t v9 = a1
       + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
    uint64_t v16 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v14[2] = v4 + 32;
    uint64_t v15 = v10;
    do
    {
      v15(v6, v9 + *(int *)(v17 + 20), v3);
      uint64_t v18 = v8;
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1A55461A8(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v18;
      }
      *(void *)(v8 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12, v6, v3);
      v9 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1A554386C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1A56D56A8();
  if (!v18) {
    return sub_1A56D5398();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1A56D4F88();
  uint64_t v32 = sub_1A56D5AF8();
  sub_1A56D5AC8();
  uint64_t v36 = v8;
  uint64_t result = sub_1A56D5698();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      unint64_t v21 = (void (*)(char *, void))sub_1A56D5768();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1A56D5AD8();
      sub_1A56D56D8();
      --v19;
      unint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_1A5543C6C()
{
  uint64_t v0 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v0, qword_1E96714E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96714E0);
  if (qword_1E966C0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E966C098);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t SFSecurityScopedURL.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A56D4A28();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SFSecurityScopedURL.sandboxToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFSecurityScopedURL(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SFSecurityScopedURL(uint64_t a1)
{
  return sub_1A550D49C(a1, qword_1E966B2D8);
}

uint64_t SFSecurityScopedURL.init(_:readWrite:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1A56D4A28();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a1, v5);
  uint64_t v7 = sub_1A5546B34(a1);
  if (v2)
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v9(a1, v5);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(a2, v5);
  }
  else
  {
    uint64_t v11 = v7;
    uint64_t v12 = v8;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    uint64_t result = type metadata accessor for SFSecurityScopedURL(0);
    uint64_t v13 = (uint64_t *)(a2 + *(int *)(result + 20));
    *uint64_t v13 = v11;
    v13[1] = v12;
  }
  return result;
}

uint64_t static SFSecurityScopedURL.consumeSandboxToken(item:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1A56D5108();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A56D4998() & 1) == 0)
  {
    type metadata accessor for SFAirDropSend.Failure();
    sub_1A5548220(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v8 = (unint64_t *)(a1 + *(int *)(type metadata accessor for SFSecurityScopedURL(0) + 20));
  unint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  unint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1A56D5B48();
  sub_1A56D51C8();
  unint64_t v11 = v31;
  if (!v10)
  {
    unint64_t v22 = v30;
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v23 = v22;
    *(void *)(v23 + 8) = v11;
    *(void *)(v23 + 16) = 0xD000000000000051;
    *(void *)(v23 + 24) = 0x80000001A5739750;
    uint64_t v24 = 45;
LABEL_9:
    *(void *)(v23 + 32) = v24;
    *(_OWORD *)(v23 + 40) = 0u;
    *(_OWORD *)(v23 + 56) = 0u;
    *(void *)(v23 + 72) = 0;
    *(void *)(v23 + 80) = 0x2000000000000000;
    *(void *)(v23 + 88) = 0;
    *(void *)(v23 + 96) = 0;
    return swift_willThrow();
  }
  uint64_t v29 = a2;
  swift_bridgeObjectRelease();
  unint64_t v30 = v9;
  unint64_t v31 = v10;
  sub_1A56D50F8();
  sub_1A5547048();
  uint64_t v12 = sub_1A56D5958();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v30 = v9;
  unint64_t v31 = v10;
  sub_1A56D51C8();
  unint64_t v13 = v31;
  if (!v12)
  {
    unint64_t v25 = v30;
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v23 = v25;
    *(void *)(v23 + 8) = v13;
    *(void *)(v23 + 16) = 0xD000000000000051;
    *(void *)(v23 + 24) = 0x80000001A5739750;
    uint64_t v24 = 46;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = sandbox_extension_consume();
  swift_bridgeObjectRelease();
  unint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_1A56D5A28();
  uint64_t v15 = swift_bridgeObjectRelease();
  unint64_t v30 = 0xD00000000000001ELL;
  unint64_t v31 = 0x80000001A57397B0;
  int v32 = MEMORY[0x1A6269020](v15);
  sub_1A56D5E78();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  unint64_t v16 = v31;
  if ((v14 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for SFSandboxTokenURLPair(0);
    uint64_t v18 = v29;
    uint64_t v19 = (char *)v29 + *(int *)(v17 + 20);
    uint64_t v20 = sub_1A56D4A28();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a1, v20);
    *uint64_t v18 = v14;
    return result;
  }
  unint64_t v26 = v30;
  sub_1A54F38F4();
  swift_allocError();
  *(void *)uint64_t v27 = v26;
  *(void *)(v27 + 8) = v16;
  *(_OWORD *)(v27 + 16) = xmmword_1A56EF9B0;
  *(void *)(v27 + 32) = 0x80000001A5739750;
  *(void *)(v27 + 40) = 49;
  *(_OWORD *)(v27 + 48) = 0u;
  *(_OWORD *)(v27 + 64) = 0u;
  *(void *)(v27 + 88) = 0;
  *(void *)(v27 + 96) = 0;
  *(void *)(v27 + 80) = 0x8000000000000000;
  return swift_willThrow();
}

uint64_t SFSandboxTokenURLPair.init(token:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for SFSandboxTokenURLPair(0) + 20);
  uint64_t v5 = sub_1A56D4A28();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t static SFSecurityScopedURL.withAccess<A>(to:body:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *(void *)(type metadata accessor for SFSandboxTokenURLPair(0) - 8);
  v4[10] = swift_task_alloc();
  uint64_t v5 = sub_1A56D4A28();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = *(void *)(type metadata accessor for SFSecurityScopedURL(0) - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A554458C, 0, 0);
}

uint64_t sub_1A554458C()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v53 = MEMORY[0x1E4FBC860];
  int64_t v2 = *(void *)(v0[6] + 16);
  uint64_t v3 = swift_bridgeObjectRetain();
  int64_t v50 = v2;
  if (v2)
  {
    uint64_t v4 = v0[14];
    unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v6 = *(void *)(v4 + 72);
    uint64_t v7 = v3 + v5;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1A55470BC(v7, v0[18]);
      char v9 = sub_1A56D4998();
      uint64_t v10 = v0[18];
      if (v9)
      {
        sub_1A5547120(v10);
      }
      else
      {
        sub_1A554717C(v10, v0[17], type metadata accessor for SFSecurityScopedURL);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A5546220(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v53;
        }
        unint64_t v12 = *(void *)(v8 + 16);
        unint64_t v11 = *(void *)(v8 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1A5546220(v11 > 1, v12 + 1, 1);
          uint64_t v8 = v53;
        }
        uint64_t v13 = v0[17];
        *(void *)(v8 + 16) = v12 + 1;
        sub_1A554717C(v13, v8 + v5 + v12 * v6, type metadata accessor for SFSecurityScopedURL);
      }
      v7 += v6;
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v8 = v1;
  }
  swift_bridgeObjectRelease();
  int64_t v14 = *(void *)(v8 + 16);
  if (v14)
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[12];
    uint64_t v54 = v1;
    sub_1A55461A8(0, v14, 0);
    uint64_t v17 = v8 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v51 = *(void *)(v15 + 72);
    uint64_t v18 = v54;
    do
    {
      uint64_t v19 = v0[16];
      uint64_t v20 = v0[13];
      uint64_t v21 = v0[11];
      sub_1A55470BC(v17, v19);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, v19, v21);
      sub_1A5547120(v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A55461A8(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v54;
      }
      unint64_t v23 = *(void *)(v18 + 16);
      unint64_t v22 = *(void *)(v18 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1A55461A8(v22 > 1, v23 + 1, 1);
        uint64_t v18 = v54;
      }
      uint64_t v24 = v0[13];
      uint64_t v25 = v0[11];
      *(void *)(v18 + 16) = v23 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 32))(v18+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v23, v24, v25);
      uint64_t v54 = v18;
      v17 += v51;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  v0[19] = v18;
  int64_t v26 = v50;
  if (*(void *)(v18 + 16))
  {
    if (qword_1E96702F8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1A56D4D98();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E96714E0);
    uint64_t v28 = sub_1A56D4D78();
    os_log_type_t v29 = sub_1A56D57D8();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v30 = 0;
      _os_log_impl(&dword_1A5389000, v28, v29, "Non fileURL detected, skipping sandbox tokens", v30, 2u);
      MEMORY[0x1A626CE20](v30, -1, -1);
    }
    unint64_t v31 = (int *)v0[7];

    v52 = (uint64_t (*)(uint64_t, uint64_t))((char *)v31 + *v31);
    int v32 = (void *)swift_task_alloc();
    v0[20] = v32;
    *int v32 = v0;
    v32[1] = sub_1A5544C10;
    uint64_t v33 = v0[5];
    uint64_t v34 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1E4FBC860];
    if (v50)
    {
      uint64_t v36 = v0[14];
      uint64_t v37 = v0[9];
      uint64_t v38 = v0[6];
      uint64_t v55 = MEMORY[0x1E4FBC860];
      sub_1A55461E4(0, v50, 0);
      uint64_t v39 = v38 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
      uint64_t v40 = *(void *)(v36 + 72);
      do
      {
        uint64_t v41 = v0[15];
        v42 = (uint64_t *)v0[10];
        sub_1A55470BC(v39, v41);
        static SFSecurityScopedURL.consumeSandboxToken(item:)(v41, v42);
        sub_1A5547120(v0[15]);
        uint64_t v35 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A55461E4(0, *(void *)(v55 + 16) + 1, 1);
          uint64_t v35 = v55;
        }
        unint64_t v44 = *(void *)(v35 + 16);
        unint64_t v43 = *(void *)(v35 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1A55461E4(v43 > 1, v44 + 1, 1);
          uint64_t v35 = v55;
        }
        uint64_t v45 = v0[10];
        *(void *)(v35 + 16) = v44 + 1;
        sub_1A554717C(v45, v35+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v44, type metadata accessor for SFSandboxTokenURLPair);
        v39 += v40;
        --v26;
      }
      while (v26);
    }
    v0[22] = v35;
    v46 = (int *)v0[7];
    uint64_t v47 = sub_1A5543654(v35);
    v0[23] = v47;
    v52 = (uint64_t (*)(uint64_t, uint64_t))((char *)v46 + *v46);
    v48 = (void *)swift_task_alloc();
    v0[24] = v48;
    void *v48 = v0;
    v48[1] = sub_1A5544DD4;
    uint64_t v33 = v0[5];
    uint64_t v34 = v47;
  }
  return v52(v33, v34);
}

uint64_t sub_1A5544C10()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    int64_t v2 = sub_1A5544FDC;
  }
  else {
    int64_t v2 = sub_1A5544D24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5544D24()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A5544DD4()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int64_t v2 = sub_1A554508C;
  }
  else
  {
    swift_bridgeObjectRelease();
    int64_t v2 = sub_1A5544EF0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5544EF0()
{
  uint64_t v1 = sub_1A5543530(*(void *)(v0 + 176));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      sandbox_extension_release();
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1A5544FDC()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A554508C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1A5543530(v1);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    do
    {
      v4 += 8;
      sandbox_extension_release();
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1A5545190()
{
  if (*v0) {
    return 0x54786F62646E6173;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_1A55451CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5548048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55451F4(uint64_t a1)
{
  unint64_t v2 = sub_1A55471E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5545230(uint64_t a1)
{
  unint64_t v2 = sub_1A55471E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFSecurityScopedURL.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671510);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55471E4();
  sub_1A56D61D8();
  v8[15] = 0;
  sub_1A56D4A28();
  sub_1A5548220(&qword_1E9670E80, MEMORY[0x1E4F276F0]);
  sub_1A56D5E38();
  if (!v1)
  {
    type metadata accessor for SFSecurityScopedURL(0);
    v8[14] = 1;
    sub_1A56D5DA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SFSecurityScopedURL.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_1A56D4A28();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671520);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFSecurityScopedURL(0);
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55471E4();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  unint64_t v22 = v11;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  char v29 = 0;
  sub_1A5548220(&qword_1E9671018, MEMORY[0x1E4F276F0]);
  uint64_t v14 = v26;
  sub_1A56D5D48();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v6, v14);
  char v28 = 1;
  uint64_t v15 = sub_1A56D5CA8();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v27);
  uint64_t v19 = (uint64_t)v22;
  uint64_t v18 = v23;
  uint64_t v20 = (uint64_t *)&v22[*(int *)(v9 + 20)];
  *uint64_t v20 = v15;
  v20[1] = v17;
  sub_1A55470BC(v19, v18);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1A5547120(v19);
}

uint64_t sub_1A5545750@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFSecurityScopedURL.init(from:)(a1, a2);
}

uint64_t sub_1A5545768(void *a1)
{
  return SFSecurityScopedURL.encode(to:)(a1);
}

uint64_t SFSandboxTokenURLPair.token.getter()
{
  return *(void *)v0;
}

uint64_t SFSandboxTokenURLPair.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFSandboxTokenURLPair(0) + 20);
  uint64_t v4 = sub_1A56D4A28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

Swift::Void __swiftcall SFSandboxTokenURLPair.releaseSandboxExtension()()
{
}

uint64_t static SFSandboxTokenURLPair.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2)
  {
    type metadata accessor for SFSandboxTokenURLPair(0);
    JUMPOUT(0x1A6268C50);
  }
  return 0;
}

uint64_t sub_1A5545874()
{
  if (*v0) {
    return 7107189;
  }
  else {
    return 0x6E656B6F74;
  }
}

uint64_t sub_1A55458A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5548144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55458CC(uint64_t a1)
{
  unint64_t v2 = sub_1A5547238();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5545908(uint64_t a1)
{
  unint64_t v2 = sub_1A5547238();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFSandboxTokenURLPair.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671528);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5547238();
  sub_1A56D61D8();
  v8[15] = 0;
  sub_1A56D5E48();
  if (!v1)
  {
    type metadata accessor for SFSandboxTokenURLPair(0);
    v8[14] = 1;
    sub_1A56D4A28();
    sub_1A5548220(&qword_1E9670E80, MEMORY[0x1E4F276F0]);
    sub_1A56D5E38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SFSandboxTokenURLPair.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = sub_1A56D4A28();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671538);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SFSandboxTokenURLPair(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5547238();
  sub_1A56D61A8();
  if (!v2)
  {
    uint64_t v21 = v8;
    uint64_t v11 = v24;
    uint64_t v12 = v25;
    uint64_t v13 = v5;
    char v28 = 0;
    uint64_t v14 = v26;
    uint64_t v15 = sub_1A56D5D58();
    uint64_t v20 = v10;
    *uint64_t v10 = v15;
    char v27 = 1;
    sub_1A5548220(&qword_1E9671018, MEMORY[0x1E4F276F0]);
    sub_1A56D5D48();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v14);
    uint64_t v16 = v22;
    uint64_t v17 = (uint64_t)v20;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)v20 + *(int *)(v21 + 20), v13, v12);
    sub_1A554717C(v17, v16, type metadata accessor for SFSandboxTokenURLPair);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1A5545E08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFSandboxTokenURLPair.init(from:)(a1, a2);
}

uint64_t sub_1A5545E20(void *a1)
{
  return SFSandboxTokenURLPair.encode(to:)(a1);
}

uint64_t sub_1A5545E38(void *a1, void *a2)
{
  if (*a1 == *a2) {
    JUMPOUT(0x1A6268C50);
  }
  return 0;
}

uint64_t RandomAccessCollection<>.urls.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  return sub_1A554386C((void (*)(char *, char *))sub_1A5545EDC, 0, a1, v4, MEMORY[0x1E4FBC248], *(void *)(*(void *)(a2 + 8) + 8), MEMORY[0x1E4FBC278], v5);
}

uint64_t sub_1A5545EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1A56D4A28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t RandomAccessCollection<>.securityScopedURLs.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFSecurityScopedURL(0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A554386C((void (*)(char *, char *))sub_1A5545FE4, 0, a1, v4, v5, *(void *)(*(void *)(a2 + 8) + 8), MEMORY[0x1E4FBC0F0], (uint64_t)&v7);
}

uint64_t sub_1A5545FE4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v7 = sub_1A56D4A28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11(v10, a1, v7);
  v11(a3, (uint64_t)v10, v7);
  uint64_t v12 = sub_1A5546B34((uint64_t)v10);
  if (v3)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
    v14(v10, v7);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(a3, v7);
    *a2 = v3;
  }
  else
  {
    uint64_t v16 = v12;
    uint64_t v17 = v13;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t result = type metadata accessor for SFSecurityScopedURL(0);
    uint64_t v18 = (uint64_t *)&a3[*(int *)(result + 20)];
    *uint64_t v18 = v16;
    v18[1] = v17;
  }
  return result;
}

uint64_t sub_1A5546168(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A554629C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A5546188(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A5546408(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A55461A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A5546568(a1, a2, a3, (void *)*v3, &qword_1E96708E0, MEMORY[0x1E4F276F0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A55461E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A5546568(a1, a2, a3, (void *)*v3, &qword_1E9671590, type metadata accessor for SFSandboxTokenURLPair);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A5546220(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A5546568(a1, a2, a3, (void *)*v3, &qword_1E9671598, type metadata accessor for SFSecurityScopedURL);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1A554625C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A55467B0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A554627C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1A554692C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1A554629C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C4B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A5546408(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671588);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A5546568(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A55467B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671580);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 120 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A554692C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96708C8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t _s7Sharing19SFSecurityScopedURLV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (MEMORY[0x1A6268C50]())
  {
    uint64_t v4 = *(int *)(type metadata accessor for SFSecurityScopedURL(0) + 20);
    uint64_t v5 = (void *)(a1 + v4);
    uint64_t v6 = *(void *)(a1 + v4 + 8);
    int64_t v7 = (void *)(a2 + v4);
    uint64_t v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        BOOL v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_1A56D5F28() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1A5546B34(uint64_t a1)
{
  uint64_t v3 = sub_1A56D4A28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = 0;
  if (sub_1A56D4998())
  {
    uint64_t v30 = v1;
    CFURLRef v8 = (const __CFURL *)sub_1A56D49D8();
    BOOL v9 = (__CFString *)CFURLCopyFileSystemPath(v8, kCFURLPOSIXPathStyle);

    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_1A56D5A28();
    swift_bridgeObjectRelease();
    uint64_t v31 = 0xD000000000000022;
    unint64_t v32 = 0x80000001A57397D0;
    sub_1A5548220((unint64_t *)&qword_1E96715A0, MEMORY[0x1E4F276F0]);
    sub_1A56D5E78();
    sub_1A56D51C8();
    swift_bridgeObjectRelease();
    uint64_t v7 = v32;
    if (v9)
    {
      uint64_t v28 = v4;
      swift_bridgeObjectRelease();
      sub_1A56D50D8();
      sub_1A56D5148();
      swift_bridgeObjectRelease();
      uint64_t v10 = sandbox_extension_issue_file();
      swift_release();
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      sub_1A56D5A28();
      swift_bridgeObjectRelease();
      uint64_t v31 = 0xD000000000000026;
      unint64_t v32 = 0x80000001A5739830;
      sub_1A56D5E78();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      uint64_t v7 = v32;
      char v29 = (void *)v10;
      if (v10)
      {
        char v27 = v9;
        swift_bridgeObjectRelease();
        if (qword_1E96702F8 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_1A56D4D98();
        __swift_project_value_buffer(v11, (uint64_t)qword_1E96714E0);
        uint64_t v12 = v28;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, a1, v3);
        uint64_t v13 = sub_1A56D4D78();
        os_log_type_t v14 = sub_1A56D57D8();
        if (os_log_type_enabled(v13, v14))
        {
          unint64_t v15 = (uint8_t *)swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          uint64_t v31 = v26;
          *(_DWORD *)unint64_t v15 = 136315138;
          unint64_t v25 = v15 + 4;
          uint64_t v16 = sub_1A56D5E78();
          uint64_t v33 = sub_1A54E3290(v16, v17, &v31);
          sub_1A56D5928();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v3);
          _os_log_impl(&dword_1A5389000, v13, v14, "Issued sandbox token for url %s", v15, 0xCu);
          uint64_t v18 = v26;
          swift_arrayDestroy();
          MEMORY[0x1A626CE20](v18, -1, -1);
          MEMORY[0x1A626CE20](v15, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v3);
        }

        uint64_t v23 = v29;
        uint64_t v7 = sub_1A56D5088();
        free(v23);
      }
      else
      {
        uint64_t v21 = v31;
        sub_1A54F38F4();
        swift_allocError();
        *(void *)uint64_t v22 = v21;
        *(void *)(v22 + 8) = v7;
        *(void *)(v22 + 16) = 0xD000000000000051;
        *(void *)(v22 + 24) = 0x80000001A5739750;
        *(void *)(v22 + 32) = 36;
        *(_OWORD *)(v22 + 40) = 0u;
        *(_OWORD *)(v22 + 56) = 0u;
        *(void *)(v22 + 72) = 0;
        *(void *)(v22 + 80) = 0x2000000000000000;
        *(void *)(v22 + 88) = 0;
        *(void *)(v22 + 96) = 0;
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v19 = v31;
      sub_1A54F38F4();
      swift_allocError();
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v7;
      *(void *)(v20 + 16) = 0xD000000000000051;
      *(void *)(v20 + 24) = 0x80000001A5739750;
      *(void *)(v20 + 32) = 35;
      *(_OWORD *)(v20 + 40) = 0u;
      *(_OWORD *)(v20 + 56) = 0u;
      *(void *)(v20 + 72) = 0;
      *(void *)(v20 + 80) = 0x2000000000000000;
      *(void *)(v20 + 88) = 0;
      *(void *)(v20 + 96) = 0;
      swift_willThrow();
    }
  }
  return v7;
}

unint64_t sub_1A5547048()
{
  unint64_t result = qword_1E9671500;
  if (!qword_1E9671500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671500);
  }
  return result;
}

uint64_t type metadata accessor for SFSandboxTokenURLPair(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E9671540);
}

uint64_t sub_1A55470BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFSecurityScopedURL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5547120(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFSecurityScopedURL(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A554717C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1A55471E4()
{
  unint64_t result = qword_1E9671518;
  if (!qword_1E9671518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671518);
  }
  return result;
}

unint64_t sub_1A5547238()
{
  unint64_t result = qword_1E9671530;
  if (!qword_1E9671530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671530);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SFSecurityScopedURL(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A56D4A28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    BOOL v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *BOOL v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SFSecurityScopedURL(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SFSecurityScopedURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SFSecurityScopedURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SFSecurityScopedURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SFSecurityScopedURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  BOOL v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFSecurityScopedURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A554761C);
}

uint64_t sub_1A554761C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SFSecurityScopedURL(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A5547700);
}

uint64_t sub_1A5547700(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A56D4A28();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_1A55477C0()
{
  uint64_t result = sub_1A56D4A28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SFSandboxTokenURLPair(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1A56D4A28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for SFSandboxTokenURLPair(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1A56D4A28();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *initializeWithCopy for SFSandboxTokenURLPair(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A56D4A28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for SFSandboxTokenURLPair(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A56D4A28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *initializeWithTake for SFSandboxTokenURLPair(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A56D4A28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for SFSandboxTokenURLPair(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1A56D4A28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SFSandboxTokenURLPair(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A5547B8C);
}

uint64_t sub_1A5547B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1A56D4A28();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for SFSandboxTokenURLPair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A5547C10);
}

uint64_t sub_1A5547C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1A56D4A28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1A5547C84()
{
  uint64_t result = sub_1A56D4A28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFSandboxTokenURLPair.CodingKeys()
{
  return &type metadata for SFSandboxTokenURLPair.CodingKeys;
}

unsigned char *_s7Sharing21SFSandboxTokenURLPairV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5547E00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFSecurityScopedURL.CodingKeys()
{
  return &type metadata for SFSecurityScopedURL.CodingKeys;
}

unint64_t sub_1A5547E3C()
{
  unint64_t result = qword_1E9671550;
  if (!qword_1E9671550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671550);
  }
  return result;
}

unint64_t sub_1A5547E94()
{
  unint64_t result = qword_1E9671558;
  if (!qword_1E9671558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671558);
  }
  return result;
}

unint64_t sub_1A5547EEC()
{
  unint64_t result = qword_1E9671560;
  if (!qword_1E9671560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671560);
  }
  return result;
}

unint64_t sub_1A5547F44()
{
  unint64_t result = qword_1E9671568;
  if (!qword_1E9671568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671568);
  }
  return result;
}

unint64_t sub_1A5547F9C()
{
  unint64_t result = qword_1E9671570;
  if (!qword_1E9671570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671570);
  }
  return result;
}

unint64_t sub_1A5547FF4()
{
  unint64_t result = qword_1E9671578;
  if (!qword_1E9671578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671578);
  }
  return result;
}

uint64_t sub_1A5548048(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54786F62646E6173 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A5548144(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A5548220(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5548268()
{
  uint64_t v0 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v0, qword_1E96715A8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E96715A8);
  if (qword_1E9670340 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9672AA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t DeviceLockState.description.getter()
{
  if (*v0) {
    return 0x656B636F6C6E752ELL;
  }
  else {
    return 0x64656B636F6C2ELL;
  }
}

BOOL static DeviceLockState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DeviceLockState.hash(into:)()
{
  return sub_1A56D60C8();
}

uint64_t sub_1A55483B4()
{
  if (*v0) {
    return 0x64656B636F6C6E75;
  }
  else {
    return 0x64656B636F6CLL;
  }
}

uint64_t sub_1A55483EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5549BD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5548414(uint64_t a1)
{
  unint64_t v2 = sub_1A5548820();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5548450(uint64_t a1)
{
  unint64_t v2 = sub_1A5548820();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A554848C(uint64_t a1)
{
  unint64_t v2 = sub_1A55488C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55484C8(uint64_t a1)
{
  unint64_t v2 = sub_1A55488C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A5548504(uint64_t a1)
{
  unint64_t v2 = sub_1A5548874();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5548540(uint64_t a1)
{
  unint64_t v2 = sub_1A5548874();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DeviceLockState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96715C0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96715C8);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96715D0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5548820();
  sub_1A56D61D8();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_1A5548874();
    os_log_type_t v14 = v18;
    sub_1A56D5D98();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_1A55488C8();
    sub_1A56D5D98();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_1A5548820()
{
  unint64_t result = qword_1E96715D8;
  if (!qword_1E96715D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96715D8);
  }
  return result;
}

unint64_t sub_1A5548874()
{
  unint64_t result = qword_1E96715E0;
  if (!qword_1E96715E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96715E0);
  }
  return result;
}

unint64_t sub_1A55488C8()
{
  unint64_t result = qword_1E96715E8;
  if (!qword_1E96715E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96715E8);
  }
  return result;
}

uint64_t DeviceLockState.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t DeviceLockState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96715F0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96715F8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671600);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5548820();
  int v11 = v32;
  sub_1A56D61A8();
  if (v11) {
    goto LABEL_6;
  }
  unint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  os_log_type_t v14 = v10;
  uint64_t v15 = sub_1A56D5D78();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A56D5A78();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *char v22 = &type metadata for DeviceLockState;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_1A5548874();
    uint64_t v18 = v14;
    sub_1A56D5C88();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_1A55488C8();
    sub_1A56D5C88();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0Tm(v23);
}

uint64_t sub_1A5548DBC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DeviceLockState.init(from:)(a1, a2);
}

uint64_t sub_1A5548DD4(void *a1)
{
  return DeviceLockState.encode(to:)(a1);
}

uint64_t sub_1A5548DEC()
{
  if (*v0) {
    return 0x656B636F6C6E752ELL;
  }
  else {
    return 0x64656B636F6C2ELL;
  }
}

uint64_t sub_1A5548E2C()
{
  swift_beginAccess();
  return MEMORY[0x1A626CEF0](v0 + 16);
}

uint64_t sub_1A5548E74(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1A5548ED8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1A626CEF0](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1A5548F58;
}

void sub_1A5548F58(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

void sub_1A5548FDC(unsigned char *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1A56D4FB8();
  unsigned int v3 = MKBGetDeviceLockState();

  if (v3 >= 8)
  {
    if (qword_1E9670300 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A56D4D98();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E96715A8);
    uint64_t v6 = sub_1A56D4D78();
    os_log_type_t v7 = sub_1A56D57B8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 67109120;
      sub_1A56D5928();
      _os_log_impl(&dword_1A5389000, v6, v7, "Unknown keybag state: %d File a radar against Sharing | all", v8, 8u);
      MEMORY[0x1A626CE20](v8, -1, -1);
    }

    LOBYTE(v4) = 0;
  }
  else
  {
    unint64_t v4 = 0x100000001000001uLL >> (8 * v3);
  }
  *a1 = v4;
}

uint64_t SFLockStateMonitor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SFLockStateMonitor.init()();
  return v0;
}

uint64_t SFLockStateMonitor.init()()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v0 + 32) = 0;
  uint64_t v2 = (int *)(v0 + 32);
  *(void *)(v0 + 40) = sub_1A54F09BC((uint64_t)&unk_1EF9AD620);
  sub_1A554956C();
  unsigned int v3 = sub_1A56D5808();
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v7[4] = sub_1A55495E4;
  v7[5] = v4;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1A55493A0;
  v7[3] = &block_descriptor_2;
  uint64_t v5 = _Block_copy(v7);
  swift_release();
  swift_beginAccess();
  notify_register_dispatch("com.apple.mobile.keybagd.lock_status", v2, v3, v5);
  swift_endAccess();
  _Block_release(v5);

  return v1;
}

uint64_t sub_1A55492BC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result + 16;
    swift_beginAccess();
    if (MEMORY[0x1A626CEF0](v2))
    {
      uint64_t v3 = *(void *)(v1 + 24);
      uint64_t ObjectType = swift_getObjectType();
      sub_1A5548FDC(&v6);
      char v5 = v6;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 8))(&v5, ObjectType, v3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1A55493A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t SFLockStateMonitor.deinit()
{
  swift_beginAccess();
  notify_cancel(*(_DWORD *)(v0 + 32));
  sub_1A5549604(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SFLockStateMonitor.__deallocating_deinit()
{
  swift_beginAccess();
  notify_cancel(*(_DWORD *)(v0 + 32));
  sub_1A5549604(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1A5549498(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1A56D5C08();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_1A554953C@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_1A554956C()
{
  unint64_t result = qword_1E966C470;
  if (!qword_1E966C470)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E966C470);
  }
  return result;
}

uint64_t sub_1A55495AC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A55495E4()
{
  return sub_1A55492BC();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1A5549604(uint64_t a1)
{
  return a1;
}

unint64_t sub_1A5549630()
{
  unint64_t result = qword_1E9671608;
  if (!qword_1E9671608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671608);
  }
  return result;
}

uint64_t sub_1A5549684@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1A626CEF0](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1A55496E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

ValueMetadata *type metadata accessor for DeviceLockState()
{
  return &type metadata for DeviceLockState;
}

uint64_t dispatch thunk of SFLockStateMonitorDelegate.lockStateChanged(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SFLockStateMonitor()
{
  return self;
}

uint64_t method lookup function for SFLockStateMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFLockStateMonitor);
}

uint64_t dispatch thunk of SFLockStateMonitor.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SFLockStateMonitor.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of SFLockStateMonitor.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SFLockStateMonitor.lockState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SFLockStateMonitor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unsigned char *_s7Sharing15DeviceLockStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5549910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceLockState.CodingKeys()
{
  return &type metadata for DeviceLockState.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceLockState.LockedCodingKeys()
{
  return &type metadata for DeviceLockState.LockedCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceLockState.UnlockedCodingKeys()
{
  return &type metadata for DeviceLockState.UnlockedCodingKeys;
}

unint64_t sub_1A554996C()
{
  unint64_t result = qword_1E9671610;
  if (!qword_1E9671610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671610);
  }
  return result;
}

unint64_t sub_1A55499C4()
{
  unint64_t result = qword_1E9671618;
  if (!qword_1E9671618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671618);
  }
  return result;
}

unint64_t sub_1A5549A1C()
{
  unint64_t result = qword_1E9671620;
  if (!qword_1E9671620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671620);
  }
  return result;
}

unint64_t sub_1A5549A74()
{
  unint64_t result = qword_1E9671628;
  if (!qword_1E9671628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671628);
  }
  return result;
}

unint64_t sub_1A5549ACC()
{
  unint64_t result = qword_1E9671630;
  if (!qword_1E9671630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671630);
  }
  return result;
}

unint64_t sub_1A5549B24()
{
  unint64_t result = qword_1E9671638;
  if (!qword_1E9671638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671638);
  }
  return result;
}

unint64_t sub_1A5549B7C()
{
  unint64_t result = qword_1E9671640;
  if (!qword_1E9671640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671640);
  }
  return result;
}

uint64_t sub_1A5549BD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656B636F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656B636F6C6E75 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A5549CBC()
{
  uint64_t result = type metadata accessor for CombineLatestStateMachine.State();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1A5549D68(char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v138 = *(void *)(v4 - 8);
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v105 = *(void *)(v5 - 8);
  int v135 = *(_DWORD *)(v105 + 80);
  uint64_t v101 = *(void *)(v138 + 64) + v135;
  uint64_t v114 = *(void *)(v6 - 8);
  int v132 = *(_DWORD *)(v114 + 80);
  uint64_t v102 = *(void *)(v105 + 64);
  size_t v7 = *(void *)(v114 + 64);
  if (!*(_DWORD *)(v114 + 84)) {
    ++v7;
  }
  size_t __n = v7;
  size_t v123 = v7
       + ((v102
         + *(_DWORD *)(v114 + 80)
         + (v101 & ~(unint64_t)*(_DWORD *)(v105 + 80))) & ~(unint64_t)*(_DWORD *)(v114 + 80));
  uint64_t v108 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v122 = *(void *)(AssociatedTypeWitness - 8);
  int v129 = *(_DWORD *)(v122 + 80);
  uint64_t v111 = v5;
  uint64_t v121 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v121 - 8);
  uint64_t v9 = v8;
  int v126 = *(_DWORD *)(v8 + 80);
  uint64_t v142 = v126 | 7;
  uint64_t v117 = v6;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12 | 7;
  unint64_t v14 = v126 | (unint64_t)v129 | v12;
  uint64_t v15 = v14 | 7;
  uint64_t v16 = v129 + 8;
  unint64_t v17 = v16 & ~(unint64_t)v129;
  if (*(_DWORD *)(v122 + 84)) {
    size_t v18 = *(void *)(v122 + 64);
  }
  else {
    size_t v18 = *(void *)(v122 + 64) + 1;
  }
  unint64_t v19 = v17 + 1;
  uint64_t v20 = v126 + 8;
  unint64_t v21 = v20 & ~(unint64_t)v126;
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v22 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v8 + 64) + 1;
  }
  unint64_t v23 = v21 + 1;
  uint64_t v24 = (v21 + 1 + v13 + v22 + ((v17 + 1 + v142 + v18) & ~v142)) & ~v13;
  uint64_t v25 = v12 + 8;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v26 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v10 - 8) + 64) + 1;
  }
  uint64_t v27 = ((v12 + 8) & ~v12) + v26 + v24 + 1;
  unint64_t v28 = (v27 + ((v14 + 8) & ~(v14 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v29 = v28 + 8;
  if (v28 + 8 <= v123) {
    size_t v29 = v123;
  }
  unint64_t v30 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29) {
    unint64_t v30 = v29;
  }
  if (v30 <= 8) {
    uint64_t v31 = 8;
  }
  else {
    uint64_t v31 = v30;
  }
  if (v31 > 3) {
    goto LABEL_23;
  }
  unsigned int v32 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  uint64_t v33 = 2;
  if (v32 > 0xFFFA) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFA) {
LABEL_23:
  }
    uint64_t v33 = 1;
  unint64_t v34 = ((v31 + v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v35 = *(_DWORD *)(v138 + 80);
  unint64_t v36 = v14 | ((v132 | v135) | v35) & 0xF8 | 7u;
  BOOL v38 = v34 <= 0x18 && ((v132 | v135 | v129 | v126 | *(_DWORD *)(v11 + 80) | v35) & 0x100000) == 0 && v36 == 7;
  uint64_t v39 = a2;
  if (v38)
  {
    if (v31 > 3) {
      goto LABEL_35;
    }
    unsigned int v42 = ((1 << (8 * v31)) + 1) >> (8 * v31);
    if (v42 > 0xFFFA)
    {
      unsigned int v43 = *(_DWORD *)&a2[v31];
      unsigned int v44 = v43 - 5;
      if (v43 < 5) {
        goto LABEL_53;
      }
      goto LABEL_40;
    }
    if (v42 > 0xFA)
    {
      unsigned int v43 = *(unsigned __int16 *)&a2[v31];
      unsigned int v44 = v43 - 5;
      if (v43 < 5)
      {
LABEL_53:
        uint64_t v47 = ~v15;
        unint64_t v48 = ~(unint64_t)v129;
        uint64_t v49 = ~v142;
        uint64_t v50 = ~v12;
        switch(v43)
        {
          case 0u:
            uint64_t v41 = a1;
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v138 + 16))(a1, a2, v108);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16))((unint64_t)&a1[v101] & ~(unint64_t)v135, (unint64_t)&a2[v101] & ~(unint64_t)v135, v111);
            uint64_t v51 = (void *)((((unint64_t)&a1[v101] & ~(unint64_t)v135)
                          + v102
                          + v132) & ~(unint64_t)v132);
            v52 = (const void *)((((unint64_t)&a2[v101] & ~(unint64_t)v135)
                                + v102
                                + v132) & ~(unint64_t)v132);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v114 + 48))(v52, 1, v117))
            {
              memcpy(v51, v52, __n);
              if (v31 > 3)
              {
LABEL_79:
                a1[v31] = 0;
                if (v31 <= 3) {
                  goto LABEL_104;
                }
                goto LABEL_107;
              }
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v114 + 16))(v51, v52, v117);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v51, 0, 1, v117);
              if (v31 > 3) {
                goto LABEL_79;
              }
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              *(_DWORD *)&a1[v31] = 0;
              goto LABEL_118;
            }
            if (v58 > 0xFA)
            {
              *(_WORD *)&a1[v31] = 0;
              goto LABEL_118;
            }
            goto LABEL_79;
          case 1u:
            unint64_t v110 = ~(unint64_t)v126;
            uint64_t v113 = ~v13;
            uint64_t v116 = v50;
            unint64_t v119 = v23;
            size_t v125 = v22;
            uint64_t v128 = v25;
            size_t v131 = v26;
            uint64_t v134 = v27;
            uint64_t v137 = *(void *)(v10 - 8);
            uint64_t v140 = v10;
            *(void *)a1 = *(void *)a2;
            v64 = (void *)((unint64_t)&a1[v15 + 8] & v47);
            v65 = (void *)((unint64_t)&a2[v15 + 8] & v47);
            void *v64 = *v65;
            unint64_t v104 = (unint64_t)v64;
            unint64_t v107 = (unint64_t)v65;
            __dsta = (unsigned char *)(((unint64_t)v64 + v16) & v48);
            v66 = (const void *)(((unint64_t)v65 + v16) & v48);
            v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48);
            swift_retain();
            if (v67(v66, 1, AssociatedTypeWitness))
            {
              v68 = __dsta;
              memcpy(__dsta, v66, v18);
            }
            else
            {
              v68 = __dsta;
              (*(void (**)(unsigned char *, const void *, uint64_t))(v122 + 16))(__dsta, v66, AssociatedTypeWitness);
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v122 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
            }
            v68[v18] = *((unsigned char *)v66 + v18);
            unint64_t v75 = v19 + v18;
            v76 = (void *)((v104 + v142 + v19 + v18) & v49);
            v77 = (void *)((v107 + v142 + v75) & v49);
            void *v76 = *v77;
            v78 = (void *)(((unint64_t)v76 + v20) & v110);
            v79 = (const void *)(((unint64_t)v77 + v20) & v110);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v79, 1, v121))
            {
              size_t v80 = v125;
              memcpy(v78, v79, v125);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v78, v79, v121);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v78, 0, 1, v121);
              size_t v80 = v125;
            }
            *((unsigned char *)v78 + v80) = *((unsigned char *)v79 + v80);
            v86 = (void *)(((unint64_t)v76 + v13 + v119 + v80) & v113);
            v87 = (void *)(((unint64_t)v77 + v13 + v119 + v80) & v113);
            void *v86 = *v87;
            v88 = (void *)(((unint64_t)v86 + v128) & v116);
            v89 = (const void *)(((unint64_t)v87 + v128) & v116);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48))(v89, 1, v140))
            {
              size_t v90 = v131;
              memcpy(v88, v89, v131);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v137 + 16))(v88, v89, v140);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v88, 0, 1, v140);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
              size_t v90 = v131;
            }
            *((unsigned char *)v88 + v90) = *((unsigned char *)v89 + v90);
            *(void *)(((v104 | 7) + v134) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v107 | 7) + v134) & 0xFFFFFFFFFFFFFFF8);
            swift_retain();
            if (v31 > 3) {
              goto LABEL_102;
            }
            int v93 = 1;
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA) {
              goto LABEL_112;
            }
            if (v58 > 0xFA) {
              goto LABEL_117;
            }
LABEL_102:
            char v59 = 1;
            goto LABEL_103;
          case 2u:
            unint64_t v109 = ~(unint64_t)v126;
            uint64_t v112 = ~v13;
            uint64_t v115 = v50;
            unint64_t v118 = v23;
            size_t v124 = v22;
            uint64_t v127 = v25;
            size_t v130 = v26;
            uint64_t v133 = v27;
            uint64_t v136 = *(void *)(v10 - 8);
            uint64_t v139 = v10;
            *(void *)a1 = *(void *)a2;
            uint64_t v53 = (void *)((unint64_t)&a1[v15 + 8] & v47);
            uint64_t v54 = (void *)((unint64_t)&a2[v15 + 8] & v47);
            *uint64_t v53 = *v54;
            unint64_t v103 = (unint64_t)v53;
            unint64_t v106 = (unint64_t)v54;
            __dst = (unsigned char *)(((unint64_t)v53 + v16) & v48);
            uint64_t v55 = (const void *)(((unint64_t)v54 + v16) & v48);
            uint64_t v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48);
            swift_retain();
            if (v56(v55, 1, AssociatedTypeWitness))
            {
              v57 = __dst;
              memcpy(__dst, v55, v18);
            }
            else
            {
              v57 = __dst;
              (*(void (**)(unsigned char *, const void *, uint64_t))(v122 + 16))(__dst, v55, AssociatedTypeWitness);
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v122 + 56))(__dst, 0, 1, AssociatedTypeWitness);
            }
            v57[v18] = *((unsigned char *)v55 + v18);
            unint64_t v69 = v19 + v18;
            v70 = (void *)((v103 + v142 + v19 + v18) & v49);
            v71 = (void *)((v106 + v142 + v69) & v49);
            void *v70 = *v71;
            v72 = (void *)(((unint64_t)v70 + v20) & v109);
            v73 = (const void *)(((unint64_t)v71 + v20) & v109);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v73, 1, v121))
            {
              size_t v74 = v124;
              memcpy(v72, v73, v124);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v72, v73, v121);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v72, 0, 1, v121);
              size_t v74 = v124;
            }
            *((unsigned char *)v72 + v74) = *((unsigned char *)v73 + v74);
            v81 = (void *)(((unint64_t)v70 + v13 + v118 + v74) & v112);
            v82 = (void *)(((unint64_t)v71 + v13 + v118 + v74) & v112);
            void *v81 = *v82;
            v83 = (void *)(((unint64_t)v81 + v127) & v115);
            v84 = (const void *)(((unint64_t)v82 + v127) & v115);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v84, 1, v139))
            {
              size_t v85 = v130;
              memcpy(v83, v84, v130);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v83, v84, v139);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v83, 0, 1, v139);
              uint64_t v41 = a1;
              uint64_t v39 = a2;
              size_t v85 = v130;
            }
            *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
            v91 = (void *)(((v103 | 7) + v133) & 0xFFFFFFFFFFFFFFF8);
            v92 = (void *)(((v106 | 7) + v133) & 0xFFFFFFFFFFFFFFF8);
            void *v91 = *v92;
            *(void *)(((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8);
            swift_retain();
            if (v31 > 3) {
              goto LABEL_97;
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              int v93 = 2;
LABEL_112:
              *(_DWORD *)&v41[v31] = v93;
              goto LABEL_118;
            }
            if (v58 <= 0xFA)
            {
LABEL_97:
              char v59 = 2;
              goto LABEL_103;
            }
            LOWORD(v93) = 2;
            goto LABEL_117;
          case 3u:
            uint64_t v41 = a1;
            *(void *)a1 = *(void *)a2;
            swift_retain();
            if (v31 > 3) {
              goto LABEL_62;
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              *(_DWORD *)&a1[v31] = 3;
              goto LABEL_118;
            }
            if (v58 <= 0xFA)
            {
LABEL_62:
              char v59 = 3;
              goto LABEL_103;
            }
            LOWORD(v93) = 3;
            goto LABEL_117;
          case 4u:
            uint64_t v60 = *(void *)a2;
            id v61 = *(id *)a2;
            uint64_t v41 = a1;
            *(void *)a1 = v60;
            if (v31 > 3) {
              goto LABEL_66;
            }
            unsigned int v58 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            if (v58 > 0xFFFA)
            {
              *(_DWORD *)&a1[v31] = 4;
            }
            else
            {
              if (v58 <= 0xFA)
              {
LABEL_66:
                char v59 = 4;
LABEL_103:
                v41[v31] = v59;
                if (v31 > 3) {
                  goto LABEL_107;
                }
LABEL_104:
                unsigned int v94 = ((1 << (8 * v31)) + 1) >> (8 * v31);
                uint64_t v95 = 2;
                if (v94 > 0xFFFA) {
                  uint64_t v95 = 4;
                }
                if (v94 <= 0xFA) {
LABEL_107:
                }
                  uint64_t v95 = 1;
LABEL_120:
                *(void *)((unint64_t)&v41[v95 + 7 + v31] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v39[v95 + 7 + v31] & 0xFFFFFFFFFFFFFFF8);
                return v41;
              }
              LOWORD(v93) = 4;
LABEL_117:
              *(_WORD *)&v41[v31] = v93;
            }
LABEL_118:
            BOOL v96 = v58 > 0xFFFA;
            uint64_t v95 = 2;
            if (v96) {
              uint64_t v95 = 4;
            }
            goto LABEL_120;
          default:
            if (v31 > 3) {
              goto LABEL_71;
            }
            unsigned int v62 = ((1 << (8 * v31)) + 1) >> (8 * v31);
            uint64_t v63 = 2;
            if (v62 > 0xFFFA) {
              uint64_t v63 = 4;
            }
            if (v62 <= 0xFA) {
LABEL_71:
            }
              uint64_t v63 = 1;
            uint64_t v41 = a1;
            memcpy(a1, a2, v63 + v31);
            if (v31 > 3) {
              goto LABEL_107;
            }
            goto LABEL_104;
        }
      }
    }
    else
    {
LABEL_35:
      unsigned int v43 = a2[v31];
      unsigned int v44 = v43 - 5;
      if (v43 < 5) {
        goto LABEL_53;
      }
    }
LABEL_40:
    if (v31 <= 3) {
      uint64_t v45 = v31;
    }
    else {
      uint64_t v45 = 4;
    }
    switch(v45)
    {
      case 1:
        int v46 = *a2;
        if (v31 < 4) {
          goto LABEL_51;
        }
        goto LABEL_52;
      case 2:
        int v46 = *(unsigned __int16 *)a2;
        if (v31 >= 4) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 3:
        int v46 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v31 >= 4) {
          goto LABEL_52;
        }
        goto LABEL_51;
      case 4:
        int v46 = *(_DWORD *)a2;
        if (v31 < 4) {
LABEL_51:
        }
          v46 |= v44 << (8 * v31);
LABEL_52:
        unsigned int v43 = v46 + 5;
        break;
      default:
        goto LABEL_53;
    }
    goto LABEL_53;
  }
  uint64_t v40 = *(char **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v41 = &v40[(v36 + 16) & ~v36];
  swift_retain();
  return v41;
}

void *sub_1A554AC14(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v107 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v107 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v113 = *(void *)(v6 - 8);
  uint64_t v98 = *(unsigned __int8 *)(v113 + 80);
  uint64_t v101 = v5 + v98;
  size_t v8 = *(void *)(v7 - 8);
  uint64_t v110 = *(void *)(v113 + 64);
  uint64_t v104 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v110 + v104 + ((v5 + v98) & ~v98)) & ~v104;
  size_t v120 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v133 = v10 + v9;
  uint64_t v114 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v131 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v131;
  uint64_t v12 = *(unsigned __int8 *)(v131 + 80);
  uint64_t v117 = v6;
  uint64_t v127 = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(void *)(v127 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v128 + 80);
  uint64_t v14 = v13 | 7;
  uint64_t v123 = v7;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v17 | 7;
  uint64_t v19 = v13 | v12 | v17;
  uint64_t v20 = v12;
  uint64_t v21 = v19 | 7;
  uint64_t v22 = (v19 + 8) & ~(v19 | 7);
  uint64_t v23 = v12 + 8;
  uint64_t v24 = (v12 + 8) & ~v12;
  if (*(_DWORD *)(v131 + 84)) {
    size_t v25 = *(void *)(v131 + 64);
  }
  else {
    size_t v25 = *(void *)(v131 + 64) + 1;
  }
  uint64_t v26 = v24 + 1;
  uint64_t v27 = (v24 + 1 + v14 + v25) & ~v14;
  uint64_t v28 = v13 + 8;
  uint64_t v29 = (v13 + 8) & ~v13;
  uint64_t v132 = v128;
  unint64_t v30 = a2;
  if (*(_DWORD *)(v128 + 84)) {
    uint64_t v31 = *(void *)(v128 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v128 + 64) + 1;
  }
  uint64_t v32 = (v29 + 1 + v18 + v31 + v27) & ~v18;
  uint64_t v33 = v17 + 8;
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v15 - 8) + 64) + 1;
  }
  uint64_t v35 = ((v17 + 8) & ~v17) + v34 + v32 + 1;
  unint64_t v36 = (v35 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = v36 + 8;
  if (v36 + 8 <= v133) {
    unint64_t v37 = v133;
  }
  unint64_t v38 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37) {
    unint64_t v38 = v37;
  }
  if (v38 <= 8) {
    uint64_t v39 = 8;
  }
  else {
    uint64_t v39 = v38;
  }
  if (v39 > 3) {
    goto LABEL_22;
  }
  unsigned int v40 = ((1 << (8 * v39)) + 1) >> (8 * v39);
  if (v40 > 0xFFFA)
  {
    unsigned int v41 = *(_DWORD *)&a2[v39];
    unsigned int v42 = v41 - 5;
    if (v41 < 5) {
      goto LABEL_40;
    }
    goto LABEL_27;
  }
  if (v40 <= 0xFA)
  {
LABEL_22:
    unsigned int v41 = a2[v39];
    unsigned int v42 = v41 - 5;
    if (v41 < 5) {
      goto LABEL_40;
    }
LABEL_27:
    if (v39 <= 3) {
      uint64_t v43 = v39;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a2;
        if (v39 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v39 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v39 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v39 < 4) {
LABEL_38:
        }
          v44 |= v42 << (8 * v39);
LABEL_39:
        unsigned int v41 = v44 + 5;
        break;
      default:
        goto LABEL_40;
    }
    goto LABEL_40;
  }
  unsigned int v41 = *(unsigned __int16 *)&a2[v39];
  unsigned int v42 = v41 - 5;
  if (v41 >= 5) {
    goto LABEL_27;
  }
LABEL_40:
  uint64_t v45 = ~v21;
  uint64_t v46 = ~v20;
  uint64_t v47 = ~v14;
  uint64_t v48 = ~v13;
  uint64_t v49 = ~v17;
  switch(v41)
  {
    case 0u:
      uint64_t v50 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v107 + 16))(a1, a2, v114);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 16))(((unint64_t)a1 + v101) & ~v98, (unint64_t)&a2[v101] & ~v98, v117);
      uint64_t v51 = (void *)(((((unint64_t)a1 + v101) & ~v98) + v110 + v104) & ~v104);
      v52 = (const void *)((((unint64_t)&a2[v101] & ~v98) + v110 + v104) & ~v104);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v120 + 48))(v52, 1, v123))
      {
        memcpy(v51, v52, __n);
        if (v39 > 3)
        {
LABEL_77:
          *((unsigned char *)a1 + v39) = 0;
          if (v39 <= 3) {
            goto LABEL_89;
          }
          goto LABEL_92;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v51, v52, v123);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v51, 0, 1, v123);
        if (v39 > 3) {
          goto LABEL_77;
        }
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 0;
        goto LABEL_105;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 0;
        goto LABEL_105;
      }
      goto LABEL_77;
    case 1u:
      uint64_t v100 = v48;
      uint64_t v103 = ~v18;
      uint64_t v106 = v49;
      uint64_t v109 = v26;
      size_t v112 = v31;
      uint64_t v116 = v29 + 1;
      uint64_t v119 = v33;
      size_t v122 = v34;
      uint64_t v125 = v35;
      uint64_t v130 = *(void *)(v15 - 8);
      uint64_t v135 = v15;
      *a1 = *(void *)a2;
      uint64_t v63 = (void *)(((unint64_t)a1 + v21 + 8) & v45);
      v64 = (void *)((unint64_t)&a2[v21 + 8] & v45);
      *uint64_t v63 = *v64;
      unint64_t v94 = (unint64_t)v64;
      size_t __nb = (size_t)v63;
      __dsta = (void *)(((unint64_t)v63 + v23) & v46);
      v65 = (const void *)(((unint64_t)v64 + v23) & v46);
      v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_retain();
      if (v66(v65, 1, AssociatedTypeWitness))
      {
        memcpy(__dsta, v65, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dsta, v65, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dsta + v25) = *((unsigned char *)v65 + v25);
      v78 = (void *)((__nb + v14 + v109 + v25) & v47);
      v79 = (void *)((v94 + v14 + v109 + v25) & v47);
      void *v78 = *v79;
      size_t v80 = (void *)(((unint64_t)v78 + v28) & v48);
      v81 = (const void *)(((unint64_t)v79 + v28) & v48);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v132 + 48))(((unint64_t)v79 + v28) & v100, 1, v127))
      {
        memcpy(v80, v81, v112);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 16))(v80, v81, v127);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v80, 0, 1, v127);
      }
      *((unsigned char *)v80 + v112) = *((unsigned char *)v81 + v112);
      v82 = (void *)(((unint64_t)v78 + v18 + v116 + v112) & v103);
      v83 = (void *)(((unint64_t)v79 + v18 + v116 + v112) & v103);
      void *v82 = *v83;
      v84 = (void *)(((unint64_t)v82 + v119) & v106);
      size_t v85 = (const void *)(((unint64_t)v83 + v119) & v106);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v130 + 48))(v85, 1, v135))
      {
        size_t v86 = v122;
        memcpy(v84, v85, v122);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v130 + 16))(v84, v85, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v130 + 56))(v84, 0, 1, v135);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
        size_t v86 = v122;
      }
      *((unsigned char *)v84 + v86) = *((unsigned char *)v85 + v86);
      *(void *)(((__nb | 7) + v125) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v94 | 7) + v125) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v39 > 3) {
        goto LABEL_87;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)v50 + v39) = 1;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_87:
          char v58 = 1;
          goto LABEL_88;
        }
        *(_WORD *)((char *)v50 + v39) = 1;
      }
      goto LABEL_105;
    case 2u:
      uint64_t v99 = v48;
      uint64_t v102 = ~v18;
      uint64_t v105 = v49;
      uint64_t v108 = v26;
      size_t v111 = v31;
      uint64_t v115 = v29 + 1;
      uint64_t v118 = v33;
      size_t v121 = v34;
      uint64_t v124 = v35;
      uint64_t v129 = *(void *)(v15 - 8);
      uint64_t v134 = v15;
      *a1 = *(void *)a2;
      uint64_t v53 = (void *)(((unint64_t)a1 + v21 + 8) & v45);
      uint64_t v54 = (void *)((unint64_t)&a2[v21 + 8] & v45);
      *uint64_t v53 = *v54;
      unint64_t v93 = (unint64_t)v54;
      size_t __na = (size_t)v53;
      __dst = (void *)(((unint64_t)v53 + v23) & v46);
      uint64_t v55 = (const void *)(((unint64_t)v54 + v23) & v46);
      uint64_t v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_retain();
      if (v56(v55, 1, AssociatedTypeWitness))
      {
        memcpy(__dst, v55, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v55, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dst + v25) = *((unsigned char *)v55 + v25);
      v67 = (void *)((__na + v14 + v108 + v25) & v47);
      v68 = (void *)((v93 + v14 + v108 + v25) & v47);
      void *v67 = *v68;
      unint64_t v69 = (void *)(((unint64_t)v67 + v28) & v48);
      v70 = (const void *)(((unint64_t)v68 + v28) & v48);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v132 + 48))(((unint64_t)v68 + v28) & v99, 1, v127))
      {
        memcpy(v69, v70, v111);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 16))(v69, v70, v127);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v69, 0, 1, v127);
      }
      *((unsigned char *)v69 + v111) = *((unsigned char *)v70 + v111);
      v71 = (void *)(((unint64_t)v67 + v18 + v115 + v111) & v102);
      v72 = (void *)(((unint64_t)v68 + v18 + v115 + v111) & v102);
      void *v71 = *v72;
      v73 = (void *)(((unint64_t)v71 + v118) & v105);
      size_t v74 = (const void *)(((unint64_t)v72 + v118) & v105);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v129 + 48))(v74, 1, v134))
      {
        size_t v75 = v121;
        memcpy(v73, v74, v121);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v129 + 16))(v73, v74, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v73, 0, 1, v134);
        uint64_t v50 = a1;
        unint64_t v30 = a2;
        size_t v75 = v121;
      }
      *((unsigned char *)v73 + v75) = *((unsigned char *)v74 + v75);
      v76 = (void *)(((__na | 7) + v124) & 0xFFFFFFFFFFFFFFF8);
      v77 = (void *)(((v93 | 7) + v124) & 0xFFFFFFFFFFFFFFF8);
      void *v76 = *v77;
      *(void *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v39 > 3) {
        goto LABEL_73;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)v50 + v39) = 2;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_73:
          char v58 = 2;
          goto LABEL_88;
        }
        *(_WORD *)((char *)v50 + v39) = 2;
      }
      goto LABEL_105;
    case 3u:
      uint64_t v50 = a1;
      *a1 = *(void *)a2;
      swift_retain();
      if (v39 > 3) {
        goto LABEL_49;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 3;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_49:
          char v58 = 3;
          goto LABEL_88;
        }
        *(_WORD *)((char *)a1 + v39) = 3;
      }
      goto LABEL_105;
    case 4u:
      uint64_t v59 = *(void *)a2;
      id v60 = *(id *)a2;
      uint64_t v50 = a1;
      *a1 = v59;
      if (v39 > 3) {
        goto LABEL_53;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 4;
        goto LABEL_105;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 4;
LABEL_105:
        BOOL v89 = v57 > 0xFFFA;
        uint64_t v88 = 2;
        if (v89) {
          uint64_t v88 = 4;
        }
        goto LABEL_107;
      }
LABEL_53:
      char v58 = 4;
LABEL_88:
      *((unsigned char *)v50 + v39) = v58;
      if (v39 > 3) {
        goto LABEL_92;
      }
LABEL_89:
      unsigned int v87 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v88 = 2;
      if (v87 > 0xFFFA) {
        uint64_t v88 = 4;
      }
      if (v87 <= 0xFA) {
LABEL_92:
      }
        uint64_t v88 = 1;
LABEL_107:
      *(void *)(((unint64_t)v50 + v88 + v39 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v30[v88 + 7 + v39] & 0xFFFFFFFFFFFFFFF8);
      return v50;
    default:
      if (v39 > 3) {
        goto LABEL_58;
      }
      unsigned int v61 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v62 = 2;
      if (v61 > 0xFFFA) {
        uint64_t v62 = 4;
      }
      if (v61 <= 0xFA) {
LABEL_58:
      }
        uint64_t v62 = 1;
      uint64_t v50 = a1;
      memcpy(a1, a2, v62 + v39);
      if (v39 > 3) {
        goto LABEL_92;
      }
      goto LABEL_89;
  }
}

unsigned __int8 *sub_1A554B9EC(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  int v3 = a3;
  if (a1 != a2)
  {
    uint64_t v4 = a3[2];
    uint64_t v5 = v3[3];
    uint64_t v134 = *(void *)(v3[2] - 8);
    uint64_t v6 = *(void *)(v134 + 64);
    uint64_t v136 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v136 + 80);
    uint64_t v133 = v6 + v7;
    uint64_t v162 = v7;
    uint64_t v8 = v3[4];
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v135 = *(void *)(v136 + 64);
    uint64_t v164 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v10 = (v135 + v164 + ((v6 + v7) & ~v7)) & ~v164;
    uint64_t v145 = v9;
    size_t v11 = *(void *)(v9 + 64);
    if (!*(_DWORD *)(v9 + 84)) {
      ++v11;
    }
    size_t __n = v11;
    unint64_t v160 = v11 + v10;
    uint64_t v137 = v4;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v167 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v12 = *(unsigned __int8 *)(v167 + 80);
    uint64_t v138 = v5;
    uint64_t v155 = swift_getAssociatedTypeWitness();
    v157 = v3;
    uint64_t v158 = *(void *)(v155 - 8);
    uint64_t v13 = *(unsigned __int8 *)(v158 + 80);
    uint64_t v14 = v13 | 7;
    uint64_t v15 = v13 | v12;
    uint64_t v146 = v8;
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v17 = v13;
    uint64_t v18 = v12;
    uint64_t v19 = *(void *)(v16 - 8);
    uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
    uint64_t v21 = v20 | 7;
    uint64_t v22 = v13 | v12 | v20 | 7;
    uint64_t v150 = v12 + 8;
    uint64_t v153 = v167;
    if (*(_DWORD *)(v167 + 84)) {
      uint64_t v23 = *(void *)(v167 + 64);
    }
    else {
      uint64_t v23 = *(void *)(v167 + 64) + 1;
    }
    size_t v139 = v23;
    uint64_t v140 = ((v12 + 8) & ~v12) + v23 + 1;
    uint64_t v24 = v140 + v14;
    uint64_t v168 = v13 | 7;
    uint64_t v152 = v13 + 8;
    uint64_t v154 = v158;
    size_t v25 = *(void *)(v158 + 64);
    uint64_t v26 = *(void *)(v16 - 8);
    if (!*(_DWORD *)(v158 + 84)) {
      ++v25;
    }
    uint64_t v142 = ((v13 + 8) & ~v13) + v25 + 1;
    uint64_t v27 = v142 + v21;
    uint64_t v159 = v20 + 8;
    size_t v28 = *(void *)(*(void *)(v16 - 8) + 64);
    if (!*(_DWORD *)(v19 + 84)) {
      ++v28;
    }
    size_t v144 = v28;
    uint64_t v29 = ((v20 + 8) & ~v20) + v28 + ((v142 + v21 + (v24 & ~v14)) & ~v21) + 1;
    unint64_t v30 = (v29 + (((v15 | v20) + 8) & ~v22) + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = v30 + 8;
    if (v30 + 8 <= v160) {
      unint64_t v31 = v160;
    }
    unint64_t v32 = ((v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v32 <= v31) {
      unint64_t v32 = v31;
    }
    if (v32 <= 8) {
      uint64_t v33 = 8;
    }
    else {
      uint64_t v33 = v32;
    }
    char v34 = 8 * v33;
    uint64_t v35 = a1;
    if (v33 > 3) {
      goto LABEL_21;
    }
    unsigned int v36 = ((1 << v34) + 1) >> v34;
    if (v36 > 0xFFFA)
    {
      unsigned int v37 = *(_DWORD *)&a1[v33];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_39;
      }
      goto LABEL_26;
    }
    if (v36 > 0xFA)
    {
      unsigned int v37 = *(unsigned __int16 *)&a1[v33];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_39;
      }
    }
    else
    {
LABEL_21:
      unsigned int v37 = a1[v33];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_39;
      }
    }
LABEL_26:
    if (v33 <= 3) {
      uint64_t v39 = v33;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a1;
        if (v33 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v40 = *(unsigned __int16 *)a1;
        if (v33 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v40 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v33 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v40 = *(_DWORD *)a1;
        if (v33 < 4) {
LABEL_37:
        }
          v40 |= v38 << v34;
LABEL_38:
        unsigned int v37 = v40 + 5;
        break;
      default:
        break;
    }
LABEL_39:
    size_t v141 = v25;
    uint64_t v161 = v16;
    uint64_t v131 = ~v162;
    uint64_t v132 = ~v164;
    uint64_t v41 = ~v22;
    uint64_t v147 = ~v18;
    uint64_t v148 = ~v168;
    uint64_t v149 = ~v17;
    uint64_t v143 = v20 | 7;
    uint64_t v151 = ~v21;
    uint64_t v163 = ~v20;
    switch(v37)
    {
      case 0u:
        uint64_t v42 = v22;
        (*(void (**)(unsigned __int8 *, uint64_t))(v134 + 8))(a1, v137);
        (*(void (**)(unint64_t, uint64_t))(v136 + 8))((unint64_t)&a1[v133] & v131, v138);
        unint64_t v43 = (((unint64_t)&a1[v133] & v131) + v135 + v164) & v132;
        int v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v145 + 48))(v43, 1, v146);
        uint64_t v22 = v42;
        if (v44) {
          break;
        }
        (*(void (**)(unint64_t, uint64_t))(v145 + 8))(v43, v146);
        uint64_t v22 = v42;
        if (v33 <= 3) {
          goto LABEL_63;
        }
        goto LABEL_65;
      case 1u:
        uint64_t v128 = v29;
        uint64_t v49 = v22;
        swift_release();
        uint64_t v125 = v49;
        uint64_t v50 = (unint64_t)&a1[v49 + 8] & v41;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))((v150 + v50) & v147, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v153 + 8))((v150 + v50) & v147, AssociatedTypeWitness); {
        uint64_t v51 = (v24 + v50) & v148;
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v152 + v51) & v149, 1, v155)) {
          (*(void (**)(uint64_t, uint64_t))(v154 + 8))((v152 + v51) & v149, v155);
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v159 + ((v27 + v51) & v151)) & v163, 1, v161))(*(void (**)(uint64_t, uint64_t))(v26 + 8))((v159 + ((v27 + v51) & v151)) & v163, v161); {
        uint64_t v29 = v128;
        }
        goto LABEL_62;
      case 2u:
        uint64_t v127 = v29;
        uint64_t v45 = v22;
        swift_release();
        uint64_t v125 = v45;
        uint64_t v46 = (unint64_t)&a1[v45 + 8] & v41;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))((v150 + v46) & v147, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v153 + 8))((v150 + v46) & v147, AssociatedTypeWitness); {
        uint64_t v47 = (v24 + v46) & v148;
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v152 + v47) & v149, 1, v155)) {
          (*(void (**)(uint64_t, uint64_t))(v154 + 8))((v152 + v47) & v149, v155);
        }
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v159 + ((v27 + v47) & v151)) & v163, 1, v161))(*(void (**)(uint64_t, uint64_t))(v26 + 8))((v159 + ((v27 + v47) & v151)) & v163, v161); {
        uint64_t v29 = v127;
        }
LABEL_62:
        swift_release();
        uint64_t v35 = a1;
        uint64_t v22 = v125;
        if (v33 <= 3) {
          goto LABEL_63;
        }
        goto LABEL_65;
      case 3u:
        uint64_t v48 = v22;
        swift_release();
        goto LABEL_52;
      case 4u:
        uint64_t v48 = v22;

LABEL_52:
        uint64_t v22 = v48;
        break;
      default:
        break;
    }
    if (v33 <= 3)
    {
LABEL_63:
      unsigned int v52 = ((1 << v34) + 1) >> v34;
      if (v52 > 0xFFFA)
      {
        unsigned int v53 = *(_DWORD *)&a2[v33];
        unsigned int v54 = v53 - 5;
        if (v53 < 5) {
          goto LABEL_83;
        }
        goto LABEL_70;
      }
      if (v52 > 0xFA)
      {
        unsigned int v53 = *(unsigned __int16 *)&a2[v33];
        unsigned int v54 = v53 - 5;
        if (v53 < 5)
        {
LABEL_83:
          switch(v53)
          {
            case 0u:
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t, uint64_t))(v134 + 16))(v35, a2, v137, v22);
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 16))((unint64_t)&v35[v133] & v131, (unint64_t)&a2[v133] & v131, v138);
              unsigned int v57 = (void *)((((unint64_t)&v35[v133] & v131) + v135 + v164) & v132);
              char v58 = (const void *)((((unint64_t)&a2[v133] & v131) + v135 + v164) & v132);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v145 + 48))(v58, 1, v146))
              {
                memcpy(v57, v58, __n);
                if (v33 > 3) {
                  goto LABEL_108;
                }
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v145 + 16))(v57, v58, v146);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v57, 0, 1, v146);
                if (v33 > 3) {
                  goto LABEL_108;
                }
              }
              unsigned int v79 = ((1 << v34) + 1) >> v34;
              if (v79 > 0xFFFA)
              {
                *(_DWORD *)&v35[v33] = 0;
                goto LABEL_141;
              }
              if (v79 > 0xFA)
              {
                *(_WORD *)&v35[v33] = 0;
                goto LABEL_141;
              }
LABEL_108:
              v35[v33] = 0;
LABEL_141:
              int v3 = v157;
              goto LABEL_142;
            case 1u:
              uint64_t v130 = v29;
              uint64_t v166 = v26;
              *(void *)uint64_t v35 = *(void *)a2;
              uint64_t v72 = (unint64_t)&v35[v22 + 8] & v41;
              uint64_t v73 = (unint64_t)&a2[v22 + 8] & v41;
              *(void *)uint64_t v72 = *(void *)v73;
              size_t v74 = (void *)((v150 + v72) & v147);
              size_t v75 = (const void *)((v150 + v73) & v147);
              v76 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v153 + 48);
              swift_retain();
              if (v76(v75, 1, AssociatedTypeWitness))
              {
                size_t v77 = v139;
                memcpy(v74, v75, v139);
                uint64_t v78 = v155;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v153 + 16))(v74, v75, AssociatedTypeWitness);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v153 + 56))(v74, 0, 1, AssociatedTypeWitness);
                uint64_t v78 = v155;
                size_t v77 = v139;
              }
              *((unsigned char *)v74 + v77) = *((unsigned char *)v75 + v77);
              size_t v85 = (void *)((v72 + v168 + v140) & v148);
              size_t v86 = (void *)((v73 + v168 + v140) & v148);
              *size_t v85 = *v86;
              unsigned int v87 = (void *)(((unint64_t)v85 + v152) & v149);
              uint64_t v88 = (const void *)(((unint64_t)v86 + v152) & v149);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v88, 1, v78))
              {
                size_t v89 = v141;
                memcpy(v87, v88, v141);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v154 + 16))(v87, v88, v78);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v87, 0, 1, v78);
                size_t v89 = v141;
              }
              *((unsigned char *)v87 + v89) = *((unsigned char *)v88 + v89);
              uint64_t v95 = (void *)(((unint64_t)v85 + v143 + v142) & v151);
              BOOL v96 = (void *)(((unint64_t)v86 + v143 + v142) & v151);
              *uint64_t v95 = *v96;
              v97 = (void *)(((unint64_t)v95 + v159) & v163);
              uint64_t v98 = (const void *)(((unint64_t)v96 + v159) & v163);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v166 + 48))(v98, 1, v161))
              {
                size_t v99 = v144;
                memcpy(v97, v98, v144);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v166 + 16))(v97, v98, v161);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v166 + 56))(v97, 0, 1, v161);
                size_t v99 = v144;
              }
              *((unsigned char *)v97 + v99) = *((unsigned char *)v98 + v99);
              *(void *)(((v72 | 7) + v130) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v73 | 7) + v130) & 0xFFFFFFFFFFFFFFF8);
              swift_retain();
              if (v33 > 3) {
                goto LABEL_130;
              }
              unsigned int v103 = ((1 << v34) + 1) >> v34;
              if (v103 > 0xFFFA)
              {
                *(_DWORD *)&a1[v33] = 1;
              }
              else if (v103 > 0xFA)
              {
                *(_WORD *)&a1[v33] = 1;
              }
              else
              {
LABEL_130:
                a1[v33] = 1;
              }
              goto LABEL_141;
            case 2u:
              uint64_t v129 = v29;
              uint64_t v165 = v26;
              *(void *)uint64_t v35 = *(void *)a2;
              uint64_t v59 = (unint64_t)&v35[v22 + 8] & v41;
              uint64_t v60 = (unint64_t)&a2[v22 + 8] & v41;
              *(void *)uint64_t v59 = *(void *)v60;
              unsigned int v61 = (void *)((v150 + v59) & v147);
              uint64_t v62 = (const void *)((v150 + v60) & v147);
              uint64_t v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v153 + 48);
              swift_retain();
              if (v63(v62, 1, AssociatedTypeWitness))
              {
                size_t v64 = v139;
                memcpy(v61, v62, v139);
                uint64_t v65 = v155;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v153 + 16))(v61, v62, AssociatedTypeWitness);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v153 + 56))(v61, 0, 1, AssociatedTypeWitness);
                uint64_t v65 = v155;
                size_t v64 = v139;
              }
              *((unsigned char *)v61 + v64) = *((unsigned char *)v62 + v64);
              size_t v80 = (void *)((v59 + v168 + v140) & v148);
              v81 = (void *)((v60 + v168 + v140) & v148);
              *size_t v80 = *v81;
              v82 = (void *)(((unint64_t)v80 + v152) & v149);
              v83 = (const void *)(((unint64_t)v81 + v152) & v149);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v83, 1, v65))
              {
                size_t v84 = v141;
                memcpy(v82, v83, v141);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v154 + 16))(v82, v83, v65);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v82, 0, 1, v65);
                size_t v84 = v141;
              }
              *((unsigned char *)v82 + v84) = *((unsigned char *)v83 + v84);
              size_t v90 = (void *)(((unint64_t)v80 + v143 + v142) & v151);
              v91 = (void *)(((unint64_t)v81 + v143 + v142) & v151);
              *size_t v90 = *v91;
              v92 = (void *)(((unint64_t)v90 + v159) & v163);
              unint64_t v93 = (const void *)(((unint64_t)v91 + v159) & v163);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v165 + 48))(v93, 1, v161))
              {
                size_t v94 = v144;
                memcpy(v92, v93, v144);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v165 + 16))(v92, v93, v161);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v165 + 56))(v92, 0, 1, v161);
                size_t v94 = v144;
              }
              *((unsigned char *)v92 + v94) = *((unsigned char *)v93 + v94);
              uint64_t v100 = (void *)(((v59 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v101 = (void *)(((v60 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
              *uint64_t v100 = *v101;
              *(void *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v101
                                                                                             + 15) & 0xFFFFFFFFFFFFFFF8);
              swift_retain();
              if (v33 > 3) {
                goto LABEL_125;
              }
              unsigned int v102 = ((1 << v34) + 1) >> v34;
              if (v102 > 0xFFFA)
              {
                *(_DWORD *)&a1[v33] = 2;
              }
              else if (v102 > 0xFA)
              {
                *(_WORD *)&a1[v33] = 2;
              }
              else
              {
LABEL_125:
                a1[v33] = 2;
              }
              goto LABEL_141;
            case 3u:
              *(void *)uint64_t v35 = *(void *)a2;
              swift_retain();
              if (v33 > 3) {
                goto LABEL_92;
              }
              unsigned int v66 = ((1 << v34) + 1) >> v34;
              if (v66 > 0xFFFA)
              {
                *(_DWORD *)&v35[v33] = 3;
              }
              else if (v66 > 0xFA)
              {
                *(_WORD *)&v35[v33] = 3;
              }
              else
              {
LABEL_92:
                v35[v33] = 3;
              }
              goto LABEL_141;
            case 4u:
              uint64_t v67 = *(void *)a2;
              id v68 = *(id *)a2;
              *(void *)uint64_t v35 = v67;
              if (v33 > 3) {
                goto LABEL_96;
              }
              unsigned int v69 = ((1 << v34) + 1) >> v34;
              if (v69 > 0xFFFA)
              {
                *(_DWORD *)&v35[v33] = 4;
              }
              else if (v69 > 0xFA)
              {
                *(_WORD *)&v35[v33] = 4;
              }
              else
              {
LABEL_96:
                v35[v33] = 4;
              }
              goto LABEL_141;
            default:
              if (v33 > 3) {
                goto LABEL_101;
              }
              unsigned int v70 = ((1 << v34) + 1) >> v34;
              uint64_t v71 = 2;
              if (v70 > 0xFFFA) {
                uint64_t v71 = 4;
              }
              if (v70 <= 0xFA) {
LABEL_101:
              }
                uint64_t v71 = 1;
              memcpy(v35, a2, v71 + v33);
              goto LABEL_141;
          }
        }
LABEL_70:
        if (v33 <= 3) {
          uint64_t v55 = v33;
        }
        else {
          uint64_t v55 = 4;
        }
        switch(v55)
        {
          case 1:
            int v56 = *a2;
            if (v33 < 4) {
              goto LABEL_81;
            }
            goto LABEL_82;
          case 2:
            int v56 = *(unsigned __int16 *)a2;
            if (v33 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 3:
            int v56 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v33 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 4:
            int v56 = *(_DWORD *)a2;
            if (v33 < 4) {
LABEL_81:
            }
              v56 |= v54 << v34;
LABEL_82:
            unsigned int v53 = v56 + 5;
            break;
          default:
            goto LABEL_83;
        }
        goto LABEL_83;
      }
    }
LABEL_65:
    unsigned int v53 = a2[v33];
    unsigned int v54 = v53 - 5;
    if (v53 < 5) {
      goto LABEL_83;
    }
    goto LABEL_70;
  }
LABEL_142:
  uint64_t v104 = *(void *)(v3[4] - 8);
  uint64_t v105 = *(void *)(v104 + 64);
  if (!*(_DWORD *)(v104 + 84)) {
    ++v105;
  }
  unint64_t v169 = v105
       + ((((*(void *)(*(void *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80))
         + *(void *)(*(void *)(v3[3] - 8) + 64)
         + *(unsigned __int8 *)(v104 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
  uint64_t v106 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v107 = *(unsigned __int8 *)(v106 + 80);
  uint64_t v108 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v109 = *(unsigned __int8 *)(v108 + 80);
  uint64_t v110 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v111 = v110;
  uint64_t v112 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v113 = v112 | 7;
  uint64_t v114 = ((v107 + 8) & ~v107) + (v109 | 7) + *(void *)(v106 + 64);
  if (!*(_DWORD *)(v106 + 84)) {
    ++v114;
  }
  uint64_t v115 = (v114 + 1) & ~(v109 | 7);
  uint64_t v116 = ((v109 + 8) & ~v109) + v113 + *(void *)(v108 + 64);
  if (!*(_DWORD *)(v108 + 84)) {
    ++v116;
  }
  uint64_t v117 = (v116 + v115 + 1) & ~v113;
  unint64_t v118 = ((v112 + 8) & ~v112)
       + *(void *)(v110 + 64)
       + (((v109 | v107 | v112) & 0xF8 ^ 0x1F8) & ((v109 | v107 | v112) + 8));
  if (!*(_DWORD *)(v111 + 84)) {
    ++v118;
  }
  unint64_t v119 = (v118 + v117 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v120 = v119 + 8;
  if (v119 + 8 <= v169) {
    unint64_t v120 = v169;
  }
  unint64_t v121 = ((v119 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v121 <= v120) {
    unint64_t v121 = v120;
  }
  if (v121 <= 8) {
    unint64_t v121 = 8;
  }
  if (v121 > 3) {
    goto LABEL_160;
  }
  unsigned int v122 = ((1 << (8 * v121)) + 1) >> (8 * v121);
  uint64_t v123 = 2;
  if (v122 > 0xFFFA) {
    uint64_t v123 = 4;
  }
  if (v122 <= 0xFA) {
LABEL_160:
  }
    uint64_t v123 = 1;
  uint64_t result = a1;
  *(void *)((unint64_t)&a1[v123 + 7 + v121] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v123 + 7 + v121] & 0xFFFFFFFFFFFFFFF8);
  return result;
}

void *sub_1A554CF0C(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v101 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v92 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v95 = v5 + v92;
  size_t v8 = *(void *)(v7 - 8);
  uint64_t v104 = *(void *)(v107 + 64);
  uint64_t v98 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v104 + v98 + ((v5 + v92) & ~v92)) & ~v98;
  size_t v116 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v128 = v10 + v9;
  uint64_t v110 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v126 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v126 + 80);
  uint64_t v113 = v6;
  uint64_t v122 = swift_getAssociatedTypeWitness();
  uint64_t v123 = *(void *)(v122 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v123 + 80);
  uint64_t v119 = v7;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v126;
  uint64_t v15 = v12 | 7;
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v17 | 7;
  uint64_t v19 = v12 | v11 | v17;
  uint64_t v20 = v11;
  uint64_t v21 = v19 | 7;
  uint64_t v22 = (v19 + 8) & ~(v19 | 7);
  uint64_t v23 = v11 + 8;
  uint64_t v24 = (v11 + 8) & ~v11;
  if (*(_DWORD *)(v126 + 84)) {
    size_t v25 = *(void *)(v126 + 64);
  }
  else {
    size_t v25 = *(void *)(v126 + 64) + 1;
  }
  uint64_t v26 = v24 + 1;
  uint64_t v27 = (v24 + 1 + (v12 | 7) + v25) & ~(v12 | 7);
  uint64_t v28 = v12 + 8;
  uint64_t v29 = (v12 + 8) & ~v12;
  uint64_t v127 = v123;
  unint64_t v30 = a2;
  if (*(_DWORD *)(v123 + 84)) {
    size_t v31 = *(void *)(v123 + 64);
  }
  else {
    size_t v31 = *(void *)(v123 + 64) + 1;
  }
  uint64_t v32 = (v29 + 1 + v18 + v31 + v27) & ~v18;
  uint64_t v33 = v17 + 8;
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v13 - 8) + 64) + 1;
  }
  uint64_t v35 = ((v17 + 8) & ~v17) + v34 + v32 + 1;
  unint64_t v36 = (v35 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = v36 + 8;
  if (v36 + 8 <= v128) {
    unint64_t v37 = v128;
  }
  unint64_t v38 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37) {
    unint64_t v38 = v37;
  }
  if (v38 <= 8) {
    uint64_t v39 = 8;
  }
  else {
    uint64_t v39 = v38;
  }
  if (v39 > 3) {
    goto LABEL_22;
  }
  unsigned int v40 = ((1 << (8 * v39)) + 1) >> (8 * v39);
  if (v40 > 0xFFFA)
  {
    unsigned int v41 = *(_DWORD *)&a2[v39];
  }
  else
  {
    if (v40 <= 0xFA)
    {
LABEL_22:
      unsigned int v41 = a2[v39];
      goto LABEL_25;
    }
    unsigned int v41 = *(unsigned __int16 *)&a2[v39];
  }
LABEL_25:
  unsigned int v42 = v41 - 5;
  unint64_t v43 = a1;
  if (v41 >= 5)
  {
    if (v39 <= 3) {
      uint64_t v44 = v39;
    }
    else {
      uint64_t v44 = 4;
    }
    switch(v44)
    {
      case 1:
        int v45 = *a2;
        if (v39 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v45 = *(unsigned __int16 *)a2;
        if (v39 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v45 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v39 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v45 = *(_DWORD *)a2;
        if (v39 < 4) {
LABEL_37:
        }
          v45 |= v42 << (8 * v39);
LABEL_38:
        unsigned int v41 = v45 + 5;
        break;
      default:
        break;
    }
  }
  uint64_t v46 = ~v21;
  uint64_t v47 = ~v20;
  uint64_t v48 = ~v15;
  uint64_t v49 = ~v12;
  uint64_t v50 = ~v17;
  switch(v41)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v101 + 32))(a1, a2, v110);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v107 + 32))(((unint64_t)a1 + v95) & ~v92, (unint64_t)&a2[v95] & ~v92, v113);
      uint64_t v51 = (void *)(((((unint64_t)a1 + v95) & ~v92) + v104 + v98) & ~v98);
      unsigned int v52 = (const void *)((((unint64_t)&a2[v95] & ~v92) + v104 + v98) & ~v98);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v116 + 48))(v52, 1, v119))
      {
        memcpy(v51, v52, __n);
        if (v39 > 3)
        {
LABEL_76:
          *((unsigned char *)a1 + v39) = 0;
          if (v39 <= 3) {
            goto LABEL_88;
          }
          goto LABEL_91;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v116 + 32))(v51, v52, v119);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v116 + 56))(v51, 0, 1, v119);
        if (v39 > 3) {
          goto LABEL_76;
        }
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 0;
        goto LABEL_104;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 0;
        goto LABEL_104;
      }
      goto LABEL_76;
    case 1u:
      uint64_t v100 = ~v18;
      uint64_t v103 = v50;
      uint64_t v106 = v26;
      uint64_t v109 = v15;
      uint64_t v112 = v29 + 1;
      uint64_t v115 = v33;
      size_t v118 = v34;
      uint64_t v121 = v35;
      uint64_t v125 = *(void *)(v13 - 8);
      uint64_t v130 = v13;
      *a1 = *(void *)a2;
      unsigned int v61 = (void *)(((unint64_t)a1 + v21 + 8) & v46);
      uint64_t v62 = (void *)((unint64_t)&a2[v21 + 8] & v46);
      *unsigned int v61 = *v62;
      unint64_t v94 = (unint64_t)v62;
      unint64_t v97 = (unint64_t)v61;
      size_t __nb = (void *)(((unint64_t)v61 + v23) & v47);
      uint64_t v63 = (const void *)(((unint64_t)v62 + v23) & v47);
      uint64_t v64 = v14;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v63, 1, AssociatedTypeWitness))
      {
        memcpy(__nb, v63, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(__nb, v63, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(__nb, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__nb + v25) = *((unsigned char *)v63 + v25);
      v76 = (void *)((v97 + v109 + v106 + v25) & v48);
      size_t v77 = (void *)((v94 + v109 + v106 + v25) & v48);
      void *v76 = *v77;
      uint64_t v78 = (void *)(((unint64_t)v76 + v28) & v49);
      unsigned int v79 = (const void *)(((unint64_t)v77 + v28) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48))(v79, 1, v122))
      {
        memcpy(v78, v79, v31);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v127 + 32))(v78, v79, v122);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v78, 0, 1, v122);
      }
      *((unsigned char *)v78 + v31) = *((unsigned char *)v79 + v31);
      size_t v80 = (void *)(((unint64_t)v76 + v18 + v112 + v31) & v100);
      v81 = (void *)(((unint64_t)v77 + v18 + v112 + v31) & v100);
      *size_t v80 = *v81;
      v82 = (void *)(((unint64_t)v80 + v115) & v103);
      v83 = (const void *)(((unint64_t)v81 + v115) & v103);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v125 + 48))(v83, 1, v130))
      {
        size_t v84 = v118;
        memcpy(v82, v83, v118);
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v125 + 32))(v82, v83, v130);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v82, 0, 1, v130);
        unint64_t v30 = a2;
        size_t v84 = v118;
      }
      unint64_t v43 = a1;
      *((unsigned char *)v82 + v84) = *((unsigned char *)v83 + v84);
      *(void *)(((v97 | 7) + v121) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v94 | 7) + v121) & 0xFFFFFFFFFFFFFFF8);
      if (v39 > 3) {
        goto LABEL_86;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 1;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_86:
          char v58 = 1;
          goto LABEL_87;
        }
        *(_WORD *)((char *)a1 + v39) = 1;
      }
      goto LABEL_104;
    case 2u:
      uint64_t v99 = ~v18;
      uint64_t v102 = v50;
      uint64_t v105 = v26;
      uint64_t v108 = v15;
      uint64_t v111 = v29 + 1;
      uint64_t v114 = v33;
      size_t v117 = v34;
      uint64_t v120 = v35;
      uint64_t v124 = *(void *)(v13 - 8);
      uint64_t v129 = v13;
      *a1 = *(void *)a2;
      unsigned int v53 = (void *)(((unint64_t)a1 + v21 + 8) & v46);
      unsigned int v54 = (void *)((unint64_t)&a2[v21 + 8] & v46);
      *unsigned int v53 = *v54;
      unint64_t v93 = (unint64_t)v54;
      unint64_t v96 = (unint64_t)v53;
      size_t __na = (void *)(((unint64_t)v53 + v23) & v47);
      uint64_t v55 = (const void *)(((unint64_t)v54 + v23) & v47);
      uint64_t v56 = v14;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v55, 1, AssociatedTypeWitness))
      {
        memcpy(__na, v55, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v56 + 32))(__na, v55, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__na, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__na + v25) = *((unsigned char *)v55 + v25);
      uint64_t v65 = (void *)((v96 + v108 + v105 + v25) & v48);
      unsigned int v66 = (void *)((v93 + v108 + v105 + v25) & v48);
      void *v65 = *v66;
      uint64_t v67 = (void *)(((unint64_t)v65 + v28) & v49);
      id v68 = (const void *)(((unint64_t)v66 + v28) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48))(v68, 1, v122))
      {
        memcpy(v67, v68, v31);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v127 + 32))(v67, v68, v122);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v127 + 56))(v67, 0, 1, v122);
      }
      *((unsigned char *)v67 + v31) = *((unsigned char *)v68 + v31);
      unsigned int v69 = (void *)(((unint64_t)v65 + v18 + v111 + v31) & v99);
      unsigned int v70 = (void *)(((unint64_t)v66 + v18 + v111 + v31) & v99);
      *unsigned int v69 = *v70;
      uint64_t v71 = (void *)(((unint64_t)v69 + v114) & v102);
      uint64_t v72 = (const void *)(((unint64_t)v70 + v114) & v102);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v124 + 48))(v72, 1, v129))
      {
        size_t v73 = v117;
        memcpy(v71, v72, v117);
        unint64_t v30 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v124 + 32))(v71, v72, v129);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v71, 0, 1, v129);
        unint64_t v30 = a2;
        size_t v73 = v117;
      }
      unint64_t v43 = a1;
      *((unsigned char *)v71 + v73) = *((unsigned char *)v72 + v73);
      size_t v74 = (void *)(((v96 | 7) + v120) & 0xFFFFFFFFFFFFFFF8);
      size_t v75 = (void *)(((v93 | 7) + v120) & 0xFFFFFFFFFFFFFFF8);
      *size_t v74 = *v75;
      *(void *)(((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v39 > 3) {
        goto LABEL_72;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 2;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_72:
          char v58 = 2;
          goto LABEL_87;
        }
        *(_WORD *)((char *)a1 + v39) = 2;
      }
      goto LABEL_104;
    case 3u:
      *a1 = *(void *)a2;
      if (v39 > 3) {
        goto LABEL_48;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 3;
      }
      else
      {
        if (v57 <= 0xFA)
        {
LABEL_48:
          char v58 = 3;
          goto LABEL_87;
        }
        *(_WORD *)((char *)a1 + v39) = 3;
      }
      goto LABEL_104;
    case 4u:
      *a1 = *(void *)a2;
      if (v39 > 3) {
        goto LABEL_52;
      }
      unsigned int v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v57 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 4;
        goto LABEL_104;
      }
      if (v57 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 4;
LABEL_104:
        BOOL v87 = v57 > 0xFFFA;
        uint64_t v86 = 2;
        if (v87) {
          uint64_t v86 = 4;
        }
        goto LABEL_106;
      }
LABEL_52:
      char v58 = 4;
LABEL_87:
      *((unsigned char *)v43 + v39) = v58;
      if (v39 > 3) {
        goto LABEL_91;
      }
LABEL_88:
      unsigned int v85 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v86 = 2;
      if (v85 > 0xFFFA) {
        uint64_t v86 = 4;
      }
      if (v85 <= 0xFA) {
LABEL_91:
      }
        uint64_t v86 = 1;
LABEL_106:
      *(void *)(((unint64_t)v43 + v86 + v39 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v30[v86 + 7 + v39] & 0xFFFFFFFFFFFFFFF8);
      return v43;
    default:
      if (v39 > 3) {
        goto LABEL_57;
      }
      unsigned int v59 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      uint64_t v60 = 2;
      if (v59 > 0xFFFA) {
        uint64_t v60 = 4;
      }
      if (v59 <= 0xFA) {
LABEL_57:
      }
        uint64_t v60 = 1;
      memcpy(a1, a2, v60 + v39);
      if (v39 > 3) {
        goto LABEL_91;
      }
      goto LABEL_88;
  }
}

unsigned __int8 *sub_1A554DC90(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  int v3 = a3;
  if (a1 != a2)
  {
    uint64_t v4 = a3[2];
    uint64_t v5 = v3[3];
    uint64_t v132 = *(void *)(v3[2] - 8);
    uint64_t v6 = *(void *)(v132 + 64);
    uint64_t v134 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v131 = v6 + v7;
    uint64_t v158 = v7;
    uint64_t v8 = v3[4];
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v133 = *(void *)(v134 + 64);
    uint64_t v160 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v10 = (v133 + v160 + ((v6 + v7) & ~v7)) & ~v160;
    uint64_t v142 = v9;
    size_t v11 = *(void *)(v9 + 64);
    if (!*(_DWORD *)(v9 + 84)) {
      ++v11;
    }
    size_t __n = v11;
    unint64_t v161 = v11 + v10;
    uint64_t v135 = v4;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v163 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v12 = *(unsigned __int8 *)(v163 + 80);
    uint64_t v136 = v5;
    uint64_t v152 = swift_getAssociatedTypeWitness();
    uint64_t v155 = v3;
    uint64_t v156 = *(void *)(v152 - 8);
    uint64_t v13 = *(unsigned __int8 *)(v156 + 80);
    uint64_t v14 = v13 | 7;
    uint64_t v143 = v8;
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t v16 = v13;
    uint64_t v17 = v12;
    uint64_t v18 = *(void *)(v15 - 8);
    uint64_t v19 = v18;
    uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v21 = v20 | 7;
    uint64_t v22 = v13 | v12 | v20 | 7;
    uint64_t v23 = ((v13 | v12 | v20) + 8) & ~v22;
    uint64_t v147 = v12 + 8;
    uint64_t v150 = v163;
    if (*(_DWORD *)(v163 + 84)) {
      uint64_t v24 = *(void *)(v163 + 64);
    }
    else {
      uint64_t v24 = *(void *)(v163 + 64) + 1;
    }
    size_t v137 = v24;
    uint64_t v138 = ((v12 + 8) & ~v12) + v24 + 1;
    uint64_t v25 = v138 + v14;
    uint64_t v164 = v13 | 7;
    uint64_t v149 = v13 + 8;
    uint64_t v26 = v156;
    if (*(_DWORD *)(v156 + 84)) {
      uint64_t v27 = *(void *)(v156 + 64);
    }
    else {
      uint64_t v27 = *(void *)(v156 + 64) + 1;
    }
    size_t v139 = v27;
    uint64_t v140 = ((v13 + 8) & ~v13) + v27 + 1;
    uint64_t v28 = v140 + v21;
    uint64_t v151 = v20 + 8;
    if (*(_DWORD *)(v18 + 84)) {
      uint64_t v29 = *(void *)(*(void *)(v15 - 8) + 64);
    }
    else {
      uint64_t v29 = *(void *)(*(void *)(v15 - 8) + 64) + 1;
    }
    uint64_t v30 = ((v20 + 8) & ~v20) + v29 + ((v140 + v21 + (v25 & ~v14)) & ~v21) + 1;
    unint64_t v31 = (v30 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = v31 + 8;
    if (v31 + 8 <= v161) {
      unint64_t v32 = v161;
    }
    unint64_t v33 = ((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v33 <= v32) {
      unint64_t v33 = v32;
    }
    if (v33 <= 8) {
      uint64_t v34 = 8;
    }
    else {
      uint64_t v34 = v33;
    }
    char v35 = 8 * v34;
    if (v34 > 3) {
      goto LABEL_23;
    }
    unsigned int v36 = ((1 << v35) + 1) >> v35;
    if (v36 > 0xFFFA)
    {
      unsigned int v37 = *(_DWORD *)&a1[v34];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_41;
      }
      goto LABEL_28;
    }
    if (v36 > 0xFA)
    {
      unsigned int v37 = *(unsigned __int16 *)&a1[v34];
      unsigned int v38 = v37 - 5;
      if (v37 < 5)
      {
LABEL_41:
        char v162 = 8 * v34;
        uint64_t v154 = v19;
        uint64_t v157 = v15;
        uint64_t v129 = ~v158;
        uint64_t v130 = ~v160;
        uint64_t v41 = ~v22;
        uint64_t v144 = ~v17;
        uint64_t v145 = ~v164;
        uint64_t v146 = ~v16;
        uint64_t v141 = v20 | 7;
        uint64_t v148 = ~v21;
        uint64_t v159 = ~v20;
        switch(v37)
        {
          case 0u:
            uint64_t v42 = v22;
            (*(void (**)(unsigned __int8 *, uint64_t))(v132 + 8))(a1, v135);
            (*(void (**)(unint64_t, uint64_t))(v134 + 8))((unint64_t)&a1[v131] & v129, v136);
            unint64_t v43 = (((unint64_t)&a1[v131] & v129) + v133 + v160) & v130;
            int v44 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v142 + 48))(v43, 1, v143);
            uint64_t v22 = v42;
            if (!v44)
            {
              (*(void (**)(unint64_t, uint64_t))(v142 + 8))(v43, v143);
              uint64_t v22 = v42;
            }
            goto LABEL_62;
          case 1u:
            uint64_t v123 = v29;
            uint64_t v126 = ((v20 + 8) & ~v20) + v29 + ((v140 + v21 + (v25 & ~v14)) & ~v21) + 1;
            uint64_t v49 = v22;
            swift_release();
            uint64_t v122 = v49;
            uint64_t v50 = (unint64_t)&a1[v49 + 8] & v41;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))((v147 + v50) & v144, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v150 + 8))((v147 + v50) & v144, AssociatedTypeWitness); {
            uint64_t v51 = (v25 + v50) & v145;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v149 + v51) & v146, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(v26 + 8))((v149 + v51) & v146, v152);
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v151 + ((v28 + v51) & v148)) & v159, 1, v157))(*(void (**)(uint64_t, uint64_t))(v154 + 8))((v151 + ((v28 + v51) & v148)) & v159, v157); {
            uint64_t v30 = v126;
            }
            goto LABEL_61;
          case 2u:
            uint64_t v123 = v29;
            uint64_t v125 = ((v20 + 8) & ~v20) + v29 + ((v140 + v21 + (v25 & ~v14)) & ~v21) + 1;
            uint64_t v45 = v22;
            swift_release();
            uint64_t v122 = v45;
            uint64_t v46 = (unint64_t)&a1[v45 + 8] & v41;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))((v147 + v46) & v144, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v150 + 8))((v147 + v46) & v144, AssociatedTypeWitness); {
            uint64_t v47 = (v25 + v46) & v145;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))((v149 + v47) & v146, 1, v152)) {
              (*(void (**)(uint64_t, uint64_t))(v26 + 8))((v149 + v47) & v146, v152);
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))((v151 + ((v28 + v47) & v148)) & v159, 1, v157))(*(void (**)(uint64_t, uint64_t))(v154 + 8))((v151 + ((v28 + v47) & v148)) & v159, v157); {
            uint64_t v30 = v125;
            }
LABEL_61:
            swift_release();
            uint64_t v22 = v122;
            uint64_t v29 = v123;
            goto LABEL_62;
          case 3u:
            uint64_t v48 = v22;
            swift_release();
            goto LABEL_53;
          case 4u:
            uint64_t v48 = v22;

LABEL_53:
            uint64_t v22 = v48;
            break;
          default:
            goto LABEL_62;
        }
        if (v34 > 3) {
          goto LABEL_65;
        }
LABEL_62:
        unsigned int v52 = ((1 << v162) + 1) >> v162;
        if (v52 > 0xFFFA)
        {
          unsigned int v53 = *(_DWORD *)&a2[v34];
          unsigned int v54 = v53 - 5;
          if (v53 < 5) {
            goto LABEL_83;
          }
          goto LABEL_70;
        }
        if (v52 > 0xFA)
        {
          unsigned int v53 = *(unsigned __int16 *)&a2[v34];
          unsigned int v54 = v53 - 5;
          if (v53 < 5) {
            goto LABEL_83;
          }
        }
        else
        {
LABEL_65:
          unsigned int v53 = a2[v34];
          unsigned int v54 = v53 - 5;
          if (v53 < 5) {
            goto LABEL_83;
          }
        }
LABEL_70:
        if (v34 <= 3) {
          uint64_t v55 = v34;
        }
        else {
          uint64_t v55 = 4;
        }
        switch(v55)
        {
          case 1:
            int v56 = *a2;
            if (v34 < 4) {
              goto LABEL_81;
            }
            goto LABEL_82;
          case 2:
            int v56 = *(unsigned __int16 *)a2;
            if (v34 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 3:
            int v56 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v34 >= 4) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 4:
            int v56 = *(_DWORD *)a2;
            if (v34 < 4) {
LABEL_81:
            }
              v56 |= v54 << v162;
LABEL_82:
            unsigned int v53 = v56 + 5;
            break;
          default:
            break;
        }
LABEL_83:
        switch(v53)
        {
          case 0u:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t, uint64_t))(v132 + 32))(a1, a2, v135, v22);
            unint64_t v57 = (unint64_t)&a1[v131] & v129;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v134 + 32))(v57, (unint64_t)&a2[v131] & v129, v136);
            char v58 = (void *)((v57 + v133 + v160) & v130);
            unsigned int v59 = (const void *)((((unint64_t)&a2[v131] & v129) + v133 + v160) & v130);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v142 + 48))(v59, 1, v143))
            {
              memcpy(v58, v59, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v142 + 32))(v58, v59, v143);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v58, 0, 1, v143);
            }
            if (v34 > 3) {
              goto LABEL_108;
            }
            unsigned int v76 = ((1 << v162) + 1) >> v162;
            if (v76 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 0;
            }
            else if (v76 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 0;
            }
            else
            {
LABEL_108:
              a1[v34] = 0;
            }
            break;
          case 1u:
            uint64_t v128 = v30;
            *(void *)a1 = *(void *)a2;
            uint64_t v70 = (unint64_t)&a1[v22 + 8] & v41;
            uint64_t v71 = (unint64_t)&a2[v22 + 8] & v41;
            *(void *)uint64_t v70 = *(void *)v71;
            uint64_t v72 = (void *)((v147 + v70) & v144);
            size_t v73 = (const void *)((v147 + v71) & v144);
            size_t v74 = v29;
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v150 + 48))(v73, 1, AssociatedTypeWitness))
            {
              size_t v75 = v137;
              memcpy(v72, v73, v137);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v150 + 32))(v72, v73, AssociatedTypeWitness);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v72, 0, 1, AssociatedTypeWitness);
              size_t v75 = v137;
            }
            *((unsigned char *)v72 + v75) = *((unsigned char *)v73 + v75);
            v82 = (void *)((v70 + v164 + v138) & v145);
            v83 = (void *)((v71 + v164 + v138) & v145);
            void *v82 = *v83;
            size_t v84 = (void *)(((unint64_t)v82 + v149) & v146);
            unsigned int v85 = (const void *)(((unint64_t)v83 + v149) & v146);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v85, 1, v152))
            {
              size_t v86 = v139;
              memcpy(v84, v85, v139);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v84, v85, v152);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v84, 0, 1, v152);
              size_t v86 = v139;
            }
            *((unsigned char *)v84 + v86) = *((unsigned char *)v85 + v86);
            uint64_t v92 = (void *)(((unint64_t)v82 + v141 + v140) & v148);
            unint64_t v93 = (void *)(((unint64_t)v83 + v141 + v140) & v148);
            void *v92 = *v93;
            unint64_t v94 = (void *)(((unint64_t)v92 + v151) & v159);
            uint64_t v95 = (const void *)(((unint64_t)v93 + v151) & v159);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v95, 1, v157))
            {
              size_t v96 = v74;
              memcpy(v94, v95, v74);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v154 + 32))(v94, v95, v157);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v94, 0, 1, v157);
              size_t v96 = v74;
            }
            *((unsigned char *)v94 + v96) = *((unsigned char *)v95 + v96);
            *(void *)(((v70 | 7) + v128) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v71 | 7) + v128) & 0xFFFFFFFFFFFFFFF8);
            if (v34 > 3) {
              goto LABEL_130;
            }
            unsigned int v100 = ((1 << v162) + 1) >> v162;
            if (v100 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 1;
            }
            else if (v100 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 1;
            }
            else
            {
LABEL_130:
              a1[v34] = 1;
            }
            break;
          case 2u:
            uint64_t v127 = v30;
            *(void *)a1 = *(void *)a2;
            uint64_t v60 = (unint64_t)&a1[v22 + 8] & v41;
            uint64_t v61 = (unint64_t)&a2[v22 + 8] & v41;
            *(void *)uint64_t v60 = *(void *)v61;
            uint64_t v62 = (void *)((v147 + v60) & v144);
            uint64_t v63 = (const void *)((v147 + v61) & v144);
            size_t v64 = v29;
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v150 + 48))(v63, 1, AssociatedTypeWitness))
            {
              size_t v65 = v137;
              memcpy(v62, v63, v137);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v150 + 32))(v62, v63, AssociatedTypeWitness);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v62, 0, 1, AssociatedTypeWitness);
              size_t v65 = v137;
            }
            *((unsigned char *)v62 + v65) = *((unsigned char *)v63 + v65);
            size_t v77 = (void *)((v60 + v164 + v138) & v145);
            uint64_t v78 = (void *)((v61 + v164 + v138) & v145);
            void *v77 = *v78;
            unsigned int v79 = (void *)(((unint64_t)v77 + v149) & v146);
            size_t v80 = (const void *)(((unint64_t)v78 + v149) & v146);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v80, 1, v152))
            {
              size_t v81 = v139;
              memcpy(v79, v80, v139);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v79, v80, v152);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v79, 0, 1, v152);
              size_t v81 = v139;
            }
            *((unsigned char *)v79 + v81) = *((unsigned char *)v80 + v81);
            BOOL v87 = (void *)(((unint64_t)v77 + v141 + v140) & v148);
            uint64_t v88 = (void *)(((unint64_t)v78 + v141 + v140) & v148);
            void *v87 = *v88;
            size_t v89 = (void *)(((unint64_t)v87 + v151) & v159);
            size_t v90 = (const void *)(((unint64_t)v88 + v151) & v159);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v154 + 48))(v90, 1, v157))
            {
              size_t v91 = v64;
              memcpy(v89, v90, v64);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v154 + 32))(v89, v90, v157);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v89, 0, 1, v157);
              size_t v91 = v64;
            }
            *((unsigned char *)v89 + v91) = *((unsigned char *)v90 + v91);
            unint64_t v97 = (void *)(((v60 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v98 = (void *)(((v61 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
            void *v97 = *v98;
            *(void *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
            if (v34 > 3) {
              goto LABEL_125;
            }
            unsigned int v99 = ((1 << v162) + 1) >> v162;
            if (v99 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 2;
            }
            else if (v99 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 2;
            }
            else
            {
LABEL_125:
              a1[v34] = 2;
            }
            break;
          case 3u:
            *(void *)a1 = *(void *)a2;
            if (v34 > 3) {
              goto LABEL_91;
            }
            unsigned int v66 = ((1 << v162) + 1) >> v162;
            if (v66 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 3;
            }
            else if (v66 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 3;
            }
            else
            {
LABEL_91:
              a1[v34] = 3;
            }
            break;
          case 4u:
            *(void *)a1 = *(void *)a2;
            if (v34 > 3) {
              goto LABEL_95;
            }
            unsigned int v67 = ((1 << v162) + 1) >> v162;
            if (v67 > 0xFFFA)
            {
              *(_DWORD *)&a1[v34] = 4;
            }
            else if (v67 > 0xFA)
            {
              *(_WORD *)&a1[v34] = 4;
            }
            else
            {
LABEL_95:
              a1[v34] = 4;
            }
            break;
          default:
            if (v34 > 3) {
              goto LABEL_100;
            }
            unsigned int v68 = ((1 << v162) + 1) >> v162;
            uint64_t v69 = 2;
            if (v68 > 0xFFFA) {
              uint64_t v69 = 4;
            }
            if (v68 <= 0xFA) {
LABEL_100:
            }
              uint64_t v69 = 1;
            memcpy(a1, a2, v69 + v34);
            break;
        }
        int v3 = v155;
        goto LABEL_142;
      }
    }
    else
    {
LABEL_23:
      unsigned int v37 = a1[v34];
      unsigned int v38 = v37 - 5;
      if (v37 < 5) {
        goto LABEL_41;
      }
    }
LABEL_28:
    if (v34 <= 3) {
      uint64_t v39 = v34;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a1;
        if (v34 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v40 = *(unsigned __int16 *)a1;
        if (v34 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v40 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v34 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v40 = *(_DWORD *)a1;
        if (v34 < 4) {
LABEL_39:
        }
          v40 |= v38 << v35;
LABEL_40:
        unsigned int v37 = v40 + 5;
        break;
      default:
        goto LABEL_41;
    }
    goto LABEL_41;
  }
LABEL_142:
  uint64_t v101 = *(void *)(v3[4] - 8);
  uint64_t v102 = *(void *)(v101 + 64);
  if (!*(_DWORD *)(v101 + 84)) {
    ++v102;
  }
  unint64_t v165 = v102
       + ((((*(void *)(*(void *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3[3] - 8) + 80))
         + *(void *)(*(void *)(v3[3] - 8) + 64)
         + *(unsigned __int8 *)(v101 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
  uint64_t v103 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v104 = *(unsigned __int8 *)(v103 + 80);
  uint64_t v105 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v106 = *(unsigned __int8 *)(v105 + 80);
  uint64_t v107 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v108 = v107;
  uint64_t v109 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v110 = v109 | 7;
  uint64_t v111 = ((v104 + 8) & ~v104) + (v106 | 7) + *(void *)(v103 + 64);
  if (!*(_DWORD *)(v103 + 84)) {
    ++v111;
  }
  uint64_t v112 = (v111 + 1) & ~(v106 | 7);
  uint64_t v113 = ((v106 + 8) & ~v106) + v110 + *(void *)(v105 + 64);
  if (!*(_DWORD *)(v105 + 84)) {
    ++v113;
  }
  uint64_t v114 = (v113 + v112 + 1) & ~v110;
  unint64_t v115 = ((v109 + 8) & ~v109)
       + *(void *)(v107 + 64)
       + (((v106 | v104 | v109) & 0xF8 ^ 0x1F8) & ((v106 | v104 | v109) + 8));
  if (!*(_DWORD *)(v108 + 84)) {
    ++v115;
  }
  unint64_t v116 = (v115 + v114 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v117 = v116 + 8;
  if (v116 + 8 <= v165) {
    unint64_t v117 = v165;
  }
  unint64_t v118 = ((v116 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v118 <= v117) {
    unint64_t v118 = v117;
  }
  if (v118 <= 8) {
    unint64_t v118 = 8;
  }
  if (v118 > 3) {
    goto LABEL_160;
  }
  unsigned int v119 = ((1 << (8 * v118)) + 1) >> (8 * v118);
  uint64_t v120 = 2;
  if (v119 > 0xFFFA) {
    uint64_t v120 = 4;
  }
  if (v119 <= 0xFA) {
LABEL_160:
  }
    uint64_t v120 = 1;
  uint64_t result = a1;
  *(void *)((unint64_t)&a1[v120 + 7 + v118] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v120 + 7 + v118] & 0xFFFFFFFFFFFFFFF8);
  return result;
}

uint64_t sub_1A554F18C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v71 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = ((v6 + 8) & ~v6) + (v8 | 7) + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  uint64_t v14 = (v13 + 1) & ~(v8 | 7);
  uint64_t v15 = ((v8 + 8) & ~v8) + v12 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v15;
  }
  uint64_t v16 = (v15 + v14 + 1) & ~v12;
  unint64_t v17 = ((v11 + 8) & ~v11)
      + *(void *)(v9 + 64)
      + (((v8 | v6 | v11) & 0xF8 ^ 0x1F8) & ((v8 | v6 | v11) + 8));
  if (!*(_DWORD *)(v10 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  if (v18 + 8 <= v71) {
    unint64_t v19 = v71;
  }
  unint64_t v20 = ((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= v19) {
    unint64_t v20 = v19;
  }
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  char v21 = 8 * v20;
  if (v20 > 3)
  {
    int v22 = 6;
LABEL_17:
    unsigned int v23 = a2;
    char v24 = 8;
    goto LABEL_18;
  }
  unsigned int v26 = ((1 << v21) + 1) >> v21;
  if (v26 > 0xFFFA)
  {
    unsigned int v25 = 0x7FFFFFFF;
    unsigned int v23 = a2;
    if (v20 > 3) {
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  int v22 = v26 + 5;
  if (v26 <= 0xFA) {
    goto LABEL_17;
  }
  char v24 = 16;
  unsigned int v23 = a2;
LABEL_18:
  unsigned int v25 = (1 << v24) - v22;
  if ((v25 & 0x80000000) != 0)
  {
    unsigned int v25 = 0x7FFFFFFF;
    if (v20 > 3) {
      goto LABEL_32;
    }
  }
  else if (v20 > 3)
  {
    goto LABEL_32;
  }
LABEL_27:
  unsigned int v27 = ((1 << v21) + 1) >> v21;
  uint64_t v28 = 2;
  if (v27 > 0xFFFA) {
    uint64_t v28 = 4;
  }
  if (v27 > 0xFA)
  {
    if (!v23) {
      return 0;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v28 = 1;
  if (!v23) {
    return 0;
  }
LABEL_33:
  if (v25 < v23)
  {
    unint64_t v29 = ((v20 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v30 = v29 & 0xFFFFFFF8;
    if ((v29 & 0xFFFFFFF8) != 0) {
      unsigned int v31 = 2;
    }
    else {
      unsigned int v31 = v23 - v25 + 1;
    }
    if (v31 >= 0x10000) {
      unsigned int v32 = 4;
    }
    else {
      unsigned int v32 = 2;
    }
    if (v31 < 0x100) {
      unsigned int v32 = 1;
    }
    if (v31 >= 2) {
      uint64_t v33 = v32;
    }
    else {
      uint64_t v33 = 0;
    }
    switch(v33)
    {
      case 1:
        int v34 = *((unsigned __int8 *)a1 + v29);
        if (!v34) {
          break;
        }
        goto LABEL_49;
      case 2:
        int v34 = *(unsigned __int16 *)((char *)a1 + v29);
        if (v34) {
          goto LABEL_49;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A554F938);
      case 4:
        int v34 = *(_DWORD *)((char *)a1 + v29);
        if (!v34) {
          break;
        }
LABEL_49:
        int v35 = v34 - 1;
        if (v30)
        {
          int v35 = 0;
          int v36 = *(_DWORD *)a1;
        }
        else
        {
          int v36 = 0;
        }
        unsigned int v55 = v25 + (v36 | v35);
        return v55 + 1;
      default:
        break;
    }
  }
  if (!v25) {
    return 0;
  }
  if (v20 > 3)
  {
    int v37 = 6;
LABEL_55:
    char v38 = 8;
    goto LABEL_56;
  }
  unsigned int v43 = ((1 << v21) + 1) >> v21;
  if (v43 > 0xFFFA)
  {
LABEL_66:
    unsigned int v39 = 0x7FFFFFFF;
    if (v20 > 3) {
      goto LABEL_58;
    }
    goto LABEL_67;
  }
  int v37 = v43 + 5;
  if (v43 <= 0xFA) {
    goto LABEL_55;
  }
  char v38 = 16;
LABEL_56:
  unsigned int v39 = (1 << v38) - v37;
  if ((v39 & 0x80000000) != 0) {
    goto LABEL_66;
  }
  if (v20 > 3)
  {
LABEL_58:
    int v40 = 6;
LABEL_59:
    char v41 = 8;
    goto LABEL_60;
  }
LABEL_67:
  unsigned int v44 = ((1 << v21) + 1) >> v21;
  if (v44 > 0xFFFA)
  {
LABEL_70:
    if (v39 != 0x7FFFFFFF) {
      return 0;
    }
    goto LABEL_71;
  }
  int v40 = v44 + 5;
  if (v44 <= 0xFA) {
    goto LABEL_59;
  }
  char v41 = 16;
LABEL_60:
  int v42 = (1 << v41) - v40;
  if (v42 < 0) {
    goto LABEL_70;
  }
  if (v42 != v39) {
    return 0;
  }
LABEL_71:
  if (v20 > 3)
  {
    int v45 = 6;
LABEL_73:
    char v46 = 8;
    goto LABEL_74;
  }
  unsigned int v48 = ((1 << v21) + 1) >> v21;
  if (v48 > 0xFFFA) {
    goto LABEL_80;
  }
  int v45 = v48 + 5;
  if (v48 <= 0xFA) {
    goto LABEL_73;
  }
  char v46 = 16;
LABEL_74:
  unsigned int v47 = (1 << v46) - v45;
  if ((v47 & 0x80000000) == 0)
  {
    if (v20 > 3) {
      goto LABEL_84;
    }
    goto LABEL_81;
  }
LABEL_80:
  unsigned int v47 = 0x7FFFFFFF;
  if (v20 > 3)
  {
LABEL_84:
    uint64_t v50 = 1;
    goto LABEL_85;
  }
LABEL_81:
  unsigned int v49 = ((1 << v21) + 1) >> v21;
  uint64_t v50 = 2;
  if (v49 > 0xFFFA) {
    uint64_t v50 = 4;
  }
  if (v49 <= 0xFA) {
    goto LABEL_84;
  }
LABEL_85:
  if (!v39) {
    return 0;
  }
  unsigned int v51 = v39 - v47;
  if (v39 <= v47) {
    goto LABEL_107;
  }
  unint64_t v52 = v50 + v20;
  char v53 = 8 * (v50 + v20);
  if (v52 > 3)
  {
LABEL_88:
    int v54 = *((unsigned __int8 *)a1 + v52);
    goto LABEL_98;
  }
  unsigned int v57 = ((v51 + ~(-1 << v53)) >> v53) + 1;
  if (HIWORD(v57))
  {
    int v54 = *(_DWORD *)((char *)a1 + v52);
  }
  else
  {
    if (v57 <= 0xFF)
    {
      if (v57 < 2)
      {
LABEL_107:
        if (v47)
        {
          if (v20 <= 3)
          {
            unsigned int v67 = ((1 << v21) + 1) >> v21;
            if (v67 > 0xFFFA)
            {
              unsigned int v62 = *(_DWORD *)((char *)a1 + v20);
              unsigned int v63 = ~v62;
LABEL_117:
              unsigned int v66 = 0x7FFFFFFF;
LABEL_118:
              if (v66 > v63) {
                return -v62;
              }
              else {
                return 0;
              }
            }
            int v65 = v67 + 5;
            if (v67 > 0xFA)
            {
              int v69 = *(unsigned __int16 *)((char *)a1 + v20);
              unsigned int v62 = v69 | 0xFFFF0000;
              unsigned int v63 = v69 ^ 0xFFFF;
              char v64 = 16;
            }
            else
            {
              int v68 = *((unsigned __int8 *)a1 + v20);
              unsigned int v62 = v68 | 0xFFFFFF00;
              unsigned int v63 = v68 ^ 0xFF;
              char v64 = 8;
            }
          }
          else
          {
            int v61 = *((unsigned __int8 *)a1 + v20);
            unsigned int v62 = v61 | 0xFFFFFF00;
            unsigned int v63 = v61 ^ 0xFF;
            char v64 = 8;
            int v65 = 6;
          }
          unsigned int v66 = (1 << v64) - v65;
          if ((v66 & 0x80000000) == 0) {
            goto LABEL_118;
          }
          goto LABEL_117;
        }
        return 0;
      }
      goto LABEL_88;
    }
    int v54 = *(unsigned __int16 *)((char *)a1 + v52);
  }
LABEL_98:
  if (!v54) {
    goto LABEL_107;
  }
  int v58 = (v54 - 1) << v53;
  if (v52 > 3) {
    int v58 = 0;
  }
  if (v52)
  {
    if (v52 <= 3) {
      int v59 = v52;
    }
    else {
      int v59 = 4;
    }
    switch(v59)
    {
      case 2:
        int v60 = *a1;
        break;
      case 3:
        int v60 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v60 = *(_DWORD *)a1;
        break;
      default:
        int v60 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v60 = 0;
  }
  unsigned int v55 = v47 + (v60 | v58);
  return v55 + 1;
}

void sub_1A554F95C(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v4 = *(void *)(a4[4] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  unint64_t v65 = v5
      + ((((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
        + *(void *)(*(void *)(a4[3] - 8) + 64)
        + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = ((v7 + 8) & ~v7) + (v9 | 7) + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  uint64_t v15 = (v14 + 1) & ~(v9 | 7);
  uint64_t v16 = ((v9 + 8) & ~v9) + v13 + *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v16;
  }
  uint64_t v17 = (v16 + v15 + 1) & ~v13;
  unint64_t v18 = ((v12 + 8) & ~v12)
      + *(void *)(v10 + 64)
      + (((v9 | v7 | v12) & 0xF8 ^ 0x1F8) & ((v9 | v7 | v12) + 8));
  if (!*(_DWORD *)(v11 + 84)) {
    ++v18;
  }
  unint64_t v19 = (v18 + v17 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 8;
  if (v19 + 8 <= v65) {
    unint64_t v20 = v65;
  }
  unint64_t v21 = ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 8) {
    unint64_t v21 = 8;
  }
  char v22 = 8 * v21;
  if (v21 > 3)
  {
    int v23 = 6;
    goto LABEL_17;
  }
  unsigned int v31 = ((1 << v22) + 1) >> v22;
  if (v31 <= 0xFFFA)
  {
    int v23 = v31 + 5;
    if (v31 > 0xFA)
    {
      char v27 = 16;
      char v24 = a1;
      unsigned int v25 = a3;
      unsigned int v26 = a2;
LABEL_18:
      unsigned int v28 = (1 << v27) - v23;
      if ((v28 & 0x80000000) != 0) {
        unsigned int v28 = 0x7FFFFFFF;
      }
      if (v21 > 3) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
LABEL_17:
    char v24 = a1;
    unsigned int v25 = a3;
    unsigned int v26 = a2;
    char v27 = 8;
    goto LABEL_18;
  }
  unsigned int v28 = 0x7FFFFFFF;
  char v24 = a1;
  unsigned int v25 = a3;
  unsigned int v26 = a2;
  if (v21 > 3)
  {
LABEL_29:
    uint64_t v30 = 1;
    goto LABEL_30;
  }
LABEL_21:
  unsigned int v29 = ((1 << v22) + 1) >> v22;
  uint64_t v30 = 2;
  if (v29 > 0xFFFA) {
    uint64_t v30 = 4;
  }
  if (v29 <= 0xFA) {
    goto LABEL_29;
  }
LABEL_30:
  size_t v32 = ((v21 + v30 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v28 < v25)
  {
    if (((v21 + v30 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v33 = v25 - v28 + 1;
    }
    else {
      unsigned int v33 = 2;
    }
    if (v33 >= 0x10000) {
      int v34 = 4;
    }
    else {
      int v34 = 2;
    }
    if (v33 < 0x100) {
      int v34 = 1;
    }
    if (v33 >= 2) {
      int v35 = v34;
    }
    else {
      int v35 = 0;
    }
    int v36 = v26 - v28;
    if (v26 <= v28) {
      goto LABEL_43;
    }
LABEL_47:
    if (v32) {
      int v37 = 1;
    }
    else {
      int v37 = v36;
    }
    if (v32)
    {
      int v38 = ~v28 + v26;
      bzero(v24, v32);
      *(_DWORD *)char v24 = v38;
    }
    switch(v35)
    {
      case 1:
        v24[v32] = v37;
        break;
      case 2:
        *(_WORD *)&v24[v32] = v37;
        break;
      case 3:
LABEL_130:
        __break(1u);
        JUMPOUT(0x1A5550174);
      case 4:
        *(_DWORD *)&v24[v32] = v37;
        break;
      default:
        return;
    }
    return;
  }
  int v35 = 0;
  int v36 = v26 - v28;
  if (v26 > v28) {
    goto LABEL_47;
  }
LABEL_43:
  switch(v35)
  {
    case 1:
      v24[v32] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_56;
    case 2:
      *(_WORD *)&v24[v32] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_56;
    case 3:
      goto LABEL_130;
    case 4:
      *(_DWORD *)&v24[v32] = 0;
      goto LABEL_55;
    default:
LABEL_55:
      if (!v26) {
        return;
      }
LABEL_56:
      if (v21 > 3)
      {
        int v39 = 6;
LABEL_58:
        char v40 = 8;
        goto LABEL_59;
      }
      unsigned int v48 = ((1 << v22) + 1) >> v22;
      if (v48 > 0xFFFA)
      {
LABEL_74:
        unsigned int v41 = 0x7FFFFFFF;
        if (v21 > 3) {
          goto LABEL_61;
        }
        goto LABEL_75;
      }
      int v39 = v48 + 5;
      if (v48 <= 0xFA) {
        goto LABEL_58;
      }
      char v40 = 16;
LABEL_59:
      unsigned int v41 = (1 << v40) - v39;
      if ((v41 & 0x80000000) != 0) {
        goto LABEL_74;
      }
      if (v21 > 3)
      {
LABEL_61:
        int v42 = 6;
LABEL_62:
        char v43 = 8;
        goto LABEL_63;
      }
LABEL_75:
      unsigned int v49 = ((1 << v22) + 1) >> v22;
      if (v49 > 0xFFFA) {
        goto LABEL_78;
      }
      int v42 = v49 + 5;
      if (v49 <= 0xFA) {
        goto LABEL_62;
      }
      char v43 = 16;
LABEL_63:
      int v44 = (1 << v43) - v42;
      if ((v44 & 0x80000000) == 0)
      {
        if (v44 == v41) {
          goto LABEL_65;
        }
        goto LABEL_79;
      }
LABEL_78:
      if (v41 == 0x7FFFFFFF)
      {
LABEL_65:
        if (v21 <= 3)
        {
          unsigned int v52 = ((1 << v22) + 1) >> v22;
          if (v52 > 0xFFFA) {
            goto LABEL_92;
          }
          int v45 = v52 + 5;
          if (v52 > 0xFA)
          {
            char v46 = 16;
LABEL_68:
            unsigned int v47 = (1 << v46) - v45;
            if ((v47 & 0x80000000) == 0)
            {
              if (v21 > 3) {
                goto LABEL_96;
              }
              goto LABEL_93;
            }
LABEL_92:
            unsigned int v47 = 0x7FFFFFFF;
            if (v21 > 3)
            {
LABEL_96:
              uint64_t v54 = 1;
LABEL_97:
              size_t v55 = v54 + v21;
              BOOL v56 = v41 >= v47;
              unsigned int v57 = v41 - v47;
              if (v57 != 0 && v56)
              {
                if (v55 <= 3)
                {
                  unsigned int v61 = ((v57 + ~(-1 << (8 * v55))) >> (8 * v55)) + 1;
                  if (HIWORD(v61))
                  {
                    int v58 = 4;
                  }
                  else if (v61 >= 0x100)
                  {
                    int v58 = 2;
                  }
                  else
                  {
                    int v58 = v61 > 1;
                  }
                }
                else
                {
                  int v58 = 1;
                }
              }
              else
              {
                int v58 = 0;
              }
              if (v47 < v26)
              {
                unsigned int v59 = ~v47 + v26;
                if (v55 < 4)
                {
                  int v60 = (v59 >> (8 * v55)) + 1;
                  if (v55)
                  {
                    int v62 = v59 & ~(-1 << (8 * v55));
                    bzero(v24, v55);
                    if (v55 == 3)
                    {
                      *(_WORD *)char v24 = v62;
                      v24[2] = BYTE2(v62);
                    }
                    else if (v55 == 2)
                    {
                      *(_WORD *)char v24 = v62;
                    }
                    else
                    {
                      *char v24 = v62;
                    }
                  }
                }
                else
                {
                  bzero(v24, v55);
                  *(_DWORD *)char v24 = v59;
                  int v60 = 1;
                }
                switch(v58)
                {
                  case 1:
                    v24[v55] = v60;
                    return;
                  case 2:
                    *(_WORD *)&v24[v55] = v60;
                    return;
                  case 3:
                    goto LABEL_130;
                  case 4:
                    *(_DWORD *)&v24[v55] = v60;
                    return;
                  default:
                    return;
                }
              }
              switch(v58)
              {
                case 1:
                  v24[v55] = 0;
                  goto LABEL_116;
                case 2:
                  *(_WORD *)&v24[v55] = 0;
                  goto LABEL_116;
                case 3:
                  goto LABEL_130;
                case 4:
                  *(_DWORD *)&v24[v55] = 0;
                  goto LABEL_116;
                default:
LABEL_116:
                  int v63 = -v26;
                  if (v21 > 3) {
                    goto LABEL_119;
                  }
                  unsigned int v64 = ((1 << v22) + 1) >> v22;
                  if (v64 > 0xFFFA)
                  {
                    *(_DWORD *)&v24[v21] = v63;
                  }
                  else if (v64 > 0xFA)
                  {
                    *(_WORD *)&v24[v21] = v63;
                  }
                  else
                  {
LABEL_119:
                    v24[v21] = v63;
                  }
                  break;
              }
              return;
            }
LABEL_93:
            unsigned int v53 = ((1 << v22) + 1) >> v22;
            uint64_t v54 = 2;
            if (v53 > 0xFFFA) {
              uint64_t v54 = 4;
            }
            if (v53 > 0xFA) {
              goto LABEL_97;
            }
            goto LABEL_96;
          }
        }
        else
        {
          int v45 = 6;
        }
        char v46 = 8;
        goto LABEL_68;
      }
LABEL_79:
      if (v21 > 3) {
        goto LABEL_83;
      }
      unsigned int v50 = ((1 << v22) + 1) >> v22;
      uint64_t v51 = 2;
      if (v50 > 0xFFFA) {
        uint64_t v51 = 4;
      }
      if (v50 <= 0xFA) {
LABEL_83:
      }
        uint64_t v51 = 1;
      *(void *)((unint64_t)&v24[v21 + 7 + v51] & 0xFFFFFFFFFFFFFFF8) = v26 - 1;
      return;
  }
}

uint64_t type metadata accessor for CombineLatestStateMachine()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CombineLatestStateMachine.State()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A55501F4(void *a1)
{
  uint64_t v2 = swift_checkMetadataState();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = swift_checkMetadataState();
    uint64_t v5 = (uint64_t *)v4;
    if (v6 > 0x3F)
    {
      return v4;
    }
    else
    {
      uint64_t v7 = (const char *)a1[4];
      uint64_t v8 = sub_1A56D5898();
      if (v9 > 0x3F) {
        return v8;
      }
      swift_getTupleTypeLayout3();
      uint64_t v30 = &v29;
      uint64_t v10 = a1[5];
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v12 = a1[6];
      uint64_t v13 = a1[7];
      uint64_t v21 = v2;
      char v22 = v5;
      int v23 = v7;
      uint64_t v24 = AssociatedTypeWitness;
      uint64_t v25 = v10;
      uint64_t v26 = v12;
      uint64_t v27 = v13;
      uint64_t v8 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
      if (v14 > 0x3F) {
        return v8;
      }
      uint64_t v21 = v2;
      char v22 = v5;
      int v23 = v7;
      uint64_t v24 = swift_getAssociatedTypeWitness();
      uint64_t v25 = v10;
      uint64_t v26 = v12;
      uint64_t v27 = v13;
      uint64_t v8 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
      if (v15 > 0x3F)
      {
        return v8;
      }
      else
      {
        uint64_t v21 = v2;
        char v22 = v5;
        int v23 = v7;
        uint64_t v24 = swift_getAssociatedTypeWitness();
        uint64_t v25 = v10;
        uint64_t v26 = v12;
        uint64_t v27 = v13;
        uint64_t v2 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
        if (v16 <= 0x3F)
        {
          swift_getTupleTypeLayout3();
          uint64_t v17 = MEMORY[0x1E4FBADB0] + 64;
          swift_getTupleTypeLayout3();
          unsigned int v31 = &v28;
          uint64_t v21 = v17;
          swift_getTupleTypeLayout3();
          char v22 = &v19;
          int v23 = "\b";
          uint64_t v24 = v17;
          swift_getTupleTypeLayout();
          size_t v32 = &v20;
          uint64_t v33 = v17;
          int v34 = &unk_1A56F01C0;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v2;
}

char *sub_1A5550544(char *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v133 = *(void *)(v4 - 8);
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v98 = *(void *)(v5 - 8);
  int v130 = *(_DWORD *)(v98 + 80);
  unint64_t __dst = *(void *)(v133 + 64) + v130;
  uint64_t v105 = *(void *)(v6 - 8);
  int v127 = *(_DWORD *)(v105 + 80);
  uint64_t v95 = *(void *)(v98 + 64);
  size_t v7 = *(void *)(v105 + 64);
  if (!*(_DWORD *)(v105 + 84)) {
    ++v7;
  }
  size_t __n = v7;
  unint64_t v118 = v7
       + ((v95
         + *(_DWORD *)(v105 + 80)
         + (__dst & ~(unint64_t)*(_DWORD *)(v98 + 80))) & ~(unint64_t)*(_DWORD *)(v105 + 80));
  uint64_t v99 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v116 = *(void *)(AssociatedTypeWitness - 8);
  int v124 = *(_DWORD *)(v116 + 80);
  uint64_t v102 = v5;
  uint64_t v112 = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(v112 - 8);
  int v121 = *(_DWORD *)(v113 + 80);
  uint64_t v108 = v6;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v121 | 7;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11 | 7;
  unint64_t v13 = v121 | (unint64_t)v124 | v11;
  uint64_t v14 = v116;
  uint64_t v15 = v13 | 7;
  uint64_t v16 = v124 + 8;
  unint64_t v17 = v16 & ~(unint64_t)v124;
  if (*(_DWORD *)(v116 + 84)) {
    size_t v18 = *(void *)(v116 + 64);
  }
  else {
    size_t v18 = *(void *)(v116 + 64) + 1;
  }
  unint64_t v19 = v17 + 1;
  uint64_t v20 = v121 + 8;
  unint64_t v21 = v20 & ~(unint64_t)v121;
  uint64_t v117 = v113;
  if (*(_DWORD *)(v113 + 84)) {
    size_t v22 = *(void *)(v113 + 64);
  }
  else {
    size_t v22 = *(void *)(v113 + 64) + 1;
  }
  unint64_t v23 = v21 + 1;
  uint64_t v24 = (v21 + 1 + v12 + v22 + ((v17 + 1 + v9 + v18) & ~v9)) & ~v12;
  uint64_t v25 = v11 + 8;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  uint64_t v27 = ((v11 + 8) & ~v11) + v26 + v24 + 1;
  unint64_t v28 = (v27 + ((v13 + 8) & ~(v13 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 8;
  if (v28 + 8 <= v118) {
    unint64_t v29 = v118;
  }
  unint64_t v30 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29) {
    unint64_t v30 = v29;
  }
  if (v30 <= 8) {
    uint64_t v31 = 8;
  }
  else {
    uint64_t v31 = v30;
  }
  if (v31 > 3) {
    goto LABEL_23;
  }
  unsigned int v32 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  uint64_t v33 = 2;
  if (v32 > 0xFFFA) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFA) {
LABEL_23:
  }
    uint64_t v33 = 1;
  unint64_t v34 = v33 + v31;
  int v35 = *(_DWORD *)(v133 + 80);
  unint64_t v36 = v13 | ((v127 | v130) | v35) & 0xF8 | 7u;
  if (v34 > 0x18 || ((v127 | v130 | v124 | v121 | *(_DWORD *)(v10 + 80) | v35) & 0x100000) != 0 || v36 != 7)
  {
    int v39 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    char v40 = &v39[(v36 + 16) & ~v36];
    swift_retain();
    return v40;
  }
  if (v31 > 3) {
    goto LABEL_36;
  }
  unsigned int v42 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  if (v42 > 0xFFFA)
  {
    unsigned int v43 = *(_DWORD *)&a2[v31];
    unsigned int v44 = v43 - 5;
    if (v43 < 5) {
      goto LABEL_54;
    }
    goto LABEL_41;
  }
  if (v42 > 0xFA)
  {
    unsigned int v43 = *(unsigned __int16 *)&a2[v31];
    unsigned int v44 = v43 - 5;
    if (v43 < 5) {
      goto LABEL_54;
    }
  }
  else
  {
LABEL_36:
    unsigned int v43 = a2[v31];
    unsigned int v44 = v43 - 5;
    if (v43 < 5) {
      goto LABEL_54;
    }
  }
LABEL_41:
  if (v31 <= 3) {
    uint64_t v45 = v31;
  }
  else {
    uint64_t v45 = 4;
  }
  switch(v45)
  {
    case 1:
      int v46 = *a2;
      if (v31 < 4) {
        goto LABEL_52;
      }
      goto LABEL_53;
    case 2:
      int v46 = *(unsigned __int16 *)a2;
      if (v31 >= 4) {
        goto LABEL_53;
      }
      goto LABEL_52;
    case 3:
      int v46 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v31 >= 4) {
        goto LABEL_53;
      }
      goto LABEL_52;
    case 4:
      int v46 = *(_DWORD *)a2;
      if (v31 < 4) {
LABEL_52:
      }
        v46 |= v44 << (8 * v31);
LABEL_53:
      unsigned int v43 = v46 + 5;
      break;
    default:
      break;
  }
LABEL_54:
  uint64_t v47 = ~v15;
  unint64_t v48 = ~(unint64_t)v124;
  uint64_t v49 = ~v9;
  uint64_t v50 = ~v11;
  switch(v43)
  {
    case 0u:
      char v40 = a1;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v133 + 16))(a1, a2, v99);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v98 + 16))((unint64_t)&a1[__dst] & ~(unint64_t)v130, (unint64_t)&a2[__dst] & ~(unint64_t)v130, v102);
      uint64_t v51 = (void *)((((unint64_t)&a1[__dst] & ~(unint64_t)v130)
                    + v95
                    + v127) & ~(unint64_t)v127);
      unsigned int v52 = (const void *)((((unint64_t)&a2[__dst] & ~(unint64_t)v130)
                          + v95
                          + v127) & ~(unint64_t)v127);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v105 + 48))(v52, 1, v108))
      {
        memcpy(v51, v52, __n);
        if (v31 > 3) {
          goto LABEL_79;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v105 + 16))(v51, v52, v108);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v51, 0, 1, v108);
        if (v31 > 3) {
          goto LABEL_79;
        }
      }
      unsigned int v67 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      if (v67 > 0xFFFA)
      {
        *(_DWORD *)&a1[v31] = 0;
        return v40;
      }
      if (v67 > 0xFA)
      {
        *(_WORD *)&a1[v31] = 0;
        return v40;
      }
LABEL_79:
      a1[v31] = 0;
      break;
    case 1u:
      unint64_t v101 = ~(unint64_t)v121;
      uint64_t v104 = ~v12;
      uint64_t v107 = v50;
      unint64_t v110 = v19;
      uint64_t v115 = v121 | 7;
      unint64_t v120 = v23;
      uint64_t v123 = v25;
      size_t v126 = v26;
      uint64_t v129 = v27;
      uint64_t v132 = *(void *)(v8 - 8);
      uint64_t v135 = v8;
      *(void *)a1 = *(void *)a2;
      int v63 = (void *)((unint64_t)&a1[v15 + 8] & v47);
      unsigned int v64 = (void *)((unint64_t)&a2[v15 + 8] & v47);
      *int v63 = *v64;
      unint64_t v138 = (unint64_t)v63;
      __dstb = (void *)(((unint64_t)v63 + v16) & v48);
      unint64_t v97 = (unint64_t)v64;
      unint64_t v65 = (const void *)(((unint64_t)v64 + v16) & v48);
      unsigned int v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_retain();
      if (v66(v65, 1, AssociatedTypeWitness))
      {
        memcpy(__dstb, v65, v18);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dstb, v65, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dstb, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dstb + v18) = *((unsigned char *)v65 + v18);
      uint64_t v72 = (void *)((v138 + v115 + v110 + v18) & v49);
      size_t v73 = (void *)((v97 + v115 + v110 + v18) & v49);
      void *v72 = *v73;
      size_t v74 = (void *)(((unint64_t)v72 + v20) & v101);
      size_t v75 = (const void *)(((unint64_t)v73 + v20) & v101);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v117 + 48))(v75, 1, v112))
      {
        memcpy(v74, v75, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 16))(v74, v75, v112);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v74, 0, 1, v112);
      }
      *((unsigned char *)v74 + v22) = *((unsigned char *)v75 + v22);
      size_t v81 = (void *)(((unint64_t)v72 + v12 + v120 + v22) & v104);
      v82 = (void *)(((unint64_t)v73 + v12 + v120 + v22) & v104);
      void *v81 = *v82;
      v83 = (void *)(((unint64_t)v81 + v123) & v107);
      size_t v84 = (const void *)(((unint64_t)v82 + v123) & v107);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v132 + 48))(v84, 1, v135))
      {
        size_t v85 = v126;
        memcpy(v83, v84, v126);
        char v40 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 16))(v83, v84, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v83, 0, 1, v135);
        char v40 = a1;
        size_t v85 = v126;
      }
      *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
      *(void *)(((v138 | 7) + v129) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v97 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 <= 3)
      {
        int v89 = 1;
        unsigned int v90 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v90 > 0xFFFA) {
          goto LABEL_106;
        }
        if (v90 > 0xFA) {
          goto LABEL_111;
        }
      }
      v40[v31] = 1;
      return v40;
    case 2u:
      unint64_t v100 = ~(unint64_t)v121;
      uint64_t v103 = ~v12;
      uint64_t v106 = v50;
      unint64_t v109 = v19;
      uint64_t v114 = v121 | 7;
      unint64_t v119 = v23;
      uint64_t v122 = v25;
      size_t v125 = v26;
      uint64_t v128 = v27;
      uint64_t v131 = *(void *)(v8 - 8);
      uint64_t v134 = v8;
      *(void *)a1 = *(void *)a2;
      unsigned int v53 = (void *)((unint64_t)&a1[v15 + 8] & v47);
      uint64_t v54 = (void *)((unint64_t)&a2[v15 + 8] & v47);
      *unsigned int v53 = *v54;
      unint64_t v137 = (unint64_t)v53;
      __dsta = (void *)(((unint64_t)v53 + v16) & v48);
      unint64_t v96 = (unint64_t)v54;
      size_t v55 = (const void *)(((unint64_t)v54 + v16) & v48);
      BOOL v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_retain();
      if (v56(v55, 1, AssociatedTypeWitness))
      {
        memcpy(__dsta, v55, v18);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dsta, v55, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dsta + v18) = *((unsigned char *)v55 + v18);
      int v68 = (void *)((v137 + v114 + v109 + v18) & v49);
      int v69 = (void *)((v96 + v114 + v109 + v18) & v49);
      void *v68 = *v69;
      uint64_t v70 = (void *)(((unint64_t)v68 + v20) & v100);
      unint64_t v71 = (const void *)(((unint64_t)v69 + v20) & v100);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v117 + 48))(v71, 1, v112))
      {
        memcpy(v70, v71, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 16))(v70, v71, v112);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v70, 0, 1, v112);
      }
      *((unsigned char *)v70 + v22) = *((unsigned char *)v71 + v22);
      unsigned int v76 = (void *)(((unint64_t)v68 + v12 + v119 + v22) & v103);
      size_t v77 = (void *)(((unint64_t)v69 + v12 + v119 + v22) & v103);
      void *v76 = *v77;
      uint64_t v78 = (void *)(((unint64_t)v76 + v122) & v106);
      unsigned int v79 = (const void *)(((unint64_t)v77 + v122) & v106);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48))(v79, 1, v134))
      {
        size_t v80 = v125;
        memcpy(v78, v79, v125);
        char v40 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v78, v79, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v78, 0, 1, v134);
        char v40 = a1;
        size_t v80 = v125;
      }
      *((unsigned char *)v78 + v80) = *((unsigned char *)v79 + v80);
      size_t v86 = (void *)(((v137 | 7) + v128) & 0xFFFFFFFFFFFFFFF8);
      BOOL v87 = (void *)(((v96 | 7) + v128) & 0xFFFFFFFFFFFFFFF8);
      void *v86 = *v87;
      *(void *)(((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v87 + 15) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 > 3) {
        goto LABEL_96;
      }
      unsigned int v88 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      if (v88 > 0xFFFA)
      {
        int v89 = 2;
LABEL_106:
        *(_DWORD *)&v40[v31] = v89;
      }
      else
      {
        if (v88 <= 0xFA)
        {
LABEL_96:
          v40[v31] = 2;
          return v40;
        }
        LOWORD(v89) = 2;
LABEL_111:
        *(_WORD *)&v40[v31] = v89;
      }
      return v40;
    case 3u:
      char v40 = a1;
      *(void *)a1 = *(void *)a2;
      swift_retain();
      if (v31 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v57 > 0xFFFA)
        {
          *(_DWORD *)&a1[v31] = 3;
          return v40;
        }
        if (v57 > 0xFA)
        {
          *(_WORD *)&a1[v31] = 3;
          return v40;
        }
      }
      a1[v31] = 3;
      return v40;
    case 4u:
      uint64_t v58 = *(void *)a2;
      id v59 = *(id *)a2;
      char v40 = a1;
      *(void *)a1 = v58;
      if (v31 <= 3)
      {
        unsigned int v60 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v60 > 0xFFFA)
        {
          *(_DWORD *)&a1[v31] = 4;
          return v40;
        }
        if (v60 > 0xFA)
        {
          *(_WORD *)&a1[v31] = 4;
          return v40;
        }
      }
      a1[v31] = 4;
      return v40;
    default:
      if (v31 > 3) {
        goto LABEL_72;
      }
      unsigned int v61 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      uint64_t v62 = 2;
      if (v61 > 0xFFFA) {
        uint64_t v62 = 4;
      }
      if (v61 <= 0xFA) {
LABEL_72:
      }
        uint64_t v62 = 1;
      char v40 = a1;
      memcpy(a1, a2, v62 + v31);
      return v40;
  }
  return v40;
}

void sub_1A5551370(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v53 = *(void *)(a2[2] - 8);
  uint64_t v3 = *(void *)(v53 + 64);
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v51 = v3 + v4;
  uint64_t v49 = v4;
  uint64_t v5 = a2[4];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v52 = *(void *)(v54 + 64);
  uint64_t v50 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = (v52 + v50 + ((v3 + v4) & ~v4)) & ~v50;
  uint64_t v59 = v6;
  uint64_t v8 = *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  unint64_t v73 = v8 + v7;
  uint64_t v55 = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v56 = v2;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v68 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = v10 | v9;
  uint64_t v62 = v5;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = v10 | 7;
  uint64_t v15 = v10;
  uint64_t v16 = v9;
  uint64_t v17 = *(void *)(v13 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v18 | 7;
  uint64_t v20 = v10 | v9 | v18 | 7;
  uint64_t v21 = v16 + 8;
  uint64_t v65 = v71;
  uint64_t v22 = ((v16 + 8) & ~v16) + *(void *)(v71 + 64);
  if (!*(_DWORD *)(v71 + 84)) {
    ++v22;
  }
  uint64_t v23 = v22 + v11 + 1;
  uint64_t v72 = v68;
  uint64_t v24 = ((v15 + 8) & ~v15) + *(void *)(v68 + 64);
  if (!*(_DWORD *)(v68 + 84)) {
    ++v24;
  }
  uint64_t v25 = ((v18 + 8) & ~v18) + *(void *)(*(void *)(v13 - 8) + 64);
  if (!*(_DWORD *)(v17 + 84)) {
    ++v25;
  }
  unint64_t v26 = (v25 + ((v24 + v19 + 1 + (v23 & ~v11)) & ~v19) + 1 + (((v12 | v18) + 8) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v26 + 8;
  if (v26 + 8 <= v73) {
    unint64_t v27 = v73;
  }
  unint64_t v28 = ((v26 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v28 <= v27) {
    unint64_t v28 = v27;
  }
  if (v28 <= 8) {
    unint64_t v28 = 8;
  }
  if (v28 > 3) {
    goto LABEL_18;
  }
  unsigned int v29 = ((1 << (8 * v28)) + 1) >> (8 * v28);
  if (v29 <= 0xFFFA)
  {
    if (v29 > 0xFA)
    {
      unsigned int v30 = *(unsigned __int16 *)&a1[v28];
      unsigned int v31 = v30 - 5;
      if (v30 < 5) {
        goto LABEL_33;
      }
      goto LABEL_23;
    }
LABEL_18:
    unsigned int v30 = a1[v28];
    unsigned int v31 = v30 - 5;
    if (v30 < 5) {
      goto LABEL_33;
    }
LABEL_23:
    if (v28 <= 3) {
      uint64_t v32 = v28;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *a1;
        if (v28 >= 4) {
          goto LABEL_58;
        }
        goto LABEL_32;
      case 2:
        int v33 = *(unsigned __int16 *)a1;
        if (v28 >= 4) {
          goto LABEL_58;
        }
        goto LABEL_32;
      case 3:
        int v33 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v28 < 4) {
          goto LABEL_32;
        }
        goto LABEL_58;
      case 4:
        int v33 = *(_DWORD *)a1;
        if (v28 < 4)
        {
LABEL_32:
          unsigned int v30 = (v33 | (v31 << (8 * v28))) + 5;
          goto LABEL_33;
        }
LABEL_58:
        unsigned int v30 = v33 + 5;
        if (v30 > 4) {
          return;
        }
        goto LABEL_33;
      default:
        goto LABEL_33;
    }
  }
  unsigned int v30 = *(_DWORD *)&a1[v28];
  unsigned int v31 = v30 - 5;
  if (v30 >= 5) {
    goto LABEL_23;
  }
LABEL_33:
  uint64_t v34 = ~v20;
  uint64_t v35 = ~v16;
  uint64_t v36 = ~v14;
  uint64_t v37 = ~v15;
  uint64_t v38 = ~v19;
  switch(v30)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v53 + 8))(a1, v55);
      unint64_t v39 = (unint64_t)&a1[v51] & ~v49;
      (*(void (**)(unint64_t, uint64_t))(v54 + 8))(v39, v56);
      unint64_t v40 = (v39 + v52 + v50) & ~v50;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v59 + 48))(v40, 1, v62))
      {
        unsigned int v41 = *(void (**)(unint64_t, uint64_t))(v59 + 8);
        v41(v40, v62);
      }
      return;
    case 1u:
      uint64_t v57 = ~v18;
      uint64_t v60 = v15 + 8;
      uint64_t v63 = v24 + v19 + 1;
      uint64_t v69 = v18 + 8;
      uint64_t v74 = v13;
      swift_release();
      uint64_t v42 = (unint64_t)&a1[v20 + 8] & v34;
      uint64_t v43 = (v21 + v42) & v35;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v43, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v43, AssociatedTypeWitness);
      }
      uint64_t v44 = (v23 + v42) & v36;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))((v60 + v44) & v37, 1, v67)) {
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))((v60 + v44) & v37, v67);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))((v69 + ((v63 + v44) & v38)) & v57, 1, v74))(*(void (**)(uint64_t, uint64_t))(v17 + 8))((v69 + ((v63 + v44) & v38)) & v57, v74); {
      goto LABEL_51;
      }
    case 2u:
      uint64_t v58 = ~v18;
      uint64_t v61 = v15 + 8;
      uint64_t v64 = v24 + v19 + 1;
      uint64_t v70 = v18 + 8;
      uint64_t v75 = v13;
      swift_release();
      uint64_t v45 = (unint64_t)&a1[v20 + 8] & v34;
      uint64_t v46 = (v21 + v45) & v35;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v46, 1, AssociatedTypeWitness)) {
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v46, AssociatedTypeWitness);
      }
      uint64_t v47 = (v23 + v45) & v36;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))((v61 + v47) & v37, 1, v67)) {
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))((v61 + v47) & v37, v67);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))((v70 + ((v64 + v47) & v38)) & v58, 1, v75))(*(void (**)(uint64_t, uint64_t))(v17 + 8))((v70 + ((v64 + v47) & v38)) & v58, v75); {
      goto LABEL_51;
      }
    case 3u:
LABEL_51:
      swift_release();
      break;
    case 4u:
      unint64_t v48 = *(void **)a1;

      break;
    default:
      return;
  }
}

void *sub_1A5551BE4(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v108 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v108 + 64);
  size_t v6 = a3[3];
  size_t v7 = a3[4];
  uint64_t v114 = *(void *)(v6 - 8);
  uint64_t v101 = *(unsigned __int8 *)(v114 + 80);
  uint64_t v104 = v5 + v101;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v111 = *(void *)(v114 + 64);
  uint64_t v105 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v111 + v105 + ((v5 + v101) & ~v101)) & ~v105;
  uint64_t v123 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v135 = v10 + v9;
  uint64_t v117 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v134 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(unsigned __int8 *)(v134 + 80);
  size_t v120 = v6;
  uint64_t v130 = swift_getAssociatedTypeWitness();
  uint64_t v131 = *(void *)(v130 - 8);
  uint64_t v12 = v131;
  uint64_t v13 = *(unsigned __int8 *)(v131 + 80);
  size_t v126 = v7;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v13 | 7;
  uint64_t v16 = v11;
  uint64_t v17 = *(void *)(v14 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v18 | 7;
  uint64_t v20 = v13 | v11 | v18 | 7;
  uint64_t v21 = v11 + 8;
  uint64_t v22 = (v11 + 8) & ~v11;
  if (*(_DWORD *)(v134 + 84)) {
    size_t v23 = *(void *)(v134 + 64);
  }
  else {
    size_t v23 = *(void *)(v134 + 64) + 1;
  }
  uint64_t v24 = v22 + 1;
  uint64_t v25 = (v22 + 1 + v15 + v23) & ~v15;
  uint64_t v26 = v13 + 8;
  uint64_t v27 = (v13 + 8) & ~v13;
  unint64_t v28 = a2;
  if (*(_DWORD *)(v131 + 84)) {
    uint64_t v29 = *(void *)(v131 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v131 + 64) + 1;
  }
  uint64_t v30 = (v27 + 1 + v19 + v29 + v25) & ~v19;
  uint64_t v31 = v18 + 8;
  if (*(_DWORD *)(v17 + 84)) {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  else {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64) + 1;
  }
  uint64_t v33 = ((v18 + 8) & ~v18) + v32 + v30 + 1;
  unint64_t v34 = (v33 + (((v13 | v11 | v18) + 8) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v34 + 8;
  if (v34 + 8 <= v135) {
    unint64_t v35 = v135;
  }
  unint64_t v36 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  if (v37 > 3) {
    goto LABEL_22;
  }
  unsigned int v38 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v38 > 0xFFFA)
  {
    unsigned int v39 = *(_DWORD *)&a2[v37];
    unsigned int v40 = v39 - 5;
    if (v39 < 5) {
      goto LABEL_40;
    }
    goto LABEL_27;
  }
  if (v38 <= 0xFA)
  {
LABEL_22:
    unsigned int v39 = a2[v37];
    unsigned int v40 = v39 - 5;
    if (v39 < 5) {
      goto LABEL_40;
    }
LABEL_27:
    if (v37 <= 3) {
      uint64_t v41 = v37;
    }
    else {
      uint64_t v41 = 4;
    }
    switch(v41)
    {
      case 1:
        int v42 = *a2;
        if (v37 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v42 = *(unsigned __int16 *)a2;
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v42 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v42 = *(_DWORD *)a2;
        if (v37 < 4) {
LABEL_38:
        }
          v42 |= v40 << (8 * v37);
LABEL_39:
        unsigned int v39 = v42 + 5;
        break;
      default:
        goto LABEL_40;
    }
    goto LABEL_40;
  }
  unsigned int v39 = *(unsigned __int16 *)&a2[v37];
  unsigned int v40 = v39 - 5;
  if (v39 >= 5) {
    goto LABEL_27;
  }
LABEL_40:
  uint64_t v43 = ~v20;
  uint64_t v44 = ~v16;
  uint64_t v45 = ~v15;
  uint64_t v46 = ~v13;
  uint64_t v47 = ~v18;
  switch(v39)
  {
    case 0u:
      unint64_t v48 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v108 + 16))(a1, a2, v117);
      (*(void (**)(unint64_t, unint64_t, size_t))(v114 + 16))(((unint64_t)a1 + v104) & ~v101, (unint64_t)&a2[v104] & ~v101, v120);
      uint64_t v49 = (void *)(((((unint64_t)a1 + v104) & ~v101) + v111 + v105) & ~v105);
      uint64_t v50 = (const void *)((((unint64_t)&a2[v104] & ~v101) + v111 + v105) & ~v105);
      if ((*(unsigned int (**)(const void *, uint64_t, size_t))(v123 + 48))(v50, 1, v126))
      {
        memcpy(v49, v50, __n);
        if (v37 > 3) {
          goto LABEL_76;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, size_t))(v123 + 16))(v49, v50, v126);
        (*(void (**)(void *, void, uint64_t, size_t))(v123 + 56))(v49, 0, 1, v126);
        if (v37 > 3)
        {
LABEL_76:
          *((unsigned char *)a1 + v37) = 0;
          return v48;
        }
      }
      unsigned int v78 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v78 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v37) = 0;
        return v48;
      }
      if (v78 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v37) = 0;
        return v48;
      }
      goto LABEL_76;
    case 1u:
      uint64_t v107 = ~v19;
      uint64_t v110 = v47;
      uint64_t v113 = v24;
      uint64_t v116 = v13 | 7;
      uint64_t v119 = v27 + 1;
      size_t v122 = v29;
      uint64_t v125 = v31;
      size_t v128 = v32;
      uint64_t v133 = v33;
      uint64_t v137 = *(void *)(v14 - 8);
      uint64_t v140 = v14;
      *a1 = *(void *)v28;
      uint64_t v61 = (void *)(((unint64_t)a1 + v20 + 8) & v43);
      uint64_t v62 = (void *)((unint64_t)&v28[v20 + 8] & v43);
      *uint64_t v61 = *v62;
      size_t __nb = (size_t)v62;
      unint64_t v103 = (unint64_t)v61;
      __dsta = (void *)(((unint64_t)v61 + v21) & v44);
      uint64_t v63 = (const void *)(((unint64_t)v62 + v21) & v44);
      uint64_t v64 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v134 + 48);
      swift_retain();
      if (v64(v63, 1, AssociatedTypeWitness))
      {
        memcpy(__dsta, v63, v23);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v134 + 16))(__dsta, v63, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v134 + 56))(__dsta, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dsta + v23) = *((unsigned char *)v63 + v23);
      unsigned int v79 = (void *)((v103 + v116 + v113 + v23) & v45);
      size_t v80 = (void *)((__nb + v116 + v113 + v23) & v45);
      void *v79 = *v80;
      size_t v81 = (void *)(((unint64_t)v79 + v26) & v46);
      v82 = (const void *)(((unint64_t)v80 + v26) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v82, 1, v130))
      {
        size_t v83 = v122;
        memcpy(v81, v82, v122);
        uint64_t v84 = v140;
        unint64_t v48 = a1;
        uint64_t v85 = v137;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v81, v82, v130);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v81, 0, 1, v130);
        uint64_t v84 = v140;
        unint64_t v48 = a1;
        uint64_t v85 = v137;
        size_t v83 = v122;
      }
      *((unsigned char *)v81 + v83) = *((unsigned char *)v82 + v83);
      size_t v86 = (void *)(((unint64_t)v79 + v19 + v119 + v83) & v107);
      BOOL v87 = (void *)(((unint64_t)v80 + v19 + v119 + v83) & v107);
      void *v86 = *v87;
      unsigned int v88 = (void *)(((unint64_t)v86 + v125) & v110);
      int v89 = (const void *)(((unint64_t)v87 + v125) & v110);
      uint64_t v90 = v84;
      uint64_t v91 = v85;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48))(v89, 1, v84))
      {
        size_t v92 = v128;
        memcpy(v88, v89, v128);
        uint64_t v93 = v133;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        uint64_t v93 = v133;
        size_t v92 = v128;
      }
      *((unsigned char *)v88 + v92) = *((unsigned char *)v89 + v92);
      *(void *)(((v103 | 7) + v93) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((__nb | 7) + v93) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v37 > 3) {
        goto LABEL_85;
      }
      unsigned int v94 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v94 > 0xFFFA)
      {
        *(_DWORD *)((char *)v48 + v37) = 1;
        return v48;
      }
      if (v94 <= 0xFA) {
LABEL_85:
      }
        *((unsigned char *)v48 + v37) = 1;
      else {
        *(_WORD *)((char *)v48 + v37) = 1;
      }
      return v48;
    case 2u:
      uint64_t v106 = ~v19;
      uint64_t v109 = v47;
      uint64_t v112 = v24;
      uint64_t v115 = v13 | 7;
      uint64_t v118 = v27 + 1;
      size_t v121 = v29;
      uint64_t v124 = v31;
      size_t v127 = v32;
      uint64_t v132 = v33;
      uint64_t v136 = *(void *)(v14 - 8);
      uint64_t v139 = v14;
      *a1 = *(void *)v28;
      uint64_t v51 = (void *)(((unint64_t)a1 + v20 + 8) & v43);
      uint64_t v52 = (void *)((unint64_t)&v28[v20 + 8] & v43);
      *uint64_t v51 = *v52;
      unint64_t __dst = (void *)(((unint64_t)v51 + v21) & v44);
      size_t __na = (size_t)v51;
      unint64_t v102 = (unint64_t)v52;
      uint64_t v53 = (const void *)(((unint64_t)v52 + v21) & v44);
      uint64_t v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v134 + 48);
      swift_retain();
      if (v54(v53, 1, AssociatedTypeWitness))
      {
        memcpy(__dst, v53, v23);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v134 + 16))(__dst, v53, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v134 + 56))(__dst, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)__dst + v23) = *((unsigned char *)v53 + v23);
      uint64_t v65 = (void *)((__na + v115 + v112 + v23) & v45);
      unsigned int v66 = (void *)((v102 + v115 + v112 + v23) & v45);
      void *v65 = *v66;
      uint64_t v67 = (void *)(((unint64_t)v65 + v26) & v46);
      uint64_t v68 = (const void *)(((unint64_t)v66 + v26) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v68, 1, v130))
      {
        size_t v69 = v121;
        memcpy(v67, v68, v121);
        unint64_t v48 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v67, v68, v130);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v67, 0, 1, v130);
        unint64_t v48 = a1;
        size_t v69 = v121;
      }
      *((unsigned char *)v67 + v69) = *((unsigned char *)v68 + v69);
      uint64_t v70 = (void *)(((unint64_t)v65 + v19 + v118 + v69) & v106);
      uint64_t v71 = (void *)(((unint64_t)v66 + v19 + v118 + v69) & v106);
      void *v70 = *v71;
      uint64_t v72 = (void *)(((unint64_t)v70 + v124) & v109);
      unint64_t v73 = (const void *)(((unint64_t)v71 + v124) & v109);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v73, 1, v139))
      {
        size_t v74 = v127;
        memcpy(v72, v73, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v72, v73, v139);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v136 + 56))(v72, 0, 1, v139);
        size_t v74 = v127;
      }
      *((unsigned char *)v72 + v74) = *((unsigned char *)v73 + v74);
      uint64_t v75 = (void *)(((__na | 7) + v132) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v76 = (void *)(((v102 | 7) + v132) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v75 = *v76;
      *(void *)(((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      if (v37 <= 3)
      {
        unsigned int v77 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v77 > 0xFFFA)
        {
          *(_DWORD *)((char *)v48 + v37) = 2;
          return v48;
        }
        if (v77 > 0xFA)
        {
          *(_WORD *)((char *)v48 + v37) = 2;
          return v48;
        }
      }
      *((unsigned char *)v48 + v37) = 2;
      return v48;
    case 3u:
      unint64_t v48 = a1;
      *a1 = *(void *)a2;
      swift_retain();
      if (v37 <= 3)
      {
        unsigned int v55 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v55 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 3;
          return v48;
        }
        if (v55 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 3;
          return v48;
        }
      }
      *((unsigned char *)a1 + v37) = 3;
      return v48;
    case 4u:
      uint64_t v56 = *(void *)a2;
      id v57 = *(id *)a2;
      unint64_t v48 = a1;
      *a1 = v56;
      if (v37 <= 3)
      {
        unsigned int v58 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v58 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 4;
          return v48;
        }
        if (v58 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 4;
          return v48;
        }
      }
      *((unsigned char *)a1 + v37) = 4;
      return v48;
    default:
      if (v37 > 3) {
        goto LABEL_58;
      }
      unsigned int v59 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      uint64_t v60 = 2;
      if (v59 > 0xFFFA) {
        uint64_t v60 = 4;
      }
      if (v59 <= 0xFA) {
LABEL_58:
      }
        uint64_t v60 = 1;
      unint64_t v48 = a1;
      memcpy(a1, a2, v60 + v37);
      return v48;
  }
}

unsigned __int8 *sub_1A555294C(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v110 = *(void *)(v5 - 8);
    uint64_t v6 = *(void *)(v110 + 64);
    uint64_t v7 = a3[3];
    uint64_t v8 = a3[4];
    uint64_t v112 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v112 + 80);
    uint64_t v109 = v6 + v9;
    uint64_t v138 = v9;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v111 = *(void *)(v112 + 64);
    uint64_t v143 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v11 = (v111 + v143 + ((v6 + v9) & ~v9)) & ~v143;
    uint64_t v121 = v10;
    size_t v12 = *(void *)(v10 + 64);
    if (!*(_DWORD *)(v10 + 84)) {
      ++v12;
    }
    size_t __n = v12;
    unint64_t v136 = v12 + v11;
    uint64_t v113 = v5;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v146 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v13 = *(unsigned __int8 *)(v146 + 80);
    uint64_t v114 = v7;
    uint64_t v130 = swift_getAssociatedTypeWitness();
    uint64_t v134 = *(void *)(v130 - 8);
    uint64_t v14 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v15 = v14 | 7;
    uint64_t v16 = v14 | v13;
    uint64_t v122 = v8;
    uint64_t v17 = swift_getAssociatedTypeWitness();
    uint64_t v18 = v14;
    uint64_t v19 = v13;
    uint64_t v133 = v17;
    uint64_t v20 = *(void *)(v17 - 8);
    uint64_t v21 = v20;
    uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = v22 | 7;
    uint64_t v24 = v14 | v13 | v22 | 7;
    uint64_t v127 = v13 + 8;
    uint64_t v131 = v146;
    uint64_t v25 = v20;
    if (*(_DWORD *)(v146 + 84)) {
      uint64_t v26 = *(void *)(v146 + 64);
    }
    else {
      uint64_t v26 = *(void *)(v146 + 64) + 1;
    }
    size_t v115 = v26;
    uint64_t v116 = ((v13 + 8) & ~v13) + v26 + 1;
    uint64_t v27 = v116 + v15;
    uint64_t v147 = v14 | 7;
    uint64_t v128 = v14 + 8;
    uint64_t v129 = v134;
    size_t v28 = *(void *)(v134 + 64);
    if (!*(_DWORD *)(v134 + 84)) {
      ++v28;
    }
    uint64_t v118 = ((v14 + 8) & ~v14) + v28 + 1;
    uint64_t v29 = v118 + v23;
    uint64_t v135 = v22 + 8;
    size_t v30 = *(void *)(v20 + 64);
    if (!*(_DWORD *)(v21 + 84)) {
      ++v30;
    }
    size_t v120 = v30;
    uint64_t v31 = ((v22 + 8) & ~v22) + v30 + ((v118 + v23 + (v27 & ~v15)) & ~v23) + 1;
    unint64_t v32 = (v31 + (((v16 | v22) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = v32 + 8;
    if (v32 + 8 <= v136) {
      unint64_t v33 = v136;
    }
    unint64_t v34 = ((v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v34 <= v33) {
      unint64_t v34 = v33;
    }
    if (v34 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v34;
    }
    char v36 = 8 * v35;
    if (v35 > 3) {
      goto LABEL_21;
    }
    unsigned int v37 = ((1 << v36) + 1) >> v36;
    if (v37 > 0xFFFA)
    {
      unsigned int v38 = *(_DWORD *)&a1[v35];
      unsigned int v39 = v38 - 5;
      if (v38 < 5) {
        goto LABEL_39;
      }
      goto LABEL_26;
    }
    if (v37 > 0xFA)
    {
      unsigned int v38 = *(unsigned __int16 *)&a1[v35];
      unsigned int v39 = v38 - 5;
      if (v38 < 5)
      {
LABEL_39:
        size_t v117 = v28;
        uint64_t v107 = ~v138;
        uint64_t v108 = ~v143;
        uint64_t v123 = ~v24;
        uint64_t v124 = ~v19;
        uint64_t v125 = ~v147;
        uint64_t v126 = ~v18;
        uint64_t v119 = v22 | 7;
        uint64_t v137 = ~v23;
        uint64_t v139 = ~v22;
        switch(v38)
        {
          case 0u:
            (*(void (**)(unsigned __int8 *, uint64_t))(v110 + 8))(a1, v113);
            (*(void (**)(unint64_t, uint64_t))(v112 + 8))((unint64_t)&a1[v109] & v107, v114);
            unint64_t v42 = (((unint64_t)&a1[v109] & v107) + v111 + v143) & v108;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v121 + 48))(v42, 1, v122)) {
              (*(void (**)(unint64_t, uint64_t))(v121 + 8))(v42, v122);
            }
            goto LABEL_58;
          case 1u:
            uint64_t v104 = v31;
            swift_release();
            uint64_t v45 = (unint64_t)&a1[v24 + 8] & v123;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))((v127 + v45) & v124, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v131 + 8))((v127 + v45) & v124, AssociatedTypeWitness); {
            uint64_t v46 = (v27 + v45) & v125;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))((v128 + v46) & v126, 1, v130))(*(void (**)(uint64_t, uint64_t))(v129 + 8))((v128 + v46) & v126, v130); {
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))((v135 + ((v29 + v46) & v137)) & v139, 1, v133))(*(void (**)(uint64_t, uint64_t))(v25 + 8))((v135 + ((v29 + v46) & v137)) & v139, v133);
            }
            uint64_t v31 = v104;
            goto LABEL_57;
          case 2u:
            uint64_t v103 = v31;
            swift_release();
            uint64_t v43 = (unint64_t)&a1[v24 + 8] & v123;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))((v127 + v43) & v124, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v131 + 8))((v127 + v43) & v124, AssociatedTypeWitness); {
            uint64_t v44 = (v27 + v43) & v125;
            }
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))((v128 + v44) & v126, 1, v130))(*(void (**)(uint64_t, uint64_t))(v129 + 8))((v128 + v44) & v126, v130); {
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))((v135 + ((v29 + v44) & v137)) & v139, 1, v133))(*(void (**)(uint64_t, uint64_t))(v25 + 8))((v135 + ((v29 + v44) & v137)) & v139, v133);
            }
            uint64_t v31 = v103;
            goto LABEL_57;
          case 3u:
LABEL_57:
            swift_release();
            break;
          case 4u:

            break;
          default:
            goto LABEL_58;
        }
        if (v35 > 3) {
          goto LABEL_61;
        }
LABEL_58:
        unsigned int v47 = ((1 << v36) + 1) >> v36;
        if (v47 > 0xFFFA)
        {
          unsigned int v48 = *(_DWORD *)&a2[v35];
          unsigned int v49 = v48 - 5;
          if (v48 < 5) {
            goto LABEL_79;
          }
          goto LABEL_66;
        }
        if (v47 > 0xFA)
        {
          unsigned int v48 = *(unsigned __int16 *)&a2[v35];
          unsigned int v49 = v48 - 5;
          if (v48 < 5)
          {
LABEL_79:
            switch(v48)
            {
              case 0u:
                (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v110 + 16))(a1, a2, v113);
                unint64_t v52 = (unint64_t)&a2[v109] & v107;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 16))((unint64_t)&a1[v109] & v107, v52, v114);
                uint64_t v53 = (void *)((((unint64_t)&a1[v109] & v107) + v111 + v143) & v108);
                uint64_t v54 = (const void *)((v52 + v111 + v143) & v108);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48))(v54, 1, v122))
                {
                  memcpy(v53, v54, __n);
                  if (v35 > 3) {
                    goto LABEL_104;
                  }
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v121 + 16))(v53, v54, v122);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v53, 0, 1, v122);
                  if (v35 > 3)
                  {
LABEL_104:
                    a1[v35] = 0;
                    return a1;
                  }
                }
                unsigned int v75 = ((1 << v36) + 1) >> v36;
                if (v75 > 0xFFFA)
                {
                  *(_DWORD *)&a1[v35] = 0;
                  return a1;
                }
                if (v75 > 0xFA)
                {
                  *(_WORD *)&a1[v35] = 0;
                  return a1;
                }
                goto LABEL_104;
              case 1u:
                uint64_t v106 = v31;
                uint64_t v145 = v25;
                *(void *)a1 = *(void *)a2;
                uint64_t v68 = (unint64_t)&a1[v24 + 8] & v123;
                size_t v69 = (void *)((unint64_t)&a2[v24 + 8] & v123);
                *(void *)uint64_t v68 = *v69;
                uint64_t v70 = (void *)((v127 + v68) & v124);
                unint64_t v142 = (unint64_t)v69;
                uint64_t v71 = (const void *)(((unint64_t)v69 + v127) & v124);
                uint64_t v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48);
                swift_retain();
                if (v72(v71, 1, AssociatedTypeWitness))
                {
                  size_t v73 = v115;
                  memcpy(v70, v71, v115);
                  uint64_t v74 = v130;
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v70, v71, AssociatedTypeWitness);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v70, 0, 1, AssociatedTypeWitness);
                  uint64_t v74 = v130;
                  size_t v73 = v115;
                }
                *((unsigned char *)v70 + v73) = *((unsigned char *)v71 + v73);
                size_t v81 = (void *)((v68 + v147 + v116) & v125);
                v82 = (void *)((v142 + v147 + v116) & v125);
                void *v81 = *v82;
                size_t v83 = (void *)(((unint64_t)v81 + v128) & v126);
                uint64_t v84 = (const void *)(((unint64_t)v82 + v128) & v126);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v129 + 48))(v84, 1, v74))
                {
                  size_t v85 = v117;
                  memcpy(v83, v84, v117);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v129 + 16))(v83, v84, v74);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v83, 0, 1, v74);
                  size_t v85 = v117;
                }
                *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
                uint64_t v91 = (void *)(((unint64_t)v81 + v119 + v118) & v137);
                size_t v92 = (void *)(((unint64_t)v82 + v119 + v118) & v137);
                void *v91 = *v92;
                uint64_t v93 = (void *)(((unint64_t)v91 + v135) & v139);
                unsigned int v94 = (const void *)(((unint64_t)v92 + v135) & v139);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v145 + 48))(v94, 1, v133))
                {
                  size_t v95 = v120;
                  memcpy(v93, v94, v120);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v145 + 16))(v93, v94, v133);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v93, 0, 1, v133);
                  size_t v95 = v120;
                }
                *((unsigned char *)v93 + v95) = *((unsigned char *)v94 + v95);
                *(void *)(((v68 | 7) + v106) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v142 | 7) + v106) & 0xFFFFFFFFFFFFFFF8);
                swift_retain();
                if (v35 <= 3)
                {
                  __int16 v99 = 1;
                  unsigned int v100 = ((1 << v36) + 1) >> v36;
                  if (v100 > 0xFFFA)
                  {
                    *(_DWORD *)&a1[v35] = 1;
                    return a1;
                  }
                  if (v100 > 0xFA) {
                    goto LABEL_136;
                  }
                }
                a1[v35] = 1;
                return a1;
              case 2u:
                uint64_t v105 = v31;
                uint64_t v144 = v25;
                *(void *)a1 = *(void *)a2;
                uint64_t v55 = (unint64_t)&a1[v24 + 8] & v123;
                uint64_t v56 = (void *)((unint64_t)&a2[v24 + 8] & v123);
                *(void *)uint64_t v55 = *v56;
                id v57 = (void *)((v127 + v55) & v124);
                unint64_t v141 = (unint64_t)v56;
                unsigned int v58 = (const void *)(((unint64_t)v56 + v127) & v124);
                unsigned int v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48);
                swift_retain();
                if (v59(v58, 1, AssociatedTypeWitness))
                {
                  size_t v60 = v115;
                  memcpy(v57, v58, v115);
                  uint64_t v61 = v130;
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v57, v58, AssociatedTypeWitness);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v131 + 56))(v57, 0, 1, AssociatedTypeWitness);
                  uint64_t v61 = v130;
                  size_t v60 = v115;
                }
                *((unsigned char *)v57 + v60) = *((unsigned char *)v58 + v60);
                unsigned int v76 = (void *)((v55 + v147 + v116) & v125);
                unsigned int v77 = (void *)((v141 + v147 + v116) & v125);
                void *v76 = *v77;
                unsigned int v78 = (void *)(((unint64_t)v76 + v128) & v126);
                unsigned int v79 = (const void *)(((unint64_t)v77 + v128) & v126);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v129 + 48))(v79, 1, v61))
                {
                  size_t v80 = v117;
                  memcpy(v78, v79, v117);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v129 + 16))(v78, v79, v61);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v78, 0, 1, v61);
                  size_t v80 = v117;
                }
                *((unsigned char *)v78 + v80) = *((unsigned char *)v79 + v80);
                size_t v86 = (void *)(((unint64_t)v76 + v119 + v118) & v137);
                BOOL v87 = (void *)(((unint64_t)v77 + v119 + v118) & v137);
                void *v86 = *v87;
                unsigned int v88 = (void *)(((unint64_t)v86 + v135) & v139);
                int v89 = (const void *)(((unint64_t)v87 + v135) & v139);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v89, 1, v133))
                {
                  size_t v90 = v120;
                  memcpy(v88, v89, v120);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v144 + 16))(v88, v89, v133);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v88, 0, 1, v133);
                  size_t v90 = v120;
                }
                *((unsigned char *)v88 + v90) = *((unsigned char *)v89 + v90);
                unint64_t v96 = (void *)(((v55 | 7) + v105) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v97 = (void *)(((v141 | 7) + v105) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v96 = *v97;
                *(void *)(((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v97
                                                                                              + 15) & 0xFFFFFFFFFFFFFFF8);
                swift_retain();
                if (v35 <= 3)
                {
                  unsigned int v98 = ((1 << v36) + 1) >> v36;
                  if (v98 > 0xFFFA)
                  {
                    *(_DWORD *)&a1[v35] = 2;
                    return a1;
                  }
                  if (v98 > 0xFA)
                  {
                    __int16 v99 = 2;
                    goto LABEL_136;
                  }
                }
                a1[v35] = 2;
                return a1;
              case 3u:
                *(void *)a1 = *(void *)a2;
                swift_retain();
                if (v35 <= 3)
                {
                  unsigned int v62 = ((1 << v36) + 1) >> v36;
                  if (v62 > 0xFFFA)
                  {
                    *(_DWORD *)&a1[v35] = 3;
                    return a1;
                  }
                  if (v62 > 0xFA)
                  {
                    __int16 v99 = 3;
                    goto LABEL_136;
                  }
                }
                a1[v35] = 3;
                return a1;
              case 4u:
                uint64_t v63 = *(void *)a2;
                id v64 = *(id *)a2;
                *(void *)a1 = v63;
                if (v35 > 3) {
                  goto LABEL_92;
                }
                unsigned int v65 = ((1 << v36) + 1) >> v36;
                if (v65 > 0xFFFA)
                {
                  *(_DWORD *)&a1[v35] = 4;
                  return a1;
                }
                if (v65 > 0xFA)
                {
                  __int16 v99 = 4;
LABEL_136:
                  *(_WORD *)&a1[v35] = v99;
                }
                else
                {
LABEL_92:
                  a1[v35] = 4;
                }
                return a1;
              default:
                if (v35 > 3) {
                  goto LABEL_97;
                }
                unsigned int v66 = ((1 << v36) + 1) >> v36;
                uint64_t v67 = 2;
                if (v66 > 0xFFFA) {
                  uint64_t v67 = 4;
                }
                if (v66 <= 0xFA) {
LABEL_97:
                }
                  uint64_t v67 = 1;
                memcpy(a1, a2, v67 + v35);
                return a1;
            }
          }
        }
        else
        {
LABEL_61:
          unsigned int v48 = a2[v35];
          unsigned int v49 = v48 - 5;
          if (v48 < 5) {
            goto LABEL_79;
          }
        }
LABEL_66:
        if (v35 <= 3) {
          uint64_t v50 = v35;
        }
        else {
          uint64_t v50 = 4;
        }
        switch(v50)
        {
          case 1:
            int v51 = *a2;
            if (v35 < 4) {
              goto LABEL_77;
            }
            goto LABEL_78;
          case 2:
            int v51 = *(unsigned __int16 *)a2;
            if (v35 >= 4) {
              goto LABEL_78;
            }
            goto LABEL_77;
          case 3:
            int v51 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v35 >= 4) {
              goto LABEL_78;
            }
            goto LABEL_77;
          case 4:
            int v51 = *(_DWORD *)a2;
            if (v35 < 4) {
LABEL_77:
            }
              v51 |= v49 << v36;
LABEL_78:
            unsigned int v48 = v51 + 5;
            break;
          default:
            goto LABEL_79;
        }
        goto LABEL_79;
      }
    }
    else
    {
LABEL_21:
      unsigned int v38 = a1[v35];
      unsigned int v39 = v38 - 5;
      if (v38 < 5) {
        goto LABEL_39;
      }
    }
LABEL_26:
    if (v35 <= 3) {
      uint64_t v40 = v35;
    }
    else {
      uint64_t v40 = 4;
    }
    switch(v40)
    {
      case 1:
        int v41 = *a1;
        if (v35 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v41 = *(unsigned __int16 *)a1;
        if (v35 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v41 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v35 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v41 = *(_DWORD *)a1;
        if (v35 < 4) {
LABEL_37:
        }
          v41 |= v39 << v36;
LABEL_38:
        unsigned int v38 = v41 + 5;
        break;
      default:
        goto LABEL_39;
    }
    goto LABEL_39;
  }
  return a1;
}

void *sub_1A5553B10(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v104 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v97 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v98 = v5 + v97;
  size_t v8 = *(void *)(v7 - 8);
  uint64_t v107 = *(void *)(v110 + 64);
  uint64_t v101 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v9 = (v107 + v101 + ((v5 + v97) & ~v97)) & ~v101;
  size_t v117 = v8;
  size_t v10 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  size_t __n = v10;
  unint64_t v131 = v10 + v9;
  uint64_t v111 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v138 = *(void *)(AssociatedTypeWitness - 8);
  size_t v11 = *(unsigned __int8 *)(v138 + 80);
  uint64_t v114 = v6;
  uint64_t v124 = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(void *)(v124 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v128 + 80);
  size_t v13 = v12 | v11;
  uint64_t v120 = v7;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v12 | 7;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v12 | v11 | v17 | 7;
  size_t v19 = v11 + 8;
  size_t v125 = v11;
  uint64_t v20 = (v11 + 8) & ~v11;
  uint64_t v21 = v138;
  if (*(_DWORD *)(v138 + 84)) {
    size_t v22 = *(void *)(v138 + 64);
  }
  else {
    size_t v22 = *(void *)(v138 + 64) + 1;
  }
  uint64_t v23 = v20 + 1;
  uint64_t v24 = (v20 + 1 + (v12 | 7) + v22) & ~(v12 | 7);
  uint64_t v25 = v12 + 8;
  uint64_t v26 = v12;
  uint64_t v27 = (v12 + 8) & ~v12;
  uint64_t v123 = v128;
  size_t v28 = a2;
  if (*(_DWORD *)(v128 + 84)) {
    uint64_t v29 = *(void *)(v128 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v128 + 64) + 1;
  }
  uint64_t v139 = v17 | 7;
  uint64_t v30 = (v27 + 1 + (v17 | 7) + v29 + v24) & ~(v17 | 7);
  uint64_t v31 = v17 + 8;
  if (*(_DWORD *)(v16 + 84)) {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  else {
    uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64) + 1;
  }
  uint64_t v33 = ((v17 + 8) & ~v17) + v32 + v30 + 1;
  unint64_t v34 = (v33 + (((v13 | v17) + 8) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v34 + 8;
  if (v34 + 8 <= v131) {
    unint64_t v35 = v131;
  }
  unint64_t v36 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  if (v37 > 3) {
    goto LABEL_22;
  }
  unsigned int v38 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v38 > 0xFFFA)
  {
    unsigned int v39 = *(_DWORD *)&a2[v37];
  }
  else
  {
    if (v38 <= 0xFA)
    {
LABEL_22:
      unsigned int v39 = a2[v37];
      goto LABEL_25;
    }
    unsigned int v39 = *(unsigned __int16 *)&a2[v37];
  }
LABEL_25:
  unsigned int v40 = v39 - 5;
  int v41 = a1;
  uint64_t v42 = v21;
  if (v39 >= 5)
  {
    if (v37 <= 3) {
      uint64_t v43 = v37;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a2;
        if (v37 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v37 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v37 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v37 < 4) {
LABEL_37:
        }
          v44 |= v40 << (8 * v37);
LABEL_38:
        unsigned int v39 = v44 + 5;
        break;
      default:
        break;
    }
  }
  uint64_t v45 = v25;
  uint64_t v46 = ~v18;
  size_t v47 = ~v125;
  uint64_t v48 = ~v15;
  uint64_t v49 = ~v26;
  uint64_t v50 = ~v17;
  switch(v39)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v104 + 32))(a1, a2, v111);
      unint64_t v51 = ((unint64_t)a1 + v98) & ~v97;
      unint64_t v52 = (unint64_t)&a2[v98] & ~v97;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 32))(v51, v52, v114);
      uint64_t v53 = (void *)((v51 + v107 + v101) & ~v101);
      uint64_t v54 = (const void *)((v52 + v107 + v101) & ~v101);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v117 + 48))(v54, 1, v120))
      {
        memcpy(v53, v54, __n);
        if (v37 > 3) {
          goto LABEL_75;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 32))(v53, v54, v120);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v53, 0, 1, v120);
        if (v37 > 3)
        {
LABEL_75:
          *((unsigned char *)a1 + v37) = 0;
          return v41;
        }
      }
      unsigned int v80 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v80 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v37) = 0;
        return v41;
      }
      if (v80 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v37) = 0;
        return v41;
      }
      goto LABEL_75;
    case 1u:
      uint64_t v106 = ~v139;
      uint64_t v109 = v50;
      uint64_t v113 = v15;
      uint64_t v116 = v27 + 1;
      size_t v119 = v29;
      uint64_t v122 = v31;
      size_t v127 = v32;
      uint64_t v133 = *(void *)(v14 - 8);
      uint64_t v136 = v14;
      *a1 = *(void *)v28;
      uint64_t v63 = (void *)(((unint64_t)a1 + v18 + 8) & v46);
      id v64 = (void *)((unint64_t)&v28[v18 + 8] & v46);
      *uint64_t v63 = *v64;
      unint64_t v100 = (unint64_t)v64;
      unint64_t v103 = (unint64_t)v63;
      unsigned int v65 = (void *)(((unint64_t)v63 + v19) & v47);
      unsigned int v66 = (const void *)(((unint64_t)v64 + v19) & v47);
      uint64_t v130 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t))(v42 + 48))(v66, 1))
      {
        memcpy(v65, v66, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v65, v66, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v65, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)v65 + v22) = *((unsigned char *)v66 + v22);
      size_t v81 = (void *)((v103 + v113 + v23 + v22) & v48);
      v82 = (void *)((v100 + v113 + v23 + v22) & v48);
      void *v81 = *v82;
      size_t v83 = (void *)(((unint64_t)v81 + v45) & v49);
      uint64_t v84 = (const void *)(((unint64_t)v82 + v45) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48))(v84, 1, v124))
      {
        size_t v85 = v119;
        memcpy(v83, v84, v119);
        uint64_t v86 = v136;
        uint64_t v87 = v133;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v123 + 32))(v83, v84, v124);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v83, 0, 1, v124);
        uint64_t v86 = v136;
        uint64_t v87 = v133;
        size_t v85 = v119;
      }
      *((unsigned char *)v83 + v85) = *((unsigned char *)v84 + v85);
      unsigned int v88 = (void *)(((unint64_t)v81 + v139 + v116 + v85) & v106);
      int v89 = (void *)(((unint64_t)v82 + v139 + v116 + v85) & v106);
      void *v88 = *v89;
      size_t v90 = (void *)(((unint64_t)v88 + v122) & v109);
      uint64_t v91 = (const void *)(((unint64_t)v89 + v122) & v109);
      uint64_t v92 = v87;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v87 + 48))(v91, 1, v86))
      {
        size_t v93 = v127;
        memcpy(v90, v91, v127);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v92 + 32))(v90, v91, v86);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v90, 0, 1, v86);
        size_t v93 = v127;
      }
      int v41 = a1;
      *((unsigned char *)v90 + v93) = *((unsigned char *)v91 + v93);
      *(void *)(((v103 | 7) + v130) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v100 | 7) + v130) & 0xFFFFFFFFFFFFFFF8);
      if (v37 > 3) {
        goto LABEL_84;
      }
      unsigned int v94 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v94 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v37) = 1;
        return v41;
      }
      if (v94 <= 0xFA) {
LABEL_84:
      }
        *((unsigned char *)a1 + v37) = 1;
      else {
        *(_WORD *)((char *)a1 + v37) = 1;
      }
      return v41;
    case 2u:
      uint64_t v105 = ~v139;
      uint64_t v108 = v50;
      uint64_t v112 = v15;
      uint64_t v115 = v27 + 1;
      size_t v118 = v29;
      uint64_t v121 = v31;
      size_t v126 = v32;
      uint64_t v132 = *(void *)(v14 - 8);
      uint64_t v135 = v14;
      *a1 = *(void *)v28;
      uint64_t v55 = (void *)(((unint64_t)a1 + v18 + 8) & v46);
      uint64_t v56 = (void *)((unint64_t)&v28[v18 + 8] & v46);
      *uint64_t v55 = *v56;
      unint64_t v99 = (unint64_t)v56;
      unint64_t v102 = (unint64_t)v55;
      id v57 = (void *)(((unint64_t)v55 + v19) & v47);
      unsigned int v58 = (const void *)(((unint64_t)v56 + v19) & v47);
      uint64_t v129 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t))(v42 + 48))(v58, 1))
      {
        memcpy(v57, v58, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v42 + 32))(v57, v58, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v57, 0, 1, AssociatedTypeWitness);
      }
      *((unsigned char *)v57 + v22) = *((unsigned char *)v58 + v22);
      uint64_t v67 = (void *)((v102 + v112 + v23 + v22) & v48);
      uint64_t v68 = (void *)((v99 + v112 + v23 + v22) & v48);
      void *v67 = *v68;
      size_t v69 = (void *)(((unint64_t)v67 + v45) & v49);
      uint64_t v70 = (const void *)(((unint64_t)v68 + v45) & v49);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48))(v70, 1, v124))
      {
        size_t v71 = v118;
        memcpy(v69, v70, v118);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v123 + 32))(v69, v70, v124);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v69, 0, 1, v124);
        size_t v71 = v118;
      }
      *((unsigned char *)v69 + v71) = *((unsigned char *)v70 + v71);
      uint64_t v72 = (void *)(((unint64_t)v67 + v139 + v115 + v71) & v105);
      size_t v73 = (void *)(((unint64_t)v68 + v139 + v115 + v71) & v105);
      void *v72 = *v73;
      uint64_t v74 = (void *)(((unint64_t)v72 + v121) & v108);
      unsigned int v75 = (const void *)(((unint64_t)v73 + v121) & v108);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v132 + 48))(v75, 1, v135))
      {
        size_t v76 = v126;
        memcpy(v74, v75, v126);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 32))(v74, v75, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v74, 0, 1, v135);
        size_t v76 = v126;
      }
      int v41 = a1;
      *((unsigned char *)v74 + v76) = *((unsigned char *)v75 + v76);
      unsigned int v77 = (void *)(((v102 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v78 = (void *)(((v99 | 7) + v129) & 0xFFFFFFFFFFFFFFF8);
      void *v77 = *v78;
      *(void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v37 <= 3)
      {
        unsigned int v79 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v79 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 2;
          return v41;
        }
        if (v79 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 2;
          return v41;
        }
      }
      *((unsigned char *)a1 + v37) = 2;
      return v41;
    case 3u:
      *a1 = *(void *)a2;
      if (v37 <= 3)
      {
        unsigned int v59 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v59 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 3;
          return v41;
        }
        if (v59 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 3;
          return v41;
        }
      }
      *((unsigned char *)a1 + v37) = 3;
      return v41;
    case 4u:
      *a1 = *(void *)a2;
      if (v37 <= 3)
      {
        unsigned int v60 = ((1 << (8 * v37)) + 1) >> (8 * v37);
        if (v60 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v37) = 4;
          return v41;
        }
        if (v60 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v37) = 4;
          return v41;
        }
      }
      *((unsigned char *)a1 + v37) = 4;
      return v41;
    default:
      if (v37 > 3) {
        goto LABEL_57;
      }
      unsigned int v61 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      uint64_t v62 = 2;
      if (v61 > 0xFFFA) {
        uint64_t v62 = 4;
      }
      if (v61 <= 0xFA) {
LABEL_57:
      }
        uint64_t v62 = 1;
      memcpy(a1, a2, v62 + v37);
      return v41;
  }
}

unsigned __int8 *sub_1A5554840(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a3[2];
  uint64_t v113 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v113 + 64);
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  uint64_t v115 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v115 + 80);
  uint64_t v112 = v6 + v9;
  uint64_t v146 = v9;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v114 = *(void *)(v115 + 64);
  uint64_t v141 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v11 = (v114 + v141 + ((v6 + v9) & ~v9)) & ~v141;
  uint64_t v126 = v10;
  size_t v12 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v12;
  }
  size_t __n = v12;
  unint64_t v138 = v12 + v11;
  uint64_t v116 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v144 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(unsigned __int8 *)(v144 + 80);
  uint64_t v117 = v7;
  uint64_t v134 = swift_getAssociatedTypeWitness();
  uint64_t v136 = *(void *)(v134 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v136 + 80);
  uint64_t v15 = v14 | 7;
  uint64_t v127 = v8;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = v14;
  uint64_t v18 = v13;
  uint64_t v135 = v16;
  uint64_t v19 = *(void *)(v16 - 8);
  uint64_t v20 = v19;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v21 | 7;
  uint64_t v23 = v14 | v13 | v21 | 7;
  uint64_t v24 = ((v14 | v13 | v21) + 8) & ~v23;
  uint64_t v132 = v13 + 8;
  uint64_t v148 = v144;
  uint64_t v25 = v19;
  if (*(_DWORD *)(v144 + 84)) {
    uint64_t v26 = *(void *)(v144 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v144 + 64) + 1;
  }
  size_t v120 = v26;
  uint64_t v121 = ((v13 + 8) & ~v13) + v26 + 1;
  uint64_t v27 = v121 + v15;
  uint64_t v145 = v14 | 7;
  uint64_t v28 = v14 + 8;
  uint64_t v29 = v136;
  if (*(_DWORD *)(v136 + 84)) {
    uint64_t v30 = *(void *)(v136 + 64);
  }
  else {
    uint64_t v30 = *(void *)(v136 + 64) + 1;
  }
  size_t v122 = v30;
  uint64_t v123 = ((v14 + 8) & ~v14) + v30 + 1;
  uint64_t v31 = v123 + v22;
  uint64_t v133 = v21 + 8;
  uint64_t v137 = v19;
  size_t v32 = *(void *)(v19 + 64);
  if (!*(_DWORD *)(v20 + 84)) {
    ++v32;
  }
  size_t v125 = v32;
  uint64_t v33 = ((v21 + 8) & ~v21) + v32 + ((v123 + v22 + (v27 & ~v15)) & ~v22) + 1;
  unint64_t v34 = (v33 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v34 + 8;
  if (v34 + 8 <= v138) {
    unint64_t v35 = v138;
  }
  unint64_t v36 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  char v38 = 8 * v37;
  if (v37 > 3) {
    goto LABEL_22;
  }
  unsigned int v39 = ((1 << v38) + 1) >> v38;
  if (v39 > 0xFFFA)
  {
    unsigned int v40 = *(_DWORD *)&a1[v37];
    unsigned int v41 = v40 - 5;
    if (v40 < 5) {
      goto LABEL_40;
    }
    goto LABEL_27;
  }
  if (v39 <= 0xFA)
  {
LABEL_22:
    unsigned int v40 = a1[v37];
    unsigned int v41 = v40 - 5;
    if (v40 < 5) {
      goto LABEL_40;
    }
LABEL_27:
    if (v37 <= 3) {
      uint64_t v42 = v37;
    }
    else {
      uint64_t v42 = 4;
    }
    switch(v42)
    {
      case 1:
        int v43 = *a1;
        if (v37 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v43 = *(unsigned __int16 *)a1;
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v43 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v37 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v43 = *(_DWORD *)a1;
        if (v37 < 4) {
LABEL_38:
        }
          v43 |= v41 << v38;
LABEL_39:
        unsigned int v40 = v43 + 5;
        break;
      default:
        goto LABEL_40;
    }
    goto LABEL_40;
  }
  unsigned int v40 = *(unsigned __int16 *)&a1[v37];
  unsigned int v41 = v40 - 5;
  if (v40 >= 5) {
    goto LABEL_27;
  }
LABEL_40:
  uint64_t v110 = ~v146;
  uint64_t v111 = ~v141;
  uint64_t v128 = ~v23;
  uint64_t v129 = ~v18;
  uint64_t v130 = ~v145;
  uint64_t v131 = ~v17;
  uint64_t v124 = v21 | 7;
  uint64_t v139 = ~v22;
  uint64_t v44 = ~v21;
  char v147 = 8 * v37;
  switch(v40)
  {
    case 0u:
      uint64_t v45 = v23;
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v113 + 8))(a1, v116, v25);
      (*(void (**)(unint64_t, uint64_t))(v115 + 8))((unint64_t)&a1[v112] & v110, v117);
      unint64_t v46 = (((unint64_t)&a1[v112] & v110) + v114 + v141) & v111;
      int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v126 + 48))(v46, 1, v127);
      uint64_t v23 = v45;
      char v38 = 8 * v37;
      if (!v47)
      {
        (*(void (**)(unint64_t, uint64_t))(v126 + 8))(v46, v127);
        uint64_t v23 = v45;
        goto LABEL_53;
      }
      break;
    case 1u:
      uint64_t v107 = v33;
      uint64_t v52 = v23;
      swift_release();
      uint64_t v118 = v52;
      uint64_t v53 = (unint64_t)&a1[v52 + 8] & v128;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))((v132 + v53) & v129, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v148 + 8))((v132 + v53) & v129, AssociatedTypeWitness); {
      uint64_t v54 = (v27 + v53) & v130;
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))((v28 + v54) & v131, 1, v134)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))((v28 + v54) & v131, v134);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))((v133 + ((v31 + v54) & v139)) & v44, 1, v135))(*(void (**)(uint64_t, uint64_t))(v137 + 8))((v133 + ((v31 + v54) & v139)) & v44, v135); {
      uint64_t v33 = v107;
      }
      goto LABEL_61;
    case 2u:
      uint64_t v106 = v33;
      uint64_t v48 = v23;
      swift_release();
      uint64_t v118 = v48;
      uint64_t v49 = (unint64_t)&a1[v48 + 8] & v128;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))((v132 + v49) & v129, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v148 + 8))((v132 + v49) & v129, AssociatedTypeWitness); {
      uint64_t v50 = (v27 + v49) & v130;
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))((v28 + v50) & v131, 1, v134)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))((v28 + v50) & v131, v134);
      }
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))((v133 + ((v31 + v50) & v139)) & v44, 1, v135))(*(void (**)(uint64_t, uint64_t))(v137 + 8))((v133 + ((v31 + v50) & v139)) & v44, v135); {
      uint64_t v33 = v106;
      }
LABEL_61:
      swift_release();
      char v38 = 8 * v37;
      uint64_t v23 = v118;
      break;
    case 3u:
      uint64_t v51 = v23;
      swift_release();
      goto LABEL_52;
    case 4u:
      uint64_t v51 = v23;

LABEL_52:
      uint64_t v23 = v51;
LABEL_53:
      char v38 = 8 * v37;
      break;
    default:
      break;
  }
  uint64_t v119 = v44;
  uint64_t v55 = v29;
  if (v37 > 3) {
    goto LABEL_65;
  }
  unsigned int v56 = ((1 << v38) + 1) >> v38;
  if (v56 > 0xFFFA)
  {
    unsigned int v57 = *(_DWORD *)&a2[v37];
    unsigned int v58 = v57 - 5;
    if (v57 < 5) {
      goto LABEL_83;
    }
    goto LABEL_70;
  }
  if (v56 > 0xFA)
  {
    unsigned int v57 = *(unsigned __int16 *)&a2[v37];
    unsigned int v58 = v57 - 5;
    if (v57 < 5) {
      goto LABEL_83;
    }
  }
  else
  {
LABEL_65:
    unsigned int v57 = a2[v37];
    unsigned int v58 = v57 - 5;
    if (v57 < 5) {
      goto LABEL_83;
    }
  }
LABEL_70:
  if (v37 <= 3) {
    uint64_t v59 = v37;
  }
  else {
    uint64_t v59 = 4;
  }
  switch(v59)
  {
    case 1:
      int v60 = *a2;
      if (v37 < 4) {
        goto LABEL_81;
      }
      goto LABEL_82;
    case 2:
      int v60 = *(unsigned __int16 *)a2;
      if (v37 >= 4) {
        goto LABEL_82;
      }
      goto LABEL_81;
    case 3:
      int v60 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v37 >= 4) {
        goto LABEL_82;
      }
      goto LABEL_81;
    case 4:
      int v60 = *(_DWORD *)a2;
      if (v37 < 4) {
LABEL_81:
      }
        v60 |= v58 << v38;
LABEL_82:
      unsigned int v57 = v60 + 5;
      break;
    default:
      break;
  }
LABEL_83:
  switch(v57)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v113 + 32))(a1, a2, v116);
      unint64_t v61 = (unint64_t)&a2[v112] & v110;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v115 + 32))((unint64_t)&a1[v112] & v110, v61, v117);
      uint64_t v62 = (void *)((((unint64_t)&a1[v112] & v110) + v114 + v141) & v111);
      uint64_t v63 = (const void *)((v61 + v114 + v141) & v111);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v126 + 48))(v63, 1, v127))
      {
        memcpy(v62, v63, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v126 + 32))(v62, v63, v127);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v126 + 56))(v62, 0, 1, v127);
      }
      if (v37 <= 3)
      {
        unsigned int v78 = ((1 << v147) + 1) >> v147;
        if (v78 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 0;
          return a1;
        }
        if (v78 > 0xFA)
        {
          *(_WORD *)&a1[v37] = 0;
          return a1;
        }
      }
      a1[v37] = 0;
      break;
    case 1u:
      uint64_t v143 = v28;
      *(void *)a1 = *(void *)a2;
      uint64_t v73 = (unint64_t)&a1[v23 + 8] & v128;
      uint64_t v74 = (unint64_t)&a2[v23 + 8] & v128;
      *(void *)uint64_t v73 = *(void *)v74;
      unsigned int v75 = (void *)((v132 + v73) & v129);
      size_t v76 = (const void *)((v132 + v74) & v129);
      uint64_t v109 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v148 + 48))(v76, 1, AssociatedTypeWitness))
      {
        size_t v77 = v120;
        memcpy(v75, v76, v120);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v148 + 32))(v75, v76, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v75, 0, 1, AssociatedTypeWitness);
        size_t v77 = v120;
      }
      *((unsigned char *)v75 + v77) = *((unsigned char *)v76 + v77);
      uint64_t v84 = (void *)((v73 + v145 + v121) & v130);
      size_t v85 = (void *)((v74 + v145 + v121) & v130);
      void *v84 = *v85;
      uint64_t v86 = (void *)(((unint64_t)v84 + v143) & v131);
      uint64_t v87 = (const void *)(((unint64_t)v85 + v143) & v131);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v87, 1, v134))
      {
        size_t v88 = v122;
        memcpy(v86, v87, v122);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v86, v87, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v86, 0, 1, v134);
        size_t v88 = v122;
      }
      *((unsigned char *)v86 + v88) = *((unsigned char *)v87 + v88);
      unsigned int v94 = (void *)(((unint64_t)v84 + v124 + v123) & v139);
      size_t v95 = (void *)(((unint64_t)v85 + v124 + v123) & v139);
      *unsigned int v94 = *v95;
      unint64_t v96 = (void *)(((unint64_t)v94 + v133) & v119);
      uint64_t v97 = (const void *)(((unint64_t)v95 + v133) & v119);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48))(v97, 1, v135))
      {
        size_t v98 = v125;
        memcpy(v96, v97, v125);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v137 + 32))(v96, v97, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v96, 0, 1, v135);
        size_t v98 = v125;
      }
      *((unsigned char *)v96 + v98) = *((unsigned char *)v97 + v98);
      *(void *)(((v73 | 7) + v109) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v74 | 7) + v109) & 0xFFFFFFFFFFFFFFF8);
      if (v37 <= 3)
      {
        __int16 v102 = 1;
        unsigned int v103 = ((1 << v147) + 1) >> v147;
        if (v103 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 1;
          return a1;
        }
        if (v103 > 0xFA) {
          goto LABEL_140;
        }
      }
      a1[v37] = 1;
      break;
    case 2u:
      uint64_t v142 = v28;
      *(void *)a1 = *(void *)a2;
      uint64_t v64 = (unint64_t)&a1[v23 + 8] & v128;
      uint64_t v65 = (unint64_t)&a2[v23 + 8] & v128;
      *(void *)uint64_t v64 = *(void *)v65;
      unsigned int v66 = (void *)((v132 + v64) & v129);
      uint64_t v67 = (const void *)((v132 + v65) & v129);
      uint64_t v108 = v33;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v148 + 48))(v67, 1, AssociatedTypeWitness))
      {
        size_t v68 = v120;
        memcpy(v66, v67, v120);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v148 + 32))(v66, v67, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v148 + 56))(v66, 0, 1, AssociatedTypeWitness);
        size_t v68 = v120;
      }
      *((unsigned char *)v66 + v68) = *((unsigned char *)v67 + v68);
      unsigned int v79 = (void *)((v64 + v145 + v121) & v130);
      unsigned int v80 = (void *)((v65 + v145 + v121) & v130);
      void *v79 = *v80;
      size_t v81 = (void *)(((unint64_t)v79 + v142) & v131);
      v82 = (const void *)(((unint64_t)v80 + v142) & v131);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v82, 1, v134))
      {
        size_t v83 = v122;
        memcpy(v81, v82, v122);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v81, v82, v134);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v81, 0, 1, v134);
        size_t v83 = v122;
      }
      *((unsigned char *)v81 + v83) = *((unsigned char *)v82 + v83);
      int v89 = (void *)(((unint64_t)v79 + v124 + v123) & v139);
      size_t v90 = (void *)(((unint64_t)v80 + v124 + v123) & v139);
      void *v89 = *v90;
      uint64_t v91 = (void *)(((unint64_t)v89 + v133) & v119);
      uint64_t v92 = (const void *)(((unint64_t)v90 + v133) & v119);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48))(v92, 1, v135))
      {
        size_t v93 = v125;
        memcpy(v91, v92, v125);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v137 + 32))(v91, v92, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v91, 0, 1, v135);
        size_t v93 = v125;
      }
      *((unsigned char *)v91 + v93) = *((unsigned char *)v92 + v93);
      unint64_t v99 = (void *)(((v64 | 7) + v108) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v100 = (void *)(((v65 | 7) + v108) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v99 = *v100;
      *(void *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v37 <= 3)
      {
        unsigned int v101 = ((1 << v147) + 1) >> v147;
        if (v101 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 2;
          return a1;
        }
        if (v101 > 0xFA)
        {
          __int16 v102 = 2;
          goto LABEL_140;
        }
      }
      a1[v37] = 2;
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      if (v37 <= 3)
      {
        unsigned int v69 = ((1 << v38) + 1) >> v38;
        if (v69 > 0xFFFA)
        {
          *(_DWORD *)&a1[v37] = 3;
          return a1;
        }
        if (v69 > 0xFA)
        {
          __int16 v102 = 3;
          goto LABEL_140;
        }
      }
      a1[v37] = 3;
      break;
    case 4u:
      *(void *)a1 = *(void *)a2;
      if (v37 > 3) {
        goto LABEL_95;
      }
      unsigned int v70 = ((1 << v38) + 1) >> v38;
      if (v70 > 0xFFFA)
      {
        *(_DWORD *)&a1[v37] = 4;
        return a1;
      }
      if (v70 > 0xFA)
      {
        __int16 v102 = 4;
LABEL_140:
        *(_WORD *)&a1[v37] = v102;
      }
      else
      {
LABEL_95:
        a1[v37] = 4;
      }
      break;
    default:
      if (v37 > 3) {
        goto LABEL_100;
      }
      unsigned int v71 = ((1 << v38) + 1) >> v38;
      uint64_t v72 = 2;
      if (v71 > 0xFFFA) {
        uint64_t v72 = 4;
      }
      if (v71 <= 0xFA) {
LABEL_100:
      }
        uint64_t v72 = 1;
      memcpy(a1, a2, v72 + v37);
      break;
  }
  return a1;
}

uint64_t sub_1A55559EC(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v45 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = ((v6 + 8) & ~v6) + (v8 | 7) + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  uint64_t v14 = (v13 + 1) & ~(v8 | 7);
  uint64_t v15 = ((v8 + 8) & ~v8) + v12 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v15;
  }
  uint64_t v16 = (v15 + v14 + 1) & ~v12;
  unint64_t v17 = ((v11 + 8) & ~v11)
      + *(void *)(v9 + 64)
      + (((v8 | v6 | v11) & 0xF8 ^ 0x1F8) & ((v8 | v6 | v11) + 8));
  if (!*(_DWORD *)(v10 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  if (v18 + 8 <= v45) {
    unint64_t v19 = v45;
  }
  unint64_t v20 = ((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= v19) {
    unint64_t v20 = v19;
  }
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  if (v20 > 3)
  {
    int v21 = 6;
    goto LABEL_19;
  }
  unsigned int v22 = ((1 << (8 * v20)) + 1) >> (8 * v20);
  if (v22 <= 0xFFFA)
  {
    int v21 = v22 + 5;
    if (v22 > 0xFA)
    {
      char v24 = 16;
      unsigned int v23 = a2;
LABEL_20:
      unsigned int v25 = (1 << v24) - v21;
      if ((v25 & 0x80000000) != 0) {
        unsigned int v25 = 0x7FFFFFFF;
      }
      if (v20 > 3) {
        goto LABEL_28;
      }
LABEL_25:
      unsigned int v26 = ((1 << (8 * v20)) + 1) >> (8 * v20);
      uint64_t v27 = 2;
      if (v26 > 0xFFFA) {
        uint64_t v27 = 4;
      }
      if (v26 > 0xFA) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
LABEL_19:
    unsigned int v23 = a2;
    char v24 = 8;
    goto LABEL_20;
  }
  unsigned int v25 = 0x7FFFFFFF;
  unsigned int v23 = a2;
  if (v20 <= 3) {
    goto LABEL_25;
  }
LABEL_28:
  uint64_t v27 = 1;
LABEL_29:
  if (!v23) {
    return 0;
  }
  if (v23 <= v25) {
    goto LABEL_48;
  }
  unint64_t v28 = v27 + v20;
  char v29 = 8 * v28;
  if (v28 <= 3)
  {
    unsigned int v31 = ((v23 - v25 + ~(-1 << v29)) >> v29) + 1;
    if (HIWORD(v31))
    {
      int v30 = *(_DWORD *)((char *)a1 + v28);
      if (!v30) {
        goto LABEL_48;
      }
      goto LABEL_40;
    }
    if (v31 > 0xFF)
    {
      int v30 = *(unsigned __int16 *)((char *)a1 + v28);
      if (!*(unsigned __int16 *)((char *)a1 + v28)) {
        goto LABEL_48;
      }
      goto LABEL_40;
    }
    if (v31 < 2)
    {
LABEL_48:
      if (v25)
      {
        if (v20 <= 3)
        {
          unsigned int v39 = ((1 << (8 * v20)) + 1) >> (8 * v20);
          if (v39 > 0xFFFA)
          {
            unsigned int v34 = *(_DWORD *)((char *)a1 + v20);
            unsigned int v35 = ~v34;
LABEL_58:
            unsigned int v42 = 0x7FFFFFFF;
LABEL_59:
            if (v42 > v35) {
              return -v34;
            }
            else {
              return 0;
            }
          }
          int v37 = v39 + 5;
          if (v39 > 0xFA)
          {
            int v41 = *(unsigned __int16 *)((char *)a1 + v20);
            unsigned int v34 = v41 | 0xFFFF0000;
            unsigned int v35 = v41 ^ 0xFFFF;
            char v36 = 16;
          }
          else
          {
            int v40 = *((unsigned __int8 *)a1 + v20);
            unsigned int v34 = v40 | 0xFFFFFF00;
            unsigned int v35 = v40 ^ 0xFF;
            char v36 = 8;
          }
        }
        else
        {
          int v33 = *((unsigned __int8 *)a1 + v20);
          unsigned int v34 = v33 | 0xFFFFFF00;
          unsigned int v35 = v33 ^ 0xFF;
          char v36 = 8;
          int v37 = 6;
        }
        unsigned int v42 = (1 << v36) - v37;
        if ((v42 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        goto LABEL_58;
      }
      return 0;
    }
  }
  int v30 = *((unsigned __int8 *)a1 + v28);
  if (!*((unsigned char *)a1 + v28)) {
    goto LABEL_48;
  }
LABEL_40:
  int v32 = (v30 - 1) << v29;
  if (v28 > 3) {
    int v32 = 0;
  }
  if (v28)
  {
    if (v28 > 3) {
      LODWORD(v28) = 4;
    }
    switch((int)v28)
    {
      case 2:
        LODWORD(v28) = *a1;
        break;
      case 3:
        LODWORD(v28) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v28) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v28) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v25 + (v28 | v32) + 1;
}

void sub_1A5555F7C(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v4 = *(void *)(a4[4] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  unint64_t v40 = v5
      + ((((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
        + *(void *)(*(void *)(a4[3] - 8) + 64)
        + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = ((v7 + 8) & ~v7) + (v9 | 7) + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  uint64_t v15 = (v14 + 1) & ~(v9 | 7);
  uint64_t v16 = ((v9 + 8) & ~v9) + v13 + *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v16;
  }
  uint64_t v17 = (v16 + v15 + 1) & ~v13;
  unint64_t v18 = ((v12 + 8) & ~v12)
      + *(void *)(v10 + 64)
      + (((v9 | v7 | v12) & 0xF8 ^ 0x1F8) & ((v9 | v7 | v12) + 8));
  if (!*(_DWORD *)(v11 + 84)) {
    ++v18;
  }
  unint64_t v19 = (v18 + v17 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 8;
  if (v19 + 8 <= v40) {
    unint64_t v20 = v40;
  }
  unint64_t v21 = ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 8) {
    unint64_t v21 = 8;
  }
  char v22 = 8 * v21;
  if (v21 > 3)
  {
    int v23 = 6;
    goto LABEL_17;
  }
  unsigned int v31 = ((1 << v22) + 1) >> v22;
  if (v31 <= 0xFFFA)
  {
    int v23 = v31 + 5;
    if (v31 > 0xFA)
    {
      char v27 = 16;
      char v24 = a1;
      unsigned int v26 = a3;
      unsigned int v25 = a2;
LABEL_18:
      unsigned int v28 = (1 << v27) - v23;
      if ((v28 & 0x80000000) != 0) {
        unsigned int v28 = 0x7FFFFFFF;
      }
      if (v21 > 3) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
LABEL_17:
    char v24 = a1;
    unsigned int v26 = a3;
    unsigned int v25 = a2;
    char v27 = 8;
    goto LABEL_18;
  }
  unsigned int v28 = 0x7FFFFFFF;
  char v24 = a1;
  unsigned int v26 = a3;
  unsigned int v25 = a2;
  if (v21 > 3)
  {
LABEL_29:
    uint64_t v30 = 1;
    goto LABEL_30;
  }
LABEL_21:
  unsigned int v29 = ((1 << v22) + 1) >> v22;
  uint64_t v30 = 2;
  if (v29 > 0xFFFA) {
    uint64_t v30 = 4;
  }
  if (v29 <= 0xFA) {
    goto LABEL_29;
  }
LABEL_30:
  size_t v32 = v30 + v21;
  if (v26 <= v28)
  {
    int v33 = 0;
  }
  else if (v32 <= 3)
  {
    unsigned int v36 = ((v26 - v28 + ~(-1 << (8 * v32))) >> (8 * v32)) + 1;
    if (HIWORD(v36))
    {
      int v33 = 4;
    }
    else if (v36 >= 0x100)
    {
      int v33 = 2;
    }
    else
    {
      int v33 = v36 > 1;
    }
  }
  else
  {
    int v33 = 1;
  }
  if (v28 < v25)
  {
    unsigned int v34 = ~v28 + v25;
    if (v32 < 4)
    {
      int v35 = (v34 >> (8 * v32)) + 1;
      if (v32)
      {
        int v37 = v34 & ~(-1 << (8 * v32));
        bzero(v24, v32);
        if (v32 == 3)
        {
          *(_WORD *)char v24 = v37;
          v24[2] = BYTE2(v37);
        }
        else if (v32 == 2)
        {
          *(_WORD *)char v24 = v37;
        }
        else
        {
          *char v24 = v37;
        }
      }
    }
    else
    {
      bzero(v24, v32);
      *(_DWORD *)char v24 = v34;
      int v35 = 1;
    }
    switch(v33)
    {
      case 1:
        v24[v32] = v35;
        return;
      case 2:
        *(_WORD *)&v24[v32] = v35;
        return;
      case 3:
        goto LABEL_66;
      case 4:
        *(_DWORD *)&v24[v32] = v35;
        return;
      default:
        return;
    }
  }
  switch(v33)
  {
    case 1:
      v24[v32] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_50;
    case 2:
      *(_WORD *)&v24[v32] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_50;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x1A55564F8);
    case 4:
      *(_DWORD *)&v24[v32] = 0;
      goto LABEL_49;
    default:
LABEL_49:
      if (!v25) {
        return;
      }
LABEL_50:
      int v38 = -v25;
      if (v21 > 3) {
        goto LABEL_51;
      }
      unsigned int v39 = ((1 << v22) + 1) >> v22;
      if (v39 > 0xFFFA)
      {
        *(_DWORD *)&v24[v21] = v38;
      }
      else if (v39 <= 0xFA)
      {
LABEL_51:
        v24[v21] = v38;
      }
      else
      {
        *(_WORD *)&v24[v21] = v38;
      }
      return;
  }
}

uint64_t sub_1A5556520(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[4] - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  if (!*(_DWORD *)(v2 + 84)) {
    ++v3;
  }
  unint64_t v24 = v3
      + ((((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
        + *(void *)(*(void *)(a2[3] - 8) + 64)
        + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = ((v5 + 8) & ~v5) + (v7 | 7) + *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v12;
  }
  uint64_t v13 = (v12 + 1) & ~(v7 | 7);
  uint64_t v14 = ((v7 + 8) & ~v7) + v11 + *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  uint64_t v15 = (v14 + v13 + 1) & ~v11;
  unint64_t v16 = ((v10 + 8) & ~v10)
      + *(void *)(v8 + 64)
      + (((v7 | v5 | v10) & 0xF8 ^ 0x1F8) & ((v7 | v5 | v10) + 8));
  if (!*(_DWORD *)(v9 + 84)) {
    ++v16;
  }
  unint64_t v17 = (v16 + v15 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = v17 + 8;
  if (v17 + 8 <= v24) {
    unint64_t v18 = v24;
  }
  unint64_t v19 = ((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= v18) {
    unint64_t v19 = v18;
  }
  if (v19 <= 8) {
    unint64_t v19 = 8;
  }
  if (v19 > 3) {
    goto LABEL_16;
  }
  unsigned int v21 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v21 > 0xFFFA)
  {
    uint64_t result = *(unsigned int *)&a1[v19];
  }
  else
  {
    if (v21 <= 0xFA)
    {
LABEL_16:
      uint64_t result = a1[v19];
      goto LABEL_21;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v19];
  }
LABEL_21:
  if (result >= 5)
  {
    if (v19 <= 3) {
      uint64_t v22 = v19;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *a1;
        if (v19 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 2:
        int v23 = *(unsigned __int16 *)a1;
        if (v19 >= 4) {
          goto LABEL_33;
        }
        goto LABEL_31;
      case 3:
        int v23 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v19 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 4:
        int v23 = *(_DWORD *)a1;
        if (v19 < 4) {
LABEL_31:
        }
          uint64_t result = (v23 | ((result - 5) << (8 * v19))) + 5;
        else {
LABEL_33:
        }
          uint64_t result = (v23 + 5);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1A5556914(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v30 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = ((v6 + 8) & ~v6) + (v8 | 7) + *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  uint64_t v14 = (v13 + 1) & ~(v8 | 7);
  uint64_t v15 = ((v8 + 8) & ~v8) + v12 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v15;
  }
  uint64_t v16 = (v15 + v14 + 1) & ~v12;
  unint64_t v17 = ((v11 + 8) & ~v11)
      + *(void *)(v9 + 64)
      + (((v8 | v6 | v11) & 0xF8 ^ 0x1F8) & ((v8 | v6 | v11) + 8));
  if (!*(_DWORD *)(v10 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  if (v18 + 8 <= v30) {
    unint64_t v19 = v30;
  }
  unint64_t v20 = ((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= v19) {
    unint64_t v20 = v19;
  }
  if (v20 <= 8) {
    size_t v21 = 8;
  }
  else {
    size_t v21 = v20;
  }
  if (a2 > 4)
  {
    unsigned int v22 = a2 - 5;
    if (v21 < 4)
    {
      int v25 = (v22 >> (8 * v21)) + 5;
      v22 &= ~(-1 << (8 * v21));
      int v23 = a1;
      unsigned int v26 = (int *)&a1[v21];
      unsigned int v27 = ((1 << (8 * v21)) + 1) >> (8 * v21);
      if (v27 > 0xFFFA)
      {
        *unsigned int v26 = v25;
      }
      else if (v27 > 0xFA)
      {
        *(_WORD *)unsigned int v26 = v25;
      }
      else
      {
        *(unsigned char *)unsigned int v26 = v25;
      }
    }
    else
    {
      int v23 = a1;
      a1[v21] = 5;
    }
    if (v21 >= 4) {
      int v28 = 4;
    }
    else {
      int v28 = v21;
    }
    bzero(v23, v21);
    switch(v28)
    {
      case 2:
        *(_WORD *)int v23 = v22;
        break;
      case 3:
        *(_WORD *)int v23 = v22;
        v23[2] = BYTE2(v22);
        break;
      case 4:
        *(_DWORD *)int v23 = v22;
        break;
      default:
        *int v23 = v22;
        break;
    }
  }
  else
  {
    if (v21 > 3)
    {
LABEL_18:
      a1[v21] = a2;
      return;
    }
    unsigned int v24 = ((1 << (8 * v21)) + 1) >> (8 * v21);
    if (v24 > 0xFFFA)
    {
      *(_DWORD *)&a1[v21] = a2;
    }
    else
    {
      if (v24 <= 0xFA) {
        goto LABEL_18;
      }
      *(_WORD *)&a1[v21] = a2;
    }
  }
}

uint64_t type metadata accessor for CombineLatestStateMachine.State.Upstream()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A5556D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 72);
}

uint64_t sub_1A5556D88()
{
  uint64_t result = sub_1A56D5898();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A5556E2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = v9 + ((v7 + 8) & ~(unint64_t)v7) + 1;
  int v11 = v7 & 0x100000;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v15 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    uint64_t v16 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)a2 + v8 + 8) & ~v8, 1, v4))
    {
      memcpy(v15, v16, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v4);
    }
    *((unsigned char *)v15 + v9) = *((unsigned char *)v16 + v9);
  }
  return v3;
}

uint64_t sub_1A5556FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(v2 - 8);
  unint64_t v3 = (a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v2);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
    return v5(v3, v2);
  }
  return result;
}

void *sub_1A555707C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    uint64_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *((unsigned char *)v7 + v14) = *((unsigned char *)v8 + v14);
  return a1;
}

void *sub_1A55571B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, v4);
  int v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_12;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, v4);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  if (v12) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = v13 + 1;
  }
  memcpy(v7, v8, v14);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v15 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v5 + 64) + 1;
  }
  *((unsigned char *)v7 + v15) = *((unsigned char *)v8 + v15);
  return a1;
}

void *sub_1A5557360(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    size_t v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (v9) {
    size_t v14 = v10;
  }
  else {
    size_t v14 = v10 + 1;
  }
  *((unsigned char *)v7 + v14) = *((unsigned char *)v8 + v14);
  return a1;
}

void *sub_1A5557494(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  int v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v10 = v9(v7, 1, v4);
  int v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_12;
    }
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, v4);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    int v12 = *(_DWORD *)(v5 + 84);
    size_t v13 = *(void *)(v5 + 64);
  }
  if (v12) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = v13 + 1;
  }
  memcpy(v7, v8, v14);
LABEL_12:
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v15 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v5 + 64) + 1;
  }
  *((unsigned char *)v7 + v15) = *((unsigned char *)v8 + v15);
  return a1;
}

uint64_t sub_1A5557644(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 40) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  if (v5) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = 2;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_29;
  }
  uint64_t v11 = v9 + *(void *)(*(void *)(*(void *)(a3 + 40) - 8) + 64) + ((v8 + 8) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_29:
      if (v6 > 0x7FFFFFFE)
      {
        unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v8 + 8) & ~v8);
        if (v18 >= 2) {
          return v18 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v17 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v17) = -1;
        }
        if ((v17 + 1) >= 2) {
          return v17;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_29;
  }
LABEL_21:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_1A5557838(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 40) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 40) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = v12 + ((v11 + 8) & ~v11) + 1;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v12 + ((v11 + 8) & ~v11) != -1)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1A5557B60);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if (v9 > 0x7FFFFFFE)
        {
          unint64_t v20 = (unsigned char *)((unint64_t)&a1[v11 + 8] & ~v11);
          if (v9 >= a2)
          {
            uint64_t v24 = a2 + 1;
            int v25 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v26 = (unint64_t)&a1[v11 + 8] & ~v11;
            v25(v26, v24);
          }
          else
          {
            if (v12 <= 3) {
              int v21 = ~(-1 << (8 * v12));
            }
            else {
              int v21 = -1;
            }
            if (v12)
            {
              int v22 = v21 & (~v9 + a2);
              if (v12 <= 3) {
                int v23 = v12;
              }
              else {
                int v23 = 4;
              }
              bzero(v20, v12);
              switch(v23)
              {
                case 2:
                  *(_WORD *)unint64_t v20 = v22;
                  break;
                case 3:
                  *(_WORD *)unint64_t v20 = v22;
                  v20[2] = BYTE2(v22);
                  break;
                case 4:
                  *(_DWORD *)unint64_t v20 = v22;
                  break;
                default:
                  *unint64_t v20 = v22;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)a1 = 0;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *(void *)a1 = a2;
        }
      }
      return;
  }
}

uint64_t sub_1A5557B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  int v8 = (char *)a4 + *(int *)(v7 + 76);
  uint64_t v9 = sub_1A56D5898();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *((unsigned char *)a4 + *(int *)(v7 + 80)) = a3;
  return result;
}

uint64_t sub_1A5557C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = sub_1A56D5898();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v14 = a7 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v15 = a7 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a7, a1, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v14, a2, a5);
  uint64_t v16 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, a3, v12);
  type metadata accessor for CombineLatestStateMachine.State();
  swift_storeEnumTagMultiPayload();
  LODWORD(v14) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 48))(a3, 1, a6);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v12);
  uint64_t result = type metadata accessor for CombineLatestStateMachine();
  if (v14 == 1) {
    uint64_t v18 = 2;
  }
  else {
    uint64_t v18 = 3;
  }
  *(void *)(a7 + *(int *)(result + 68)) = v18;
  return result;
}

id sub_1A5557E8C(void *a1)
{
  uint64_t v3 = a1[2];
  uint64_t v2 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v89 = AssociatedTypeWitness;
  uint64_t v9 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v88 = swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v98 = v3;
  uint64_t v99 = v2;
  uint64_t v100 = v4;
  uint64_t v101 = swift_getAssociatedTypeWitness();
  uint64_t v102 = v5;
  uint64_t v103 = v7;
  uint64_t v104 = v8;
  uint64_t v91 = v10;
  uint64_t v92 = v9;
  uint64_t v11 = v97;
  uint64_t v94 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v87 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  size_t v90 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  size_t v93 = (char *)&v74 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v74 - v17);
  MEMORY[0x1F4188790](v16);
  unint64_t v96 = (char *)&v74 - v19;
  uint64_t v98 = v3;
  uint64_t v99 = v2;
  uint64_t v100 = v4;
  uint64_t v101 = v5;
  uint64_t v102 = v7;
  uint64_t v103 = v8;
  uint64_t v20 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  int v23 = (id *)((char *)&v74 - v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v74 - v22, v11, v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v25 = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      id v82 = *v23;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      type metadata accessor for Deque();
      uint64_t v29 = v11;
      uint64_t v30 = TupleTypeMetadata3;
      unsigned int v31 = (char *)v23 + *(int *)(swift_getTupleTypeMetadata3() + 48);
      swift_release();
      uint64_t v32 = *(int *)(v30 + 48);
      int v33 = &v96[v32];
      uint64_t v88 = (uint64_t)&v96[v32];
      uint64_t v34 = *(int *)(v30 + 64);
      int v35 = &v96[v34];
      size_t v76 = &v96[v34];
      unsigned int v36 = &v31[v32];
      int v37 = &v31[v34];
      uint64_t v86 = *(void *)(v92 - 8);
      int v38 = v31;
      uint64_t v39 = v92;
      (*(void (**)(char *, char *))(v86 + 32))(v96, v38);
      uint64_t v89 = *(void *)(v91 - 8);
      unint64_t v40 = v36;
      uint64_t v41 = v91;
      (*(void (**)(char *, char *))(v89 + 32))(v33, v40);
      uint64_t v85 = *(void *)(v94 - 8);
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v35, v37, v94);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v29, v20);
      swift_storeEnumTagMultiPayload();
      size_t v81 = (char *)v18 + *(int *)(v30 + 48);
      unsigned int v42 = v81;
      int v43 = (char *)v18 + *(int *)(v30 + 64);
      unsigned int v80 = v43;
      uint64_t v44 = v86;
      uint64_t v84 = *(void (**)(void))(v86 + 16);
      uint64_t v97 = v86 + 16;
      uint64_t v45 = v39;
      ((void (*)(uint64_t *, char *, uint64_t))v84)(v18, v96, v39);
      size_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      v83(v42, v88, v41);
      unint64_t v46 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
      int v47 = v76;
      v46(v43, v76, v94);
      unsigned int v75 = v46;
      uint64_t v78 = *v18;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v86 = v44 + 8;
      unsigned int v79 = v48;
      v48((char *)v18, v39);
      uint64_t v49 = &v93[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v50 = TupleTypeMetadata3;
      size_t v77 = &v93[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v51 = v77;
      v84();
      v83(v49, v88, v41);
      uint64_t v52 = v94;
      v46(v51, v47, v94);
      uint64_t v74 = *(void *)v49;
      uint64_t v53 = *(void (**)(char *, uint64_t))(v89 + 8);
      v89 += 8;
      v53(v49, v41);
      uint64_t v54 = v90;
      uint64_t v55 = &v90[*(int *)(v50 + 48)];
      unsigned int v56 = &v90[*(int *)(v50 + 64)];
      ((void (*)(char *, char *, uint64_t))v84)(v90, v96, v39);
      v83(v55, v88, v41);
      v75(v56, v47, v52);
      uint64_t v97 = *(void *)v56;
      unsigned int v57 = *(void (**)(char *, uint64_t))(v85 + 8);
      unsigned int v58 = v56;
      uint64_t v59 = v78;
      v57(v58, v52);
      v53(v55, v41);
      uint64_t v60 = v45;
      uint64_t v61 = v45;
      uint64_t v62 = v79;
      v79(v54, v61);
      v57(v77, v52);
      v62(v93, v60);
      v57(v80, v52);
      v53(v81, v41);
      if (!v59)
      {
        uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v66 = v87;
        uint64_t v67 = v74;
        uint64_t v68 = v97;
        if (!v74) {
          goto LABEL_18;
        }
        goto LABEL_13;
      }
      uint64_t v63 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v65 = v63[2];
      unint64_t v64 = v63[3];
      uint64_t v66 = v87;
      if (v65 >= v64 >> 1) {
        uint64_t v63 = sub_1A54E2AF4((void *)(v64 > 1), v65 + 1, 1, v63);
      }
      uint64_t v67 = v74;
      uint64_t v68 = v97;
      v63[2] = v65 + 1;
      v63[v65 + 4] = v59;
      if (v67)
      {
LABEL_13:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v63 = sub_1A54E2AF4(0, v63[2] + 1, 1, v63);
        }
        unint64_t v70 = v63[2];
        unint64_t v69 = v63[3];
        if (v70 >= v69 >> 1) {
          uint64_t v63 = sub_1A54E2AF4((void *)(v69 > 1), v70 + 1, 1, v63);
        }
        v63[2] = v70 + 1;
        v63[v70 + 4] = v67;
      }
LABEL_18:
      if (v68)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v63 = sub_1A54E2AF4(0, v63[2] + 1, 1, v63);
        }
        unint64_t v72 = v63[2];
        unint64_t v71 = v63[3];
        if (v72 >= v71 >> 1) {
          uint64_t v63 = sub_1A54E2AF4((void *)(v71 > 1), v72 + 1, 1, v63);
        }
        v63[2] = v72 + 1;
        v63[v72 + 4] = v68;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v96, TupleTypeMetadata3);
      return v82;
    case 2:
      __break(1u);
      goto LABEL_27;
    case 3:
      swift_release();
      goto LABEL_10;
    case 4:

LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v11, v20);
      swift_storeEnumTagMultiPayload();
      return 0;
    case 5:
      return (id)v25;
    case 6:
LABEL_27:
      __break(1u);
      JUMPOUT(0x1A55588BCLL);
    default:
      uint64_t v26 = sub_1A56D5898();
      uint64_t v27 = swift_getTupleTypeMetadata3();
      int v28 = (char *)v23 + *(int *)(v27 + 48);
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))((char *)v23 + *(int *)(v27 + 64), v26);
      (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v28, v2);
      (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8))(v23, v3);
      return 0;
  }
}

uint64_t sub_1A55588D8(void **a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v75 = a2;
  size_t v83 = a1;
  uint64_t v6 = a3[7];
  uint64_t v7 = a3[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v84 = sub_1A56D5898();
  MEMORY[0x1F4188790](v84);
  uint64_t v74 = (char *)&v65 - v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[3];
  uint64_t v85 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1A56D5898();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v73 = (char *)&v65 - v12;
  uint64_t v13 = a3[5];
  uint64_t v14 = a3[2];
  uint64_t v15 = v13;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1A56D5898();
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v72 = (char *)&v65 - v18;
  uint64_t v91 = v14;
  uint64_t v92 = v10;
  uint64_t v93 = v7;
  uint64_t v94 = v15;
  uint64_t v95 = v9;
  uint64_t v96 = v6;
  uint64_t v19 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  id v82 = (void **)((char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20);
  int v23 = (char *)&v65 - v22;
  uint64_t v79 = v24;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v76 = v4;
  v25((char *)&v65 - v22, v4, v19);
  uint64_t v80 = v19;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v77 = v16;
  uint64_t v78 = v23;
  if (EnumCaseMultiPayload)
  {
    uint64_t v52 = v15;
    uint64_t v53 = v23;
    uint64_t v54 = v9;
    uint64_t v55 = v6;
    uint64_t v56 = v85;
    uint64_t v57 = AssociatedTypeWitness;
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v60 = swift_release();
        size_t v83 = &v65;
        MEMORY[0x1F4188790](v60);
        id v82 = &v65 - 8;
        strcpy((char *)&v65 - 64, "task upstreams downstreamContinuation buffer ");
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v16;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v56;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v57;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v61 = v77;
        swift_getTupleTypeMetadata3();
        sub_1A56D5898();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
        sub_1A56D6158();
        uint64_t v89 = sub_1A56D5558();
        uint64_t v90 = type metadata accessor for Deque();
        uint64_t v84 = (uint64_t)&v78[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_release();
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v61;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v56;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = AssociatedTypeWitness;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v62 = swift_getTupleTypeMetadata3();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v84, v62);
        goto LABEL_7;
      case 3:
      case 4:
        (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v80);
        __break(1u);
        goto LABEL_5;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_8;
      default:
LABEL_5:
        swift_release();
        size_t v83 = (void **)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v16;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        id v82 = (void *)type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v56;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v91 = v14;
        uint64_t v92 = v10;
        uint64_t v93 = v7;
        uint64_t v94 = v57;
        uint64_t v95 = v52;
        uint64_t v96 = v54;
        uint64_t v97 = v55;
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
        uint64_t v58 = swift_getTupleTypeMetadata3();
        swift_getTupleTypeMetadata3();
        type metadata accessor for Deque();
        uint64_t v59 = &v78[*(int *)(swift_getTupleTypeMetadata3() + 48)];
        swift_release();
        (*(void (**)(char *, uint64_t))(*(void *)(v58 - 8) + 8))(v59, v58);
LABEL_7:
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x1A5559534);
    }
  }
  uint64_t v70 = sub_1A56D5898();
  uint64_t v27 = swift_getTupleTypeMetadata3();
  uint64_t v68 = &v65;
  unint64_t v71 = &v23[*(int *)(v27 + 48)];
  unint64_t v69 = &v23[*(int *)(v27 + 64)];
  MEMORY[0x1F4188790](v27);
  strcpy((char *)&v65 - 64, "task upstreams downstreamContinuation buffer ");
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
  uint64_t v91 = v14;
  uint64_t v92 = v10;
  uint64_t v93 = v7;
  uint64_t v94 = v16;
  uint64_t v95 = v15;
  uint64_t v96 = v9;
  uint64_t v97 = v6;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v91 = v14;
  uint64_t v92 = v10;
  uint64_t v66 = v7;
  uint64_t v93 = v7;
  uint64_t v94 = v85;
  uint64_t v95 = v15;
  uint64_t v96 = v9;
  uint64_t v28 = v9;
  uint64_t v97 = v6;
  uint64_t v29 = v6;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v91 = v14;
  uint64_t v92 = v10;
  uint64_t v81 = v14;
  uint64_t v93 = v7;
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v95 = v15;
  uint64_t v96 = v28;
  uint64_t v30 = v15;
  uint64_t v31 = v28;
  uint64_t v97 = v6;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  sub_1A56D6158();
  uint64_t v89 = sub_1A56D5558();
  uint64_t v90 = type metadata accessor for Deque();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  int v33 = (void *)((char *)v82 + TupleTypeMetadata[12]);
  uint64_t v67 = TupleTypeMetadata[16];
  uint64_t v68 = (void **)TupleTypeMetadata[20];
  void *v82 = v83;
  uint64_t v34 = v81;
  uint64_t v91 = v81;
  uint64_t v92 = v10;
  uint64_t v35 = v10;
  uint64_t v36 = v66;
  uint64_t v37 = v77;
  uint64_t v93 = v66;
  uint64_t v94 = v77;
  uint64_t v38 = v30;
  uint64_t v95 = v30;
  uint64_t v96 = v31;
  uint64_t v39 = v29;
  uint64_t v97 = v29;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v91 = v34;
  uint64_t v92 = v35;
  uint64_t v93 = v36;
  uint64_t v94 = v85;
  uint64_t v95 = v38;
  uint64_t v96 = v31;
  uint64_t v97 = v29;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v91 = v34;
  uint64_t v92 = v35;
  uint64_t v40 = v35;
  uint64_t v93 = v36;
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v95 = v38;
  uint64_t v96 = v31;
  uint64_t v97 = v29;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v41 = swift_getTupleTypeMetadata3();
  unsigned int v42 = (void *)((char *)v33 + *(int *)(v41 + 48));
  unint64_t v65 = (void *)((char *)v33 + *(int *)(v41 + 64));
  uint64_t v43 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v72, 1, 1, v37);
  uint64_t v63 = v31;
  uint64_t v64 = v29;
  uint64_t v44 = v81;
  sub_1A5557B98(0, v43, 0, v33);
  uint64_t v45 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v73, 1, 1, v85);
  uint64_t v63 = v31;
  uint64_t v64 = v39;
  sub_1A5557B98(0, v45, 0, v42);
  uint64_t v46 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v74, 1, 1, AssociatedTypeWitness);
  uint64_t v63 = v31;
  uint64_t v64 = v39;
  sub_1A5557B98(0, v46, 0, v65);
  int v47 = v82;
  *(void *)((char *)v82 + v67) = v75;
  swift_retain();
  uint64_t v48 = swift_getTupleTypeMetadata3();
  uint64_t v49 = Deque.init()(v48);
  *(void **)((char *)v68 + (void)v47) = (void *)v49;
  uint64_t v50 = v80;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void *, uint64_t))(v79 + 40))(v76, v47, v50);
  (*(void (**)(char *))(*(void *)(v70 - 8) + 8))(v69);
  (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v71, v40);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v78, v44);
}

unint64_t sub_1A555954C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v61 = a2;
  uint64_t v54 = a1;
  uint64_t v4 = a3[2];
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v7 = a3[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v56 = (void *)AssociatedTypeWitness;
  uint64_t v11 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v55 = swift_getAssociatedTypeWitness();
  uint64_t v12 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v67 = v7;
  uint64_t v68 = v9;
  uint64_t v69 = v10;
  uint64_t v58 = v12;
  uint64_t v59 = v11;
  uint64_t v13 = v62;
  uint64_t v57 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v14 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v16 = (uint64_t *)((char *)&v47 - v15);
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  uint64_t v66 = v7;
  uint64_t v67 = v9;
  uint64_t v68 = v10;
  uint64_t v17 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v47 - v19);
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))((char *)&v47 - v19, v13, v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v53 = *v20;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      type metadata accessor for Deque();
      uint64_t v21 = TupleTypeMetadata3;
      uint64_t v22 = swift_getTupleTypeMetadata3();
      int v23 = (char *)v20 + *(int *)(v22 + 48);
      uint64_t v55 = *(uint64_t *)((char *)v20 + *(int *)(v22 + 64));
      uint64_t v24 = *(int *)(v21 + 48);
      uint64_t v25 = (void *)((char *)v16 + v24);
      uint64_t v26 = *(int *)(v21 + 64);
      uint64_t v27 = (void *)((char *)v16 + v26);
      uint64_t v28 = &v23[v24];
      uint64_t v29 = &v23[v26];
      uint64_t v30 = *(void *)(v59 - 8);
      uint64_t v31 = *(void (**)(void))(v30 + 32);
      uint64_t v51 = v30 + 32;
      uint64_t v52 = v31;
      ((void (*)(void *))v31)(v16);
      uint64_t v32 = *(void *)(v58 - 8);
      int v33 = *(void (**)(char *, void *, uint64_t))(v32 + 32);
      uint64_t v49 = v32 + 32;
      uint64_t v50 = v33;
      ((void (*)(void *, char *))v33)(v25, v28);
      uint64_t v34 = *(void (**)(char *, void *, uint64_t))(*(void *)(v57 - 8) + 32);
      uint64_t v56 = v27;
      uint64_t v48 = v34;
      ((void (*)(void *, char *))v34)(v27, v29);
      uint64_t v35 = *(void (**)(void *, uint64_t))(v18 + 8);
      v35(v13, v17);
      swift_storeEnumTagMultiPayload();
      if (v54 == 2)
      {
        *uint64_t v56 = v61;
        uint64_t v36 = v25;
      }
      else if (v54 == 1)
      {
        uint64_t v36 = v25;
        *uint64_t v25 = v61;
      }
      else
      {
        if (v54)
        {
LABEL_17:
          swift_release();
          swift_release();
          __break(1u);
          JUMPOUT(0x1A5559C24);
        }
        uint64_t v36 = v25;
        *uint64_t v16 = v61;
      }
      unsigned int v42 = v52;
      v35(v13, v17);
      uint64_t v43 = (char *)v13 + *(int *)(v22 + 48);
      uint64_t v44 = *(int *)(v22 + 64);
      *uint64_t v13 = v53;
      uint64_t v45 = &v43[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v46 = &v43[*(int *)(TupleTypeMetadata3 + 64)];
      v42();
      v50(v45, v36, v58);
      v48(v46, v56, v57);
      *(void *)((char *)v13 + v44) = v55;
      swift_storeEnumTagMultiPayload();
      return 0xF00000000000000FLL;
    case 2u:
      uint64_t v37 = swift_release();
      MEMORY[0x1F4188790](v37);
      strcpy((char *)&v47 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      uint64_t v39 = TupleTypeMetadata3;
      uint64_t v63 = v38;
      uint64_t v64 = TupleTypeMetadata3;
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      sub_1A56D5898();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      sub_1A56D6158();
      uint64_t v65 = sub_1A56D5558();
      uint64_t v66 = type metadata accessor for Deque();
      uint64_t v40 = (char *)v20 + *(int *)(swift_getTupleTypeMetadata() + 48);
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v40, v39);
      return v61;
    case 3u:
      goto LABEL_15;
    case 4u:
      (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
      goto LABEL_8;
    case 5u:
LABEL_8:
      sub_1A56D5438();
      sub_1A5561590();
      swift_allocError();
      sub_1A56D4F98();
      return v61;
    case 6u:
      goto LABEL_16;
    default:
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
  }
}

uint64_t sub_1A5559C40@<X0>(void *a1@<X0>, char *a2@<X1>, char *a3@<X2>, void *a4@<X3>, int **a5@<X8>)
{
  v365 = a3;
  v379 = a2;
  v376 = a1;
  v364 = a5;
  uint64_t v384 = a4[7];
  uint64_t v6 = a4[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v381 = (void (*)(void))AssociatedTypeWitness;
  uint64_t v8 = sub_1A56D5898();
  uint64_t v367 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  v322 = (char *)&v314 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v346 = (char *)&v314 - v12;
  uint64_t v353 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v321 = (char *)&v314 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v336 = (char *)&v314 - v15;
  uint64_t v16 = a4[6];
  uint64_t v17 = a4[3];
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v355 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  v341 = (char *)&v314 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v329 = (char *)&v314 - v22;
  MEMORY[0x1F4188790](v21);
  v327 = (char *)&v314 - v23;
  uint64_t v24 = a4[5];
  v320 = a4;
  uint64_t v25 = a4[2];
  uint64_t v26 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v347 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata3);
  v344 = (char *)&v314 - v27;
  v386 = (void *)sub_1A56D5898();
  uint64_t v383 = *(v386 - 1);
  uint64_t v28 = MEMORY[0x1F4188790](v386);
  v338 = (char *)&v314 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  v330 = (char *)&v314 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v331 = (char *)&v314 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  v323 = (int *)((char *)&v314 - v35);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v326 = (char *)&v314 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v328 = (int *)((char *)&v314 - v39);
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v333 = (char *)&v314 - v41;
  v372 = *(char **)(v26 - 8);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v340 = (char *)&v314 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v335 = (char *)&v314 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  v332 = (char *)&v314 - v47;
  MEMORY[0x1F4188790](v46);
  v345 = (char *)&v314 - v48;
  uint64_t v49 = (void *)sub_1A56D5898();
  uint64_t v382 = *(v49 - 1);
  uint64_t v50 = MEMORY[0x1F4188790](v49);
  v337 = (char *)&v314 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v339 = (void (**)(void))((char *)&v314 - v53);
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  v342 = (char *)&v314 - v55;
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  v343 = (char *)&v314 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  v325 = (char *)&v314 - v59;
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  v324 = (int *)((char *)&v314 - v61);
  MEMORY[0x1F4188790](v60);
  v334 = (uint64_t *)((char *)&v314 - v62);
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v390 = v6;
  uint64_t v391 = v26;
  uint64_t v377 = v26;
  uint64_t v392 = v24;
  uint64_t v393 = v16;
  uint64_t v63 = v384;
  uint64_t v394 = v384;
  uint64_t v64 = (void *)type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v390 = v6;
  uint64_t v391 = v18;
  uint64_t v368 = v18;
  uint64_t v392 = v24;
  uint64_t v393 = v16;
  uint64_t v394 = v63;
  uint64_t v65 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v390 = v6;
  uint64_t v391 = (uint64_t)v381;
  uint64_t v392 = v24;
  uint64_t v393 = v16;
  uint64_t v394 = v63;
  uint64_t v66 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  v378 = v64;
  uint64_t v380 = v65;
  uint64_t v373 = v66;
  uint64_t v369 = swift_getTupleTypeMetadata3();
  uint64_t v351 = *(void *)(v369 - 8);
  uint64_t v67 = MEMORY[0x1F4188790](v369);
  v357 = (uint64_t *)((char *)&v314 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v67);
  v352 = (uint64_t *)((char *)&v314 - v69);
  uint64_t v359 = v25;
  uint64_t v388 = v25;
  uint64_t v389 = v17;
  uint64_t v361 = v17;
  uint64_t v363 = v6;
  uint64_t v390 = v6;
  uint64_t v391 = v24;
  uint64_t v360 = v24;
  uint64_t v362 = v16;
  uint64_t v392 = v16;
  uint64_t v393 = v63;
  uint64_t v70 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v73 = (char **)((char *)&v314 - v72);
  uint64_t v74 = v386;
  uint64_t v75 = swift_getTupleTypeMetadata3();
  v358 = *(char **)(v75 - 8);
  uint64_t v76 = MEMORY[0x1F4188790](v75);
  uint64_t v78 = (char *)&v314 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = MEMORY[0x1F4188790](v76);
  uint64_t v81 = (uint64_t *)((char *)&v314 - v80);
  MEMORY[0x1F4188790](v79);
  size_t v83 = (char *)&v314 - v82;
  uint64_t v84 = v376;
  v375 = *(char **)(v382 + 16);
  v376 = v49;
  uint64_t v366 = v382 + 16;
  ((void (*)(char *, void *, void *))v375)((char *)&v314 - v82, v84, v49);
  uint64_t v85 = (int *)&v83[*(int *)(v75 + 48)];
  uint64_t v86 = *(void (**)(char *, int *, void *))(v383 + 16);
  uint64_t v371 = v383 + 16;
  v370 = v86;
  v86((char *)v85, (int *)v379, v74);
  v374 = (int *)v75;
  uint64_t v87 = *(int *)(v75 + 64);
  v379 = v83;
  uint64_t v88 = &v83[v87];
  uint64_t v89 = *(void (**)(char *, char *, char *))(v367 + 16);
  uint64_t v90 = v365;
  uint64_t v91 = (char *)v8;
  v365 = (char *)(v367 + 16);
  v356 = v89;
  v89(&v83[v87], v90, (char *)v8);
  (*(void (**)(char **, void *, uint64_t))(v71 + 16))(v73, v385, v70);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      v341 = *v73;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      v357 = v81;
      uint64_t v93 = type metadata accessor for Deque();
      uint64_t v94 = v369;
      v330 = (char *)v93;
      uint64_t v95 = swift_getTupleTypeMetadata3();
      uint64_t v96 = (char *)v73 + *(int *)(v95 + 48);
      v340 = (char *)v95;
      uint64_t v97 = *(int *)(v95 + 64);
      v319 = v85;
      uint64_t v98 = v70;
      uint64_t v99 = *(uint64_t *)((char *)v73 + v97);
      uint64_t v100 = *(int *)(v94 + 48);
      uint64_t v101 = (char *)v352 + v100;
      uint64_t v102 = *(int *)(v94 + 64);
      uint64_t v103 = (char *)v352 + v102;
      uint64_t v104 = &v96[v100];
      uint64_t v105 = &v96[v102];
      v339 = (void (**)(void))*(v378 - 1);
      v339[4]();
      v338 = *(char **)(v380 - 8);
      uint64_t v106 = (void (*)(char *, char *))*((void *)v338 + 4);
      v343 = v101;
      uint64_t v107 = v104;
      uint64_t v108 = v357;
      v106(v101, v107);
      v337 = *(char **)(v373 - 8);
      uint64_t v109 = (void (*)(char *, char *))*((void *)v337 + 4);
      v342 = v103;
      uint64_t v110 = v374;
      v109(v103, v105);
      uint64_t v387 = v99;
      uint64_t v111 = v88;
      uint64_t v112 = *(char **)(v71 + 8);
      uint64_t v113 = v385;
      uint64_t v350 = v71 + 8;
      ((void (*)(void *, uint64_t))v112)(v385, v98);
      uint64_t v349 = v98;
      swift_storeEnumTagMultiPayload();
      uint64_t v114 = (char *)v108 + v110[12];
      uint64_t v115 = (char *)v108 + v110[16];
      uint64_t v85 = (int *)v375;
      uint64_t v116 = v376;
      ((void (*)(uint64_t *, char *, void *))v375)(v108, v379, v376);
      v370(v114, v319, v386);
      uint64_t v348 = (uint64_t)v91;
      v356(v115, v111, v91);
      uint64_t v117 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))*((void *)v372 + 6);
      int v118 = v117(v108, 1, v377);
      v335 = v112;
      v331 = v114;
      if (v118 == 1)
      {
        uint64_t v85 = (int *)(v355 + 48);
        uint64_t v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v355 + 48);
        int v120 = v119(v114, 1, v368);
        uint64_t v121 = v353;
        if (v120 != 1)
        {
          uint64_t v85 = v328;
          v370((char *)v328, (int *)v114, v386);
          if ((*(unsigned int (**)(char *, uint64_t, void (*)(void)))(v121 + 48))(v115, 1, v381) == 1)
          {
            uint64_t v202 = v355;
            v203 = v327;
            v381 = *(void (**)(void))(v355 + 32);
            uint64_t v371 = v355 + 32;
            v381();
            uint64_t v85 = v324;
            ((void (*)(int *, char *, void *))v375)(v324, (char *)v352 + *((int *)v378 + 19), v376);
            uint64_t v204 = v377;
            if (v117((uint64_t *)v85, 1, v377) != 1)
            {
              uint64_t v205 = v373;
              v206 = v342;
              v375 = &v342[*(int *)(v373 + 76)];
              uint64_t v207 = TupleTypeMetadata3;
              uint64_t v208 = (uint64_t)v344;
              v209 = &v344[*(int *)(TupleTypeMetadata3 + 48)];
              v210 = &v344[*(int *)(TupleTypeMetadata3 + 64)];
              (*((void (**)(char *, int *, uint64_t))v372 + 4))(v344, v85, v204);
              v211 = v209;
              uint64_t v212 = v368;
              (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v211, v203, v368);
              v213 = v210;
              uint64_t v141 = v205;
              v356(v213, v375, (char *)v348);
              Deque.append(_:)(v208, (uint64_t)v330);
              uint64_t v214 = v208;
              unint64_t v138 = v206;
              (*(void (**)(uint64_t, uint64_t))(v347 + 8))(v214, v207);
              (*((void (**)(char *, int *))v358 + 1))(v379, v374);
              v215 = &v343[*(int *)(v380 + 76)];
              uint64_t v143 = v383;
              uint64_t v142 = v386;
              (*(void (**)(char *, void *))(v383 + 8))(v215, v386);
              ((void (*)(char *, char *, uint64_t))v381)(v215, v203, v212);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v202 + 56))(v215, 0, 1, v212);
              uint64_t v113 = v385;
              goto LABEL_26;
            }
            goto LABEL_65;
          }
LABEL_64:
          swift_release();
          (*(void (**)(int *, uint64_t))(v355 + 8))(v85, v368);
          __break(1u);
LABEL_65:
          swift_release();
          __break(1u);
          goto LABEL_66;
        }
        uint64_t v122 = v353;
        uint64_t v123 = v381;
        if ((*(unsigned int (**)(char *, uint64_t, void (*)(void)))(v353 + 48))(v115, 1, v381) != 1)
        {
          uint64_t v124 = *(void (**)(char *, char *, char *))(v122 + 32);
          v365 = (char *)(v122 + 32);
          v356 = v124;
          v124(v336, v115, (char *)v123);
          size_t v125 = v325;
          ((void (*)(char *, char *, void *))v375)(v325, (char *)v352 + *((int *)v378 + 19), v376);
          if (v117((uint64_t *)v125, 1, v377) != 1)
          {
            uint64_t v126 = v326;
            v370(v326, (int *)&v343[*(int *)(v380 + 76)], v386);
            uint64_t v127 = v368;
            int v128 = v119(v126, 1, v368);
            uint64_t v129 = v373;
            if (v128 != 1)
            {
              uint64_t v130 = v353;
              uint64_t v131 = v346;
              (*(void (**)(char *, char *, void (*)(void)))(v353 + 16))(v346, v336, v123);
              v375 = *(char **)(v130 + 56);
              ((void (*)(char *, void, uint64_t, void (*)(void)))v375)(v131, 0, 1, v123);
              uint64_t v132 = TupleTypeMetadata3;
              uint64_t v133 = (uint64_t)v344;
              uint64_t v134 = &v344[*(int *)(TupleTypeMetadata3 + 48)];
              uint64_t v135 = &v344[*(int *)(TupleTypeMetadata3 + 64)];
              (*((void (**)(char *, char *, uint64_t))v372 + 4))(v344, v125, v377);
              (*(void (**)(char *, char *, uint64_t))(v355 + 32))(v134, v126, v127);
              uint64_t v136 = v367;
              uint64_t v137 = v348;
              (*(void (**)(char *, char *, uint64_t))(v367 + 32))(v135, v131, v348);
              Deque.append(_:)(v133, (uint64_t)v330);
              (*(void (**)(uint64_t, uint64_t))(v347 + 8))(v133, v132);
              (*((void (**)(char *, int *))v358 + 1))(v379, v374);
              unint64_t v138 = v342;
              uint64_t v139 = &v342[*(int *)(v129 + 76)];
              (*(void (**)(char *, uint64_t))(v136 + 8))(v139, v137);
              uint64_t v140 = v381;
              v356(v139, v336, (char *)v381);
              ((void (*)(char *, void, uint64_t, void (*)(void)))v375)(v139, 0, 1, v140);
              uint64_t v141 = v129;
              uint64_t v113 = v385;
              uint64_t v142 = v386;
              uint64_t v143 = v383;
LABEL_26:
              v196 = v376;
              uint64_t v195 = v382;
              v193 = v352;
              goto LABEL_27;
            }
            goto LABEL_62;
          }
LABEL_61:
          swift_release();
          __break(1u);
LABEL_62:
          swift_release();
          __break(1u);
          goto LABEL_63;
        }
LABEL_60:
        swift_release();
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v78 = (char *)v334;
      ((void (*)(uint64_t *, uint64_t *, void *))v85)(v334, v108, v116);
      uint64_t v91 = *(char **)(v355 + 48);
      uint64_t v179 = v368;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v91)(v114, 1, v368) != 1) {
        goto LABEL_55;
      }
      int v180 = (*(uint64_t (**)(char *, uint64_t, void (*)(void)))(v353 + 48))(v115, 1, v381);
      uint64_t v85 = (int *)v372;
      v181 = v333;
      v182 = v345;
      if (v180 != 1) {
        goto LABEL_56;
      }
      uint64_t v183 = v377;
      v381 = (void (*)(void))*((void *)v372 + 4);
      ((void (*)(char *, char *, uint64_t))v381)(v345, v78, v377);
      v184 = v332;
      (*((void (**)(char *, char *, uint64_t))v85 + 2))(v332, v182, v183);
      v370(v181, (int *)&v343[*(int *)(v380 + 76)], v386);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v91)(v181, 1, v179) != 1)
      {
        v185 = v181;
        v186 = &v342[*(int *)(v373 + 76)];
        uint64_t v187 = TupleTypeMetadata3;
        uint64_t v188 = (uint64_t)v344;
        v189 = &v344[*(int *)(TupleTypeMetadata3 + 48)];
        v190 = &v344[*(int *)(TupleTypeMetadata3 + 64)];
        v191 = v184;
        uint64_t v192 = v377;
        ((void (*)(char *, char *, uint64_t))v381)(v344, v191, v377);
        (*(void (**)(char *, char *, uint64_t))(v355 + 32))(v189, v185, v179);
        v356(v190, v186, (char *)v348);
        Deque.append(_:)(v188, (uint64_t)v330);
        (*(void (**)(uint64_t, uint64_t))(v347 + 8))(v188, v187);
        (*((void (**)(char *, int *))v358 + 1))(v379, v374);
        v193 = v352;
        v194 = (char *)v352 + *((int *)v378 + 19);
        uint64_t v195 = v382;
        v196 = v376;
        (*(void (**)(char *, void *))(v382 + 8))(v194, v376);
        ((void (*)(char *, char *, uint64_t))v381)(v194, v345, v192);
        uint64_t v197 = v192;
        unint64_t v138 = v342;
        uint64_t v141 = v373;
        (*((void (**)(char *, void, uint64_t, uint64_t))v372 + 7))(v194, 0, 1, v197);
        uint64_t v142 = v386;
        uint64_t v143 = v383;
LABEL_27:
        (*(void (**)(char *, void *))(v143 + 8))(v331, v142);
        (*(void (**)(uint64_t *, void *))(v195 + 8))(v357, v196);
        ((void (*)(void *, uint64_t))v335)(v113, v349);
        v216 = (char *)v113 + *((int *)v340 + 12);
        uint64_t v217 = *((int *)v340 + 16);
        *uint64_t v113 = v341;
        uint64_t v218 = v369;
        v219 = &v216[*(int *)(v369 + 48)];
        v220 = &v216[*(int *)(v369 + 64)];
        v339[2]();
        (*((void (**)(char *, char *, uint64_t))v338 + 2))(v219, v343, v380);
        (*((void (**)(char *, char *, uint64_t))v337 + 2))(v220, v138, v141);
        *(void *)((char *)v113 + v217) = v387;
        swift_storeEnumTagMultiPayload();
        uint64_t v388 = v359;
        uint64_t v389 = v361;
        uint64_t v390 = v363;
        uint64_t v391 = v360;
        uint64_t v392 = v362;
        uint64_t v393 = v384;
        uint64_t v221 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
        (*(void (**)(int **, uint64_t, uint64_t, uint64_t))(*(void *)(v221 - 8) + 56))(v364, 1, 1, v221);
        return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v193, v218);
      }
      goto LABEL_57;
    case 2:
      v319 = v85;
      v345 = v78;
      uint64_t v350 = v71;
      uint64_t v349 = v70;
      uint64_t v348 = v8;
      v332 = *v73;
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v314 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v144 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      uint64_t v145 = v369;
      uint64_t v388 = v144;
      uint64_t v389 = v369;
      uint64_t v146 = sub_1A56D5898();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      uint64_t v318 = v146;
      sub_1A56D6158();
      uint64_t v390 = sub_1A56D5558();
      uint64_t v391 = type metadata accessor for Deque();
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v148 = (char *)v73 + TupleTypeMetadata[12];
      uint64_t v91 = *(char **)((char *)v73 + TupleTypeMetadata[16]);
      v324 = TupleTypeMetadata;
      uint64_t v149 = *(char **)((char *)v73 + TupleTypeMetadata[20]);
      uint64_t v150 = *(int *)(v145 + 48);
      uint64_t v151 = (uint64_t *)((char *)v357 + v150);
      uint64_t v152 = *(int *)(v145 + 64);
      uint64_t v153 = (uint64_t *)((char *)v357 + v152);
      uint64_t v154 = &v148[v150];
      uint64_t v155 = &v148[v152];
      uint64_t v316 = *(v378 - 1);
      (*(void (**)(void))(v316 + 32))();
      uint64_t v317 = *(void *)(v380 - 8);
      uint64_t v156 = *(void (**)(uint64_t *, char *))(v317 + 32);
      v352 = v151;
      v156(v151, v154);
      uint64_t v157 = *(void *)(v373 - 8);
      uint64_t v158 = *(void (**)(uint64_t *, char *))(v157 + 32);
      v334 = v153;
      v158(v153, v155);
      v333 = v149;
      uint64_t v388 = (uint64_t)v149;
      uint64_t v78 = (char *)type metadata accessor for Deque();
      swift_getWitnessTable();
      uint64_t v85 = (int *)&v388;
      if ((sub_1A56D5738() & 1) == 0)
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        swift_release();
        (*((void (**)(char *, uint64_t))v372 + 1))(v78, v377);
        __break(1u);
LABEL_56:
        swift_release();
        v311 = (void (*)(char *, uint64_t))*((void *)v85 + 1);
        v85 += 2;
        v311(v78, v377);
        __break(1u);
LABEL_57:
        swift_release();
        __break(1u);
        goto LABEL_58;
      }
      uint64_t v315 = v157;
      v328 = (int *)v91;
      uint64_t v159 = *(char **)(v350 + 8);
      v350 += 8;
      v326 = v159;
      ((void (*)(void *, uint64_t))v159)(v385, v349);
      swift_storeEnumTagMultiPayload();
      uint64_t v160 = v374;
      uint64_t v85 = (int *)v375;
      unint64_t v161 = v345;
      char v162 = &v345[v374[12]];
      uint64_t v163 = &v345[v374[16]];
      uint64_t v164 = v376;
      ((void (*)(char *, char *, void *))v375)(v345, v379, v376);
      v370(v162, v319, v386);
      v356(v163, v88, (char *)v348);
      uint64_t v91 = v372;
      unint64_t v165 = (char *)*((void *)v372 + 6);
      v344 = v372 + 48;
      v336 = v165;
      int v166 = ((uint64_t (*)(char *, uint64_t, uint64_t))v165)(v161, 1, v377);
      v314 = v78;
      v327 = v162;
      if (v166 != 1)
      {
        ((void (*)(char *, char *, void *))v85)(v343, v161, v164);
        uint64_t v198 = v355;
        v325 = *(char **)(v355 + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v325)(v162, 1, v368) == 1)
        {
          v319 = *(int **)(v353 + 48);
          if (((unsigned int (*)(char *, uint64_t, void (*)(void)))v319)(v163, 1, v381) == 1)
          {
            (*((void (**)(char *, int *))v358 + 1))(v379, v160);
            v171 = v378;
            v199 = v357;
            v200 = (char *)v357 + *((int *)v378 + 19);
            uint64_t v173 = v382;
            v176 = v376;
            (*(void (**)(char *, void *))(v382 + 8))(v200, v376);
            v201 = v372;
            uint64_t v170 = v377;
            (*((void (**)(char *, char *, uint64_t))v372 + 4))(v200, v343, v377);
            (*((void (**)(char *, void, uint64_t, uint64_t))v201 + 7))(v200, 0, 1, v170);
            v172 = v386;
            uint64_t v174 = v383;
            uint64_t v175 = v198;
            goto LABEL_32;
          }
LABEL_59:
          swift_release();
          swift_release();
          (*((void (**)(char *, uint64_t))v372 + 1))(v343, v377);
          __break(1u);
          goto LABEL_60;
        }
LABEL_58:
        swift_release();
        swift_release();
        (*((void (**)(char *, uint64_t))v91 + 1))(v343, v377);
        __break(1u);
        goto LABEL_59;
      }
      v325 = *(char **)(v355 + 48);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v325)(v162, 1, v368) == 1)
      {
        uint64_t v167 = v353;
        uint64_t v168 = v381;
        v319 = *(int **)(v353 + 48);
        if (((unsigned int (*)(char *, uint64_t, void (*)(void)))v319)(v163, 1, v381) == 1)
        {
LABEL_63:
          swift_release();
          swift_release();
          __break(1u);
          goto LABEL_64;
        }
        (*((void (**)(char *, int *))v358 + 1))(v379, v160);
        unint64_t v169 = (char *)v334 + *(int *)(v373 + 76);
        (*(void (**)(char *, uint64_t))(v367 + 8))(v169, v348);
        (*(void (**)(char *, char *, void (*)(void)))(v167 + 32))(v169, v163, v168);
        (*(void (**)(char *, void, uint64_t, void (*)(void)))(v167 + 56))(v169, 0, 1, v168);
        uint64_t v170 = v377;
        v171 = v378;
        v172 = v386;
        uint64_t v173 = v382;
        uint64_t v174 = v383;
        uint64_t v175 = v355;
        v176 = v376;
      }
      else
      {
        uint64_t v85 = v323;
        v222 = v386;
        v370((char *)v323, (int *)v162, v386);
        v319 = *(int **)(v353 + 48);
        if (((unsigned int (*)(char *, uint64_t, void (*)(void)))v319)(v163, 1, v381) != 1)
        {
LABEL_66:
          swift_release();
          swift_release();
          (*(void (**)(int *, uint64_t))(v355 + 8))(v85, v368);
          __break(1u);
          JUMPOUT(0x1A555CC90);
        }
        (*((void (**)(char *, int *))v358 + 1))(v379, v160);
        v223 = (char *)v352 + *(int *)(v380 + 76);
        uint64_t v174 = v383;
        (*(void (**)(char *, void *))(v383 + 8))(v223, v222);
        uint64_t v224 = v355;
        uint64_t v225 = v368;
        (*(void (**)(char *, int *, uint64_t))(v355 + 32))(v223, v85, v368);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v223, 0, 1, v225);
        v172 = v222;
        uint64_t v175 = v224;
        uint64_t v170 = v377;
        v171 = v378;
        v176 = v376;
        uint64_t v173 = v382;
      }
      v199 = v357;
LABEL_32:
      v226 = *(int **)(v174 + 8);
      uint64_t v383 = v174 + 8;
      ((void (*)(char *, void *))v226)(v327, v172);
      v227 = *(void (**)(char *, void *))(v173 + 8);
      v227(v345, v176);
      v228 = (char *)v199 + *((int *)v171 + 19);
      v229 = v342;
      v379 = v228;
      ((void (*)(char *))v375)(v342);
      int v230 = ((uint64_t (*)(char *, uint64_t, uint64_t))v336)(v229, 1, v170);
      uint64_t v382 = v173 + 8;
      if (v230 == 1)
      {
        v231 = v176;
        v374 = v226;
        uint64_t v232 = v175;
        v227(v229, v176);
        v233 = (void (**)(char *, uint64_t))v372;
      }
      else
      {
        v233 = (void (**)(char *, uint64_t))v372;
        v234 = v335;
        v374 = (int *)*((void *)v372 + 4);
        v358 = v372 + 32;
        ((void (*)(char *, char *, uint64_t))v374)(v335, v229, v170);
        v235 = v331;
        v370(v331, (int *)((char *)v352 + *(int *)(v380 + 76)), v172);
        uint64_t v236 = v175;
        v237 = v172;
        uint64_t v238 = v368;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v325)(v235, 1, v368) == 1)
        {
          v233[1](v234, v170);
          v374 = v226;
          ((void (*)(char *, void *))v226)(v235, v237);
          v172 = v237;
          uint64_t v232 = v175;
        }
        else
        {
          v239 = *(char **)(v175 + 32);
          v240 = v329;
          uint64_t v355 = v175 + 32;
          v345 = v239;
          ((void (*)(char *, char *, uint64_t))v239)(v329, v235, v238);
          v241 = v322;
          uint64_t v242 = v348;
          v356(v322, (char *)v334 + *(int *)(v373 + 76), (char *)v348);
          uint64_t v243 = v353;
          v244 = v381;
          if (((unsigned int (*)(char *, uint64_t))v319)(v241, 1) != 1)
          {
            v267 = *(void (**)(char *, char *, void (*)(void)))(v243 + 32);
            v268 = v244;
            v267(v321, v241, v244);
            v269 = v267;
            v270 = (char **)v385;
            ((void (*)(void *, uint64_t))v326)(v385, v349);
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
            uint64_t v271 = v369;
            uint64_t v272 = swift_getTupleTypeMetadata3();
            v273 = (char *)v270 + *(int *)(v272 + 48);
            uint64_t v274 = *(int *)(v272 + 64);
            *v270 = v332;
            v275 = &v273[*(int *)(v271 + 48)];
            v276 = &v273[*(int *)(v271 + 64)];
            (*(void (**)(char *, uint64_t *, void *))(v316 + 16))(v273, v357, v378);
            (*(void (**)(char *, uint64_t *, uint64_t))(v317 + 16))(v275, v352, v380);
            (*(void (**)(char *, uint64_t *, uint64_t))(v315 + 16))(v276, v334, v373);
            *(char **)((char *)v270 + v274) = v333;
            swift_storeEnumTagMultiPayload();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
            sub_1A56D6158();
            sub_1A56D5558();
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            v278 = v364;
            v279 = (char *)v364 + *(int *)(TupleTypeMetadata2 + 48);
            *v364 = v328;
            uint64_t v280 = TupleTypeMetadata3;
            v281 = &v279[*(int *)(TupleTypeMetadata3 + 48)];
            v282 = &v279[*(int *)(TupleTypeMetadata3 + 64)];
            ((void (*)(char *, char *, uint64_t))v374)(v279, v335, v377);
            ((void (*)(char *, char *, uint64_t))v345)(v281, v329, v238);
            v269(v282, v321, v268);
            (*(void (**)(char *, void, uint64_t, void (*)(void)))(v353 + 56))(v282, 0, 1, v268);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(v279, 0, 1, v280);
            swift_storeEnumTagMultiPayload();
            uint64_t v388 = v359;
            uint64_t v389 = v361;
            uint64_t v390 = v363;
            uint64_t v391 = v360;
            uint64_t v392 = v362;
            uint64_t v393 = v384;
            uint64_t v283 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
            (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v283 - 8) + 56))(v278, 0, 1, v283);
            return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v357, v369);
          }
          v374 = v226;
          uint64_t v232 = v236;
          (*(void (**)(char *, uint64_t))(v236 + 8))(v240, v238);
          uint64_t v170 = v377;
          v233[1](v335, v377);
          (*(void (**)(char *, uint64_t))(v367 + 8))(v241, v242);
          v172 = v386;
        }
        v171 = v378;
        v231 = v376;
      }
      v245 = v339;
      ((void (*)(void (**)(void), char *, void *))v375)(v339, v379, v231);
      int v246 = ((uint64_t (*)(void (**)(void), uint64_t, uint64_t))v336)(v245, 1, v170);
      v247 = v341;
      v248 = v340;
      if (v246 == 1)
      {
        v227((char *)v245, v231);
        v249 = (char **)v385;
        v250 = v231;
      }
      else
      {
        uint64_t v382 = (uint64_t)v233[4];
        ((void (*)(char *, void (**)(void), uint64_t))v382)(v340, v245, v170);
        uint64_t v251 = (uint64_t)v330;
        v370(v330, (int *)((char *)v352 + *(int *)(v380 + 76)), v172);
        uint64_t v252 = v368;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v325)(v251, 1, v368) == 1)
        {
          v233[1](v248, v170);
          ((void (*)(uint64_t, void *))v374)(v251, v172);
          v249 = (char **)v385;
        }
        else
        {
          uint64_t v253 = v232;
          v254 = *(void (**)(char *, uint64_t, uint64_t))(v232 + 32);
          v254(v247, v251, v252);
          v249 = (char **)v385;
          if (*(void *)((char *)v385 + *((int *)v320 + 17)) == 2)
          {
            ((void (*)(void *, uint64_t))v326)(v385, v349);
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
            uint64_t v218 = v369;
            uint64_t v255 = swift_getTupleTypeMetadata3();
            v256 = (char *)v249 + *(int *)(v255 + 48);
            v386 = v254;
            uint64_t v257 = *(int *)(v255 + 64);
            *v249 = v332;
            v258 = &v256[*(int *)(v218 + 48)];
            v259 = &v256[*(int *)(v218 + 64)];
            v193 = v357;
            (*(void (**)(char *, uint64_t *, void *))(v316 + 16))(v256, v357, v378);
            (*(void (**)(char *, uint64_t *, uint64_t))(v317 + 16))(v258, v352, v380);
            (*(void (**)(char *, uint64_t *, uint64_t))(v315 + 16))(v259, v334, v373);
            *(char **)((char *)v249 + v257) = v333;
            swift_storeEnumTagMultiPayload();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
            sub_1A56D6158();
            sub_1A56D5558();
            uint64_t v260 = swift_getTupleTypeMetadata2();
            v261 = v364;
            v262 = (char *)v364 + *(int *)(v260 + 48);
            *v364 = v328;
            uint64_t v263 = TupleTypeMetadata3;
            v264 = &v262[*(int *)(TupleTypeMetadata3 + 48)];
            v265 = &v262[*(int *)(TupleTypeMetadata3 + 64)];
            ((void (*)(char *, char *, uint64_t))v382)(v262, v340, v377);
            ((void (*)(char *, char *, uint64_t))v386)(v264, v341, v368);
            (*(void (**)(char *, uint64_t, uint64_t, void (*)(void)))(v353 + 56))(v265, 1, 1, v381);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v347 + 56))(v262, 0, 1, v263);
            swift_storeEnumTagMultiPayload();
            uint64_t v388 = v359;
            uint64_t v389 = v361;
            uint64_t v390 = v363;
            uint64_t v391 = v360;
            uint64_t v392 = v362;
            uint64_t v393 = v384;
            uint64_t v266 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
            (*(void (**)(int **, void, uint64_t, uint64_t))(*(void *)(v266 - 8) + 56))(v261, 0, 1, v266);
            return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v193, v218);
          }
          (*(void (**)(char *, uint64_t))(v253 + 8))(v247, v252);
          v233[1](v248, v377);
        }
        v171 = v378;
        v250 = v376;
      }
      v284 = v332;
      ((void (*)(char **, uint64_t))v326)(v249, v349);
      v285 = (char **)((char *)v249 + v324[12]);
      uint64_t v286 = v324[16];
      uint64_t v382 = v324[20];
      uint64_t v383 = v286;
      *v249 = v284;
      v376 = (void *)((char *)v285 + *(int *)(v369 + 48));
      v378 = (void *)((char *)v285 + *(int *)(v369 + 64));
      v287 = v357;
      uint64_t v288 = *v357;
      uint64_t v289 = (uint64_t)v337;
      ((void (*)(char *, char *, void *))v375)(v337, v379, v250);
      char v290 = *((unsigned char *)v287 + *((int *)v171 + 20));
      uint64_t v291 = v384;
      uint64_t v313 = v384;
      uint64_t v292 = v362;
      uint64_t v312 = v362;
      v293 = v285;
      uint64_t v294 = v288;
      uint64_t v295 = v359;
      uint64_t v296 = v361;
      uint64_t v297 = v363;
      uint64_t v298 = v360;
      sub_1A5557B98(v294, v289, v290, v293);
      v299 = v352;
      uint64_t v300 = *v352;
      uint64_t v301 = v380;
      uint64_t v302 = (uint64_t)v338;
      v370(v338, (int *)((char *)v352 + *(int *)(v380 + 76)), v386);
      char v303 = *((unsigned char *)v299 + *(int *)(v301 + 80));
      uint64_t v312 = v292;
      uint64_t v313 = v291;
      sub_1A5557B98(v300, v302, v303, v376);
      v304 = v334;
      uint64_t v305 = *v334;
      uint64_t v306 = v373;
      uint64_t v307 = (uint64_t)v346;
      v356(v346, (char *)v334 + *(int *)(v373 + 76), (char *)v348);
      char v308 = *((unsigned char *)v304 + *(int *)(v306 + 80));
      uint64_t v312 = v292;
      uint64_t v313 = v291;
      sub_1A5557B98(v305, v307, v308, v378);
      v309 = v385;
      *(void *)((char *)v385 + v383) = v328;
      *(void *)((char *)v309 + v382) = v333;
      swift_storeEnumTagMultiPayload();
      uint64_t v388 = v295;
      uint64_t v389 = v296;
      uint64_t v390 = v297;
      uint64_t v391 = v298;
      uint64_t v392 = v292;
      uint64_t v393 = v291;
      uint64_t v310 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
      (*(void (**)(int **, uint64_t, uint64_t, uint64_t))(*(void *)(v310 - 8) + 56))(v364, 1, 1, v310);
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v351 + 8))(v357, v369);
    case 3:
      goto LABEL_53;
    case 4:
      (*((void (**)(char *, int *))v358 + 1))(v379, v374);
      (*(void (**)(char **, uint64_t))(v71 + 8))(v73, v70);
      goto LABEL_15;
    case 5:
      (*((void (**)(char *, int *))v358 + 1))(v379, v374);
LABEL_15:
      uint64_t v388 = v359;
      uint64_t v389 = v361;
      uint64_t v390 = v363;
      uint64_t v391 = v360;
      uint64_t v392 = v362;
      uint64_t v393 = v384;
      uint64_t v177 = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
      return (*(uint64_t (**)(int **, uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v364, 1, 1, v177);
    case 6:
      goto LABEL_54;
    default:
      goto LABEL_52;
  }
}

unint64_t sub_1A555CCAC(uint64_t a1, void *a2)
{
  uint64_t v149 = a1;
  uint64_t v3 = a2[7];
  uint64_t v4 = a2[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v150 = sub_1A56D5898();
  uint64_t v144 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v143 = (char *)&v128 - v6;
  uint64_t v7 = a2[6];
  uint64_t v8 = a2[3];
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v142 = sub_1A56D5898();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v140 = (char *)&v128 - v10;
  uint64_t v11 = a2[5];
  uint64_t v136 = a2;
  uint64_t v12 = a2[2];
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v139 = sub_1A56D5898();
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  uint64_t v137 = (char *)&v128 - v14;
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = v13;
  uint64_t v147 = v13;
  uint64_t v162 = v11;
  uint64_t v163 = v7;
  uint64_t v164 = v3;
  uint64_t v15 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = v9;
  uint64_t v148 = (void (*)(void))v9;
  uint64_t v162 = v11;
  uint64_t v163 = v7;
  uint64_t v164 = v3;
  uint64_t v16 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = AssociatedTypeWitness;
  uint64_t v145 = (void (*)(char *, uint64_t *, uint64_t))AssociatedTypeWitness;
  uint64_t v162 = v11;
  uint64_t v163 = v7;
  uint64_t v164 = v3;
  uint64_t v17 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v155 = v16;
  uint64_t v156 = v15;
  uint64_t v154 = v17;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v146 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v152 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v151 = (uint64_t *)((char *)&v128 - v20);
  uint64_t v158 = v12;
  uint64_t v159 = v8;
  uint64_t v160 = v4;
  uint64_t v161 = v11;
  uint64_t v162 = v7;
  uint64_t v163 = v3;
  uint64_t v21 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (id *)((char *)&v128 - v23);
  (*(void (**)(char *, uint64_t *, uint64_t))(v22 + 16))((char *)&v128 - v23, v157, v21);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v26 = 0xF000000000000007;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v152 = (char *)*v24;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      swift_getTupleTypeMetadata3();
      uint64_t v27 = type metadata accessor for Deque();
      uint64_t v28 = TupleTypeMetadata3;
      uint64_t v142 = v27;
      uint64_t v29 = swift_getTupleTypeMetadata3();
      uint64_t v30 = (char *)v24 + *(int *)(v29 + 48);
      uint64_t v150 = *(uint64_t *)((char *)v24 + *(int *)(v29 + 64));
      uint64_t v31 = *(int *)(v28 + 48);
      uint64_t v32 = v151;
      uint64_t v33 = (uint64_t *)((char *)v151 + v31);
      uint64_t v34 = *(int *)(v28 + 64);
      uint64_t v35 = (uint64_t *)((char *)v151 + v34);
      uint64_t v36 = &v30[v31];
      uint64_t v37 = &v30[v34];
      uint64_t v38 = v156;
      uint64_t v39 = *(void *)(v156 - 8);
      uint64_t v40 = *(void (**)(void))(v39 + 32);
      uint64_t v147 = v39 + 32;
      uint64_t v148 = v40;
      ((void (*)(uint64_t *))v40)(v151);
      uint64_t v41 = *(void *)(v155 - 8);
      uint64_t v42 = *(void **)(v41 + 32);
      uint64_t v144 = v41 + 32;
      uint64_t v145 = (void (*)(char *, uint64_t *, uint64_t))v42;
      ((void (*)(uint64_t *, char *))v42)(v33, v36);
      uint64_t v143 = *(char **)(*(void *)(v154 - 8) + 32);
      ((void (*)(uint64_t *, char *))v143)(v35, v37);
      uint64_t v43 = *(void (**)(uint64_t *, uint64_t))(v22 + 8);
      uint64_t v44 = v157;
      v43(v157, v21);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = v38;
      uint64_t v46 = v33;
      if (v149)
      {
        uint64_t v45 = v154;
        uint64_t v32 = v35;
        if (v149 != 2)
        {
          uint64_t v45 = v155;
          uint64_t v32 = v33;
          if (v149 != 1) {
            goto LABEL_77;
          }
        }
      }
      *((unsigned char *)v32 + *(int *)(v45 + 80)) = 1;
      if (*((unsigned char *)v151 + *(int *)(v156 + 80)) != 1
        || *((unsigned char *)v33 + *(int *)(v155 + 80)) != 1
        || *((unsigned char *)v35 + *(int *)(v154 + 80)) != 1 && *(uint64_t *)((char *)v44 + *((int *)v136 + 17)) != 2)
      {
        v43(v44, v21);
        uint64_t v74 = (char *)v44 + *(int *)(v29 + 48);
        uint64_t v75 = *(int *)(v29 + 64);
        uint64_t v76 = TupleTypeMetadata3;
        *uint64_t v44 = (uint64_t)v152;
        uint64_t v77 = &v74[*(int *)(v76 + 48)];
        uint64_t v78 = &v74[*(int *)(v76 + 64)];
        v148();
        v145(v77, v33, v155);
        ((void (*)(char *, uint64_t *, uint64_t))v143)(v78, v35, v154);
        *(uint64_t *)((char *)v44 + v75) = v150;
        goto LABEL_58;
      }
      uint64_t v47 = v150;
      uint64_t v158 = v150;
      swift_getWitnessTable();
      char v48 = sub_1A56D5738();
      v43(v44, v21);
      if (v48)
      {
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        *uint64_t v44 = v47;
        swift_storeEnumTagMultiPayload();
        swift_retain();
      }
      uint64_t v105 = v146;
      unint64_t v26 = (unint64_t)v152;
      uint64_t v106 = *v151;
      uint64_t v107 = *v46;
      uint64_t v108 = *v35;
      if (*v151)
      {
        uint64_t v109 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v111 = v109[2];
        unint64_t v110 = v109[3];
        if (v111 >= v110 >> 1) {
          uint64_t v109 = sub_1A54E2AF4((void *)(v110 > 1), v111 + 1, 1, v109);
        }
        v109[2] = v111 + 1;
        v109[v111 + 4] = v106;
      }
      else
      {
        uint64_t v109 = (void *)MEMORY[0x1E4FBC860];
      }
      if (v107)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v109 = sub_1A54E2AF4(0, v109[2] + 1, 1, v109);
        }
        unint64_t v113 = v109[2];
        unint64_t v112 = v109[3];
        if (v113 >= v112 >> 1) {
          uint64_t v109 = sub_1A54E2AF4((void *)(v112 > 1), v113 + 1, 1, v109);
        }
        v109[2] = v113 + 1;
        v109[v113 + 4] = v107;
      }
      if (v108)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v109 = sub_1A54E2AF4(0, v109[2] + 1, 1, v109);
        }
        unint64_t v115 = v109[2];
        unint64_t v114 = v109[3];
        if (v115 >= v114 >> 1) {
          uint64_t v109 = sub_1A54E2AF4((void *)(v114 > 1), v115 + 1, 1, v109);
        }
        v109[2] = v115 + 1;
        v109[v115 + 4] = v108;
      }
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v105 + 8))(v151, TupleTypeMetadata3);
      return v26;
    case 2:
      id v135 = *v24;
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v128 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      uint64_t v50 = TupleTypeMetadata3;
      uint64_t v158 = v49;
      uint64_t v159 = TupleTypeMetadata3;
      uint64_t v52 = v147;
      uint64_t v51 = v148;
      swift_getTupleTypeMetadata3();
      sub_1A56D5898();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      sub_1A56D6158();
      uint64_t v160 = sub_1A56D5558();
      uint64_t v161 = type metadata accessor for Deque();
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v54 = (char *)v24 + TupleTypeMetadata[12];
      uint64_t v133 = *(uint64_t *)((char *)v24 + TupleTypeMetadata[16]);
      uint64_t v134 = *(uint64_t *)((char *)v24 + TupleTypeMetadata[20]);
      uint64_t v55 = *(int *)(v50 + 48);
      uint64_t v56 = &v152[v55];
      uint64_t v57 = *(int *)(v50 + 64);
      uint64_t v58 = &v152[v57];
      uint64_t v59 = &v54[v55];
      uint64_t v60 = &v54[v57];
      uint64_t v61 = *(void *)(v156 - 8);
      uint64_t v62 = *(void (**)(void))(v61 + 32);
      uint64_t v132 = v61 + 32;
      v62();
      uint64_t v63 = *(void *)(v155 - 8);
      uint64_t v64 = *(void (**)(void, void))(v63 + 32);
      uint64_t v151 = (uint64_t *)v56;
      uint64_t v131 = (void (*)(char *, uint64_t *, uint64_t))v64;
      uint64_t v130 = v63 + 32;
      v64(v56, v59);
      uint64_t v65 = *(void *)(v154 - 8);
      uint64_t v129 = *(void (**)(char *, char *))(v65 + 32);
      uint64_t v128 = v65 + 32;
      v129(v58, v60);
      uint64_t v66 = *(void (**)(uint64_t *, uint64_t))(v22 + 8);
      v66(v157, v21);
      swift_storeEnumTagMultiPayload();
      if (v149 == 2)
      {
        uint64_t v79 = v154;
        v58[*(int *)(v154 + 80)] = 1;
        uint64_t v80 = v144;
        uint64_t v81 = v143;
        uint64_t v82 = v150;
        (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v143, &v58[*(int *)(v79 + 76)], v150);
        int v83 = (*(uint64_t (**)(char *, uint64_t))(*((void *)v145 - 1) + 48))(v81, 1);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
        if (v83 == 1) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v150 = (uint64_t)v62;
        if (v149 == 1)
        {
          uint64_t v94 = v155;
          uint64_t v95 = (char *)v151;
          *((unsigned char *)v151 + *(int *)(v155 + 80)) = 1;
          uint64_t v96 = v141;
          uint64_t v97 = v58;
          uint64_t v98 = v140;
          uint64_t v99 = v142;
          (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v140, &v95[*(int *)(v94 + 76)], v142);
          int v73 = (*(uint64_t (**)(char *, uint64_t, void (*)(void)))(*((void *)v51 - 1) + 48))(v98, 1, v51);
          uint64_t v100 = v98;
          uint64_t v58 = v97;
          (*(void (**)(char *, uint64_t))(v96 + 8))(v100, v99);
        }
        else
        {
          if (v149)
          {
LABEL_78:
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x1A555DF4CLL);
          }
          uint64_t v67 = v58;
          uint64_t v68 = v156;
          uint64_t v69 = v152;
          v152[*(int *)(v156 + 80)] = 1;
          uint64_t v70 = v138;
          uint64_t v71 = v137;
          uint64_t v72 = v139;
          (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v137, &v69[*(int *)(v68 + 76)], v139);
          int v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v71, 1, v52);
          (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
          uint64_t v58 = v67;
        }
        uint64_t v62 = (void (*)(void))v150;
        if (v73 == 1)
        {
LABEL_26:
          uint64_t v101 = (uint64_t *)v58;
          uint64_t v85 = v133;
          v66(v157, v21);
          swift_storeEnumTagMultiPayload();
          uint64_t v102 = *(void *)v152;
          uint64_t v87 = *v151;
          uint64_t v88 = *v101;
          if (*(void *)v152)
          {
            uint64_t v89 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
            unint64_t v104 = v89[2];
            unint64_t v103 = v89[3];
            uint64_t v93 = v146;
            if (v104 >= v103 >> 1) {
              uint64_t v89 = sub_1A54E2AF4((void *)(v103 > 1), v104 + 1, 1, v89);
            }
            v89[2] = v104 + 1;
            v89[v104 + 4] = v102;
            if (!v87) {
              goto LABEL_66;
            }
            goto LABEL_61;
          }
          uint64_t v89 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v93 = v146;
          if (!v87)
          {
LABEL_66:
            if (v88)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v89 = sub_1A54E2AF4(0, v89[2] + 1, 1, v89);
              }
              unint64_t v126 = v89[2];
              unint64_t v125 = v89[3];
              if (v126 >= v125 >> 1) {
                uint64_t v89 = sub_1A54E2AF4((void *)(v125 > 1), v126 + 1, 1, v89);
              }
              v89[2] = v126 + 1;
              v89[v126 + 4] = v88;
            }
            swift_release();
            (*(void (**)(char *, uint64_t))(v93 + 8))(v152, TupleTypeMetadata3);
            return v85 | 0x8000000000000000;
          }
LABEL_61:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v89 = sub_1A54E2AF4(0, v89[2] + 1, 1, v89);
          }
          unint64_t v124 = v89[2];
          unint64_t v123 = v89[3];
          if (v124 >= v123 >> 1) {
            uint64_t v89 = sub_1A54E2AF4((void *)(v123 > 1), v124 + 1, 1, v89);
          }
          v89[2] = v124 + 1;
          v89[v124 + 4] = v87;
          goto LABEL_66;
        }
      }
      if (v152[*(int *)(v156 + 80)] != 1 || *((unsigned char *)v151 + *(int *)(v155 + 80)) != 1) {
        goto LABEL_57;
      }
      if (v58[*(int *)(v154 + 80)] == 1)
      {
        uint64_t v84 = (uint64_t *)v58;
        uint64_t v85 = v133;
        v66(v157, v21);
        swift_storeEnumTagMultiPayload();
        uint64_t v86 = *(void *)v152;
        uint64_t v87 = *v151;
        uint64_t v88 = *v84;
        if (*(void *)v152)
        {
          uint64_t v89 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
          unint64_t v91 = v89[2];
          unint64_t v90 = v89[3];
          unint64_t v92 = v91 + 1;
          uint64_t v93 = v146;
          if (v91 >= v90 >> 1) {
            goto LABEL_55;
          }
          goto LABEL_56;
        }
        goto LABEL_59;
      }
      if (*(uint64_t *)((char *)v157 + *((int *)v136 + 17)) == 2)
      {
        uint64_t v116 = (uint64_t *)v58;
        uint64_t v85 = v133;
        v66(v157, v21);
        swift_storeEnumTagMultiPayload();
        uint64_t v86 = *(void *)v152;
        uint64_t v87 = *v151;
        uint64_t v88 = *v116;
        if (*(void *)v152)
        {
          uint64_t v89 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
          unint64_t v91 = v89[2];
          unint64_t v90 = v89[3];
          unint64_t v92 = v91 + 1;
          uint64_t v93 = v146;
          if (v91 >= v90 >> 1) {
LABEL_55:
          }
            uint64_t v89 = sub_1A54E2AF4((void *)(v90 > 1), v91 + 1, 1, v89);
LABEL_56:
          v89[2] = v92;
          v89[v91 + 4] = v86;
          goto LABEL_60;
        }
LABEL_59:
        uint64_t v89 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v93 = v146;
LABEL_60:
        if (!v87) {
          goto LABEL_66;
        }
        goto LABEL_61;
      }
LABEL_57:
      uint64_t v117 = v157;
      v66(v157, v21);
      int v118 = (char *)v117 + TupleTypeMetadata[12];
      uint64_t v119 = TupleTypeMetadata[16];
      uint64_t v120 = TupleTypeMetadata[20];
      *uint64_t v117 = (uint64_t)v135;
      uint64_t v121 = &v118[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v122 = &v118[*(int *)(TupleTypeMetadata3 + 64)];
      v62();
      v131(v121, v151, v155);
      ((void (*)(char *, char *, uint64_t))v129)(v122, v58, v154);
      *(uint64_t *)((char *)v117 + v119) = v133;
      *(uint64_t *)((char *)v117 + v120) = v134;
LABEL_58:
      swift_storeEnumTagMultiPayload();
      return 0xF000000000000007;
    case 3:
      __break(1u);
      goto LABEL_75;
    case 4:

      return v26;
    case 5:
      return v26;
    case 6:
      goto LABEL_76;
    default:
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_release();
      swift_release();
      __break(1u);
      goto LABEL_78;
  }
}

unint64_t sub_1A555DF68(void (*a1)(void, void), void *a2)
{
  uint64_t v141 = a1;
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = a2[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = a2[6];
  uint64_t v9 = a2[7];
  uint64_t v143 = AssociatedTypeWitness;
  uint64_t v10 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v142 = swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v152 = v3;
  uint64_t v153 = v4;
  uint64_t v154 = v5;
  uint64_t v155 = swift_getAssociatedTypeWitness();
  uint64_t v156 = v6;
  uint64_t v157 = v8;
  uint64_t v158 = v9;
  uint64_t v149 = v11;
  uint64_t v150 = v10;
  uint64_t v147 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v140 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v145 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v124 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v124 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v144 = (char **)((char *)&v124 - v21);
  MEMORY[0x1F4188790](v20);
  uint64_t v146 = (char *)&v124 - v22;
  uint64_t v152 = v3;
  uint64_t v153 = v4;
  uint64_t v154 = v5;
  uint64_t v155 = v6;
  uint64_t v156 = v8;
  uint64_t v157 = v9;
  uint64_t v23 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  unint64_t v26 = (id *)((char *)&v124 - v25);
  (*(void (**)(char *, void *, uint64_t))(v24 + 16))((char *)&v124 - v25, v151, v23);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v28 = 0xF000000000000007;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      id v137 = *v26;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      type metadata accessor for Deque();
      uint64_t v138 = v16;
      uint64_t v29 = TupleTypeMetadata3;
      uint64_t v30 = (char *)v26 + *(int *)(swift_getTupleTypeMetadata3() + 48);
      swift_release();
      uint64_t v31 = *(int *)(v29 + 48);
      uint64_t v32 = &v146[v31];
      uint64_t v142 = (uint64_t)&v146[v31];
      uint64_t v33 = *(int *)(v29 + 64);
      uint64_t v34 = &v146[v33];
      uint64_t v35 = &v30[v31];
      uint64_t v36 = &v30[v33];
      uint64_t v139 = v19;
      uint64_t v37 = *(void *)(v150 - 8);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v146, v30, v150);
      uint64_t v143 = *(void *)(v149 - 8);
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v32, v35, v149);
      uint64_t v145 = *(char **)(v147 - 8);
      uint64_t v38 = v34;
      (*((void (**)(char *, char *, uint64_t))v145 + 4))(v34, v36, v147);
      uint64_t v39 = v151;
      (*(void (**)(void *, uint64_t))(v24 + 8))(v151, v23);
      uint64_t v40 = v141;
      *uint64_t v39 = v141;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = v144;
      uint64_t v134 = (char *)v144 + *(int *)(v29 + 48);
      uint64_t v42 = v134;
      uint64_t v133 = (char *)v144 + *(int *)(v29 + 64);
      uint64_t v43 = v133;
      uint64_t v151 = *(void **)(v37 + 16);
      ((void (*)(char **, char *, uint64_t))v151)(v144, v146, v150);
      uint64_t v136 = *(void (**)(void))(v143 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v136)(v42, v142, v149);
      id v135 = (char *)*((void *)v145 + 2);
      uint64_t v129 = v34;
      ((void (*)(char *, char *, uint64_t))v135)(v43, v34, v147);
      uint64_t v132 = *v41;
      id v44 = v40;
      uint64_t v45 = *(void (**)(void, void))(v37 + 8);
      uint64_t v131 = (void (*)(char *, uint64_t))(v37 + 8);
      uint64_t v141 = v45;
      v45(v41, v150);
      uint64_t v46 = &v139[*(int *)(v29 + 48)];
      uint64_t v130 = &v139[*(int *)(v29 + 64)];
      uint64_t v47 = v130;
      ((void (*)(void))v151)();
      uint64_t v48 = v142;
      uint64_t v49 = v149;
      ((void (*)(char *, uint64_t, uint64_t))v136)(v46, v142, v149);
      uint64_t v50 = v38;
      uint64_t v51 = v147;
      ((void (*)(char *, char *, uint64_t))v135)(v47, v50, v147);
      uint64_t v144 = *(char ***)v46;
      uint64_t v52 = *(void (**)(char *, uint64_t))(v143 + 8);
      v52(v46, v49);
      uint64_t v53 = &v138[*(int *)(v29 + 48)];
      uint64_t v54 = &v138[*(int *)(v29 + 64)];
      uint64_t v55 = v150;
      ((void (*)(void))v151)();
      uint64_t v56 = v48;
      uint64_t v57 = v149;
      ((void (*)(char *, uint64_t, uint64_t))v136)(v53, v56, v149);
      ((void (*)(char *, char *, uint64_t))v135)(v54, v129, v51);
      uint64_t v151 = *(void **)v54;
      uint64_t v58 = (void (*)(char *, uint64_t))*((void *)v145 + 1);
      v58(v54, v51);
      uint64_t v59 = v57;
      v52(v53, v57);
      uint64_t v60 = (void (*)(char *, uint64_t))v141;
      v141(v138, v55);
      v58(v130, v51);
      v60(v139, v55);
      uint64_t v61 = v132;
      v58(v133, v51);
      v52(v134, v59);
      if (!v61)
      {
        uint64_t v62 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v65 = v140;
        uint64_t v66 = v144;
        uint64_t v67 = v151;
        if (!v144) {
          goto LABEL_21;
        }
        goto LABEL_16;
      }
      uint64_t v62 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v64 = v62[2];
      unint64_t v63 = v62[3];
      uint64_t v65 = v140;
      if (v64 >= v63 >> 1) {
        uint64_t v62 = sub_1A54E2AF4((void *)(v63 > 1), v64 + 1, 1, v62);
      }
      uint64_t v66 = v144;
      uint64_t v67 = v151;
      v62[2] = v64 + 1;
      v62[v64 + 4] = v61;
      if (v66)
      {
LABEL_16:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v62 = sub_1A54E2AF4(0, v62[2] + 1, 1, v62);
        }
        unint64_t v115 = v62[2];
        unint64_t v114 = v62[3];
        if (v115 >= v114 >> 1) {
          uint64_t v62 = sub_1A54E2AF4((void *)(v114 > 1), v115 + 1, 1, v62);
        }
        v62[2] = v115 + 1;
        v62[v115 + 4] = v66;
      }
LABEL_21:
      if (v67)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v62 = sub_1A54E2AF4(0, v62[2] + 1, 1, v62);
        }
        unint64_t v117 = v62[2];
        unint64_t v116 = v62[3];
        if (v117 >= v116 >> 1) {
          uint64_t v62 = sub_1A54E2AF4((void *)(v116 > 1), v117 + 1, 1, v62);
        }
        v62[2] = v117 + 1;
        v62[v117 + 4] = v67;
      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v146, TupleTypeMetadata3);
      return (unint64_t)v137;
    case 2:
      uint64_t v134 = (char *)*v26;
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v124 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      uint64_t v69 = TupleTypeMetadata3;
      uint64_t v152 = v68;
      uint64_t v153 = TupleTypeMetadata3;
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      uint64_t v139 = v19;
      sub_1A56D5898();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      sub_1A56D6158();
      uint64_t v154 = sub_1A56D5558();
      uint64_t v155 = type metadata accessor for Deque();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v71 = (char *)v26 + *(int *)(TupleTypeMetadata + 48);
      id v137 = *(id *)((char *)v26 + *(int *)(TupleTypeMetadata + 64));
      swift_release();
      uint64_t v72 = *(int *)(v69 + 48);
      int v73 = &v145[v72];
      id v135 = &v145[v72];
      uint64_t v74 = *(int *)(v69 + 64);
      uint64_t v75 = &v145[v74];
      uint64_t v142 = (uint64_t)&v145[v74];
      uint64_t v76 = &v71[v72];
      uint64_t v138 = v16;
      uint64_t v77 = &v71[v74];
      uint64_t v78 = *(void *)(v150 - 8);
      uint64_t v79 = v145;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v145, v71, v150);
      uint64_t v146 = *(char **)(v149 - 8);
      (*((void (**)(char *, char *, uint64_t))v146 + 4))(v73, v76, v149);
      uint64_t v143 = *(void *)(v147 - 8);
      (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v75, v77, v147);
      (*(void (**)(void *, uint64_t))(v24 + 8))(v151, v23);
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = v144;
      uint64_t v133 = (char *)v144 + *(int *)(v69 + 48);
      uint64_t v81 = v133;
      uint64_t v132 = (char *)v144 + *(int *)(v69 + 64);
      uint64_t v82 = v132;
      uint64_t v83 = v78;
      uint64_t v136 = *(void (**)(void))(v78 + 16);
      uint64_t v151 = (void *)(v78 + 16);
      uint64_t v84 = v150;
      ((void (*)(char **, char *, uint64_t))v136)(v144, v79, v150);
      unint64_t v126 = (void (*)(char *, char *, uint64_t))*((void *)v146 + 2);
      uint64_t v85 = v135;
      v126(v81, v135, v149);
      uint64_t v86 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
      uint64_t v87 = v147;
      v86(v82, v142, v147);
      unint64_t v125 = v86;
      uint64_t v129 = *v80;
      uint64_t v88 = *(void (**)(char *, uint64_t))(v83 + 8);
      uint64_t v130 = (char *)(v83 + 8);
      uint64_t v131 = v88;
      v88((char *)v80, v84);
      uint64_t v89 = &v139[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v90 = TupleTypeMetadata3;
      uint64_t v128 = &v139[*(int *)(TupleTypeMetadata3 + 64)];
      unint64_t v91 = v128;
      v136();
      unint64_t v92 = v85;
      uint64_t v93 = v149;
      uint64_t v94 = v126;
      v126(v89, v92, v149);
      uint64_t v95 = v142;
      v86(v91, v142, v87);
      uint64_t v144 = *(char ***)v89;
      uint64_t v96 = (void (*)(char *, uint64_t))*((void *)v146 + 1);
      v146 += 8;
      uint64_t v127 = v96;
      v96(v89, v93);
      uint64_t v97 = v138;
      uint64_t v98 = &v138[*(int *)(v90 + 48)];
      uint64_t v99 = &v138[*(int *)(v90 + 64)];
      uint64_t v100 = v150;
      ((void (*)(char *, char *, uint64_t))v136)(v138, v145, v150);
      v94(v98, v135, v93);
      v125(v99, v95, v87);
      uint64_t v151 = *(void **)v99;
      uint64_t v101 = *(void (**)(char *, uint64_t))(v143 + 8);
      uint64_t v102 = v99;
      unint64_t v103 = v129;
      v101(v102, v87);
      unint64_t v104 = v127;
      v127(v98, v93);
      uint64_t v105 = v97;
      uint64_t v106 = v131;
      v131(v105, v100);
      v101(v128, v87);
      v106(v139, v100);
      v101(v132, v87);
      v104(v133, v93);
      if (v103)
      {
        uint64_t v107 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v109 = v107[2];
        unint64_t v108 = v107[3];
        uint64_t v110 = v140;
        unint64_t v111 = v141;
        if (v109 >= v108 >> 1) {
          uint64_t v107 = sub_1A54E2AF4((void *)(v108 > 1), v109 + 1, 1, v107);
        }
        unint64_t v112 = v144;
        unint64_t v113 = v151;
        v107[2] = v109 + 1;
        v107[v109 + 4] = v103;
        if (!v112)
        {
LABEL_34:
          if (v113)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v107 = sub_1A54E2AF4(0, v107[2] + 1, 1, v107);
            }
            unint64_t v121 = v107[2];
            unint64_t v120 = v107[3];
            if (v121 >= v120 >> 1) {
              uint64_t v107 = sub_1A54E2AF4((void *)(v120 > 1), v121 + 1, 1, v107);
            }
            v107[2] = v121 + 1;
            v107[v121 + 4] = v113;
          }
          (*(void (**)(char *, uint64_t))(v110 + 8))(v145, TupleTypeMetadata3);
          id v122 = v111;
          return (unint64_t)v137;
        }
      }
      else
      {
        uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v110 = v140;
        unint64_t v111 = v141;
        unint64_t v112 = v144;
        unint64_t v113 = v151;
        if (!v144) {
          goto LABEL_34;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v107 = sub_1A54E2AF4(0, v107[2] + 1, 1, v107);
      }
      unint64_t v119 = v107[2];
      unint64_t v118 = v107[3];
      if (v119 >= v118 >> 1) {
        uint64_t v107 = sub_1A54E2AF4((void *)(v118 > 1), v119 + 1, 1, v107);
      }
      v107[2] = v119 + 1;
      v107[v119 + 4] = v112;
      goto LABEL_34;
    case 3:
      swift_release();
      return 0xF000000000000007;
    case 4:

      return 0xF000000000000007;
    case 5:
      return v28;
    case 6:
      goto LABEL_44;
    default:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x1A555F004);
  }
}

unint64_t sub_1A555F020(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v139 = AssociatedTypeWitness;
  uint64_t v9 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v138 = swift_getAssociatedTypeWitness();
  uint64_t v10 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v149 = v2;
  uint64_t v150 = v3;
  uint64_t v151 = v5;
  uint64_t v152 = swift_getAssociatedTypeWitness();
  uint64_t v153 = v4;
  uint64_t v154 = v7;
  uint64_t v155 = v8;
  uint64_t v146 = v10;
  uint64_t v147 = v9;
  uint64_t v145 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v142 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v13 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v141 = (char *)&v125 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v125 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v140 = (char *)&v125 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v143 = (char *)&v125 - v21;
  uint64_t v149 = v2;
  uint64_t v150 = v3;
  uint64_t v151 = v5;
  uint64_t v152 = v4;
  uint64_t v153 = v7;
  uint64_t v154 = v8;
  uint64_t v22 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (id *)((char *)&v125 - v24);
  (*(void (**)(char *, void (*)(void), uint64_t))(v23 + 16))((char *)&v125 - v24, v148, v22);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v27 = 0xF000000000000007;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v126 = (void (*)(char *, char *, uint64_t))*v25;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      type metadata accessor for Deque();
      uint64_t v32 = TupleTypeMetadata3;
      uint64_t v33 = (char *)v25 + *(int *)(swift_getTupleTypeMetadata3() + 48);
      swift_release();
      uint64_t v34 = *(int *)(v32 + 48);
      uint64_t v35 = &v143[v34];
      id v135 = &v143[v34];
      uint64_t v36 = *(int *)(v32 + 64);
      uint64_t v37 = &v143[v36];
      uint64_t v132 = &v143[v36];
      uint64_t v38 = &v33[v34];
      uint64_t v39 = &v33[v36];
      uint64_t v139 = *(void *)(v147 - 8);
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v143, v33, v147);
      uint64_t v40 = *(void *)(v146 - 8);
      uint64_t v138 = v40;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v35, v38, v146);
      uint64_t v136 = *(char **)(v145 - 8);
      id v137 = v18;
      (*((void (**)(char *, char *, uint64_t))v136 + 4))(v37, v39, v145);
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = v140;
      uint64_t v131 = &v140[*(int *)(v32 + 48)];
      uint64_t v42 = v131;
      uint64_t v130 = &v140[*(int *)(v32 + 64)];
      uint64_t v43 = v130;
      uint64_t v44 = v139;
      uint64_t v148 = *(void (**)(void))(v139 + 16);
      uint64_t v45 = v147;
      ((void (*)(char *, char *, uint64_t))v148)(v140, v143, v147);
      uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
      v134(v42, v135, v146);
      uint64_t v133 = (void (*)(char *, char *, uint64_t))*((void *)v136 + 2);
      uint64_t v46 = v132;
      v133(v43, v132, v145);
      uint64_t v129 = *(void (**)(void, void))v41;
      uint64_t v47 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v139 = v44 + 8;
      uint64_t v128 = v47;
      v47(v41, v45);
      uint64_t v48 = &v137[*(int *)(v32 + 48)];
      uint64_t v140 = &v137[*(int *)(v32 + 64)];
      uint64_t v49 = v140;
      v148();
      uint64_t v50 = v135;
      uint64_t v51 = v146;
      v134(v48, v135, v146);
      uint64_t v52 = v49;
      uint64_t v53 = v145;
      v133(v52, v46, v145);
      uint64_t v125 = *(void *)v48;
      uint64_t v54 = *(void (**)(char *, uint64_t))(v138 + 8);
      v138 += 8;
      uint64_t v127 = v54;
      v54(v48, v51);
      uint64_t v55 = v141;
      uint64_t v56 = &v141[*(int *)(v32 + 48)];
      uint64_t v57 = (void (**)(void))&v141[*(int *)(v32 + 64)];
      ((void (*)(char *, char *, uint64_t))v148)(v141, v143, v147);
      v134(v56, v50, v51);
      v133((char *)v57, v132, v53);
      uint64_t v148 = *v57;
      uint64_t v58 = (void (*)(void (**)(void), uint64_t))*((void *)v136 + 1);
      v58(v57, v53);
      uint64_t v59 = v127;
      v127(v56, v51);
      uint64_t v60 = v55;
      uint64_t v61 = v147;
      uint64_t v62 = v128;
      v128(v60, v147);
      v58((void (**)(void))v140, v53);
      v62(v137, v61);
      v58((void (**)(void))v130, v53);
      unint64_t v63 = v129;
      v59(v131, v51);
      unint64_t v64 = (void *)MEMORY[0x1E4FBC860];
      if (v63)
      {
        unint64_t v64 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v66 = v64[2];
        unint64_t v65 = v64[3];
        if (v66 >= v65 >> 1) {
          unint64_t v64 = sub_1A54E2AF4((void *)(v65 > 1), v66 + 1, 1, v64);
        }
        unint64_t v67 = (unint64_t)v126;
        uint64_t v68 = v125;
        uint64_t v69 = v148;
        v64[2] = v66 + 1;
        v64[v66 + 4] = v63;
        if (!v68)
        {
LABEL_7:
          if (!v69) {
            goto LABEL_27;
          }
          goto LABEL_8;
        }
      }
      else
      {
        unint64_t v67 = (unint64_t)v126;
        uint64_t v68 = v125;
        uint64_t v69 = v148;
        if (!v125) {
          goto LABEL_7;
        }
      }
      unint64_t v117 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v117 = sub_1A54E2AF4(0, v117[2] + 1, 1, v117);
      }
      unint64_t v64 = v117;
      unint64_t v119 = v117[2];
      unint64_t v118 = v117[3];
      if (v119 >= v118 >> 1) {
        unint64_t v64 = sub_1A54E2AF4((void *)(v118 > 1), v119 + 1, 1, v117);
      }
      v64[2] = v119 + 1;
      v64[v119 + 4] = v68;
      if (v69)
      {
LABEL_8:
        uint64_t v70 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v70 = sub_1A54E2AF4(0, v70[2] + 1, 1, v70);
        }
        uint64_t v71 = v70;
        unint64_t v73 = v70[2];
        unint64_t v72 = v70[3];
        if (v73 >= v72 >> 1) {
          uint64_t v71 = sub_1A54E2AF4((void *)(v72 > 1), v73 + 1, 1, v70);
        }
        v71[2] = v73 + 1;
        v71[v73 + 4] = v69;
      }
LABEL_27:
      (*(void (**)(char *, uint64_t))(v142 + 8))(v143, TupleTypeMetadata3);
      return v67 | 0x8000000000000000;
    case 2:
      uint64_t v134 = (void (*)(char *, char *, uint64_t))*v25;
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v125 - 64, "task upstreams downstreamContinuation buffer ");
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      uint64_t v75 = TupleTypeMetadata3;
      uint64_t v149 = v74;
      uint64_t v150 = TupleTypeMetadata3;
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      id v137 = v18;
      sub_1A56D5898();
      uint64_t v76 = v13;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      sub_1A56D6158();
      uint64_t v151 = sub_1A56D5558();
      uint64_t v152 = type metadata accessor for Deque();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v78 = (char *)v25 + *(int *)(TupleTypeMetadata + 48);
      uint64_t v133 = *(void (**)(char *, char *, uint64_t))((char *)v25 + *(int *)(TupleTypeMetadata + 64));
      swift_release();
      uint64_t v79 = *(int *)(v75 + 48);
      uint64_t v80 = &v76[v79];
      uint64_t v81 = *(int *)(v75 + 64);
      uint64_t v82 = &v76[v81];
      id v135 = &v76[v81];
      uint64_t v136 = v76;
      uint64_t v83 = &v78[v79];
      uint64_t v84 = &v78[v81];
      uint64_t v85 = *(void *)(v147 - 8);
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v76, v78, v147);
      uint64_t v86 = *(char **)(v146 - 8);
      uint64_t v143 = v86;
      (*((void (**)(char *, char *, uint64_t))v86 + 4))(v80, v83, v146);
      uint64_t v139 = *(void *)(v145 - 8);
      (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v82, v84, v145);
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = (char **)v140;
      uint64_t v132 = &v140[*(int *)(v75 + 48)];
      uint64_t v88 = v132;
      uint64_t v131 = &v140[*(int *)(v75 + 64)];
      uint64_t v89 = v131;
      uint64_t v148 = *(void (**)(void))(v85 + 16);
      ((void (*)(char *, char *, uint64_t))v148)(v140, v136, v147);
      uint64_t v138 = *((void *)v86 + 2);
      uint64_t v90 = v80;
      ((void (*)(char *, char *, uint64_t))v138)(v88, v80, v146);
      unint64_t v126 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
      unint64_t v91 = v135;
      v126(v89, v135, v145);
      uint64_t v130 = *v87;
      unint64_t v92 = *(void (**)(void, void))(v85 + 8);
      uint64_t v128 = (void (*)(char *, uint64_t))(v85 + 8);
      uint64_t v129 = v92;
      v92(v87, v147);
      uint64_t v93 = &v137[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v94 = TupleTypeMetadata3;
      uint64_t v140 = &v137[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v95 = v140;
      v148();
      uint64_t v96 = v146;
      ((void (*)(char *, char *, uint64_t))v138)(v93, v90, v146);
      uint64_t v97 = v95;
      uint64_t v98 = v91;
      uint64_t v99 = v145;
      uint64_t v100 = (void (*)(void (**)(void), char *, uint64_t))v126;
      v126(v97, v98, v145);
      uint64_t v125 = *(void *)v93;
      uint64_t v101 = (void (*)(char *, uint64_t))*((void *)v143 + 1);
      v143 += 8;
      uint64_t v127 = v101;
      v101(v93, v96);
      uint64_t v102 = v141;
      unint64_t v103 = &v141[*(int *)(v94 + 48)];
      unint64_t v104 = (void (**)(void))&v141[*(int *)(v94 + 64)];
      ((void (*)(char *, char *, uint64_t))v148)(v141, v136, v147);
      ((void (*)(char *, char *, uint64_t))v138)(v103, v90, v96);
      v100(v104, v135, v99);
      uint64_t v148 = *v104;
      uint64_t v105 = *(void (**)(void (**)(void), uint64_t))(v139 + 8);
      v105(v104, v99);
      uint64_t v106 = v127;
      v127(v103, v96);
      uint64_t v107 = v102;
      unint64_t v108 = v130;
      uint64_t v109 = v147;
      uint64_t v110 = (void (*)(char *, uint64_t))v129;
      v129(v107, v147);
      v105((void (**)(void))v140, v99);
      v110(v137, v109);
      v105((void (**)(void))v131, v99);
      v106(v132, v96);
      if (!v108)
      {
        unint64_t v111 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v114 = v125;
        unint64_t v115 = v148;
        unint64_t v116 = v136;
        if (!v125) {
          goto LABEL_34;
        }
        goto LABEL_29;
      }
      unint64_t v111 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v113 = v111[2];
      unint64_t v112 = v111[3];
      if (v113 >= v112 >> 1) {
        unint64_t v111 = sub_1A54E2AF4((void *)(v112 > 1), v113 + 1, 1, v111);
      }
      uint64_t v114 = v125;
      unint64_t v115 = v148;
      v111[2] = v113 + 1;
      v111[v113 + 4] = v108;
      unint64_t v116 = v136;
      if (v114)
      {
LABEL_29:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v111 = sub_1A54E2AF4(0, v111[2] + 1, 1, v111);
        }
        unint64_t v121 = v111[2];
        unint64_t v120 = v111[3];
        if (v121 >= v120 >> 1) {
          unint64_t v111 = sub_1A54E2AF4((void *)(v120 > 1), v121 + 1, 1, v111);
        }
        v111[2] = v121 + 1;
        v111[v121 + 4] = v114;
        unint64_t v116 = v136;
      }
LABEL_34:
      if (v115)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v111 = sub_1A54E2AF4(0, v111[2] + 1, 1, v111);
        }
        unint64_t v123 = v111[2];
        unint64_t v122 = v111[3];
        if (v123 >= v122 >> 1) {
          unint64_t v111 = sub_1A54E2AF4((void *)(v122 > 1), v123 + 1, 1, v111);
        }
        v111[2] = v123 + 1;
        v111[v123 + 4] = v115;
        unint64_t v116 = v136;
      }
      (*(void (**)(char *, uint64_t))(v142 + 8))(v116, TupleTypeMetadata3);
      return (unint64_t)v133;
    case 3:
      swift_release();
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      return 0xF000000000000007;
    case 4:

      return 0xF000000000000007;
    case 5:
      return v27;
    case 6:
      __break(1u);
      JUMPOUT(0x1A55601BCLL);
    default:
      uint64_t v28 = sub_1A56D5898();
      uint64_t v29 = swift_getTupleTypeMetadata3();
      uint64_t v30 = (char *)v25 + *(int *)(v29 + 48);
      uint64_t v31 = (char *)v25 + *(int *)(v29 + 64);
      (*(void (**)(void (*)(void), uint64_t))(v23 + 8))(v148, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v31, v28);
      (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v30, v3);
      (*(void (**)(id *, uint64_t))(*(void *)(v2 - 8) + 8))(v25, v2);
      return 0xF000000000000007;
  }
}

uint64_t sub_1A55601D8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v161 = a3;
  uint64_t v156 = a1;
  uint64_t v4 = (void (*)(void, void))a2[5];
  uint64_t v5 = (char *)a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = (void (*)(void, void))a2[6];
  uint64_t v163 = a2[3];
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = (void (*)(void, void))a2[7];
  uint64_t v10 = (char *)a2[4];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v144 = sub_1A56D5898();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v155 = sub_1A56D5898();
  uint64_t v142 = *(void *)(v155 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v155);
  uint64_t v145 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v146 = (char *)&v125 - v16;
  uint64_t v154 = TupleTypeMetadata3;
  uint64_t v153 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v141 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v143 = (char *)&v125 - v19;
  uint64_t v20 = v163;
  unint64_t v165 = v5;
  uint64_t v166 = v163;
  uint64_t v167 = (uint64_t)v10;
  uint64_t v168 = (void (*)(void, void))AssociatedTypeWitness;
  uint64_t v149 = AssociatedTypeWitness;
  unint64_t v169 = v4;
  uint64_t v170 = v7;
  v171 = v9;
  uint64_t v21 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  unint64_t v165 = v5;
  uint64_t v166 = v20;
  uint64_t v167 = (uint64_t)v10;
  uint64_t v168 = (void (*)(void, void))v8;
  uint64_t v147 = v8;
  unint64_t v169 = v4;
  uint64_t v170 = v7;
  v171 = v9;
  uint64_t v22 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  unint64_t v165 = v5;
  uint64_t v166 = v20;
  uint64_t v167 = (uint64_t)v10;
  uint64_t v168 = (void (*)(void, void))v11;
  unint64_t v169 = v4;
  uint64_t v170 = v7;
  v171 = v9;
  uint64_t v23 = type metadata accessor for CombineLatestStateMachine.State.Upstream();
  uint64_t v151 = v22;
  uint64_t v150 = (void (*)(char *, char *))v23;
  uint64_t v148 = swift_getTupleTypeMetadata3();
  MEMORY[0x1F4188790](v148);
  uint64_t v152 = (char *)&v125 - v24;
  uint64_t v158 = v5;
  uint64_t v159 = v7;
  unint64_t v165 = v5;
  uint64_t v25 = v20;
  unint64_t v26 = v162;
  uint64_t v166 = v25;
  uint64_t v167 = (uint64_t)v10;
  uint64_t v160 = v4;
  uint64_t v168 = v4;
  unint64_t v169 = v7;
  uint64_t v157 = v9;
  uint64_t v170 = v9;
  uint64_t v27 = type metadata accessor for CombineLatestStateMachine.State();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t *)((char *)&v125 - v29);
  (*(void (**)(char *, void *, uint64_t))(v28 + 16))((char *)&v125 - v29, v26, v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v141 = v10;
      uint64_t v139 = (void (*)(void, void))*v30;
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966BBA8);
      uint64_t v40 = v154;
      uint64_t v41 = type metadata accessor for Deque();
      uint64_t v129 = (char *)v39;
      uint64_t v42 = v148;
      uint64_t v43 = swift_getTupleTypeMetadata3();
      uint64_t v44 = (char *)v30 + *(int *)(v43 + 48);
      uint64_t v128 = v43;
      uint64_t v132 = *(void (**)(void, void))((char *)v30 + *(int *)(v43 + 64));
      uint64_t v45 = *(int *)(v42 + 48);
      uint64_t v46 = &v152[v45];
      uint64_t v47 = *(int *)(v42 + 64);
      uint64_t v48 = &v152[v47];
      uint64_t v49 = &v44[v45];
      uint64_t v50 = (void *)v21;
      uint64_t v51 = &v44[v47];
      uint64_t v52 = *(v50 - 1);
      uint64_t v53 = *(void (**)(void))(v52 + 32);
      uint64_t v140 = (void (*)(void *, uint64_t))v50;
      uint64_t v138 = v53;
      uint64_t v137 = v52 + 32;
      v53();
      uint64_t v54 = *(void *)(v151 - 8);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
      uint64_t v145 = v46;
      uint64_t v136 = v55;
      uint64_t v135 = v54 + 32;
      ((void (*)(char *, char *))v55)(v46, v49);
      uint64_t v56 = *((void *)v150 - 1);
      uint64_t v57 = *(void (**)(char *, char *, void *))(v56 + 32);
      uint64_t v131 = v48;
      uint64_t v134 = (void (*)(char *, char *, void (*)(char *, char *)))v57;
      uint64_t v133 = v56 + 32;
      v57(v48, v51, v150);
      uint64_t v164 = v132;
      uint64_t v132 = *(void (**)(void, void))(v28 + 8);
      v132(v26, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v146;
      uint64_t v130 = (void (*)(char *, char *))v41;
      Deque.popFirst()(v41, (uint64_t)v146);
      uint64_t v59 = v40;
      uint64_t v60 = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v58, 1, v40) != 1)
      {
        uint64_t v76 = *(int *)(v40 + 48);
        uint64_t v77 = &v143[v76];
        uint64_t v129 = &v143[v76];
        uint64_t v78 = *(int *)(v59 + 64);
        uint64_t v79 = &v143[v78];
        unint64_t v126 = &v143[v78];
        uint64_t v80 = &v58[v76];
        uint64_t v81 = v58;
        uint64_t v82 = &v58[v78];
        uint64_t v83 = *(void *)(v149 - 8);
        uint64_t v130 = *(void (**)(char *, char *))(v83 + 32);
        uint64_t v142 = v83 + 32;
        v130(v143, v81);
        uint64_t v84 = *(void *)(v147 - 8);
        uint64_t v146 = *(char **)(v84 + 32);
        uint64_t v127 = v84 + 32;
        ((void (*)(char *, char *))v146)(v77, v80);
        uint64_t v85 = v144;
        uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32);
        v86(v79, v82, v144);
        v132(v60, v27);
        uint64_t v87 = (char *)v60 + *(int *)(v128 + 48);
        uint64_t v88 = *(int *)(v128 + 64);
        *uint64_t v60 = v139;
        uint64_t v89 = &v87[*(int *)(v42 + 48)];
        uint64_t v90 = &v87[*(int *)(v42 + 64)];
        v138();
        v136(v89, v145, v151);
        v134(v90, v131, v150);
        *(void *)((char *)v60 + v88) = v164;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
        sub_1A56D6158();
        sub_1A56D5558();
        unint64_t v91 = &v161[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        *(void *)uint64_t v161 = v156;
        uint64_t v92 = v154;
        uint64_t v93 = &v91[*(int *)(v154 + 48)];
        uint64_t v94 = &v91[*(int *)(v154 + 64)];
        ((void (*)(char *, char *, uint64_t))v130)(v91, v143, v149);
        ((void (*)(char *, char *, uint64_t))v146)(v93, v129, v147);
        v86(v94, v126, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v91, 0, 1, v92);
        swift_storeEnumTagMultiPayload();
        unint64_t v165 = v158;
        uint64_t v166 = v163;
        uint64_t v167 = (uint64_t)v141;
        uint64_t v168 = v160;
        unint64_t v169 = v159;
        uint64_t v170 = v157;
        type metadata accessor for CombineLatestStateMachine.NextAction();
        return swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(char *, uint64_t))(v142 + 8))(v58, v155);
      uint64_t v61 = *(void *)v152;
      uint64_t v62 = *(void *)v145;
      unint64_t v63 = v131;
      uint64_t v154 = *(void *)v131;
      if (v61)
      {
        unint64_t v64 = sub_1A54E2AF4(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v66 = v64[2];
        unint64_t v65 = v64[3];
        if (v66 >= v65 >> 1) {
          unint64_t v64 = sub_1A54E2AF4((void *)(v65 > 1), v66 + 1, 1, v64);
        }
        v64[2] = v66 + 1;
        v64[v66 + 4] = v61;
        if (v62) {
          goto LABEL_8;
        }
LABEL_20:
        uint64_t v69 = v63;
        goto LABEL_21;
      }
      unint64_t v64 = (void *)MEMORY[0x1E4FBC860];
      if (!v62) {
        goto LABEL_20;
      }
LABEL_8:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v64 = sub_1A54E2AF4(0, v64[2] + 1, 1, v64);
      }
      unint64_t v68 = v64[2];
      unint64_t v67 = v64[3];
      if (v68 >= v67 >> 1) {
        unint64_t v64 = sub_1A54E2AF4((void *)(v67 > 1), v68 + 1, 1, v64);
      }
      uint64_t v69 = v63;
      v64[2] = v68 + 1;
      v64[v68 + 4] = v62;
LABEL_21:
      uint64_t v110 = v148;
      unint64_t v111 = v152;
      unint64_t v112 = v145;
      unint64_t v113 = (uint64_t (*)(void *, uint64_t))v132;
      if (v154)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v64 = sub_1A54E2AF4(0, v64[2] + 1, 1, v64);
        }
        unint64_t v115 = v64[2];
        unint64_t v114 = v64[3];
        if (v115 >= v114 >> 1) {
          unint64_t v64 = sub_1A54E2AF4((void *)(v114 > 1), v115 + 1, 1, v64);
        }
        v64[2] = v115 + 1;
        v64[v115 + 4] = v154;
        uint64_t v110 = v148;
      }
      *(void *)unint64_t v111 = 0;
      *(void *)unint64_t v112 = 0;
      *(void *)uint64_t v69 = 0;
      uint64_t v116 = v113(v60, v27);
      MEMORY[0x1F4188790](v116);
      strcpy((char *)&v125 - 64, "task upstreams downstreamContinuation buffer ");
      unint64_t v165 = v129;
      uint64_t v166 = v110;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      sub_1A56D6158();
      uint64_t v167 = sub_1A56D5558();
      uint64_t v168 = (void (*)(void, void))v130;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      unint64_t v118 = (char *)v60 + TupleTypeMetadata[12];
      uint64_t v119 = v110;
      uint64_t v120 = TupleTypeMetadata[16];
      uint64_t v121 = TupleTypeMetadata[20];
      *uint64_t v60 = v139;
      unint64_t v122 = &v118[*(int *)(v119 + 48)];
      unint64_t v123 = &v118[*(int *)(v119 + 64)];
      ((void (*)(char *, char *, void (*)(void *, uint64_t)))v138)(v118, v111, v140);
      v136(v122, v112, v151);
      v134(v123, v69, v150);
      *(void *)((char *)v60 + v120) = v156;
      *(void *)((char *)v60 + v121) = v164;
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v161 = v64;
      unint64_t v165 = v158;
      uint64_t v166 = v163;
      uint64_t v167 = (uint64_t)v141;
      uint64_t v168 = v160;
      unint64_t v169 = v159;
      uint64_t v170 = v157;
      type metadata accessor for CombineLatestStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 2u:
      __break(1u);
      goto LABEL_30;
    case 3u:
      uint64_t v164 = (void (*)(void, void))*v30;
      uint64_t v70 = *(void (**)(void *, uint64_t))(v28 + 8);
      v70(v26, v27);
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = v154;
      uint64_t v72 = type metadata accessor for Deque();
      unint64_t v73 = v145;
      Deque.popFirst()(v72, (uint64_t)v145);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v73, 1, v71) == 1)
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v142 + 8))(v73, v155);
        v70(v26, v27);
        swift_storeEnumTagMultiPayload();
LABEL_15:
        *(void *)uint64_t v161 = v156;
        unint64_t v165 = v158;
        uint64_t v166 = v25;
        uint64_t v167 = (uint64_t)v10;
        uint64_t v168 = v160;
        unint64_t v169 = v159;
        uint64_t v170 = v157;
        type metadata accessor for CombineLatestStateMachine.NextAction();
      }
      else
      {
        uint64_t v95 = *(int *)(v71 + 48);
        uint64_t v96 = &v141[v95];
        uint64_t v148 = (uint64_t)&v141[v95];
        uint64_t v97 = *(int *)(v71 + 64);
        uint64_t v152 = &v141[v97];
        uint64_t v140 = v70;
        uint64_t v98 = v26;
        uint64_t v99 = &v73[v95];
        uint64_t v100 = &v73[v97];
        uint64_t v101 = *(void *)(v149 - 8);
        uint64_t v150 = *(void (**)(char *, char *))(v101 + 32);
        uint64_t v151 = v101 + 32;
        v150(v141, v73);
        uint64_t v102 = v147;
        uint64_t v103 = *(void *)(v147 - 8);
        uint64_t v145 = *(char **)(v103 + 32);
        uint64_t v146 = (char *)(v103 + 32);
        ((void (*)(char *, char *, uint64_t))v145)(v96, v99, v147);
        uint64_t v104 = v144;
        uint64_t v105 = *(void *)(v144 - 8);
        uint64_t v142 = *(void *)(v105 + 32);
        uint64_t v143 = (char *)(v105 + 32);
        ((void (*)(char *, char *, uint64_t))v142)(v152, v100, v144);
        v140(v98, v27);
        *uint64_t v98 = v164;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
        sub_1A56D6158();
        sub_1A56D5558();
        uint64_t v106 = &v161[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        *(void *)uint64_t v161 = v156;
        uint64_t v107 = v154;
        unint64_t v108 = &v106[*(int *)(v154 + 48)];
        uint64_t v109 = &v106[*(int *)(v154 + 64)];
        ((void (*)(char *, char *, uint64_t))v150)(v106, v141, v149);
        ((void (*)(char *, uint64_t, uint64_t))v145)(v108, v148, v102);
        ((void (*)(char *, char *, uint64_t))v142)(v109, v152, v104);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(v106, 0, 1, v107);
        swift_storeEnumTagMultiPayload();
        unint64_t v165 = v158;
        uint64_t v166 = v25;
        uint64_t v167 = (uint64_t)v10;
        uint64_t v168 = v160;
        unint64_t v169 = v159;
        uint64_t v170 = v157;
        type metadata accessor for CombineLatestStateMachine.NextAction();
      }
      return swift_storeEnumTagMultiPayload();
    case 4u:
      uint64_t v74 = (void (*)(void, void))*v30;
      (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v27);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      sub_1A56D6158();
      sub_1A56D5558();
      uint64_t v75 = &v161[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      *(void *)uint64_t v161 = v156;
      *(void *)uint64_t v75 = v74;
      swift_storeEnumTagMultiPayload();
      unint64_t v165 = v158;
      uint64_t v166 = v25;
      uint64_t v167 = (uint64_t)v10;
      uint64_t v168 = v160;
      unint64_t v169 = v159;
      uint64_t v170 = v157;
      type metadata accessor for CombineLatestStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 5u:
      goto LABEL_15;
    case 6u:
LABEL_30:
      __break(1u);
      JUMPOUT(0x1A556155CLL);
    default:
      uint64_t v31 = sub_1A56D5898();
      uint64_t v32 = v158;
      uint64_t v33 = swift_getTupleTypeMetadata3();
      uint64_t v34 = (char *)v30 + *(int *)(v33 + 48);
      uint64_t v35 = (uint64_t)v10;
      uint64_t v36 = (char *)v30 + *(int *)(v33 + 64);
      uint64_t v37 = v161;
      (*(void (**)(char *, void *, char *))(*((void *)v32 - 1) + 32))(v161, v30, v32);
      uint64_t v38 = swift_getTupleTypeMetadata3();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(&v37[*(int *)(v38 + 48)], v34, v25);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(&v37[*(int *)(v38 + 64)], v36, v31);
      unint64_t v165 = v32;
      uint64_t v166 = v25;
      uint64_t v167 = v35;
      uint64_t v168 = v160;
      unint64_t v169 = v159;
      uint64_t v170 = v157;
      type metadata accessor for CombineLatestStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t type metadata accessor for CombineLatestStateMachine.ElementProducedAction()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1A5561590()
{
  unint64_t result = qword_1E9671648[0];
  if (!qword_1E9671648[0])
  {
    sub_1A56D5438();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9671648);
  }
  return result;
}

uint64_t type metadata accessor for CombineLatestStateMachine.NextAction()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_1A5561600(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_1A5561640(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_1A5561640(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    return (id)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  }
  return result;
}

void sub_1A5561650(uint64_t *a1)
{
}

void sub_1A556165C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
}
  }

uint64_t *sub_1A556166C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_1A5561640(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1A556165C(v5, v6);
  return a1;
}

uint64_t *sub_1A55616B4(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1A556165C(v3, v4);
  return a1;
}

uint64_t sub_1A55616F0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 49) >> 14) | (2
                                                           * ((*(void *)(a1 + 8) >> 49) & 0x3800 | ((*(void *)(a1 + 8) & 7) << 8) | HIBYTE(*(void *)a1) & 0xF0 | *(void *)a1 & 0xF))) ^ 0x7FFF;
  if (v3 >= 0x7FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1A5561768(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFE)
  {
    *(void *)id result = a2 - 0x7FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x3FFF | ((-a2 & 0x7FFF) << 14);
      *(void *)id result = (v3 | (v3 << 56)) & 0xF00000000000000FLL;
      *(void *)(result + 8) = ((v3 >> 8) | (v3 << 49)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A55617D4(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_1A55617E0(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

void *sub_1A55617F0(void *result, uint64_t a2)
{
  uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF0uLL;
  result[1] = v2;
  return result;
}

uint64_t type metadata accessor for CombineLatestStateMachine.ChildTaskSuspendedAction()
{
  return swift_getGenericMetadata();
}

void *sub_1A5561820(void *a1, void *a2, uint64_t a3)
{
  return sub_1A55696B8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1A5561838);
}

uint64_t sub_1A5561838()
{
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5561878()
{
  return sub_1A5561888();
}

uint64_t sub_1A5561888()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t *sub_1A55618C8(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_1A5569734(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1A5561838, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5561888);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *sub_1A5561908(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55697B8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5561888);
}

uint64_t type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A5561940(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t result = sub_1A56D6158();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t *sub_1A5561AC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v65 - 8);
  uint64_t v5 = v4;
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  int v7 = *(_DWORD *)(v4 + 80) | v3;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = v6;
  uint64_t v10 = v2;
  uint64_t v11 = *(void *)(v8 - 8);
  int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(_DWORD *)(v11 + 80);
  int v14 = v7 | *(_DWORD *)(v11 + 80);
  uint64_t v15 = v14 & 0xF8 | 7u;
  uint64_t v16 = ~v15;
  uint64_t v17 = *(unsigned int *)(v2 + 84);
  uint64_t v18 = *(unsigned int *)(v4 + 84);
  if (v18 <= v17) {
    unsigned int v19 = *(_DWORD *)(v2 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v20 = v12 - 1;
  if (!v12) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = *(void *)(v2 + 64) + v9;
  uint64_t v23 = *(void *)(v4 + 64);
  uint64_t v24 = v23 + v13;
  uint64_t v25 = (v23 + v13 + (v22 & ~v9)) & ~v13;
  if (v12) {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  uint64_t v27 = v25 + v26;
  if (v21) {
    size_t v28 = v25 + v26;
  }
  else {
    size_t v28 = v27 + 1;
  }
  if (v28 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v28;
  }
  if ((v14 & 0x1000F8) != 0 || v29 + ((v15 + 8) & (unint64_t)~v15) + 1 > 0x18)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    uint64_t v32 = (uint64_t *)(v31 + ((v15 + 16) & v16));
    swift_retain();
  }
  else
  {
    uint64_t v32 = a1;
    *a1 = *a2;
    uint64_t v33 = (void *)(((unint64_t)a1 + v15 + 8) & v16);
    uint64_t v34 = (unsigned __int8 *)(((unint64_t)a2 + v15 + 8) & v16);
    unsigned int v35 = v34[v29];
    unsigned int v36 = v35 - 2;
    if (v35 < 2)
    {
      uint64_t v38 = v65;
LABEL_31:
      if (v35 != 1) {
        goto LABEL_39;
      }
    }
    else
    {
      if (v29 <= 3) {
        uint64_t v37 = v29;
      }
      else {
        uint64_t v37 = 4;
      }
      uint64_t v38 = v65;
      switch(v37)
      {
        case 1:
          int v39 = *v34;
          break;
        case 2:
          int v39 = *(unsigned __int16 *)v34;
          break;
        case 3:
          int v39 = *(unsigned __int16 *)v34 | (v34[2] << 16);
          break;
        case 4:
          int v39 = *(_DWORD *)v34;
          break;
        default:
          goto LABEL_31;
      }
      int v42 = (v39 | (v36 << (8 * v29))) + 2;
      int v43 = v39 + 2;
      if (v29 < 4) {
        int v43 = v42;
      }
      if (v43 != 1)
      {
LABEL_39:
        uint64_t v63 = v8;
        uint64_t v59 = v27;
        size_t __n = v26;
        __dsta = v33;
        uint64_t v61 = ~v9;
        uint64_t v62 = ~v13;
        if (v21)
        {
          if (v17 == v21)
          {
            unsigned int v44 = v21;
            uint64_t v45 = v10;
            int v46 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v34, v17, AssociatedTypeWitness);
            uint64_t v10 = v45;
            unsigned int v21 = v44;
            uint64_t v33 = __dsta;
            if (!v46) {
              goto LABEL_56;
            }
LABEL_66:
            memcpy(v33, v34, v28);
            goto LABEL_67;
          }
          uint64_t v50 = v10;
          unint64_t v51 = (unint64_t)&v34[v22] & ~v9;
          unsigned int v52 = v21;
          if (v18 != v21)
          {
            unsigned int v54 = (*(uint64_t (**)(unint64_t))(v11 + 48))((v24 + v51) & ~v13);
            unsigned int v21 = v52;
            uint64_t v10 = v50;
            uint64_t v33 = __dsta;
            if (v54 < 2) {
              goto LABEL_56;
            }
            goto LABEL_66;
          }
          int v53 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v51, v18, v38);
          unsigned int v21 = v52;
          uint64_t v10 = v50;
          uint64_t v33 = __dsta;
          if (v53) {
            goto LABEL_66;
          }
        }
        else if (v34[v27])
        {
          int v47 = (v34[v27] - 1) << (8 * v27);
          if (v27 > 3) {
            int v47 = 0;
          }
          if (v27)
          {
            int v48 = v27 <= 3 ? v27 : 4;
            switch(v48)
            {
              case 2:
                int v49 = *(unsigned __int16 *)v34;
                break;
              case 3:
                int v49 = *(unsigned __int16 *)v34 | (v34[2] << 16);
                break;
              case 4:
                int v49 = *(_DWORD *)v34;
                break;
              default:
                int v49 = *v34;
                break;
            }
          }
          else
          {
            int v49 = 0;
          }
          if ((v49 | v47) != 0xFFFFFFFF) {
            goto LABEL_66;
          }
        }
LABEL_56:
        unsigned int v55 = v21;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v10 + 16))(v33, v34, AssociatedTypeWitness);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v33 + v22) & v61, (unint64_t)&v34[v22] & v61, v65);
        uint64_t v56 = (void *)((v24 + (((unint64_t)v33 + v22) & v61)) & v62);
        uint64_t v57 = (const void *)((v24 + ((unint64_t)&v34[v22] & v61)) & v62);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v57, 1, v63))
        {
          memcpy(v56, v57, __n);
          uint64_t v33 = __dsta;
          if (!v55) {
            goto LABEL_60;
          }
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v56, v57, v63);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v56, 0, 1, v63);
          uint64_t v33 = __dsta;
          if (!v55) {
LABEL_60:
          }
            *((unsigned char *)v33 + v59) = 0;
        }
LABEL_67:
        *((unsigned char *)v33 + v29) = 0;
        return v32;
      }
    }
    uint64_t v40 = *(void *)v34;
    id v41 = *(id *)v34;
    *uint64_t v33 = v40;
    *((unsigned char *)v33 + v29) = 1;
  }
  return v32;
}

void sub_1A5562080(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  int v2 = *(_DWORD *)(v1 + 80);
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v39 - 8);
  uint64_t v4 = v3;
  int v5 = *(_DWORD *)(v3 + 80);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  char v9 = v5 | v2 | *(_DWORD *)(v7 + 80);
  uint64_t v10 = v1;
  uint64_t v11 = v9 & 0xF8 | 7u;
  uint64_t v12 = *(unsigned int *)(v1 + 84);
  uint64_t v13 = *(unsigned int *)(v3 + 84);
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v16 = *(void *)(v7 + 64);
  uint64_t v17 = *(_DWORD *)(v7 + 80);
  uint64_t v18 = (unsigned __int8 *)((a1 + v11 + 8) & ~v11);
  if (v13 <= v12) {
    unsigned int v19 = *(_DWORD *)(v1 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v3 + 84);
  }
  unsigned int v20 = v8 - 1;
  if (!v8) {
    unsigned int v20 = 0;
  }
  if (v20 > v19) {
    unsigned int v19 = v20;
  }
  uint64_t v21 = v14 + v5;
  uint64_t v22 = v15 + v17;
  if (!v8) {
    ++v16;
  }
  unint64_t v23 = v16 + ((v15 + v17 + ((v14 + v5) & ~(unint64_t)v5)) & ~v17);
  if (v19) {
    unint64_t v24 = v23;
  }
  else {
    unint64_t v24 = v23 + 1;
  }
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  unsigned int v25 = v18[v24];
  if (v25 >= 2)
  {
    if (v24 <= 3) {
      uint64_t v26 = v24;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *v18;
        goto LABEL_24;
      case 2:
        int v27 = *(unsigned __int16 *)v18;
        goto LABEL_24;
      case 3:
        int v27 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        goto LABEL_24;
      case 4:
        int v27 = *(_DWORD *)v18;
LABEL_24:
        int v28 = (v27 | ((v25 - 2) << (8 * v24))) + 2;
        unsigned int v29 = v27 + 2;
        if (v24 >= 4) {
          unsigned int v25 = v29;
        }
        else {
          unsigned int v25 = v28;
        }
        break;
      default:
        break;
    }
  }
  if (v25 == 1)
  {
    uint64_t v30 = *(void **)v18;

    return;
  }
  unint64_t v31 = ~(unint64_t)v5;
  uint64_t v32 = ~v17;
  uint64_t v38 = *(void *)(v6 - 8);
  if (v19)
  {
    if (v12 == v19)
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v18, v12, AssociatedTypeWitness))
      {
        return;
      }
    }
    else
    {
      unint64_t v36 = (unint64_t)&v18[v21] & v31;
      if (v13 == v19)
      {
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v36, v13, v39)) {
          return;
        }
      }
      else if ((*(unsigned int (**)(unint64_t))(v7 + 48))((v22 + v36) & v32) >= 2)
      {
        return;
      }
    }
    goto LABEL_54;
  }
  if (!v18[v23]) {
    goto LABEL_54;
  }
  int v33 = (v18[v23] - 1) << (8 * v23);
  if (v23 > 3) {
    int v33 = 0;
  }
  if (v23)
  {
    int v34 = v23 <= 3 ? v23 : 4;
    switch(v34)
    {
      case 2:
        int v35 = *(unsigned __int16 *)v18;
        break;
      case 3:
        int v35 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        break;
      case 4:
        int v35 = *(_DWORD *)v18;
        break;
      default:
        int v35 = *v18;
        break;
    }
  }
  else
  {
    int v35 = 0;
  }
  if ((v35 | v33) == 0xFFFFFFFF)
  {
LABEL_54:
    (*(void (**)(unsigned __int8 *, uint64_t))(v10 + 8))(v18, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))((unint64_t)&v18[v21] & v31, v39);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v38 + 48))((v22 + ((unint64_t)&v18[v21] & v31)) & v32, 1, v6))
    {
      uint64_t v37 = *(void (**)(unint64_t, uint64_t))(v38 + 8);
      v37((v22 + ((unint64_t)&v18[v21] & v31)) & v32, v6);
    }
  }
}

void *sub_1A5562538(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v52 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  int v6 = *(_DWORD *)(v4 + 80) | v3;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v5;
  uint64_t v9 = *(void *)(v7 - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  char v12 = v6 | *(_DWORD *)(v9 + 80);
  uint64_t v13 = a1;
  uint64_t v14 = v12 & 0xF8 | 7u;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14 + 8) & ~v14);
  uint64_t v16 = (unsigned __int8 *)(((unint64_t)a2 + v14 + 8) & ~v14);
  uint64_t v55 = v2;
  uint64_t v17 = *(unsigned int *)(v2 + 84);
  uint64_t v51 = v4;
  uint64_t v18 = *(unsigned int *)(v4 + 84);
  if (v18 <= v17) {
    unsigned int v19 = *(_DWORD *)(v2 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v20 = v10 - 1;
  if (!v10) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = *(void *)(v2 + 64) + v8;
  uint64_t v23 = *(void *)(v4 + 64);
  uint64_t v24 = v23 + v11;
  uint64_t v25 = (v23 + v11 + (v22 & ~v8)) & ~v11;
  if (v10) {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64) + 1;
  }
  uint64_t v27 = v25 + v26;
  if (v21) {
    size_t v28 = v25 + v26;
  }
  else {
    size_t v28 = v27 + 1;
  }
  if (v28 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v28;
  }
  unsigned int v30 = v16[v29];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v16;
        goto LABEL_27;
      case 2:
        int v33 = *(unsigned __int16 *)v16;
        goto LABEL_27;
      case 3:
        int v33 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        goto LABEL_27;
      case 4:
        int v33 = *(_DWORD *)v16;
LABEL_27:
        int v34 = (v33 | (v31 << (8 * v29))) + 2;
        unsigned int v30 = v33 + 2;
        if (v29 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 == 1)
  {
    uint64_t v35 = *(void *)v16;
    id v36 = *(id *)v16;
    *uint64_t v15 = v35;
    char v37 = 1;
    goto LABEL_59;
  }
  uint64_t v49 = ~v11;
  uint64_t v50 = v7;
  size_t __n = v26;
  uint64_t v48 = ~v8;
  if (!v21)
  {
    if (!v16[v27]) {
      goto LABEL_48;
    }
    int v38 = (v16[v27] - 1) << (8 * v27);
    if (v27 > 3) {
      int v38 = 0;
    }
    if (v27)
    {
      int v39 = v27 <= 3 ? v25 + v26 : 4;
      switch(v39)
      {
        case 2:
          int v40 = *(unsigned __int16 *)v16;
          break;
        case 3:
          int v40 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          break;
        case 4:
          int v40 = *(_DWORD *)v16;
          break;
        default:
          int v40 = *v16;
          break;
      }
    }
    else
    {
      int v40 = 0;
    }
    if ((v40 | v38) == 0xFFFFFFFF) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if (v17 == v21)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v55 + 48))(v16, v17, AssociatedTypeWitness))goto LABEL_48; {
LABEL_58:
    }
    memcpy(v15, v16, v28);
    char v37 = 0;
    goto LABEL_59;
  }
  unint64_t v41 = (unint64_t)&v16[v22] & ~v8;
  if (v18 == v21)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v51 + 48))(v41, v18, v52)) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if ((*(unsigned int (**)(unint64_t))(v9 + 48))((v24 + v41) & ~v11) >= 2) {
    goto LABEL_58;
  }
LABEL_48:
  uint64_t v46 = v27;
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v55 + 16))(v15, v16, AssociatedTypeWitness);
  unint64_t v42 = (unint64_t)&v16[v22] & v48;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))(((unint64_t)v15 + v22) & v48, v42, v52);
  int v43 = (void *)((v24 + (((unint64_t)v15 + v22) & v48)) & v49);
  unsigned int v44 = (const void *)((v24 + v42) & v49);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v44, 1, v50))
  {
    memcpy(v43, v44, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v43, v44, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v43, 0, 1, v50);
  }
  uint64_t v13 = a1;
  char v37 = 0;
  if (!v21) {
    *((unsigned char *)v15 + v46) = 0;
  }
LABEL_59:
  *((unsigned char *)v15 + v29) = v37;
  return v13;
}

void *sub_1A5562A54(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v65 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = ((v7 | v5) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v11 = (unsigned __int8 *)(((unint64_t)a1 + v10 + 8) & ~v10);
  char v12 = (unsigned __int8 *)(((unint64_t)a2 + v10 + 8) & ~v10);
  if (v11 != v12)
  {
    uint64_t v13 = *(void *)(v8 - 8);
    uint64_t v60 = v8;
    uint64_t v14 = v7;
    uint64_t v15 = *(_DWORD *)(v9 + 80);
    uint64_t v16 = *(unsigned int *)(v4 + 84);
    unsigned int v17 = *(_DWORD *)(v6 + 84);
    unsigned int v57 = v17;
    if (v17 <= v16) {
      unsigned int v17 = *(_DWORD *)(v4 + 84);
    }
    unsigned int v18 = *(_DWORD *)(v9 + 84);
    unsigned int v19 = v18 - 1;
    if (!v18) {
      unsigned int v19 = 0;
    }
    if (v19 <= v17) {
      unsigned int v20 = v17;
    }
    else {
      unsigned int v20 = v19;
    }
    unsigned int v55 = *(_DWORD *)(v9 + 84);
    uint64_t v62 = *(void *)(v4 + 64);
    uint64_t v59 = *(void *)(v6 + 64) + v15;
    if (v18) {
      uint64_t v21 = *(void *)(v9 + 64);
    }
    else {
      uint64_t v21 = *(void *)(v9 + 64) + 1;
    }
    uint64_t v63 = ((v59 + ((v62 + v14) & ~v14)) & ~v15) + v21;
    if (v20) {
      unint64_t v22 = ((v59 + ((v62 + v14) & ~v14)) & ~v15) + v21;
    }
    else {
      unint64_t v22 = ((v59 + ((v62 + v14) & ~v14)) & ~v15) + v21 + 1;
    }
    if (v22 <= 8) {
      uint64_t v23 = 8;
    }
    else {
      uint64_t v23 = v22;
    }
    unsigned int v24 = v11[v23];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v11;
          goto LABEL_27;
        case 2:
          int v27 = *(unsigned __int16 *)v11;
          goto LABEL_27;
        case 3:
          int v27 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_27;
        case 4:
          int v27 = *(_DWORD *)v11;
LABEL_27:
          int v28 = (v27 | (v25 << (8 * v23))) + 2;
          unsigned int v24 = v27 + 2;
          if (v23 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v61 = ~v14;
    uint64_t v58 = ~v15;
    unsigned int v64 = v20;
    size_t v54 = v21;
    size_t __n = v22;
    if (v24 == 1)
    {

      goto LABEL_56;
    }
    if (v20)
    {
      if (v16 == v20)
      {
        int v29 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v11, v16, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v33 = (unint64_t)&v11[v14 + v62] & v61;
        if (v57 != v20)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v59 + v33) & v58, v18, v60) >= 2)goto LABEL_56; {
          goto LABEL_54;
          }
        }
        int v29 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v33, v57, v65);
      }
      if (v29) {
        goto LABEL_56;
      }
    }
    else if (v11[v63])
    {
      int v30 = (v11[v63] - 1) << (8 * v63);
      if (v63 > 3) {
        int v30 = 0;
      }
      if (v63)
      {
        int v31 = v63 <= 3 ? v63 : 4;
        switch(v31)
        {
          case 2:
            int v32 = *(unsigned __int16 *)v11;
            break;
          case 3:
            int v32 = *(unsigned __int16 *)v11 | (v11[2] << 16);
            break;
          case 4:
            int v32 = *(_DWORD *)v11;
            break;
          default:
            int v32 = *v11;
            break;
        }
      }
      else
      {
        int v32 = 0;
      }
      if ((v32 | v30) != 0xFFFFFFFF)
      {
LABEL_56:
        unsigned int v35 = v12[v23];
        unsigned int v36 = v35 - 2;
        if (v35 < 2)
        {
          unsigned int v38 = v64;
LABEL_63:
          if (v35 != 1) {
            goto LABEL_71;
          }
        }
        else
        {
          if (v23 <= 3) {
            uint64_t v37 = v23;
          }
          else {
            uint64_t v37 = 4;
          }
          unsigned int v38 = v64;
          switch(v37)
          {
            case 1:
              int v39 = *v12;
              break;
            case 2:
              int v39 = *(unsigned __int16 *)v12;
              break;
            case 3:
              int v39 = *(unsigned __int16 *)v12 | (v12[2] << 16);
              break;
            case 4:
              int v39 = *(_DWORD *)v12;
              break;
            default:
              goto LABEL_63;
          }
          int v43 = (v39 | (v36 << (8 * v23))) + 2;
          int v44 = v39 + 2;
          if (v23 < 4) {
            int v44 = v43;
          }
          if (v44 != 1)
          {
LABEL_71:
            if (!v38)
            {
              uint64_t v46 = v63;
              if (v12[v63])
              {
                int v47 = (v12[v63] - 1) << (8 * v63);
                if (v63 > 3) {
                  int v47 = 0;
                }
                if (v63)
                {
                  int v48 = v63 <= 3 ? v63 : 4;
                  switch(v48)
                  {
                    case 2:
                      int v49 = *(unsigned __int16 *)v12;
                      break;
                    case 3:
                      int v49 = *(unsigned __int16 *)v12 | (v12[2] << 16);
                      break;
                    case 4:
                      int v49 = *(_DWORD *)v12;
                      break;
                    default:
                      int v49 = *v12;
                      break;
                  }
                }
                else
                {
                  int v49 = 0;
                }
                if ((v49 | v47) != 0xFFFFFFFF) {
                  goto LABEL_86;
                }
              }
              goto LABEL_94;
            }
            if (v16 == v38)
            {
              int v45 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v12, v16, AssociatedTypeWitness);
            }
            else
            {
              unint64_t v50 = (unint64_t)&v12[v14 + v62] & v61;
              if (v57 != v38)
              {
                uint64_t v46 = v63;
                if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v59 + v50) & v58, v55, v60) >= 2)goto LABEL_86; {
                goto LABEL_94;
                }
              }
              int v45 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v50, v57, v65);
            }
            uint64_t v46 = v63;
            if (v45)
            {
LABEL_86:
              memcpy(v11, v12, __n);
              char v42 = 0;
              goto LABEL_99;
            }
LABEL_94:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 16))(v11, v12, AssociatedTypeWitness);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))((unint64_t)&v11[v14 + v62] & v61, (unint64_t)&v12[v14 + v62] & v61, v65);
            uint64_t v51 = (void *)((v59 + ((unint64_t)&v11[v14 + v62] & v61)) & v58);
            uint64_t v52 = (const void *)((v59 + ((unint64_t)&v12[v14 + v62] & v61)) & v58);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v52, 1, v60))
            {
              memcpy(v51, v52, v54);
              char v42 = v64;
              if (v64)
              {
LABEL_96:
                char v42 = 0;
                goto LABEL_99;
              }
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v51, v52, v60);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v51, 0, 1, v60);
              char v42 = v64;
              if (v64) {
                goto LABEL_96;
              }
            }
            v11[v46] = 0;
            goto LABEL_99;
          }
        }
        uint64_t v40 = *(void *)v12;
        id v41 = *(id *)v12;
        *(void *)uint64_t v11 = v40;
        char v42 = 1;
LABEL_99:
        v11[v23] = v42;
        return a1;
      }
    }
LABEL_54:
    (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v11, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&v11[v14 + v62] & v61, v65);
    unint64_t v34 = (v59 + ((unint64_t)&v11[v14 + v62] & v61)) & v58;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v34, 1, v60)) {
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v34, v60);
    }
    goto LABEL_56;
  }
  return a1;
}

void *sub_1A55631E8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v50 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v50 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  int v6 = *(_DWORD *)(v4 + 80) | v3;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v5;
  uint64_t v9 = *(void *)(v7 - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  char v12 = v6 | *(_DWORD *)(v9 + 80);
  uint64_t v13 = a1;
  uint64_t v14 = v12 & 0xF8 | 7u;
  uint64_t v15 = (void *)(((unint64_t)a1 + v14 + 8) & ~v14);
  uint64_t v16 = (unsigned __int8 *)(((unint64_t)a2 + v14 + 8) & ~v14);
  uint64_t v53 = v2;
  uint64_t v17 = *(unsigned int *)(v2 + 84);
  uint64_t v49 = v4;
  uint64_t v18 = *(unsigned int *)(v4 + 84);
  if (v18 <= v17) {
    unsigned int v19 = *(_DWORD *)(v2 + 84);
  }
  else {
    unsigned int v19 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v20 = v10 - 1;
  if (!v10) {
    unsigned int v20 = 0;
  }
  if (v20 <= v19) {
    unsigned int v21 = v19;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = *(void *)(v2 + 64) + v8;
  uint64_t v23 = *(void *)(v4 + 64);
  uint64_t v24 = v23 + v11;
  uint64_t v25 = (v23 + v11 + (v22 & ~v8)) & ~v11;
  if (v10) {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v7 - 8) + 64) + 1;
  }
  uint64_t v27 = v25 + v26;
  if (v21) {
    size_t v28 = v25 + v26;
  }
  else {
    size_t v28 = v27 + 1;
  }
  if (v28 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v28;
  }
  unsigned int v30 = v16[v29];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v16;
        goto LABEL_27;
      case 2:
        int v33 = *(unsigned __int16 *)v16;
        goto LABEL_27;
      case 3:
        int v33 = *(unsigned __int16 *)v16 | (v16[2] << 16);
        goto LABEL_27;
      case 4:
        int v33 = *(_DWORD *)v16;
LABEL_27:
        int v34 = (v33 | (v31 << (8 * v29))) + 2;
        unsigned int v30 = v33 + 2;
        if (v29 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 == 1)
  {
    *uint64_t v15 = *(void *)v16;
    char v35 = 1;
    goto LABEL_59;
  }
  uint64_t v47 = ~v11;
  uint64_t v48 = v7;
  size_t __n = v26;
  uint64_t v46 = ~v8;
  if (!v21)
  {
    if (!v16[v27]) {
      goto LABEL_48;
    }
    int v36 = (v16[v27] - 1) << (8 * v27);
    if (v27 > 3) {
      int v36 = 0;
    }
    if (v27)
    {
      int v37 = v27 <= 3 ? v25 + v26 : 4;
      switch(v37)
      {
        case 2:
          int v38 = *(unsigned __int16 *)v16;
          break;
        case 3:
          int v38 = *(unsigned __int16 *)v16 | (v16[2] << 16);
          break;
        case 4:
          int v38 = *(_DWORD *)v16;
          break;
        default:
          int v38 = *v16;
          break;
      }
    }
    else
    {
      int v38 = 0;
    }
    if ((v38 | v36) == 0xFFFFFFFF) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if (v17 == v21)
  {
    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v53 + 48))(v16, v17, AssociatedTypeWitness))goto LABEL_48; {
LABEL_58:
    }
    memcpy(v15, v16, v28);
    char v35 = 0;
    goto LABEL_59;
  }
  unint64_t v39 = (unint64_t)&v16[v22] & ~v8;
  if (v18 == v21)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v49 + 48))(v39, v18, v50)) {
      goto LABEL_48;
    }
    goto LABEL_58;
  }
  if ((*(unsigned int (**)(unint64_t))(v9 + 48))((v24 + v39) & ~v11) >= 2) {
    goto LABEL_58;
  }
LABEL_48:
  uint64_t v44 = v27;
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v53 + 32))(v15, v16, AssociatedTypeWitness);
  unint64_t v40 = (unint64_t)&v16[v22] & v46;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v49 + 32))(((unint64_t)v15 + v22) & v46, v40, v50);
  id v41 = (void *)((v24 + (((unint64_t)v15 + v22) & v46)) & v47);
  char v42 = (const void *)((v24 + v40) & v47);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v42, 1, v48))
  {
    memcpy(v41, v42, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v41, v42, v48);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v41, 0, 1, v48);
  }
  uint64_t v13 = a1;
  char v35 = 0;
  if (!v21) {
    *((unsigned char *)v15 + v44) = 0;
  }
LABEL_59:
  *((unsigned char *)v15 + v29) = v35;
  return v13;
}

void *sub_1A55636FC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v63 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v63 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = ((v7 | v5) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v11 = (unsigned __int8 *)(((unint64_t)a1 + v10 + 8) & ~v10);
  char v12 = (unsigned __int8 *)(((unint64_t)a2 + v10 + 8) & ~v10);
  if (v11 != v12)
  {
    uint64_t v13 = *(void *)(v8 - 8);
    uint64_t v14 = v7;
    uint64_t v15 = *(_DWORD *)(v9 + 80);
    uint64_t v16 = *(unsigned int *)(v4 + 84);
    unsigned int v17 = *(_DWORD *)(v6 + 84);
    unsigned int v55 = v17;
    if (v17 <= v16) {
      unsigned int v17 = *(_DWORD *)(v4 + 84);
    }
    unsigned int v18 = *(_DWORD *)(v9 + 84);
    unsigned int v19 = v18 - 1;
    if (!v18) {
      unsigned int v19 = 0;
    }
    if (v19 <= v17) {
      unsigned int v20 = v17;
    }
    else {
      unsigned int v20 = v19;
    }
    unsigned int v53 = *(_DWORD *)(v9 + 84);
    uint64_t v60 = *(void *)(v4 + 64);
    uint64_t v57 = *(void *)(v6 + 64) + v15;
    if (v18) {
      uint64_t v21 = *(void *)(v9 + 64);
    }
    else {
      uint64_t v21 = *(void *)(v9 + 64) + 1;
    }
    uint64_t v61 = ((v57 + ((v60 + v14) & ~v14)) & ~v15) + v21;
    if (v20) {
      unint64_t v22 = ((v57 + ((v60 + v14) & ~v14)) & ~v15) + v21;
    }
    else {
      unint64_t v22 = ((v57 + ((v60 + v14) & ~v14)) & ~v15) + v21 + 1;
    }
    if (v22 <= 8) {
      uint64_t v23 = 8;
    }
    else {
      uint64_t v23 = v22;
    }
    unsigned int v24 = v11[v23];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *v11;
          goto LABEL_27;
        case 2:
          int v27 = *(unsigned __int16 *)v11;
          goto LABEL_27;
        case 3:
          int v27 = *(unsigned __int16 *)v11 | (v11[2] << 16);
          goto LABEL_27;
        case 4:
          int v27 = *(_DWORD *)v11;
LABEL_27:
          int v28 = (v27 | (v25 << (8 * v23))) + 2;
          unsigned int v24 = v27 + 2;
          if (v23 < 4) {
            unsigned int v24 = v28;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v58 = v8;
    uint64_t v59 = ~v14;
    uint64_t v56 = ~v15;
    unsigned int v62 = v20;
    size_t v52 = v21;
    size_t __n = v22;
    if (v24 == 1)
    {

      goto LABEL_56;
    }
    if (v20)
    {
      if (v16 == v20)
      {
        int v29 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v11, v16, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v33 = (unint64_t)&v11[v14 + v60] & v59;
        if (v55 != v20)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v57 + v33) & v56, v18, v58) >= 2)goto LABEL_56; {
          goto LABEL_54;
          }
        }
        int v29 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v33, v55, v63);
      }
      if (v29) {
        goto LABEL_56;
      }
    }
    else if (v11[v61])
    {
      int v30 = (v11[v61] - 1) << (8 * v61);
      if (v61 > 3) {
        int v30 = 0;
      }
      if (v61)
      {
        int v31 = v61 <= 3 ? v61 : 4;
        switch(v31)
        {
          case 2:
            int v32 = *(unsigned __int16 *)v11;
            break;
          case 3:
            int v32 = *(unsigned __int16 *)v11 | (v11[2] << 16);
            break;
          case 4:
            int v32 = *(_DWORD *)v11;
            break;
          default:
            int v32 = *v11;
            break;
        }
      }
      else
      {
        int v32 = 0;
      }
      if ((v32 | v30) != 0xFFFFFFFF)
      {
LABEL_56:
        unsigned int v35 = v12[v23];
        unsigned int v36 = v35 - 2;
        if (v35 < 2)
        {
          unsigned int v38 = v62;
LABEL_63:
          if (v35 != 1) {
            goto LABEL_71;
          }
        }
        else
        {
          if (v23 <= 3) {
            uint64_t v37 = v23;
          }
          else {
            uint64_t v37 = 4;
          }
          unsigned int v38 = v62;
          switch(v37)
          {
            case 1:
              int v39 = *v12;
              break;
            case 2:
              int v39 = *(unsigned __int16 *)v12;
              break;
            case 3:
              int v39 = *(unsigned __int16 *)v12 | (v12[2] << 16);
              break;
            case 4:
              int v39 = *(_DWORD *)v12;
              break;
            default:
              goto LABEL_63;
          }
          int v41 = (v39 | (v36 << (8 * v23))) + 2;
          int v42 = v39 + 2;
          if (v23 < 4) {
            int v42 = v41;
          }
          if (v42 != 1)
          {
LABEL_71:
            if (!v38)
            {
              uint64_t v44 = v61;
              if (v12[v61])
              {
                int v45 = (v12[v61] - 1) << (8 * v61);
                if (v61 > 3) {
                  int v45 = 0;
                }
                if (v61)
                {
                  int v46 = v61 <= 3 ? v61 : 4;
                  switch(v46)
                  {
                    case 2:
                      int v47 = *(unsigned __int16 *)v12;
                      break;
                    case 3:
                      int v47 = *(unsigned __int16 *)v12 | (v12[2] << 16);
                      break;
                    case 4:
                      int v47 = *(_DWORD *)v12;
                      break;
                    default:
                      int v47 = *v12;
                      break;
                  }
                }
                else
                {
                  int v47 = 0;
                }
                if ((v47 | v45) != 0xFFFFFFFF) {
                  goto LABEL_86;
                }
              }
              goto LABEL_94;
            }
            if (v16 == v38)
            {
              int v43 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v12, v16, AssociatedTypeWitness);
            }
            else
            {
              unint64_t v48 = (unint64_t)&v12[v14 + v60] & v59;
              if (v55 != v38)
              {
                uint64_t v44 = v61;
                if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v13 + 48))((v57 + v48) & v56, v53, v58) >= 2)goto LABEL_86; {
                goto LABEL_94;
                }
              }
              int v43 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v6 + 48))(v48, v55, v63);
            }
            uint64_t v44 = v61;
            if (v43)
            {
LABEL_86:
              memcpy(v11, v12, __n);
              char v40 = 0;
              goto LABEL_99;
            }
LABEL_94:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v11, v12, AssociatedTypeWitness);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))((unint64_t)&v11[v14 + v60] & v59, (unint64_t)&v12[v14 + v60] & v59, v63);
            uint64_t v49 = (void *)((v57 + ((unint64_t)&v11[v14 + v60] & v59)) & v56);
            uint64_t v50 = (const void *)((v57 + ((unint64_t)&v12[v14 + v60] & v59)) & v56);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v50, 1, v58))
            {
              memcpy(v49, v50, v52);
              char v40 = v62;
              if (v62)
              {
LABEL_96:
                char v40 = 0;
                goto LABEL_99;
              }
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v49, v50, v58);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v49, 0, 1, v58);
              char v40 = v62;
              if (v62) {
                goto LABEL_96;
              }
            }
            v11[v44] = 0;
            goto LABEL_99;
          }
        }
        *(void *)uint64_t v11 = *(void *)v12;
        char v40 = 1;
LABEL_99:
        v11[v23] = v40;
        return a1;
      }
    }
LABEL_54:
    (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v11, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&v11[v14 + v60] & v59, v63);
    unint64_t v34 = (v57 + ((unint64_t)&v11[v14 + v60] & v59)) & v56;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v34, 1, v58)) {
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v34, v58);
    }
    goto LABEL_56;
  }
  return a1;
}

uint64_t sub_1A5563E84(unsigned __int16 *a1, int a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v5 + 84) > v4) {
    unsigned int v4 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  int v8 = *(_DWORD *)(v6 + 84);
  int v9 = v8 - 1;
  if (!v8) {
    int v9 = 0;
  }
  uint64_t v10 = (v9 | v4) == 0;
  uint64_t v11 = *(void *)(v6 + 64);
  if (!v8) {
    ++v10;
  }
  unint64_t v12 = v10
      + v11
      + ((((*(void *)(v3 + 64) + *(_DWORD *)(v5 + 80)) & ~(unint64_t)*(_DWORD *)(v5 + 80))
        + *(void *)(v5 + 64)
        + v7) & ~(unint64_t)v7);
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  if (!a2) {
    return 0;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_11;
  }
  uint64_t v15 = ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v3 + 80)) | v7) & 0xF8 | 7u;
  uint64_t v16 = v12 + ((v15 + 8) & ~v15) + 1;
  char v17 = 8 * v16;
  if (v16 > 3) {
    goto LABEL_16;
  }
  unsigned int v19 = (a2 - 0x7FFFFFFF + ~(-1 << v17)) >> v17;
  if (v19 > 0xFFFE)
  {
    int v18 = *(_DWORD *)((char *)a1 + v16);
    if (!v18) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
  if (v19 <= 0xFE)
  {
    if (!v19) {
      goto LABEL_11;
    }
LABEL_16:
    int v18 = *((unsigned __int8 *)a1 + v16);
    if (!*((unsigned char *)a1 + v16)) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
  int v18 = *(unsigned __int16 *)((char *)a1 + v16);
  if (!*(unsigned __int16 *)((char *)a1 + v16))
  {
LABEL_11:
    uint64_t v13 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
LABEL_25:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 > 3) {
      LODWORD(v16) = 4;
    }
    switch((int)v16)
    {
      case 2:
        LODWORD(v16) = *a1;
        break;
      case 3:
        LODWORD(v16) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v16) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v16) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v16 | v20) ^ 0x80000000;
}

void sub_1A5564190(unsigned char *a1, int a2, int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v5 + 84) > v4) {
    unsigned int v4 = *(_DWORD *)(v5 + 84);
  }
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  int v9 = *(_DWORD *)(v7 + 84);
  int v10 = v9 - 1;
  if (!v9) {
    int v10 = 0;
  }
  uint64_t v11 = (v10 | v4) == 0;
  BOOL v12 = v9 == 0;
  unint64_t v13 = (((*(void *)(v3 + 64) + *(_DWORD *)(v5 + 80)) & ~(unint64_t)*(_DWORD *)(v5 + 80))
       + *(void *)(v5 + 64)
       + *(_DWORD *)(v7 + 80)) & ~(unint64_t)*(_DWORD *)(v7 + 80);
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v3 + 80)) | v8) & 0xF8 | 7u;
  uint64_t v16 = (v15 + 8) & ~v15;
  if (v12) {
    ++v11;
  }
  unint64_t v17 = v11 + v14 + v13;
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  size_t v18 = v17 + v16 + 1;
  if (a3 < 0)
  {
    if (v18 <= 3)
    {
      unsigned int v20 = (a3 - 0x7FFFFFFF + ~(-1 << (8 * v18))) >> (8 * v18);
      if (v20 > 0xFFFE)
      {
        int v6 = 4;
      }
      else if (v20 >= 0xFF)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v20 != 0;
      }
    }
    else
    {
      int v6 = 1;
    }
    int v19 = a2;
    if ((a2 & 0x80000000) == 0)
    {
LABEL_11:
      switch(v6)
      {
        case 1:
          a1[v18] = 0;
          if (!v19) {
            return;
          }
          goto LABEL_22;
        case 2:
          *(_WORD *)&a1[v18] = 0;
          goto LABEL_21;
        case 3:
          goto LABEL_40;
        case 4:
          *(_DWORD *)&a1[v18] = 0;
          if (!v19) {
            return;
          }
          goto LABEL_22;
        default:
LABEL_21:
          if (v19) {
LABEL_22:
          }
            *(void *)a1 = (v19 - 1);
          break;
      }
      return;
    }
  }
  else
  {
    int v19 = a2;
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_11;
    }
  }
  unsigned int v21 = v19 ^ 0x80000000;
  if (v18 < 4)
  {
    int v22 = (v21 >> (8 * v18)) + 1;
    if (v18)
    {
      int v23 = v19 & ~(-1 << (8 * v18));
      bzero(a1, v18);
      if (v18 == 3)
      {
        *(_WORD *)a1 = v23;
        a1[2] = BYTE2(v23);
      }
      else if (v18 == 2)
      {
        *(_WORD *)a1 = v23;
      }
      else
      {
        *a1 = v23;
      }
    }
  }
  else
  {
    bzero(a1, v18);
    *(_DWORD *)a1 = v21;
    int v22 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v18] = v22;
      break;
    case 2:
      *(_WORD *)&a1[v18] = v22;
      break;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x1A5564510);
    case 4:
      *(_DWORD *)&a1[v18] = v22;
      break;
    default:
      return;
  }
}

uint64_t sub_1A5564538(int a1, id a2, uint64_t a3)
{
  if (a3 < 0) {
    id v3 = a2;
  }
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5564598(uint64_t a1)
{
  return sub_1A55645A8(*(void *)a1, *(id *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t sub_1A55645A8(int a1, id a2, uint64_t a3)
{
  if (a3 < 0)
  {

    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

void *sub_1A5564628(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned int v4 = (void *)a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1A5564538(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *sub_1A5564680(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned int v4 = (void *)a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  sub_1A5564538(*a2, v4, v5);
  uint64_t v7 = *a1;
  int v8 = (void *)a1[1];
  uint64_t v9 = a1[2];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1A55645A8(v7, v8, v9);
  return a1;
}

void *sub_1A55646E4(void *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = (void *)a1[1];
  uint64_t v4 = a1[2];
  long long v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_1A55645A8(v3, v5, v4);
  return a1;
}

uint64_t sub_1A5564724(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 50) >> 13) | (2
                                                            * ((*(void *)(a1 + 16) >> 50) & 0x1C00 | ((*(void *)(a1 + 16) & 7) << 7) | (*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1A55647A0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_1A5564814(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 63;
}

uint64_t sub_1A5564820(uint64_t result)
{
  *(void *)(result + 16) &= ~0x8000000000000000;
  return result;
}

void *sub_1A5564830(void *result, uint64_t a2)
{
  uint64_t v2 = result[2] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[2] = v2;
  return result;
}

uint64_t type metadata accessor for CombineLatestStateMachine.UpstreamThrewAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A5564868()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      uint64_t v4 = sub_1A56D5898();
      if (v5 > 0x3F)
      {
        return v4;
      }
      else
      {
        swift_getTupleTypeLayout3();
        int v10 = &v9;
        uint64_t v11 = MEMORY[0x1E4FBAD80] + 64;
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        sub_1A56D5898();
        swift_getTupleTypeMetadata3();
        sub_1A56D5898();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
        uint64_t v0 = sub_1A56D6158();
        if (v6 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          BOOL v12 = &v8;
          unint64_t v13 = "\b";
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v0;
}

void *sub_1A5564AD8(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v96 = *(void *)(v4 - 8);
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  uint64_t v84 = *(void *)(v5 - 8);
  int v94 = *(_DWORD *)(v84 + 80);
  uint64_t v82 = *(void *)(v96 + 64) + v94;
  uint64_t v7 = *(void *)(v6 - 8);
  int v92 = *(_DWORD *)(v7 + 80);
  uint64_t v87 = v7;
  uint64_t v83 = *(void *)(v84 + 64);
  size_t v8 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v8;
  }
  size_t __n = v8;
  unint64_t v91 = v8
      + ((v83 + *(_DWORD *)(v7 + 80) + (v82 & ~(unint64_t)*(_DWORD *)(v84 + 80))) & ~(unint64_t)*(_DWORD *)(v7 + 80));
  uint64_t v85 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v86 = v5;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v78 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  int v13 = *(_DWORD *)(v11 + 80) | v10;
  uint64_t v88 = v6;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = v12;
  uint64_t v16 = v14;
  uint64_t v17 = *(void *)(v14 - 8);
  uint64_t v18 = v17;
  int v19 = *(_DWORD *)(v17 + 84);
  uint64_t v20 = *(_DWORD *)(v17 + 80);
  int v21 = v13 | *(_DWORD *)(v17 + 80);
  uint64_t v22 = v21 & 0xF8 | 7u;
  uint64_t v23 = (v22 + 8) & ~v22;
  uint64_t v79 = v9;
  uint64_t v24 = *(unsigned int *)(v9 + 84);
  uint64_t v77 = v11;
  uint64_t v25 = *(unsigned int *)(v11 + 84);
  if (v25 <= v24) {
    unsigned int v26 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v26 = *(_DWORD *)(v11 + 84);
  }
  unsigned int v27 = v19 - 1;
  if (!v19) {
    unsigned int v27 = 0;
  }
  if (v27 <= v26) {
    unsigned int v28 = v26;
  }
  else {
    unsigned int v28 = v27;
  }
  uint64_t v29 = *(void *)(v9 + 64) + v12;
  uint64_t v30 = *(void *)(v11 + 64);
  uint64_t v31 = v30 + v20;
  uint64_t v32 = (v30 + v20 + (v29 & ~v12)) & ~v20;
  size_t v33 = *(void *)(v17 + 64);
  if (v19) {
    size_t v34 = v33;
  }
  else {
    size_t v34 = v33 + 1;
  }
  size_t v35 = v32 + v34;
  if (v28) {
    size_t v36 = v35;
  }
  else {
    size_t v36 = v35 + 1;
  }
  if (v36 <= 8) {
    uint64_t v37 = 8;
  }
  else {
    uint64_t v37 = v36;
  }
  if (v91 <= v37 + v23 + 1) {
    unint64_t v38 = v37 + v23 + 1;
  }
  else {
    unint64_t v38 = v91;
  }
  if (v38 <= 8) {
    uint64_t v39 = 8;
  }
  else {
    uint64_t v39 = v38;
  }
  int v40 = v21 | v92 | v94 | *(_DWORD *)(v96 + 80);
  if ((v40 & 0x1000F8) == 0 && (unint64_t)(v39 + 1) <= 0x18)
  {
    unsigned int v41 = a2[v39];
    unsigned int v42 = v41 - 4;
    if (v41 < 4)
    {
      uint64_t v44 = a1;
      uint64_t v45 = v94;
    }
    else
    {
      if (v39 <= 3) {
        uint64_t v43 = v39;
      }
      else {
        uint64_t v43 = 4;
      }
      uint64_t v44 = a1;
      uint64_t v45 = v94;
      switch(v43)
      {
        case 1:
          int v46 = *a2;
          if (v39 < 4) {
            goto LABEL_43;
          }
          goto LABEL_44;
        case 2:
          int v46 = *(unsigned __int16 *)a2;
          if (v39 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_43;
        case 3:
          int v46 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v39 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_43;
        case 4:
          int v46 = *(_DWORD *)a2;
          if (v39 < 4) {
LABEL_43:
          }
            v46 |= v42 << (8 * v39);
LABEL_44:
          unsigned int v41 = v46 + 4;
          break;
        default:
          break;
      }
    }
    uint64_t v49 = ~v45;
    unint64_t v50 = ~(unint64_t)v92;
    uint64_t v51 = ~v22;
    switch(v41)
    {
      case 1u:
        *uint64_t v44 = *(void *)a2;
        *((unsigned char *)v44 + v39) = 1;
        swift_bridgeObjectRetain();
        return v44;
      case 2u:
        *uint64_t v44 = *(void *)a2;
        size_t v54 = (void *)(((unint64_t)v44 + v22 + 8) & v51);
        unsigned int v55 = (unsigned __int8 *)((unint64_t)&a2[v22 + 8] & v51);
        unsigned int v56 = v55[v37];
        unsigned int v57 = v56 - 2;
        if (v56 >= 2)
        {
          if (v37 <= 3) {
            uint64_t v58 = v37;
          }
          else {
            uint64_t v58 = 4;
          }
          switch(v58)
          {
            case 1:
              int v59 = *v55;
              goto LABEL_61;
            case 2:
              int v59 = *(unsigned __int16 *)v55;
              goto LABEL_61;
            case 3:
              int v59 = *(unsigned __int16 *)v55 | (v55[2] << 16);
              goto LABEL_61;
            case 4:
              int v59 = *(_DWORD *)v55;
LABEL_61:
              int v60 = (v59 | (v57 << (8 * v37))) + 2;
              unsigned int v56 = v59 + 2;
              if (v37 < 4) {
                unsigned int v56 = v60;
              }
              break;
            default:
              break;
          }
        }
        if (v56 == 1)
        {
          uint64_t v61 = *(void *)v55;
          id v62 = *(id *)v55;
          *size_t v54 = v61;
          char v63 = 1;
LABEL_94:
          *((unsigned char *)v54 + v37) = v63;
          *((unsigned char *)v44 + v39) = 2;
          return v44;
        }
        uint64_t v75 = v16;
        size_t v76 = v35;
        size_t v74 = v34;
        uint64_t v93 = ~v15;
        uint64_t v95 = ~v20;
        if (!v28)
        {
          if (v55[v35])
          {
            int v66 = (v55[v35] - 1) << (8 * v35);
            if (v35 > 3) {
              int v66 = 0;
            }
            if (v35)
            {
              int v67 = v35 <= 3 ? v35 : 4;
              switch(v67)
              {
                case 2:
                  int v68 = *(unsigned __int16 *)v55;
                  break;
                case 3:
                  int v68 = *(unsigned __int16 *)v55 | (v55[2] << 16);
                  break;
                case 4:
                  int v68 = *(_DWORD *)v55;
                  break;
                default:
                  int v68 = *v55;
                  break;
              }
            }
            else
            {
              int v68 = 0;
            }
            if ((v68 | v66) != 0xFFFFFFFF) {
              goto LABEL_80;
            }
          }
          goto LABEL_88;
        }
        if (v24 == v28)
        {
          unsigned int v64 = v28;
          int v65 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v79 + 48))(v55, v24, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v69 = (unint64_t)&v55[v29] & ~v15;
          unsigned int v64 = v28;
          if (v25 != v28)
          {
            unsigned int v70 = (*(uint64_t (**)(unint64_t))(v18 + 48))((v31 + v69) & ~v20);
            unsigned int v28 = v64;
            if (v70 >= 2) {
              goto LABEL_80;
            }
            goto LABEL_88;
          }
          int v65 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v77 + 48))(v69, v25, v78);
        }
        unsigned int v28 = v64;
        if (v65)
        {
LABEL_80:
          memcpy(v54, v55, v36);
          char v63 = 0;
          goto LABEL_94;
        }
LABEL_88:
        unsigned int v73 = v28;
        uint64_t v97 = v37;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v79 + 16))(v54, v55, AssociatedTypeWitness);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v77 + 16))(((unint64_t)v54 + v29) & v93, (unint64_t)&v55[v29] & v93, v78);
        uint64_t v71 = (void *)((v31 + (((unint64_t)v54 + v29) & v93)) & v95);
        uint64_t v72 = (const void *)((v31 + ((unint64_t)&v55[v29] & v93)) & v95);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v72, 1, v75))
        {
          memcpy(v71, v72, v74);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v71, v72, v75);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v71, 0, 1, v75);
        }
        uint64_t v37 = v97;
        char v63 = v73;
        if (v73) {
          char v63 = 0;
        }
        else {
          *((unsigned char *)v54 + v76) = 0;
        }
        goto LABEL_94;
      case 3u:
        *uint64_t v44 = *(void *)a2;
        *((unsigned char *)v44 + v39) = 3;
        return v44;
      default:
        (*(void (**)(void *, unsigned __int8 *, uint64_t, uint64_t))(v96 + 16))(v44, a2, v85, v16);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16))(((unint64_t)v44 + v82) & v49, (unint64_t)&a2[v82] & v49, v86);
        size_t v52 = (void *)(((((unint64_t)v44 + v82) & v49) + v83 + v92) & v50);
        unsigned int v53 = (const void *)((((unint64_t)&a2[v82] & v49) + v83 + v92) & v50);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v87 + 48))(v53, 1, v88))
        {
          memcpy(v52, v53, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v87 + 16))(v52, v53, v88);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v52, 0, 1, v88);
        }
        *((unsigned char *)v44 + v39) = 0;
        return v44;
    }
  }
  uint64_t v47 = *(void *)a2;
  *a1 = *(void *)a2;
  uint64_t v44 = (void *)(v47 + (((v40 & 0xF8 | 7u) + 16) & ~(unint64_t)(v40 & 0xF8 | 7u)));
  swift_retain();
  return v44;
}

void sub_1A55653E8(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v70 = *(void *)(a2[2] - 8);
  uint64_t v3 = *(void *)(v70 + 64);
  uint64_t v71 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v68 = v3 + v4;
  uint64_t v75 = v4;
  uint64_t v5 = a2[4];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v69 = *(void *)(v71 + 64);
  uint64_t v78 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v7 = (v69 + v78 + ((v3 + v4) & ~v4)) & ~v78;
  uint64_t v74 = v6;
  uint64_t v8 = *(void *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  unint64_t v76 = v8 + v7;
  uint64_t v72 = a2[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v73 = v2;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v66 - 8);
  uint64_t v13 = v12;
  uint64_t v14 = *(_DWORD *)(v12 + 80);
  int v15 = *(_DWORD *)(v12 + 80) | v11;
  uint64_t v16 = v5;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = v14;
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(v17 - 8);
  int v21 = *(_DWORD *)(v20 + 84);
  uint64_t v22 = *(_DWORD *)(v20 + 80);
  uint64_t v23 = (v15 | *(_DWORD *)(v20 + 80)) & 0xF8 | 7u;
  uint64_t v24 = *(unsigned int *)(v9 + 84);
  uint64_t v25 = *(unsigned int *)(v12 + 84);
  if (v25 <= v24) {
    unsigned int v26 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v26 = *(_DWORD *)(v12 + 84);
  }
  unsigned int v27 = v21 - 1;
  if (!v21) {
    unsigned int v27 = 0;
  }
  if (v27 > v26) {
    unsigned int v26 = v27;
  }
  uint64_t v28 = *(void *)(v9 + 64) + v14;
  uint64_t v29 = *(void *)(v12 + 64);
  uint64_t v30 = v29 + v22;
  uint64_t v31 = *(void *)(*(void *)(v17 - 8) + 64);
  if (!v21) {
    ++v31;
  }
  unint64_t v32 = v31 + ((v29 + v22 + (v28 & ~v18)) & ~v22);
  if (v26) {
    unint64_t v33 = v32;
  }
  else {
    unint64_t v33 = v32 + 1;
  }
  if (v33 <= 8) {
    unint64_t v33 = 8;
  }
  unint64_t v34 = v33 + ((v23 + 8) & ~v23);
  if (v76 <= v34 + 1) {
    unint64_t v35 = v34 + 1;
  }
  else {
    unint64_t v35 = v76;
  }
  if (v35 <= 8) {
    uint64_t v36 = 8;
  }
  else {
    uint64_t v36 = v35;
  }
  unsigned int v37 = a1[v36];
  uint64_t v38 = v37 - 4;
  if (v37 < 4)
  {
    uint64_t v40 = v75;
  }
  else
  {
    if (v36 <= 3) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 4;
    }
    uint64_t v40 = v75;
    switch(v39)
    {
      case 1:
        int v41 = *a1;
        if (v36 < 4) {
          goto LABEL_36;
        }
        goto LABEL_37;
      case 2:
        int v41 = *(unsigned __int16 *)a1;
        if (v36 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 3:
        int v41 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v36 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_36;
      case 4:
        int v41 = *(_DWORD *)a1;
        if (v36 < 4) {
LABEL_36:
        }
          v41 |= v38 << (8 * v36);
LABEL_37:
        unsigned int v37 = v41 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v42 = ~v40;
  uint64_t v43 = ~v18;
  uint64_t v44 = ~v22;
  switch(v37)
  {
    case 1u:
      swift_bridgeObjectRelease();
      return;
    case 2u:
      unint64_t v48 = (unsigned __int8 *)((unint64_t)&a1[v23 + 8] & ~v23);
      unsigned int v49 = v48[v33];
      unsigned int v50 = v49 - 2;
      if (v49 >= 2)
      {
        if (v33 <= 3) {
          uint64_t v51 = v33;
        }
        else {
          uint64_t v51 = 4;
        }
        switch(v51)
        {
          case 1:
            int v52 = *v48;
            goto LABEL_56;
          case 2:
            int v52 = *(unsigned __int16 *)v48;
            goto LABEL_56;
          case 3:
            int v52 = *(unsigned __int16 *)v48 | (v48[2] << 16);
            goto LABEL_56;
          case 4:
            int v52 = *(_DWORD *)v48;
LABEL_56:
            int v53 = (v52 | (v50 << (8 * v33))) + 2;
            unsigned int v49 = v52 + 2;
            if (v33 < 4) {
              unsigned int v49 = v53;
            }
            break;
          default:
            break;
        }
      }
      if (v49 == 1)
      {
        size_t v54 = *(void **)v48;

        return;
      }
      uint64_t v65 = v20;
      if (v26)
      {
        if (v24 == v26)
        {
          uint64_t v55 = v19;
          int v56 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(v48, v24, AssociatedTypeWitness);
          goto LABEL_76;
        }
        unint64_t v60 = (unint64_t)&v48[v28] & v43;
        if (v25 == v26)
        {
          uint64_t v55 = v19;
          int v56 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v60, v25, v66);
LABEL_76:
          uint64_t v19 = v55;
          if (v56) {
            return;
          }
          goto LABEL_85;
        }
        uint64_t v61 = v19;
        unsigned int v62 = (*(uint64_t (**)(unint64_t))(v20 + 48))((v30 + v60) & v44);
        uint64_t v19 = v61;
        if (v62 >= 2) {
          return;
        }
      }
      else if (v48[v32])
      {
        int v57 = (v48[v32] - 1) << (8 * v32);
        if (v32 > 3) {
          int v57 = 0;
        }
        if (v32)
        {
          int v58 = v32 <= 3 ? v32 : 4;
          switch(v58)
          {
            case 2:
              int v59 = *(unsigned __int16 *)v48;
              break;
            case 3:
              int v59 = *(unsigned __int16 *)v48 | (v48[2] << 16);
              break;
            case 4:
              int v59 = *(_DWORD *)v48;
              break;
            default:
              int v59 = *v48;
              break;
          }
        }
        else
        {
          int v59 = 0;
        }
        if ((v59 | v57) != 0xFFFFFFFF) {
          return;
        }
      }
LABEL_85:
      uint64_t v16 = v19;
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 8))(v48, AssociatedTypeWitness, v38);
      unint64_t v63 = (unint64_t)&v48[v28] & v43;
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v63, v66);
      unint64_t v45 = (v30 + v63) & v44;
      int v64 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v65 + 48))(v45, 1, v16);
      uint64_t v46 = v65;
      if (!v64) {
        goto LABEL_41;
      }
      return;
    case 3u:
      return;
    default:
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v70 + 8))(a1, v72, v38);
      (*(void (**)(unint64_t, uint64_t))(v71 + 8))((unint64_t)&a1[v68] & v42, v73);
      unint64_t v45 = (((unint64_t)&a1[v68] & v42) + v69 + v78) & ~v78;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v74 + 48))(v45, 1, v16))
      {
        uint64_t v46 = v74;
LABEL_41:
        uint64_t v47 = *(void (**)(unint64_t, uint64_t))(v46 + 8);
        v47(v45, v16);
      }
      return;
  }
}

void *sub_1A5565BA0(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v88 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v88 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v90 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v87 = v5 + v8;
  uint64_t v95 = v8;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v89 = *(void *)(v90 + 64);
  uint64_t v101 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v10 = (v89 + v101 + ((v5 + v8) & ~v8)) & ~v101;
  uint64_t v93 = v9;
  size_t v11 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v11;
  }
  size_t __n = v11;
  unint64_t v98 = v11 + v10;
  uint64_t v91 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v92 = v6;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v83 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  int v16 = *(_DWORD *)(v14 + 80) | v13;
  uint64_t v94 = v7;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = v15;
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t v21 = v20;
  int v22 = *(_DWORD *)(v20 + 84);
  uint64_t v23 = *(_DWORD *)(v20 + 80);
  uint64_t v24 = (v16 | *(_DWORD *)(v20 + 80)) & 0xF8 | 7u;
  uint64_t v25 = (v24 + 8) & ~v24;
  uint64_t v84 = v12;
  uint64_t v26 = *(unsigned int *)(v12 + 84);
  uint64_t v27 = v14;
  uint64_t v28 = *(unsigned int *)(v14 + 84);
  if (v28 <= v26) {
    unsigned int v29 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v29 = *(_DWORD *)(v14 + 84);
  }
  unsigned int v30 = v22 - 1;
  if (!v22) {
    unsigned int v30 = 0;
  }
  if (v30 <= v29) {
    unsigned int v31 = v29;
  }
  else {
    unsigned int v31 = v30;
  }
  uint64_t v32 = *(void *)(v12 + 64) + v15;
  uint64_t v33 = *(void *)(v14 + 64);
  uint64_t v34 = v33 + v23;
  uint64_t v35 = (v33 + v23 + (v32 & ~v15)) & ~v23;
  size_t v36 = *(void *)(v20 + 64);
  if (v22) {
    size_t v37 = v36;
  }
  else {
    size_t v37 = v36 + 1;
  }
  size_t v38 = v35 + v37;
  if (v31) {
    size_t v39 = v38;
  }
  else {
    size_t v39 = v38 + 1;
  }
  if (v39 <= 8) {
    uint64_t v40 = 8;
  }
  else {
    uint64_t v40 = v39;
  }
  if (v98 <= v40 + v25 + 1) {
    unint64_t v41 = v40 + v25 + 1;
  }
  else {
    unint64_t v41 = v98;
  }
  if (v41 <= 8) {
    uint64_t v42 = 8;
  }
  else {
    uint64_t v42 = v41;
  }
  unsigned int v43 = a2[v42];
  unsigned int v44 = v43 - 4;
  if (v43 < 4)
  {
    uint64_t v46 = a1;
    uint64_t v47 = v95;
  }
  else
  {
    if (v42 <= 3) {
      uint64_t v45 = v42;
    }
    else {
      uint64_t v45 = 4;
    }
    uint64_t v46 = a1;
    uint64_t v47 = v95;
    switch(v45)
    {
      case 1:
        int v48 = *a2;
        if (v42 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v48 = *(unsigned __int16 *)a2;
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v48 = *(_DWORD *)a2;
        if (v42 < 4) {
LABEL_39:
        }
          v48 |= v44 << (8 * v42);
LABEL_40:
        unsigned int v43 = v48 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v49 = ~v47;
  uint64_t v50 = ~v101;
  uint64_t v51 = ~v24;
  switch(v43)
  {
    case 1u:
      void *v46 = *(void *)a2;
      *((unsigned char *)v46 + v42) = 1;
      swift_bridgeObjectRetain();
      return v46;
    case 2u:
      void *v46 = *(void *)a2;
      size_t v54 = (void *)(((unint64_t)v46 + v24 + 8) & v51);
      uint64_t v55 = (unsigned __int8 *)((unint64_t)&a2[v24 + 8] & v51);
      unsigned int v56 = v55[v40];
      unsigned int v57 = v56 - 2;
      if (v56 >= 2)
      {
        if (v40 <= 3) {
          uint64_t v58 = v40;
        }
        else {
          uint64_t v58 = 4;
        }
        switch(v58)
        {
          case 1:
            int v59 = *v55;
            goto LABEL_57;
          case 2:
            int v59 = *(unsigned __int16 *)v55;
            goto LABEL_57;
          case 3:
            int v59 = *(unsigned __int16 *)v55 | (v55[2] << 16);
            goto LABEL_57;
          case 4:
            int v59 = *(_DWORD *)v55;
LABEL_57:
            int v61 = (v59 | (v57 << (8 * v40))) + 2;
            unsigned int v56 = v59 + 2;
            if (v40 < 4) {
              unsigned int v56 = v61;
            }
            break;
          default:
            break;
        }
      }
      if (v56 == 1)
      {
        uint64_t v62 = *(void *)v55;
        id v63 = *(id *)v55;
        *size_t v54 = v62;
        char v64 = 1;
LABEL_90:
        *((unsigned char *)v54 + v40) = v64;
        char v60 = 2;
        goto LABEL_91;
      }
      uint64_t v81 = v19;
      size_t v82 = v38;
      size_t v79 = v37;
      uint64_t v80 = v32;
      uint64_t v97 = ~v18;
      uint64_t v99 = ~v23;
      if (!v31)
      {
        if (v55[v38])
        {
          int v67 = (v55[v38] - 1) << (8 * v38);
          if (v38 > 3) {
            int v67 = 0;
          }
          if (v38)
          {
            int v68 = v38 <= 3 ? v38 : 4;
            switch(v68)
            {
              case 2:
                int v69 = *(unsigned __int16 *)v55;
                break;
              case 3:
                int v69 = *(unsigned __int16 *)v55 | (v55[2] << 16);
                break;
              case 4:
                int v69 = *(_DWORD *)v55;
                break;
              default:
                int v69 = *v55;
                break;
            }
          }
          else
          {
            int v69 = 0;
          }
          if ((v69 | v67) != 0xFFFFFFFF) {
            goto LABEL_76;
          }
        }
        goto LABEL_84;
      }
      if (v26 == v31)
      {
        unsigned int v65 = v31;
        int v66 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v84 + 48))(v55, v26, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v70 = (unint64_t)&v55[v32] & ~v18;
        unsigned int v65 = v31;
        if (v28 != v31)
        {
          unsigned int v71 = (*(uint64_t (**)(unint64_t))(v21 + 48))((v34 + v70) & ~v23);
          unsigned int v31 = v65;
          if (v71 >= 2) {
            goto LABEL_76;
          }
          goto LABEL_84;
        }
        int v66 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v70, v28, v83);
      }
      unsigned int v31 = v65;
      if (v66)
      {
LABEL_76:
        memcpy(v54, v55, v39);
        char v64 = 0;
        goto LABEL_90;
      }
LABEL_84:
      uint64_t v72 = v54;
      unsigned int v73 = v31;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v84 + 16))(v72, v55, AssociatedTypeWitness);
      uint64_t v102 = v72;
      unint64_t v74 = ((unint64_t)v72 + v80) & v97;
      unint64_t v75 = (unint64_t)&v55[v80] & v97;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 16))(v74, v75, v83);
      unint64_t v76 = (void *)((v34 + v74) & v99);
      uint64_t v77 = (const void *)((v34 + v75) & v99);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v77, 1, v81))
      {
        memcpy(v76, v77, v79);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v76, v77, v81);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v76, 0, 1, v81);
      }
      char v64 = 0;
      if (v73)
      {
        size_t v54 = v102;
      }
      else
      {
        size_t v54 = v102;
        *((unsigned char *)v102 + v82) = 0;
      }
      goto LABEL_90;
    case 3u:
      void *v46 = *(void *)a2;
      char v60 = 3;
LABEL_91:
      *((unsigned char *)v46 + v42) = v60;
      return v46;
    default:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v88 + 16))(v46, a2, v91);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16))(((unint64_t)v46 + v87) & v49, (unint64_t)&a2[v87] & v49, v92);
      int v52 = (void *)(((((unint64_t)v46 + v87) & v49) + v89 + v101) & v50);
      int v53 = (const void *)((((unint64_t)&a2[v87] & v49) + v89 + v101) & v50);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v93 + 48))(v53, 1, v94))
      {
        memcpy(v52, v53, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v93 + 16))(v52, v53, v94);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v93 + 56))(v52, 0, 1, v94);
      }
      *((unsigned char *)v46 + v42) = 0;
      return v46;
  }
}

unsigned __int8 *sub_1A5566450(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v103 = *(void *)(v5 - 8);
    uint64_t v6 = *(void *)(v103 + 64);
    uint64_t v8 = a3[3];
    uint64_t v7 = a3[4];
    uint64_t v105 = *(void *)(v8 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v105 + 80);
    uint64_t v102 = v6 + v9;
    uint64_t v110 = v9;
    uint64_t v10 = *(void *)(v7 - 8);
    uint64_t v104 = *(void *)(v105 + 64);
    uint64_t v116 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v11 = (v104 + v116 + ((v6 + v9) & ~v9)) & ~v116;
    uint64_t v108 = v10;
    size_t v12 = *(void *)(v10 + 64);
    if (!*(_DWORD *)(v10 + 84)) {
      ++v12;
    }
    size_t __n = v12;
    unint64_t v112 = v12 + v11;
    uint64_t v106 = v5;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    int v14 = *(_DWORD *)(v13 + 80);
    uint64_t v107 = v8;
    uint64_t v94 = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(void *)(v94 - 8);
    uint64_t v16 = *(_DWORD *)(v15 + 80);
    int v17 = *(_DWORD *)(v15 + 80) | v14;
    uint64_t v109 = v7;
    uint64_t v18 = swift_getAssociatedTypeWitness();
    uint64_t v19 = *(void *)(v18 - 8);
    int v20 = *(_DWORD *)(v19 + 84);
    uint64_t v100 = v19;
    uint64_t v21 = *(_DWORD *)(v19 + 80);
    uint64_t v22 = (v17 | *(_DWORD *)(v19 + 80)) & 0xF8 | 7u;
    uint64_t v23 = (v22 + 8) & ~v22;
    uint64_t v98 = v13;
    uint64_t v24 = *(unsigned int *)(v13 + 84);
    uint64_t v91 = v15;
    uint64_t v25 = *(unsigned int *)(v15 + 84);
    if (v25 <= v24) {
      unsigned int v26 = *(_DWORD *)(v13 + 84);
    }
    else {
      unsigned int v26 = *(_DWORD *)(v15 + 84);
    }
    unsigned int v27 = v20 - 1;
    if (!v20) {
      unsigned int v27 = 0;
    }
    if (v27 <= v26) {
      unsigned int v28 = v26;
    }
    else {
      unsigned int v28 = v27;
    }
    unsigned int v88 = *(_DWORD *)(v19 + 84);
    BOOL v29 = v20 == 0;
    uint64_t v30 = v16;
    uint64_t v97 = *(void *)(v13 + 64) + v16;
    uint64_t v93 = *(void *)(v15 + 64) + v21;
    if (v29) {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64) + 1;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64);
    }
    uint64_t v31 = (*(void *)(v15 + 64) + v21 + (v97 & ~v16)) & ~v21;
    uint64_t v33 = v31 + v32;
    unsigned int v101 = v28;
    if (v28) {
      unint64_t v34 = v31 + v32;
    }
    else {
      unint64_t v34 = v33 + 1;
    }
    size_t v89 = v34;
    if (v34 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v34;
    }
    if (v112 <= v35 + v23 + 1) {
      unint64_t v36 = v35 + v23 + 1;
    }
    else {
      unint64_t v36 = v112;
    }
    if (v36 <= 8) {
      uint64_t v37 = 8;
    }
    else {
      uint64_t v37 = v36;
    }
    unsigned int v38 = a1[v37];
    unsigned int v39 = v38 - 4;
    if (v38 < 4)
    {
      uint64_t v41 = v110;
    }
    else
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      uint64_t v41 = v110;
      switch(v40)
      {
        case 1:
          int v42 = *a1;
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 2:
          int v42 = *(unsigned __int16 *)a1;
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 3:
          int v42 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 4:
          int v42 = *(_DWORD *)a1;
          if (v37 < 4) {
LABEL_40:
          }
            v42 |= v39 << (8 * v37);
LABEL_41:
          unsigned int v38 = v42 + 4;
          break;
        default:
          break;
      }
    }
    uint64_t v95 = v18;
    uint64_t v111 = ~v41;
    uint64_t v113 = ~v116;
    uint64_t v43 = ~v22;
    uint64_t v96 = ~v30;
    uint64_t v92 = ~v21;
    switch(v38)
    {
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_84;
      case 2u:
        uint64_t v45 = (id *)((unint64_t)&a1[v22 + 8] & v43);
        unsigned int v46 = *((unsigned __int8 *)v45 + v35);
        unsigned int v47 = v46 - 2;
        if (v46 >= 2)
        {
          if (v35 <= 3) {
            uint64_t v48 = v35;
          }
          else {
            uint64_t v48 = 4;
          }
          switch(v48)
          {
            case 1:
              int v49 = *(unsigned __int8 *)v45;
              goto LABEL_55;
            case 2:
              int v49 = *(unsigned __int16 *)v45;
              goto LABEL_55;
            case 3:
              int v49 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v43) + 2) << 16);
              goto LABEL_55;
            case 4:
              int v49 = *(_DWORD *)v45;
LABEL_55:
              int v50 = (v49 | (v47 << (8 * v35))) + 2;
              unsigned int v46 = v49 + 2;
              if (v35 < 4) {
                unsigned int v46 = v50;
              }
              break;
            default:
              break;
          }
        }
        if (v46 == 1)
        {

          goto LABEL_84;
        }
        if (!v28)
        {
          if (*((unsigned char *)v45 + v33))
          {
            int v52 = (*((unsigned __int8 *)v45 + v33) - 1) << (8 * v33);
            if (v33 > 3) {
              int v52 = 0;
            }
            if (v33)
            {
              int v53 = v33 <= 3 ? v33 : 4;
              switch(v53)
              {
                case 2:
                  int v54 = *(unsigned __int16 *)v45;
                  break;
                case 3:
                  int v54 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v43) + 2) << 16);
                  break;
                case 4:
                  int v54 = *(_DWORD *)v45;
                  break;
                default:
                  int v54 = *(unsigned __int8 *)v45;
                  break;
              }
            }
            else
            {
              int v54 = 0;
            }
            if ((v54 | v52) != 0xFFFFFFFF) {
              goto LABEL_84;
            }
          }
          goto LABEL_82;
        }
        if (v24 == v28)
        {
          int v51 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v98 + 48))((unint64_t)&a1[v22 + 8] & v43, v24, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v55 = ((unint64_t)v45 + v97) & v96;
          if (v25 != v28)
          {
            if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v100 + 48))((v93 + v55) & v92, v88, v95) < 2)goto LABEL_82; {
            goto LABEL_84;
            }
          }
          int v51 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v91 + 48))(v55, v25, v94);
        }
        if (!v51)
        {
LABEL_82:
          (*(void (**)(unint64_t, uint64_t))(v98 + 8))((unint64_t)&a1[v22 + 8] & v43, AssociatedTypeWitness);
          unint64_t v56 = ((unint64_t)v45 + v97) & v96;
          (*(void (**)(unint64_t, uint64_t))(v91 + 8))(v56, v94);
          unint64_t v57 = (v93 + v56) & v92;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v100 + 48))(v57, 1, v95)) {
            (*(void (**)(unint64_t, uint64_t))(v100 + 8))(v57, v95);
          }
        }
LABEL_84:
        unsigned int v58 = a2[v37];
        unsigned int v59 = v58 - 4;
        if (v58 >= 4)
        {
          if (v37 <= 3) {
            uint64_t v60 = v37;
          }
          else {
            uint64_t v60 = 4;
          }
          switch(v60)
          {
            case 1:
              int v61 = *a2;
              if (v37 >= 4) {
                goto LABEL_96;
              }
              goto LABEL_92;
            case 2:
              int v61 = *(unsigned __int16 *)a2;
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 3:
              int v61 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 4:
              int v61 = *(_DWORD *)a2;
              if (v37 < 4) {
LABEL_92:
              }
                unsigned int v58 = (v61 | (v59 << (8 * v37))) + 4;
              else {
LABEL_96:
              }
                unsigned int v58 = v61 + 4;
              break;
            default:
              break;
          }
        }
        switch(v58)
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            a1[v37] = 1;
            swift_bridgeObjectRetain();
            return a1;
          case 2u:
            size_t v117 = v32;
            uint64_t v64 = v33;
            *(void *)a1 = *(void *)a2;
            unsigned int v65 = (void *)((unint64_t)&a1[v22 + 8] & v43);
            int v66 = (id *)((unint64_t)&a2[v22 + 8] & v43);
            unsigned int v67 = *((unsigned __int8 *)v66 + v35);
            unsigned int v68 = v67 - 2;
            if (v67 >= 2)
            {
              if (v35 <= 3) {
                uint64_t v69 = v35;
              }
              else {
                uint64_t v69 = 4;
              }
              switch(v69)
              {
                case 1:
                  int v70 = *(unsigned __int8 *)v66;
                  goto LABEL_113;
                case 2:
                  int v70 = *(unsigned __int16 *)v66;
                  goto LABEL_113;
                case 3:
                  int v70 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v43) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v43) + 2) << 16);
                  goto LABEL_113;
                case 4:
                  int v70 = *(_DWORD *)v66;
LABEL_113:
                  int v72 = (v70 | (v68 << (8 * v35))) + 2;
                  unsigned int v67 = v70 + 2;
                  if (v35 < 4) {
                    unsigned int v67 = v72;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v67 == 1)
            {
              id v73 = *v66;
              id v74 = *v66;
              void *v65 = v73;
              char v75 = 1;
LABEL_146:
              *((unsigned char *)v65 + v35) = v75;
              char v71 = 2;
              goto LABEL_147;
            }
            if (!v101)
            {
              uint64_t v77 = v100;
              if (*((unsigned char *)v66 + v64))
              {
                int v78 = (*((unsigned __int8 *)v66 + v64) - 1) << (8 * v64);
                if (v64 > 3) {
                  int v78 = 0;
                }
                if (v64)
                {
                  int v79 = v64 <= 3 ? v64 : 4;
                  switch(v79)
                  {
                    case 2:
                      int v80 = *(unsigned __int16 *)v66;
                      break;
                    case 3:
                      int v80 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v43) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v43) + 2) << 16);
                      break;
                    case 4:
                      int v80 = *(_DWORD *)v66;
                      break;
                    default:
                      int v80 = *(unsigned __int8 *)v66;
                      break;
                  }
                }
                else
                {
                  int v80 = 0;
                }
                if ((v80 | v78) != 0xFFFFFFFF) {
                  goto LABEL_132;
                }
              }
              goto LABEL_140;
            }
            if (v24 == v101)
            {
              int v76 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v98 + 48))(v66, v24, AssociatedTypeWitness);
            }
            else
            {
              unint64_t v81 = ((unint64_t)v66 + v97) & v96;
              if (v25 != v101)
              {
                uint64_t v77 = v100;
                if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v100 + 48))((v93 + v81) & v92, v88, v95) >= 2)goto LABEL_132; {
                goto LABEL_140;
                }
              }
              int v76 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v91 + 48))(v81, v25, v94);
            }
            uint64_t v77 = v100;
            if (v76)
            {
LABEL_132:
              memcpy((void *)((unint64_t)&a1[v22 + 8] & v43), v66, v89);
              char v75 = 0;
              goto LABEL_146;
            }
LABEL_140:
            (*(void (**)(void *, id *, uint64_t))(v98 + 16))(v65, v66, AssociatedTypeWitness);
            unint64_t v82 = (unint64_t)v66 + v97;
            uint64_t v83 = v77;
            unint64_t v84 = v82 & v96;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 16))(((unint64_t)v65 + v97) & v96, v82 & v96, v94);
            uint64_t v85 = (void *)((v93 + (((unint64_t)v65 + v97) & v96)) & v92);
            uint64_t v86 = (const void *)((v93 + v84) & v92);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v86, 1, v95))
            {
              memcpy(v85, v86, v117);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v83 + 16))(v85, v86, v95);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v95);
            }
            char v75 = v101;
            if (v101) {
              char v75 = 0;
            }
            else {
              *((unsigned char *)v65 + v64) = 0;
            }
            goto LABEL_146;
          case 3u:
            *(void *)a1 = *(void *)a2;
            char v71 = 3;
LABEL_147:
            a1[v37] = v71;
            return a1;
          default:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v103 + 16))(a1, a2, v106);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16))((unint64_t)&a1[v102] & v111, (unint64_t)&a2[v102] & v111, v107);
            uint64_t v62 = (void *)((((unint64_t)&a1[v102] & v111) + v104 + v116) & v113);
            id v63 = (const void *)((((unint64_t)&a2[v102] & v111) + v104 + v116) & v113);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48))(v63, 1, v109))
            {
              memcpy(v62, v63, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v108 + 16))(v62, v63, v109);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v62, 0, 1, v109);
            }
            a1[v37] = 0;
            return a1;
        }
      case 3u:
        goto LABEL_84;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v103 + 8))(a1, v106);
        (*(void (**)(unint64_t, uint64_t))(v105 + 8))((unint64_t)&a1[v102] & v111, v107);
        unint64_t v44 = (((unint64_t)&a1[v102] & v111) + v104 + v116) & v113;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v108 + 48))(v44, 1, v109)) {
          (*(void (**)(unint64_t, uint64_t))(v108 + 8))(v44, v109);
        }
        goto LABEL_84;
    }
  }
  return a1;
}

void *sub_1A556710C(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v86 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v86 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v88 + 80);
  uint64_t v85 = v5 + v8;
  uint64_t v93 = v8;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v87 = *(void *)(v88 + 64);
  uint64_t v99 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v10 = (v87 + v99 + ((v5 + v8) & ~v8)) & ~v99;
  uint64_t v91 = v9;
  size_t v11 = *(void *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84)) {
    ++v11;
  }
  size_t __n = v11;
  unint64_t v96 = v11 + v10;
  uint64_t v89 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v90 = v6;
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v81 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  int v16 = *(_DWORD *)(v14 + 80) | v13;
  uint64_t v92 = v7;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = v15;
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t v21 = v20;
  int v22 = *(_DWORD *)(v20 + 84);
  uint64_t v23 = *(_DWORD *)(v20 + 80);
  uint64_t v24 = (v16 | *(_DWORD *)(v20 + 80)) & 0xF8 | 7u;
  uint64_t v25 = (v24 + 8) & ~v24;
  uint64_t v82 = v12;
  uint64_t v26 = *(unsigned int *)(v12 + 84);
  uint64_t v27 = v14;
  uint64_t v28 = *(unsigned int *)(v14 + 84);
  if (v28 <= v26) {
    unsigned int v29 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v29 = *(_DWORD *)(v14 + 84);
  }
  unsigned int v30 = v22 - 1;
  if (!v22) {
    unsigned int v30 = 0;
  }
  if (v30 <= v29) {
    unsigned int v31 = v29;
  }
  else {
    unsigned int v31 = v30;
  }
  uint64_t v32 = *(void *)(v12 + 64) + v15;
  uint64_t v33 = *(void *)(v14 + 64);
  uint64_t v34 = v33 + v23;
  uint64_t v35 = (v33 + v23 + (v32 & ~v15)) & ~v23;
  size_t v36 = *(void *)(v20 + 64);
  if (v22) {
    size_t v37 = v36;
  }
  else {
    size_t v37 = v36 + 1;
  }
  size_t v38 = v35 + v37;
  if (v31) {
    size_t v39 = v38;
  }
  else {
    size_t v39 = v38 + 1;
  }
  if (v39 <= 8) {
    uint64_t v40 = 8;
  }
  else {
    uint64_t v40 = v39;
  }
  if (v96 <= v40 + v25 + 1) {
    unint64_t v41 = v40 + v25 + 1;
  }
  else {
    unint64_t v41 = v96;
  }
  if (v41 <= 8) {
    uint64_t v42 = 8;
  }
  else {
    uint64_t v42 = v41;
  }
  unsigned int v43 = a2[v42];
  unsigned int v44 = v43 - 4;
  if (v43 < 4)
  {
    unsigned int v46 = a1;
    uint64_t v47 = v93;
  }
  else
  {
    if (v42 <= 3) {
      uint64_t v45 = v42;
    }
    else {
      uint64_t v45 = 4;
    }
    unsigned int v46 = a1;
    uint64_t v47 = v93;
    switch(v45)
    {
      case 1:
        int v48 = *a2;
        if (v42 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v48 = *(unsigned __int16 *)a2;
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v42 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v48 = *(_DWORD *)a2;
        if (v42 < 4) {
LABEL_39:
        }
          v48 |= v44 << (8 * v42);
LABEL_40:
        unsigned int v43 = v48 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v49 = ~v47;
  uint64_t v50 = ~v99;
  uint64_t v51 = ~v24;
  switch(v43)
  {
    case 1u:
      void *v46 = *(void *)a2;
      char v54 = 1;
      goto LABEL_91;
    case 2u:
      void *v46 = *(void *)a2;
      unint64_t v55 = (void *)(((unint64_t)v46 + v24 + 8) & v51);
      unint64_t v56 = (unsigned __int8 *)((unint64_t)&a2[v24 + 8] & v51);
      unsigned int v57 = v56[v40];
      unsigned int v58 = v57 - 2;
      if (v57 >= 2)
      {
        if (v40 <= 3) {
          uint64_t v59 = v40;
        }
        else {
          uint64_t v59 = 4;
        }
        switch(v59)
        {
          case 1:
            int v60 = *v56;
            goto LABEL_57;
          case 2:
            int v60 = *(unsigned __int16 *)v56;
            goto LABEL_57;
          case 3:
            int v60 = *(unsigned __int16 *)v56 | (v56[2] << 16);
            goto LABEL_57;
          case 4:
            int v60 = *(_DWORD *)v56;
LABEL_57:
            int v61 = (v60 | (v58 << (8 * v40))) + 2;
            unsigned int v57 = v60 + 2;
            if (v40 < 4) {
              unsigned int v57 = v61;
            }
            break;
          default:
            break;
        }
      }
      if (v57 == 1)
      {
        *unint64_t v55 = *(void *)v56;
        char v62 = 1;
LABEL_90:
        *((unsigned char *)v55 + v40) = v62;
        char v54 = 2;
        goto LABEL_91;
      }
      uint64_t v79 = v19;
      size_t v80 = v38;
      size_t v77 = v37;
      uint64_t v78 = v32;
      uint64_t v95 = ~v18;
      uint64_t v97 = ~v23;
      if (!v31)
      {
        if (v56[v38])
        {
          int v65 = (v56[v38] - 1) << (8 * v38);
          if (v38 > 3) {
            int v65 = 0;
          }
          if (v38)
          {
            int v66 = v38 <= 3 ? v38 : 4;
            switch(v66)
            {
              case 2:
                int v67 = *(unsigned __int16 *)v56;
                break;
              case 3:
                int v67 = *(unsigned __int16 *)v56 | (v56[2] << 16);
                break;
              case 4:
                int v67 = *(_DWORD *)v56;
                break;
              default:
                int v67 = *v56;
                break;
            }
          }
          else
          {
            int v67 = 0;
          }
          if ((v67 | v65) != 0xFFFFFFFF) {
            goto LABEL_76;
          }
        }
        goto LABEL_84;
      }
      if (v26 == v31)
      {
        unsigned int v63 = v31;
        int v64 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v82 + 48))(v56, v26, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v68 = (unint64_t)&v56[v32] & ~v18;
        unsigned int v63 = v31;
        if (v28 != v31)
        {
          unsigned int v69 = (*(uint64_t (**)(unint64_t))(v21 + 48))((v34 + v68) & ~v23);
          unsigned int v31 = v63;
          if (v69 >= 2) {
            goto LABEL_76;
          }
          goto LABEL_84;
        }
        int v64 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v68, v28, v81);
      }
      unsigned int v31 = v63;
      if (v64)
      {
LABEL_76:
        memcpy(v55, v56, v39);
        char v62 = 0;
        goto LABEL_90;
      }
LABEL_84:
      int v70 = v55;
      unsigned int v71 = v31;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v82 + 32))(v70, v56, AssociatedTypeWitness);
      uint64_t v100 = v70;
      unint64_t v72 = ((unint64_t)v70 + v78) & v95;
      unint64_t v73 = (unint64_t)&v56[v78] & v95;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 32))(v72, v73, v81);
      id v74 = (void *)((v34 + v72) & v97);
      char v75 = (const void *)((v34 + v73) & v97);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v75, 1, v79))
      {
        memcpy(v74, v75, v77);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v74, v75, v79);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v74, 0, 1, v79);
      }
      char v62 = 0;
      if (v71)
      {
        unint64_t v55 = v100;
      }
      else
      {
        unint64_t v55 = v100;
        *((unsigned char *)v100 + v80) = 0;
      }
      goto LABEL_90;
    case 3u:
      void *v46 = *(void *)a2;
      char v54 = 3;
      goto LABEL_91;
    default:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v86 + 32))(v46, a2, v89);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 32))(((unint64_t)v46 + v85) & v49, (unint64_t)&a2[v85] & v49, v90);
      int v52 = (void *)(((((unint64_t)v46 + v85) & v49) + v87 + v99) & v50);
      int v53 = (const void *)((((unint64_t)&a2[v85] & v49) + v87 + v99) & v50);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48))(v53, 1, v92))
      {
        memcpy(v52, v53, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v52, v53, v92);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v52, 0, 1, v92);
      }
      char v54 = 0;
LABEL_91:
      *((unsigned char *)v46 + v42) = v54;
      return v46;
  }
}

unsigned __int8 *sub_1A55679AC(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    uint64_t v5 = a3[2];
    uint64_t v100 = *(void *)(v5 - 8);
    uint64_t v6 = *(void *)(v100 + 64);
    uint64_t v8 = a3[3];
    uint64_t v7 = a3[4];
    uint64_t v102 = *(void *)(v8 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v102 + 80);
    uint64_t v99 = v6 + v9;
    uint64_t v107 = v9;
    uint64_t v10 = *(void *)(v7 - 8);
    uint64_t v101 = *(void *)(v102 + 64);
    uint64_t v113 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v11 = (v101 + v113 + ((v6 + v9) & ~v9)) & ~v113;
    uint64_t v105 = v10;
    size_t v12 = *(void *)(v10 + 64);
    if (!*(_DWORD *)(v10 + 84)) {
      ++v12;
    }
    size_t __n = v12;
    unint64_t v109 = v12 + v11;
    uint64_t v103 = v5;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    int v14 = *(_DWORD *)(v13 + 80);
    uint64_t v104 = v8;
    uint64_t v92 = swift_getAssociatedTypeWitness();
    uint64_t v15 = *(void *)(v92 - 8);
    uint64_t v16 = *(_DWORD *)(v15 + 80);
    int v17 = *(_DWORD *)(v15 + 80) | v14;
    uint64_t v106 = v7;
    uint64_t v18 = swift_getAssociatedTypeWitness();
    uint64_t v19 = *(void *)(v18 - 8);
    int v20 = *(_DWORD *)(v19 + 84);
    uint64_t v94 = v19;
    uint64_t v21 = *(_DWORD *)(v19 + 80);
    uint64_t v22 = (v17 | *(_DWORD *)(v19 + 80)) & 0xF8 | 7u;
    uint64_t v23 = (v22 + 8) & ~v22;
    uint64_t v96 = v13;
    uint64_t v24 = *(unsigned int *)(v13 + 84);
    uint64_t v89 = v15;
    uint64_t v25 = *(unsigned int *)(v15 + 84);
    if (v25 <= v24) {
      unsigned int v26 = *(_DWORD *)(v13 + 84);
    }
    else {
      unsigned int v26 = *(_DWORD *)(v15 + 84);
    }
    unsigned int v27 = v20 - 1;
    if (!v20) {
      unsigned int v27 = 0;
    }
    if (v27 <= v26) {
      unsigned int v28 = v26;
    }
    else {
      unsigned int v28 = v27;
    }
    unsigned int v86 = *(_DWORD *)(v19 + 84);
    BOOL v29 = v20 == 0;
    uint64_t v30 = v16;
    uint64_t v3 = a1;
    uint64_t v95 = *(void *)(v13 + 64) + v16;
    uint64_t v91 = *(void *)(v15 + 64) + v21;
    uint64_t v31 = (v91 + (v95 & ~v16)) & ~v21;
    if (v29) {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64) + 1;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v18 - 8) + 64);
    }
    uint64_t v33 = v31 + v32;
    unsigned int v98 = v28;
    if (v28) {
      unint64_t v34 = v31 + v32;
    }
    else {
      unint64_t v34 = v33 + 1;
    }
    size_t v87 = v34;
    if (v34 <= 8) {
      uint64_t v35 = 8;
    }
    else {
      uint64_t v35 = v34;
    }
    if (v109 <= v35 + v23 + 1) {
      unint64_t v36 = v35 + v23 + 1;
    }
    else {
      unint64_t v36 = v109;
    }
    if (v36 <= 8) {
      uint64_t v37 = 8;
    }
    else {
      uint64_t v37 = v36;
    }
    unsigned int v38 = a1[v37];
    unsigned int v39 = v38 - 4;
    size_t v85 = v32;
    if (v38 < 4)
    {
      uint64_t v41 = v107;
    }
    else
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      uint64_t v41 = v107;
      switch(v40)
      {
        case 1:
          int v42 = *a1;
          if (v37 < 4) {
            goto LABEL_40;
          }
          goto LABEL_41;
        case 2:
          int v42 = *(unsigned __int16 *)a1;
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 3:
          int v42 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v37 >= 4) {
            goto LABEL_41;
          }
          goto LABEL_40;
        case 4:
          int v42 = *(_DWORD *)a1;
          if (v37 < 4) {
LABEL_40:
          }
            v42 |= v39 << (8 * v37);
LABEL_41:
          unsigned int v38 = v42 + 4;
          break;
        default:
          break;
      }
    }
    uint64_t v93 = v18;
    uint64_t v43 = ~v41;
    uint64_t v110 = ~v113;
    uint64_t v44 = ~v22;
    uint64_t v108 = ~v30;
    uint64_t v90 = ~v21;
    switch(v38)
    {
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_84;
      case 2u:
        int v48 = (id *)((unint64_t)&a1[v22 + 8] & v44);
        unsigned int v49 = *((unsigned __int8 *)v48 + v35);
        unsigned int v50 = v49 - 2;
        if (v49 >= 2)
        {
          if (v35 <= 3) {
            uint64_t v51 = v35;
          }
          else {
            uint64_t v51 = 4;
          }
          switch(v51)
          {
            case 1:
              int v52 = *(unsigned __int8 *)v48;
              goto LABEL_56;
            case 2:
              int v52 = *(unsigned __int16 *)v48;
              goto LABEL_56;
            case 3:
              int v52 = *(unsigned __int16 *)v48 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v44) + 2) << 16);
              goto LABEL_56;
            case 4:
              int v52 = *(_DWORD *)v48;
LABEL_56:
              int v53 = (v52 | (v50 << (8 * v35))) + 2;
              unsigned int v49 = v52 + 2;
              if (v35 < 4) {
                unsigned int v49 = v53;
              }
              break;
            default:
              break;
          }
        }
        if (v49 == 1)
        {

          goto LABEL_84;
        }
        if (!v28)
        {
          if (*((unsigned char *)v48 + v33))
          {
            int v55 = (*((unsigned __int8 *)v48 + v33) - 1) << (8 * v33);
            if (v33 > 3) {
              int v55 = 0;
            }
            if (v33)
            {
              int v56 = v33 <= 3 ? v33 : 4;
              switch(v56)
              {
                case 2:
                  int v57 = *(unsigned __int16 *)v48;
                  break;
                case 3:
                  int v57 = *(unsigned __int16 *)v48 | (*(unsigned __int8 *)(((unint64_t)&a1[v22 + 8] & v44) + 2) << 16);
                  break;
                case 4:
                  int v57 = *(_DWORD *)v48;
                  break;
                default:
                  int v57 = *(unsigned __int8 *)v48;
                  break;
              }
            }
            else
            {
              int v57 = 0;
            }
            if ((v57 | v55) != 0xFFFFFFFF) {
              goto LABEL_84;
            }
          }
LABEL_83:
          (*(void (**)(unint64_t, uint64_t))(v96 + 8))((unint64_t)&a1[v22 + 8] & v44, AssociatedTypeWitness);
          unint64_t v59 = ((unint64_t)v48 + v95) & v108;
          (*(void (**)(unint64_t, uint64_t))(v89 + 8))(v59, v92);
          unint64_t v45 = (v91 + v59) & v90;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v94 + 48))(v45, 1, v93))
          {
            uint64_t v46 = v93;
            uint64_t v47 = v94;
            goto LABEL_45;
          }
          goto LABEL_84;
        }
        if (v24 == v28)
        {
          int v54 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v96 + 48))((unint64_t)&a1[v22 + 8] & v44, v24, AssociatedTypeWitness);
        }
        else
        {
          unint64_t v58 = ((unint64_t)v48 + v95) & v108;
          if (v25 != v28)
          {
            if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v94 + 48))((v91 + v58) & v90, v86, v93) < 2)goto LABEL_83; {
            goto LABEL_84;
            }
          }
          int v54 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v89 + 48))(v58, v25, v92);
        }
        if (!v54) {
          goto LABEL_83;
        }
LABEL_84:
        unsigned int v60 = a2[v37];
        unsigned int v61 = v60 - 4;
        if (v60 >= 4)
        {
          if (v37 <= 3) {
            uint64_t v62 = v37;
          }
          else {
            uint64_t v62 = 4;
          }
          switch(v62)
          {
            case 1:
              int v63 = *a2;
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 2:
              int v63 = *(unsigned __int16 *)a2;
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 3:
              int v63 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              if (v37 < 4) {
                goto LABEL_92;
              }
              goto LABEL_96;
            case 4:
              int v63 = *(_DWORD *)a2;
              if (v37 < 4) {
LABEL_92:
              }
                unsigned int v60 = (v63 | (v61 << (8 * v37))) + 4;
              else {
LABEL_96:
              }
                unsigned int v60 = v63 + 4;
              break;
            default:
              break;
          }
        }
        switch(v60)
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            char v66 = 1;
            goto LABEL_149;
          case 2u:
            uint64_t v114 = v33;
            *(void *)a1 = *(void *)a2;
            int v67 = (void *)((unint64_t)&a1[v22 + 8] & v44);
            uint64_t v68 = v35;
            unsigned int v69 = (unsigned __int8 *)((unint64_t)&a2[v22 + 8] & v44);
            unsigned int v70 = v69[v68];
            unsigned int v71 = v70 - 2;
            if (v70 < 2)
            {
              uint64_t v73 = v68;
LABEL_110:
              if (v70 != 1) {
                goto LABEL_119;
              }
            }
            else
            {
              if (v68 <= 3) {
                uint64_t v72 = v68;
              }
              else {
                uint64_t v72 = 4;
              }
              uint64_t v73 = v68;
              switch(v72)
              {
                case 1:
                  int v74 = *v69;
                  break;
                case 2:
                  int v74 = *(unsigned __int16 *)v69;
                  break;
                case 3:
                  int v74 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v44) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v44) + 2) << 16);
                  break;
                case 4:
                  int v74 = *(_DWORD *)v69;
                  break;
                default:
                  goto LABEL_110;
              }
              int v76 = (v74 | (v71 << (8 * v68))) + 2;
              int v77 = v74 + 2;
              if (v68 < 4) {
                int v77 = v76;
              }
              if (v77 != 1)
              {
LABEL_119:
                if (v98)
                {
                  if (v24 == v98)
                  {
                    if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v96 + 48))(v69, v24, AssociatedTypeWitness))goto LABEL_137; {
LABEL_147:
                    }
                    memcpy((void *)((unint64_t)&a1[v22 + 8] & v44), v69, v87);
                    char v75 = 0;
                    goto LABEL_148;
                  }
                  unint64_t v81 = (unint64_t)&v69[v95] & v108;
                  if (v25 != v98)
                  {
                    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v94 + 48))((v91 + v81) & v90, v86, v93) < 2)goto LABEL_137; {
                    goto LABEL_147;
                    }
                  }
                  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v89 + 48))(v81, v25, v92)) {
                    goto LABEL_147;
                  }
                }
                else if (v69[v114])
                {
                  int v78 = (v69[v114] - 1) << (8 * v114);
                  if (v114 > 3) {
                    int v78 = 0;
                  }
                  if (v114)
                  {
                    int v79 = v114 <= 3 ? v114 : 4;
                    switch(v79)
                    {
                      case 2:
                        int v80 = *(unsigned __int16 *)v69;
                        break;
                      case 3:
                        int v80 = *(unsigned __int16 *)((unint64_t)&a2[v22 + 8] & v44) | (*(unsigned __int8 *)(((unint64_t)&a2[v22 + 8] & v44) + 2) << 16);
                        break;
                      case 4:
                        int v80 = *(_DWORD *)v69;
                        break;
                      default:
                        int v80 = *v69;
                        break;
                    }
                  }
                  else
                  {
                    int v80 = 0;
                  }
                  if ((v80 | v78) != 0xFFFFFFFF) {
                    goto LABEL_147;
                  }
                }
LABEL_137:
                (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v96 + 32))((unint64_t)&a1[v22 + 8] & v44, v69, AssociatedTypeWitness);
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(((unint64_t)v67 + v95) & v108, (unint64_t)&v69[v95] & v108, v92);
                uint64_t v82 = (void *)((v91 + (((unint64_t)v67 + v95) & v108)) & v90);
                uint64_t v83 = (const void *)((v91 + ((unint64_t)&v69[v95] & v108)) & v90);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v94 + 48))(v83, 1, v93))
                {
                  memcpy(v82, v83, v85);
                  char v75 = v98;
                  if (v98)
                  {
LABEL_139:
                    char v75 = 0;
                    goto LABEL_148;
                  }
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v94 + 32))(v82, v83, v93);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v82, 0, 1, v93);
                  char v75 = v98;
                  if (v98) {
                    goto LABEL_139;
                  }
                }
                *((unsigned char *)v67 + v114) = 0;
                goto LABEL_148;
              }
            }
            void *v67 = *(void *)v69;
            char v75 = 1;
LABEL_148:
            *((unsigned char *)v67 + v73) = v75;
            char v66 = 2;
LABEL_149:
            a1[v37] = v66;
            return v3;
          case 3u:
            *(void *)a1 = *(void *)a2;
            char v66 = 3;
            goto LABEL_149;
          default:
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v100 + 32))(a1, a2, v103);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v102 + 32))((unint64_t)&a1[v99] & v43, (unint64_t)&a2[v99] & v43, v104);
            int v64 = (void *)((((unint64_t)&a1[v99] & v43) + v101 + v113) & v110);
            int v65 = (const void *)((((unint64_t)&a2[v99] & v43) + v101 + v113) & v110);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v105 + 48))(v65, 1, v106))
            {
              memcpy(v64, v65, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v105 + 32))(v64, v65, v106);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v64, 0, 1, v106);
            }
            char v66 = 0;
            goto LABEL_149;
        }
      case 3u:
        goto LABEL_84;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v100 + 8))(a1, v103);
        (*(void (**)(unint64_t, uint64_t))(v102 + 8))((unint64_t)&a1[v99] & v43, v104);
        unint64_t v45 = (((unint64_t)&a1[v99] & v43) + v101 + v113) & v110;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v105 + 48))(v45, 1, v106))
        {
          uint64_t v47 = v105;
          uint64_t v46 = v106;
LABEL_45:
          (*(void (**)(unint64_t, uint64_t))(v47 + 8))(v45, v46);
        }
        goto LABEL_84;
    }
  }
  return v3;
}

uint64_t sub_1A556865C(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  unint64_t v37 = (((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
       + *(void *)(*(void *)(a3[3] - 8) + 64)
       + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int v34 = *(_DWORD *)(v3 + 84);
  uint64_t v36 = *(void *)(v3 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v33 = *(_DWORD *)(v4 + 80);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v7;
  unsigned int v9 = *(_DWORD *)(v4 + 84);
  if (*(_DWORD *)(v5 + 84) > v9) {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v12 = v7 + 80;
  int v10 = *(_DWORD *)(v7 + 80);
  int v11 = *(_DWORD *)(v12 + 4);
  int v13 = v11 - 1;
  if (!v11) {
    int v13 = 0;
  }
  BOOL v14 = v11 == 0;
  uint64_t v15 = *(void *)(v8 + 64);
  if (v14) {
    ++v15;
  }
  uint64_t v16 = v10;
  uint64_t v17 = ((v6 | v33) | v10) & 0xF8 | 7u;
  uint64_t v18 = (v17 + 8) & ~v17;
  int v19 = v13 | v9;
  uint64_t v20 = v36;
  if (!v34) {
    uint64_t v20 = v36 + 1;
  }
  BOOL v14 = v19 == 0;
  unint64_t v21 = v20 + v37;
  if (v14) {
    ++v15;
  }
  unint64_t v22 = v15
      + ((*(void *)(v5 + 64)
        + v16
        + ((*(void *)(v4 + 64) + v6) & ~(unint64_t)v6)) & ~v16);
  if (v22 <= 8) {
    unint64_t v22 = 8;
  }
  unint64_t v23 = v22 + v18;
  if (v21 <= v23 + 1) {
    unint64_t v21 = v23 + 1;
  }
  if (v21 <= 8) {
    uint64_t v24 = 8;
  }
  else {
    uint64_t v24 = v21;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_37;
  }
  uint64_t v25 = v24 + 1;
  char v26 = 8 * (v24 + 1);
  if ((v24 + 1) <= 3)
  {
    unsigned int v29 = ((a2 + ~(-1 << v26) - 252) >> v26) + 1;
    if (HIWORD(v29))
    {
      int v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v29 > 0xFF)
    {
      int v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(unsigned __int16 *)((char *)a1 + v25)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v29 < 2)
    {
LABEL_37:
      unsigned int v31 = *((unsigned __int8 *)a1 + v24);
      if (v31 >= 4) {
        return (v31 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((unsigned char *)a1 + v25)) {
    goto LABEL_37;
  }
LABEL_29:
  int v30 = (v27 - 1) << v26;
  if (v25 > 3) {
    int v30 = 0;
  }
  if (v25)
  {
    if (v25 > 3) {
      LODWORD(v25) = 4;
    }
    switch((int)v25)
    {
      case 2:
        LODWORD(v25) = *a1;
        break;
      case 3:
        LODWORD(v25) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v25) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v25) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v25 | v30) + 253;
}

void sub_1A5568A60(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v4 = *(void *)(a4[4] - 8);
  unint64_t v35 = (((*(void *)(*(void *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4[3] - 8) + 80))
       + *(void *)(*(void *)(a4[3] - 8) + 64)
       + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  int v32 = *(_DWORD *)(v4 + 84);
  uint64_t v34 = *(void *)(v4 + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v31 = *(_DWORD *)(v5 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  int v8 = 0;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v11 = *(_DWORD *)(v5 + 84);
  if (*(_DWORD *)(v6 + 84) > v11) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v14 = v9 + 80;
  int v12 = *(_DWORD *)(v9 + 80);
  int v13 = *(_DWORD *)(v14 + 4);
  int v15 = v13 - 1;
  if (!v13) {
    int v15 = 0;
  }
  BOOL v16 = v13 == 0;
  uint64_t v17 = *(void *)(v10 + 64);
  if (v16) {
    ++v17;
  }
  uint64_t v18 = v12;
  uint64_t v19 = ((v7 | v31) | v12) & 0xF8 | 7u;
  uint64_t v20 = (v19 + 8) & ~v19;
  int v21 = v15 | v11;
  uint64_t v22 = v34;
  if (!v32) {
    uint64_t v22 = v34 + 1;
  }
  BOOL v16 = v21 == 0;
  unint64_t v23 = v22 + v35;
  if (v16) {
    ++v17;
  }
  unint64_t v24 = v17
      + ((*(void *)(v6 + 64)
        + v18
        + ((*(void *)(v5 + 64) + v7) & ~(unint64_t)v7)) & ~v18);
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  unint64_t v25 = v24 + v20;
  if (v23 <= v25 + 1) {
    unint64_t v23 = v25 + 1;
  }
  if (v23 <= 8) {
    unint64_t v23 = 8;
  }
  size_t v26 = v23 + 1;
  if (a3 >= 0xFD)
  {
    if (v26 <= 3)
    {
      unsigned int v27 = ((a3 + ~(-1 << (8 * v26)) - 252) >> (8 * v26)) + 1;
      if (HIWORD(v27))
      {
        int v8 = 4;
      }
      else if (v27 >= 0x100)
      {
        int v8 = 2;
      }
      else
      {
        int v8 = v27 > 1;
      }
    }
    else
    {
      int v8 = 1;
    }
  }
  if (a2 > 0xFC)
  {
    unsigned int v28 = a2 - 253;
    if (v26 < 4)
    {
      int v29 = (v28 >> (8 * v26)) + 1;
      if (v23 != -1)
      {
        int v30 = v28 & ~(-1 << (8 * v26));
        bzero(a1, v26);
        if (v26 == 3)
        {
          *(_WORD *)a1 = v30;
          a1[2] = BYTE2(v30);
        }
        else if (v26 == 2)
        {
          *(_WORD *)a1 = v30;
        }
        else
        {
          *a1 = v30;
        }
      }
    }
    else
    {
      bzero(a1, v23 + 1);
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v26] = v29;
        break;
      case 2:
        *(_WORD *)&a1[v26] = v29;
        break;
      case 3:
LABEL_47:
        __break(1u);
        JUMPOUT(0x1A5568ED0);
      case 4:
        *(_DWORD *)&a1[v26] = v29;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v26] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      case 2:
        *(_WORD *)&a1[v26] = 0;
        goto LABEL_36;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v26] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      default:
LABEL_36:
        if (a2) {
LABEL_37:
        }
          a1[v23] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1A5568EF8(unsigned __int8 *a1, void *a2)
{
  uint64_t v2 = *(void *)(a2[4] - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  if (!*(_DWORD *)(v2 + 84)) {
    ++v3;
  }
  unint64_t v23 = v3
      + ((((*(void *)(*(void *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a2[3] - 8) + 80))
        + *(void *)(*(void *)(a2[3] - 8) + 64)
        + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  int v8 = *(_DWORD *)(v6 + 80) | v5;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = (v8 | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  uint64_t v13 = (v12 + 8) & ~v12;
  unsigned int v14 = *(_DWORD *)(v4 + 84);
  if (*(_DWORD *)(v6 + 84) > v14) {
    unsigned int v14 = *(_DWORD *)(v6 + 84);
  }
  int v15 = v10 - 1;
  if (!v10) {
    int v15 = 0;
  }
  uint64_t v16 = *(void *)(v9 + 64);
  if (!v10) {
    ++v16;
  }
  if (!(v15 | v14)) {
    ++v16;
  }
  unint64_t v17 = v16 + ((*(void *)(v6 + 64) + v11 + ((*(void *)(v4 + 64) + v7) & ~v7)) & ~v11);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + v13;
  if (v23 <= v18 + 1) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = v23;
  }
  if (v19 <= 8) {
    unint64_t v19 = 8;
  }
  uint64_t result = a1[v19];
  if (result >= 4)
  {
    if (v19 <= 3) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a1;
        if (v19 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 2:
        int v22 = *(unsigned __int16 *)a1;
        if (v19 >= 4) {
          goto LABEL_30;
        }
        goto LABEL_28;
      case 3:
        int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v19 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 4:
        int v22 = *(_DWORD *)a1;
        if (v19 < 4) {
LABEL_28:
        }
          uint64_t result = (v22 | ((result - 4) << (8 * v19))) + 4;
        else {
LABEL_30:
        }
          uint64_t result = (v22 + 4);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1A5569274(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v3 = *(void *)(a3[4] - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v4;
  }
  unint64_t v25 = v4
      + ((((*(void *)(*(void *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a3[3] - 8) + 80))
        + *(void *)(*(void *)(a3[3] - 8) + 64)
        + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  int v9 = *(_DWORD *)(v7 + 80) | v6;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = (v9 | *(_DWORD *)(v10 + 80)) & 0xF8 | 7u;
  uint64_t v14 = (v13 + 8) & ~v13;
  unsigned int v15 = *(_DWORD *)(v5 + 84);
  if (*(_DWORD *)(v7 + 84) > v15) {
    unsigned int v15 = *(_DWORD *)(v7 + 84);
  }
  int v16 = v11 - 1;
  if (!v11) {
    int v16 = 0;
  }
  uint64_t v17 = *(void *)(v10 + 64);
  if (!v11) {
    ++v17;
  }
  if (!(v16 | v15)) {
    ++v17;
  }
  unint64_t v18 = v17 + ((*(void *)(v7 + 64) + v12 + ((*(void *)(v5 + 64) + v8) & ~v8)) & ~v12);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + v14;
  if (v25 <= v19 + 1) {
    unint64_t v20 = v19 + 1;
  }
  else {
    unint64_t v20 = v25;
  }
  if (v20 <= 8) {
    size_t v21 = 8;
  }
  else {
    size_t v21 = v20;
  }
  if (a2 > 3)
  {
    unsigned int v22 = ((a2 - 4) >> (8 * v21)) + 4;
    if (v21 <= 3)
    {
      int v23 = (a2 - 4) & ~(-1 << (8 * v21));
    }
    else
    {
      LOBYTE(v22) = 4;
      int v23 = a2 - 4;
    }
    a1[v21] = v22;
    if (v21 >= 4) {
      int v24 = 4;
    }
    else {
      int v24 = v21;
    }
    bzero(a1, v21);
    switch(v24)
    {
      case 2:
        *(_WORD *)a1 = v23;
        break;
      case 3:
        *(_WORD *)a1 = v23;
        a1[2] = BYTE2(v23);
        break;
      case 4:
        *(_DWORD *)a1 = v23;
        break;
      default:
        *a1 = v23;
        break;
    }
  }
  else
  {
    a1[v21] = a2;
  }
}

void *sub_1A5569608(void *a1, void *a2, uint64_t a3)
{
  return sub_1A55696B8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1A5569620);
}

uint64_t sub_1A5569620()
{
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5569664()
{
  return sub_1A5569674();
}

uint64_t sub_1A5569674()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1A55696B8(void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  a4(*a2, v6, v7);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return a1;
}

uint64_t *sub_1A5569708(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_1A5569734(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1A5569620, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5569674);
}

uint64_t *sub_1A5569734(uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *sub_1A55697A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55697B8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5569674);
}

uint64_t *sub_1A55697B8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v7 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v5;
  a4(v6, v8, v7);
  return a1;
}

uint64_t sub_1A5569800(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_1A556985C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A55698B4(void *a1)
{
  return *a1 >> 63;
}

void *sub_1A55698C0(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1A55698D0(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

uint64_t type metadata accessor for CombineLatestStateMachine.CancelledAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A5569900()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1A556993C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A5569974(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1A55699D4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for CombineLatestStateMachine.IteratorDeinitializedAction()
{
  return swift_getGenericMetadata();
}

uint64_t combineLatest<A, B, C, D, E, F>(_:_:_:_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, long long a14, uint64_t a15, uint64_t a16)
{
  uint64_t v63 = a6;
  uint64_t v52 = a2;
  uint64_t v65 = a8;
  long long v64 = a13;
  long long v62 = a14;
  uint64_t v61 = a15;
  uint64_t v59 = a5;
  uint64_t v60 = a16;
  uint64_t v53 = a11;
  uint64_t v57 = a4;
  uint64_t v58 = a12;
  uint64_t v17 = *(void *)(a12 - 8);
  uint64_t v55 = a3;
  uint64_t v56 = v17;
  uint64_t v50 = a10;
  uint64_t v18 = MEMORY[0x1F4188790](a1);
  int v54 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v18);
  uint64_t v51 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v22);
  unsigned int v28 = (char *)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)(a9 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v26);
  int v32 = (char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v30);
  unint64_t v37 = (char *)&v48 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v38;
  MEMORY[0x1F4188790](v35);
  uint64_t v40 = (char *)&v48 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v41 + 16))(v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v37, v52, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v32, v55, a9);
  uint64_t v42 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v57, v50);
  uint64_t v43 = (uint64_t)v51;
  uint64_t v44 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v51, v59, v53);
  uint64_t v45 = (uint64_t)v54;
  uint64_t v46 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v63, v58);
  return sub_1A5569E70((uint64_t)v40, (uint64_t)v37, (uint64_t)v32, (uint64_t)v28, v43, v45, v49, v48, v65, a9, v42, v44, v46);
}

uint64_t sub_1A5569E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a9, a1, a7);
  int v16 = (int *)type metadata accessor for AsyncCombineLatest6Sequence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v16[29], a2, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9 + v16[30], a3, a10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9 + v16[31], a4, a11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v16[32], a5, a12);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(a9 + v16[33], a6, a13);
}

uint64_t AsyncCombineLatest6Sequence.Iterator.next()(uint64_t a1, void *a2)
{
  v2[30] = a1;
  uint64_t v24 = a2[8];
  uint64_t v23 = a2[2];
  v2[31] = swift_getAssociatedTypeWitness();
  uint64_t v21 = a2[3];
  uint64_t v22 = a2[9];
  v2[32] = swift_getAssociatedTypeWitness();
  uint64_t v19 = a2[4];
  uint64_t v20 = a2[10];
  v2[33] = swift_getAssociatedTypeWitness();
  v2[34] = swift_getTupleTypeMetadata3();
  uint64_t v17 = a2[5];
  uint64_t v18 = a2[11];
  v2[35] = swift_getAssociatedTypeWitness();
  uint64_t v4 = a2[12];
  uint64_t v5 = a2[6];
  v2[36] = swift_getAssociatedTypeWitness();
  uint64_t v6 = a2[13];
  uint64_t v7 = a2[7];
  v2[37] = swift_getAssociatedTypeWitness();
  v2[38] = swift_getTupleTypeMetadata3();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v2[39] = TupleTypeMetadata2;
  uint64_t v9 = sub_1A56D5898();
  v2[40] = v9;
  v2[41] = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  v2[42] = v10;
  v2[43] = *(void *)(TupleTypeMetadata2 - 8);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v2[2] = v23;
  v2[51] = v11;
  v2[3] = v21;
  v2[4] = v19;
  v2[5] = v24;
  v2[6] = v22;
  v2[7] = v20;
  uint64_t v12 = type metadata accessor for AsyncCombineLatest3Sequence();
  v2[8] = v17;
  v2[9] = v5;
  v2[10] = v7;
  v2[11] = v18;
  v2[12] = v4;
  v2[13] = v6;
  uint64_t v13 = type metadata accessor for AsyncCombineLatest3Sequence();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  v2[26] = v12;
  v2[27] = v13;
  v2[28] = WitnessTable;
  v2[29] = v15;
  type metadata accessor for AsyncCombineLatest2Sequence.Iterator();
  *uint64_t v11 = v2;
  v11[1] = sub_1A556A424;
  return AsyncCombineLatest2Sequence.Iterator.next()(v10);
}

uint64_t sub_1A556A424()
{
  *(void *)(*(void *)v1 + 416) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A556B458;
  }
  else {
    uint64_t v2 = sub_1A556A538;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A556A538()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 312);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 344) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 296);
    uint64_t v4 = *(void *)(v0 + 264);
    uint64_t v5 = *(void *)(v0 + 240);
    long long v118 = *(_OWORD *)(v0 + 248);
    long long v120 = *(_OWORD *)(v0 + 280);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 328) + 8))(v1, *(void *)(v0 + 320));
    *(_OWORD *)(v0 + 112) = v118;
    *(void *)(v0 + 128) = v4;
    *(_OWORD *)(v0 + 136) = v120;
    *(void *)(v0 + 152) = v3;
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata - 8) + 56))(v5, 1, 1, TupleTypeMetadata);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 400);
    uint64_t v78 = *(void *)(v0 + 392);
    uint64_t v75 = *(void *)(v0 + 368);
    uint64_t v76 = *(void *)(v0 + 376);
    uint64_t v77 = *(void *)(v0 + 360);
    uint64_t v83 = *(void *)(v0 + 384);
    uint64_t v84 = *(void *)(v0 + 352);
    uint64_t v8 = *(void *)(v0 + 304);
    uint64_t v121 = *(void *)(v0 + 296);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v117 = *(void *)(v0 + 288);
    uint64_t v112 = *(void *)(v0 + 264);
    uint64_t v113 = *(void *)(v0 + 272);
    uint64_t v10 = *(void *)(v0 + 256);
    uint64_t v87 = *(void *)(v0 + 240);
    uint64_t v11 = *(int *)(v113 + 48);
    uint64_t v12 = v7 + v11;
    uint64_t v100 = v7 + v11;
    uint64_t v13 = *(int *)(v113 + 64);
    uint64_t v14 = v7 + v13;
    uint64_t v88 = v7 + v13;
    uint64_t v15 = *(int *)(v2 + 48);
    uint64_t v104 = v7 + v15;
    uint64_t v98 = v7 + v15 + *(int *)(v8 + 48);
    uint64_t v106 = v7 + v15 + *(int *)(v8 + 64);
    uint64_t v16 = v1 + v15;
    uint64_t v17 = v1 + v11;
    uint64_t v102 = v2;
    uint64_t v18 = v1 + v13;
    uint64_t v116 = *(void *)(v0 + 248);
    uint64_t v111 = *(void **)(v116 - 8);
    uint64_t v82 = (void (*)(uint64_t, uint64_t))v111[4];
    v82(v7, v1);
    unint64_t v115 = *(void **)(v10 - 8);
    unint64_t v81 = (void (*)(uint64_t, uint64_t, uint64_t))v115[4];
    v81(v12, v17, v10);
    uint64_t v110 = *(void **)(v112 - 8);
    int v80 = (void (*)(uint64_t, uint64_t))v110[4];
    v80(v14, v18);
    uint64_t v85 = v8;
    uint64_t v19 = v16 + *(int *)(v8 + 48);
    uint64_t v20 = v16 + *(int *)(v8 + 64);
    uint64_t v108 = *(void **)(v9 - 8);
    int v74 = (void (*)(uint64_t, uint64_t, uint64_t))v108[4];
    uint64_t v119 = v9;
    v74(v104, v16, v9);
    uint64_t v96 = *(void **)(v117 - 8);
    long long v62 = (void (*)(uint64_t, uint64_t))v96[4];
    v62(v98, v19);
    unint64_t v109 = *(void **)(v121 - 8);
    char v66 = (void (*)(uint64_t, uint64_t))v109[4];
    v66(v106, v20);
    *(void *)(v0 + 160) = v116;
    *(void *)(v0 + 168) = v10;
    uint64_t v97 = v10;
    *(void *)(v0 + 176) = v112;
    *(void *)(v0 + 184) = v9;
    *(void *)(v0 + 192) = v117;
    *(void *)(v0 + 200) = v121;
    uint64_t v21 = (int *)swift_getTupleTypeMetadata();
    uint64_t v60 = v87 + v21[12];
    uint64_t v55 = v87 + v21[16];
    uint64_t v52 = v87 + v21[20];
    uint64_t v58 = v87 + v21[24];
    uint64_t v63 = v87 + v21[28];
    long long v64 = v21;
    uint64_t v22 = v78 + *(int *)(v102 + 48);
    uint64_t v23 = v78 + *(int *)(v113 + 48);
    uint64_t v24 = v78 + *(int *)(v113 + 64);
    uint64_t v72 = v24;
    uint64_t v73 = v23;
    uint64_t v94 = (void (*)(void))v111[2];
    v94();
    unsigned int v86 = (void (*)(uint64_t, uint64_t, uint64_t))v115[2];
    v86(v23, v100, v97);
    uint64_t v89 = (void (*)(uint64_t, uint64_t, uint64_t))v110[2];
    v89(v24, v88, v112);
    uint64_t v71 = v22;
    uint64_t v69 = v22 + *(int *)(v8 + 64);
    uint64_t v70 = v22 + *(int *)(v8 + 48);
    uint64_t v92 = (void (*)(void))v108[2];
    v92();
    uint64_t v91 = (void (*)(uint64_t, uint64_t, uint64_t))v96[2];
    v91(v70, v98, v117);
    uint64_t v90 = (void (*)(uint64_t, uint64_t, uint64_t))v109[2];
    v90(v69, v106, v121);
    ((void (*)(uint64_t, uint64_t, uint64_t))v82)(v87, v78, v116);
    uint64_t v79 = v83 + *(int *)(v102 + 48);
    uint64_t v25 = v83 + *(int *)(v113 + 48);
    uint64_t v26 = v83 + *(int *)(v113 + 64);
    uint64_t v68 = v26;
    v94();
    v86(v25, v100, v97);
    v89(v26, v88, v112);
    uint64_t v27 = v8;
    uint64_t v28 = v79 + *(int *)(v8 + 48);
    uint64_t v67 = v28;
    uint64_t v29 = v79 + *(int *)(v8 + 64);
    uint64_t v65 = v79 + *(int *)(v85 + 64);
    v92();
    v91(v28, v98, v117);
    v90(v29, v106, v121);
    v81(v60, v25, v97);
    uint64_t v30 = v76 + *(int *)(v102 + 48);
    uint64_t v31 = v76 + *(int *)(v113 + 48);
    uint64_t v61 = v31;
    uint64_t v32 = v76 + *(int *)(v113 + 64);
    v94();
    v86(v31, v100, v97);
    v89(v32, v88, v112);
    uint64_t v33 = v30 + *(int *)(v27 + 48);
    uint64_t v59 = v33;
    uint64_t v57 = v30 + *(int *)(v27 + 64);
    v92();
    v91(v33, v98, v117);
    v90(v57, v106, v121);
    ((void (*)(uint64_t, uint64_t, uint64_t))v80)(v55, v32, v112);
    uint64_t v34 = v75 + *(int *)(v102 + 48);
    uint64_t v35 = v75 + *(int *)(v113 + 48);
    uint64_t v36 = v75 + *(int *)(v113 + 64);
    uint64_t v54 = v36;
    uint64_t v56 = v35;
    v94();
    v86(v35, v100, v97);
    v89(v36, v88, v112);
    uint64_t v37 = v34 + *(int *)(v27 + 48);
    uint64_t v38 = v34 + *(int *)(v27 + 64);
    ((void (*)(uint64_t, uint64_t, uint64_t))v92)(v34, v104, v119);
    v91(v37, v98, v117);
    v90(v38, v106, v121);
    v74(v52, v34, v119);
    uint64_t v39 = v77 + *(int *)(v102 + 48);
    uint64_t v40 = v77 + *(int *)(v113 + 48);
    uint64_t v53 = v40;
    uint64_t v41 = v77 + *(int *)(v113 + 64);
    uint64_t v51 = v41;
    v94();
    v86(v40, v100, v97);
    v89(v41, v88, v112);
    uint64_t v50 = v39;
    uint64_t v42 = v39 + *(int *)(v85 + 48);
    uint64_t v95 = v39 + *(int *)(v85 + 64);
    v92();
    v91(v42, v98, v117);
    v90(v95, v106, v121);
    ((void (*)(uint64_t, uint64_t, uint64_t))v62)(v58, v42, v117);
    uint64_t v43 = v84 + *(int *)(v102 + 48);
    uint64_t v44 = v84 + *(int *)(v113 + 48);
    uint64_t v93 = v44;
    uint64_t v45 = v84 + *(int *)(v113 + 64);
    ((void (*)(void))v82)();
    v81(v44, v100, v97);
    ((void (*)(uint64_t, uint64_t, uint64_t))v80)(v45, v88, v112);
    uint64_t v46 = v43 + *(int *)(v85 + 48);
    uint64_t v47 = v43 + *(int *)(v85 + 64);
    v74(v43, v104, v119);
    ((void (*)(uint64_t, uint64_t, uint64_t))v62)(v46, v98, v117);
    ((void (*)(uint64_t, uint64_t, uint64_t))v66)(v47, v106, v121);
    ((void (*)(uint64_t, uint64_t, uint64_t))v66)(v63, v47, v121);
    (*(void (**)(uint64_t, void, uint64_t))(*((void *)v64 - 1) + 56))(v87, 0, 1);
    uint64_t v103 = (void (*)(uint64_t, uint64_t))v96[1];
    v103(v46, v117);
    uint64_t v105 = (void (*)(uint64_t, uint64_t))v108[1];
    v105(v43, v119);
    uint64_t v101 = (void (*)(uint64_t, uint64_t))v110[1];
    v101(v45, v112);
    uint64_t v107 = (void (*)(uint64_t, uint64_t))v115[1];
    v107(v93, v97);
    uint64_t v99 = (void (*)(uint64_t, uint64_t))v111[1];
    v99(v84, v116);
    uint64_t v114 = (void (*)(uint64_t, uint64_t))v109[1];
    v114(v95, v121);
    v105(v50, v119);
    v101(v51, v112);
    v107(v53, v97);
    v99(v77, v116);
    v114(v38, v121);
    v103(v37, v117);
    v101(v54, v112);
    v107(v56, v97);
    v99(v75, v116);
    v114(v57, v121);
    v103(v59, v117);
    v105(v30, v119);
    v107(v61, v97);
    v99(v76, v116);
    v114(v65, v121);
    v103(v67, v117);
    v105(v79, v119);
    v101(v68, v112);
    v99(v83, v116);
    v114(v69, v121);
    v103(v70, v117);
    v105(v71, v119);
    v101(v72, v112);
    v107(v73, v97);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_1A556B458()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A556B51C(uint64_t a1, void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A54E83BC;
  return AsyncCombineLatest6Sequence.Iterator.next()(a1, a2);
}

uint64_t sub_1A556B5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  v6[5] = swift_task_alloc();
  uint64_t v13 = (void *)swift_task_alloc();
  v6[6] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1A556B718;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6);
}

uint64_t sub_1A556B718()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t AsyncCombineLatest6Sequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v39 = *(void *)(a1 + 24);
  uint64_t v40 = v4;
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v37 = *(void *)(a1 + 64);
  uint64_t v38 = v5;
  uint64_t v36 = v6;
  uint64_t v30 = *(void *)(a1 + 80);
  uint64_t v42 = v4;
  uint64_t v43 = v39;
  uint64_t v44 = v5;
  uint64_t v45 = v37;
  uint64_t v46 = v6;
  uint64_t v47 = v30;
  uint64_t v7 = type metadata accessor for AsyncCombineLatest3Sequence();
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v34 = *(void *)(a1 + 48);
  uint64_t v35 = v8;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 96);
  uint64_t v32 = *(void *)(a1 + 88);
  uint64_t v33 = v9;
  uint64_t v31 = v10;
  uint64_t v29 = *(void *)(a1 + 104);
  uint64_t v46 = v10;
  uint64_t v47 = v29;
  uint64_t v11 = type metadata accessor for AsyncCombineLatest3Sequence();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v42 = v7;
  uint64_t v43 = v11;
  uint64_t v44 = WitnessTable;
  uint64_t v45 = v27;
  uint64_t v26 = type metadata accessor for AsyncCombineLatest2Sequence();
  uint64_t v12 = *(void *)(v26 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v26);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = *(void *)(v11 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v25 - v18;
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v25 - v21;
  combineLatest<A, B, C>(_:_:_:)(v2, v2 + *(int *)(a1 + 116), v2 + *(int *)(a1 + 120), v40, v39, v38, v37, v36, (uint64_t)&v25 - v21);
  combineLatest<A, B, C>(_:_:_:)(v2 + *(int *)(a1 + 124), v2 + *(int *)(a1 + 128), v2 + *(int *)(a1 + 132), v35, v34, v33, v32, v31, (uint64_t)v19);
  combineLatest<A, B>(_:_:)((uint64_t)v22, (uint64_t)v19, v7, v11, (uint64_t)v15);
  uint64_t v23 = v26;
  AsyncCombineLatest2Sequence.makeAsyncIterator()(v26, &v42);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v23);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v7);
  *uint64_t v41 = v42;
  return result;
}

uint64_t sub_1A556BB84()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A556BC28()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A556BC44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  AsyncCombineLatest6Sequence.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t sub_1A556BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 120);
}

uint64_t sub_1A556BCAC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              swift_initStructMetadata();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1A556BE7C(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v54 = v5 + v9;
  uint64_t v10 = (v5 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v7 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v53 = v11 + v13;
  uint64_t v14 = (v11 + v13 + v10) & ~v13;
  uint64_t v15 = *(void *)(v12 + 64);
  uint64_t v55 = *(void *)(a3[5] - 8);
  uint64_t v16 = *(_DWORD *)(v55 + 80);
  uint64_t v52 = v15 + v16;
  uint64_t v17 = (v15 + v16 + v14) & ~v16;
  uint64_t v18 = *(void *)(v55 + 64);
  uint64_t v19 = *(void *)(a3[6] - 8);
  uint64_t v20 = *(_DWORD *)(v19 + 80);
  uint64_t v51 = v18 + v20;
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t v22 = a3[7];
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80);
  uint64_t v25 = v21 + v24;
  unint64_t v26 = ((v21 + v24 + ((v18 + v20 + v17) & ~v20)) & ~v24) + *(void *)(v23 + 64);
  uint64_t v27 = (*(unsigned char *)(v8 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v12 + 80) | *(unsigned char *)(v55 + 80) | *(unsigned char *)(v19 + 80) | *(unsigned char *)(v23 + 80));
  if (v27 <= 7
    && v26 <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v55 + 80) | *(_DWORD *)(v19 + 80) | *(_DWORD *)(v23 + 80)) & 0x100000) == 0)
  {
    uint64_t v50 = a3[6];
    uint64_t v32 = *(void *)(v7 - 8);
    uint64_t v33 = ~v9;
    uint64_t v48 = a3[5];
    uint64_t v34 = ~v13;
    uint64_t v45 = a3[4];
    uint64_t v46 = ~v16;
    uint64_t v47 = ~v20;
    uint64_t v49 = ~v24;
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    uint64_t v36 = v6;
    uint64_t v31 = a1;
    unint64_t v37 = ((unint64_t)a1 + v54) & v33;
    unint64_t v38 = ((unint64_t)a2 + v54) & v33;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v37, v38, v36);
    unint64_t v39 = (v38 + v53) & v34;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))((v37 + v53) & v34, v39, v45);
    unint64_t v40 = (((v37 + v53) & v34) + v52) & v46;
    unint64_t v41 = (v39 + v52) & v46;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 16))(v40, v41, v48);
    unint64_t v42 = (v40 + v51) & v47;
    uint64_t v43 = (v41 + v51) & v47;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16))(v42, v43, v50);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 16))((v42 + v25) & v49, (v43 + v25) & v49, v22);
  }
  else
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    uint64_t v31 = (uint64_t *)(v30 + ((v27 + 16) & ~v27));
    swift_retain();
  }
  return v31;
}

uint64_t sub_1A556C26C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(a2[4] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v14 = *(void *)(a2[5] - 8);
  uint64_t v15 = v14 + 8;
  unint64_t v16 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t))(v14 + 8))(v16);
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v18 = *(void *)(a2[6] - 8);
  uint64_t v19 = v18 + 8;
  unint64_t v20 = (v16 + v17 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  (*(void (**)(unint64_t))(v18 + 8))(v20);
  uint64_t v21 = *(void *)(a2[7] - 8);
  uint64_t v22 = *(uint64_t (**)(unint64_t))(v21 + 8);
  unint64_t v23 = (v20 + *(void *)(v19 + 56) + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);

  return v22(v23);
}

uint64_t sub_1A556C420(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 48);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 16;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 48);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 16;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 16))((*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 48) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1A556C610(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 40);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 24;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 40);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 24;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 24))((*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 40) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1A556C800(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 32;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 32;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 32))((*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 32) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1A556C9F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 24);
  uint64_t v21 = *(void *)(a3[5] - 8);
  uint64_t v22 = v21 + 40;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = (v24 + v18) & ~v23;
  uint64_t v26 = (v24 + v19) & ~v23;
  (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v25, v26);
  uint64_t v27 = *(void *)(v22 + 24);
  uint64_t v28 = *(void *)(a3[6] - 8);
  uint64_t v29 = v28 + 40;
  uint64_t v30 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = v27 + v30;
  uint64_t v32 = (v31 + v25) & ~v30;
  uint64_t v33 = (v31 + v26) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v28 + 40))(v32, v33);
  uint64_t v34 = *(void *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v34 + 40))((*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80), (*(void *)(v29 + 24) + *(unsigned __int8 *)(v34 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  return a1;
}

uint64_t sub_1A556CBE0(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v55 = a3[2];
  uint64_t v54 = *(void *)(v55 - 8);
  unsigned int v5 = *(_DWORD *)(v54 + 84);
  uint64_t v6 = *(void *)(a3[3] - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = a3[5];
  uint64_t v52 = v8;
  uint64_t v53 = a3[4];
  uint64_t v9 = *(void *)(v53 - 8);
  if (v7 <= v5) {
    unsigned int v10 = *(_DWORD *)(v54 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = *(unsigned int *)(v9 + 84);
  if (v11 <= v10) {
    unsigned int v12 = v10;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(v8 - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v12) {
    unsigned int v15 = v12;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v50 = a3[7];
  uint64_t v51 = a3[6];
  uint64_t v16 = *(void *)(v51 - 8);
  unsigned int v17 = *(_DWORD *)(v16 + 84);
  uint64_t v18 = *(void *)(v50 - 8);
  if (v17 <= v15) {
    unsigned int v19 = v15;
  }
  else {
    unsigned int v19 = *(_DWORD *)(v16 + 84);
  }
  uint64_t v20 = *(unsigned int *)(v18 + 84);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v56 = *(void *)(*(void *)(a3[3] - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = *(void *)(v9 + 64);
  uint64_t v24 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v25 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v26 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v27 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v28 = *(void *)(v18 + 64);
  if (v20 > v19) {
    unsigned int v19 = *(_DWORD *)(v18 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v29 = *(void *)(*(void *)(v55 - 8) + 64) + v21;
  uint64_t v30 = v25 + v26;
  uint64_t v31 = *(void *)(*(void *)(v51 - 8) + 64) + v27;
  int v32 = a2 - v19;
  if (a2 <= v19) {
    goto LABEL_35;
  }
  uint64_t v33 = (v31 + ((v30 + ((v23 + v24 + ((v56 + v22 + (v29 & ~v21)) & ~v22)) & ~v24)) & ~v26)) & ~v27;
  uint64_t v34 = v33 + v28;
  char v35 = 8 * (v33 + v28);
  if (v34 > 3) {
    goto LABEL_18;
  }
  unsigned int v37 = ((v32 + ~(-1 << v35)) >> v35) + 1;
  if (HIWORD(v37))
  {
    int v36 = *(_DWORD *)((char *)a1 + v34);
    if (!v36) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 > 0xFF)
  {
    int v36 = *(unsigned __int16 *)((char *)a1 + v34);
    if (!*(unsigned __int16 *)((char *)a1 + v34)) {
      goto LABEL_35;
    }
    goto LABEL_25;
  }
  if (v37 >= 2)
  {
LABEL_18:
    int v36 = *((unsigned __int8 *)a1 + v34);
    if (!*((unsigned char *)a1 + v34)) {
      goto LABEL_35;
    }
LABEL_25:
    int v38 = (v36 - 1) << v35;
    if (v34 > 3) {
      int v38 = 0;
    }
    if (v34)
    {
      if (v34 <= 3) {
        int v39 = v34;
      }
      else {
        int v39 = 4;
      }
      switch(v39)
      {
        case 2:
          int v40 = *a1;
          break;
        case 3:
          int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v40 = *(_DWORD *)a1;
          break;
        default:
          int v40 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v40 = 0;
    }
    return v19 + (v40 | v38) + 1;
  }
LABEL_35:
  if (!v19) {
    return 0;
  }
  if (v5 == v19)
  {
    uint64_t v41 = v55;
    unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v43 = a1;
    uint64_t v44 = *(unsigned int *)(v54 + 84);
    return v42(v43, v44, v41);
  }
  unint64_t v46 = ((unint64_t)a1 + v29) & ~v21;
  if (v7 == v19)
  {
    uint64_t v47 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v47(((unint64_t)a1 + v29) & ~v21);
  }
  else
  {
    if (v11 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48);
      uint64_t v43 = (unsigned __int16 *)((v46 + v56 + v22) & ~v22);
      uint64_t v44 = v11;
      uint64_t v41 = v53;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)((((v46 + v56 + v22) & ~v22) + v23 + v24) & ~v24);
    if (v14 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v44 = *(unsigned int *)(v13 + 84);
      uint64_t v41 = v52;
      return v42(v43, v44, v41);
    }
    uint64_t v43 = (unsigned __int16 *)(((unint64_t)v43 + v30) & ~v26);
    if (v17 == v19)
    {
      unint64_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v44 = *(unsigned int *)(v16 + 84);
      uint64_t v41 = v51;
      return v42(v43, v44, v41);
    }
    unint64_t v48 = ((unint64_t)v43 + v31) & ~v27;
    uint64_t v49 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48);
    return v49(v48, v20, v50);
  }
}

void sub_1A556D174(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v6 = *(void *)(a4[2] - 8);
  uint64_t v52 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4[3] - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= v7) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v51 = a4[4];
  uint64_t v12 = *(void *)(v51 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v14 = *(void *)(a4[5] - 8);
  if (v13 <= v11) {
    unsigned int v15 = v11;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v16 = *(void *)(a4[5] - 8);
  unsigned int v50 = *(_DWORD *)(v14 + 84);
  if (v50 <= v15) {
    unsigned int v17 = v15;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v18 = *(void *)(a4[6] - 8);
  uint64_t v19 = v18;
  unsigned int v20 = *(_DWORD *)(v18 + 84);
  unsigned int v49 = v20;
  if (v20 <= v17) {
    unsigned int v20 = v17;
  }
  uint64_t v21 = *(void *)(a4[7] - 8);
  uint64_t v22 = *(void *)(v6 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = *(void *)(v8 + 64);
  uint64_t v25 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v26 = *(void *)(*(void *)(v51 - 8) + 64);
  uint64_t v27 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = *(void *)(v14 + 64);
  uint64_t v29 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v30 = *(void *)(v18 + 64);
  uint64_t v31 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v32 = v22 + v23;
  uint64_t v33 = v28 + v29;
  uint64_t v34 = v30 + v31;
  size_t v35 = ((v34 + ((v28 + v29 + ((v26 + v27 + ((v24 + v25 + ((v22 + v23) & ~v23)) & ~v25)) & ~v27)) & ~v29)) & ~v31)
      + *(void *)(v21 + 64);
  if (*(_DWORD *)(v21 + 84) <= v20) {
    unsigned int v36 = v20;
  }
  else {
    unsigned int v36 = *(_DWORD *)(v21 + 84);
  }
  if (a3 <= v36)
  {
    int v37 = 0;
  }
  else if (v35 <= 3)
  {
    unsigned int v43 = ((a3 - v36 + ~(-1 << (8 * v35))) >> (8 * v35)) + 1;
    if (HIWORD(v43))
    {
      int v37 = 4;
    }
    else if (v43 >= 0x100)
    {
      int v37 = 2;
    }
    else
    {
      int v37 = v43 > 1;
    }
  }
  else
  {
    int v37 = 1;
  }
  if (v36 < a2)
  {
    unsigned int v38 = ~v36 + a2;
    if (v35 < 4)
    {
      int v39 = (v38 >> (8 * v35)) + 1;
      if (v35)
      {
        int v44 = v38 & ~(-1 << (8 * v35));
        bzero(a1, v35);
        if (v35 == 3)
        {
          *(_WORD *)a1 = v44;
          a1[2] = BYTE2(v44);
        }
        else if (v35 == 2)
        {
          *(_WORD *)a1 = v44;
        }
        else
        {
          *a1 = v44;
        }
      }
    }
    else
    {
      bzero(a1, v35);
      *(_DWORD *)a1 = v38;
      int v39 = 1;
    }
    switch(v37)
    {
      case 1:
        a1[v35] = v39;
        return;
      case 2:
        *(_WORD *)&a1[v35] = v39;
        return;
      case 3:
        goto LABEL_65;
      case 4:
        *(_DWORD *)&a1[v35] = v39;
        return;
      default:
        return;
    }
  }
  uint64_t v40 = ~v23;
  uint64_t v41 = ~v29;
  uint64_t v42 = ~v31;
  switch(v37)
  {
    case 1:
      a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_65:
      __break(1u);
      JUMPOUT(0x1A556D734);
    case 4:
      *(_DWORD *)&a1[v35] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v7 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v52 + 56);
        unint64_t v46 = a1;
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&a1[v32] & v40);
      if (v10 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v9 + 56);
        goto LABEL_61;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v24 + v25] & ~v25);
      if (v13 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v12 + 56);
        goto LABEL_37;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v26 + v27] & ~v27);
      if (v50 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v16 + 56);
LABEL_37:
LABEL_61:
        v45(v46);
        return;
      }
      unint64_t v46 = (unsigned char *)((unint64_t)&v46[v33] & v41);
      if (v49 == v36)
      {
        uint64_t v45 = *(void (**)(unsigned char *))(v19 + 56);
        goto LABEL_61;
      }
      unint64_t v47 = (unint64_t)&v46[v34] & v42;
      unint64_t v48 = *(void (**)(unint64_t))(v21 + 56);
      v48(v47);
      return;
  }
}

uint64_t type metadata accessor for AsyncCombineLatest6Sequence()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1A556D774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 104);
}

uint64_t type metadata accessor for AsyncCombineLatest6Sequence.Iterator()
{
  return swift_getGenericMetadata();
}

BOOL static SFNearbySharingInteractionViewState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 7) {
    return v3 == 7;
  }
  if (v2 == 6) {
    return v3 == 6;
  }
  if ((v3 & 0xFE) == 6) {
    return 0;
  }
  return v2 == v3;
}

uint64_t sub_1A556D7EC()
{
  uint64_t v1 = 0x7661776B636F6873;
  if (*v0 != 1) {
    uint64_t v1 = 0x50746E65746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701602409;
  }
}

uint64_t sub_1A556D850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A556EDAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A556D878(uint64_t a1)
{
  unint64_t v2 = sub_1A556DE24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A556D8B4(uint64_t a1)
{
  unint64_t v2 = sub_1A556DE24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A556D8F0(uint64_t a1)
{
  unint64_t v2 = sub_1A556DE78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A556D92C(uint64_t a1)
{
  unint64_t v2 = sub_1A556DE78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A556D968(uint64_t a1)
{
  unint64_t v2 = sub_1A556DF74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A556D9A4(uint64_t a1)
{
  unint64_t v2 = sub_1A556DF74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A556D9E0(uint64_t a1)
{
  unint64_t v2 = sub_1A556DECC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A556DA1C(uint64_t a1)
{
  unint64_t v2 = sub_1A556DECC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFNearbySharingInteractionViewState.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671968);
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  unsigned int v20 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671970);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671978);
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671980);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unsigned int v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v14 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A556DE24();
  sub_1A56D61D8();
  if (v14 == 7)
  {
    char v28 = 2;
    sub_1A556DE78();
    unsigned int v15 = v20;
    sub_1A56D5D98();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (v14 == 6)
  {
    char v25 = 0;
    sub_1A556DF74();
    sub_1A56D5D98();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  char v27 = 1;
  sub_1A556DECC();
  sub_1A56D5D98();
  char v26 = v14;
  sub_1A556DF20();
  uint64_t v17 = v24;
  sub_1A56D5E38();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t sub_1A556DE24()
{
  unint64_t result = qword_1E9671988;
  if (!qword_1E9671988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671988);
  }
  return result;
}

unint64_t sub_1A556DE78()
{
  unint64_t result = qword_1E9671990;
  if (!qword_1E9671990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671990);
  }
  return result;
}

unint64_t sub_1A556DECC()
{
  unint64_t result = qword_1E9671998;
  if (!qword_1E9671998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671998);
  }
  return result;
}

unint64_t sub_1A556DF20()
{
  unint64_t result = qword_1E96719A0;
  if (!qword_1E96719A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719A0);
  }
  return result;
}

unint64_t sub_1A556DF74()
{
  unint64_t result = qword_1E96719A8;
  if (!qword_1E96719A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719A8);
  }
  return result;
}

uint64_t SFNearbySharingInteractionViewState.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96719B0);
  uint64_t v30 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v34 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96719B8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  uint64_t v32 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96719C0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96719C8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  size_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1A556DE24();
  uint64_t v16 = v36;
  sub_1A56D61A8();
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v17 = v34;
  uint64_t v36 = v12;
  uint64_t v18 = sub_1A56D5D78();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v20 = sub_1A56D5A78();
    swift_allocError();
    uint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *uint64_t v22 = &type metadata for SFNearbySharingInteractionViewState;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
LABEL_9:
    uint64_t v23 = (uint64_t)v35;
    return __swift_destroy_boxed_opaque_existential_0Tm(v23);
  }
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      char v39 = 1;
      sub_1A556DECC();
      uint64_t v19 = v14;
      sub_1A56D5C88();
      sub_1A556E578();
      uint64_t v25 = v31;
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v25);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v11);
      char v26 = v38;
    }
    else
    {
      char v40 = 2;
      sub_1A556DE78();
      sub_1A56D5C88();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
      char v26 = 7;
    }
  }
  else
  {
    char v37 = 0;
    sub_1A556DF74();
    sub_1A56D5C88();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
    char v26 = 6;
  }
  uint64_t v23 = (uint64_t)v35;
  *uint64_t v33 = v26;
  return __swift_destroy_boxed_opaque_existential_0Tm(v23);
}

unint64_t sub_1A556E578()
{
  unint64_t result = qword_1E96719D0;
  if (!qword_1E96719D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719D0);
  }
  return result;
}

uint64_t sub_1A556E5CC@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return SFNearbySharingInteractionViewState.init(from:)(a1, a2);
}

uint64_t sub_1A556E5E4(void *a1)
{
  return SFNearbySharingInteractionViewState.encode(to:)(a1);
}

BOOL sub_1A556E5FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 7) {
    return v3 == 7;
  }
  if (v2 == 6) {
    return v3 == 6;
  }
  if ((v3 & 0xFE) == 6) {
    return 0;
  }
  return v2 == v3;
}

uint64_t getEnumTagSinglePayload for SFNearbySharingInteractionViewState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1A556E700);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 6) {
    unsigned int v8 = v7 - 5;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SFNearbySharingInteractionViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1A556E7E8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_1A556E810(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 6) {
    return v1 - 5;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1A556E824(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFNearbySharingInteractionViewState()
{
  return &type metadata for SFNearbySharingInteractionViewState;
}

unsigned char *storeEnumTagSinglePayload for SFNearbySharingInteractionViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A556E910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFNearbySharingInteractionViewState.CodingKeys()
{
  return &type metadata for SFNearbySharingInteractionViewState.CodingKeys;
}

ValueMetadata *type metadata accessor for SFNearbySharingInteractionViewState.IdleCodingKeys()
{
  return &type metadata for SFNearbySharingInteractionViewState.IdleCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SFNearbySharingInteractionViewState.ShockwaveCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A556E9F4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFNearbySharingInteractionViewState.ShockwaveCodingKeys()
{
  return &type metadata for SFNearbySharingInteractionViewState.ShockwaveCodingKeys;
}

ValueMetadata *type metadata accessor for SFNearbySharingInteractionViewState.ContentPreviewCodingKeys()
{
  return &type metadata for SFNearbySharingInteractionViewState.ContentPreviewCodingKeys;
}

unint64_t sub_1A556EA40()
{
  unint64_t result = qword_1E96719D8;
  if (!qword_1E96719D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719D8);
  }
  return result;
}

unint64_t sub_1A556EA98()
{
  unint64_t result = qword_1E96719E0;
  if (!qword_1E96719E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719E0);
  }
  return result;
}

unint64_t sub_1A556EAF0()
{
  unint64_t result = qword_1E96719E8;
  if (!qword_1E96719E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719E8);
  }
  return result;
}

unint64_t sub_1A556EB48()
{
  unint64_t result = qword_1E96719F0;
  if (!qword_1E96719F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719F0);
  }
  return result;
}

unint64_t sub_1A556EBA0()
{
  unint64_t result = qword_1E96719F8;
  if (!qword_1E96719F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96719F8);
  }
  return result;
}

unint64_t sub_1A556EBF8()
{
  unint64_t result = qword_1E9671A00;
  if (!qword_1E9671A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A00);
  }
  return result;
}

unint64_t sub_1A556EC50()
{
  unint64_t result = qword_1E9671A08;
  if (!qword_1E9671A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A08);
  }
  return result;
}

unint64_t sub_1A556ECA8()
{
  unint64_t result = qword_1E9671A10;
  if (!qword_1E9671A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A10);
  }
  return result;
}

unint64_t sub_1A556ED00()
{
  unint64_t result = qword_1E9671A18;
  if (!qword_1E9671A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A18);
  }
  return result;
}

unint64_t sub_1A556ED58()
{
  unint64_t result = qword_1E9671A20;
  if (!qword_1E9671A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A20);
  }
  return result;
}

uint64_t sub_1A556EDAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7661776B636F6873 && a2 == 0xE900000000000065 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x50746E65746E6F63 && a2 == 0xEE00776569766572)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t SFAirDropNoticeNotificationsOptions.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A56D5C68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t SFAirDropNoticeNotificationsOptions.rawValue.getter()
{
  return 0x726566736E617274;
}

uint64_t sub_1A556EF98()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A556EFF0()
{
  return sub_1A56D5188();
}

uint64_t sub_1A556F00C()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A556F060@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1A56D5C68();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A556F0B4(void *a1@<X8>)
{
  *a1 = 0x726566736E617274;
  a1[1] = 0xEA00000000004449;
}

unint64_t static SFAirDropNotice.hudSceneActivityType.getter()
{
  return 0xD000000000000012;
}

unint64_t static SFAirDropNotice.interventionSceneActivityType.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static SFAirDropNoticeLaunchOptions.key.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t SFAirDropNoticeLaunchOptions.transferID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Sharing::SFAirDropNoticeLaunchOptions __swiftcall SFAirDropNoticeLaunchOptions.init(transferID:)(Sharing::SFAirDropNoticeLaunchOptions transferID)
{
  *uint64_t v1 = transferID;
  return transferID;
}

uint64_t sub_1A556F160()
{
  return 0x726566736E617274;
}

uint64_t sub_1A556F17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726566736E617274 && a2 == 0xEA00000000004449)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A556F220(uint64_t a1)
{
  unint64_t v2 = sub_1A556F3D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A556F25C(uint64_t a1)
{
  unint64_t v2 = sub_1A556F3D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropNoticeLaunchOptions.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671A28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A556F3D0();
  sub_1A56D61D8();
  sub_1A56D5DE8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A556F3D0()
{
  unint64_t result = qword_1E9671A30;
  if (!qword_1E9671A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A30);
  }
  return result;
}

uint64_t SFAirDropNoticeLaunchOptions.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671A38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unsigned int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A556F3D0();
  sub_1A56D61A8();
  if (!v2)
  {
    uint64_t v9 = sub_1A56D5CF8();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1A556F594@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SFAirDropNoticeLaunchOptions.init(from:)(a1, a2);
}

uint64_t sub_1A556F5AC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671A28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A556F3D0();
  sub_1A56D61D8();
  sub_1A56D5DE8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

Sharing::SFAirDropLaunchSettings_optional __swiftcall SFAirDropLaunchSettings.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x302010004uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 5) {
    LOBYTE(v2) = 4;
  }
  *uint64_t v1 = v2;
  return (Sharing::SFAirDropLaunchSettings_optional)rawValue;
}

uint64_t SFAirDropLaunchSettings.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_1A556F718()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A556F760()
{
  return sub_1A56D60C8();
}

uint64_t sub_1A556F790()
{
  return sub_1A56D60E8();
}

Sharing::SFAirDropLaunchSettings_optional sub_1A556F7D4(Swift::Int *a1)
{
  return SFAirDropLaunchSettings.init(rawValue:)(*a1);
}

void sub_1A556F7DC(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

unint64_t static SFAirDropLaunchSettings.interventionIdentifier.getter()
{
  return 0xD000000000000021;
}

uint64_t static SFAirDropNoticeFailure.== infix(_:_:)()
{
  return 1;
}

uint64_t SFAirDropNoticeFailure.hash(into:)()
{
  return sub_1A56D60C8();
}

uint64_t SFAirDropNoticeFailure.hashValue.getter()
{
  return sub_1A56D60E8();
}

unint64_t sub_1A556F880()
{
  unint64_t result = qword_1E9671A40;
  if (!qword_1E9671A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A40);
  }
  return result;
}

unint64_t sub_1A556F8D8()
{
  unint64_t result = qword_1E9671A48;
  if (!qword_1E9671A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A48);
  }
  return result;
}

unint64_t sub_1A556F930()
{
  unint64_t result = qword_1E9671A50;
  if (!qword_1E9671A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A50);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropNoticeNotificationsOptions()
{
  return &type metadata for SFAirDropNoticeNotificationsOptions;
}

ValueMetadata *type metadata accessor for SFAirDropNotice()
{
  return &type metadata for SFAirDropNotice;
}

ValueMetadata *type metadata accessor for SFAirDropNoticeLaunchOptions()
{
  return &type metadata for SFAirDropNoticeLaunchOptions;
}

unsigned char *storeEnumTagSinglePayload for SFAirDropLaunchSettings(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A556FA84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropLaunchSettings()
{
  return &type metadata for SFAirDropLaunchSettings;
}

ValueMetadata *type metadata accessor for SFAirDropNoticeFailure()
{
  return &type metadata for SFAirDropNoticeFailure;
}

unsigned char *_s7Sharing35SFAirDropNoticeNotificationsOptionsOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A556FB68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropNoticeLaunchOptions.CodingKeys()
{
  return &type metadata for SFAirDropNoticeLaunchOptions.CodingKeys;
}

unint64_t sub_1A556FBA4()
{
  unint64_t result = qword_1E9671A58;
  if (!qword_1E9671A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A58);
  }
  return result;
}

unint64_t sub_1A556FBFC()
{
  unint64_t result = qword_1E9671A60;
  if (!qword_1E9671A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A60);
  }
  return result;
}

unint64_t sub_1A556FC54()
{
  unint64_t result = qword_1E9671A68;
  if (!qword_1E9671A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671A68);
  }
  return result;
}

uint64_t SFXPCResilientAsyncSequence.init(name:log:body:shouldRetry:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a1;
  a8[1] = a2;
  int v14 = (int *)type metadata accessor for SFXPCResilientAsyncSequence();
  uint64_t v15 = (char *)a8 + v14[11];
  uint64_t v16 = sub_1A56D4D98();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a3, v16);
  uint64_t v18 = (void *)((char *)a8 + v14[12]);
  *uint64_t v18 = a4;
  v18[1] = a5;
  uint64_t v19 = (void *)((char *)a8 + v14[13]);
  *uint64_t v19 = a6;
  v19[1] = a7;
  return result;
}

uint64_t type metadata accessor for SFXPCResilientAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A556FD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  sub_1A556FE08(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t sub_1A556FE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_defaultActor_initialize();
  uint64_t v15 = (void *)(v7 + qword_1E96A7EF8);
  *uint64_t v15 = 0;
  v15[1] = 0;
  *(void *)(v7 + 112) = a1;
  *(void *)(v7 + 120) = a2;
  uint64_t v16 = v7 + qword_1E96A7ED0;
  uint64_t v17 = sub_1A56D4D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a3, v17);
  uint64_t v18 = (void *)(v7 + qword_1E96A7F08);
  *uint64_t v18 = a4;
  v18[1] = a5;
  uint64_t v19 = (void *)(v7 + qword_1E96A7F00);
  *uint64_t v19 = a6;
  v19[1] = a7;
  return v7;
}

uint64_t SFXPCResilientAsyncSequence.AsyncIterator.next()(uint64_t a1)
{
  v2[33] = a1;
  v2[34] = v1;
  v2[35] = *v1;
  uint64_t v3 = sub_1A56D5B08();
  v2[36] = v3;
  v2[37] = *(void *)(v3 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  uint64_t v4 = sub_1A56D5B28();
  v2[40] = v4;
  v2[41] = *(void *)(v4 - 8);
  v2[42] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5570034, v1, 0);
}

uint64_t sub_1A5570034()
{
  uint64_t v1 = v0[34];
  unint64_t v2 = (void *)v0[35];
  v0[43] = *(void *)(v1 + 112);
  uint64_t v3 = qword_1E96A7EF8;
  v0[44] = *(void *)(v1 + 120);
  v0[45] = v3;
  uint64_t v4 = (void *)(v1 + v3);
  uint64_t v5 = qword_1E96A7F08;
  uint64_t v6 = qword_1E96A7ED0;
  v0[46] = qword_1E96A7F08;
  v0[47] = v6;
  swift_bridgeObjectRetain();
  if (*v4)
  {
    uint64_t v7 = v4[1];
    v0[17] = *v4;
    v0[18] = v7;
    swift_retain();
    unsigned int v8 = (void *)swift_task_alloc();
    v0[48] = v8;
    v0[49] = v2[10];
    v0[50] = v2[11];
    v0[51] = v2[12];
    type metadata accessor for SFXPCAsyncSequence.AsyncIterator();
    *unsigned int v8 = v0;
    v8[1] = sub_1A5570208;
    uint64_t v9 = v0[33];
    return SFXPCAsyncSequence.AsyncIterator.next()(v9);
  }
  else
  {
    uint64_t v12 = (uint64_t (*)(void *))(*(void *)(v1 + v5) + **(int **)(v1 + v5));
    uint64_t v11 = (void *)swift_task_alloc();
    v0[53] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1A5570994;
    return v12(v0 + 5);
  }
}

uint64_t sub_1A5570208()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  if (v0) {
    uint64_t v4 = sub_1A5570E04;
  }
  else {
    uint64_t v4 = sub_1A5570334;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A5570334()
{
  uint64_t v11 = v0;
  if ((*(unsigned int (**)(void, uint64_t))(*(void *)(v0[49] - 8) + 48))(v0[33], 1) == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1A56D4D78();
    os_log_type_t v2 = sub_1A56D57B8();
    BOOL v3 = os_log_type_enabled(v1, v2);
    unint64_t v4 = v0[44];
    if (v3)
    {
      uint64_t v5 = v0[43];
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v10 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_bridgeObjectRetain();
      v0[32] = sub_1A54E3290(v5, v4, &v10);
      sub_1A56D5928();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5389000, v1, v2, "XPCResilientAsyncSequence[%s] END. Inner sequence finished", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v7, -1, -1);
      MEMORY[0x1A626CE20](v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A5570558()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  id v4 = v1;
  swift_bridgeObjectRetain();
  id v5 = v1;
  uint64_t v6 = sub_1A56D4D78();
  os_log_type_t v7 = sub_1A56D57D8();
  if (os_log_type_enabled(v6, v7))
  {
    unsigned int v8 = *(void **)(v0 + 416);
    uint64_t v28 = v2;
    uint64_t v10 = *(void *)(v0 + 344);
    unint64_t v9 = *(void *)(v0 + 352);
    uint64_t v11 = swift_slowAlloc();
    char v26 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v30 = v27;
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 224) = sub_1A54E3290(v10, v9, &v30);
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2112;
    id v12 = v8;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 232) = v13;
    uint64_t v2 = v28;
    sub_1A56D5928();
    *char v26 = v13;

    _os_log_impl(&dword_1A5389000, v6, v7, "XPCResilientAsyncSequence[%s] CONTINUE. Recreated sequence after error {error: %@}", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v27, -1, -1);
    MEMORY[0x1A626CE20](v11, -1, -1);
  }
  else
  {
    uint64_t v14 = *(void **)(v0 + 416);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = *(void **)(v0 + 416);
  uint64_t v16 = (uint64_t *)(*(void *)(v0 + 272) + *(void *)(v0 + 360));
  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v2;
  type metadata accessor for SFXPCAsyncSequence();
  SFXPCAsyncSequence.makeAsyncIterator()();

  swift_release();
  swift_release();
  uint64_t v17 = *v16;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v0 + 72);
  sub_1A54F5EA8(v17);
  uint64_t v18 = *(void *)(v0 + 272);
  uint64_t v19 = (void *)(v18 + *(void *)(v0 + 360));
  if (*v19)
  {
    uint64_t v20 = *(void **)(v0 + 280);
    uint64_t v21 = v19[1];
    *(void *)(v0 + 136) = *v19;
    *(void *)(v0 + 144) = v21;
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v22;
    *(void *)(v0 + 392) = v20[10];
    *(void *)(v0 + 400) = v20[11];
    *(void *)(v0 + 408) = v20[12];
    type metadata accessor for SFXPCAsyncSequence.AsyncIterator();
    *uint64_t v22 = v0;
    v22[1] = sub_1A5570208;
    uint64_t v23 = *(void *)(v0 + 264);
    return SFXPCAsyncSequence.AsyncIterator.next()(v23);
  }
  else
  {
    uint64_t v29 = (uint64_t (*)(uint64_t))(*(void *)(v18 + *(void *)(v0 + 368))
                                          + **(int **)(v18 + *(void *)(v0 + 368)));
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1A5570994;
    return v29(v0 + 40);
  }
}

uint64_t sub_1A5570994()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 432) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  if (v0) {
    id v4 = sub_1A5571E7C;
  }
  else {
    id v4 = sub_1A5570AC0;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A5570AC0()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1A56D4D78();
  os_log_type_t v4 = sub_1A56D57D8();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 352);
  if (v5)
  {
    uint64_t v7 = *(void *)(v0 + 344);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v21 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v8 + 4) = sub_1A54E3290(v7, v6, &v21);
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5389000, v3, v4, "XPCResilientAsyncSequence[%s] START. Created initial sequence.", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v9, -1, -1);
    MEMORY[0x1A626CE20](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = (uint64_t *)(*(void *)(v0 + 272) + *(void *)(v0 + 360));
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 112) = v2;
  type metadata accessor for SFXPCAsyncSequence();
  SFXPCAsyncSequence.makeAsyncIterator()();
  swift_release();
  uint64_t v11 = *v10;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)(v0 + 88);
  sub_1A54F5EA8(v11);
  uint64_t v12 = *(void *)(v0 + 272);
  uint64_t v13 = (void *)(v12 + *(void *)(v0 + 360));
  if (*v13)
  {
    uint64_t v14 = *(void **)(v0 + 280);
    uint64_t v15 = v13[1];
    *(void *)(v0 + 136) = *v13;
    *(void *)(v0 + 144) = v15;
    swift_retain();
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v16;
    *(void *)(v0 + 392) = v14[10];
    *(void *)(v0 + 400) = v14[11];
    *(void *)(v0 + 408) = v14[12];
    type metadata accessor for SFXPCAsyncSequence.AsyncIterator();
    *uint64_t v16 = v0;
    v16[1] = sub_1A5570208;
    uint64_t v17 = *(void *)(v0 + 264);
    return SFXPCAsyncSequence.AsyncIterator.next()(v17);
  }
  else
  {
    uint64_t v20 = (uint64_t (*)(uint64_t))(*(void *)(v12 + *(void *)(v0 + 368))
                                          + **(int **)(v12 + *(void *)(v0 + 368)));
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1A5570994;
    return v20(v0 + 40);
  }
}

uint64_t sub_1A5570E04()
{
  uint64_t v32 = v0;
  char v1 = sub_1A55720F8(*(void **)(v0 + 416));
  uint64_t v2 = *(void **)(v0 + 416);
  if (v1)
  {
    swift_bridgeObjectRetain();
    id v3 = v2;
    swift_bridgeObjectRetain();
    id v4 = v2;
    BOOL v5 = sub_1A56D4D78();
    os_log_type_t v6 = sub_1A56D57B8();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void **)(v0 + 416);
    unint64_t v9 = *(void *)(v0 + 352);
    if (v7)
    {
      uint64_t v29 = *(void *)(v0 + 344);
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v31[0] = v30;
      *(_DWORD *)uint64_t v10 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 240) = sub_1A54E3290(v29, v9, v31);
      sub_1A56D5928();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2112;
      id v12 = v8;
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 248) = v13;
      sub_1A56D5928();
      *uint64_t v11 = v13;

      _os_log_impl(&dword_1A5389000, v5, v6, "XPCResilientAsyncSequence[%s] RETRY. Recreating sequence {error: %@}", (uint8_t *)v10, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v11, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v30, -1, -1);
      MEMORY[0x1A626CE20](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A56D5B18();
    *(_OWORD *)(v0 + 152) = xmmword_1A56F0CE0;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return MEMORY[0x1F4188298](sub_1A55712E0, 0, 0);
  }
  else
  {
    id v14 = v2;
    swift_bridgeObjectRetain();
    id v15 = v2;
    uint64_t v16 = sub_1A56D4D78();
    os_log_type_t v17 = sub_1A56D57B8();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void **)(v0 + 416);
    unint64_t v20 = *(void *)(v0 + 352);
    if (v18)
    {
      uint64_t v21 = *(void *)(v0 + 344);
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v31[0] = v24;
      *(_DWORD *)uint64_t v22 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 200) = sub_1A54E3290(v21, v20, v31);
      sub_1A56D5928();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2112;
      id v25 = v19;
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 168) = v26;
      sub_1A56D5928();
      *uint64_t v23 = v26;

      _os_log_impl(&dword_1A5389000, v16, v17, "XPCResilientAsyncSequence[%s] FAILED. Non retryable error {error: %@}", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v24, -1, -1);
      MEMORY[0x1A626CE20](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_1A55712E0()
{
  uint64_t v2 = v0[37];
  uint64_t v1 = v0[38];
  uint64_t v3 = v0[36];
  uint64_t v4 = sub_1A5572BC0(&qword_1E966BFC0, MEMORY[0x1E4FBD1A8]);
  sub_1A56D5FC8();
  sub_1A5572BC0(&qword_1E966BFB8, MEMORY[0x1E4FBD178]);
  sub_1A56D5B38();
  BOOL v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[55] = v5;
  v0[56] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  os_log_type_t v6 = (void *)swift_task_alloc();
  v0[57] = v6;
  void *v6 = v0;
  v6[1] = sub_1A5571474;
  uint64_t v8 = v0[39];
  uint64_t v7 = v0[40];
  return MEMORY[0x1F4188178](v8, v0 + 2, v7, v4);
}

uint64_t sub_1A5571474()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 440))(*(void *)(v2 + 312), *(void *)(v2 + 288));
    uint64_t v3 = sub_1A55717E8;
    uint64_t v4 = 0;
  }
  else
  {
    BOOL v5 = *(void (**)(uint64_t, uint64_t))(v2 + 440);
    uint64_t v7 = *(void *)(v2 + 328);
    uint64_t v6 = *(void *)(v2 + 336);
    uint64_t v8 = *(void *)(v2 + 312);
    uint64_t v9 = *(void *)(v2 + 320);
    uint64_t v10 = *(void *)(v2 + 288);
    uint64_t v11 = *(void *)(v2 + 272);
    v5(v8, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v9);
    uint64_t v3 = sub_1A55715D8;
    uint64_t v4 = v11;
  }
  return MEMORY[0x1F4188298](v3, v4, 0);
}

uint64_t sub_1A55715D8()
{
  uint64_t v1 = (void *)(v0[34] + v0[46]);
  uint64_t v4 = (uint64_t (*)(void *))(*v1 + *(int *)*v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[59] = v2;
  void *v2 = v0;
  v2[1] = sub_1A55716BC;
  return v4(v0 + 15);
}

uint64_t sub_1A55716BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 480) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  if (v0) {
    uint64_t v4 = sub_1A5571B70;
  }
  else {
    uint64_t v4 = sub_1A5570558;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A55717E8()
{
  uint64_t v1 = v0[34];
  (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
  return MEMORY[0x1F4188298](sub_1A5571864, v1, 0);
}

uint64_t sub_1A5571864()
{
  id v25 = v0;
  uint64_t v1 = (void *)v0[58];
  uint64_t v2 = (void *)v0[52];
  id v3 = v2;
  id v4 = v1;
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v1;
  uint64_t v7 = sub_1A56D4D78();
  os_log_type_t v8 = sub_1A56D57B8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v0[52];
    log = v7;
    uint64_t v11 = v0[43];
    unint64_t v10 = v0[44];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v12 = 136315650;
    swift_bridgeObjectRetain();
    v0[22] = sub_1A54E3290(v11, v10, &v24);
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    id v14 = v1;
    os_log_type_t type = v8;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[23] = v15;
    sub_1A56D5928();
    *uint64_t v13 = v15;

    *(_WORD *)(v12 + 22) = 2112;
    id v16 = v9;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[24] = v17;
    sub_1A56D5928();
    v13[1] = v17;

    _os_log_impl(&dword_1A5389000, log, type, "XPCResilientAsyncSequence[%s] FAILED. Unable to recreate sequence. Throwing iterationError {error: %@, iterationError: %@}", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v23, -1, -1);
    MEMORY[0x1A626CE20](v12, -1, -1);
  }
  else
  {
    BOOL v18 = (void *)v0[52];

    swift_bridgeObjectRelease_n();
  }
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1A5571B70()
{
  id v25 = v0;
  uint64_t v1 = (void *)v0[60];
  uint64_t v2 = (void *)v0[52];
  id v3 = v2;
  id v4 = v1;
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v1;
  uint64_t v7 = sub_1A56D4D78();
  os_log_type_t v8 = sub_1A56D57B8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v0[52];
    log = v7;
    uint64_t v11 = v0[43];
    unint64_t v10 = v0[44];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v12 = 136315650;
    swift_bridgeObjectRetain();
    v0[22] = sub_1A54E3290(v11, v10, &v24);
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    id v14 = v1;
    os_log_type_t type = v8;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[23] = v15;
    sub_1A56D5928();
    *uint64_t v13 = v15;

    *(_WORD *)(v12 + 22) = 2112;
    id v16 = v9;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[24] = v17;
    sub_1A56D5928();
    v13[1] = v17;

    _os_log_impl(&dword_1A5389000, log, type, "XPCResilientAsyncSequence[%s] FAILED. Unable to recreate sequence. Throwing iterationError {error: %@, iterationError: %@}", (uint8_t *)v12, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v23, -1, -1);
    MEMORY[0x1A626CE20](v12, -1, -1);
  }
  else
  {
    BOOL v18 = (void *)v0[52];

    swift_bridgeObjectRelease_n();
  }
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1A5571E7C()
{
  BOOL v18 = v0;
  uint64_t v1 = (void *)v0[54];
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  id v4 = sub_1A56D4D78();
  os_log_type_t v5 = sub_1A56D57B8();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (void *)v0[54];
    uint64_t v8 = v0[43];
    unint64_t v7 = v0[44];
    uint64_t v9 = swift_slowAlloc();
    unint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v11;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    v0[27] = sub_1A54E3290(v8, v7, &v17);
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2112;
    id v12 = v6;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[26] = v13;
    sub_1A56D5928();
    *unint64_t v10 = v13;

    _os_log_impl(&dword_1A5389000, v4, v5, "XPCResilientAsyncSequence[%s] FAILED. Failed to create initial sequence.  {error: %@}", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v11, -1, -1);
    MEMORY[0x1A626CE20](v9, -1, -1);
  }
  else
  {
    id v14 = (void *)v0[54];

    swift_bridgeObjectRelease_n();
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1A55720F8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BF10);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1A56D4828();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = (uint64_t)a1;
  id v11 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v6, 0, 1, v7);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
    char v14 = sub_1A56D4818();
    id v15 = a1;
    id v16 = a1;
    swift_retain();
    uint64_t v17 = sub_1A56D4D78();
    os_log_type_t v18 = sub_1A56D57D8();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      unint64_t v46 = (void *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v49 = v47;
      *(_DWORD *)uint64_t v20 = 136315650;
      os_log_t v45 = v17;
      int v44 = v19;
      char v21 = v14;
      uint64_t v22 = *(void *)(v2 + 112);
      unint64_t v23 = *(void *)(v2 + 120);
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1A54E3290(v22, v23, &v49);
      sub_1A56D5928();
      swift_release();
      char v14 = v21;
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 1024;
      LODWORD(v48) = v21 & 1;
      sub_1A56D5928();
      *(_WORD *)(v20 + 18) = 2112;
      id v24 = a1;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v48 = v25;
      sub_1A56D5928();
      uint64_t v26 = v46;
      void *v46 = v25;

      uint64_t v17 = v45;
      _os_log_impl(&dword_1A5389000, v45, (os_log_type_t)v44, "XPCResilientAsyncSequence[%s] Evaluated Cocoa Error {isXPCConnectionError: %{BOOL}d, error: %@}", (uint8_t *)v20, 0x1Cu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v26, -1, -1);
      uint64_t v27 = v47;
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v27, -1, -1);
      MEMORY[0x1A626CE20](v20, -1, -1);
    }
    else
    {
      swift_release();
    }
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_1A557350C((uint64_t)v6);
    uint64_t v28 = *(uint64_t (**)(void *))(v1 + qword_1E96A7F00);
    if (v28)
    {
      swift_retain();
      char v14 = v28(a1);
      id v29 = a1;
      swift_retain();
      id v30 = a1;
      swift_retain();
      uint64_t v31 = sub_1A56D4D78();
      os_log_type_t v32 = sub_1A56D57D8();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        unint64_t v46 = (void *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        uint64_t v49 = v47;
        *(_DWORD *)uint64_t v33 = 136315650;
        os_log_t v45 = v31;
        char v34 = v14;
        uint64_t v35 = *(void *)(v2 + 112);
        unint64_t v36 = *(void *)(v2 + 120);
        swift_bridgeObjectRetain();
        uint64_t v48 = sub_1A54E3290(v35, v36, &v49);
        sub_1A56D5928();
        swift_release_n();
        char v14 = v34;
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 1024;
        LODWORD(v48) = v34 & 1;
        sub_1A56D5928();
        *(_WORD *)(v33 + 18) = 2112;
        id v37 = a1;
        uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v48 = v38;
        sub_1A56D5928();
        char v39 = v46;
        void *v46 = v38;

        os_log_t v40 = v45;
        _os_log_impl(&dword_1A5389000, v45, v32, "XPCResilientAsyncSequence[%s] Evaluated shouldRetryBlock {shouldRetry: %{BOOL}d, error: %@}", (uint8_t *)v33, 0x1Cu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
        swift_arrayDestroy();
        MEMORY[0x1A626CE20](v39, -1, -1);
        uint64_t v41 = v47;
        swift_arrayDestroy();
        MEMORY[0x1A626CE20](v41, -1, -1);
        MEMORY[0x1A626CE20](v33, -1, -1);
        sub_1A54F5EA8((uint64_t)v28);
      }
      else
      {
        sub_1A54F5EA8((uint64_t)v28);
        swift_release_n();
      }
    }
    else
    {
      char v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t SFXPCResilientAsyncSequence.AsyncIterator.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1E96A7ED0;
  uint64_t v2 = sub_1A56D4D98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_1A54F5EA8(*(void *)(v0 + qword_1E96A7F00));
  sub_1A54F5EA8(*(void *)(v0 + qword_1E96A7EF8));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SFXPCResilientAsyncSequence.AsyncIterator.__deallocating_deinit()
{
  SFXPCResilientAsyncSequence.AsyncIterator.deinit();

  return MEMORY[0x1F4188210](v0);
}

uint64_t SFXPCResilientAsyncSequence.AsyncIterator.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1A5572830()
{
  return SFXPCResilientAsyncSequence.AsyncIterator.unownedExecutor.getter();
}

uint64_t sub_1A557284C(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1A54E83BC;
  return SFXPCResilientAsyncSequence.AsyncIterator.next()(a1);
}

uint64_t SFXPCResilientAsyncSequence.makeAsyncIterator()(int *a1)
{
  uint64_t v3 = sub_1A56D4D98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SFXPCResilientAsyncSequence.AsyncIterator();
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, (char *)v1 + a1[11], v3);
  uint64_t v9 = a1[13];
  unint64_t v10 = (uint64_t *)((char *)v1 + a1[12]);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (char *)v1 + v9;
  uint64_t v14 = *(uint64_t *)((char *)v1 + v9);
  uint64_t v15 = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5572C20(v14);
  uint64_t v16 = swift_allocObject();
  sub_1A556FE08(v7, v8, (uint64_t)v6, v11, v12, v14, v15);
  return v16;
}

uint64_t sub_1A5572A40@<X0>(int *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = SFXPCResilientAsyncSequence.makeAsyncIterator()(a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, int *))(*((void *)a1 - 1) + 8))(v2, a1);
  *a2 = v5;
  return result;
}

uint64_t sub_1A5572AA8(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1A5572AE0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1A5572B08(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1A56D5928();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_1A5572BC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SFXPCResilientAsyncSequence.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A5572C20(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1A5572C30()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A5572C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1A5572C54()
{
  uint64_t result = sub_1A56D4D98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A5572D04(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[11];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A56D4D98();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[12];
    uint64_t v14 = a3[13];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (uint64_t *)((char *)v4 + v14);
    int v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = *v19;
    swift_retain();
    if (v20)
    {
      uint64_t v21 = v19[1];
      *uint64_t v18 = v20;
      v18[1] = v21;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
  }
  return v4;
}

uint64_t sub_1A5572E3C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_1A56D4D98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 52)))
  {
    return swift_release();
  }
  return result;
}

void *sub_1A5572EF4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[11];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A56D4D98();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[12];
  uint64_t v13 = a3[13];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = *v18;
  swift_retain();
  if (v19)
  {
    uint64_t v20 = v18[1];
    *uint64_t v17 = v19;
    v17[1] = v20;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  return a1;
}

void *sub_1A5572FDC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[11];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A56D4D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[12];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)((char *)a1 + v14);
  uint64_t v18 = *(void *)((char *)a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = *((void *)v16 + 1);
      *uint64_t v15 = v18;
      v15[1] = v20;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    return a1;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v19 = *((void *)v16 + 1);
  *uint64_t v15 = v18;
  v15[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1A5573100(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[11];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1A56D4D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v13 = *v12;
  if (*v12)
  {
    uint64_t v14 = v12[1];
    *uint64_t v11 = v13;
    v11[1] = v14;
  }
  else
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  return a1;
}

void *sub_1A55731BC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[11];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1A56D4D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  swift_release();
  uint64_t v11 = a3[13];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = *(void *)((char *)a1 + v11);
  uint64_t v15 = *v13;
  if (!v14)
  {
    if (v15)
    {
      uint64_t v17 = v13[1];
      *uint64_t v12 = v15;
      v12[1] = v17;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    return a1;
  }
  if (!v15)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v16 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v16;
  swift_release();
  return a1;
}

uint64_t sub_1A55732B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A55732CC);
}

uint64_t sub_1A55732CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1A56D4D98();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A557337C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A5573390);
}

uint64_t sub_1A5573390(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1A56D4D98();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A5573438()
{
  uint64_t result = sub_1A56D4D98();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SFXPCResilientAsyncSequence.AsyncIterator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFXPCResilientAsyncSequence.AsyncIterator);
}

uint64_t sub_1A557350C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BF10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A557356C()
{
  uint64_t v0 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v0, qword_1E9671A88);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E9671A88);
  if (qword_1E966C0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1E966C098);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t SFAirDropSend.ItemMetadata.fileName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropSend.ItemMetadata.fileType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropSend.ItemMetadata.fileSubType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropSend.ItemMetadata.fileSize.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t SFAirDropSend.ItemMetadata.fileBOMPath.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropSend.ItemMetadata.fileIsDirectory.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t SFAirDropSend.ItemMetadata.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropSend.ItemMetadata.previewImageData.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1A54F6308(v1, *(void *)(v0 + 104));
  return v1;
}

uint64_t SFAirDropSend.ItemMetadata.wasString.getter()
{
  return *(unsigned __int8 *)(v0 + 112);
}

__n128 SFAirDropSend.ItemMetadata.init(fileName:fileType:fileSubType:fileSize:fileBOMPath:fileIsDirectory:description:previewImageData:wasString:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, unint64_t a10, unsigned __int8 a11, __n128 a12, unint64_t a13, unint64_t a14, unsigned __int8 a15)
{
  __n128 result = a12;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4].n128_u64[0] = a10;
  a9[4].n128_u8[8] = a11;
  a9[5] = a12;
  a9[6].n128_u64[0] = a13;
  a9[6].n128_u64[1] = a14;
  a9[7].n128_u8[0] = a15;
  return result;
}

unint64_t sub_1A55737B0(char a1)
{
  unint64_t result = 0x656D614E656C6966;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65707954656C6966;
      break;
    case 2:
      unint64_t result = 0x54627553656C6966;
      break;
    case 3:
      unint64_t result = 0x657A6953656C6966;
      break;
    case 4:
      unint64_t result = 0x504D4F42656C6966;
      break;
    case 5:
      unint64_t result = 0x69447349656C6966;
      break;
    case 6:
      unint64_t result = 0x7470697263736564;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6E69727453736177;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A55738F4()
{
  return sub_1A55737B0(*v0);
}

uint64_t sub_1A55738FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5579D5C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5573924(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1A5573930(uint64_t a1)
{
  unint64_t v2 = sub_1A5579AF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A557396C(uint64_t a1)
{
  unint64_t v2 = sub_1A5579AF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropSend.ItemMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671AA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v27 = *(void *)(v1 + 24);
  uint64_t v28 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v25 = *(void *)(v1 + 40);
  uint64_t v26 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v23 = *(void *)(v1 + 64);
  uint64_t v24 = v9;
  int v32 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v21 = *(void *)(v1 + 88);
  uint64_t v22 = v10;
  uint64_t v18 = *(void *)(v1 + 96);
  uint64_t v19 = *(void *)(v1 + 104);
  uint64_t v20 = v11;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1;
  uint64_t v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1A5579AF8();
  sub_1A56D61D8();
  LOBYTE(v30) = 0;
  uint64_t v16 = v29;
  sub_1A56D5DE8();
  if (!v16)
  {
    LOBYTE(v30) = 1;
    sub_1A56D5DA8();
    LOBYTE(v30) = 2;
    sub_1A56D5DA8();
    LOBYTE(v30) = 3;
    sub_1A56D5E18();
    LOBYTE(v30) = 4;
    sub_1A56D5DA8();
    LOBYTE(v30) = 5;
    sub_1A56D5DF8();
    LOBYTE(v30) = 6;
    sub_1A56D5DA8();
    uint64_t v30 = v18;
    uint64_t v31 = v19;
    char v33 = 7;
    sub_1A54E9FA0();
    sub_1A56D5DD8();
    LOBYTE(v30) = 8;
    sub_1A56D5DF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v15);
}

uint64_t SFAirDropSend.ItemMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671AB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5579AF8();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  LOBYTE(v49) = 0;
  uint64_t v9 = sub_1A56D5CF8();
  LOBYTE(v49) = 1;
  uint64_t v11 = v10;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1A56D5CA8();
  uint64_t v48 = v11;
  uint64_t v45 = v12;
  uint64_t v46 = v9;
  LOBYTE(v49) = 2;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A56D5CA8();
  uint64_t v47 = v14;
  uint64_t v16 = v15;
  LOBYTE(v49) = 3;
  uint64_t v18 = v17;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1A56D5D28();
  uint64_t v44 = v16;
  uint64_t v19 = v18;
  LOBYTE(v49) = 4;
  uint64_t v20 = sub_1A56D5CA8();
  uint64_t v22 = v21;
  uint64_t v42 = v20;
  LOBYTE(v49) = 5;
  swift_bridgeObjectRetain();
  int v51 = sub_1A56D5D08();
  LOBYTE(v49) = 6;
  uint64_t v39 = sub_1A56D5CA8();
  char v52 = 7;
  uint64_t v25 = v24;
  sub_1A54EA048();
  uint64_t v41 = v25;
  swift_bridgeObjectRetain();
  sub_1A56D5CE8();
  uint64_t v26 = v49;
  LOBYTE(v49) = 8;
  uint64_t v40 = v26;
  unint64_t v38 = v50;
  sub_1A54F6308(v26, v50);
  LOBYTE(v25) = sub_1A56D5D08();
  v51 &= 1u;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  int v37 = v25 & 1;
  uint64_t v36 = v22;
  uint64_t v27 = v48;
  swift_bridgeObjectRetain();
  uint64_t v28 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v41;
  swift_bridgeObjectRetain();
  uint64_t v30 = v40;
  unint64_t v31 = v38;
  sub_1A54F6308(v40, v38);
  sub_1A553FC9C(v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v46;
  *(void *)(a2 + 8) = v27;
  *(void *)(a2 + 16) = v45;
  *(void *)(a2 + 24) = v28;
  *(void *)(a2 + 32) = v44;
  *(void *)(a2 + 40) = v19;
  uint64_t v33 = v42;
  *(void *)(a2 + 48) = v43;
  *(void *)(a2 + 56) = v33;
  *(void *)(a2 + 64) = v32;
  *(unsigned char *)(a2 + 72) = v51;
  uint64_t v34 = v40;
  *(void *)(a2 + 80) = v39;
  *(void *)(a2 + 88) = v29;
  *(void *)(a2 + 96) = v34;
  *(void *)(a2 + 104) = v31;
  *(unsigned char *)(a2 + 112) = v37;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A553FC9C(v34, v31);
}

uint64_t sub_1A5574328@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropSend.ItemMetadata.init(from:)(a1, a2);
}

uint64_t sub_1A5574340(void *a1)
{
  return SFAirDropSend.ItemMetadata.encode(to:)(a1);
}

uint64_t SFAirDropSend.Item.url.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5579C94(v1, a1, type metadata accessor for SFSecurityScopedURL);
}

uint64_t SFAirDropSend.Item.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFAirDropSend.Item() + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = *(void *)(v3 + 64);
  char v8 = *(unsigned char *)(v3 + 72);
  uint64_t v10 = *(void *)(v3 + 80);
  uint64_t v9 = *(void *)(v3 + 88);
  uint64_t v11 = *(void *)(v3 + 96);
  unint64_t v12 = *(void *)(v3 + 104);
  char v13 = *(unsigned char *)(v3 + 112);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v3 + 40);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v12;
  *(unsigned char *)(a1 + 112) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_1A54F6308(v11, v12);
}

__n128 SFAirDropSend.Item.init(url:metadata:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  long long v14 = a2[1];
  long long v15 = *a2;
  long long v12 = a2[3];
  long long v13 = a2[2];
  uint64_t v4 = *((void *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 72);
  __n128 v11 = (__n128)a2[5];
  uint64_t v6 = *((void *)a2 + 12);
  uint64_t v7 = *((void *)a2 + 13);
  char v8 = *((unsigned char *)a2 + 112);
  sub_1A557C0C0(a1, a3, type metadata accessor for SFSecurityScopedURL);
  uint64_t v9 = a3 + *(int *)(type metadata accessor for SFAirDropSend.Item() + 20);
  *(_OWORD *)uint64_t v9 = v15;
  *(_OWORD *)(v9 + 16) = v14;
  *(_OWORD *)(v9 + 32) = v13;
  *(_OWORD *)(v9 + 48) = v12;
  *(void *)(v9 + 64) = v4;
  *(unsigned char *)(v9 + 72) = v5;
  __n128 result = v11;
  *(__n128 *)(v9 + 80) = v11;
  *(void *)(v9 + 96) = v6;
  *(void *)(v9 + 104) = v7;
  *(unsigned char *)(v9 + 112) = v8;
  return result;
}

uint64_t sub_1A5574528()
{
  if (*v0) {
    return 0x617461646174656DLL;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_1A557455C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A557A17C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5574584(uint64_t a1)
{
  unint64_t v2 = sub_1A5579B98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55745C0(uint64_t a1)
{
  unint64_t v2 = sub_1A5579B98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropSend.Item.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671AB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5579B98();
  sub_1A56D61D8();
  LOBYTE(v18) = 0;
  type metadata accessor for SFSecurityScopedURL(0);
  sub_1A557C1F4(&qword_1E9671AC8, (void (*)(uint64_t))type metadata accessor for SFSecurityScopedURL);
  sub_1A56D5E38();
  if (!v2)
  {
    uint64_t v9 = (uint64_t *)(v3 + *(int *)(type metadata accessor for SFAirDropSend.Item() + 20));
    uint64_t v10 = v9[1];
    uint64_t v11 = v9[8];
    char v12 = *((unsigned char *)v9 + 72);
    char v13 = *((unsigned char *)v9 + 112);
    uint64_t v18 = *v9;
    uint64_t v19 = v10;
    long long v14 = *((_OWORD *)v9 + 2);
    long long v20 = *((_OWORD *)v9 + 1);
    long long v21 = v14;
    long long v22 = *((_OWORD *)v9 + 3);
    uint64_t v23 = v11;
    char v24 = v12;
    long long v15 = *((_OWORD *)v9 + 6);
    long long v25 = *((_OWORD *)v9 + 5);
    long long v26 = v15;
    char v27 = v13;
    v17[7] = 1;
    sub_1A5579BEC();
    sub_1A56D5E38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SFAirDropSend.Item.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for SFSecurityScopedURL(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671AD8);
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropSend.Item();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5579B98();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v12 = v25;
  uint64_t v13 = (uint64_t)v11;
  LOBYTE(v28) = 0;
  sub_1A557C1F4(&qword_1E9671AE0, (void (*)(uint64_t))type metadata accessor for SFSecurityScopedURL);
  uint64_t v14 = v26;
  sub_1A56D5D48();
  sub_1A557C0C0(v27, v13, type metadata accessor for SFSecurityScopedURL);
  char v38 = 1;
  sub_1A5579C40();
  sub_1A56D5D48();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v14);
  uint64_t v15 = v29;
  uint64_t v16 = v33;
  char v17 = v34;
  char v18 = v37;
  uint64_t v19 = v13 + *(int *)(v9 + 20);
  *(void *)uint64_t v19 = v28;
  *(void *)(v19 + 8) = v15;
  long long v20 = v31;
  *(_OWORD *)(v19 + 16) = v30;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 48) = v32;
  *(void *)(v19 + 64) = v16;
  *(unsigned char *)(v19 + 72) = v17;
  long long v21 = v36;
  *(_OWORD *)(v19 + 80) = v35;
  *(_OWORD *)(v19 + 96) = v21;
  *(unsigned char *)(v19 + 112) = v18;
  sub_1A5579C94(v13, v24, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1A5579CFC(v13, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
}

uint64_t sub_1A5574B5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropSend.Item.init(from:)(a1, a2);
}

uint64_t sub_1A5574B74(void *a1)
{
  return SFAirDropSend.Item.encode(to:)(a1);
}

uint64_t SFAirDropSend.ItemPromise.task.getter()
{
  return swift_retain();
}

uint64_t SFAirDropSend.ItemPromise.loadHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1A5572C20(v1);
  return v1;
}

uint64_t SFAirDropSend.ItemPromise.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  char v6 = *(unsigned char *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v9 = *(void *)(v1 + 120);
  unint64_t v10 = *(void *)(v1 + 128);
  char v11 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  long long v12 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 40) = v12;
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = v10;
  *(unsigned char *)(a1 + 112) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_1A54F6308(v9, v10);
}

__n128 SFAirDropSend.ItemPromise.init(task:metadata:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  long long v3 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a3 + 40) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a3 + 56) = v3;
  *(_OWORD *)(a3 + 72) = *((_OWORD *)a2 + 3);
  __n128 result = *((__n128 *)a2 + 5);
  long long v5 = *((_OWORD *)a2 + 6);
  *(__n128 *)(a3 + 104) = result;
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[8];
  char v9 = *((unsigned char *)a2 + 72);
  char v10 = *((unsigned char *)a2 + 112);
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v6;
  *(void *)(a3 + 32) = v7;
  *(void *)(a3 + 88) = v8;
  *(unsigned char *)(a3 + 96) = v9;
  *(_OWORD *)(a3 + 120) = v5;
  *(unsigned char *)(a3 + 136) = v10;
  return result;
}

__n128 SFAirDropSend.ItemPromise.init(loadHandler:metadata:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  long long v4 = *((_OWORD *)a3 + 2);
  *(_OWORD *)(a4 + 40) = *((_OWORD *)a3 + 1);
  *(_OWORD *)(a4 + 56) = v4;
  *(_OWORD *)(a4 + 72) = *((_OWORD *)a3 + 3);
  __n128 result = *((__n128 *)a3 + 5);
  long long v6 = *((_OWORD *)a3 + 6);
  *(__n128 *)(a4 + 104) = result;
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v9 = a3[8];
  char v10 = *((unsigned char *)a3 + 72);
  char v11 = *((unsigned char *)a3 + 112);
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = a1;
  *(void *)(a4 + 16) = a2;
  *(void *)(a4 + 24) = v7;
  *(void *)(a4 + 32) = v8;
  *(void *)(a4 + 88) = v9;
  *(unsigned char *)(a4 + 96) = v10;
  *(_OWORD *)(a4 + 120) = v6;
  *(unsigned char *)(a4 + 136) = v11;
  return result;
}

uint64_t static SFAirDropSend.convertItemPromises(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  swift_bridgeObjectRetain();
  sub_1A56D4CA8();
  long long v5 = (void *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E966B120) + 68));
  *long long v5 = &unk_1E9671AF8;
  v5[1] = v4;
  int64_t v6 = *(void *)(a2 + 16);
  uint64_t v47 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v58 = MEMORY[0x1E4FBC860];
    sub_1A554625C(0, v6, 0);
    uint64_t v47 = v58;
    uint64_t v7 = (_OWORD *)(a2 + 32);
    do
    {
      long long v8 = v7[3];
      long long v52 = v7[2];
      long long v53 = v8;
      long long v9 = v7[5];
      long long v54 = v7[4];
      long long v55 = v9;
      long long v10 = v7[7];
      long long v56 = v7[6];
      *(_OWORD *)uint64_t v57 = v10;
      *(_OWORD *)&v57[9] = *(_OWORD *)((char *)v7 + 121);
      long long v11 = v7[1];
      v51[0] = *v7;
      v51[1] = v11;
      uint64_t v12 = *((void *)&v55 + 1);
      char v42 = v56;
      uint64_t v41 = *((void *)&v56 + 1);
      uint64_t v13 = *(void *)&v57[8];
      unint64_t v14 = *(void *)&v57[16];
      char v40 = v57[24];
      long long v49 = v54;
      long long v50 = v53;
      uint64_t v45 = *((void *)&v52 + 1);
      uint64_t v46 = *((void *)&v11 + 1);
      uint64_t v43 = v10;
      uint64_t v44 = v55;
      uint64_t v48 = v52;
      if (*(void *)&v57[16] >> 60 == 15)
      {
        sub_1A557A5C4(v51);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v15 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        id v16 = objc_allocWithZone(MEMORY[0x1E4F1E050]);
        sub_1A557A5C4(v51);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54F6308(v13, v14);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v38 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1A54F6308(v13, v14);
        uint64_t v39 = v13;
        char v17 = (void *)sub_1A56D4A68();
        id v18 = objc_msgSend(v16, sel_initWithData_, v17);

        if (!v18) {
          goto LABEL_12;
        }
        id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E018]), sel_init);
        objc_msgSend(v18, sel_extent);
        id v20 = objc_msgSend(v19, sel_createCGImage_fromRect_, v18);

        if (!v20)
        {
          id v20 = v18;
LABEL_11:

LABEL_12:
          uint64_t v25 = (void *)sub_1A56D4A68();
          CGImageRef v26 = SFCreateCGImageFromData(v25);

          if (v26 && (uint64_t v27 = (void *)SFResizedCGImage(v26, 0x100000), v26, v27))
          {
            uint64_t v13 = sub_1A56D4A78();
            unint64_t v29 = v28;

            sub_1A553FC9C(v39, v14);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1A553FC9C(v39, v14);
            uint64_t v15 = v38;
            unint64_t v14 = v29;
          }
          else
          {
            if (qword_1E9670308 != -1) {
              swift_once();
            }
            uint64_t v30 = sub_1A56D4D98();
            __swift_project_value_buffer(v30, (uint64_t)qword_1E9671A88);
            long long v31 = sub_1A56D4D78();
            os_log_type_t v32 = sub_1A56D57B8();
            if (os_log_type_enabled(v31, v32))
            {
              uint64_t v33 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v33 = 0;
              _os_log_impl(&dword_1A5389000, v31, v32, "Unable to parse itemPreview data", v33, 2u);
              MEMORY[0x1A626CE20](v33, -1, -1);

              sub_1A553FC9C(v13, v14);
              swift_bridgeObjectRelease();
              uint64_t v15 = v38;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1A553FC9C(v13, v14);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              uint64_t v15 = v38;
            }
            sub_1A553FC9C(v13, v14);
            uint64_t v13 = 0;
            unint64_t v14 = 0xF000000000000000;
          }
          goto LABEL_21;
        }
        uint64_t v21 = SFResizedCGImage(v20, 0x100000);
        if (!v21)
        {

          goto LABEL_11;
        }
        long long v22 = (void *)v21;
        uint64_t v13 = sub_1A56D4A78();
        unint64_t v24 = v23;

        sub_1A553FC9C(v39, v14);
        swift_bridgeObjectRelease();
        uint64_t v15 = v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A553FC9C(v39, v14);
        unint64_t v14 = v24;
      }
LABEL_21:
      sub_1A557A66C(v51);
      uint64_t v58 = v47;
      unint64_t v35 = *(void *)(v47 + 16);
      unint64_t v34 = *(void *)(v47 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1A554625C(v34 > 1, v35 + 1, 1);
        uint64_t v47 = v58;
      }
      *(void *)(v47 + 16) = v35 + 1;
      uint64_t v36 = v47 + 120 * v35;
      *(void *)(v36 + 32) = v46;
      *(void *)(v36 + 40) = v48;
      *(void *)(v36 + 48) = v45;
      *(_OWORD *)(v36 + 56) = v50;
      *(_OWORD *)(v36 + 72) = v49;
      *(void *)(v36 + 88) = v44;
      *(void *)(v36 + 96) = v15;
      *(unsigned char *)(v36 + 104) = v42;
      *(void *)(v36 + 112) = v41;
      *(void *)(v36 + 120) = v43;
      *(void *)(v36 + 128) = v13;
      *(void *)(v36 + 136) = v14;
      v7 += 9;
      *(unsigned char *)(v36 + 144) = v40;
      --v6;
    }
    while (v6);
  }
  return v47;
}

uint64_t sub_1A5575308(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  uint64_t v5 = type metadata accessor for SFAirDropSend.Item();
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = *(void *)(v5 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  *(void *)(v3 + 64) = *(void *)(type metadata accessor for SFSecurityScopedURL(0) - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  *(_OWORD *)(v3 + 80) = *a2;
  return MEMORY[0x1F4188298](sub_1A557542C, 0, 0);
}

uint64_t sub_1A557542C()
{
  long long v7 = *(_OWORD *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *(_OWORD *)(v2 + 16) = v7;
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B18);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A557553C;
  uint64_t v5 = *(void *)(v0 + 40);
  return MEMORY[0x1F4188080](v0 + 16, v5, v3, 0, 0, &unk_1E9671B98, v2, v5);
}

uint64_t sub_1A557553C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A5575850;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A5575658;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5575658()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1A5546220(0, v2, 0);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    uint64_t v7 = v15;
    do
    {
      uint64_t v8 = *(void *)(v0 + 72);
      uint64_t v9 = *(void *)(v0 + 56);
      sub_1A5579C94(v5, v9, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
      sub_1A5579C94(v9, v8, type metadata accessor for SFSecurityScopedURL);
      sub_1A5579CFC(v9, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A5546220(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v15;
      }
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1A5546220(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v15;
      }
      uint64_t v12 = *(void *)(v0 + 72);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1A557C0C0(v12, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, type metadata accessor for SFSecurityScopedURL);
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  **(void **)(v0 + 24) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1A5575850()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static SFAirDropSend.loadItemPromises(_:customPayload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1A55758F0, 0, 0);
}

uint64_t sub_1A55758F0()
{
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = type metadata accessor for SFAirDropSend.Item();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(void *)(v3 + 32) = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B18);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A5575A14;
  return MEMORY[0x1F4188080](v0 + 16, v2, v4, 0, 0, &unk_1E9671B10, v3, v2);
}

uint64_t sub_1A5575A14()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1A5575B4C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1A5575B30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5575B30()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1A5575B4C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A5575BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[96] = a5;
  v5[95] = a4;
  v5[94] = a3;
  v5[93] = a2;
  v5[92] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B60);
  v5[97] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropSend.Item();
  v5[98] = v6;
  v5[99] = *(void *)(v6 - 8);
  v5[100] = swift_task_alloc();
  v5[101] = swift_task_alloc();
  v5[102] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  v5[103] = swift_task_alloc();
  v5[104] = swift_task_alloc();
  v5[105] = swift_task_alloc();
  v5[106] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5575D28, 0, 0);
}

uint64_t sub_1A5575D28()
{
  uint64_t v1 = v0[96];
  unint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    if (qword_1E9670308 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1A56D4D98();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E9671A88);
    uint64_t v21 = sub_1A56D4D78();
    os_log_type_t v22 = sub_1A56D57B8();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      _os_log_impl(&dword_1A5389000, v21, v22, "No item promises provided", v23, 2u);
      MEMORY[0x1A626CE20](v23, -1, -1);
    }

    type metadata accessor for SFAirDropSend.Failure();
    sub_1A557C1F4(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_11;
  }
  if (v2 == 1)
  {
    *((_OWORD *)v0 + 19) = *(_OWORD *)(v1 + 32);
    long long v3 = *(_OWORD *)(v1 + 48);
    long long v4 = *(_OWORD *)(v1 + 64);
    long long v5 = *(_OWORD *)(v1 + 96);
    *((_OWORD *)v0 + 22) = *(_OWORD *)(v1 + 80);
    *((_OWORD *)v0 + 23) = v5;
    *((_OWORD *)v0 + 20) = v3;
    *((_OWORD *)v0 + 21) = v4;
    long long v6 = *(_OWORD *)(v1 + 112);
    long long v7 = *(_OWORD *)(v1 + 128);
    long long v8 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)((char *)v0 + 425) = *(_OWORD *)(v1 + 153);
    *((_OWORD *)v0 + 25) = v7;
    *((_OWORD *)v0 + 26) = v8;
    *((_OWORD *)v0 + 24) = v6;
    *((_OWORD *)v0 + 28) = *(_OWORD *)(v1 + 32);
    long long v9 = *(_OWORD *)(v1 + 48);
    long long v10 = *(_OWORD *)(v1 + 64);
    long long v11 = *(_OWORD *)(v1 + 96);
    *((_OWORD *)v0 + 31) = *(_OWORD *)(v1 + 80);
    *((_OWORD *)v0 + 32) = v11;
    *((_OWORD *)v0 + 29) = v9;
    *((_OWORD *)v0 + 30) = v10;
    long long v12 = *(_OWORD *)(v1 + 112);
    long long v13 = *(_OWORD *)(v1 + 128);
    long long v14 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)((char *)v0 + 569) = *(_OWORD *)(v1 + 153);
    *((_OWORD *)v0 + 34) = v13;
    *((_OWORD *)v0 + 35) = v14;
    *((_OWORD *)v0 + 33) = v12;
    sub_1A557A5C4(v0 + 38);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[110] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1A55772BC;
    uint64_t v16 = v0[100];
    uint64_t v17 = v0[95];
    uint64_t v18 = v0[94];
    return sub_1A5577D10(v16, (_OWORD *)v0 + 28, v18, v17);
  }
  uint64_t v25 = v0 + 2;
  uint64_t v104 = v0 + 20;
  uint64_t v102 = v0 + 78;
  CGImageRef v26 = (_OWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  uint64_t v103 = v26;
  unint64_t v105 = v2;
  do
  {
    *uint64_t v25 = *v26;
    long long v29 = v26[1];
    long long v30 = v26[2];
    long long v31 = v26[4];
    *((_OWORD *)v0 + 4) = v26[3];
    *((_OWORD *)v0 + 5) = v31;
    *((_OWORD *)v0 + 2) = v29;
    *((_OWORD *)v0 + 3) = v30;
    long long v32 = v26[5];
    long long v33 = v26[6];
    long long v34 = v26[7];
    *(_OWORD *)((char *)v0 + 137) = *(_OWORD *)((char *)v26 + 121);
    *((_OWORD *)v0 + 7) = v33;
    *((_OWORD *)v0 + 8) = v34;
    *((_OWORD *)v0 + 6) = v32;
    if (v27 < 5)
    {
      uint64_t v35 = v0[106];
      unint64_t v36 = v0[95];
      uint64_t v107 = v0[105];
      uint64_t v37 = v0[94];
      uint64_t v106 = v37;
      uint64_t v38 = sub_1A56D5478();
      uint64_t v39 = *(void *)(v38 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v35, 1, 1, v38);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = 0;
      *(void *)(v40 + 24) = 0;
      *(void *)(v40 + 32) = v37;
      *(void *)(v40 + 40) = v36;
      long long v41 = *((_OWORD *)v0 + 8);
      *(_OWORD *)(v40 + 144) = *((_OWORD *)v0 + 7);
      *(_OWORD *)(v40 + 160) = v41;
      *(_OWORD *)(v40 + 169) = *(_OWORD *)((char *)v0 + 137);
      long long v42 = *((_OWORD *)v0 + 4);
      *(_OWORD *)(v40 + 80) = *((_OWORD *)v0 + 3);
      *(_OWORD *)(v40 + 96) = v42;
      long long v43 = *((_OWORD *)v0 + 6);
      *(_OWORD *)(v40 + 112) = *((_OWORD *)v0 + 5);
      *(_OWORD *)(v40 + 128) = v43;
      long long v44 = *((_OWORD *)v0 + 2);
      *(_OWORD *)(v40 + 48) = *v25;
      *(_OWORD *)(v40 + 64) = v44;
      sub_1A54F60EC(v35, v107, &qword_1EB3DB820);
      LODWORD(v37) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v107, 1, v38);
      sub_1A557A5C4(v0 + 2);
      sub_1A557A5C4(v0 + 2);
      sub_1A54F6308(v106, v36);
      uint64_t v45 = v0[105];
      if (v37 == 1)
      {
        sub_1A54E4D44(v0[105], &qword_1EB3DB820);
      }
      else
      {
        sub_1A56D5468();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v45, v38);
      }
      if (*(void *)(v40 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v46 = sub_1A56D53F8();
        uint64_t v48 = v47;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v46 = 0;
        uint64_t v48 = 0;
      }
      uint64_t v49 = *(void *)v0[93];
      uint64_t v50 = v48 | v46;
      if (v48 | v46)
      {
        uint64_t v50 = (uint64_t)(v0 + 82);
        v0[82] = 0;
        v0[83] = 0;
        v0[84] = v46;
        v0[85] = v48;
      }
      uint64_t v28 = v0[106];
      v0[89] = 1;
      v0[90] = v50;
      v0[91] = v49;
      swift_task_create();
      swift_release();
      sub_1A54E4D44(v28, &qword_1EB3DB820);
      sub_1A557A66C(v0 + 2);
      unint64_t v2 = v105;
    }
    ++v27;
    v26 += 9;
  }
  while (v2 != v27);
  swift_bridgeObjectRelease();
  uint64_t v51 = MEMORY[0x1E4FBC860];
  if (v2 <= 5)
  {
    uint64_t v54 = 0;
    uint64_t v55 = MEMORY[0x1E4FBC860] + 32;
    uint64_t v52 = 1;
    uint64_t v53 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v52 = (2 * v2) | 1;
    uint64_t v53 = swift_bridgeObjectRetain();
    uint64_t v54 = 5;
    uint64_t v55 = (uint64_t)v103;
  }
  v0[74] = v53;
  v0[75] = v55;
  v0[76] = v54;
  v0[77] = v52;
  v0[107] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  if (sub_1A56D5578())
  {
    if (*(void *)(v51 + 16))
    {
      long long v56 = (void *)v0[92];
      swift_unknownObjectRelease();
      *long long v56 = v51;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v24 = (uint64_t (*)(void))v0[1];
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    if (qword_1E9670308 == -1) {
      goto LABEL_41;
    }
    goto LABEL_70;
  }
  v0[108] = v51;
  uint64_t v57 = v0[76];
  unint64_t v58 = v0[77];
  uint64_t v59 = v58 >> 1;
  if (v57 == v58 >> 1) {
    goto LABEL_62;
  }
  uint64_t v60 = v59 - v57;
  if (__OFSUB__(v59, v57))
  {
    __break(1u);
    goto LABEL_67;
  }
  if (v60 < 1)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v59 <= v57)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v61 = v0;
  uint64_t v0 = (void *)v0[75];
  long long v62 = &v0[18 * v59 - 18];
  *(_OWORD *)uint64_t v104 = *v62;
  long long v63 = v62[1];
  long long v64 = v62[2];
  long long v65 = v62[4];
  *((_OWORD *)v104 + 3) = v62[3];
  *((_OWORD *)v104 + 4) = v65;
  *((_OWORD *)v104 + 1) = v63;
  *((_OWORD *)v104 + 2) = v64;
  long long v66 = v62[5];
  long long v67 = v62[6];
  long long v68 = v62[7];
  *(_OWORD *)((char *)v104 + 121) = *(_OWORD *)((char *)v62 + 121);
  *((_OWORD *)v104 + 6) = v67;
  *((_OWORD *)v104 + 7) = v68;
  *((_OWORD *)v104 + 5) = v66;
  if (!__OFSUB__(v59, v59 - 1))
  {
    if ((v58 & 1) == 0)
    {
      sub_1A557A5C4(v104);
      goto LABEL_52;
    }
    sub_1A557A5C4(v104);
    if ((swift_isUniquelyReferenced_nonNull() & 1) == 0) {
      goto LABEL_52;
    }
    sub_1A56D5F48();
    swift_unknownObjectRetain();
    uint64_t v73 = swift_dynamicCastClass();
    if (!v73)
    {
      swift_unknownObjectRelease();
      uint64_t v73 = MEMORY[0x1E4FBC860];
    }
    uint64_t v74 = *(void *)(v73 + 16);
    if (&v0[18 * v57 + 18 * v60] == (void *)(v73 + 144 * v74 + 32))
    {
      unint64_t v80 = *(void *)(v73 + 24);
      uint64_t v75 = swift_release();
      uint64_t v81 = (v80 >> 1) - v74;
      BOOL v82 = __OFADD__(v60, v81);
      uint64_t v79 = v60 + v81;
      if (v82) {
        goto LABEL_72;
      }
    }
    else
    {
      uint64_t v75 = swift_release();
      uint64_t v79 = v59 - v57;
    }
    if (!__OFADD__(v60, -1))
    {
      if (v79 >= v60 - 1)
      {
        sub_1A557C368(v59 - 1, v59, 0);
        goto LABEL_53;
      }
LABEL_52:
      sub_1A5578FE4(v59 - 1, v59, 0);
LABEL_53:
      uint64_t v0 = v61;
      uint64_t v83 = v61[104];
      uint64_t v84 = v61[103];
      unint64_t v85 = v61[95];
      uint64_t v86 = v61[94];
      uint64_t v87 = sub_1A56D5478();
      uint64_t v88 = *(void *)(v87 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v83, 1, 1, v87);
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = 0;
      *(void *)(v89 + 24) = 0;
      *(void *)(v89 + 32) = v86;
      *(void *)(v89 + 40) = v85;
      long long v90 = *((_OWORD *)v104 + 7);
      *(_OWORD *)(v89 + 144) = *((_OWORD *)v104 + 6);
      *(_OWORD *)(v89 + 160) = v90;
      *(_OWORD *)(v89 + 169) = *(_OWORD *)((char *)v104 + 121);
      long long v91 = *((_OWORD *)v104 + 3);
      *(_OWORD *)(v89 + 80) = *((_OWORD *)v104 + 2);
      *(_OWORD *)(v89 + 96) = v91;
      long long v92 = *((_OWORD *)v104 + 5);
      *(_OWORD *)(v89 + 112) = *((_OWORD *)v104 + 4);
      *(_OWORD *)(v89 + 128) = v92;
      long long v93 = *((_OWORD *)v104 + 1);
      *(_OWORD *)(v89 + 48) = *(_OWORD *)v104;
      *(_OWORD *)(v89 + 64) = v93;
      sub_1A54F60EC(v83, v84, &qword_1EB3DB820);
      LODWORD(v84) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v84, 1, v87);
      sub_1A54F6308(v86, v85);
      sub_1A557A5C4(v104);
      uint64_t v94 = v0[103];
      if (v84 == 1)
      {
        sub_1A54E4D44(v0[103], &qword_1EB3DB820);
        uint64_t v95 = 0;
        uint64_t v96 = 0;
      }
      else
      {
        sub_1A56D5468();
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v94, v87);
        if (*(void *)(v89 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v95 = sub_1A56D53F8();
          uint64_t v96 = v97;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v95 = 0;
          uint64_t v96 = 0;
        }
      }
      uint64_t v98 = v102;
      uint64_t v99 = *(void *)v0[93];
      if (v96 | v95)
      {
        *uint64_t v102 = 0;
        v102[1] = 0;
        v0[80] = v95;
        v0[81] = v96;
      }
      else
      {
        uint64_t v98 = 0;
      }
      uint64_t v100 = v0[104];
      v0[86] = 1;
      v0[87] = v98;
      v0[88] = v99;
      swift_task_create();
      swift_release();
      sub_1A54E4D44(v100, &qword_1EB3DB820);
      sub_1A557A66C(v104);
LABEL_62:
      uint64_t v101 = (void *)swift_task_alloc();
      v0[109] = v101;
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B80);
      *uint64_t v101 = v0;
      v101[1] = sub_1A5576980;
      uint64_t v75 = v0[97];
      uint64_t v76 = 0;
      uint64_t v77 = 0;
      return MEMORY[0x1F4187E30](v75, v76, v77, v78);
    }
    __break(1u);
LABEL_72:
    __break(1u);
    return MEMORY[0x1F4187E30](v75, v76, v77, v78);
  }
LABEL_69:
  __break(1u);
  __break(1u);
LABEL_70:
  swift_once();
LABEL_41:
  uint64_t v69 = sub_1A56D4D98();
  __swift_project_value_buffer(v69, (uint64_t)qword_1E9671A88);
  uint64_t v70 = sub_1A56D4D78();
  os_log_type_t v71 = sub_1A56D57B8();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v72 = 0;
    _os_log_impl(&dword_1A5389000, v70, v71, "Failed to load any items", v72, 2u);
    MEMORY[0x1A626CE20](v72, -1, -1);
  }

  type metadata accessor for SFAirDropSend.Failure();
  sub_1A557C1F4(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_unknownObjectRelease();
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_30:
  return v24();
}

uint64_t sub_1A5576980()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_1A55775E8;
  }
  else
  {
    uint64_t v1 = sub_1A5576A98;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1A5576A98()
{
  uint64_t v1 = *(void *)(v0 + 776);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 792) + 48))(v1, 1, *(void *)(v0 + 784)) == 1)
  {
    sub_1A54E4D44(v1, &qword_1E9671B60);
    unint64_t v2 = *(void *)(v0 + 864);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 816);
    uint64_t v4 = *(void *)(v0 + 808);
    sub_1A557C0C0(v1, v3, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
    sub_1A5579C94(v3, v4, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v2 = *(void *)(v0 + 864);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v2 = sub_1A54E2C04(0, *(void *)(v2 + 16) + 1, 1, *(void *)(v0 + 864));
    }
    unint64_t v7 = *(void *)(v2 + 16);
    unint64_t v6 = *(void *)(v2 + 24);
    if (v7 >= v6 >> 1) {
      unint64_t v2 = sub_1A54E2C04(v6 > 1, v7 + 1, 1, v2);
    }
    uint64_t v8 = *(void *)(v0 + 816);
    uint64_t v9 = *(void *)(v0 + 808);
    uint64_t v10 = *(void *)(v0 + 792);
    *(void *)(v2 + 16) = v7 + 1;
    sub_1A557C0C0(v9, v2+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v7, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
    sub_1A5579CFC(v8, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
  }
  if ((sub_1A56D5578() & 1) == 0)
  {
    *(void *)(v0 + 864) = v2;
    uint64_t v13 = *(void *)(v0 + 608);
    unint64_t v14 = *(void *)(v0 + 616);
    uint64_t v15 = v14 >> 1;
    if (v13 == v14 >> 1)
    {
LABEL_42:
      unint64_t v58 = (void *)swift_task_alloc();
      *(void *)(v0 + 872) = v58;
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B80);
      *unint64_t v58 = v0;
      v58[1] = sub_1A5576980;
      uint64_t v32 = *(void *)(v0 + 776);
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      return MEMORY[0x1F4187E30](v32, v33, v34, v35);
    }
    uint64_t v16 = v15 - v13;
    if (__OFSUB__(v15, v13))
    {
      __break(1u);
    }
    else if (v16 >= 1)
    {
      if (v15 > v13)
      {
        uint64_t v17 = *(void *)(v0 + 600);
        uint64_t v18 = (_OWORD *)(v17 + 144 * (v15 - 1));
        *(_OWORD *)(v0 + 160) = *v18;
        long long v19 = v18[1];
        long long v20 = v18[2];
        long long v21 = v18[4];
        *(_OWORD *)(v0 + 208) = v18[3];
        *(_OWORD *)(v0 + 224) = v21;
        *(_OWORD *)(v0 + 176) = v19;
        *(_OWORD *)(v0 + 192) = v20;
        long long v22 = v18[5];
        long long v23 = v18[6];
        long long v24 = v18[7];
        *(_OWORD *)(v0 + 281) = *(_OWORD *)((char *)v18 + 121);
        *(_OWORD *)(v0 + 256) = v23;
        *(_OWORD *)(v0 + 272) = v24;
        *(_OWORD *)(v0 + 240) = v22;
        if (!__OFSUB__(v15, v15 - 1))
        {
          if ((v14 & 1) == 0)
          {
            sub_1A557A5C4((void *)(v0 + 160));
            goto LABEL_33;
          }
          sub_1A557A5C4((void *)(v0 + 160));
          if ((swift_isUniquelyReferenced_nonNull() & 1) == 0) {
            goto LABEL_33;
          }
          sub_1A56D5F48();
          swift_unknownObjectRetain();
          uint64_t v30 = swift_dynamicCastClass();
          if (!v30)
          {
            swift_unknownObjectRelease();
            uint64_t v30 = MEMORY[0x1E4FBC860];
          }
          uint64_t v31 = *(void *)(v30 + 16);
          if (v17 + 144 * v13 + 144 * v16 == v30 + 144 * v31 + 32)
          {
            unint64_t v37 = *(void *)(v30 + 24);
            uint64_t v32 = swift_release();
            uint64_t v38 = (v37 >> 1) - v31;
            BOOL v39 = __OFADD__(v16, v38);
            uint64_t v36 = v16 + v38;
            if (v39) {
              goto LABEL_52;
            }
          }
          else
          {
            uint64_t v32 = swift_release();
            uint64_t v36 = v15 - v13;
          }
          if (!__OFADD__(v16, -1))
          {
            if (v36 >= v16 - 1)
            {
              sub_1A557C368(v15 - 1, v15, 0);
              goto LABEL_34;
            }
LABEL_33:
            sub_1A5578FE4(v15 - 1, v15, 0);
LABEL_34:
            uint64_t v40 = *(void *)(v0 + 832);
            uint64_t v41 = *(void *)(v0 + 824);
            unint64_t v42 = *(void *)(v0 + 760);
            uint64_t v43 = *(void *)(v0 + 752);
            uint64_t v44 = sub_1A56D5478();
            uint64_t v45 = *(void *)(v44 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v40, 1, 1, v44);
            uint64_t v46 = swift_allocObject();
            *(void *)(v46 + 16) = 0;
            *(void *)(v46 + 24) = 0;
            *(void *)(v46 + 32) = v43;
            *(void *)(v46 + 40) = v42;
            long long v47 = *(_OWORD *)(v0 + 272);
            *(_OWORD *)(v46 + 144) = *(_OWORD *)(v0 + 256);
            *(_OWORD *)(v46 + 160) = v47;
            *(_OWORD *)(v46 + 169) = *(_OWORD *)(v0 + 281);
            long long v48 = *(_OWORD *)(v0 + 208);
            *(_OWORD *)(v46 + 80) = *(_OWORD *)(v0 + 192);
            *(_OWORD *)(v46 + 96) = v48;
            long long v49 = *(_OWORD *)(v0 + 240);
            *(_OWORD *)(v46 + 112) = *(_OWORD *)(v0 + 224);
            *(_OWORD *)(v46 + 128) = v49;
            long long v50 = *(_OWORD *)(v0 + 176);
            *(_OWORD *)(v46 + 48) = *(_OWORD *)(v0 + 160);
            *(_OWORD *)(v46 + 64) = v50;
            sub_1A54F60EC(v40, v41, &qword_1EB3DB820);
            LODWORD(v41) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v41, 1, v44);
            sub_1A54F6308(v43, v42);
            sub_1A557A5C4((void *)(v0 + 160));
            uint64_t v51 = *(void *)(v0 + 824);
            if (v41 == 1)
            {
              sub_1A54E4D44(*(void *)(v0 + 824), &qword_1EB3DB820);
              uint64_t v52 = 0;
              uint64_t v53 = 0;
            }
            else
            {
              sub_1A56D5468();
              (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v44);
              if (*(void *)(v46 + 16))
              {
                swift_getObjectType();
                swift_unknownObjectRetain();
                uint64_t v52 = sub_1A56D53F8();
                uint64_t v53 = v54;
                swift_unknownObjectRelease();
              }
              else
              {
                uint64_t v52 = 0;
                uint64_t v53 = 0;
              }
            }
            uint64_t v55 = **(void **)(v0 + 744);
            uint64_t v56 = v53 | v52;
            if (v53 | v52)
            {
              uint64_t v56 = v0 + 624;
              *(void *)(v0 + 624) = 0;
              *(void *)(v0 + 632) = 0;
              *(void *)(v0 + 640) = v52;
              *(void *)(v0 + 648) = v53;
            }
            uint64_t v57 = *(void *)(v0 + 832);
            *(void *)(v0 + 688) = 1;
            *(void *)(v0 + 696) = v56;
            *(void *)(v0 + 704) = v55;
            swift_task_create();
            swift_release();
            sub_1A54E4D44(v57, &qword_1EB3DB820);
            sub_1A557A66C((void *)(v0 + 160));
            goto LABEL_42;
          }
          __break(1u);
LABEL_52:
          __break(1u);
          return MEMORY[0x1F4187E30](v32, v33, v34, v35);
        }
LABEL_49:
        __break(1u);
        __break(1u);
        goto LABEL_50;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    __break(1u);
    goto LABEL_48;
  }
  if (!*(void *)(v2 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1E9670308 == -1)
    {
LABEL_19:
      uint64_t v25 = sub_1A56D4D98();
      __swift_project_value_buffer(v25, (uint64_t)qword_1E9671A88);
      CGImageRef v26 = sub_1A56D4D78();
      os_log_type_t v27 = sub_1A56D57B8();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_1A5389000, v26, v27, "Failed to load any items", v28, 2u);
        MEMORY[0x1A626CE20](v28, -1, -1);
      }

      type metadata accessor for SFAirDropSend.Failure();
      sub_1A557C1F4(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      long long v12 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_22;
    }
LABEL_50:
    swift_once();
    goto LABEL_19;
  }
  long long v11 = *(unint64_t **)(v0 + 736);
  swift_unknownObjectRelease();
  *long long v11 = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_22:
  return v12();
}

uint64_t sub_1A55772BC()
{
  unint64_t v2 = (void *)(*(void *)v1 + 304);
  *(void *)(*(void *)v1 + 888) = v0;
  swift_task_dealloc();
  sub_1A557A66C(v2);
  if (v0) {
    uint64_t v3 = sub_1A5577518;
  }
  else {
    uint64_t v3 = sub_1A55773E0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A55773E0()
{
  uint64_t v1 = v0[100];
  uint64_t v2 = v0[99];
  uint64_t v3 = (uint64_t *)v0[92];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96708D8);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A56F0E60;
  sub_1A557C0C0(v1, v5 + v4, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
  *uint64_t v3 = v5;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1A5577518()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A55775E8()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 792) + 56))(*(void *)(v0 + 776), 1, 1, *(void *)(v0 + 784));
  sub_1A54E4D44(*(void *)(v0 + 776), &qword_1E9671B60);
  uint64_t v1 = *(void *)(v0 + 864);
  if ((sub_1A56D5578() & 1) == 0)
  {
    *(void *)(v0 + 864) = v1;
    uint64_t v4 = *(void *)(v0 + 608);
    unint64_t v5 = *(void *)(v0 + 616);
    uint64_t v6 = v5 >> 1;
    if (v4 == v5 >> 1)
    {
LABEL_35:
      long long v49 = (void *)swift_task_alloc();
      *(void *)(v0 + 872) = v49;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B80);
      *long long v49 = v0;
      v49[1] = sub_1A5576980;
      uint64_t v23 = *(void *)(v0 + 776);
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      return MEMORY[0x1F4187E30](v23, v24, v25, v26);
    }
    uint64_t v7 = v6 - v4;
    if (__OFSUB__(v6, v4))
    {
      __break(1u);
    }
    else if (v7 >= 1)
    {
      if (v6 > v4)
      {
        uint64_t v8 = *(void *)(v0 + 600);
        uint64_t v9 = (_OWORD *)(v8 + 144 * (v6 - 1));
        *(_OWORD *)(v0 + 160) = *v9;
        long long v10 = v9[1];
        long long v11 = v9[2];
        long long v12 = v9[4];
        *(_OWORD *)(v0 + 208) = v9[3];
        *(_OWORD *)(v0 + 224) = v12;
        *(_OWORD *)(v0 + 176) = v10;
        *(_OWORD *)(v0 + 192) = v11;
        long long v13 = v9[5];
        long long v14 = v9[6];
        long long v15 = v9[7];
        *(_OWORD *)(v0 + 281) = *(_OWORD *)((char *)v9 + 121);
        *(_OWORD *)(v0 + 256) = v14;
        *(_OWORD *)(v0 + 272) = v15;
        *(_OWORD *)(v0 + 240) = v13;
        if (!__OFSUB__(v6, v6 - 1))
        {
          if ((v5 & 1) == 0)
          {
            sub_1A557A5C4((void *)(v0 + 160));
            goto LABEL_26;
          }
          sub_1A557A5C4((void *)(v0 + 160));
          if ((swift_isUniquelyReferenced_nonNull() & 1) == 0) {
            goto LABEL_26;
          }
          sub_1A56D5F48();
          swift_unknownObjectRetain();
          uint64_t v21 = swift_dynamicCastClass();
          if (!v21)
          {
            swift_unknownObjectRelease();
            uint64_t v21 = MEMORY[0x1E4FBC860];
          }
          uint64_t v22 = *(void *)(v21 + 16);
          if (v8 + 144 * v4 + 144 * v7 == v21 + 144 * v22 + 32)
          {
            unint64_t v28 = *(void *)(v21 + 24);
            uint64_t v23 = swift_release();
            uint64_t v29 = (v28 >> 1) - v22;
            BOOL v30 = __OFADD__(v7, v29);
            uint64_t v27 = v7 + v29;
            if (v30) {
              goto LABEL_45;
            }
          }
          else
          {
            uint64_t v23 = swift_release();
            uint64_t v27 = v6 - v4;
          }
          if (!__OFADD__(v7, -1))
          {
            if (v27 >= v7 - 1)
            {
              sub_1A557C368(v6 - 1, v6, 0);
              goto LABEL_27;
            }
LABEL_26:
            sub_1A5578FE4(v6 - 1, v6, 0);
LABEL_27:
            uint64_t v31 = *(void *)(v0 + 832);
            uint64_t v32 = *(void *)(v0 + 824);
            unint64_t v33 = *(void *)(v0 + 760);
            uint64_t v34 = *(void *)(v0 + 752);
            uint64_t v35 = sub_1A56D5478();
            uint64_t v36 = *(void *)(v35 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v31, 1, 1, v35);
            uint64_t v37 = swift_allocObject();
            *(void *)(v37 + 16) = 0;
            *(void *)(v37 + 24) = 0;
            *(void *)(v37 + 32) = v34;
            *(void *)(v37 + 40) = v33;
            long long v38 = *(_OWORD *)(v0 + 272);
            *(_OWORD *)(v37 + 144) = *(_OWORD *)(v0 + 256);
            *(_OWORD *)(v37 + 160) = v38;
            *(_OWORD *)(v37 + 169) = *(_OWORD *)(v0 + 281);
            long long v39 = *(_OWORD *)(v0 + 208);
            *(_OWORD *)(v37 + 80) = *(_OWORD *)(v0 + 192);
            *(_OWORD *)(v37 + 96) = v39;
            long long v40 = *(_OWORD *)(v0 + 240);
            *(_OWORD *)(v37 + 112) = *(_OWORD *)(v0 + 224);
            *(_OWORD *)(v37 + 128) = v40;
            long long v41 = *(_OWORD *)(v0 + 176);
            *(_OWORD *)(v37 + 48) = *(_OWORD *)(v0 + 160);
            *(_OWORD *)(v37 + 64) = v41;
            sub_1A54F60EC(v31, v32, &qword_1EB3DB820);
            LODWORD(v32) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35);
            sub_1A54F6308(v34, v33);
            sub_1A557A5C4((void *)(v0 + 160));
            uint64_t v42 = *(void *)(v0 + 824);
            if (v32 == 1)
            {
              sub_1A54E4D44(*(void *)(v0 + 824), &qword_1EB3DB820);
              uint64_t v43 = 0;
              uint64_t v44 = 0;
            }
            else
            {
              sub_1A56D5468();
              (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v42, v35);
              if (*(void *)(v37 + 16))
              {
                swift_getObjectType();
                swift_unknownObjectRetain();
                uint64_t v43 = sub_1A56D53F8();
                uint64_t v44 = v45;
                swift_unknownObjectRelease();
              }
              else
              {
                uint64_t v43 = 0;
                uint64_t v44 = 0;
              }
            }
            uint64_t v46 = **(void **)(v0 + 744);
            uint64_t v47 = v44 | v43;
            if (v44 | v43)
            {
              uint64_t v47 = v0 + 624;
              *(void *)(v0 + 624) = 0;
              *(void *)(v0 + 632) = 0;
              *(void *)(v0 + 640) = v43;
              *(void *)(v0 + 648) = v44;
            }
            uint64_t v48 = *(void *)(v0 + 832);
            *(void *)(v0 + 688) = 1;
            *(void *)(v0 + 696) = v47;
            *(void *)(v0 + 704) = v46;
            swift_task_create();
            swift_release();
            sub_1A54E4D44(v48, &qword_1EB3DB820);
            sub_1A557A66C((void *)(v0 + 160));
            goto LABEL_35;
          }
          __break(1u);
LABEL_45:
          __break(1u);
          return MEMORY[0x1F4187E30](v23, v24, v25, v26);
        }
LABEL_42:
        __break(1u);
        __break(1u);
        goto LABEL_43;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    __break(1u);
    goto LABEL_41;
  }
  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_1E9670308 == -1)
    {
LABEL_12:
      uint64_t v16 = sub_1A56D4D98();
      __swift_project_value_buffer(v16, (uint64_t)qword_1E9671A88);
      uint64_t v17 = sub_1A56D4D78();
      os_log_type_t v18 = sub_1A56D57B8();
      if (os_log_type_enabled(v17, v18))
      {
        long long v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v19 = 0;
        _os_log_impl(&dword_1A5389000, v17, v18, "Failed to load any items", v19, 2u);
        MEMORY[0x1A626CE20](v19, -1, -1);
      }

      type metadata accessor for SFAirDropSend.Failure();
      sub_1A557C1F4(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_15;
    }
LABEL_43:
    swift_once();
    goto LABEL_12;
  }
  uint64_t v2 = *(void **)(v0 + 736);
  swift_unknownObjectRelease();
  void *v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
LABEL_15:
  return v3();
}

uint64_t sub_1A5577D10(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 176) = a3;
  *(void *)(v4 + 184) = a4;
  *(void *)(v4 + 168) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B60);
  *(void *)(v4 + 192) = swift_task_alloc();
  *(void *)(v4 + 200) = swift_task_alloc();
  *(void *)(v4 + 208) = swift_task_alloc();
  *(void *)(v4 + 216) = swift_task_alloc();
  long long v6 = a2[7];
  *(_OWORD *)(v4 + 112) = a2[6];
  *(_OWORD *)(v4 + 128) = v6;
  *(_OWORD *)(v4 + 137) = *(_OWORD *)((char *)a2 + 121);
  long long v7 = a2[3];
  *(_OWORD *)(v4 + 48) = a2[2];
  *(_OWORD *)(v4 + 64) = v7;
  long long v8 = a2[5];
  *(_OWORD *)(v4 + 80) = a2[4];
  *(_OWORD *)(v4 + 96) = v8;
  long long v9 = a2[1];
  *(_OWORD *)(v4 + 16) = *a2;
  *(_OWORD *)(v4 + 32) = v9;
  return MEMORY[0x1F4188298](sub_1A5577DFC, 0, 0);
}

uint64_t sub_1A5577DFC()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[27];
  uint64_t v2 = type metadata accessor for SFAirDropSend.Item();
  v0[28] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[29] = v3;
  uint64_t v5 = v3 + 56;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[30] = v4;
  v0[31] = v5 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  uint64_t v6 = v0[2];
  v0[32] = v6;
  if (v6)
  {
    swift_retain();
    long long v7 = (void *)swift_task_alloc();
    v0[33] = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    *long long v7 = v0;
    v7[1] = sub_1A5578350;
    uint64_t v9 = v0[26];
    uint64_t v10 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187D90](v9, v6, v2, v8, v10);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    uint64_t v12 = v0[4];
    v0[35] = v11;
    v0[36] = v12;
    if (v11)
    {
      uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
      swift_retain();
      long long v13 = (void *)swift_task_alloc();
      v0[37] = v13;
      *long long v13 = v0;
      v13[1] = sub_1A55787EC;
      uint64_t v14 = v0[25];
      uint64_t v15 = v0[22];
      uint64_t v16 = v0[23];
      return v32(v14, v15, v16);
    }
    else
    {
      uint64_t v17 = v0[28];
      uint64_t v18 = v0[29];
      uint64_t v19 = v0[24];
      sub_1A54F60EC(v0[27], v19, &qword_1E9671B60);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17) == 1)
      {
        sub_1A54E4D44(v0[24], &qword_1E9671B60);
        if (qword_1E9670308 != -1) {
          swift_once();
        }
        uint64_t v20 = sub_1A56D4D98();
        __swift_project_value_buffer(v20, (uint64_t)qword_1E9671A88);
        sub_1A557A5C4(v0 + 2);
        uint64_t v21 = sub_1A56D4D78();
        os_log_type_t v22 = sub_1A56D57B8();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v24 = swift_slowAlloc();
          uint64_t v33 = v24;
          *(_DWORD *)uint64_t v23 = 136315138;
          uint64_t v26 = v0[5];
          unint64_t v25 = v0[6];
          swift_bridgeObjectRetain();
          v0[20] = sub_1A54E3290(v26, v25, &v33);
          sub_1A56D5928();
          swift_bridgeObjectRelease();
          sub_1A557A66C(v0 + 2);
          _os_log_impl(&dword_1A5389000, v21, v22, "Failed to load item promise %s", v23, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A626CE20](v24, -1, -1);
          MEMORY[0x1A626CE20](v23, -1, -1);
        }
        else
        {
          sub_1A557A66C(v0 + 2);
        }

        uint64_t v30 = v0[27];
        type metadata accessor for SFAirDropSend.Failure();
        sub_1A557C1F4(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1A54E4D44(v30, &qword_1E9671B60);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v29 = (uint64_t (*)(void))v0[1];
      }
      else
      {
        uint64_t v27 = v0[24];
        uint64_t v28 = v0[21];
        sub_1A54E4D44(v0[27], &qword_1E9671B60);
        sub_1A557C0C0(v27, v28, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v29 = (uint64_t (*)(void))v0[1];
      }
      return v29();
    }
  }
}

uint64_t sub_1A5578350()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A5578C70;
  }
  else {
    uint64_t v2 = sub_1A5578464;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5578464()
{
  uint64_t v21 = v0;
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[30];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[26];
  swift_release();
  sub_1A54E4D44(v2, &qword_1E9671B60);
  v1(v4, 0, 1, v3);
  sub_1A557C73C(v0[26], v0[27]);
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  uint64_t v7 = v0[24];
  sub_1A54F60EC(v0[27], v7, &qword_1E9671B60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    sub_1A54E4D44(v0[24], &qword_1E9671B60);
    if (qword_1E9670308 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1A56D4D98();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E9671A88);
    sub_1A557A5C4(v0 + 2);
    uint64_t v9 = sub_1A56D4D78();
    os_log_type_t v10 = sub_1A56D57B8();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v20 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v14 = v0[5];
      unint64_t v13 = v0[6];
      swift_bridgeObjectRetain();
      v0[20] = sub_1A54E3290(v14, v13, &v20);
      sub_1A56D5928();
      swift_bridgeObjectRelease();
      sub_1A557A66C(v0 + 2);
      _os_log_impl(&dword_1A5389000, v9, v10, "Failed to load item promise %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v12, -1, -1);
      MEMORY[0x1A626CE20](v11, -1, -1);
    }
    else
    {
      sub_1A557A66C(v0 + 2);
    }

    uint64_t v18 = v0[27];
    type metadata accessor for SFAirDropSend.Failure();
    sub_1A557C1F4(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1A54E4D44(v18, &qword_1E9671B60);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v15 = v0[24];
    uint64_t v16 = v0[21];
    sub_1A54E4D44(v0[27], &qword_1E9671B60);
    sub_1A557C0C0(v15, v16, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
  }
  return v17();
}

uint64_t sub_1A55787EC()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A5578D14;
  }
  else {
    uint64_t v2 = sub_1A5578900;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A5578900()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[27];
  sub_1A54F5EA8(v0[35]);
  sub_1A54E4D44(v1, &qword_1E9671B60);
  sub_1A557C73C(v0[25], v0[27]);
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[24];
  sub_1A54F60EC(v0[27], v4, &qword_1E9671B60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_1A54E4D44(v0[24], &qword_1E9671B60);
    if (qword_1E9670308 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1A56D4D98();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E9671A88);
    sub_1A557A5C4(v0 + 2);
    uint64_t v6 = sub_1A56D4D78();
    os_log_type_t v7 = sub_1A56D57B8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v11 = v0[5];
      unint64_t v10 = v0[6];
      swift_bridgeObjectRetain();
      v0[20] = sub_1A54E3290(v11, v10, &v17);
      sub_1A56D5928();
      swift_bridgeObjectRelease();
      sub_1A557A66C(v0 + 2);
      _os_log_impl(&dword_1A5389000, v6, v7, "Failed to load item promise %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A626CE20](v9, -1, -1);
      MEMORY[0x1A626CE20](v8, -1, -1);
    }
    else
    {
      sub_1A557A66C(v0 + 2);
    }

    uint64_t v15 = v0[27];
    type metadata accessor for SFAirDropSend.Failure();
    sub_1A557C1F4(&qword_1E96714F8, (void (*)(uint64_t))type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1A54E4D44(v15, &qword_1E9671B60);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v12 = v0[24];
    uint64_t v13 = v0[21];
    sub_1A54E4D44(v0[27], &qword_1E9671B60);
    sub_1A557C0C0(v12, v13, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Item);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
  }
  return v14();
}

uint64_t sub_1A5578C70()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_release();
  sub_1A54E4D44(v1, &qword_1E9671B60);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A5578D14()
{
  uint64_t v1 = v0[27];
  sub_1A54F5EA8(v0[35]);
  sub_1A54E4D44(v1, &qword_1E9671B60);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1A5578DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  long long v10 = a6[7];
  *(_OWORD *)(v6 + 112) = a6[6];
  *(_OWORD *)(v6 + 128) = v10;
  *(_OWORD *)(v6 + 137) = *(_OWORD *)((char *)a6 + 121);
  long long v11 = a6[3];
  *(_OWORD *)(v6 + 48) = a6[2];
  *(_OWORD *)(v6 + 64) = v11;
  long long v12 = a6[5];
  *(_OWORD *)(v6 + 80) = a6[4];
  *(_OWORD *)(v6 + 96) = v12;
  long long v13 = a6[1];
  *(_OWORD *)(v6 + 16) = *a6;
  *(_OWORD *)(v6 + 32) = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v6 + 160) = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_1A5578E98;
  return sub_1A5577D10(a1, (_OWORD *)(v6 + 16), a4, a5);
}

uint64_t sub_1A5578E98()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A5578FCC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A5578FCC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5578FE4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  BOOL v6 = __OFSUB__(a3, v4);
  uint64_t v7 = a3 - v4;
  if (v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = v3[2];
  unint64_t v8 = v3[3];
  unint64_t v10 = (v8 >> 1) - v9;
  if (__OFSUB__(v8 >> 1, v9))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = result;
  __n128 result = v10 + v7;
  if (__OFADD__(v10, v7))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __n128 result = sub_1A55790BC(result, v10 + v7, *v3, v3[1], v3[2], v8);
  uint64_t v13 = result;
  if (!__OFSUB__(v11, v9))
  {
    MEMORY[0x1F4188790](result);
    sub_1A55790D8(&v13, v12, a3, sub_1A557C728);
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A55790BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_1A5579410(a1, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1A55790D8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  uint64_t v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v15 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v11 = __OFSUB__(v15, v14);
  uint64_t v16 = v15 - v14;
  if (v11)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v34 = v16;
  size_t v17 = 144 * a2;
  unint64_t __dst = (char *)(v9 + 32);
  uint64_t v18 = v9 + 32 + 144 * a2;
  uint64_t v33 = (char *)(v18 + 144 * a3);
  uint64_t v19 = sub_1A5579640(v7);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v32 = v9;
    uint64_t v21 = v4[2];
    uint64_t v22 = (char *)(v4[1] + 144 * v21);
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_46;
    }
    uint64_t v23 = &v22[v17];
    if (__dst != v22 || __dst >= v23) {
      memmove(__dst, v22, v17);
    }
    swift_arrayDestroy();
    a4(v18, a3);
    if (v14 < 0) {
      goto LABEL_46;
    }
    uint64_t v24 = &v23[144 * v34];
    if (v33 != v24 || v33 >= &v24[144 * v14]) {
      memmove(v33, v24, 144 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v20 + 16) = 0;
    swift_release();
    uint64_t v9 = v32;
LABEL_26:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v21))
    {
      uint64_t v30 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v21, v30);
      uint64_t v31 = v21 + v30;
      if (!v11)
      {
        if (v31 >= v21)
        {
          if ((v31 & 0x8000000000000000) == 0)
          {
            *uint64_t v4 = v9;
            v4[1] = &__dst[-144 * v21];
            v4[2] = v21;
            v4[3] = (2 * v31) | 1;
            return result;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v21 = v4[2];
  uint64_t v26 = v21 + a2;
  if (__OFADD__(v21, a2))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v26 < v21)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (__OFSUB__(v26, v21))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[144 * a2], a3);
  uint64_t v27 = v26 + v34;
  if (__OFADD__(v26, v34))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v28 = v4[3] >> 1;
  if (v28 < v27)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!__OFSUB__(v28, v27))
  {
    swift_arrayInitWithCopy();
    goto LABEL_26;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t sub_1A5579410(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v10 = (a7 >> 1) - a6;
  if (__OFSUB__(a7 >> 1, a6))
  {
    __break(1u);
LABEL_32:
    if (v10 >= v9) {
      goto LABEL_21;
    }
LABEL_18:
    if (v10 + 0x4000000000000000 >= 0)
    {
      v10 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = a3;
  uint64_t v9 = a2;
  uint64_t v7 = result;
  if ((a7 & 1) == 0) {
    goto LABEL_32;
  }
  sub_1A56D5F48();
  swift_unknownObjectRetain();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = a5 + 144 * a6 + 144 * v10;
  if (v15 == v13 + 144 * v14 + 32)
  {
    unint64_t v17 = *(void *)(v13 + 24);
    uint64_t result = swift_release();
    uint64_t v18 = (v17 >> 1) - v14;
    uint64_t v16 = v10 + v18;
    if (__OFADD__(v10, v18))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    uint64_t v16 = v10;
  }
  swift_unknownObjectRetain();
  uint64_t v19 = swift_dynamicCastClass();
  if (v16 < v9)
  {
    if (!v19)
    {
      swift_unknownObjectRelease();
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    uint64_t v20 = *(void *)(v19 + 16);
    if (v15 == v19 + 144 * v20 + 32)
    {
      unint64_t v22 = *(void *)(v19 + 24);
      uint64_t result = swift_release();
      uint64_t v23 = (v22 >> 1) - v20;
      BOOL v24 = __OFADD__(v10, v23);
      v10 += v23;
      if (v24)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v19)
  {
    swift_unknownObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  uint64_t v21 = *(void *)(v19 + 16);
  if (v15 == v19 + 144 * v21 + 32)
  {
    unint64_t v25 = *(void *)(v19 + 24);
    uint64_t result = swift_release();
    uint64_t v26 = (v25 >> 1) - v21;
    BOOL v24 = __OFADD__(v10, v26);
    v10 += v26;
    if (!v24) {
      goto LABEL_21;
    }
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v10 <= v8) {
    uint64_t v27 = v8;
  }
  else {
    uint64_t v27 = v10;
  }
  if (v27 <= v7) {
    uint64_t v28 = v7;
  }
  else {
    uint64_t v28 = v27;
  }
  if (!v28) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B90);
  uint64_t v29 = (void *)swift_allocObject();
  size_t v30 = _swift_stdlib_malloc_size(v29);
  v29[2] = v7;
  v29[3] = 2 * ((uint64_t)(v30 - 32) / 144);
  return (uint64_t)v29;
}

uint64_t sub_1A5579640(uint64_t a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1A56D5F48();
  swift_unknownObjectRetain();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v8 + 144 * v6 + 144 * v7 != v9 + 144 * v10 + 32)
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(v9 + 24);
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1) {
      return 0;
    }
    sub_1A56D5F48();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = (v8 + 144 * v6 - a1 - 32) / 144;
    uint64_t isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4) {
        return a1;
      }
LABEL_19:
      sub_1A557C23C(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t _s7Sharing13SFAirDropSendO12ItemMetadataV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v29 = *(void *)(a1 + 56);
  uint64_t v35 = *(void *)(a1 + 64);
  int v33 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v31 = *(void *)(a1 + 88);
  uint64_t v23 = *(void *)(a1 + 96);
  int v21 = *(unsigned __int8 *)(a1 + 112);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v27 = *(void *)(a1 + 80);
  uint64_t v28 = *(void *)(a2 + 56);
  uint64_t v34 = *(void *)(a2 + 64);
  int v32 = *(unsigned __int8 *)(a2 + 72);
  unint64_t v25 = *(void *)(a1 + 104);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v30 = *(void *)(a2 + 88);
  uint64_t v22 = *(void *)(a2 + 96);
  unint64_t v24 = *(void *)(a2 + 104);
  int v20 = *(unsigned __int8 *)(a2 + 112);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_1A56D5F28(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v8) {
        return 0;
      }
      if (v2 != v7 || v4 != v8)
      {
        char v14 = sub_1A56D5F28();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v8)
    {
      return 0;
    }
    if (v5)
    {
      if (!v9) {
        return 0;
      }
      if (v3 == v10 && v5 == v9)
      {
        if (v6 != v11) {
          return 0;
        }
LABEL_21:
        if (v35)
        {
          if (!v34) {
            return 0;
          }
          if (v29 == v28 && v35 == v34)
          {
            if (v33 != v32) {
              return 0;
            }
            goto LABEL_31;
          }
          char v16 = sub_1A56D5F28();
          uint64_t result = 0;
          if ((v16 & 1) == 0) {
            return result;
          }
        }
        else
        {
          uint64_t result = 0;
          if (v34) {
            return result;
          }
        }
        if ((v33 ^ v32)) {
          return result;
        }
LABEL_31:
        if (v31)
        {
          if (!v30) {
            return 0;
          }
          if (v27 != v26 || v31 != v30)
          {
            char v17 = sub_1A56D5F28();
            uint64_t result = 0;
            if ((v17 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v30)
        {
          return 0;
        }
        if (v25 >> 60 == 15)
        {
          unint64_t v18 = v24;
          if (v24 >> 60 == 15) {
            return v21 ^ v20 ^ 1u;
          }
          goto LABEL_42;
        }
        unint64_t v18 = v24;
        if (v24 >> 60 == 15)
        {
LABEL_42:
          sub_1A54F6308(v23, v25);
          sub_1A54F6308(v22, v18);
          sub_1A553FC9C(v23, v25);
          sub_1A553FC9C(v22, v18);
          return 0;
        }
        sub_1A54F6308(v23, v25);
        sub_1A54F6308(v22, v24);
        char v19 = sub_1A55CF004(v23, v25, v22, v24);
        sub_1A553FC9C(v22, v24);
        sub_1A553FC9C(v23, v25);
        if (v19) {
          return v21 ^ v20 ^ 1u;
        }
        return 0;
      }
      char v15 = sub_1A56D5F28();
      uint64_t result = 0;
      if ((v15 & 1) == 0) {
        return result;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v9) {
        return result;
      }
    }
    if (v6 != v11) {
      return result;
    }
    goto LABEL_21;
  }
  return result;
}

unint64_t sub_1A5579AF8()
{
  unint64_t result = qword_1E9671AA8;
  if (!qword_1E9671AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671AA8);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropSend.Item()
{
  uint64_t result = qword_1E9671B20;
  if (!qword_1E9671B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1A5579B98()
{
  unint64_t result = qword_1E9671AC0;
  if (!qword_1E9671AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671AC0);
  }
  return result;
}

unint64_t sub_1A5579BEC()
{
  unint64_t result = qword_1E9671AD0;
  if (!qword_1E9671AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671AD0);
  }
  return result;
}

unint64_t sub_1A5579C40()
{
  unint64_t result = qword_1E9671AE8;
  if (!qword_1E9671AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9671AE8);
  }
  return result;
}

uint64_t sub_1A5579C94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A5579CFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A5579D5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65707954656C6966 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54627553656C6966 && a2 == 0xEB00000000657079 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A6953656C6966 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x504D4F42656C6966 && a2 == 0xEB00000000687461 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69447349656C6966 && a2 == 0xEF79726F74636572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A5739AB0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E69727453736177 && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1A557A17C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t _s7Sharing13SFAirDropSendO4ItemV26compressedPreviewImageData4data10Foundation0I0VSgAK_tFZ_0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
  {
    id v4 = objc_allocWithZone(MEMORY[0x1E4F1E050]);
    sub_1A54E9E98(a1, a2);
    uint64_t v5 = (void *)sub_1A56D4A68();
    id v6 = objc_msgSend(v4, sel_initWithData_, v5);

    if (v6)
    {
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E018]), sel_init);
      objc_msgSend(v6, sel_extent);
      id v8 = objc_msgSend(v7, sel_createCGImage_fromRect_, v6);

      if (v8)
      {
        uint64_t v9 = SFResizedCGImage(v8, 0x100000);
        if (v9)
        {
          uint64_t v10 = (void *)v9;
          uint64_t v11 = sub_1A56D4A78();

          sub_1A553FC9C(a1, a2);
          return v11;
        }
      }
      else
      {
        id v8 = v6;
      }
    }
    char v12 = (void *)sub_1A56D4A68();
    CGImageRef v13 = SFCreateCGImageFromData(v12);

    if (v13 && (char v14 = (void *)SFResizedCGImage(v13, 0x100000), v13, v14))
    {
      uint64_t v15 = sub_1A56D4A78();

      sub_1A553FC9C(a1, a2);
      return v15;
    }
    else
    {
      if (qword_1E9670308 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1A56D4D98();
      __swift_project_value_buffer(v16, (uint64_t)qword_1E9671A88);
      char v17 = sub_1A56D4D78();
      os_log_type_t v18 = sub_1A56D57B8();
      if (os_log_type_enabled(v17, v18))
      {
        char v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v19 = 0;
        _os_log_impl(&dword_1A5389000, v17, v18, "Unable to parse itemPreview data", v19, 2u);
        MEMORY[0x1A626CE20](v19, -1, -1);

        sub_1A553FC9C(a1, a2);
      }
      else
      {
        sub_1A553FC9C(a1, a2);
      }
      return 0;
    }
  }
  return a1;
}

uint64_t sub_1A557A4DC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A557A514(uint64_t a1, _OWORD *a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_1A54E8628;
  return sub_1A5575308(a1, a2, v6);
}

void *sub_1A557A5C4(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[15];
  unint64_t v4 = a1[16];
  swift_retain();
  sub_1A5572C20(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A54F6308(v3, v4);
  return a1;
}

void *sub_1A557A66C(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[15];
  unint64_t v4 = a1[16];
  swift_release();
  sub_1A54F5EA8(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A553FC9C(v3, v4);
  return a1;
}

uint64_t sub_1A557A714(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1A54E8628;
  return sub_1A5575BB4(a1, a2, v6, v7, v8);
}

uint64_t _s12ItemMetadataVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 104);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 96);
    return sub_1A54EA09C(v4, v3);
  }
  return result;
}

uint64_t _s12ItemMetadataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = (uint64_t *)(a2 + 96);
  unint64_t v9 = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1A54E9E98(*v8, v9);
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v9;
  }
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t _s12ItemMetadataVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 96);
  unint64_t v5 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_1A54E9E98(*v4, *(void *)(a2 + 104));
      uint64_t v8 = *(void *)(a1 + 96);
      unint64_t v9 = *(void *)(a1 + 104);
      *(void *)(a1 + 96) = v7;
      *(void *)(a1 + 104) = v5;
      sub_1A54EA09C(v8, v9);
      goto LABEL_8;
    }
    sub_1A551BBE0(a1 + 96);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_1A54E9E98(*v4, *(void *)(a2 + 104));
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = v5;
LABEL_8:
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s12ItemMetadataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(a2 + 96);
  unint64_t v9 = *(void *)(a1 + 104);
  if (v9 >> 60 != 15)
  {
    unint64_t v10 = *(void *)(a2 + 104);
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *(void *)(a1 + 96);
      *(void *)(a1 + 96) = *v8;
      *(void *)(a1 + 104) = v10;
      sub_1A54EA09C(v11, v9);
      goto LABEL_6;
    }
    sub_1A551BBE0(a1 + 96);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)v8;
LABEL_6:
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t _s12ItemMetadataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12ItemMetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropSend.ItemMetadata()
{
  return &type metadata for SFAirDropSend.ItemMetadata;
}

void *_s4ItemVwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A56D4A28();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for SFSecurityScopedURL(0) + 20);
    unint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *unint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = *(int *)(a3 + 20);
    CGImageRef v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
    *(void *)CGImageRef v13 = *(void *)((char *)a2 + v12);
    *((void *)v13 + 1) = v15;
    uint64_t v16 = *(void *)((char *)a2 + v12 + 24);
    *((void *)v13 + 2) = *(void *)((char *)a2 + v12 + 16);
    *((void *)v13 + 3) = v16;
    uint64_t v17 = *(void *)((char *)a2 + v12 + 40);
    *((void *)v13 + 4) = *(void *)((char *)a2 + v12 + 32);
    *((void *)v13 + 5) = v17;
    *((_OWORD *)v13 + 3) = *(_OWORD *)((char *)a2 + v12 + 48);
    *((void *)v13 + 8) = *(void *)((char *)a2 + v12 + 64);
    v13[72] = *((unsigned char *)a2 + v12 + 72);
    uint64_t v18 = *(void *)((char *)a2 + v12 + 88);
    *((void *)v13 + 10) = *(void *)((char *)a2 + v12 + 80);
    *((void *)v13 + 11) = v18;
    char v19 = (void *)((char *)a2 + v12 + 96);
    unint64_t v20 = *(void *)((char *)a2 + v12 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >> 60 == 15)
    {
      *((_OWORD *)v13 + 6) = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v22 = *v19;
      sub_1A54E9E98(*v19, v20);
      *((void *)v13 + 12) = v22;
      *((void *)v13 + 13) = v20;
    }
    v13[112] = v14[112];
  }
  return a1;
}

uint64_t _s4ItemVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for SFSecurityScopedURL(0);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v5 + 104);
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *(void *)(v5 + 96);
    return sub_1A54EA09C(v8, v7);
  }
  return result;
}

uint64_t _s4ItemVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for SFSecurityScopedURL(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11);
  uint64_t v15 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  uint64_t v16 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v16;
  uint64_t v17 = *(void *)(v13 + 40);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = v17;
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  *(unsigned char *)(v12 + 72) = *(unsigned char *)(v13 + 72);
  uint64_t v18 = *(void *)(v13 + 88);
  *(void *)(v12 + 80) = *(void *)(v13 + 80);
  *(void *)(v12 + 88) = v18;
  char v19 = (uint64_t *)(v13 + 96);
  unint64_t v20 = *(void *)(v13 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)(v12 + 96) = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v21 = *v19;
    sub_1A54E9E98(*v19, v20);
    *(void *)(v12 + 96) = v21;
    *(void *)(v12 + 104) = v20;
  }
  *(unsigned char *)(v12 + 112) = *(unsigned char *)(v13 + 112);
  return a1;
}

uint64_t _s4ItemVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for SFSecurityScopedURL(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = *(void *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  *(void *)(v11 + 56) = *(void *)(v12 + 56);
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 72) = *(unsigned char *)(v12 + 72);
  *(void *)(v11 + 80) = *(void *)(v12 + 80);
  *(void *)(v11 + 88) = *(void *)(v12 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(v12 + 96);
  unint64_t v14 = *(void *)(v12 + 104);
  if (*(void *)(v11 + 104) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v16 = *v13;
      sub_1A54E9E98(*v13, *(void *)(v12 + 104));
      uint64_t v17 = *(void *)(v11 + 96);
      unint64_t v18 = *(void *)(v11 + 104);
      *(void *)(v11 + 96) = v16;
      *(void *)(v11 + 104) = v14;
      sub_1A54EA09C(v17, v18);
      goto LABEL_8;
    }
    sub_1A551BBE0(v11 + 96);
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(v11 + 96) = *(_OWORD *)v13;
    goto LABEL_8;
  }
  uint64_t v15 = *v13;
  sub_1A54E9E98(*v13, *(void *)(v12 + 104));
  *(void *)(v11 + 96) = v15;
  *(void *)(v11 + 104) = v14;
LABEL_8:
  *(unsigned char *)(v11 + 112) = *(unsigned char *)(v12 + 112);
  return a1;
}

uint64_t _s4ItemVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for SFSecurityScopedURL(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(unsigned char *)(v9 + 112) = *(unsigned char *)(v10 + 112);
  long long v13 = *(_OWORD *)(v10 + 96);
  long long v14 = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 96) = v13;
  *(_OWORD *)(v9 + 64) = v14;
  return a1;
}

uint64_t _s4ItemVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for SFSecurityScopedURL(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v14 + 40);
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  *(void *)(v13 + 40) = v17;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(v14 + 48);
  *(void *)(v13 + 64) = *(void *)(v14 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 72) = *(unsigned char *)(v14 + 72);
  uint64_t v18 = *(void *)(v14 + 88);
  *(void *)(v13 + 80) = *(void *)(v14 + 80);
  *(void *)(v13 + 88) = v18;
  swift_bridgeObjectRelease();
  char v19 = (void *)(v14 + 96);
  unint64_t v20 = *(void *)(v13 + 104);
  if (v20 >> 60 != 15)
  {
    unint64_t v21 = *(void *)(v14 + 104);
    if (v21 >> 60 != 15)
    {
      uint64_t v22 = *(void *)(v13 + 96);
      *(void *)(v13 + 96) = *v19;
      *(void *)(v13 + 104) = v21;
      sub_1A54EA09C(v22, v20);
      goto LABEL_6;
    }
    sub_1A551BBE0(v13 + 96);
  }
  *(_OWORD *)(v13 + 96) = *(_OWORD *)v19;
LABEL_6:
  *(unsigned char *)(v13 + 112) = *(unsigned char *)(v14 + 112);
  return a1;
}

uint64_t _s4ItemVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A557B440);
}

uint64_t sub_1A557B440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFSecurityScopedURL(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s4ItemVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A557B518);
}

uint64_t sub_1A557B518(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SFSecurityScopedURL(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A557B5D8()
{
  uint64_t result = type metadata accessor for SFSecurityScopedURL(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s11ItemPromiseVwxx(void *a1)
{
  swift_release();
  if (a1[1]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = a1[16];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[15];
    return sub_1A54EA09C(v4, v3);
  }
  return result;
}

uint64_t _s11ItemPromiseVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  swift_retain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = (uint64_t *)(a2 + 120);
  unint64_t v12 = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v13 = *v11;
    sub_1A54E9E98(*v11, v12);
    *(void *)(a1 + 120) = v13;
    *(void *)(a1 + 128) = v12;
  }
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t _s11ItemPromiseVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(a2 + 120);
  unint64_t v8 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128) >> 60 != 15)
  {
    if (v8 >> 60 != 15)
    {
      uint64_t v10 = *v7;
      sub_1A54E9E98(*v7, *(void *)(a2 + 128));
      uint64_t v11 = *(void *)(a1 + 120);
      unint64_t v12 = *(void *)(a1 + 128);
      *(void *)(a1 + 120) = v10;
      *(void *)(a1 + 128) = v8;
      sub_1A54EA09C(v11, v12);
      goto LABEL_15;
    }
    sub_1A551BBE0(a1 + 120);
    goto LABEL_13;
  }
  if (v8 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v7;
    goto LABEL_15;
  }
  uint64_t v9 = *v7;
  sub_1A54E9E98(*v7, *(void *)(a2 + 128));
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = v8;
LABEL_15:
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

__n128 __swift_memcpy137_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s11ItemPromiseVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)(a2 + 120);
  unint64_t v12 = *(void *)(a1 + 128);
  if (v12 >> 60 != 15)
  {
    unint64_t v13 = *(void *)(a2 + 128);
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *(void *)(a1 + 120);
      *(void *)(a1 + 120) = *v11;
      *(void *)(a1 + 128) = v13;
      sub_1A54EA09C(v14, v12);
      goto LABEL_13;
    }
    sub_1A551BBE0(a1 + 120);
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)v11;
LABEL_13:
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t _s11ItemPromiseVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 137)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11ItemPromiseVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropSend.ItemPromise()
{
  return &type metadata for SFAirDropSend.ItemPromise;
}

unsigned char *_s4ItemV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A557BCE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4ItemV10CodingKeysOMa()
{
  return &_s4ItemV10CodingKeysON;
}

uint64_t _s12ItemMetadataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12ItemMetadataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A557BE78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12ItemMetadataV10CodingKeysOMa()
{
  return &_s12ItemMetadataV10CodingKeysON;
}

unint64_t sub_1A557BEB4()
{
  unint64_t result = qword_1E9671B30;
  if (!qword_1E9671B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671B30);
  }
  return result;
}

unint64_t sub_1A557BF0C()
{
  unint64_t result = qword_1E9671B38;
  if (!qword_1E9671B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671B38);
  }
  return result;
}

unint64_t sub_1A557BF64()
{
  unint64_t result = qword_1E9671B40;
  if (!qword_1E9671B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671B40);
  }
  return result;
}

unint64_t sub_1A557BFBC()
{
  unint64_t result = qword_1E9671B48;
  if (!qword_1E9671B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671B48);
  }
  return result;
}

unint64_t sub_1A557C014()
{
  unint64_t result = qword_1E9671B50;
  if (!qword_1E9671B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671B50);
  }
  return result;
}

unint64_t sub_1A557C06C()
{
  unint64_t result = qword_1E9671B58;
  if (!qword_1E9671B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671B58);
  }
  return result;
}

uint64_t sub_1A557C0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A557C12C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *int v8 = v2;
  v8[1] = sub_1A54E8628;
  return sub_1A5578DB8(a1, v4, v5, v6, v7, (_OWORD *)(v1 + 48));
}

uint64_t sub_1A557C1F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1A557C23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 144 * a1;
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_15;
  }
  if (v13 < 0)
  {
LABEL_18:
    uint64_t result = (char *)sub_1A56D5C08();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 144 * a3);
  uint64_t v14 = (char *)(v7 + 32 + 144 * a2);
  size_t v15 = 144 * v13;
  if (result != v14 || result >= &v14[v15]) {
    uint64_t result = (char *)memmove(result, v14, v15);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_16;
  }
  *(void *)(v7 + 16) = v17;
LABEL_11:
  if (a3 > 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1A557C368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_30;
  }
  uint64_t v6 = a3 - v4;
  if (__OFSUB__(a3, v4))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = v3[2];
  unint64_t v7 = v3[3];
  if (__OFSUB__(v7 >> 1, v8))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_1A56D5F48();
  swift_unknownObjectRetain();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = a1 - v8;
  if (__OFSUB__(a1, v8)) {
    goto LABEL_33;
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (v3[1] + 144 * v8 - (v11 + 32)) / 144;
  BOOL v15 = __OFADD__(v12, v14);
  uint64_t v16 = v12 + v14;
  if (v15)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v17 = a2 - v8;
  if (__OFSUB__(a2, v8))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v18 = v17 + v14;
  if (__OFADD__(v17, v14))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v18 < v16)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v19 = v18 - v16;
  if (__OFSUB__(v18, v16))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v20 = v13 + 144 * v16;
  swift_arrayDestroy();
  BOOL v15 = __OFSUB__(a3, v19);
  uint64_t v21 = a3 - v19;
  if (v15)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (!v21)
  {
    uint64_t result = swift_release();
    uint64_t v31 = (v7 >> 1) - v8;
    if (a3 <= 0) {
      goto LABEL_24;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v22 = *(void *)(v11 + 16);
  BOOL v15 = __OFSUB__(v22, v18);
  uint64_t v23 = v22 - v18;
  if (v15)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((v23 & 0x8000000000000000) == 0)
  {
    unint64_t v24 = (char *)(v20 + 144 * a3);
    unint64_t v25 = (char *)(v13 + 144 * v18);
    size_t v26 = 144 * v23;
    uint64_t v27 = &v25[144 * v23];
    if (v24 != v25 || v24 >= v27) {
      memmove(v24, v25, v26);
    }
    uint64_t v29 = *(void *)(v11 + 16);
    BOOL v15 = __OFADD__(v29, v21);
    uint64_t v30 = v29 + v21;
    uint64_t v31 = (v7 >> 1) - v8;
    if (v15) {
      goto LABEL_44;
    }
    *(void *)(v11 + 16) = v30;
    uint64_t result = swift_release();
    if (a3 <= 0)
    {
LABEL_24:
      uint64_t v33 = v8 + v31;
      if (!__OFADD__(v8, v31))
      {
        BOOL v15 = __OFADD__(v33, v6);
        uint64_t v34 = v33 + v6;
        if (!v15)
        {
          if ((v34 & 0x8000000000000000) == 0)
          {
            v3[3] = v7 & 1 | (2 * v34);
            return result;
          }
          goto LABEL_42;
        }
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    goto LABEL_29;
  }
LABEL_45:
  uint64_t result = sub_1A56D5C08();
  __break(1u);
  return result;
}

uint64_t objectdestroy_19Tm()
{
  swift_unknownObjectRelease();
  unint64_t v1 = v0[5];
  if (v1 >> 60 != 15) {
    sub_1A54EA09C(v0[4], v1);
  }
  swift_release();
  if (v0[7]) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = v0[22];
  if (v2 >> 60 != 15) {
    sub_1A54EA09C(v0[21], v2);
  }

  return swift_deallocObject();
}

uint64_t sub_1A557C660(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1A54E83BC;
  return sub_1A5578DB8(a1, v4, v5, v6, v7, (_OWORD *)(v1 + 48));
}

void sub_1A557C728(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (a2) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_1A557C73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SFAirDropReceive.AcceptContext.shouldExtractMedia.getter()
{
  return *v0;
}

uint64_t SFAirDropReceive.AcceptContext.customPayload.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1A54F6308(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t SFAirDropReceive.AcceptContext.customPayload.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A553FC9C(*(void *)(v2 + 8), *(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SFAirDropReceive.AcceptContext.customPayload.modify())()
{
  return nullsub_1;
}

uint64_t SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1A557C848()
{
  if (*v0) {
    return 0x61506D6F74737563;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1A557C894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A5580798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A557C8BC(uint64_t a1)
{
  unint64_t v2 = sub_1A557E438();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A557C8F8(uint64_t a1)
{
  unint64_t v2 = sub_1A557E438();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropReceive.AcceptContext.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671BA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A557E438();
  sub_1A56D61D8();
  LOBYTE(v12) = 0;
  sub_1A56D5DF8();
  if (!v2)
  {
    uint64_t v12 = v11;
    uint64_t v13 = v10;
    char v14 = 1;
    sub_1A54E9FA0();
    sub_1A56D5DD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SFAirDropReceive.AcceptContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671BB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A557E438();
  sub_1A56D61A8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    uint64_t v13 = 0;
    unint64_t v14 = 0xF000000000000000;
  }
  else
  {
    LOBYTE(v15) = 0;
    char v9 = sub_1A56D5D08();
    char v17 = 1;
    sub_1A54EA048();
    sub_1A56D5CE8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v15;
    unint64_t v12 = v16;
    sub_1A54F6308(v15, v16);
    sub_1A553FC9C(0, 0xF000000000000000);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    uint64_t v13 = v11;
    unint64_t v14 = v12;
  }
  return sub_1A553FC9C(v13, v14);
}

uint64_t sub_1A557CCBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.AcceptContext.init(from:)(a1, a2);
}

uint64_t sub_1A557CCD4(void *a1)
{
  return SFAirDropReceive.AcceptContext.encode(to:)(a1);
}

uint64_t SFAirDropReceive.AskResponse.description.getter()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.AskResponse();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A557E4D8(v0, (uint64_t)v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 3, v4);
  uint64_t result = 0x656E696C636564;
  switch(v5)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x726F727265;
      break;
    case 3:
      uint64_t result = 0x707954646578696DLL;
      break;
    default:
      sub_1A553FC9C(*(void *)&v3[*(int *)(v4 + 48) + 8], *(void *)&v3[*(int *)(v4 + 48) + 16]);
      sub_1A5580B94((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t result = 0x747065636361;
      break;
  }
  return result;
}

uint64_t sub_1A557CE5C()
{
  if (*v0) {
    return 0x6F43747065636361;
  }
  else {
    return 0x74616E6974736564;
  }
}

uint64_t sub_1A557CEAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55808AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A557CED4(uint64_t a1)
{
  unint64_t v2 = sub_1A557EAE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A557CF10(uint64_t a1)
{
  unint64_t v2 = sub_1A557EAE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A557CF4C()
{
  uint64_t result = 0x747065636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656E696C636564;
      break;
    case 2:
      uint64_t result = 0x726F727265;
      break;
    case 3:
      uint64_t result = 0x707954646578696DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A557CFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55809DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A557D000(uint64_t a1)
{
  unint64_t v2 = sub_1A557E990();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A557D03C(uint64_t a1)
{
  unint64_t v2 = sub_1A557E990();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A557D078(uint64_t a1)
{
  unint64_t v2 = sub_1A557EA8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A557D0B4(uint64_t a1)
{
  unint64_t v2 = sub_1A557EA8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A557D0F0(uint64_t a1)
{
  unint64_t v2 = sub_1A557EA38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A557D12C(uint64_t a1)
{
  unint64_t v2 = sub_1A557EA38();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A557D168(uint64_t a1)
{
  unint64_t v2 = sub_1A557E9E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A557D1A4(uint64_t a1)
{
  unint64_t v2 = sub_1A557E9E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropReceive.AskResponse.encode(to:)(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671BB8);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v37 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671BC0);
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671BC8);
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671BD0);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  long long v38 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  MEMORY[0x1F4188790](v9);
  uint64_t v36 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.AskResponse();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671BD8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A557E990();
  sub_1A56D61D8();
  sub_1A557E4D8(v44, (uint64_t)v13);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v13, 3, v18))
  {
    case 1u:
      char v45 = 1;
      sub_1A557EA8C();
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
      goto LABEL_7;
    case 2u:
      char v45 = 2;
      sub_1A557EA38();
      size_t v26 = v33;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
      goto LABEL_7;
    case 3u:
      char v45 = 3;
      sub_1A557E9E4();
      uint64_t v27 = v37;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v41);
LABEL_7:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      break;
    default:
      uint64_t v19 = &v13[*(int *)(v18 + 48)];
      LODWORD(v41) = *v19;
      uint64_t v20 = *((void *)v19 + 1);
      unint64_t v44 = *((void *)v19 + 2);
      uint64_t v21 = v36;
      sub_1A557EB88((uint64_t)v13, v36, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      char v45 = 0;
      sub_1A557EAE0();
      uint64_t v22 = v38;
      sub_1A56D5D98();
      char v45 = 0;
      sub_1A557EBF0(&qword_1E966B240);
      uint64_t v24 = v42;
      uint64_t v23 = v43;
      sub_1A56D5E38();
      if (v23)
      {
        sub_1A553FC9C(v20, v44);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v24);
        sub_1A5580B94(v21, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      }
      else
      {
        char v45 = v41;
        uint64_t v28 = v20;
        uint64_t v46 = v20;
        unint64_t v29 = v44;
        unint64_t v47 = v44;
        char v48 = 1;
        sub_1A557EB34();
        sub_1A56D5E38();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v24);
        sub_1A5580B94(v21, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        uint64_t result = sub_1A553FC9C(v28, v29);
      }
      break;
  }
  return result;
}

uint64_t SFAirDropReceive.AskResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671C10);
  uint64_t v52 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v57 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671C18);
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v56 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671C20);
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v55 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671C28);
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671C30);
  uint64_t v59 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SFAirDropReceive.AskResponse();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1A557E990();
  uint64_t v21 = v62;
  sub_1A56D61A8();
  if (v21) {
    goto LABEL_13;
  }
  uint64_t v22 = v14;
  unint64_t v47 = v17;
  uint64_t v62 = 0;
  uint64_t v24 = v59;
  uint64_t v23 = v60;
  uint64_t v25 = sub_1A56D5D78();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v31 = v11;
    uint64_t v32 = sub_1A56D5A78();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *uint64_t v34 = v22;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4FBBA70], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v31);
LABEL_13:
    uint64_t v43 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_0Tm(v43);
  }
  uint64_t v26 = v24;
  switch(*(unsigned char *)(v25 + 32))
  {
    case 1:
      char v66 = 1;
      sub_1A557EA8C();
      uint64_t v35 = v55;
      uint64_t v36 = v62;
      sub_1A56D5C88();
      if (v36) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v19, 1, 3, v37);
      goto LABEL_16;
    case 2:
      char v67 = 2;
      sub_1A557EA38();
      long long v38 = v56;
      uint64_t v39 = v62;
      sub_1A56D5C88();
      if (v39) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v19, 2, 3, v40);
      goto LABEL_16;
    case 3:
      char v68 = 3;
      sub_1A557E9E4();
      uint64_t v41 = v57;
      uint64_t v42 = v62;
      sub_1A56D5C88();
      if (v42) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v19, 3, 3, v45);
      goto LABEL_16;
    default:
      char v65 = 0;
      sub_1A557EAE0();
      uint64_t v27 = v62;
      sub_1A56D5C88();
      if (v27)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
        goto LABEL_13;
      }
      uint64_t v28 = v10;
      uint64_t v62 = v11;
      type metadata accessor for SFAirDropReceive.ItemDestination();
      char v64 = 0;
      sub_1A557EBF0(&qword_1E966B250);
      uint64_t v29 = (uint64_t)v47;
      uint64_t v30 = v54;
      sub_1A56D5D48();
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
      char v63 = 1;
      sub_1A557EC34();
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v62);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v60 - 8) + 56))(v29, 0, 3);
      sub_1A557EB88(v29, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.AskResponse);
LABEL_16:
      uint64_t v46 = (uint64_t)v61;
      sub_1A557EB88((uint64_t)v19, v58, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.AskResponse);
      uint64_t v43 = v46;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v43);
}

uint64_t sub_1A557E1A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.AskResponse.init(from:)(a1, a2);
}

uint64_t sub_1A557E1C0(void *a1)
{
  return SFAirDropReceive.AskResponse.encode(to:)(a1);
}

uint64_t sub_1A557E1DC(uint64_t a1)
{
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A557E4D8(v1, (uint64_t)v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 3, v4);
  uint64_t result = 0x656E696C636564;
  switch(v5)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x726F727265;
      break;
    case 3:
      uint64_t result = 0x707954646578696DLL;
      break;
    default:
      sub_1A553FC9C(*(void *)&v3[*(int *)(v4 + 48) + 8], *(void *)&v3[*(int *)(v4 + 48) + 16]);
      sub_1A5580B94((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t result = 0x747065636361;
      break;
  }
  return result;
}

BOOL _s7Sharing16SFAirDropReceiveO13AcceptContextV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = *((void *)a1 + 1);
  unint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a2 + 1);
  unint64_t v5 = *((void *)a2 + 2);
  if (v3 >> 60 == 15)
  {
    if (v5 >> 60 == 15) {
      return 1;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    sub_1A54F6308(*((void *)a1 + 1), v3);
    sub_1A54F6308(v4, v5);
    sub_1A553FC9C(v2, v3);
    sub_1A553FC9C(v4, v5);
    return 0;
  }
  sub_1A54F6308(*((void *)a1 + 1), v3);
  sub_1A54F6308(v4, v5);
  char v6 = sub_1A55CF004(v2, v3, v4, v5);
  sub_1A553FC9C(v4, v5);
  sub_1A553FC9C(v2, v3);
  return (v6 & 1) != 0;
}

unint64_t sub_1A557E438()
{
  unint64_t result = qword_1E9671BA8;
  if (!qword_1E9671BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671BA8);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropReceive.AskResponse()
{
  uint64_t result = qword_1E966BCB0;
  if (!qword_1E966BCB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A557E4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s7Sharing16SFAirDropReceiveO11AskResponseO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskResponse();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671CB8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_1A557E4D8(a1, (uint64_t)v13);
  sub_1A557E4D8(a2, v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  switch(v16((uint64_t)v13, 3, v15))
  {
    case 1u:
      if (v16(v14, 3, v15) == 1) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 2u:
      if (v16(v14, 3, v15) != 2) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 3u:
      if (v16(v14, 3, v15) == 3) {
        goto LABEL_9;
      }
      goto LABEL_10;
    default:
      sub_1A557E4D8((uint64_t)v13, (uint64_t)v9);
      uint64_t v17 = *(int *)(v15 + 48);
      int v29 = v9[v17];
      uint64_t v18 = *(void *)&v9[v17 + 8];
      unint64_t v19 = *(void *)&v9[v17 + 16];
      if (v16(v14, 3, v15))
      {
        sub_1A553FC9C(v18, v19);
        sub_1A5580B94((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
LABEL_10:
        sub_1A54E4D44((uint64_t)v13, &qword_1E9671CB8);
        return 0;
      }
      unint64_t v21 = v19;
      uint64_t v22 = v18;
      int v23 = *(unsigned __int8 *)(v14 + v17);
      uint64_t v25 = *(void *)(v14 + v17 + 8);
      unint64_t v24 = *(void *)(v14 + v17 + 16);
      sub_1A557EB88(v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      char v26 = _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0((uint64_t)v9, (uint64_t)v6);
      sub_1A5580B94((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      if ((v26 & 1) == 0 || v29 != v23) {
        goto LABEL_21;
      }
      if (v21 >> 60 != 15)
      {
        if (v24 >> 60 != 15)
        {
          sub_1A54F6308(v22, v21);
          sub_1A54F6308(v25, v24);
          char v27 = sub_1A55CF004(v22, v21, v25, v24);
          sub_1A553FC9C(v25, v24);
          sub_1A553FC9C(v22, v21);
          if (v27) {
            goto LABEL_20;
          }
LABEL_21:
          sub_1A5580B94((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
          sub_1A553FC9C(v25, v24);
          sub_1A553FC9C(v22, v21);
          sub_1A5580B94((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.AskResponse);
          return 0;
        }
LABEL_18:
        sub_1A54F6308(v22, v21);
        sub_1A54F6308(v25, v24);
        sub_1A553FC9C(v22, v21);
        sub_1A553FC9C(v25, v24);
        goto LABEL_21;
      }
      if (v24 >> 60 != 15) {
        goto LABEL_18;
      }
LABEL_20:
      sub_1A5580B94((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      sub_1A553FC9C(v25, v24);
      sub_1A553FC9C(v22, v21);
LABEL_9:
      sub_1A5580B94((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.AskResponse);
      return 1;
  }
}

unint64_t sub_1A557E990()
{
  unint64_t result = qword_1E9671BE0;
  if (!qword_1E9671BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671BE0);
  }
  return result;
}

unint64_t sub_1A557E9E4()
{
  unint64_t result = qword_1E9671BE8;
  if (!qword_1E9671BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671BE8);
  }
  return result;
}

unint64_t sub_1A557EA38()
{
  unint64_t result = qword_1E9671BF0;
  if (!qword_1E9671BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671BF0);
  }
  return result;
}

unint64_t sub_1A557EA8C()
{
  unint64_t result = qword_1E9671BF8;
  if (!qword_1E9671BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671BF8);
  }
  return result;
}

unint64_t sub_1A557EAE0()
{
  unint64_t result = qword_1E9671C00;
  if (!qword_1E9671C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C00);
  }
  return result;
}

unint64_t sub_1A557EB34()
{
  unint64_t result = qword_1E9671C08;
  if (!qword_1E9671C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C08);
  }
  return result;
}

uint64_t sub_1A557EB88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A557EBF0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SFAirDropReceive.ItemDestination();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A557EC34()
{
  unint64_t result = qword_1E9671C38;
  if (!qword_1E9671C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C38);
  }
  return result;
}

uint64_t _s13AcceptContextVwxx(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >> 60 != 15) {
    return sub_1A54EA09C(*(void *)(result + 8), v1);
  }
  return result;
}

uint64_t _s13AcceptContextVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = (uint64_t *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  }
  else
  {
    uint64_t v5 = *v3;
    sub_1A54E9E98(*v3, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v4;
  }
  return a1;
}

uint64_t _s13AcceptContextVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = (_OWORD *)(a1 + 8);
  unint64_t v4 = (uint64_t *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_1A54E9E98(*v4, *(void *)(a2 + 16));
      uint64_t v8 = *(void *)(a1 + 8);
      unint64_t v9 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v5;
      sub_1A54EA09C(v8, v9);
      return a1;
    }
    sub_1A551BBE0(a1 + 8);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *unint64_t v3 = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_1A54E9E98(*v4, *(void *)(a2 + 16));
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s13AcceptContextVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = (void *)(a2 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 16);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = *v5;
      *(void *)(a1 + 16) = v7;
      sub_1A54EA09C(v8, v6);
      return a1;
    }
    sub_1A551BBE0(a1 + 8);
  }
  *unint64_t v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t _s13AcceptContextVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s13AcceptContextVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropReceive.AcceptContext()
{
  return &type metadata for SFAirDropReceive.AcceptContext;
}

unint64_t *_s11AskResponseOwCP(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      unint64_t v14 = a2[1];
      if (v14 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        unint64_t v15 = *a2;
        sub_1A54E9E98(*a2, a2[1]);
        *a1 = v15;
        a1[1] = v14;
      }
      goto LABEL_14;
    case 1:
      unint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 0:
      uint64_t v12 = sub_1A56D4A28();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      goto LABEL_15;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_15:
  uint64_t v16 = *(int *)(v7 + 48);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  unint64_t v19 = (_OWORD *)((char *)a1 + v16 + 8);
  uint64_t v20 = (uint64_t *)((char *)a2 + v16 + 8);
  unint64_t v21 = *((void *)v18 + 2);
  if (v21 >> 60 == 15)
  {
    *unint64_t v19 = *(_OWORD *)v20;
  }
  else
  {
    uint64_t v22 = *v20;
    sub_1A54E9E98(*v20, v21);
    *((void *)v17 + 1) = v22;
    *((void *)v17 + 2) = v21;
  }
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
  return a1;
}

uint64_t _s11AskResponseOwxx(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    type metadata accessor for SFAirDropReceive.ItemDestination();
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        unint64_t v5 = a1[1];
        if (v5 >> 60 != 15) {
          uint64_t result = sub_1A54EA09C(*a1, v5);
        }
        break;
      case 1:
        uint64_t result = swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v4 = sub_1A56D4A28();
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        break;
    }
    uint64_t v6 = (char *)a1 + *(int *)(v2 + 48);
    unint64_t v7 = *((void *)v6 + 2);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *((void *)v6 + 1);
      return sub_1A54EA09C(v8, v7);
    }
  }
  return result;
}

unint64_t *_s11AskResponseOwcp(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v8 = type metadata accessor for SFAirDropReceive.ItemDestination();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      unint64_t v12 = a2[1];
      if (v12 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        unint64_t v13 = *a2;
        sub_1A54E9E98(*a2, a2[1]);
        *a1 = v13;
        a1[1] = v12;
      }
      goto LABEL_12;
    case 1:
      unint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 0:
      uint64_t v10 = sub_1A56D4A28();
      (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_13:
  uint64_t v14 = *(int *)(v6 + 48);
  unint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v17 = (_OWORD *)((char *)a1 + v14 + 8);
  uint64_t v18 = (uint64_t *)((char *)a2 + v14 + 8);
  unint64_t v19 = *((void *)v16 + 2);
  if (v19 >> 60 == 15)
  {
    *uint64_t v17 = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v20 = *v18;
    sub_1A54E9E98(*v18, v19);
    *((void *)v15 + 1) = v20;
    *((void *)v15 + 2) = v19;
  }
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t *_s11AskResponseOwca(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8((uint64_t *)a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1A54E4D44((uint64_t)a1, &qword_1E9671130);
      goto LABEL_9;
    }
    if (a1 != (uint64_t *)a2)
    {
      sub_1A5580B94((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
      uint64_t v14 = type metadata accessor for SFAirDropReceive.ItemDestination();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        unint64_t v26 = *(void *)(a2 + 8);
        if (v26 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v27 = *(void *)a2;
          sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
          *a1 = v27;
          a1[1] = v26;
        }
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
          goto LABEL_31;
        }
        uint64_t v16 = sub_1A56D4A28();
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_31:
    uint64_t v28 = *(int *)(v6 + 48);
    int v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)(a2 + v28);
    *int v29 = *v30;
    uint64_t v31 = (uint64_t *)(v30 + 8);
    unint64_t v32 = *((void *)v30 + 2);
    if (*((void *)v29 + 2) >> 60 == 15)
    {
      if (v32 >> 60 != 15)
      {
        uint64_t v33 = *v31;
        sub_1A54E9E98(*v31, v32);
        *((void *)v29 + 1) = v33;
        *((void *)v29 + 2) = v32;
        return a1;
      }
    }
    else
    {
      if (v32 >> 60 != 15)
      {
        uint64_t v34 = *v31;
        sub_1A54E9E98(*v31, v32);
        uint64_t v35 = *((void *)v29 + 1);
        unint64_t v36 = *((void *)v29 + 2);
        *((void *)v29 + 1) = v34;
        *((void *)v29 + 2) = v32;
        sub_1A54EA09C(v35, v36);
        return a1;
      }
      sub_1A551BBE0((uint64_t)(v29 + 8));
    }
    *(_OWORD *)(v29 + 8) = *(_OWORD *)v31;
    return a1;
  }
  if (v10)
  {
LABEL_9:
    memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination();
  int v12 = swift_getEnumCaseMultiPayload();
  switch(v12)
  {
    case 2:
      unint64_t v17 = *(void *)(a2 + 8);
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        uint64_t v18 = *(void *)a2;
        sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
        *a1 = v18;
        a1[1] = v17;
      }
      goto LABEL_20;
    case 1:
      *a1 = *(void *)a2;
      a1[1] = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    case 0:
      uint64_t v13 = sub_1A56D4A28();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
  }
  memcpy(a1, (const void *)a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_21:
  uint64_t v19 = *(int *)(v6 + 48);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = a2 + v19;
  *((unsigned char *)a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v22 = (_OWORD *)((char *)a1 + v19 + 8);
  int v23 = (uint64_t *)(a2 + v19 + 8);
  unint64_t v24 = *(void *)(v21 + 16);
  if (v24 >> 60 == 15)
  {
    *uint64_t v22 = *(_OWORD *)v23;
  }
  else
  {
    uint64_t v25 = *v23;
    sub_1A54E9E98(*v23, v24);
    *((void *)v20 + 1) = v25;
    *((void *)v20 + 2) = v24;
  }
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

char *_s11AskResponseOwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for SFAirDropReceive.ItemDestination();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v9 = sub_1A56D4A28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v10 = *(int *)(v6 + 48);
    uint64_t v11 = &a1[v10];
    int v12 = &a2[v10];
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((void *)v11 + 2) = *((void *)v12 + 2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

char *_s11AskResponseOwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v13 = sub_1A56D4A28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v14 = *(int *)(v6 + 48);
      unint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
      *((void *)v15 + 2) = *((void *)v16 + 2);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1A54E4D44((uint64_t)a1, &qword_1E9671130);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1A5580B94((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for SFAirDropReceive.ItemDestination);
    uint64_t v12 = type metadata accessor for SFAirDropReceive.ItemDestination();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1A56D4A28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v18 = *(int *)(v6 + 48);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *uint64_t v19 = *v20;
  uint64_t v21 = v19 + 8;
  uint64_t v22 = v20 + 8;
  unint64_t v23 = *((void *)v19 + 2);
  if (v23 >> 60 != 15)
  {
    unint64_t v24 = *((void *)v20 + 2);
    if (v24 >> 60 != 15)
    {
      uint64_t v25 = *((void *)v19 + 1);
      *((void *)v19 + 1) = *v22;
      *((void *)v19 + 2) = v24;
      sub_1A54EA09C(v25, v23);
      return a1;
    }
    sub_1A551BBE0((uint64_t)(v19 + 8));
  }
  *uint64_t v21 = *(_OWORD *)v22;
  return a1;
}

uint64_t _s11AskResponseOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A557FDA4);
}

uint64_t sub_1A557FDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t _s11AskResponseOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A557FE28);
}

uint64_t sub_1A557FE28(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1A557FEB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 3, v2);
}

uint64_t sub_1A557FF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671130);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 3, v4);
}

uint64_t sub_1A557FF90()
{
  uint64_t result = type metadata accessor for SFAirDropReceive.ItemDestination();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unsigned char *_s11AskResponseO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55800F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11AskResponseO10CodingKeysOMa()
{
  return &_s11AskResponseO10CodingKeysON;
}

ValueMetadata *_s11AskResponseO16AcceptCodingKeysOMa()
{
  return &_s11AskResponseO16AcceptCodingKeysON;
}

ValueMetadata *_s11AskResponseO17DeclineCodingKeysOMa()
{
  return &_s11AskResponseO17DeclineCodingKeysON;
}

ValueMetadata *_s11AskResponseO15ErrorCodingKeysOMa()
{
  return &_s11AskResponseO15ErrorCodingKeysON;
}

ValueMetadata *_s11AskResponseO20MixedTypesCodingKeysOMa()
{
  return &_s11AskResponseO20MixedTypesCodingKeysON;
}

unsigned char *_s11AskResponseO16AcceptCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5580238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13AcceptContextV10CodingKeysOMa()
{
  return &_s13AcceptContextV10CodingKeysON;
}

unint64_t sub_1A5580274()
{
  unint64_t result = qword_1E9671C40;
  if (!qword_1E9671C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C40);
  }
  return result;
}

unint64_t sub_1A55802CC()
{
  unint64_t result = qword_1E9671C48;
  if (!qword_1E9671C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C48);
  }
  return result;
}

unint64_t sub_1A5580324()
{
  unint64_t result = qword_1E9671C50;
  if (!qword_1E9671C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C50);
  }
  return result;
}

unint64_t sub_1A558037C()
{
  unint64_t result = qword_1E9671C58;
  if (!qword_1E9671C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C58);
  }
  return result;
}

unint64_t sub_1A55803D4()
{
  unint64_t result = qword_1E9671C60;
  if (!qword_1E9671C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C60);
  }
  return result;
}

unint64_t sub_1A558042C()
{
  unint64_t result = qword_1E9671C68;
  if (!qword_1E9671C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C68);
  }
  return result;
}

unint64_t sub_1A5580484()
{
  unint64_t result = qword_1E9671C70;
  if (!qword_1E9671C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C70);
  }
  return result;
}

unint64_t sub_1A55804DC()
{
  unint64_t result = qword_1E9671C78;
  if (!qword_1E9671C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C78);
  }
  return result;
}

unint64_t sub_1A5580534()
{
  unint64_t result = qword_1E9671C80;
  if (!qword_1E9671C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C80);
  }
  return result;
}

unint64_t sub_1A558058C()
{
  unint64_t result = qword_1E9671C88;
  if (!qword_1E9671C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C88);
  }
  return result;
}

unint64_t sub_1A55805E4()
{
  unint64_t result = qword_1E9671C90;
  if (!qword_1E9671C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C90);
  }
  return result;
}

unint64_t sub_1A558063C()
{
  unint64_t result = qword_1E9671C98;
  if (!qword_1E9671C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671C98);
  }
  return result;
}

unint64_t sub_1A5580694()
{
  unint64_t result = qword_1E9671CA0;
  if (!qword_1E9671CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CA0);
  }
  return result;
}

unint64_t sub_1A55806EC()
{
  unint64_t result = qword_1E9671CA8;
  if (!qword_1E9671CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CA8);
  }
  return result;
}

unint64_t sub_1A5580744()
{
  unint64_t result = qword_1E9671CB0;
  if (!qword_1E9671CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CB0);
  }
  return result;
}

uint64_t sub_1A5580798(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001A5739B10 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61506D6F74737563 && a2 == 0xED000064616F6C79)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A55808AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43747065636361 && a2 == 0xED0000747865746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A55809DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x747065636361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E696C636564 && a2 == 0xE700000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x707954646578696DLL && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A5580B94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SFTempPairingStateUpdate.isNearbyDeviceClose.getter()
{
  return *v0;
}

uint64_t SFTempPairingStateUpdate.isNearbyDeviceClose.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SFTempPairingStateUpdate.isNearbyDeviceClose.modify())()
{
  return nullsub_1;
}

uint64_t SFTempPairingStateUpdate.nearbyDeviceNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SFTempPairingStateUpdate.nearbyDeviceNames.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SFTempPairingStateUpdate.nearbyDeviceNames.modify())()
{
  return nullsub_1;
}

uint64_t SFTempPairingStateUpdate.connectedDeviceNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SFTempPairingStateUpdate.connectedDeviceNames.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SFTempPairingStateUpdate.connectedDeviceNames.modify())()
{
  return nullsub_1;
}

uint64_t SFTempPairingStateUpdate.connectionState.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t SFTempPairingStateUpdate.connectionState.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*SFTempPairingStateUpdate.connectionState.modify())()
{
  return nullsub_1;
}

uint64_t SFTempPairingStateUpdate.sharingName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFTempPairingStateUpdate.sharingName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*SFTempPairingStateUpdate.sharingName.modify())()
{
  return nullsub_1;
}

void SFTempPairingStateUpdate.init()(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
}

unint64_t sub_1A5580DA4(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x697463656E6E6F63;
      break;
    case 4:
      unint64_t result = 0x4E676E6972616873;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A5580E74()
{
  return sub_1A5580DA4(*v0);
}

uint64_t sub_1A5580E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A558217C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5580EA4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A5580EB0(uint64_t a1)
{
  unint64_t v2 = sub_1A558119C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5580EEC(uint64_t a1)
{
  unint64_t v2 = sub_1A558119C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFTempPairingStateUpdate.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFE8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v14 = v1[2];
  uint64_t v15 = v8;
  uint64_t v9 = v1[3];
  v12[1] = v1[4];
  uint64_t v13 = v9;
  v12[0] = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A558119C();
  sub_1A56D61D8();
  LOBYTE(v17) = 0;
  sub_1A56D5DF8();
  if (!v2)
  {
    uint64_t v10 = v14;
    uint64_t v17 = v15;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C528);
    sub_1A54E4228(&qword_1E966BFE0);
    sub_1A56D5E38();
    uint64_t v17 = v10;
    char v16 = 2;
    sub_1A56D5E38();
    uint64_t v17 = v13;
    char v16 = 3;
    sub_1A55811F0();
    sub_1A56D5E38();
    LOBYTE(v17) = 4;
    sub_1A56D5DE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A558119C()
{
  unint64_t result = qword_1E966C500;
  if (!qword_1E966C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C500);
  }
  return result;
}

unint64_t sub_1A55811F0()
{
  unint64_t result = qword_1E966BFD8;
  if (!qword_1E966BFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966BFD8);
  }
  return result;
}

uint64_t SFTempPairingStateUpdate.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A558119C();
  sub_1A56D61A8();
  if (!v2)
  {
    LOBYTE(v21) = 0;
    int v9 = sub_1A56D5D08();
    uint64_t v19 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C528);
    char v20 = 1;
    sub_1A54E4228(&qword_1E966BFA0);
    sub_1A56D5D48();
    int v18 = v9;
    uint64_t v11 = v21;
    char v20 = 2;
    swift_bridgeObjectRetain();
    sub_1A56D5D48();
    uint64_t v12 = v21;
    char v20 = 3;
    sub_1A55815B0();
    swift_bridgeObjectRetain();
    sub_1A56D5D48();
    uint64_t v17 = v21;
    LOBYTE(v21) = 4;
    uint64_t v13 = sub_1A56D5CF8();
    uint64_t v15 = v14;
    v18 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v16 = v19;
    *uint64_t v19 = v18;
    v16[1] = v11;
    v16[2] = v12;
    v16[3] = v17;
    v16[4] = v13;
    v16[5] = v15;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A55815B0()
{
  unint64_t result = qword_1E966BF58;
  if (!qword_1E966BF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966BF58);
  }
  return result;
}

uint64_t sub_1A5581604@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SFTempPairingStateUpdate.init(from:)(a1, a2);
}

uint64_t sub_1A558161C(void *a1)
{
  return SFTempPairingStateUpdate.encode(to:)(a1);
}

uint64_t SFTempPairingSenderStateUpdate.nearbyDeviceCount.getter()
{
  return *(void *)v0;
}

uint64_t SFTempPairingSenderStateUpdate.nearbyDeviceCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*SFTempPairingSenderStateUpdate.nearbyDeviceCount.modify())()
{
  return nullsub_1;
}

Sharing::SFTempPairingSenderStateUpdate __swiftcall SFTempPairingSenderStateUpdate.init()()
{
  *uint64_t v0 = 0;
  return result;
}

unint64_t sub_1A558166C()
{
  return 0xD000000000000011;
}

uint64_t sub_1A5581688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55823C0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A55816B4(uint64_t a1)
{
  unint64_t v2 = sub_1A5581860();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55816F0(uint64_t a1)
{
  unint64_t v2 = sub_1A5581860();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFTempPairingSenderStateUpdate.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671CC0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5581860();
  sub_1A56D61D8();
  sub_1A56D5E18();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A5581860()
{
  unint64_t result = qword_1E9671CC8;
  if (!qword_1E9671CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CC8);
  }
  return result;
}

uint64_t SFTempPairingSenderStateUpdate.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671CD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5581860();
  sub_1A56D61A8();
  if (!v2)
  {
    uint64_t v9 = sub_1A56D5D28();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1A5581A04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SFTempPairingSenderStateUpdate.init(from:)(a1, a2);
}

uint64_t sub_1A5581A1C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671CC0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5581860();
  sub_1A56D61D8();
  sub_1A56D5E18();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t destroy for SFTempPairingStateUpdate()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SFTempPairingStateUpdate(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SFTempPairingStateUpdate(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SFTempPairingStateUpdate(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SFTempPairingStateUpdate()
{
  return &type metadata for SFTempPairingStateUpdate;
}

ValueMetadata *type metadata accessor for SFTempPairingSenderStateUpdate()
{
  return &type metadata for SFTempPairingSenderStateUpdate;
}

unsigned char *storeEnumTagSinglePayload for SFTempPairingSenderStateUpdate.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A5581DA0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFTempPairingSenderStateUpdate.CodingKeys()
{
  return &type metadata for SFTempPairingSenderStateUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SFTempPairingStateUpdate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SFTempPairingStateUpdate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A5581F34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFTempPairingStateUpdate.CodingKeys()
{
  return &type metadata for SFTempPairingStateUpdate.CodingKeys;
}

unint64_t sub_1A5581F70()
{
  unint64_t result = qword_1E9671CD8;
  if (!qword_1E9671CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CD8);
  }
  return result;
}

unint64_t sub_1A5581FC8()
{
  unint64_t result = qword_1E9671CE0;
  if (!qword_1E9671CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CE0);
  }
  return result;
}

unint64_t sub_1A5582020()
{
  unint64_t result = qword_1E9671CE8;
  if (!qword_1E9671CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CE8);
  }
  return result;
}

unint64_t sub_1A5582078()
{
  unint64_t result = qword_1E9671CF0;
  if (!qword_1E9671CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671CF0);
  }
  return result;
}

unint64_t sub_1A55820D0()
{
  unint64_t result = qword_1E966C510;
  if (!qword_1E966C510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C510);
  }
  return result;
}

unint64_t sub_1A5582128()
{
  unint64_t result = qword_1E966C508;
  if (!qword_1E966C508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C508);
  }
  return result;
}

uint64_t sub_1A558217C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001A5739B30 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A5739B50 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A5739B70 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEF65746174536E6FLL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4E676E6972616873 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A55823C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001A5739B90)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A5582448()
{
  uint64_t v0 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v0, qword_1E9671CF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9671CF8);
  return sub_1A56D4D88();
}

BOOL static SFProximityHandoffUIClientError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SFProximityHandoffUIClientError.hash(into:)()
{
  return sub_1A56D60C8();
}

uint64_t SFProximityHandoffUIClientError.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A5582550@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  char v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_invalidationHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    BOOL v7 = sub_1A558454C;
  }
  else
  {
    BOOL v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1A5572C20(v4);
}

uint64_t sub_1A55825F0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1A5584544;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  BOOL v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_invalidationHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *BOOL v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1A5572C20(v3);
  return sub_1A54F5EA8(v8);
}

uint64_t SFProximityHandoffUIClient.invalidationHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_invalidationHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1A5572C20(*v1);
  return v2;
}

uint64_t SFProximityHandoffUIClient.invalidationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_invalidationHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_1A54F5EA8(v6);
}

uint64_t (*SFProximityHandoffUIClient.invalidationHandler.modify())()
{
  return j__swift_endAccess;
}

id sub_1A55827D4()
{
  uint64_t v1 = OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient____lazy_storage___interface;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient____lazy_storage___interface);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient____lazy_storage___interface);
  }
  else
  {
    id v4 = sub_1A558422C();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id SFProximityHandoffUIClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SFProximityHandoffUIClient.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_1A56D57F8();
  uint64_t v1 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1A56D57E8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1A56D4F78();
  MEMORY[0x1F4188790](v5 - 8);
  id v6 = &v0[OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_invalidationHandler];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_queue;
  sub_1A5584030(0, (unint64_t *)&qword_1E966C470);
  BOOL v7 = v0;
  sub_1A56D4F48();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1A5582AEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C450);
  sub_1A5582B44();
  sub_1A56D59A8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v10);
  *(void *)&v0[v9] = sub_1A56D5828();
  *(void *)&v7[OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_connection] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient____lazy_storage___interface] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_proximityHandoffUIServer] = 0;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

unint64_t sub_1A5582AEC()
{
  unint64_t result = qword_1E966C468;
  if (!qword_1E966C468)
  {
    sub_1A56D57E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C468);
  }
  return result;
}

unint64_t sub_1A5582B44()
{
  unint64_t result = qword_1E966C458;
  if (!qword_1E966C458)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C458);
  }
  return result;
}

id SFProximityHandoffUIClient.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1A5582C0C();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1A5582C0C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_connection;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_connection);
  if (v2)
  {
    uint64_t v3 = v0;
    uint64_t v4 = qword_1E9670310;
    id v5 = v2;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1A56D4D98();
    __swift_project_value_buffer(v6, (uint64_t)qword_1E9671CF8);
    BOOL v7 = sub_1A56D4D78();
    os_log_type_t v8 = sub_1A56D57D8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1A5389000, v7, v8, "ProximityHandoffUIClient: Invalidating connection", v9, 2u);
      MEMORY[0x1A626CE20](v9, -1, -1);
    }

    uint64_t v10 = *(void **)(v3 + v1);
    *(void *)(v3 + v1) = 0;

    uint64_t v11 = (void (**)(uint64_t))(v3 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_invalidationHandler);
    swift_beginAccess();
    objc_super v12 = *v11;
    if (*v11)
    {
      uint64_t v13 = swift_retain();
      v12(v13);
      sub_1A54F5EA8((uint64_t)v12);
    }
    objc_msgSend(v5, sel_invalidate);
  }
  else
  {
    if (qword_1E9670310 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1A56D4D98();
    __swift_project_value_buffer(v14, (uint64_t)qword_1E9671CF8);
    oslog = sub_1A56D4D78();
    os_log_type_t v15 = sub_1A56D57A8();
    if (os_log_type_enabled(oslog, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v16 = 0;
      _os_log_impl(&dword_1A5389000, oslog, v15, "XPC Connection not available, skipping end.", v16, 2u);
      MEMORY[0x1A626CE20](v16, -1, -1);
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SFProximityHandoffUIClient.activate()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1A56D5098();
  uint64_t v3 = (void *)sub_1A56D5098();
  id v4 = objc_msgSend(self, sel_endpointForMachName_service_instance_, v2, v3, 0);

  if (!v4)
  {
    if (qword_1E9670310 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1A56D4D98();
    __swift_project_value_buffer(v29, (uint64_t)qword_1E9671CF8);
    uint64_t v30 = sub_1A56D4D78();
    os_log_type_t v31 = sub_1A56D57B8();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl(&dword_1A5389000, v30, v31, "Could not find endpoint for AirDropUI launch angel. It may not be loaded.", v32, 2u);
      MEMORY[0x1A626CE20](v32, -1, -1);
    }

    sub_1A5583658();
    swift_allocError();
    *uint64_t v33 = 2;
    swift_willThrow();
    return;
  }
  if (qword_1E9670310 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A56D4D98();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E9671CF8);
  uint64_t v6 = sub_1A56D4D78();
  os_log_type_t v7 = sub_1A56D57A8();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl(&dword_1A5389000, v6, v7, "ProximityHandoffUIClient: endpoint created!", v8, 2u);
    MEMORY[0x1A626CE20](v8, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_connectionWithEndpoint_, v4);
  if (!v9)
  {
LABEL_19:
    uint64_t v34 = sub_1A56D4D78();
    os_log_type_t v35 = sub_1A56D57B8();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl(&dword_1A5389000, v34, v35, "Could not create a connection with the AirDropUI endpoint", v36, 2u);
      MEMORY[0x1A626CE20](v36, -1, -1);
    }

    sub_1A5583658();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();

    return;
  }
  uint64_t v10 = v9;
  aBlock[7] = &unk_1EFA399D0;
  uint64_t v11 = swift_dynamicCastObjCProtocolConditional();
  if (!v11)
  {

    goto LABEL_19;
  }
  objc_super v12 = (void *)v11;
  uint64_t v13 = sub_1A56D4D78();
  os_log_type_t v14 = sub_1A56D57A8();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v15 = 0;
    _os_log_impl(&dword_1A5389000, v13, v14, "ProximityHandoffUIClient: connection created", v15, 2u);
    MEMORY[0x1A626CE20](v15, -1, -1);
  }

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A5583FD8;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_1A5583FF0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5583C8C;
  aBlock[3] = &block_descriptor_3;
  int v18 = _Block_copy(aBlock);
  uint64_t v19 = v1;
  swift_retain();
  id v20 = v10;
  swift_release();
  objc_msgSend(v12, sel_configureConnection_, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v18)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = *(void **)&v19[OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_connection];
    *(void *)&v19[OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_connection] = v12;
    id v39 = v20;

    objc_msgSend(v12, sel_activate);
    uint64_t v22 = (void *)sub_1A56D5098();
    unint64_t v23 = (void *)sub_1A56D5098();
    id v24 = objc_msgSend(self, sel_attributeWithDomain_name_, v22, v23);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DA0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1A56F1BD0;
    *(void *)(v25 + 32) = v24;
    *(void *)&long long v41 = v25;
    sub_1A56D5378();
    sub_1A5584030(0, &qword_1E9671DA8);
    id v26 = v24;
    uint64_t v27 = (void *)sub_1A56D5348();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v12, sel_remoteTargetWithLaunchingAssertionAttributes_, v27);

    if (v28)
    {
      sub_1A56D5968();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
    sub_1A54E3E90((uint64_t)&v41, (uint64_t)aBlock);
    sub_1A553E364((uint64_t)aBlock, (uint64_t)&v41);
    if (*((void *)&v42 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DB0);
      if (swift_dynamicCast())
      {

        sub_1A553E2C0((uint64_t)aBlock);
        *(void *)&v19[OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_proximityHandoffUIServer] = v40;
        swift_release();
        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      sub_1A553E2C0((uint64_t)&v41);
    }
    sub_1A5583658();
    swift_allocError();
    *long long v38 = 1;
    swift_willThrow();

    sub_1A553E2C0((uint64_t)aBlock);
    swift_release();
  }
}

unint64_t sub_1A5583658()
{
  unint64_t result = qword_1E9671D38;
  if (!qword_1E9671D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671D38);
  }
  return result;
}

id sub_1A55836AC(void *a1, uint64_t a2)
{
  if (qword_1E9670310 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1A56D4D98();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E9671CF8);
  uint64_t v5 = sub_1A56D4D78();
  os_log_type_t v6 = sub_1A56D57A8();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v7 = 0;
    _os_log_impl(&dword_1A5389000, v5, v6, "ProximityHandoffUIClient: configuring session...", v7, 2u);
    MEMORY[0x1A626CE20](v7, -1, -1);
  }

  os_log_type_t v8 = (void *)sub_1A56D5098();
  objc_msgSend(a1, sel_setName_, v8);

  id v9 = objc_msgSend(self, sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  id v10 = sub_1A55827D4();
  objc_msgSend(a1, sel_setInterface_, v10);

  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  uint64_t v21 = sub_1A5583A24;
  uint64_t v22 = 0;
  uint64_t v17 = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1A5583B0C;
  id v20 = &block_descriptor_30;
  uint64_t v11 = _Block_copy(&v17);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = sub_1A558458C;
  uint64_t v22 = v12;
  uint64_t v17 = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1A5583B0C;
  id v20 = &block_descriptor_36;
  uint64_t v13 = _Block_copy(&v17);
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v13);
  _Block_release(v13);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = sub_1A55845B0;
  uint64_t v22 = v14;
  uint64_t v17 = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_1A5583B0C;
  id v20 = &block_descriptor_40;
  os_log_type_t v15 = _Block_copy(&v17);
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v15);
  _Block_release(v15);
  return objc_msgSend(a1, sel_setTargetQueue_, *(void *)(a2 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_queue));
}

void sub_1A5583A24()
{
  if (qword_1E9670310 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1A56D4D98();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9671CF8);
  oslog = sub_1A56D4D78();
  os_log_type_t v1 = sub_1A56D57A8();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_1A5389000, oslog, v1, "ProximityHandoffUIClient: connection activated!", v2, 2u);
    MEMORY[0x1A626CE20](v2, -1, -1);
  }
}

void sub_1A5583B0C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1A5583B74(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4 = a2 + 16;
  if (qword_1E9670310 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A56D4D98();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E9671CF8);
  os_log_type_t v6 = sub_1A56D4D78();
  os_log_type_t v7 = sub_1A56D57A8();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl(&dword_1A5389000, v6, v7, a3, v8, 2u);
    MEMORY[0x1A626CE20](v8, -1, -1);
  }

  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1A626CEF0](v4);
  if (v9)
  {
    id v10 = (void *)v9;
    sub_1A5582C0C();
  }
}

uint64_t sub_1A5583C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

void SFProximityHandoffUIClient.registerForProximityHandoffInteractionUpdates(completion:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_proximityHandoffUIServer);
  if (v5)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    v11[4] = sub_1A558407C;
    v11[5] = v6;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    v11[2] = sub_1A5583E74;
    void v11[3] = &block_descriptor_9;
    os_log_type_t v7 = _Block_copy(v11);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_registerForProximityHandoffInteractionUpdatesWithCompletion_, v7);
    swift_unknownObjectRelease();
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  else
  {
    sub_1A5583658();
    uint64_t v9 = (void *)swift_allocError();
    *id v10 = 3;
    a1();
  }
}

void sub_1A5583E74(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  id v4 = a2;
  v3(a2);
}

void sub_1A5583F3C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_1A56D4948();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1A5583FA0()
{
  return swift_deallocObject();
}

id sub_1A5583FD8(void *a1)
{
  return sub_1A55836AC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A5583FE0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5583FF0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1A5584030(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1A558406C()
{
  return swift_deallocObject();
}

uint64_t sub_1A558407C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1A55840A8()
{
  unint64_t result = qword_1E9671DB8;
  if (!qword_1E9671DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9671DB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SFProximityHandoffUIClientError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55841D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoffUIClientError()
{
  return &type metadata for SFProximityHandoffUIClientError;
}

uint64_t type metadata accessor for SFProximityHandoffUIClient()
{
  return self;
}

id sub_1A558422C()
{
  uint64_t v0 = (void *)sub_1A56D5098();
  id v1 = objc_msgSend(self, sel_interfaceWithIdentifier_, v0);

  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_protocolForProtocol_, &unk_1EFA2F570);
  objc_msgSend(v1, sel_setServer_, v3);

  id v4 = objc_msgSend(v2, sel_protocolForProtocol_, &unk_1EFA2F5D0);
  objc_msgSend(v1, sel_setClient_, v4);

  objc_msgSend(v1, sel_setClientMessagingExpectation_, 1);
  return v1;
}

void sub_1A5584338(uint64_t a1, uint64_t a2)
{
  v10[2] = a2;
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC7Sharing26SFProximityHandoffUIClient_proximityHandoffUIServer);
  if (v2)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_1A55844F4;
    *(void *)(v3 + 24) = v10;
    aBlock[4] = sub_1A5584600;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A5583E74;
    aBlock[3] = &block_descriptor_21;
    id v4 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v2, sel_registerForProximityHandoffInteractionUpdatesWithCompletion_, v4);
    swift_unknownObjectRelease();
    _Block_release(v4);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  else
  {
    sub_1A5583658();
    os_log_type_t v7 = (void *)swift_allocError();
    *os_log_type_t v8 = 3;
    uint64_t v9 = (void *)sub_1A56D4948();
    (*(void (**)(uint64_t, void *))(a2 + 16))(a2, v9);
  }
}

void sub_1A55844F4(uint64_t a1)
{
  sub_1A5583F3C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1A55844FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A558450C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A5584544()
{
  return sub_1A5606D48(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A558454C()
{
  return sub_1A55DB2F8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A5584554()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1A558458C(uint64_t a1)
{
  sub_1A5583B74(a1, v1, "ProximityHandoffUIClient connection interrupted");
}

void sub_1A55845B0(uint64_t a1)
{
  sub_1A5583B74(a1, v1, "ProximityHandoffUIClient connection invalidated");
}

void *_SFXPCContainerRegistry.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[14] = sub_1A54F0AD0(MEMORY[0x1E4FBC860]);
  v0[15] = sub_1A54F0AD0(v1);
  v0[16] = sub_1A54F0AD0(v1);
  return v0;
}

void *_SFXPCContainerRegistry.init()()
{
  swift_defaultActor_initialize();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[14] = sub_1A54F0AD0(MEMORY[0x1E4FBC860]);
  v0[15] = sub_1A54F0AD0(v1);
  v0[16] = sub_1A54F0AD0(v1);
  return v0;
}

BOOL _SFXPCContainerRegistry.isEmpty.getter()
{
  swift_beginAccess();
  if (*(void *)(v0[14] + 16)) {
    return 0;
  }
  swift_beginAccess();
  if (*(void *)(v0[15] + 16)) {
    return 0;
  }
  swift_beginAccess();
  return *(void *)(v0[16] + 16) == 0;
}

uint64_t _SFXPCContainerRegistry.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  long long v93 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  os_log_type_t v7 = (char *)&v89 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  id v10 = (char *)&v89 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v89 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v89 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v89 - v17;
  uint64_t v100 = 0xA3A736B636F6C42;
  unint64_t v101 = 0xE800000000000000;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v90 = v0;
  if (v20)
  {
    uint64_t v21 = *(void *)(v19 + 64);
    int64_t v91 = v19 + 64;
    uint64_t v22 = 1 << *(unsigned char *)(v19 + 32);
    uint64_t v23 = -1;
    if (v22 < 64) {
      uint64_t v23 = ~(-1 << v22);
    }
    unint64_t v24 = v23 & v21;
    int64_t v92 = (unint64_t)(v22 + 63) >> 6;
    int64_t v89 = v92 - 1;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v26 = 0;
    if (!v24) {
      goto LABEL_9;
    }
LABEL_7:
    unint64_t v28 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    unint64_t v29 = v28 | (v26 << 6);
LABEL_8:
    uint64_t v30 = *(void *)(v19 + 48);
    uint64_t v31 = sub_1A56D4CB8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v16, v30 + *(void *)(*(void *)(v31 - 8) + 72) * v29, v31);
    unint64_t v32 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v29);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
    uint64_t v34 = &v16[*(int *)(v33 + 48)];
    uint64_t v35 = *v32;
    uint64_t v36 = v32[1];
    *(void *)uint64_t v34 = v35;
    *((void *)v34 + 1) = v36;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v16, 0, 1, v33);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1A5585308((uint64_t)v16, (uint64_t)v18);
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v18, 1, v41) == 1) {
        break;
      }
      uint64_t v98 = 9;
      unint64_t v99 = 0xE100000000000000;
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_1A56D4CB8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v18, v27);
      if (v24) {
        goto LABEL_7;
      }
LABEL_9:
      int64_t v37 = v26 + 1;
      if (__OFADD__(v26, 1))
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (v37 < v92)
      {
        unint64_t v38 = *(void *)(v91 + 8 * v37);
        if (v38) {
          goto LABEL_12;
        }
        int64_t v39 = v26 + 2;
        ++v26;
        if (v37 + 1 < v92)
        {
          unint64_t v38 = *(void *)(v91 + 8 * v39);
          if (v38) {
            goto LABEL_15;
          }
          int64_t v26 = v37 + 1;
          if (v37 + 2 < v92)
          {
            unint64_t v38 = *(void *)(v91 + 8 * (v37 + 2));
            if (v38)
            {
              v37 += 2;
              goto LABEL_12;
            }
            int64_t v39 = v37 + 3;
            int64_t v26 = v37 + 2;
            if (v37 + 3 < v92)
            {
              unint64_t v38 = *(void *)(v91 + 8 * v39);
              if (v38)
              {
LABEL_15:
                int64_t v37 = v39;
LABEL_12:
                unint64_t v24 = (v38 - 1) & v38;
                unint64_t v29 = __clz(__rbit64(v38)) + (v37 << 6);
                int64_t v26 = v37;
                goto LABEL_8;
              }
              while (1)
              {
                int64_t v37 = v39 + 1;
                if (__OFADD__(v39, 1)) {
                  goto LABEL_92;
                }
                if (v37 >= v92) {
                  break;
                }
                unint64_t v38 = *(void *)(v91 + 8 * v37);
                ++v39;
                if (v38) {
                  goto LABEL_12;
                }
              }
              int64_t v26 = v89;
            }
          }
        }
      }
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v16, 1, 1, v40);
      unint64_t v24 = 0;
    }
    swift_release();
    uint64_t v1 = v90;
  }
  else
  {
    sub_1A56D51C8();
  }
  sub_1A56D51C8();
  swift_beginAccess();
  uint64_t v42 = *(void *)(v1 + 120);
  if (*(void *)(v42 + 16))
  {
    uint64_t v43 = *(void *)(v42 + 64);
    int64_t v92 = v42 + 64;
    uint64_t v44 = 1 << *(unsigned char *)(v42 + 32);
    uint64_t v45 = -1;
    if (v44 < 64) {
      uint64_t v45 = ~(-1 << v44);
    }
    unint64_t v46 = v45 & v43;
    int64_t v47 = (unint64_t)(v44 + 63) >> 6;
    int64_t v91 = v47 - 1;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v48 = 0;
    if (!v46) {
      goto LABEL_38;
    }
LABEL_36:
    unint64_t v50 = __clz(__rbit64(v46));
    v46 &= v46 - 1;
    unint64_t v51 = v50 | (v48 << 6);
LABEL_37:
    uint64_t v52 = *(void *)(v42 + 48);
    uint64_t v53 = sub_1A56D4CB8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v10, v52 + *(void *)(*(void *)(v53 - 8) + 72) * v51, v53);
    uint64_t v54 = (uint64_t *)(*(void *)(v42 + 56) + 16 * v51);
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
    uint64_t v56 = &v10[*(int *)(v55 + 48)];
    uint64_t v57 = *v54;
    uint64_t v58 = v54[1];
    *(void *)uint64_t v56 = v57;
    *((void *)v56 + 1) = v58;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v10, 0, 1, v55);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1A5585308((uint64_t)v10, (uint64_t)v13);
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v13, 1, v63) == 1) {
        break;
      }
      uint64_t v96 = 9;
      unint64_t v97 = 0xE100000000000000;
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_1A56D4CB8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v13, v49);
      if (v46) {
        goto LABEL_36;
      }
LABEL_38:
      int64_t v59 = v48 + 1;
      if (__OFADD__(v48, 1)) {
        goto LABEL_90;
      }
      if (v59 < v47)
      {
        unint64_t v60 = *(void *)(v92 + 8 * v59);
        if (v60) {
          goto LABEL_41;
        }
        int64_t v61 = v48 + 2;
        ++v48;
        if (v59 + 1 < v47)
        {
          unint64_t v60 = *(void *)(v92 + 8 * v61);
          if (v60) {
            goto LABEL_44;
          }
          int64_t v48 = v59 + 1;
          if (v59 + 2 < v47)
          {
            unint64_t v60 = *(void *)(v92 + 8 * (v59 + 2));
            if (v60)
            {
              v59 += 2;
              goto LABEL_41;
            }
            int64_t v61 = v59 + 3;
            int64_t v48 = v59 + 2;
            if (v59 + 3 < v47)
            {
              unint64_t v60 = *(void *)(v92 + 8 * v61);
              if (v60)
              {
LABEL_44:
                int64_t v59 = v61;
LABEL_41:
                unint64_t v46 = (v60 - 1) & v60;
                unint64_t v51 = __clz(__rbit64(v60)) + (v59 << 6);
                int64_t v48 = v59;
                goto LABEL_37;
              }
              while (1)
              {
                int64_t v59 = v61 + 1;
                if (__OFADD__(v61, 1)) {
                  goto LABEL_93;
                }
                if (v59 >= v47) {
                  break;
                }
                unint64_t v60 = *(void *)(v92 + 8 * v59);
                ++v61;
                if (v60) {
                  goto LABEL_41;
                }
              }
              int64_t v48 = v91;
            }
          }
        }
      }
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v10, 1, 1, v62);
      unint64_t v46 = 0;
    }
    swift_release();
    uint64_t v1 = v90;
  }
  else
  {
    sub_1A56D51C8();
  }
  sub_1A56D51C8();
  swift_beginAccess();
  uint64_t v64 = *(void *)(v1 + 128);
  if (!*(void *)(v64 + 16))
  {
    sub_1A56D51C8();
    return v100;
  }
  uint64_t v65 = *(void *)(v64 + 64);
  int64_t v92 = v64 + 64;
  uint64_t v66 = 1 << *(unsigned char *)(v64 + 32);
  uint64_t v67 = -1;
  if (v66 < 64) {
    uint64_t v67 = ~(-1 << v66);
  }
  unint64_t v68 = v67 & v65;
  int64_t v69 = (unint64_t)(v66 + 63) >> 6;
  int64_t v91 = v69 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v70 = 0;
  if (!v68) {
    goto LABEL_67;
  }
LABEL_65:
  unint64_t v72 = __clz(__rbit64(v68));
  v68 &= v68 - 1;
  unint64_t v73 = v72 | (v70 << 6);
  while (2)
  {
    uint64_t v74 = *(void *)(v64 + 48);
    uint64_t v75 = sub_1A56D4CB8();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = v74 + *(void *)(v76 + 72) * v73;
    uint64_t v78 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v93, v77, v75);
    uint64_t v79 = (uint64_t *)(*(void *)(v64 + 56) + 16 * v73);
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
    uint64_t v81 = (void *)(v78 + *(int *)(v80 + 48));
    uint64_t v82 = *v79;
    uint64_t v83 = v79[1];
    void *v81 = v82;
    v81[1] = v83;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v78, 0, 1, v80);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1A5585308(v78, (uint64_t)v7);
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48))(v7, 1, v88) == 1)
      {
        swift_release();
        return v100;
      }
      uint64_t v94 = 9;
      unint64_t v95 = 0xE100000000000000;
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      sub_1A56D51C8();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      uint64_t v71 = sub_1A56D4CB8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v71 - 8) + 8))(v7, v71);
      if (v68) {
        goto LABEL_65;
      }
LABEL_67:
      int64_t v84 = v70 + 1;
      if (__OFADD__(v70, 1)) {
        goto LABEL_91;
      }
      uint64_t v78 = (uint64_t)v93;
      if (v84 < v69)
      {
        unint64_t v85 = *(void *)(v92 + 8 * v84);
        if (v85) {
          goto LABEL_70;
        }
        int64_t v86 = v70 + 2;
        ++v70;
        if (v84 + 1 < v69)
        {
          unint64_t v85 = *(void *)(v92 + 8 * v86);
          if (v85) {
            goto LABEL_73;
          }
          int64_t v70 = v84 + 1;
          if (v84 + 2 < v69)
          {
            unint64_t v85 = *(void *)(v92 + 8 * (v84 + 2));
            if (v85)
            {
              v84 += 2;
              goto LABEL_70;
            }
            int64_t v86 = v84 + 3;
            int64_t v70 = v84 + 2;
            if (v84 + 3 < v69) {
              break;
            }
          }
        }
      }
LABEL_84:
      uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v78, 1, 1, v87);
      unint64_t v68 = 0;
    }
    unint64_t v85 = *(void *)(v92 + 8 * v86);
    if (v85)
    {
LABEL_73:
      int64_t v84 = v86;
LABEL_70:
      unint64_t v68 = (v85 - 1) & v85;
      unint64_t v73 = __clz(__rbit64(v85)) + (v84 << 6);
      int64_t v70 = v84;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v84 = v86 + 1;
    if (__OFADD__(v86, 1)) {
      break;
    }
    if (v84 >= v69)
    {
      int64_t v70 = v91;
      goto LABEL_84;
    }
    unint64_t v85 = *(void *)(v92 + 8 * v84);
    ++v86;
    if (v85) {
      goto LABEL_70;
    }
  }
LABEL_94:
  __break(1u);
  return result;
}

uint64_t sub_1A5585308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5585370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  void v7[6] = a5;
  uint64_t v9 = sub_1A56D4CB8();
  v7[9] = v9;
  v7[10] = *(void *)(v9 - 8);
  v7[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5585438, a4, 0);
}

uint64_t sub_1A5585438()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[6], v3);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v6 + 112);
  *(void *)(v6 + 112) = 0x8000000000000000;
  sub_1A55E5F9C(v5, v4, v1, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 112) = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A5585564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  void v7[6] = a5;
  uint64_t v9 = sub_1A56D4CB8();
  v7[9] = v9;
  v7[10] = *(void *)(v9 - 8);
  v7[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A558562C, a4, 0);
}

uint64_t sub_1A558562C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[6], v3);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v6 + 120);
  *(void *)(v6 + 120) = 0x8000000000000000;
  sub_1A55E5F9C(v5, v4, v1, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 120) = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A5585758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  void v7[6] = a5;
  uint64_t v9 = sub_1A56D4CB8();
  v7[9] = v9;
  v7[10] = *(void *)(v9 - 8);
  v7[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5585820, a4, 0);
}

uint64_t sub_1A5585820()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[6], v3);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(v6 + 128);
  *(void *)(v6 + 128) = 0x8000000000000000;
  sub_1A55E5F9C(v5, v4, v1, isUniquelyReferenced_nonNull_native);
  *(void *)(v6 + 128) = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1A558594C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x1F4188298](sub_1A558596C, a4, 0);
}

uint64_t sub_1A558596C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_beginAccess();
  sub_1A553D7F8(v1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1A553D7F8(v1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1A553D7F8(v1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t _SFXPCContainerRegistry.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t _SFXPCContainerRegistry.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t _SFXPCContainerRegistry.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1A5585AFC()
{
  return v0;
}

uint64_t type metadata accessor for _SFXPCContainerRegistry()
{
  return self;
}

uint64_t method lookup function for _SFXPCContainerRegistry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SFXPCContainerRegistry);
}

uint64_t dispatch thunk of _SFXPCContainerRegistry.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1A5585B58@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t Deque._UnsafeHandle._elements.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 Deque._UnsafeHandle.header.getter@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v2 = a1[1].n128_u64[0];
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = v2;
  return result;
}

uint64_t Deque._UnsafeHandle.capacity.getter(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t Deque._UnsafeHandle.count.getter(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t Deque._UnsafeHandle.count.setter(uint64_t result, uint64_t a2)
{
  *(void *)(a2 + 8) = result;
  return result;
}

void *(*Deque._UnsafeHandle.count.modify(void *a1, uint64_t a2))(void *result)
{
  *a1 = *(void *)(a2 + 8);
  a1[1] = a2;
  return sub_1A5585E6C;
}

void *sub_1A5585E6C(void *result)
{
  *(void *)(result[1] + 8) = *result;
  return result;
}

uint64_t Deque._UnsafeHandle.startSlot.getter(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t Deque._UnsafeHandle.startSlot.setter(uint64_t result, uint64_t a2)
{
  *(void *)(a2 + 16) = result;
  return result;
}

void *(*Deque._UnsafeHandle.startSlot.modify(void *a1, uint64_t a2))(void *result)
{
  *a1 = *(void *)(a2 + 16);
  a1[1] = a2;
  return sub_1A5585EB4;
}

void *sub_1A5585EB4(void *result)
{
  *(void *)(result[1] + 16) = *result;
  return result;
}

uint64_t Deque._UnsafeHandle.ptr(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a3 + *(void *)(*(void *)(a4 - 8) + 72) * a1;
}

uint64_t Deque._UnsafeHandle.mutableBuffer.getter()
{
  return sub_1A56D58B8();
}

uint64_t Deque._UnsafeHandle.buffer(for:)(uint64_t result, uint64_t a2)
{
  if (!__OFSUB__(a2, result)) {
    return sub_1A56D5068();
  }
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.mutableBuffer(for:)(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    sub_1A56D5068();
    return sub_1A56D58D8();
  }
  return result;
}

uint64_t Deque._UnsafeHandle.limSlot.getter(uint64_t a1)
{
  return *(void *)a1;
}

Sharing::_DequeSlot __swiftcall Deque._UnsafeHandle.slot(after:)(Sharing::_DequeSlot after)
{
  if (__OFADD__(after.position, 1))
  {
    __break(1u);
  }
  else if (after.position + 1 >= *v1)
  {
    return 0;
  }
  else
  {
    ++after.position;
  }
  return after;
}

Sharing::_DequeSlot __swiftcall Deque._UnsafeHandle.slot(before:)(Sharing::_DequeSlot before)
{
  if (before.position)
  {
    BOOL v2 = __OFSUB__(before.position, 1);
    result.position = before.position - 1;
    if (!v2) {
      return result;
    }
    __break(1u);
  }
  result.position = *v1 - 1;
  if (__OFSUB__(*v1, 1)) {
    __break(1u);
  }
  return result;
}

Sharing::_DequeSlot __swiftcall Deque._UnsafeHandle.slot(_:offsetBy:)(Sharing::_DequeSlot _, Swift::Int offsetBy)
{
  BOOL v4 = __OFADD__(_.position, offsetBy);
  result.position = _.position + offsetBy;
  if (v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (offsetBy < 0)
  {
LABEL_7:
    if ((result.position & 0x8000000000000000) == 0) {
      return result;
    }
    BOOL v4 = __OFADD__(result.position, *v2);
    result.position += *v2;
    if (!v4) {
      return result;
    }
LABEL_11:
    __break(1u);
    return result;
  }
  BOOL v4 = __OFSUB__(result.position, *v2);
  if (result.position >= *v2)
  {
    result.position -= *v2;
    if (v4)
    {
      __break(1u);
      goto LABEL_7;
    }
  }
  return result;
}

Sharing::_DequeSlot Deque._UnsafeHandle.endSlot.getter(Sharing::_DequeSlot *a1)
{
  return Deque._UnsafeHandle.slot(_:offsetBy:)(a1[2], a1[1].position);
}

Sharing::_DequeSlot __swiftcall Deque._UnsafeHandle.slot(forOffset:)(Swift::Int forOffset)
{
  Swift::Int v2 = v1[2] + forOffset;
  Swift::Int v3 = *v1;
  if (v2 < *v1) {
    Swift::Int v3 = 0;
  }
  return (Sharing::_DequeSlot)(v2 - v3);
}

void *Deque._UnsafeHandle.segments()@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = result[2];
  uint64_t v4 = *result - v3;
  if (__OFSUB__(*result, v3))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result[1];
    if (v4 >= v5)
    {
      Sharing::_DequeSlot result = (void *)_UnsafeWrappedBuffer.init(start:count:)((uint64_t)v8);
      goto LABEL_6;
    }
    if (!__OFSUB__(v5, v4))
    {
      Sharing::_DequeSlot result = (void *)_UnsafeWrappedBuffer.init(first:count:second:count:)((uint64_t)v8);
LABEL_6:
      char v6 = v9;
      long long v7 = v8[1];
      *(_OWORD *)a2 = v8[0];
      *(_OWORD *)(a2 + 16) = v7;
      *(unsigned char *)(a2 + 32) = v6;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.segments(forOffsets:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = v5 + result;
  uint64_t v7 = *a3;
  if (v5 + result >= *a3) {
    uint64_t v8 = *a3;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v5 + a2;
  if (v9 >= v7) {
    uint64_t v10 = *a3;
  }
  else {
    uint64_t v10 = 0;
  }
  BOOL v11 = __OFSUB__(a2, result);
  uint64_t v12 = a2 - result;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = v6 - v8;
    if (!v12 || v13 < v9 - v10)
    {
      Sharing::_DequeSlot result = _UnsafeWrappedBuffer.init(start:count:)((uint64_t)v16);
      goto LABEL_13;
    }
    if (!__OFSUB__(v7, v13))
    {
      Sharing::_DequeSlot result = _UnsafeWrappedBuffer.init(first:count:second:count:)((uint64_t)v16);
LABEL_13:
      char v14 = v17;
      long long v15 = v16[1];
      *(_OWORD *)a4 = v16[0];
      *(_OWORD *)(a4 + 16) = v15;
      *(unsigned char *)(a4 + 32) = v14;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.mutableSegments()@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  Deque._UnsafeHandle.segments()(a1, (uint64_t)&v22);
  uint64_t v5 = sub_1A56D58D8();
  uint64_t v7 = v6;
  sub_1A56D5078();
  uint64_t v8 = sub_1A56D5898();
  uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v24, &v23, v8);
  v9((uint64_t *)v18, v24, v8);
  v17[2] = a2;
  uint64_t v10 = sub_1A56D58F8();
  uint64_t result = sub_1A5585B58((void (*)(char *, char *))sub_1A5589034, (uint64_t)v17, MEMORY[0x1E4FBC248], v10, v11, (uint64_t)&v19);
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  if (v20) {
    uint64_t v15 = v19;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v20) {
    char v16 = v21;
  }
  else {
    char v16 = 1;
  }
  if (!v21) {
    uint64_t v13 = v15;
  }
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v13;
  *(void *)(a3 + 24) = v14;
  *(unsigned char *)(a3 + 32) = v16;
  return result;
}

uint64_t Deque._UnsafeHandle.mutableSegments(forOffsets:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  Deque._UnsafeHandle.segments(forOffsets:)(a1, a2, a3, (uint64_t)&v24);
  uint64_t v7 = sub_1A56D58D8();
  uint64_t v9 = v8;
  sub_1A56D5078();
  uint64_t v10 = sub_1A56D5898();
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v26, &v25, v10);
  v11((uint64_t *)v20, v26, v10);
  v19[2] = a4;
  uint64_t v12 = sub_1A56D58F8();
  uint64_t result = sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v19, MEMORY[0x1E4FBC248], v12, v13, (uint64_t)&v21);
  uint64_t v15 = v21;
  uint64_t v16 = v22;
  if (v22) {
    uint64_t v17 = v21;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v22) {
    char v18 = v23;
  }
  else {
    char v18 = 1;
  }
  if (!v23) {
    uint64_t v15 = v17;
  }
  *(void *)a5 = v7;
  *(void *)(a5 + 8) = v9;
  *(void *)(a5 + 16) = v15;
  *(void *)(a5 + 24) = v16;
  *(unsigned char *)(a5 + 32) = v18;
  return result;
}

Sharing::_DequeSlot Deque._UnsafeHandle.availableSegments()@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  Swift::Int v5 = a1[1];
  Swift::Int v4 = a1[2];
  result.Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v4, v5).position;
  Swift::Int v7 = *a1;
  if (v5 >= *a1)
  {
    result.Swift::Int position = sub_1A56D58B8();
    goto LABEL_6;
  }
  if (result.position < v4)
  {
    if (!__OFSUB__(v4, result.position))
    {
      sub_1A56D5068();
      result.Swift::Int position = sub_1A56D58D8();
LABEL_6:
      Swift::Int position = result.position;
      uint64_t v10 = v8;
      Swift::Int v11 = 0;
      uint64_t v12 = 0;
      BOOL v13 = 1;
LABEL_13:
      *(void *)a2 = position;
      *(void *)(a2 + 8) = v10;
      *(void *)(a2 + 16) = v11;
      *(void *)(a2 + 24) = v12;
      *(unsigned char *)(a2 + 32) = v13;
      return result;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (v7 < result.position)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (__OFSUB__(v7, result.position))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1A56D5068();
  result.Swift::Int position = sub_1A56D58D8();
  uint64_t v10 = v14;
  if ((a1[2] & 0x8000000000000000) == 0)
  {
    Swift::Int position = result.position;
    sub_1A56D5068();
    result.Swift::Int position = sub_1A56D58D8();
    BOOL v13 = v12 == 0;
    if (v12) {
      Swift::Int v11 = result.position;
    }
    else {
      Swift::Int v11 = 0;
    }
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.initialize(at:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A558667C(a1, a2, a3, a4, a5, a6, MEMORY[0x1E4FBB0A8], MEMORY[0x1E4FBB6F0]);
}

uint64_t Deque._UnsafeHandle.moveInitialize(at:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A558667C(a1, a2, a3, a4, a5, a6, MEMORY[0x1E4FBB720], MEMORY[0x1E4FBB6F8]);
}

uint64_t sub_1A558667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a3 < 1) {
    return a1;
  }
  uint64_t result = a7(a2, a3, a6);
  if (result)
  {
    uint64_t result = a8(result, a3, a5 + *(void *)(*(void *)(a6 - 8) + 72) * a1, a6);
    BOOL v14 = __OFADD__(a1, a3);
    a1 += a3;
    if (!v14) {
      return a1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::tuple_source_Sharing__DequeSlot_target_Sharing__DequeSlot __swiftcall Deque._UnsafeHandle.move(from:to:count:)(Sharing::_DequeSlot from, Sharing::_DequeSlot to, Swift::Int count)
{
  if (count >= 1)
  {
    sub_1A56D5878();
    from.Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)(from, count).position;
    to.Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)(to, count).position;
  }
  Swift::Int position = from.position;
  Swift::Int v7 = to.position;
  result.target.Swift::Int position = v7;
  result.source.Swift::Int position = position;
  return result;
}

uint64_t Deque._UnsafeHandle.copyElements()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for _DequeBuffer();
  v12[14] = a1;
  v12[15] = a2;
  sub_1A56D5A88();
  swift_retain();
  uint64_t v6 = sub_1A56D5C18();
  uint64_t v7 = v6;
  if (*(uint64_t *)(a1 + 8) < 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v8 = MEMORY[0x1F4188790](v6);
    v12[8] = a3;
    v12[9] = a1;
    v12[10] = a2;
    MEMORY[0x1F4188790](v8);
    void v12[2] = a3;
    v12[3] = sub_1A558906C;
    v12[4] = v9;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A558908C, (uint64_t)v12, v7, (uint64_t)&type metadata for _DequeBufferHeader, a3, v10, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v13);
    swift_release();
  }
  return v7;
}

uint64_t sub_1A5586938(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  Deque._UnsafeHandle.segments()(a3, (uint64_t)v13);
  Deque._UnsafeHandle.initialize(at:from:)(a3[2], v13[0], v13[1], v8, a2, a5);
  sub_1A56D5078();
  uint64_t v9 = sub_1A56D5898();
  uint64_t v10 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v15, &v14, v9);
  uint64_t result = v10(v16, v15, v9);
  if ((v17 & 1) == 0) {
    return Deque._UnsafeHandle.initialize(at:from:)(0, v16[0], v16[1], v12, a2, a5);
  }
  return result;
}

uint64_t Deque._UnsafeHandle.copyElements(minimumCapacity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _DequeBuffer();
  v13[14] = a2;
  v13[15] = a3;
  sub_1A56D5A88();
  swift_retain();
  uint64_t v7 = sub_1A56D5C18();
  uint64_t v8 = v7;
  if (*(uint64_t *)(a2 + 8) < 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v9 = MEMORY[0x1F4188790](v7);
    v13[8] = a4;
    v13[9] = a2;
    v13[10] = a3;
    MEMORY[0x1F4188790](v9);
    uint64_t v13[2] = a4;
    v13[3] = sub_1A5589104;
    v13[4] = v10;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v13, v8, (uint64_t)&type metadata for _DequeBufferHeader, a4, v11, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v14);
    swift_release();
  }
  return v8;
}

uint64_t sub_1A5586BC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  Deque._UnsafeHandle.segments()(a3, (uint64_t)v13);
  uint64_t v8 = Deque._UnsafeHandle.initialize(at:from:)(0, v13[0], v13[1], v7, a2, a5);
  sub_1A56D5078();
  uint64_t v9 = sub_1A56D5898();
  uint64_t v10 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v15, &v14, v9);
  uint64_t result = v10(v16, v15, v9);
  if ((v17 & 1) == 0) {
    return Deque._UnsafeHandle.initialize(at:from:)(v8, v16[0], v16[1], v12, a2, a5);
  }
  return result;
}

uint64_t Deque._UnsafeHandle.moveElements(minimumCapacity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a2 + 8);
  type metadata accessor for _DequeBuffer();
  v14[14] = v7;
  sub_1A56D5A88();
  swift_retain();
  uint64_t v8 = sub_1A56D5C18();
  uint64_t v9 = v8;
  if (v7 < 1)
  {
    swift_release();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1F4188790](v8);
    v14[8] = a4;
    v14[9] = a2;
    v14[10] = a3;
    MEMORY[0x1F4188790](v10);
    v14[2] = a4;
    void v14[3] = sub_1A5589168;
    v14[4] = v11;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v14, v9, (uint64_t)&type metadata for _DequeBufferHeader, a4, v12, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v15);
    swift_release();
    *(void *)(a2 + 8) = 0;
  }
  return v9;
}

uint64_t sub_1A5586E5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  Deque._UnsafeHandle.segments()(a3, (uint64_t)&v21);
  sub_1A56D58D8();
  uint64_t v7 = v6;
  sub_1A56D5078();
  uint64_t v8 = sub_1A56D5898();
  uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v23, &v22, v8);
  v9((uint64_t *)v17, v23, v8);
  uint64_t v16[2] = a5;
  uint64_t v10 = sub_1A56D58F8();
  uint64_t result = sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v16, MEMORY[0x1E4FBC248], v10, v11, (uint64_t)&v18);
  uint64_t v13 = v19;
  if (v19) {
    char v14 = v20;
  }
  else {
    char v14 = 1;
  }
  if (v7 >= 1)
  {
    uint64_t result = sub_1A56D58A8();
    if (!result)
    {
      __break(1u);
      goto LABEL_15;
    }
    uint64_t result = sub_1A56D5878();
  }
  if (v13 < 1) {
    char v15 = 1;
  }
  else {
    char v15 = v14;
  }
  if ((v15 & 1) == 0)
  {
    uint64_t result = sub_1A56D58A8();
    if (result) {
      return sub_1A56D5878();
    }
LABEL_15:
    __break(1u);
  }
  return result;
}

Sharing::_DequeSlot Deque._UnsafeHandle.withUnsafeSegment<A>(startingAt:maximumCount:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, Sharing::_DequeSlot *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v38 = a10;
  uint64_t v36 = *(void *)(a10 - 8);
  uint64_t v37 = a1;
  uint64_t v14 = MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v21 = (char *)v35 - v20;
  Swift::Int v23 = *(void *)(v22 + 8);
  if (v23 <= v24) {
    goto LABEL_17;
  }
  uint64_t v16 = v18;
  v35[0] = v17;
  v35[1] = v19;
  result.Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)(a7[2], v23).position;
  Swift::Int v26 = a7[2].position + a2;
  Swift::Int position = a7->position;
  if (v26 >= a7->position) {
    Swift::Int v28 = a7->position;
  }
  else {
    Swift::Int v28 = 0;
  }
  Swift::Int v29 = v26 - v28;
  if (v29 < result.position) {
    Swift::Int position = result.position;
  }
  BOOL v30 = __OFSUB__(position, v29);
  Swift::Int v31 = position - v29;
  if (!v30)
  {
    uint64_t v32 = 0x7FFFFFFFFFFFFFFFLL;
    if ((v16 & 1) == 0) {
      uint64_t v32 = v35[0];
    }
    if (v31 >= v32) {
      Swift::Int v23 = v32;
    }
    else {
      Swift::Int v23 = v31;
    }
    uint64_t v33 = sub_1A56D5068();
    a5(v33);
    if (v10) {
      return (Sharing::_DequeSlot)v23;
    }
    BOOL v30 = __OFADD__(a2, v23);
    v23 += a2;
    if (!v30)
    {
LABEL_19:
      (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v37, v21, v38);
      return (Sharing::_DequeSlot)v23;
    }
    __break(1u);
LABEL_17:
    uint64_t v34 = sub_1A56D5068();
    a5(v34);
    uint64_t v21 = v16;
    if (v10) {
      return (Sharing::_DequeSlot)v23;
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.uncheckedReplaceInPlace<A>(inOffsets:with:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result != a2)
  {
    uint64_t v35 = v8;
    uint64_t v36 = v9;
    Deque._UnsafeHandle.segments(forOffsets:)(result, a2, a4, (uint64_t)&v30);
    uint64_t v14 = sub_1A56D58D8();
    uint64_t v16 = v15;
    sub_1A56D5078();
    uint64_t v17 = sub_1A56D5898();
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 32);
    v18(v32, &v31, v17);
    uint64_t v19 = ((uint64_t (*)(void *, unsigned char *, uint64_t))v18)(v33, v32, v17);
    MEMORY[0x1F4188790](v19);
    void v26[2] = a6;
    uint64_t v20 = sub_1A56D58F8();
    sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v26, MEMORY[0x1E4FBC248], v20, v21, (uint64_t)&v27);
    uint64_t v22 = v27;
    if (v28) {
      uint64_t v23 = v27;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v28) {
      char v24 = v29;
    }
    else {
      char v24 = 1;
    }
    if (!v29) {
      uint64_t v22 = v23;
    }
    v33[0] = v14;
    v33[1] = v16;
    v33[2] = v22;
    v33[3] = v28;
    char v34 = v24;
    uint64_t v25 = type metadata accessor for _UnsafeMutableWrappedBuffer();
    return _UnsafeMutableWrappedBuffer.assign<A>(from:)(a3, v25, a7, a8);
  }
  return result;
}

uint64_t Deque._UnsafeHandle.uncheckedAppend(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v12 = a3 + *(void *)(v8 + 72) * Deque._UnsafeHandle.slot(_:offsetBy:)(v11[2], v11[1].position).position;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a4);
  uint64_t result = (*(uint64_t (**)(Swift::Int, char *, uint64_t))(v8 + 32))(v12, v10, a4);
  uint64_t v14 = *(void *)(a2 + 8);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(a2 + 8) = v16;
  }
  return result;
}

uint64_t sub_1A5587510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a2, a1);
}

uint64_t Deque._UnsafeHandle.uncheckedAppend(contentsOf:)(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 1) {
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = a3[1];
  BOOL v7 = __OFADD__(result, a2);
  uint64_t v8 = result + a2;
  if (v7)
  {
    __break(1u);
    goto LABEL_15;
  }
  a3[1] = v8;
  if (v8 < result)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  Deque._UnsafeHandle.segments(forOffsets:)(result, v8, a3, (uint64_t)&v28);
  uint64_t v10 = sub_1A56D58D8();
  uint64_t v12 = v11;
  uint64_t v13 = sub_1A56D5078();
  uint64_t v14 = sub_1A56D5898();
  BOOL v15 = *(void (**)(unsigned char *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v30, &v29, v14);
  uint64_t v16 = ((uint64_t (*)(void *, unsigned char *, uint64_t))v15)(v31, v30, v14);
  MEMORY[0x1F4188790](v16);
  v24[2] = a5;
  uint64_t v17 = sub_1A56D58F8();
  sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v24, MEMORY[0x1E4FBC248], v17, v18, (uint64_t)&v25);
  uint64_t v19 = v25;
  if (v26) {
    uint64_t v20 = v25;
  }
  else {
    uint64_t v20 = 0;
  }
  if (v26) {
    char v21 = v27;
  }
  else {
    char v21 = 1;
  }
  if (!v27) {
    uint64_t v19 = v20;
  }
  v31[0] = v10;
  v31[1] = v12;
  uint64_t v31[2] = v19;
  v31[3] = v26;
  char v32 = v21;
  uint64_t v25 = v6;
  uint64_t v26 = a2;
  uint64_t v22 = type metadata accessor for _UnsafeMutableWrappedBuffer();
  uint64_t WitnessTable = swift_getWitnessTable();
  return _UnsafeMutableWrappedBuffer.initialize<A>(from:)((uint64_t)&v25, v22, v13, WitnessTable);
}

uint64_t Deque._UnsafeHandle.uncheckedPrepend(_:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 - 8);
  uint64_t result = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2[2];
  if (!v11)
  {
LABEL_5:
    uint64_t v12 = *a2 - 1;
    if (__OFSUB__(*a2, 1)) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  uint64_t v12 = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v13 = v8 + v12 * *(void *)(v6 + 72);
  (*(void (**)(char *))(v6 + 16))(v10);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v13, v10, a4);
  a2[2] = v12;
  uint64_t v14 = a2[1];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (!v15)
  {
    a2[1] = v16;
    return result;
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

Swift::Int Deque._UnsafeHandle.uncheckedPrepend(contentsOf:)(Swift::Int result, uint64_t a2, void *a3)
{
  if (a2 >= 1)
  {
    Swift::Int v5 = result;
    uint64_t v6 = a3[2];
    uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v6, -a2).position;
    a3[2] = result;
    uint64_t v7 = a3[1];
    BOOL v8 = __OFADD__(v7, a2);
    uint64_t v9 = v7 + a2;
    if (v8)
    {
      __break(1u);
    }
    else
    {
      a3[1] = v9;
      Deque._UnsafeHandle.mutableWrappedBuffer(between:and:)(result, v6, a3, (uint64_t)v14);
      v13[0] = v5;
      v13[1] = a2;
      uint64_t v10 = type metadata accessor for _UnsafeMutableWrappedBuffer();
      uint64_t v11 = sub_1A56D5078();
      uint64_t WitnessTable = swift_getWitnessTable();
      return _UnsafeMutableWrappedBuffer.initialize<A>(from:)((uint64_t)v13, v10, v11, WitnessTable);
    }
  }
  return result;
}

uint64_t Deque._UnsafeHandle.mutableWrappedBuffer(between:and:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  if (result >= a2)
  {
    if (!__OFSUB__(*a3, result))
    {
      uint64_t v5 = sub_1A56D58B8();
      uint64_t v7 = v11;
      uint64_t result = sub_1A56D58B8();
      BOOL v10 = v9 == 0;
      if (v9) {
        uint64_t v8 = result;
      }
      else {
        uint64_t v8 = 0;
      }
      goto LABEL_8;
    }
  }
  else
  {
    if (!__OFSUB__(a2, result))
    {
      uint64_t result = sub_1A56D58B8();
      uint64_t v5 = result;
      uint64_t v7 = v6;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      BOOL v10 = 1;
LABEL_8:
      *(void *)a4 = v5;
      *(void *)(a4 + 8) = v7;
      *(void *)(a4 + 16) = v8;
      *(void *)(a4 + 24) = v9;
      *(unsigned char *)(a4 + 32) = v10;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.uncheckedInsert<A>(contentsOf:count:atOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (v11 < 1)
  {
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
    return v19(a1, a7);
  }
  else
  {
    uint64_t v20 = v14;
    Deque._UnsafeHandle.openGap(ofSize:atOffset:)(v11, v12, v13, (uint64_t)v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, a1, a7);
    uint64_t v17 = type metadata accessor for _UnsafeMutableWrappedBuffer();
    _UnsafeMutableWrappedBuffer.initialize<A>(from:)((uint64_t)v16, v17, a7, a8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(a1, a7);
  }
}

uint64_t Deque._UnsafeHandle.openGap(ofSize:atOffset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, Swift::Int *a3@<X2>, uint64_t a4@<X8>)
{
  Swift::Int v4 = a3[1];
  Swift::Int v5 = v4 - a2;
  if (__OFSUB__(v4, a2))
  {
    __break(1u);
    goto LABEL_81;
  }
  Swift::Int v7 = a2;
  Swift::Int v8 = result;
  uint64_t position = a3[2];
  if (v5 <= a2)
  {
    uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)position, v4).position;
    if (__OFADD__(v4, v8))
    {
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    Swift::Int v10 = result;
    uint64_t position = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)position, v4 + v8).position;
    Swift::Int v22 = a3[2] + v7;
    Swift::Int v23 = *a3;
    if (v22 < *a3) {
      Swift::Int v23 = 0;
    }
    Swift::Int v14 = v22 - v23;
    uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)(v22 - v23), v8).position;
    v11.uint64_t position = result;
    Swift::Int v18 = *a3;
    if (v10 <= 0) {
      Swift::Int v24 = *a3;
    }
    else {
      Swift::Int v24 = v10;
    }
    if (position <= 0) {
      uint64_t v25 = *a3;
    }
    else {
      uint64_t v25 = position;
    }
    if (v24 >= v14)
    {
      if (v25 < result)
      {
        if (__OFSUB__(0, v8))
        {
LABEL_90:
          __break(1u);
          goto LABEL_91;
        }
        if (position >= 1)
        {
          Swift::Int v7 = v18 - v8;
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v7, position);
          uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(0, position).position;
        }
        BOOL v31 = __OFSUB__(v5, position);
        v5 -= position;
        if (v31)
        {
          __break(1u);
          goto LABEL_56;
        }
      }
    }
    else
    {
      if (v25 < result)
      {
        if (v10 >= 1)
        {
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)(0, v10);
          uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v8, v10).position;
        }
        if (__OFSUB__(0, v8)) {
          goto LABEL_86;
        }
        if (v8 >= 1)
        {
          v26.uint64_t position = *a3 - v8;
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)(v26, v8);
          uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(0, v8).position;
        }
        Swift::Int v27 = v5 - v8;
        if (__OFSUB__(v5, v8)) {
          goto LABEL_87;
        }
        Swift::Int v5 = v27 - v10;
        if (__OFSUB__(v27, v10))
        {
LABEL_88:
          __break(1u);
          goto LABEL_89;
        }
        if (v5 < 1) {
          goto LABEL_66;
        }
LABEL_65:
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v14, v5);
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(v11, v5).position;
LABEL_66:
        Swift::Int v33 = a3[1];
        BOOL v31 = __OFADD__(v33, v8);
        Swift::Int v34 = v33 + v8;
        if (!v31)
        {
          a3[1] = v34;
          if (v11.position <= 0) {
            Swift::Int v35 = *a3;
          }
          else {
            Swift::Int v35 = v11.position;
          }
          uint64_t v36 = v14;
          goto LABEL_79;
        }
        goto LABEL_83;
      }
      if (v10 >= 1)
      {
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)(0, v10);
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v8, v10).position;
        Swift::Int v18 = *a3;
      }
      Swift::Int v5 = v18 - v14;
      if (__OFSUB__(v18, v14)) {
        goto LABEL_92;
      }
    }
    if (v5 <= 0) {
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  Swift::Int v10 = -result;
  if (__OFSUB__(0, result))
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v11.uint64_t position = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)position, -result).position;
  Swift::Int v12 = a3[2] + v7;
  Swift::Int v13 = *a3;
  if (v12 < *a3) {
    Swift::Int v13 = 0;
  }
  Swift::Int v14 = v12 - v13;
  uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)(v12 - v13), -v8).position;
  Swift::Int v5 = result;
  Swift::Int v15 = *a3;
  if (v14 <= 0) {
    uint64_t v16 = *a3;
  }
  else {
    uint64_t v16 = v14;
  }
  if (result <= 0) {
    Swift::Int v17 = *a3;
  }
  else {
    Swift::Int v17 = result;
  }
  if (v16 >= position)
  {
    if (v17 >= v11.position)
    {
      if (v7 < 1) {
        goto LABEL_74;
      }
      sub_1A56D5878();
      Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)position, v7);
      Swift::Int v29 = v11.position;
      Swift::Int v30 = v7;
      goto LABEL_73;
    }
    Swift::Int v28 = v15 - v11.position;
    if (__OFSUB__(v15, v11.position))
    {
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
    if (v28 < 1) {
      goto LABEL_47;
    }
    sub_1A56D5878();
    Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)position, v28);
    Swift::Int v20 = v11.position;
    Swift::Int v21 = v28;
    goto LABEL_46;
  }
  Swift::Int v7 = v15 - position;
  LOBYTE(v18) = __OFSUB__(v15, position);
  if (v17 < v11.position)
  {
    if (v18)
    {
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    if (v7 >= 1)
    {
      sub_1A56D5878();
      Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)position, v7);
      uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(v11, v7).position;
    }
    if (v8 < 1) {
      goto LABEL_47;
    }
    Swift::Int v19 = *a3 - v8;
    sub_1A56D5878();
    Deque._UnsafeHandle.slot(_:offsetBy:)(0, v8);
    Swift::Int v20 = v19;
    Swift::Int v21 = v8;
LABEL_46:
    uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v20, v21).position;
LABEL_47:
    if (v5 < 1) {
      goto LABEL_74;
    }
    sub_1A56D5878();
    Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v8, v5);
    Swift::Int v29 = 0;
    Swift::Int v30 = v5;
    goto LABEL_73;
  }
LABEL_56:
  if ((v18 & 1) == 0)
  {
    if (v7 >= 1)
    {
      sub_1A56D5878();
      Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)position, v7);
      uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(v11, v7).position;
    }
    if (v14 < 1)
    {
LABEL_74:
      a3[2] = v11.position;
      Swift::Int v37 = a3[1];
      BOOL v31 = __OFADD__(v37, v8);
      Swift::Int v38 = v37 + v8;
      if (!v31)
      {
        a3[1] = v38;
        if (v14 <= 0) {
          Swift::Int v35 = *a3;
        }
        else {
          Swift::Int v35 = v14;
        }
        uint64_t v36 = v5;
LABEL_79:
        uint64_t result = Deque._UnsafeHandle.mutableWrappedBuffer(between:and:)(v36, v35, a3, (uint64_t)v42);
        char v39 = v43;
        long long v40 = v42[1];
        *(_OWORD *)a4 = v42[0];
        *(_OWORD *)(a4 + 16) = v40;
        *(unsigned char *)(a4 + 32) = v39;
        return result;
      }
      goto LABEL_84;
    }
    Swift::Int v32 = *a3 + v10;
    sub_1A56D5878();
    Deque._UnsafeHandle.slot(_:offsetBy:)(0, v14);
    Swift::Int v29 = v32;
    Swift::Int v30 = v14;
LABEL_73:
    uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v29, v30).position;
    goto LABEL_74;
  }
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.uncheckedRemoveFirst()(void *a1)
{
  uint64_t result = sub_1A56D5888();
  uint64_t v3 = a1[2];
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a1[1];
    if (v5 >= *a1) {
      uint64_t v5 = 0;
    }
    a1[2] = v5;
    if (!__OFSUB__(v6, 1))
    {
      a1[1] = v6 - 1;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t Deque._UnsafeHandle.uncheckedRemoveLast()(uint64_t result)
{
  if (__OFSUB__(*(void *)(result + 8), 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    uint64_t result = sub_1A56D5888();
    uint64_t v2 = *(void *)(v1 + 8);
    BOOL v3 = __OFSUB__(v2, 1);
    uint64_t v4 = v2 - 1;
    if (!v3)
    {
      *(void *)(v1 + 8) = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall Deque._UnsafeHandle.uncheckedRemoveFirst(_:)(Swift::Int a1)
{
  if (a1 >= 1)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (Sharing::_DequeSlot *)v1;
    Deque._UnsafeHandle.segments(forOffsets:)(0, a1, v1, (uint64_t)&v24);
    uint64_t v6 = sub_1A56D58D8();
    uint64_t v8 = v7;
    sub_1A56D5078();
    uint64_t v9 = sub_1A56D5898();
    Swift::Int v10 = *(void (**)(unsigned char *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(v26, &v25, v9);
    uint64_t v11 = ((uint64_t (*)(void *, unsigned char *, uint64_t))v10)(v27, v26, v9);
    MEMORY[0x1F4188790](v11);
    v20[2] = v3;
    uint64_t v12 = sub_1A56D58F8();
    sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v20, MEMORY[0x1E4FBC248], v12, v13, (uint64_t)&v21);
    uint64_t v14 = v21;
    if (v22) {
      uint64_t v15 = v21;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v22) {
      char v16 = v23;
    }
    else {
      char v16 = 1;
    }
    if (!v23) {
      uint64_t v14 = v15;
    }
    v27[0] = v6;
    v27[1] = v8;
    v27[2] = v14;
    v27[3] = v22;
    char v28 = v16;
    type metadata accessor for _UnsafeMutableWrappedBuffer();
    _UnsafeMutableWrappedBuffer.deinitialize()();
    v4[2].Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)(v4[2], a1).position;
    Swift::Int position = v4[1].position;
    BOOL v18 = __OFSUB__(position, a1);
    Swift::Int v19 = position - a1;
    if (v18) {
      __break(1u);
    }
    else {
      v4[1].Swift::Int position = v19;
    }
  }
}

Swift::Void __swiftcall Deque._UnsafeHandle.uncheckedRemoveLast(_:)(Swift::Int a1)
{
  if (a1 >= 1)
  {
    uint64_t v3 = v1;
    uint64_t v5 = v1[1];
    BOOL v6 = __OFSUB__(v5, a1);
    uint64_t v7 = v5 - a1;
    if (v6)
    {
      __break(1u);
    }
    else if (v5 >= v7)
    {
      uint64_t v8 = v2;
      Deque._UnsafeHandle.segments(forOffsets:)(v7, v5, v3, (uint64_t)&v26);
      uint64_t v9 = sub_1A56D58D8();
      uint64_t v11 = v10;
      sub_1A56D5078();
      uint64_t v12 = sub_1A56D5898();
      uint64_t v13 = *(void (**)(unsigned char *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v28, &v27, v12);
      uint64_t v14 = ((uint64_t (*)(void *, unsigned char *, uint64_t))v13)(v29, v28, v12);
      MEMORY[0x1F4188790](v14);
      v22[2] = v8;
      uint64_t v15 = sub_1A56D58F8();
      sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v22, MEMORY[0x1E4FBC248], v15, v16, (uint64_t)&v23);
      uint64_t v17 = v23;
      if (v24) {
        uint64_t v18 = v23;
      }
      else {
        uint64_t v18 = 0;
      }
      if (v24) {
        char v19 = v25;
      }
      else {
        char v19 = 1;
      }
      if (!v25) {
        uint64_t v17 = v18;
      }
      v29[0] = v9;
      v29[1] = v11;
      v29[2] = v17;
      v29[3] = v24;
      char v30 = v19;
      type metadata accessor for _UnsafeMutableWrappedBuffer();
      _UnsafeMutableWrappedBuffer.deinitialize()();
      uint64_t v20 = v3[1];
      BOOL v6 = __OFSUB__(v20, a1);
      uint64_t v21 = v20 - a1;
      if (!v6)
      {
        v3[1] = v21;
        return;
      }
LABEL_17:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
}

Swift::Void __swiftcall Deque._UnsafeHandle.uncheckedRemoveAll()()
{
  uint64_t v2 = v0 + 1;
  if ((uint64_t)v0[1] >= 1)
  {
    uint64_t v3 = v1;
    Deque._UnsafeHandle.segments()(v0, (uint64_t)&v19);
    uint64_t v4 = sub_1A56D58D8();
    uint64_t v6 = v5;
    sub_1A56D5078();
    uint64_t v7 = sub_1A56D5898();
    uint64_t v8 = *(void (**)(unsigned char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(v21, &v20, v7);
    uint64_t v9 = ((uint64_t (*)(void *, unsigned char *, uint64_t))v8)(v22, v21, v7);
    MEMORY[0x1F4188790](v9);
    v15[2] = v3;
    uint64_t v10 = sub_1A56D58F8();
    sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v15, MEMORY[0x1E4FBC248], v10, v11, (uint64_t)&v16);
    uint64_t v12 = v16;
    if (v17) {
      uint64_t v13 = v16;
    }
    else {
      uint64_t v13 = 0;
    }
    if (v17) {
      char v14 = v18;
    }
    else {
      char v14 = 1;
    }
    if (!v18) {
      uint64_t v12 = v13;
    }
    v22[0] = v4;
    v22[1] = v6;
    v22[2] = v12;
    v22[3] = v17;
    char v23 = v14;
    type metadata accessor for _UnsafeMutableWrappedBuffer();
    _UnsafeMutableWrappedBuffer.deinitialize()();
    void *v2 = 0;
    v2[1] = 0;
  }
}

Swift::Int Deque._UnsafeHandle.uncheckedRemove(offsets:)(uint64_t a1, uint64_t a2, Sharing::_DequeSlot *a3, uint64_t a4, uint64_t a5)
{
  Deque._UnsafeHandle.segments(forOffsets:)(a1, a2, &a3->position, (uint64_t)&v25);
  uint64_t v19 = sub_1A56D58D8();
  uint64_t v10 = v9;
  sub_1A56D5078();
  uint64_t v11 = sub_1A56D5898();
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v27, &v26, v11);
  v12(v28, v27, v11);
  uint64_t v21 = a5;
  uint64_t v13 = sub_1A56D58F8();
  sub_1A5585B58((void (*)(char *, char *))sub_1A558928C, (uint64_t)v20, MEMORY[0x1E4FBC248], v13, v14, (uint64_t)&v22);
  uint64_t v15 = v22;
  if (v23) {
    uint64_t v16 = v22;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v23) {
    char v17 = v24;
  }
  else {
    char v17 = 1;
  }
  if (!v24) {
    uint64_t v15 = v16;
  }
  v28[0] = v19;
  v28[1] = v10;
  v28[2] = v15;
  v28[3] = v23;
  char v29 = v17;
  type metadata accessor for _UnsafeMutableWrappedBuffer();
  _UnsafeMutableWrappedBuffer.deinitialize()();
  return Deque._UnsafeHandle.closeGap(offsets:)(a1, a2, a3);
}

Swift::Int Deque._UnsafeHandle.closeGap(offsets:)(Swift::Int result, uint64_t a2, Sharing::_DequeSlot *a3)
{
  Swift::Int v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (v3 < 1) {
    return result;
  }
  Swift::Int v5 = result;
  Swift::Int position = a3[1].position;
  v6.Swift::Int position = a3[2].position;
  Swift::Int v8 = a3->position;
  if (v6.position + result >= a3->position) {
    Swift::Int v9 = a3->position;
  }
  else {
    Swift::Int v9 = 0;
  }
  if (v6.position + a2 < v8) {
    Swift::Int v8 = 0;
  }
  Swift::Int v10 = position - a2;
  if (__OFSUB__(position, a2)) {
    goto LABEL_83;
  }
  uint64_t v11 = v6.position + result - v9;
  uint64_t v12 = v6.position + a2 - v8;
  if (v10 > result)
  {
    uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(a3[2], v3).position;
    Swift::Int v10 = result;
    if (!v5) {
      goto LABEL_68;
    }
    Swift::Int v13 = a3->position;
    if (v12 <= 0) {
      Swift::Int v14 = a3->position;
    }
    else {
      Swift::Int v14 = v12;
    }
    if (v11 <= 0) {
      Swift::Int v15 = a3->position;
    }
    else {
      Swift::Int v15 = v11;
    }
    if (v6.position >= v15)
    {
      if (v14 < result)
      {
        if (v11 >= 1)
        {
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)(0, v11);
          Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v3, v11);
          Swift::Int v13 = a3->position;
        }
        v27.Swift::Int position = v13 - v3;
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)(v27, v3);
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(0, v3).position;
        uint64_t v11 = v5 - v12;
        if (__OFSUB__(v5, v12)) {
          goto LABEL_88;
        }
        if (v11 < 1) {
          goto LABEL_68;
        }
        uint64_t v12 = a3[2].position;
        goto LABEL_66;
      }
      if (__OFSUB__(0, v11))
      {
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      if (v11 >= 1)
      {
        v12 -= v11;
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)(0, v11);
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v12, v11).position;
      }
      BOOL v33 = __OFSUB__(v5, v11);
      uint64_t v11 = v5 - v11;
      if (v33) {
        goto LABEL_91;
      }
      goto LABEL_64;
    }
    if (v14 >= result)
    {
      if (v5 >= 1)
      {
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)(v6, v5);
        v31.Swift::Int position = v10;
        Swift::Int v32 = v5;
LABEL_67:
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(v31, v32).position;
        goto LABEL_68;
      }
      goto LABEL_68;
    }
    if (v12 >= 1)
    {
      v16.Swift::Int position = v13 - v3;
      sub_1A56D5878();
      Deque._UnsafeHandle.slot(_:offsetBy:)(v16, v12);
      uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(0, v12).position;
    }
    uint64_t v11 = v5 - v12;
    if (!__OFSUB__(v5, v12))
    {
LABEL_64:
      if (v11 >= 1)
      {
        uint64_t v12 = a3[2].position;
LABEL_66:
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v12, v11);
        v31.Swift::Int position = v10;
        Swift::Int v32 = v11;
        goto LABEL_67;
      }
LABEL_68:
      a3[2].Swift::Int position = v10;
      Swift::Int v34 = a3[1].position;
      BOOL v33 = __OFSUB__(v34, v3);
      Swift::Int v35 = v34 - v3;
      if (!v33) {
        goto LABEL_80;
      }
      __break(1u);
      goto LABEL_71;
    }
    __break(1u);
  }
  uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(v6, position).position;
  if (__OFSUB__(position, v3))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  Swift::Int v17 = a3[2].position + position - v3;
  Swift::Int v18 = a3->position;
  if (v17 >= a3->position) {
    Swift::Int v19 = a3->position;
  }
  else {
    Swift::Int v19 = 0;
  }
  if (v10)
  {
    Swift::Int v20 = result;
    Swift::Int v21 = v17 - v19;
    if (v17 - v19 <= 0) {
      Swift::Int v22 = a3->position;
    }
    else {
      Swift::Int v22 = v17 - v19;
    }
    if (result <= 0) {
      Swift::Int v23 = a3->position;
    }
    else {
      Swift::Int v23 = result;
    }
    if (v12 >= v23)
    {
      Swift::Int v28 = v18 - v12;
      BOOL v29 = __OFSUB__(v18, v12);
      if (v22 >= v11)
      {
        if (v29)
        {
LABEL_92:
          __break(1u);
          return result;
        }
        if (v28 >= 1)
        {
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v12, v28);
          uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v11, v28).position;
          uint64_t v11 = result;
        }
        if (v20 >= 1)
        {
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)(0, v20);
          v25.Swift::Int position = v11;
          Swift::Int v26 = v20;
          goto LABEL_78;
        }
      }
      else
      {
        if (v29)
        {
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
        if (v28 >= 1)
        {
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v12, v28);
          uint64_t v11 = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v11, v28).position;
        }
        sub_1A56D5878();
        v30.Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)(0, v3).position;
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v11, v3).position;
        if (v21 >= 1)
        {
          sub_1A56D5878();
          Deque._UnsafeHandle.slot(_:offsetBy:)(v30, v21);
          v25.Swift::Int position = 0;
          Swift::Int v26 = v21;
          goto LABEL_78;
        }
      }
    }
    else
    {
      if (v22 >= v11)
      {
LABEL_71:
        if (v10 < 1) {
          goto LABEL_79;
        }
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v12, v10);
        v25.Swift::Int position = v11;
        Swift::Int v26 = v10;
        goto LABEL_78;
      }
      Swift::Int v24 = v18 - v11;
      if (__OFSUB__(v18, v11))
      {
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
        goto LABEL_89;
      }
      if (v24 >= 1)
      {
        sub_1A56D5878();
        uint64_t v12 = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v12, v24).position;
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v11, v24).position;
      }
      if (__OFSUB__(v10, v24)) {
        goto LABEL_87;
      }
      if (v10 - v24 >= 1)
      {
        sub_1A56D5878();
        Deque._UnsafeHandle.slot(_:offsetBy:)((Sharing::_DequeSlot)v12, v10 - v24);
        v25.Swift::Int position = 0;
        Swift::Int v26 = v10 - v24;
LABEL_78:
        uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(v25, v26).position;
      }
    }
  }
LABEL_79:
  Swift::Int v36 = a3[1].position;
  BOOL v33 = __OFSUB__(v36, v3);
  Swift::Int v35 = v36 - v3;
  if (v33)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
LABEL_80:
  a3[1].Swift::Int position = v35;
  return result;
}

uint64_t sub_1A5589034@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A55952F0(a1);
}

__n128 sub_1A5589054@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v2 = *(__n128 **)(v1 + 16);
  unint64_t v3 = v2[1].n128_u64[0];
  __n128 result = *v2;
  *a1 = *v2;
  a1[1].n128_u64[0] = v3;
  return result;
}

uint64_t sub_1A558906C(uint64_t a1, uint64_t a2)
{
  return sub_1A5586938(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t sub_1A558908C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A5589830(a1, a2, *(uint64_t (**)(void))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 16), MEMORY[0x1E4FBC848] + 8, a3);
}

uint64_t sub_1A55890BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = sub_1A56D5A98();
  uint64_t v5 = *(void *)(v3 + 8);
  *a1 = result;
  a1[1] = v5;
  a1[2] = 0;
  return result;
}

uint64_t sub_1A5589104(uint64_t a1, uint64_t a2)
{
  return sub_1A5586BC8(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t sub_1A5589124@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = sub_1A56D5A98();
  *a1 = result;
  a1[1] = v3;
  a1[2] = 0;
  return result;
}

uint64_t sub_1A5589168(uint64_t a1, uint64_t a2)
{
  return sub_1A5586E5C(a1, a2, *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t sub_1A5589188@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 8);
  return result;
}

void *sub_1A5589198(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 8) = *result;
  return result;
}

uint64_t sub_1A55891A8()
{
  return 8;
}

void *sub_1A55891B4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A55891C0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

void *sub_1A55891D0(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 16) = *result;
  return result;
}

uint64_t sub_1A55891E0()
{
  return 8;
}

uint64_t sub_1A55891EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1A55891F4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t sub_1A5589238(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Deque._UnsafeHandle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A558928C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1A5589034(a1);
}

uint64_t sub_1A55892A8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A558908C(a1, a2, a3);
}

uint64_t Deque.description.getter(uint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v1 = type metadata accessor for Deque();
  swift_getWitnessTable();
  return _arrayDescription<A>(for:)((uint64_t)&v3, v1);
}

uint64_t sub_1A5589320()
{
  return Deque.description.getter(*v0);
}

uint64_t sub_1A5589334(uint64_t a1)
{
  return Deque.debugDescription.getter(*v1, *(void *)(a1 + 16));
}

uint64_t Deque._Storage.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A558978C(a1, a2, a3, a4, a5, (uint64_t)sub_1A5589880);
}

uint64_t Deque._Storage._buffer.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Deque._Storage._buffer.modify())()
{
  return nullsub_1;
}

uint64_t Deque._Storage.description.getter()
{
  return 0x3C6575716544;
}

uint64_t sub_1A5589498()
{
  return Deque._Storage.description.getter();
}

uint64_t Deque._Storage.init()()
{
  if (qword_1E966BCC8 != -1) {
    swift_once();
  }
  swift_retain();

  return sub_1A56D5C18();
}

uint64_t Deque._Storage.init(_:)()
{
  return sub_1A56D5C18();
}

uint64_t Deque._Storage.init(minimumCapacity:)()
{
  type metadata accessor for _DequeBuffer();
  sub_1A56D5A88();

  return sub_1A56D5C18();
}

uint64_t Deque._Storage.capacity.getter(uint64_t a1, uint64_t a2)
{
  sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v3);
  return v4;
}

uint64_t Deque._Storage.count.getter(uint64_t a1, uint64_t a2)
{
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v3);
  return v4;
}

uint64_t sub_1A55896D4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

uint64_t Deque._Storage.startSlot.getter(uint64_t a1, uint64_t a2)
{
  sub_1A558BB64((uint64_t)sub_1A5589754, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, MEMORY[0x1E4FBC248], (uint64_t)&type metadata for _DequeSlot, MEMORY[0x1E4FBC278], v3);
  return v4;
}

uint64_t sub_1A5589754@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 16);
  return result;
}

uint64_t Deque._Storage.read<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A558978C(a1, a2, a3, a4, a5, (uint64_t)sub_1A5589880);
}

uint64_t sub_1A558978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68(a6, (uint64_t)v12, a3, (uint64_t)&type metadata for _DequeBufferHeader, a4, v10, a5, MEMORY[0x1E4FBC0F0], (uint64_t)&v17);
}

uint64_t sub_1A5589830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  return sub_1A5589848(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1A5589848(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t result = a3();
  if (v7) {
    *a7 = v7;
  }
  return result;
}

uint64_t sub_1A5589880(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A5589F00(a1, a2, a3);
}

Swift::Bool __swiftcall Deque._Storage.isUnique()()
{
  sub_1A56D5C38();

  return sub_1A56D5C28();
}

Swift::Void __swiftcall Deque._Storage.ensureUnique()()
{
  sub_1A56D5C38();
  if ((sub_1A56D5C28() & 1) == 0)
  {
    Deque._Storage._makeUniqueCopy()();
  }
}

Swift::Void __swiftcall Deque._Storage._makeUniqueCopy()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v12 = v4;
  uint64_t v7 = v4;
  uint64_t v8 = v0;
  Swift::Int v9 = sub_1A558A020;
  uint64_t v10 = &v11;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A5589880, (uint64_t)v6, v3, (uint64_t)&type metadata for _DequeBufferHeader, v4, v5, v2, MEMORY[0x1E4FBC0F0], (uint64_t)v13);
  swift_release();
  *uint64_t v1 = v14;
}

double static Deque._Storage.growthFactor.getter()
{
  return 1.5;
}

Swift::Int __swiftcall Deque._Storage._growCapacity(to:linearly:)(Swift::Int to, Swift::Bool linearly)
{
  if (linearly)
  {
    sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, v2, (uint64_t)&type metadata for _DequeBufferHeader, v3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v8);
    uint64_t v5 = v9;
    goto LABEL_7;
  }
  Swift::Int result = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, v2, (uint64_t)&type metadata for _DequeBufferHeader, v3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v8);
  double v7 = ceil((double)v9 * 1.5);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = (uint64_t)v7;
LABEL_7:
  if (v5 <= to) {
    return to;
  }
  else {
    return v5;
  }
}

Swift::Void __swiftcall Deque._Storage.ensureUnique(minimumCapacity:linearGrowth:)(Swift::Int minimumCapacity, Swift::Bool linearGrowth)
{
  uint64_t v6 = *(void *)(v2 + 16);
  sub_1A56D5C38();
  char v7 = sub_1A56D5C28();
  sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v8);
  if (v9 < minimumCapacity || (v7 & 1) == 0) {
    Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(minimumCapacity, linearGrowth);
  }
}

Swift::Void __swiftcall Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(Swift::Int minimumCapacity, Swift::Bool linearGrowth)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v25);
  if (v28 >= minimumCapacity)
  {
    uint64_t v15 = MEMORY[0x1F4188790](v9);
    uint64_t v25 = v8;
    MEMORY[0x1F4188790](v15);
    uint64_t v21 = v8;
    uint64_t v22 = v4;
    Swift::Int v23 = sub_1A5589F38;
    uint64_t v24 = v16;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A5589880, (uint64_t)v20, v7, (uint64_t)&type metadata for _DequeBufferHeader, v8, v17, v4, MEMORY[0x1E4FBC0F0], (uint64_t)v27);
  }
  else
  {
    sub_1A56D5C38();
    char v10 = sub_1A56D5C28();
    uint64_t v11 = *v3;
    Swift::Int v12 = Deque._Storage._growCapacity(to:linearly:)(minimumCapacity, linearGrowth);
    uint64_t v25 = v8;
    uint64_t v26 = MEMORY[0x1F4188790](v12);
    MEMORY[0x1F4188790](v26);
    uint64_t v21 = v8;
    uint64_t v22 = v4;
    if (v10)
    {
      Swift::Int v23 = sub_1A5589F98;
      uint64_t v24 = v13;
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
      sub_1A558BC68((uint64_t)sub_1A5589880, (uint64_t)v20, v11, (uint64_t)&type metadata for _DequeBufferHeader, v8, v14, v4, MEMORY[0x1E4FBC0F0], (uint64_t)v27);
    }
    else
    {
      Swift::Int v23 = sub_1A5589F6C;
      uint64_t v24 = v13;
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
      sub_1A558BC68((uint64_t)sub_1A5589880, (uint64_t)v20, v11, (uint64_t)&type metadata for _DequeBufferHeader, v8, v18, v4, MEMORY[0x1E4FBC0F0], (uint64_t)v27);
    }
  }
  Swift::Int v19 = v28;
  swift_release();
  *uint64_t v3 = v19;
}

BOOL Deque._Storage.isIdentical(to:)(uint64_t a1, uint64_t a2)
{
  return a2 == a1;
}

uint64_t sub_1A5589EC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A56D5A98();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1A5589F00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 32))();
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_1A5589F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Deque._UnsafeHandle.copyElements()(a1, a2, *(void *)(v3 + 16));
  *a3 = result;
  return result;
}

uint64_t sub_1A5589F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A5589FC4(a1, a2, Deque._UnsafeHandle.copyElements(minimumCapacity:), a3);
}

uint64_t sub_1A5589F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A5589FC4(a1, a2, Deque._UnsafeHandle.moveElements(minimumCapacity:), a3);
}

uint64_t sub_1A5589FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void, uint64_t, uint64_t, void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = a3(*(void *)(v4 + 24), a1, a2, *(void *)(v4 + 16));
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for Deque._Storage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A558A020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1A5589F38(a1, a2, a3);
}

uint64_t Deque<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A56D5898();
  MEMORY[0x1F4188790](v10 - 8);
  Swift::Int v12 = (char *)&v19 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A56D61B8();
  uint64_t v25 = Deque.makeIterator()(a2, a3);
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  uint64_t v15 = type metadata accessor for Deque.Iterator();
  Deque.Iterator.next()(v15, (uint64_t)v12);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v16(v12, 1, a3) != 1)
  {
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v22 = v9;
    Swift::Int v20 = (void (**)(char *, uint64_t))(v7 + 8);
    do
    {
      v21(v9, v12, a3);
      uint64_t v24 = v30;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
      uint64_t v17 = v31;
      sub_1A56D5ED8();
      (*v20)(v9, a3);
      if (v17) {
        break;
      }
      uint64_t v31 = 0;
      Deque.Iterator.next()(v15, (uint64_t)v12);
    }
    while (v16(v12, 1, a3) != 1);
  }
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1A558A30C(void *a1, uint64_t a2, uint64_t a3)
{
  return Deque<A>.encode(to:)(a1, *v3, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

void *Deque<A>.init(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = Deque.init()(v9);
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A56D6188();
  if (v3)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v11 = sub_1A56D5EA8();
    if ((v12 & 1) == 0)
    {
      Swift::Int v13 = v11;
      type metadata accessor for Deque();
      Deque.reserveCapacity(_:)(v13);
    }
    __swift_project_boxed_opaque_existential_1(v17, v18);
    while ((sub_1A56D5EC8() & 1) == 0)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
      sub_1A56D5EB8();
      uint64_t v14 = type metadata accessor for Deque();
      Deque.append(_:)((uint64_t)v8, v14);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
      __swift_project_boxed_opaque_existential_1(v17, v18);
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
    uint64_t v10 = (void *)v19;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v10;
}

void *sub_1A558A57C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t result = Deque<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

unint64_t SFProximityHandoffUIServerMachName.getter()
{
  return 0xD000000000000024;
}

unint64_t SFProximityHandoffUIServerDomain.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t SFProximityHandoffUIServerService.getter()
{
  return 0xD000000000000035;
}

uint64_t sub_1A558A604(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A558A62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  char v12 = (char *)&v18 - v11;
  MEMORY[0x1F4188790](v10);
  (*(void (**)(char *))(v14 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1A55AC9E8(a1, (uint64_t)v12, a2);
  if (v2)
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v9, v12, v5);
    if (sub_1A56D5EE8())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v17, v9, v5);
    }
  }
  return result;
}

uint64_t Deque.popFirst()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v13);
  if (v14 < 1)
  {
    uint64_t v10 = 1;
  }
  else
  {
    sub_1A56D5C38();
    uint64_t v5 = sub_1A56D5C28();
    if ((v5 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._makeUniqueCopy()();
    }
    uint64_t v6 = *v2;
    uint64_t v7 = MEMORY[0x1F4188790](v5);
    uint64_t v13 = v4;
    MEMORY[0x1F4188790](v7);
    void v12[2] = v4;
    v12[3] = v4;
    v12[4] = sub_1A558AC84;
    v12[5] = v8;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A558ACB0, (uint64_t)v12, v6, (uint64_t)&type metadata for _DequeBufferHeader, v4, v9, v4, MEMORY[0x1E4FBC0F0], (uint64_t)&v14);
    uint64_t v10 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, v10, 1, v4);
}

uint64_t Deque.init(unsafeUninitializedCapacity:initializingWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = Deque._Storage.init(minimumCapacity:)();
  uint64_t v17 = a4;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = sub_1A558ACD8;
  uint64_t v15 = &v16;
  swift_retain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A558908C, (uint64_t)v12, v9, (uint64_t)&type metadata for _DequeBufferHeader, a4, v10, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v21);
  swift_release();
  if (v4) {
    swift_release();
  }
  return v9;
}

uint64_t *sub_1A558AAF8(uint64_t *result, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t *))
{
  result[2] = 0;
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = (uint64_t)result;
    Deque._UnsafeHandle.buffer(for:)(0, a3);
    v9[0] = sub_1A56D58D8();
    v9[1] = v8;
    a4(v9, &v10);
    return sub_1A558ABB8(&v10, a3, v7, a2, (uint64_t)v9);
  }
  return result;
}

uint64_t *sub_1A558ABB8(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*result > a2)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a2 < 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = result;
  Deque._UnsafeHandle.buffer(for:)(0, a2);
  sub_1A56D58D8();
  uint64_t v9 = v8;
  uint64_t v10 = sub_1A56D58A8();
  uint64_t result = (uint64_t *)sub_1A56D58A8();
  if (v10)
  {
    if (!result) {
      goto LABEL_13;
    }
    if ((uint64_t *)v10 == result) {
      goto LABEL_8;
    }
    __break(1u);
  }
  if (!result)
  {
LABEL_8:
    if (*(void *)(a5 + 8) == v9)
    {
      *(void *)(a3 + 8) = *v7;
      return result;
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1A558AC84(void *a1)
{
  return Deque._UnsafeHandle.uncheckedRemoveFirst()(a1);
}

uint64_t sub_1A558ACB0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A5589830(a1, a2, *(uint64_t (**)(void))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 24), *(void *)(v3 + 24), a3);
}

uint64_t *sub_1A558ACD8(uint64_t *a1, uint64_t a2)
{
  return sub_1A558AAF8(a1, a2, *(void *)(v2 + 24), *(void (**)(void *, uint64_t *))(v2 + 32));
}

uint64_t Deque.prepend(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v14);
  Swift::Int v6 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A56D5C38();
    char v7 = sub_1A56D5C28();
    uint64_t v8 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v14);
    if (v16 < v6 || (v7 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v6, 0);
    }
    uint64_t v9 = *v2;
    uint64_t v10 = MEMORY[0x1F4188790](v8);
    uint64_t v14 = v4;
    uint64_t v15 = a1;
    MEMORY[0x1F4188790](v10);
    void v13[2] = v4;
    v13[3] = sub_1A558AEF4;
    v13[4] = v11;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    return sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v13, v9, (uint64_t)&type metadata for _DequeBufferHeader, v4, v12, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v16);
  }
  return result;
}

uint64_t sub_1A558AEF4(void *a1, uint64_t a2)
{
  return Deque._UnsafeHandle.uncheckedPrepend(_:)(*(void *)(v2 + 24), a1, a2, *(void *)(v2 + 16));
}

uint64_t Deque.prepend<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v22 = v9;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t result = sub_1A56D52B8();
  if (LOBYTE(v25[0]) == 1)
  {
    uint64_t result = sub_1A56D56A8();
    if (result >= 1)
    {
      uint64_t v11 = result;
      uint64_t v12 = *v4;
      swift_retain();
      sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v12, (uint64_t)&type metadata for _DequeBufferHeader, v9, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v21);
      uint64_t result = swift_release();
      Swift::Int v13 = v25[0] + v11;
      if (__OFADD__(v25[0], v11))
      {
        __break(1u);
      }
      else
      {
        sub_1A56D5C38();
        char v14 = sub_1A56D5C28();
        uint64_t v15 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v5, (uint64_t)&type metadata for _DequeBufferHeader, v9, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v21);
        if (v25[0] < v13 || (v14 & 1) == 0)
        {
          type metadata accessor for Deque._Storage();
          Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v13, 0);
        }
        uint64_t v16 = *v5;
        uint64_t v17 = MEMORY[0x1F4188790](v15);
        v20[8] = v9;
        v20[9] = a3;
        v20[10] = a4;
        v20[11] = v11;
        uint64_t v21 = a1;
        MEMORY[0x1F4188790](v17);
        v20[2] = v9;
        v20[3] = sub_1A558B5C8;
        v20[4] = v18;
        swift_retain();
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
        sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v20, v16, (uint64_t)&type metadata for _DequeBufferHeader, v9, v19, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v25);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1A558B1DC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  swift_retain();
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v12, (uint64_t)&type metadata for _DequeBufferHeader, a4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v22);
  uint64_t result = swift_release();
  Swift::Int v14 = v24 + a2;
  if (__OFADD__(v24, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = a1;
    sub_1A56D5C38();
    char v15 = sub_1A56D5C28();
    uint64_t v16 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *a3, (uint64_t)&type metadata for _DequeBufferHeader, a4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v22);
    if (v24 < v14 || (v15 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v14, 0);
    }
    uint64_t v17 = *a3;
    uint64_t v18 = MEMORY[0x1F4188790](v16);
    v21[8] = a4;
    v21[9] = a5;
    v21[10] = a6;
    v21[11] = v23;
    uint64_t v22 = a2;
    MEMORY[0x1F4188790](v18);
    v21[2] = a4;
    v21[3] = sub_1A558B914;
    v21[4] = v19;
    swift_retain();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v21, v17, (uint64_t)&type metadata for _DequeBufferHeader, a4, v20, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v24);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A558B43C(uint64_t a1, uint64_t a2)
{
  return sub_1A558B1DC(a1, a2, *(uint64_t **)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1A558B45C(Sharing::_DequeSlot *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a4;
  uint64_t v23 = a7;
  uint64_t v10 = *(void *)(a6 - 8);
  uint64_t v11 = (Swift::Int *)MEMORY[0x1F4188790](a1);
  Swift::Int v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Deque._UnsafeHandle.availableSegments()(v11, (uint64_t)v21);
  uint64_t v14 = type metadata accessor for _UnsafeMutableWrappedBuffer();
  _UnsafeMutableWrappedBuffer.suffix(_:)(a3, (uint64_t)v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v20, a6);
  uint64_t result = _UnsafeMutableWrappedBuffer.initialize<A>(from:)((uint64_t)v13, v14, a6, v23);
  Swift::Int position = a1[1].position;
  BOOL v17 = __OFADD__(position, a3);
  Swift::Int v18 = position + a3;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    a1[1].Swift::Int position = v18;
    if (!__OFSUB__(0, a3))
    {
      uint64_t result = Deque._UnsafeHandle.slot(_:offsetBy:)(a1[2], -a3).position;
      a1[2].Swift::Int position = result;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A558B5C8(Sharing::_DequeSlot *a1, uint64_t a2)
{
  return sub_1A558B45C(a1, a2, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t Deque.prepend<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v23 = v10;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = v5;
  uint64_t result = sub_1A56D52B8();
  if (v27 == 1)
  {
    uint64_t v12 = *v5;
    swift_retain();
    sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v12, (uint64_t)&type metadata for _DequeBufferHeader, v10, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v21);
    swift_release();
    Deque.append<A>(contentsOf:)(a1, a2, a3, a4);
    uint64_t v13 = *v5;
    swift_retain();
    sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v13, (uint64_t)&type metadata for _DequeBufferHeader, v10, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v21);
    uint64_t v14 = swift_release();
    uint64_t v15 = MEMORY[0x1F4188790](v14);
    v20[8] = v10;
    v20[9] = a3;
    v20[10] = a4;
    v20[11] = v27;
    uint64_t v21 = v17;
    uint64_t v22 = v16;
    MEMORY[0x1F4188790](v15);
    v20[2] = v10;
    v20[3] = sub_1A558B8F0;
    v20[4] = v18;
    swift_retain();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v20, v13, (uint64_t)&type metadata for _DequeBufferHeader, v10, v19, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v27);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A558B854(Sharing::_DequeSlot *a1, int a2, Swift::Int forOffset, Swift::Int a4, uint64_t a5)
{
  uint64_t result = Deque._UnsafeHandle.slot(forOffset:)(forOffset).position;
  v9.Swift::Int position = a1->position;
  a1[1].Swift::Int position = a1->position;
  a1[2].Swift::Int position = result;
  BOOL v10 = __OFSUB__(v9.position, a5);
  Swift::Int v11 = v9.position - a5;
  if (v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v12 = a4 + v11;
  if (__OFADD__(a4, v11))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v12 >= a4) {
    return Deque._UnsafeHandle.closeGap(offsets:)(a4, v12, a1);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A558B8F0(Sharing::_DequeSlot *a1, int a2)
{
  return sub_1A558B854(a1, a2, v2[5], v2[6], v2[7]);
}

Swift::Int sub_1A558B914(void *a1)
{
  return sub_1A558B92C(a1);
}

Swift::Int sub_1A558B92C(void *a1)
{
  return Deque._UnsafeHandle.uncheckedPrepend(contentsOf:)(*(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t Deque.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v14);
  Swift::Int v6 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1A56D5C38();
    char v7 = sub_1A56D5C28();
    uint64_t v8 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v14);
    if (v16 < v6 || (v7 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v6, 0);
    }
    uint64_t v9 = *v2;
    uint64_t v10 = MEMORY[0x1F4188790](v8);
    uint64_t v14 = v4;
    uint64_t v15 = a1;
    MEMORY[0x1F4188790](v10);
    void v13[2] = v4;
    v13[3] = sub_1A558FAC8;
    v13[4] = v11;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    return sub_1A558BC68((uint64_t)sub_1A558908C, (uint64_t)v13, v9, (uint64_t)&type metadata for _DequeBufferHeader, v4, v12, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v16);
  }
  return result;
}

uint64_t sub_1A558BB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v15+ ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80)), v13);
  if (v9) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a9, v13, a6);
  }
  return result;
}

uint64_t sub_1A558BC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t result = MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = *(void *)(v19 + 64);
  BOOL v22 = __OFADD__(v20, v21);
  uint64_t v23 = v20 + v21;
  if (v22)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v24 = *(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 1;
  BOOL v25 = __CFADD__(v23, v24);
  uint64_t v26 = v23 + v24;
  if (v25)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = v15(v13 + v20, v13 + ((v26 - 1) & -v24), (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v9) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a9, v17, a6);
  }
  return result;
}

uint64_t Deque.makeIterator()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_1A5591918(v3, a2);
  swift_release();
  return v4;
}

uint64_t Deque.Iterator.next()@<X0>(BOOL a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v5 = v2[1];
  if (v5 != v2[2]) {
    goto LABEL_4;
  }
  a1 = Deque.Iterator._swapSegment()();
  if (a1)
  {
    uint64_t v5 = v2[1];
LABEL_4:
    v2[1] = v5 + 1;
    uint64_t v6 = *v2;
    uint64_t v7 = MEMORY[0x1F4188790](a1);
    uint64_t v19 = *(void *)(v3 + 16);
    uint64_t v8 = v19;
    uint64_t v20 = v9;
    MEMORY[0x1F4188790](v7);
    uint64_t v15 = v19;
    uint64_t v16 = v19;
    uint64_t v17 = sub_1A55919DC;
    uint64_t v18 = v10;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A558ACB0, (uint64_t)&v14, v6, (uint64_t)&type metadata for _DequeBufferHeader, v15, v11, v15, MEMORY[0x1E4FBC0F0], (uint64_t)v21);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 0, 1, v8);
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 16) - 8) + 56);

  return v13(a2, 1, 1);
}

Swift::Void __swiftcall Deque.reserveCapacity(_:)(Swift::Int a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  sub_1A56D5C38();
  char v5 = sub_1A56D5C28();
  sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v6);
  if (v7 < a1 || (v5 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(a1, 1);
  }
}

uint64_t Deque.count.getter(uint64_t a1, uint64_t a2)
{
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v3);
  return v4;
}

uint64_t Deque.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v5 = v4;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = sub_1A56D5898();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v54 = (char *)&v40 - v11;
  uint64_t v57 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v55 = (char *)&v40 - v14;
  uint64_t v58 = v8;
  uint64_t v59 = a3;
  unint64_t v60 = a4;
  int64_t v61 = v4;
  uint64_t result = sub_1A56D52B8();
  if (v62[0] == 1)
  {
    uint64_t v41 = v9;
    uint64_t v16 = sub_1A56D52A8();
    uint64_t v17 = *v5;
    swift_retain();
    sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v17, (uint64_t)&type metadata for _DequeBufferHeader, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v38);
    uint64_t result = swift_release();
    Swift::Int v18 = *(void *)v62 + v16;
    if (!__OFADD__(*(void *)v62, v16))
    {
      uint64_t v53 = a3;
      uint64_t v51 = sub_1A56D5C38();
      char v19 = sub_1A56D5C28();
      uint64_t v20 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v5, (uint64_t)&type metadata for _DequeBufferHeader, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v38);
      if (*(uint64_t *)v62 < v18 || (v19 & 1) == 0)
      {
        type metadata accessor for Deque._Storage();
        Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v18, 0);
      }
      uint64_t v52 = &v40;
      uint64_t v21 = *v5;
      uint64_t v22 = MEMORY[0x1F4188790](v20);
      uint64_t v23 = v53;
      *(&v40 - 4) = v8;
      *(&v40 - 3) = v23;
      MEMORY[0x1F4188790](v22);
      uint64_t v24 = AssociatedTypeWitness;
      *(&v40 - 4) = v8;
      *(&v40 - 3) = v24;
      uint64_t v39 = v25;
      swift_retain();
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
      sub_1A558BC68((uint64_t)sub_1A5591A78, (uint64_t)(&v40 - 6), v21, (uint64_t)&type metadata for _DequeBufferHeader, v8, v50, v24, MEMORY[0x1E4FBC0F0], (uint64_t)v62);
      swift_release();
      uint64_t v52 = a4;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v27 = v54;
      uint64_t v49 = AssociatedConformanceWitness;
      sub_1A56D5918();
      int64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
      uint64_t v48 = v57 + 48;
      if (v47(v27, 1, v8) == 1)
      {
LABEL_7:
        (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v55, AssociatedTypeWitness);
      }
      unint64_t v46 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
      v57 += 32;
      uint64_t v45 = (void (**)(char *, uint64_t))(v57 - 24);
      uint64_t v28 = MEMORY[0x1E4FBC278];
      uint64_t v44 = MEMORY[0x1E4FBC848] + 8;
      v46(v13, v27, v8);
      while (1)
      {
        uint64_t v33 = *v5;
        swift_retain();
        uint64_t v34 = MEMORY[0x1E4FBC248];
        uint64_t v35 = MEMORY[0x1E4FBB550];
        sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v33, (uint64_t)&type metadata for _DequeBufferHeader, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], v28, v38);
        uint64_t result = swift_release();
        Swift::Int v36 = *(void *)v62 + 1;
        if (__OFADD__(*(void *)v62, 1)) {
          break;
        }
        char v37 = sub_1A56D5C28();
        uint64_t v29 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v5, (uint64_t)&type metadata for _DequeBufferHeader, v8, v34, v35, v28, v38);
        if (*(uint64_t *)v62 < v36 || (v37 & 1) == 0)
        {
          type metadata accessor for Deque._Storage();
          Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v36, 0);
        }
        uint64_t v30 = *v5;
        uint64_t v31 = MEMORY[0x1F4188790](v29);
        uint64_t v32 = v53;
        *(&v40 - 6) = v8;
        *(&v40 - 5) = v32;
        *(&v40 - 4) = (uint64_t)v52;
        *(&v40 - 3) = (uint64_t)v13;
        MEMORY[0x1F4188790](v31);
        *(&v40 - 4) = v8;
        *(&v40 - 3) = (uint64_t)sub_1A5591A9C;
        swift_retain();
        sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)(&v40 - 6), v30, (uint64_t)&type metadata for _DequeBufferHeader, v8, v50, v44, MEMORY[0x1E4FBC0F0], (uint64_t)v62);
        swift_release();
        (*v45)(v13, v8);
        uint64_t v27 = v54;
        sub_1A56D5918();
        if (v47(v27, 1, v8) == 1) {
          goto LABEL_7;
        }
        v46(v13, v27, v8);
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t Deque.Iterator._storage.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Deque.Iterator._storage.modify())()
{
  return nullsub_1;
}

uint64_t Deque.Iterator._nextSlot.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Deque.Iterator._nextSlot.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*Deque.Iterator._nextSlot.modify())()
{
  return nullsub_1;
}

uint64_t Deque.Iterator._endSlot.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t Deque.Iterator._endSlot.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*Deque.Iterator._endSlot.modify())()
{
  return nullsub_1;
}

uint64_t Deque.Iterator.init(_base:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1A5591918(a1, a2);
  swift_release();
  return v2;
}

uint64_t Deque.Iterator.init(_base:from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1A5592120(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_1A558CA1C@<X0>(Swift::Int forOffset@<X2>, Sharing::_DequeSlot *a2@<X0>, Swift::Int a3@<X3>, Sharing::_DequeSlot *a4@<X8>)
{
  v8.Swift::Int position = Deque._UnsafeHandle.slot(forOffset:)(forOffset).position;
  Swift::Int position = v8.position;
  Swift::Int v10 = a2[1].position;
  if (v10 != forOffset)
  {
    v8.Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)(a2[2], v10).position;
    if (position >= v8.position) {
      v8.Swift::Int position = a2->position;
    }
  }
  a4->Swift::Int position = a3;
  a4[1].Swift::Int position = position;
  a4[2].Swift::Int position = v8.position;
  return swift_retain();
}

Swift::Bool __swiftcall Deque.Iterator._swapSegment()()
{
  uint64_t v2 = *v1;
  uint64_t v6 = *(void *)(v0 + 16);
  Swift::Int v7 = sub_1A55921EC;
  Sharing::_DequeSlot v8 = &v9;
  swift_retain();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A5592258, (uint64_t)v5, v2, (uint64_t)&type metadata for _DequeBufferHeader, v6, v3, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBC0F0], (uint64_t)v10);
  swift_release();
  return v10[15];
}

uint64_t Deque._copyToContiguousArray()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1A5592024(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1A558CBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a4;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v9 = a4;
  Swift::Int v10 = sub_1A5593804;
  uint64_t v11 = &v12;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68((uint64_t)sub_1A558908C, (uint64_t)v8, a3, (uint64_t)&type metadata for _DequeBufferHeader, a4, v6, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v16);
}

uint64_t sub_1A558CC78(void *a1, uint64_t a2, _OWORD *a3, void *a4, uint64_t a5)
{
  uint64_t v30 = a4;
  Deque._UnsafeHandle.segments()(a1, (uint64_t)&v26);
  uint64_t v7 = v26;
  uint64_t v8 = v27;
  v29[0] = *a3;
  v21[0] = v27;
  sub_1A56D58F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671F78);
  swift_getWitnessTable();
  sub_1A559378C();
  sub_1A56D5038();
  *(void *)&v29[0] = v7;
  *((void *)&v29[0] + 1) = v8;
  uint64_t v9 = sub_1A56D5078();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = v30;
  uint64_t result = sub_1A569F68C((uint64_t)v29, v22, v23, v24, v25, a5, v9, WitnessTable);
  if (__OFADD__(*v11, v8))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *v11 += v8;
  uint64_t v13 = sub_1A56D5898();
  uint64_t v14 = *(void (**)(_OWORD *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v29, &v28, v13);
  uint64_t result = ((uint64_t (*)(uint64_t *, _OWORD *, uint64_t))v14)(&v22, v29, v13);
  if (v24) {
    return result;
  }
  uint64_t v15 = v23;
  if (__OFADD__(v8, v23)) {
    goto LABEL_9;
  }
  if (v8 + v23 < v8)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v16 = v22;
  uint64_t v17 = sub_1A56D5908();
  v21[0] = v16;
  v21[1] = v15;
  uint64_t result = sub_1A569F68C((uint64_t)v21, v17, v18, v19, v20, a5, v9, WitnessTable);
  if (__OFADD__(*v11, v15))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  *v11 += v15;
  return result;
}

uint64_t sub_1A558CEB8()
{
  sub_1A56D53A8();
  if (!v0)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1A56D5A58();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_1A56D53D8();
      swift_getWitnessTable();
      uint64_t v1 = sub_1A56D5F78();
    }
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t Deque._copyContents(initializing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_1A5591F3C(a1, a2, a3, a4);
  swift_release();
  return v4;
}

uint64_t sub_1A558CFC4@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  Deque._UnsafeHandle.segments()(a1, (uint64_t)&v41);
  uint64_t v8 = v42;
  if (v42 >= a3) {
    uint64_t v9 = a3;
  }
  else {
    uint64_t v9 = v42;
  }
  *(void *)&long long v37 = a2;
  *((void *)&v37 + 1) = a3;
  sub_1A56D58F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671F78);
  swift_getWitnessTable();
  sub_1A559378C();
  sub_1A56D5038();
  uint64_t v45 = *((void *)&v39 + 1);
  sub_1A56D5078();
  swift_getWitnessTable();
  sub_1A56D5728();
  long long v35 = v37;
  long long v36 = v38;
  uint64_t v10 = sub_1A56D6098();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = v45;
  uint64_t v13 = a4;
  uint64_t v45 = v10;
  uint64_t v34 = WitnessTable;
  sub_1A569F68C((uint64_t)&v35, v39, v12, v40, *((uint64_t *)&v40 + 1), a4, v10, WitnessTable);
  if (v8 >= a3) {
    goto LABEL_13;
  }
  uint64_t v14 = sub_1A56D5898();
  uint64_t v15 = *(uint64_t (**)(long long *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15((long long *)v44, &v43, v14);
  uint64_t result = v15(&v35, (uint64_t *)v44, v14);
  if (v36) {
    goto LABEL_13;
  }
  if (__OFSUB__(a3, v9))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v17 = *((void *)&v35 + 1);
  if (a3 - v9 >= *((uint64_t *)&v35 + 1)) {
    uint64_t v18 = *((void *)&v35 + 1);
  }
  else {
    uint64_t v18 = a3 - v9;
  }
  if (__OFADD__(v9, v18)) {
    goto LABEL_15;
  }
  if (v9 + v18 >= v9)
  {
    uint64_t v19 = v35;
    v9 += v18;
    uint64_t v32 = sub_1A56D5908();
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    *(void *)&long long v37 = v19;
    *((void *)&v37 + 1) = v17;
    sub_1A56D5728();
    long long v37 = v39;
    long long v38 = v40;
    sub_1A569F68C((uint64_t)&v37, v32, v21, v23, v25, v13, v45, v34);
LABEL_13:
    uint64_t v26 = swift_retain();
    uint64_t v27 = sub_1A5592120(v26, v9, v13);
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t result = swift_release();
    *a5 = v27;
    a5[1] = v29;
    a5[2] = v31;
    a5[3] = v9;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t Deque.withContiguousStorageIfAvailable<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = a2;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v17 = a1;
  uint64_t v10 = a4;
  uint64_t v11 = sub_1A56D5898();
  uint64_t v12 = sub_1A5592284;
  uint64_t v13 = &v14;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68((uint64_t)sub_1A5591A78, (uint64_t)v9, a3, (uint64_t)&type metadata for _DequeBufferHeader, a4, v7, v11, MEMORY[0x1E4FBC0F0], (uint64_t)&v19);
}

uint64_t sub_1A558D39C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t)@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t result = a1[2];
  uint64_t v10 = a1[1] + result;
  if (*a1 < v10)
  {
    uint64_t v11 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v11, 1, a3);
  }
  if (v10 < result)
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = Deque._UnsafeHandle.buffer(for:)(result, v10);
  uint64_t result = a2(v12);
  if (!v4)
  {
    uint64_t v11 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v11, 1, a3);
  }
  return result;
}

uint64_t sub_1A558D464@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = Deque.makeIterator()(*v2, *(void *)(a1 + 16));
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v8;
  return result;
}

uint64_t sub_1A558D4C0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1A558D514()
{
  return 2;
}

uint64_t sub_1A558D51C(uint64_t a1)
{
  uint64_t v2 = sub_1A5592024(*v1, *(void *)(a1 + 16));
  swift_release();
  return v2;
}

uint64_t sub_1A558D558(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1A5591F3C(a2, a3, *v4, *(void *)(a4 + 16));
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  swift_release();
  *a1 = v6;
  a1[1] = v8;
  a1[2] = v10;
  return v12;
}

uint64_t sub_1A558D5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Deque.withContiguousStorageIfAvailable<A>(_:)(a1, a2, *v4, *(void *)(a4 + 16), a3);
}

uint64_t Deque.startIndex.getter()
{
  return 0;
}

uint64_t Deque.endIndex.getter(uint64_t a1, uint64_t a2)
{
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v3);
  return v4;
}

uint64_t Deque.indices.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v3);
  if ((v4 & 0x8000000000000000) == 0) {
    return 0;
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall Deque.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Deque.formIndex(after:)(Swift::Int *after)
{
  if (__OFADD__(*after, 1)) {
    __break(1u);
  }
  else {
    ++*after;
  }
}

Swift::Int __swiftcall Deque.index(before:)(Swift::Int before)
{
  BOOL v1 = __OFSUB__(before, 1);
  Swift::Int result = before - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Deque.formIndex(before:)(Swift::Int *before)
{
  if (__OFSUB__(*before, 1)) {
    __break(1u);
  }
  else {
    --*before;
  }
}

Swift::Int __swiftcall Deque.index(_:offsetBy:)(Swift::Int _, Swift::Int offsetBy)
{
  BOOL v2 = __OFADD__(_, offsetBy);
  Swift::Int result = _ + offsetBy;
  if (v2) {
    __break(1u);
  }
  return result;
}

Swift::Int_optional __swiftcall Deque.index(_:offsetBy:limitedBy:)(Swift::Int _, Swift::Int offsetBy, Swift::Int limitedBy)
{
  Swift::Int v3 = sub_1A55920CC(_, offsetBy, limitedBy);
  Swift::Bool v5 = v4 & 1;
  result.value = v3;
  result.is_nil = v5;
  return result;
}

Swift::Int __swiftcall Deque.distance(from:to:)(Swift::Int from, Swift::Int to)
{
  BOOL v2 = __OFSUB__(to, from);
  Swift::Int result = to - from;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t Deque.subscript.getter(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    Swift::Int result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a2, (uint64_t)&type metadata for _DequeBufferHeader, a3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v10);
    if (v12 > v5)
    {
      uint64_t v6 = MEMORY[0x1F4188790](result);
      uint64_t v10 = a3;
      uint64_t v11 = v5;
      MEMORY[0x1F4188790](v6);
      void v9[2] = a3;
      v9[3] = a3;
      v9[4] = sub_1A55922A4;
      v9[5] = v7;
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
      return sub_1A558BC68((uint64_t)sub_1A55938E0, (uint64_t)v9, a2, (uint64_t)&type metadata for _DequeBufferHeader, a3, v8, a3, MEMORY[0x1E4FBC0F0], (uint64_t)&v12);
    }
  }
  __break(1u);
  return result;
}

uint64_t Deque.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5592324(a1, a2, a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8);

  return v5(a1);
}

void (*Deque.subscript.modify(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v7 = (uint64_t *)malloc(0x30uLL);
  *a1 = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  v7[2] = (uint64_t)v3;
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[4] = v9;
  Swift::Int result = (void (*)(uint64_t))malloc(*(void *)(v9 + 64));
  v7[5] = (uint64_t)result;
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = (uint64_t)result;
    Swift::Int result = (void (*)(uint64_t))sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v12);
    if (*v7 > a2)
    {
      v7[1] = Deque._prepareForModify(at:)(v11, a2, a3);
      return sub_1A558DA84;
    }
  }
  __break(1u);
  return result;
}

void sub_1A558DA84(uint64_t a1)
{
  BOOL v1 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  BOOL v2 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  sub_1A558DCCC(*(void *)(*(void *)a1 + 16), *(void *)a1 + 8, (uint64_t)v2, v4);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v2, v4);
  free(v2);

  free(v1);
}

uint64_t Deque._prepareForModify(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v8 = &v18[-v7 - 8];
  sub_1A56D5C38();
  uint64_t v9 = sub_1A56D5C28();
  if ((v9 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v10 = *v3;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v11);
  *(&v17 - 4) = v5;
  *(&v17 - 3) = TupleTypeMetadata2;
  uint64_t v16 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A55938BC, (uint64_t)(&v17 - 6), v10, (uint64_t)&type metadata for _DequeBufferHeader, v5, v13, TupleTypeMetadata2, MEMORY[0x1E4FBC0F0], (uint64_t)v18);
  uint64_t v14 = *(void *)v8;
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, &v8[*(int *)(TupleTypeMetadata2 + 48)], v5);
  return v14;
}

uint64_t sub_1A558DCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v11);
  uint64_t v12 = type metadata accessor for Deque();
  Deque._finalizeModify(_:_:)(v9, (uint64_t)v7, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a4);
}

uint64_t sub_1A558DDC8@<X0>(Swift::Int forOffset@<X2>, Swift::Int *a2@<X8>)
{
  Swift::Int position = Deque._UnsafeHandle.slot(forOffset:)(forOffset).position;
  swift_getTupleTypeMetadata2();
  *a2 = position;
  return sub_1A56D5888();
}

uint64_t Deque._finalizeModify(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v13 = v5;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v9 = v5;
  uint64_t v10 = sub_1A55924DC;
  uint64_t v11 = &v12;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v8, v4, (uint64_t)&type metadata for _DequeBufferHeader, v5, v6, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v16);
}

uint64_t sub_1A558DF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v9 + *(void *)(v8 + 72) * v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v7, v12, v13);
  return sub_1A5587510((uint64_t)v7, v11, a5);
}

uint64_t Deque.subscript.getter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    Swift::Int result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a3, (uint64_t)&type metadata for _DequeBufferHeader, a4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v5);
    if (v6 >= a2)
    {
      type metadata accessor for Deque();
      swift_retain();
      swift_getWitnessTable();
      sub_1A56D6078();
      return v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A558E0F0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  Swift::Int v4 = a3[1];
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = type metadata accessor for Deque();
  swift_retain();
  sub_1A5592948(v5, v6, v7, v3, v4, v8);

  return swift_release();
}

uint64_t Deque.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, uint64_t a6)
{
  sub_1A5592948(a1, a2, a3, a4, a5, a6);

  return swift_release();
}

uint64_t Deque.replaceSubrange<A>(_:with:)(uint64_t a1, Swift::Int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A55924FC(a1, a2, a3, a4, a5, a6);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8);

  return v8(a3, a5);
}

void (*Deque.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v9 = malloc(0x38uLL);
  *a1 = v9;
  v9[5] = a4;
  v9[6] = v4;
  v9[3] = a2;
  v9[4] = a3;
  *uint64_t v9 = Deque.subscript.getter(a2, a3, *v4, *(void *)(a4 + 16));
  v9[1] = v10;
  void v9[2] = v11;
  return sub_1A558E2B0;
}

void sub_1A558E2B0(uint64_t **a1, char a2)
{
  BOOL v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v5 = (*a1)[5];
  uint64_t v7 = (*a1)[3];
  Swift::Int v6 = (*a1)[4];
  uint64_t v8 = (*a1)[2];
  if (a2)
  {
    swift_retain();
    sub_1A5592948(v3, v4, v8, v7, v6, v5);
    swift_release();
  }
  else
  {
    sub_1A5592948(**a1, v4, v8, v7, v6, v5);
  }
  swift_release();

  free(v2);
}

void *sub_1A558E370@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result - 1;
  }
  return result;
}

void *sub_1A558E388(void *result)
{
  if (__OFSUB__(*result, 1)) {
    __break(1u);
  }
  else {
    --*result;
  }
  return result;
}

uint64_t sub_1A558E3A0(void *a1, void *a2)
{
  BOOL v2 = __OFSUB__(*a2, *a1);
  uint64_t result = *a2 - *a1;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A558E3B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, *(void *)(a1 + 16), MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v5);
  *a2 = v6;
  return result;
}

void (*sub_1A558E43C(uint64_t **a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = (uint64_t *)malloc(0x28uLL);
  *a1 = v7;
  v7[4] = (uint64_t)sub_1A558E4F8(v7, *a2, *v3, *(void *)(a3 + 16));
  return sub_1A558E4B0;
}

void sub_1A558E4B0(void *a1)
{
  BOOL v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1A558E4F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(void *a1)
{
  uint64_t v7 = *(void *)(a4 - 8);
  *a1 = a4;
  a1[1] = v7;
  a1[2] = (uint64_t)malloc(*(void *)(v7 + 64));
  Deque.subscript.getter(a2, a3, a4);
  return sub_1A558E5B4;
}

void sub_1A558E5B4(void *a1)
{
  BOOL v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_1A558E600@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = Deque.subscript.getter(*a1, a1[1], *v3, *(void *)(a2 + 16));
  *a3 = result;
  a3[1] = v6;
  a3[2] = v7;
  return result;
}

uint64_t sub_1A558E640@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, *(void *)(a1 + 16), MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v5);
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    *a2 = 0;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1A558E6D0(uint64_t a1)
{
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v1, (uint64_t)&type metadata for _DequeBufferHeader, *(void *)(a1 + 16), MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v3);
  return v4;
}

void sub_1A558E744(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

void *sub_1A558E754@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (__OFADD__(*result, a2)) {
    __break(1u);
  }
  else {
    *a3 = *result + a2;
  }
  return result;
}

uint64_t sub_1A558E76C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1A55920CC(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1A558E7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5591CCC(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_1A558E7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5591CCC(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

void *sub_1A558E828@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_1A558E840(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

Swift::Void __swiftcall Deque.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(v2 + 16);
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v14);
  if (a2 < 0 || v15 <= a1) {
    goto LABEL_9;
  }
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v6, (uint64_t)&type metadata for _DequeBufferHeader, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v14);
  if (v15 <= a2)
  {
LABEL_10:
    __break(1u);
    return;
  }
  sub_1A56D5C38();
  uint64_t v8 = sub_1A56D5C28();
  if ((v8 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v9 = *v3;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  void v13[8] = v7;
  v13[9] = a1;
  Swift::Int v14 = a2;
  MEMORY[0x1F4188790](v10);
  void v13[2] = v7;
  v13[3] = sub_1A5592A70;
  v13[4] = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v13, v9, (uint64_t)&type metadata for _DequeBufferHeader, v7, v12, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v15);
}

uint64_t sub_1A558EA58(int a1, int a2, Swift::Int forOffset, Swift::Int a4)
{
  return sub_1A56D58C8();
}

uint64_t Deque.withContiguousMutableStorageIfAvailable<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 + 16);
  sub_1A56D5C38();
  uint64_t v9 = sub_1A56D5C28();
  if ((v9 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v10 = *v4;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v18[2] = v8;
  v18[3] = a4;
  v18[4] = a1;
  v18[5] = a2;
  MEMORY[0x1F4188790](v11);
  v14[2] = v8;
  uint64_t v15 = sub_1A56D5898();
  uint64_t v16 = sub_1A5592A90;
  uint64_t v17 = v18;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68((uint64_t)sub_1A55938BC, (uint64_t)v14, v10, (uint64_t)&type metadata for _DequeBufferHeader, v8, v12, v15, MEMORY[0x1E4FBC0F0], (uint64_t)&v19);
}

uint64_t sub_1A558EC5C@<X0>(uint64_t *a1@<X0>, void (*a2)(void *)@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t result = a1[2];
  uint64_t v10 = a1[1] + result;
  if (*a1 < v10) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, 1, 1, a3);
  }
  if (v10 < result)
  {
    __break(1u);
  }
  else
  {
    Deque._UnsafeHandle.buffer(for:)(result, v10);
    uint64_t v11 = sub_1A56D58D8();
    uint64_t v13 = v12;
    v14[0] = v11;
    v14[1] = v12;
    a2(v14);
    if (!v4) {
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, 0, 1, a3);
    }
    return sub_1A558EDA0((uint64_t)v14, v11, v13);
  }
  return result;
}

uint64_t sub_1A558EDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A56D58A8();
  uint64_t result = sub_1A56D58A8();
  if (!v5)
  {
LABEL_5:
    if (result) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (!result) {
    goto LABEL_8;
  }
  if (v5 != result)
  {
    __break(1u);
    goto LABEL_5;
  }
LABEL_6:
  if (*(void *)(a1 + 8) == a3) {
    return result;
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t Deque._withUnsafeMutableBufferPointerIfSupported<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Deque.withContiguousMutableStorageIfAvailable<A>(_:)(a1, a2, a3, a4);
}

uint64_t sub_1A558EE44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5591768(a1, a2, a3, a4, (void (*)(uint64_t, void))sub_1A5592324);
}

void (*sub_1A558EE5C(uint64_t **a1, uint64_t *a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v7 = (uint64_t *)malloc(0x30uLL);
  *a1 = v7;
  uint64_t v8 = *(void *)(a3 + 16);
  v7[2] = (uint64_t)v3;
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[4] = v9;
  uint64_t result = (void (*)(uint64_t))malloc(*(void *)(v9 + 64));
  v7[5] = (uint64_t)result;
  uint64_t v11 = *a2;
  if (v11 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = (uint64_t)result;
    uint64_t result = (void (*)(uint64_t))sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v13);
    if (v11 < *v7)
    {
      v7[1] = Deque._prepareForModify(at:)(v12, v11, a3);
      return sub_1A558DA84;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A558EFA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1A5592948(*a1, a1[1], a1[2], *a2, a2[1], a3);

  return swift_release();
}

void (*sub_1A558EFF4(void *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[3] = v3;
  v7[4] = a3;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  v7[5] = *a2;
  void v7[6] = v9;
  *uint64_t v7 = Deque.subscript.getter(v8, v9, *v3, *(void *)(a3 + 16));
  v7[1] = v10;
  v7[2] = v11;
  return sub_1A558F078;
}

void sub_1A558F078(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v6 = (*a1)[5];
  Swift::Int v5 = (*a1)[6];
  uint64_t v7 = (*a1)[4];
  uint64_t v8 = (*a1)[2];
  if (a2)
  {
    swift_retain();
    sub_1A5592948(v3, v4, v8, v6, v5, v7);
    swift_release();
  }
  else
  {
    sub_1A5592948(**a1, v4, v8, v6, v5, v7);
  }
  swift_release();

  free(v2);
}

uint64_t sub_1A558F130()
{
  return sub_1A56D5048();
}

void sub_1A558F1B0(Swift::Int *a1, Swift::Int *a2)
{
}

uint64_t sub_1A558F1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Deque._withUnsafeMutableBufferPointerIfSupported<A>(_:)(a1, a2, a4, a3);
}

uint64_t sub_1A558F1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Deque.withContiguousMutableStorageIfAvailable<A>(_:)(a1, a2, a4, a3);
}

Swift::Int sub_1A558F204(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v50 = a8;
  uint64_t v56 = a6;
  uint64_t v42 = a4;
  uint64_t v59 = (char *)a3;
  uint64_t v52 = a2;
  uint64_t v58 = (Sharing::_DequeSlot *)a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = sub_1A56D5B78();
  uint64_t v48 = *(void *)(v17 - 8);
  uint64_t v49 = v17;
  MEMORY[0x1F4188790](v17);
  int64_t v47 = (char *)&v41 - v18;
  uint64_t v55 = a13;
  uint64_t v53 = a12;
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v22 = sub_1A56D5B88();
  uint64_t v23 = *(void *)(v22 - 8);
  Swift::Int result = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v41 - v25;
  uint64_t v51 = a5;
  if (a5 < (uint64_t)v59)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v27 = *(void *)(AssociatedConformanceWitness + 8);
  Swift::Int result = sub_1A56D5058();
  if ((result & 1) == 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v45 = v27;
  uint64_t v57 = a11;
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v46 = a7;
  uint64_t v43 = v28 + 16;
  uint64_t v44 = v29;
  v29(v26, a7, AssociatedTypeWitness);
  swift_getWitnessTable();
  sub_1A56D5748();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  uint64_t v30 = v54;
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  uint64_t v33 = v51;
  uint64_t v32 = v52;
  Deque._UnsafeHandle.uncheckedReplaceInPlace<A>(inOffsets:with:)((uint64_t)v59, v51, (uint64_t)v21, &v58->position, v52, v57, v30, v31);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  uint64_t v59 = v21;
  Swift::Int result = v34(v21, v30);
  uint64_t v35 = v50;
  if (v50 < 0)
  {
    if (v42 < v33)
    {
LABEL_13:
      __break(1u);
      return result;
    }
    return Deque._UnsafeHandle.uncheckedRemove(offsets:)(v33, v42, v58, v32, v57);
  }
  else if (v50)
  {
    uint64_t v36 = v46;
    Swift::Int result = sub_1A56D5058();
    if (result)
    {
      uint64_t v37 = v31;
      long long v38 = v47;
      v44(v47, v36, AssociatedTypeWitness);
      uint64_t v39 = v49;
      swift_getWitnessTable();
      uint64_t v40 = (uint64_t)v59;
      sub_1A56D5748();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v39);
      return Deque._UnsafeHandle.uncheckedInsert<A>(contentsOf:count:atOffset:)(v40, v35, v33, (uint64_t)v58, v32, v57, v54, v37);
    }
    goto LABEL_12;
  }
  return result;
}

uint64_t Deque.init(repeating:count:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1A5592AB0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  return v5;
}

uint64_t Deque.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1A5592BD0(a1, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  return v6;
}

uint64_t Deque.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1A56D56A8();
  if (v8 < 1)
  {
    uint64_t v15 = Deque._Storage.init()();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    return v15;
  }
  else
  {
    uint64_t v9 = v8;
    uint64_t v10 = Deque._Storage.init(minimumCapacity:)();
    uint64_t v11 = MEMORY[0x1F4188790](v10);
    unsigned char v16[8] = a2;
    v16[9] = a3;
    v16[10] = a4;
    v16[11] = v9;
    v16[12] = a1;
    MEMORY[0x1F4188790](v11);
    uint64_t v16[2] = a2;
    v16[3] = sub_1A5592C40;
    void v16[4] = v12;
    swift_retain();
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v16, v10, (uint64_t)&type metadata for _DequeBufferHeader, a2, v13, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v17);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    return v10;
  }
}

uint64_t sub_1A558F904(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = result;
    Deque._UnsafeHandle.buffer(for:)(0, a3);
    uint64_t v12 = sub_1A56D58D8();
    uint64_t v14 = v13;
    MEMORY[0x1F4188790](v12);
    Swift::Int result = sub_1A56D52B8();
    if (v16 == 1) {
      Swift::Int result = _sSr7SharingE13initializeAll14fromContentsOfyqd___t7ElementQyd__RszSlRd__lF_0(a4, v12, v14, a5, a6, a7);
    }
    *(void *)(v15 + 8) = a3;
  }
  return result;
}

uint64_t sub_1A558FA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v11[1] = a2;
  v11[0] = a1;
  uint64_t v8 = sub_1A56D5078();
  uint64_t WitnessTable = swift_getWitnessTable();
  return _sSr7SharingE13initializeAll14fromContentsOfyqd___t7ElementQyd__RszSlRd__lF_0((uint64_t)v11, a3, a4, a5, v8, WitnessTable);
}

uint64_t sub_1A558FAC8(uint64_t a1, uint64_t a2)
{
  return Deque._UnsafeHandle.uncheckedAppend(_:)(*(void *)(v2 + 24), a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1A558FAFC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  swift_retain();
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v12, (uint64_t)&type metadata for _DequeBufferHeader, a4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v22);
  uint64_t result = swift_release();
  Swift::Int v14 = v24 + a2;
  if (__OFADD__(v24, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = a1;
    sub_1A56D5C38();
    char v15 = sub_1A56D5C28();
    uint64_t v16 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *a3, (uint64_t)&type metadata for _DequeBufferHeader, a4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v22);
    if (v24 < v14 || (v15 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v14, 0);
    }
    uint64_t v17 = *a3;
    uint64_t v18 = MEMORY[0x1F4188790](v16);
    unsigned char v21[8] = a4;
    v21[9] = a5;
    v21[10] = a6;
    v21[11] = v23;
    uint64_t v22 = a2;
    MEMORY[0x1F4188790](v18);
    void v21[2] = a4;
    v21[3] = sub_1A559361C;
    v21[4] = v19;
    swift_retain();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v21, v17, (uint64_t)&type metadata for _DequeBufferHeader, a4, v20, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v24);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A558FD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = (Swift::Int *)MEMORY[0x1F4188790](a1);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Deque._UnsafeHandle.availableSegments()(v11, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, a3);
  Swift::Int v14 = (void (*)(void, void))type metadata accessor for _UnsafeMutableWrappedBuffer();
  uint64_t result = _UnsafeMutableWrappedBuffer.initialize<A>(fromSequencePrefix:)(a5, v13, v14, a3, a4);
  uint64_t v16 = *(void *)(a1 + 8);
  BOOL v17 = __OFADD__(v16, result);
  uint64_t v18 = v16 + result;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(a1 + 8) = v18;
  }
  return result;
}

uint64_t sub_1A558FE90(Swift::Int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Deque._UnsafeHandle.uncheckedAppend(_:)(a3, (uint64_t)a1, a2, a5);
  Deque._UnsafeHandle.availableSegments()(a1, (uint64_t)v14);
  uint64_t v7 = type metadata accessor for _UnsafeMutableWrappedBuffer();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t result = _UnsafeMutableWrappedBuffer.initialize<A>(fromPrefixOf:)(a4, v7, AssociatedTypeWitness, AssociatedConformanceWitness);
  Swift::Int v11 = a1[1];
  BOOL v12 = __OFADD__(v11, result);
  Swift::Int v13 = v11 + result;
  if (v12) {
    __break(1u);
  }
  else {
    a1[1] = v13;
  }
  return result;
}

uint64_t Deque.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v22 = v9;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t result = sub_1A56D52B8();
  if (LOBYTE(v25[0]) == 1)
  {
    uint64_t result = sub_1A56D56A8();
    if (result >= 1)
    {
      uint64_t v11 = result;
      uint64_t v12 = *v4;
      swift_retain();
      sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v12, (uint64_t)&type metadata for _DequeBufferHeader, v9, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v21);
      uint64_t result = swift_release();
      Swift::Int v13 = v25[0] + v11;
      if (__OFADD__(v25[0], v11))
      {
        __break(1u);
      }
      else
      {
        sub_1A56D5C38();
        char v14 = sub_1A56D5C28();
        uint64_t v15 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v5, (uint64_t)&type metadata for _DequeBufferHeader, v9, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v21);
        if (v25[0] < v13 || (v14 & 1) == 0)
        {
          type metadata accessor for Deque._Storage();
          Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v13, 0);
        }
        uint64_t v16 = *v5;
        uint64_t v17 = MEMORY[0x1F4188790](v15);
        v20[8] = v9;
        v20[9] = a3;
        v20[10] = a4;
        v20[11] = v11;
        uint64_t v21 = a1;
        MEMORY[0x1F4188790](v17);
        v20[2] = v9;
        v20[3] = sub_1A5592C6C;
        v20[4] = v18;
        swift_retain();
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
        sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v20, v16, (uint64_t)&type metadata for _DequeBufferHeader, v9, v19, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v25);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1A5590248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *(void *)(a6 - 8);
  Swift::Int v13 = (Swift::Int *)MEMORY[0x1F4188790](a1);
  uint64_t v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Deque._UnsafeHandle.availableSegments()(v13, (uint64_t)v21);
  uint64_t v16 = type metadata accessor for _UnsafeMutableWrappedBuffer();
  _UnsafeMutableWrappedBuffer.prefix(_:)(a3, (uint64_t)v22);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v15, a4, a6);
  uint64_t result = _UnsafeMutableWrappedBuffer.initialize<A>(from:)((uint64_t)v15, v16, a6, a7);
  uint64_t v18 = *(void *)(a1 + 8);
  BOOL v19 = __OFADD__(v18, a3);
  uint64_t v20 = v18 + a3;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(a1 + 8) = v20;
  }
  return result;
}

uint64_t Deque.insert(_:at:)(uint64_t result, Swift::Int a2, uint64_t a3)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(a3 + 16);
  swift_retain();
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v6, (uint64_t)&type metadata for _DequeBufferHeader, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v16);
  uint64_t result = swift_release();
  if (v18 < a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_retain();
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v6, (uint64_t)&type metadata for _DequeBufferHeader, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v16);
  uint64_t result = swift_release();
  Swift::Int v8 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
LABEL_10:
    __break(1u);
    return result;
  }
  sub_1A56D5C38();
  char v9 = sub_1A56D5C28();
  uint64_t v10 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v16);
  if (v18 < v8 || (v9 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v8, 0);
  }
  uint64_t v11 = *v3;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v15[8] = v7;
  v15[9] = a2;
  uint64_t v16 = v5;
  uint64_t v17 = v3;
  MEMORY[0x1F4188790](v12);
  v15[2] = v7;
  uint64_t v15[3] = sub_1A5592CC4;
  v15[4] = v13;
  swift_retain();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v15, v11, (uint64_t)&type metadata for _DequeBufferHeader, v7, v14, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v18);
  return swift_release();
}

uint64_t sub_1A5590630(Swift::Int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v15) {
    return Deque._UnsafeHandle.uncheckedPrepend(_:)(a4, a1, a2, a6);
  }
  uint64_t v16 = *v12;
  swift_retain();
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v16, (uint64_t)&type metadata for _DequeBufferHeader, a6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v19);
  swift_release();
  if (v21 == a3) {
    return Deque._UnsafeHandle.uncheckedAppend(_:)(a4, (uint64_t)a1, a2, a6);
  }
  Deque._UnsafeHandle.openGap(ofSize:atOffset:)(1, a3, a1, (uint64_t)&v21);
  uint64_t result = sub_1A56D58A8();
  if (result)
  {
    uint64_t v18 = result;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a4, a6);
    return sub_1A5587510((uint64_t)v14, v18, a6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Deque.insert<A>(contentsOf:at:)(uint64_t a1, Swift::Int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A5592CE4(a1, a2, a3, a4, a5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8);

  return v7(a1, a4);
}

uint64_t sub_1A5590874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v16, v18, v19);
  return Deque._UnsafeHandle.uncheckedInsert<A>(contentsOf:count:atOffset:)((uint64_t)v16, a4, a5, a1, a2, a6, a7, a8);
}

uint64_t Deque.remove(at:)(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(a2 + 16);
  swift_retain();
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v4, (uint64_t)&type metadata for _DequeBufferHeader, v5, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v12);
  uint64_t result = swift_release();
  if (v13 <= v3)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1A56D5C38();
  uint64_t v6 = sub_1A56D5C28();
  if ((v6 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v7 = *v2;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v11[8] = v5;
  v11[9] = v2;
  uint64_t v12 = v3;
  MEMORY[0x1F4188790](v8);
  void v11[2] = v5;
  void v11[3] = v5;
  v11[4] = sub_1A5592F8C;
  v11[5] = v9;
  swift_retain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A558ACB0, (uint64_t)v11, v7, (uint64_t)&type metadata for _DequeBufferHeader, v5, v10, v5, MEMORY[0x1E4FBC0F0], (uint64_t)&v13);
  return swift_release();
}

Swift::Int sub_1A5590B3C(Sharing::_DequeSlot *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  Swift::Int result = Deque.subscript.getter(a4, *a3, a5);
  uint64_t v10 = a4 + 1;
  if (__OFADD__(a4, 1))
  {
    __break(1u);
  }
  else if (v10 >= a4)
  {
    return Deque._UnsafeHandle.uncheckedRemove(offsets:)(a4, v10, a1, a2, a5);
  }
  __break(1u);
  return result;
}

uint64_t Deque.removeSubrange(_:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(a3 + 16);
  Swift::Int result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v13);
  if (v14 < a2)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1A56D5C38();
  uint64_t v7 = sub_1A56D5C28();
  if ((v7 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  void v12[8] = v6;
  v12[9] = v5;
  uint64_t v13 = a2;
  MEMORY[0x1F4188790](v9);
  void v12[2] = v6;
  v12[3] = sub_1A5592FAC;
  v12[4] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v12, v8, (uint64_t)&type metadata for _DequeBufferHeader, v6, v11, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v14);
}

uint64_t Deque._customRemoveLast()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = *v2;
  swift_getWitnessTable();
  uint64_t result = sub_1A56D5738();
  if (result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
    sub_1A56D5C38();
    uint64_t v7 = sub_1A56D5C28();
    if ((v7 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._makeUniqueCopy()();
    }
    uint64_t v8 = *v2;
    uint64_t v9 = MEMORY[0x1F4188790](v7);
    void v12[8] = v6;
    MEMORY[0x1F4188790](v9);
    void v12[2] = v6;
    v12[3] = v6;
    v12[4] = sub_1A5592FE4;
    v12[5] = v10;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55938E0, (uint64_t)v12, v8, (uint64_t)&type metadata for _DequeBufferHeader, v6, v11, v6, MEMORY[0x1E4FBC0F0], (uint64_t)&v13);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
  return result;
}

Swift::Bool __swiftcall Deque._customRemoveLast(_:)(Swift::Int a1)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  Swift::Int v3 = a1;
  uint64_t v4 = *(void *)(v1 + 16);
  LOBYTE(a1) = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v12);
  if (v14 < v3)
  {
LABEL_7:
    __break(1u);
    return a1;
  }
  sub_1A56D5C38();
  uint64_t v5 = sub_1A56D5C28();
  if ((v5 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v12 = v4;
  Swift::Int v13 = v3;
  MEMORY[0x1F4188790](v7);
  void v11[2] = v4;
  void v11[3] = sub_1A5593010;
  v11[4] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v11, v6, (uint64_t)&type metadata for _DequeBufferHeader, v4, v9, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v14);
  LOBYTE(a1) = 1;
  return a1;
}

uint64_t Deque.removeFirst()(uint64_t a1)
{
  uint64_t v11 = *v1;
  swift_getWitnessTable();
  uint64_t result = sub_1A56D5738();
  if (result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 16);
    sub_1A56D5C38();
    uint64_t v5 = sub_1A56D5C28();
    if ((v5 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._makeUniqueCopy()();
    }
    uint64_t v6 = *v1;
    uint64_t v7 = MEMORY[0x1F4188790](v5);
    v10[8] = v4;
    MEMORY[0x1F4188790](v7);
    v10[2] = v4;
    v10[3] = v4;
    void v10[4] = sub_1A558AC84;
    v10[5] = v8;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    return sub_1A558BC68((uint64_t)sub_1A55938E0, (uint64_t)v10, v6, (uint64_t)&type metadata for _DequeBufferHeader, v4, v9, v4, MEMORY[0x1E4FBC0F0], (uint64_t)&v11);
  }
  return result;
}

Swift::Void __swiftcall Deque.removeFirst(_:)(Swift::Int a1)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = *(void *)(v1 + 16);
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v2, (uint64_t)&type metadata for _DequeBufferHeader, v4, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v11);
  if (v13 < a1)
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_1A56D5C38();
  uint64_t v5 = sub_1A56D5C28();
  if ((v5 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v11 = v4;
  Swift::Int v12 = a1;
  MEMORY[0x1F4188790](v7);
  v10[2] = v4;
  v10[3] = sub_1A5593044;
  void v10[4] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v10, v6, (uint64_t)&type metadata for _DequeBufferHeader, v4, v9, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v13);
}

Swift::Void __swiftcall Deque.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  if (keepingCapacity)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    sub_1A56D5C38();
    uint64_t v4 = sub_1A56D5C28();
    if ((v4 & 1) == 0)
    {
      type metadata accessor for Deque._Storage();
      Deque._Storage._makeUniqueCopy()();
    }
    uint64_t v5 = *v2;
    uint64_t v6 = MEMORY[0x1F4188790](v4);
    void v9[8] = v3;
    MEMORY[0x1F4188790](v6);
    void v9[2] = v3;
    v9[3] = sub_1A5593078;
    v9[4] = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v9, v5, (uint64_t)&type metadata for _DequeBufferHeader, v3, v8, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v10);
  }
  else
  {
    swift_release();
    uint64_t *v2 = Deque._Storage.init()();
  }
}

uint64_t sub_1A55914C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Deque.init()(*(void *)(a1 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_1A55914F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A55924FC(*a1, a1[1], a2, a5, a3, a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v7(a2, a3);
}

uint64_t sub_1A559157C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_1A5592AB0(a1, a2, v6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  *a4 = v7;
  return result;
}

uint64_t sub_1A55915EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8 = sub_1A5592BD0(a1, *(void *)(a4 + 16), a2, a3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a5 = v8;
  return result;
}

uint64_t sub_1A5591668(uint64_t a1, uint64_t a2)
{
  Deque.append(_:)(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);

  return v4(a1);
}

uint64_t sub_1A55916D4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  Deque.append<A>(contentsOf:)(a1, a4, a2, a3);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8);

  return v6(a1, a2);
}

uint64_t sub_1A5591750(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5591768(a1, a2, a3, a4, (void (*)(uint64_t, void))Deque.insert(_:at:));
}

uint64_t sub_1A5591768(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void))
{
  a5(a1, *a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8);

  return v7(a1);
}

uint64_t sub_1A55917DC(uint64_t a1, Swift::Int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A5592CE4(a1, *a2, a5, a3, a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v7(a1, a3);
}

uint64_t sub_1A559185C(uint64_t *a1, uint64_t a2)
{
  return Deque.remove(at:)(*a1, a2);
}

uint64_t sub_1A5591864(uint64_t *a1, uint64_t a2)
{
  return Deque.removeSubrange(_:)(*a1, a1[1], a2);
}

uint64_t sub_1A5591878(Swift::Int a1)
{
  return 1;
}

uint64_t sub_1A55918A0()
{
  return sub_1A56D5778();
}

uint64_t sub_1A5591918(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  uint64_t v7 = a2;
  uint64_t v8 = type metadata accessor for Deque.Iterator();
  uint64_t v9 = sub_1A559387C;
  uint64_t v10 = &v11;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A55938BC, (uint64_t)v6, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, v4, v8, MEMORY[0x1E4FBC0F0], (uint64_t)v14);
  return v15;
}

uint64_t sub_1A55919DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1 + *(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 72) * *(void *)(v2 + 24));
}

uint64_t sub_1A5591A38(uint64_t a1, uint64_t a2)
{
  return sub_1A558FAFC(a1, a2, *(uint64_t **)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1A5591A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A558FD5C(a1, v2[5], v2[3], v2[4], a2);
}

uint64_t sub_1A5591A78(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A5589830(a1, a2, *(uint64_t (**)(void))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1A5591A9C(Swift::Int *a1, uint64_t a2)
{
  return sub_1A558FE90(a1, a2, v2[5], v2[6], v2[2]);
}

uint64_t sub_1A5591AC0(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1A56D5798();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)v17 - v10;
  v17[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_1A56D5028();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v16)(v11, v5);
    goto LABEL_5;
  }
  char v13 = sub_1A56D5028();
  Swift::Int v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
  if ((v13 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A5591CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v23 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v22 - v17;
  char v19 = sub_1A56D5028();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A5591F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v9 = a4;
  type metadata accessor for Deque.Iterator();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_1A559376C;
  uint64_t v12 = &v13;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A5591A78, (uint64_t)v8, a3, (uint64_t)&type metadata for _DequeBufferHeader, a4, v6, TupleTypeMetadata2, MEMORY[0x1E4FBC0F0], (uint64_t)v18);
  return v19;
}

uint64_t sub_1A5592024(uint64_t a1, uint64_t a2)
{
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a2, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v3);
  return sub_1A558CEB8();
}

uint64_t sub_1A55920CC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >= 1)
  {
    if (v3 < 0 || v3 >= (unint64_t)a2) {
      goto LABEL_9;
    }
    return 0;
  }
  if (v3 <= 0 && v3 > a2) {
    return 0;
  }
LABEL_9:
  BOOL v4 = __OFADD__(result, a2);
  result += a2;
  if (v4) {
LABEL_12:
  }
    __break(1u);
  return result;
}

uint64_t sub_1A5592120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  uint64_t v14 = a2;
  uint64_t v15 = a1;
  uint64_t v8 = a3;
  uint64_t v9 = type metadata accessor for Deque.Iterator();
  uint64_t v10 = sub_1A5593824;
  uint64_t v11 = &v12;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  sub_1A558BC68((uint64_t)sub_1A5591A78, (uint64_t)v7, a1, (uint64_t)&type metadata for _DequeBufferHeader, a3, v5, v9, MEMORY[0x1E4FBC0F0], (uint64_t)v16);
  return v17;
}

Sharing::_DequeSlot sub_1A55921EC@<X0>(Sharing::_DequeSlot *a1@<X0>, char *a2@<X8>)
{
  BOOL v4 = *(Sharing::_DequeSlot **)(v2 + 24);
  result.Swift::Int position = Deque._UnsafeHandle.slot(_:offsetBy:)(a1[2], a1[1].position).position;
  if (result.position && result.position != v4[1].position)
  {
    v4[1].Swift::Int position = 0;
    v4[2].Swift::Int position = result.position;
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1A5592258(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A5589830(a1, a2, *(uint64_t (**)(void))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 16), MEMORY[0x1E4FBB390], a3);
}

uint64_t sub_1A5592284@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A558D39C(a1, *(uint64_t (**)(uint64_t))(v2 + 32), *(void *)(v2 + 24), a2);
}

uint64_t sub_1A55922A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  v6.Swift::Int position = Deque._UnsafeHandle.slot(forOffset:)(*(void *)(v2 + 24)).position;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1 + *(void *)(*(void *)(v5 - 8) + 72) * v6.position, v5);
}

uint64_t sub_1A5592324(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(a3 + 16);
  Sharing::_DequeSlot result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v3, (uint64_t)&type metadata for _DequeBufferHeader, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v13);
  if (v14 <= a2)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1A56D5C38();
  uint64_t v7 = sub_1A56D5C28();
  if ((v7 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._makeUniqueCopy()();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  void v12[8] = v6;
  v12[9] = a2;
  uint64_t v13 = v5;
  MEMORY[0x1F4188790](v9);
  void v12[2] = v6;
  v12[3] = sub_1A55936EC;
  v12[4] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v12, v8, (uint64_t)&type metadata for _DequeBufferHeader, v6, v11, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v14);
}

uint64_t sub_1A55924C0@<X0>(Swift::Int *a1@<X8>)
{
  return sub_1A558DDC8(*(void *)(v1 + 24), a1);
}

uint64_t sub_1A55924DC(uint64_t a1, uint64_t a2)
{
  return sub_1A558DF1C(a1, a2, v2[3], v2[4], v2[2]);
}

void sub_1A55924FC(uint64_t a1, Swift::Int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a3;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v44 = (char *)v39 - v15;
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v48 = v6;
  uint64_t v16 = *v6;
  uint64_t v17 = *(void *)(a4 + 16);
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v6, (uint64_t)&type metadata for _DequeBufferHeader, v17, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v38);
  if (v49 < a2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::Int v43 = a2;
  BOOL v18 = __OFSUB__(a2, a1);
  Swift::Int v19 = a2 - a1;
  if (v18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v42 = v11;
  uint64_t v20 = sub_1A56D56A8();
  uint64_t v21 = v20 - v19;
  if (__OFSUB__(v20, v19))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v22 = v20;
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v16, (uint64_t)&type metadata for _DequeBufferHeader, v17, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v38);
  Swift::Int v23 = v49 + v21;
  if (__OFADD__(v49, v21))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v40 = v21;
  uint64_t v41 = AssociatedTypeWitness;
  sub_1A56D5C38();
  uint64_t v24 = v48;
  char v25 = sub_1A56D5C28();
  sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v24, (uint64_t)&type metadata for _DequeBufferHeader, v17, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v38);
  if (v49 < v23 || (v25 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v23, 0);
  }
  if (v22 >= v19) {
    uint64_t v22 = v19;
  }
  if (!__OFADD__(a1, v22))
  {
    v39[0] = a1 + v22;
    v39[1] = v19;
    uint64_t v26 = v45;
    uint64_t v27 = v46;
    uint64_t v28 = a1;
    v39[2] = 0;
    uint64_t v29 = v47;
    sub_1A56D5698();
    uint64_t v30 = v44;
    sub_1A56D56B8();
    uint64_t v31 = (uint64_t (*)(char *, uint64_t))v42[1];
    uint64_t v32 = v14;
    uint64_t v33 = v41;
    uint64_t v34 = v31(v32, v41);
    uint64_t v42 = v39;
    uint64_t v48 = (uint64_t *)*v48;
    uint64_t v35 = MEMORY[0x1F4188790](v34);
    v39[-12] = v17;
    v39[-11] = v27;
    v39[-10] = v29;
    v39[-9] = v28;
    uint64_t v36 = v39[0];
    v39[-8] = v43;
    v39[-7] = v36;
    v39[-6] = v26;
    v39[-5] = v30;
    v39[-4] = v40;
    v39[-3] = v22;
    MEMORY[0x1F4188790](v35);
    v39[-4] = v17;
    v39[-3] = sub_1A55936AC;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)&v39[-6], (uint64_t)v48, (uint64_t)&type metadata for _DequeBufferHeader, v17, v37, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v49);
    v31(v30, v33);
    return;
  }
LABEL_18:
  __break(1u);
}

void sub_1A5592948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, uint64_t a6)
{
  if (a4 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v6, (uint64_t)&type metadata for _DequeBufferHeader, *(void *)(a6 + 16), MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v15);
    if (v16[0] >= a5)
    {
      v16[0] = a1;
      v16[1] = a2;
      uint64_t v16[2] = a3;
      swift_getWitnessTable();
      uint64_t v13 = sub_1A56D6098();
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_1A55924FC(a4, a5, (uint64_t)v16, a6, v13, WitnessTable);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1A5592A70(int a1, int a2)
{
  return sub_1A558EA58(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1A5592A90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A558EC5C(a1, *(void (**)(void *))(v2 + 32), *(void *)(v2 + 24), a2);
}

uint64_t sub_1A5592AB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    uint64_t v6 = Deque.init(minimumCapacity:)(a2, a3);
    uint64_t v7 = MEMORY[0x1F4188790](v6);
    unsigned char v10[8] = a3;
    v10[9] = a2;
    v10[10] = v5;
    MEMORY[0x1F4188790](v7);
    v10[2] = a3;
    v10[3] = sub_1A5593658;
    void v10[4] = v8;
    swift_retain();
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v10, v6, (uint64_t)&type metadata for _DequeBufferHeader, a3, v9, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)v11);
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1A5592BD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = Deque._Storage.init()();
  uint64_t v7 = type metadata accessor for Deque();
  Deque.append<A>(contentsOf:)(a1, v7, a3, a4);
  return v9;
}

uint64_t sub_1A5592C40(uint64_t a1, uint64_t a2)
{
  return sub_1A5592C98(a1, a2, sub_1A558F904);
}

uint64_t sub_1A5592C6C(uint64_t a1, uint64_t a2)
{
  return sub_1A5592C98(a1, a2, sub_1A5590248);
}

uint64_t sub_1A5592C98(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[5], v3[6], v3[2], v3[3], v3[4]);
}

uint64_t sub_1A5592CC4(Swift::Int *a1, uint64_t a2)
{
  return sub_1A5590630(a1, a2, v2[3], v2[4], v2[5], v2[2]);
}

uint64_t sub_1A5592CE4(uint64_t result, Swift::Int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v5;
  uint64_t v10 = result;
  uint64_t v11 = *v6;
  uint64_t v12 = *(void *)(a3 + 16);
  Sharing::_DequeSlot result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, *v6, (uint64_t)&type metadata for _DequeBufferHeader, v12, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v22);
  if (v25 < a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = sub_1A56D56A8();
  Sharing::_DequeSlot result = sub_1A558BB64((uint64_t)sub_1A55896D4, 0, v11, (uint64_t)&type metadata for _DequeBufferHeader, v12, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v22);
  Swift::Int v14 = v25 + v13;
  if (__OFADD__(v25, v13))
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v24 = v10;
  sub_1A56D5C38();
  char v15 = sub_1A56D5C28();
  uint64_t v16 = sub_1A558BB64((uint64_t)sub_1A54E1D40, 0, *v6, (uint64_t)&type metadata for _DequeBufferHeader, v12, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v22);
  if (v25 < v14 || (v15 & 1) == 0)
  {
    type metadata accessor for Deque._Storage();
    Deque._Storage._ensureUnique(minimumCapacity:linearGrowth:)(v14, 0);
  }
  uint64_t v17 = *v6;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unsigned char v21[8] = v12;
  v21[9] = a4;
  v21[10] = a5;
  v21[11] = v24;
  uint64_t v22 = v13;
  Swift::Int v23 = a2;
  MEMORY[0x1F4188790](v18);
  void v21[2] = v12;
  v21[3] = sub_1A55935F8;
  v21[4] = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
  return sub_1A558BC68((uint64_t)sub_1A55892A8, (uint64_t)v21, v17, (uint64_t)&type metadata for _DequeBufferHeader, v12, v20, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC0F0], (uint64_t)&v25);
}

Swift::Int sub_1A5592F8C(Sharing::_DequeSlot *a1, uint64_t a2)
{
  return sub_1A5590B3C(a1, a2, *(uint64_t **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 16));
}

Swift::Int sub_1A5592FAC(Sharing::_DequeSlot *a1, uint64_t a2)
{
  return Deque._UnsafeHandle.uncheckedRemove(offsets:)(v2[3], v2[4], a1, a2, v2[2]);
}

uint64_t sub_1A5592FE4(uint64_t a1)
{
  return Deque._UnsafeHandle.uncheckedRemoveLast()(a1);
}

void sub_1A5593010()
{
  Deque._UnsafeHandle.uncheckedRemoveLast(_:)(*(void *)(v0 + 24));
}

void sub_1A5593044()
{
  Deque._UnsafeHandle.uncheckedRemoveFirst(_:)(*(void *)(v0 + 24));
}

void sub_1A5593078()
{
}

uint64_t sub_1A55930A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A55930C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A55930DC()
{
  return sub_1A5593284();
}

unint64_t sub_1A55930F4()
{
  unint64_t result = qword_1E9671EF0[0];
  if (!qword_1E9671EF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9671EF0);
  }
  return result;
}

uint64_t sub_1A5593148()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A55931AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A55931C8()
{
  return sub_1A5593284();
}

uint64_t sub_1A55931E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A5593244()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A5593260()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1A559326C()
{
  return sub_1A5593284();
}

uint64_t sub_1A5593284()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A55932D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A55932EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A5593350()
{
  return swift_getWitnessTable();
}

uint64_t sub_1A55933B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return Deque.subscript.getter(*a2, *a1, *(uint64_t *)((char *)a2 + a3 - 8));
}

uint64_t sub_1A55933CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = type metadata accessor for Deque();
  return sub_1A5592324(a1, v4, v5);
}

uint64_t sub_1A559341C()
{
  return 8;
}

void *sub_1A5593428(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A5593434@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Deque.subscript.getter(*a2, a2[1], *a1, *(uint64_t *)((char *)a2 + a3 - 8));
  *a4 = result;
  a4[1] = v6;
  a4[2] = v7;
  return result;
}

uint64_t sub_1A5593474()
{
  return 8;
}

uint64_t sub_1A5593480(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_1A55934B8()
{
  return swift_release();
}

void *sub_1A55934C0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_1A5593518(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_1A5593558(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1A55935A0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Deque.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A55935F8(uint64_t a1, uint64_t a2)
{
  return sub_1A5590874(a1, a2, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4]);
}

uint64_t sub_1A559361C(uint64_t *a1, uint64_t a2)
{
  return sub_1A5593844(a1, a2);
}

uint64_t sub_1A5593634(uint64_t a1, uint64_t a2)
{
  return sub_1A558FA34(a1, a2, v2[5], v2[6], v2[2]);
}

uint64_t sub_1A5593658(uint64_t result)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(v1 + 24);
  if (v3 >= 1) {
    uint64_t result = sub_1A56D5858();
  }
  *(void *)(v2 + 8) = v3;
  return result;
}

Swift::Int sub_1A55936AC(uint64_t *a1, uint64_t a2)
{
  return sub_1A558F204(a1, a2, v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11], v2[12], v2[2], v2[3], v2[4]);
}

uint64_t sub_1A55936EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  Swift::Int v4 = v2[3];
  uint64_t v6 = v2[4];
  v7.Swift::Int position = Deque._UnsafeHandle.slot(forOffset:)(v4).position;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2 + *(void *)(*(void *)(v5 - 8) + 72) * v7.position, v6, v5);
}

uint64_t sub_1A559376C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A558CFC4(a1, v2[3], v2[4], v2[2], a2);
}

unint64_t sub_1A559378C()
{
  unint64_t result = qword_1E9671F80[0];
  if (!qword_1E9671F80[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9671F78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9671F80);
  }
  return result;
}

uint64_t sub_1A55937E8(uint64_t a1, uint64_t a2)
{
  return sub_1A558CBC0(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 16));
}

uint64_t sub_1A5593804(void *a1, uint64_t a2)
{
  return sub_1A558CC78(a1, a2, *(_OWORD **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t sub_1A5593824@<X0>(Sharing::_DequeSlot *a1@<X0>, Sharing::_DequeSlot *a2@<X8>)
{
  return sub_1A558CA1C(*(void *)(v2 + 24), a1, *(void *)(v2 + 32), a2);
}

uint64_t sub_1A5593844(uint64_t *a1, uint64_t a2)
{
  return Deque._UnsafeHandle.uncheckedAppend(contentsOf:)(v2[5], v2[6], a1, a2, v2[2]);
}

uint64_t sub_1A559387C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[1] + v3;
  if (*a1 < v4) {
    uint64_t v4 = *a1;
  }
  *a2 = *(void *)(v2 + 24);
  a2[1] = v3;
  a2[2] = v4;
  return swift_retain();
}

uint64_t sub_1A55938BC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A5591A78(a1, a2, a3);
}

uint64_t sub_1A55938E0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1A558ACB0(a1, a2, a3);
}

uint64_t _UnsafeWrappedBuffer.init(start:count:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5593AD4(MEMORY[0x1E4FBB0B0], a1);
}

uint64_t _UnsafeWrappedBuffer.init(first:count:second:count:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A56D5068();
  uint64_t v4 = v3;
  uint64_t result = sub_1A56D5068();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = result;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.init(mutating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1A56D58D8();
  uint64_t v8 = v7;
  sub_1A56D5078();
  uint64_t v9 = sub_1A56D5898();
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v23, a1 + 16, v9);
  v10(v19, (uint64_t)v23, v9);
  v18[2] = a2;
  uint64_t v11 = sub_1A56D58F8();
  uint64_t result = sub_1A5585B58((void (*)(char *, char *))sub_1A559532C, (uint64_t)v18, MEMORY[0x1E4FBC248], v11, v12, (uint64_t)&v20);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  if (v21) {
    uint64_t v16 = v20;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v21) {
    char v17 = v22;
  }
  else {
    char v17 = 1;
  }
  if (!v22) {
    uint64_t v14 = v16;
  }
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v14;
  *(void *)(a3 + 24) = v15;
  *(unsigned char *)(a3 + 32) = v17;
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.init(start:count:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5593AD4(MEMORY[0x1E4FBB728], a1);
}

uint64_t sub_1A5593AD4@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if ((a5 & 1) == 0 && a4 == 0) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = a3;
  }
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = v6;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1 | (a4 == 0);
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.assign<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  _UnsafeMutableWrappedBuffer.deinitialize()();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  return _UnsafeMutableWrappedBuffer.initialize<A>(from:)((uint64_t)v10, a2, a3, a4);
}

uint64_t _UnsafeMutableWrappedBuffer.initialize<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v65 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = sub_1A56D5B78();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v53 = (char *)&v47 - v11;
  uint64_t v64 = a4;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v59 = (char *)&v47 - v13;
  uint64_t v62 = AssociatedConformanceWitness;
  uint64_t v14 = sub_1A56D5B88();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v56 = (char *)&v47 - v16;
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = *(void *)(a2 + 16);
  sub_1A56D58F8();
  uint64_t v23 = sub_1A56D5898();
  uint64_t v24 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v66, v4 + 2, v23);
  v24(v67, v66, v23);
  if (v68)
  {
    uint64_t v25 = *v4;
    uint64_t v26 = v4[1];
    uint64_t v27 = v65;
    _sSr7SharingE13initializeAll14fromContentsOfyqd___t7ElementQyd__RszSlRd__lF_0(v65, v25, v26, v22, a3, v64);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(v27, a3);
  }
  uint64_t v52 = v22;
  uint64_t v50 = v67[0];
  uint64_t v49 = v67[1];
  sub_1A56D5698();
  uint64_t v29 = *v4;
  uint64_t v30 = v4[1];
  sub_1A56D56B8();
  uint64_t v31 = v63;
  uint64_t v32 = (char *)v63 + 8;
  uint64_t v51 = (void (*)(char *, uint64_t))*((void *)v63 + 1);
  v51(v19, AssociatedTypeWitness);
  uint64_t v33 = *(void *)(v62 + 8);
  uint64_t result = sub_1A56D5058();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v34 = (void (*)(char *, char *, uint64_t))*((void *)v31 + 2);
  uint64_t v48 = v30;
  uint64_t v35 = v56;
  uint64_t v63 = (void (*)(uint64_t, uint64_t))((char *)v31 + 16);
  uint64_t v47 = v34;
  v34(v56, v21, AssociatedTypeWitness);
  uint64_t v62 = v33;
  uint64_t v36 = v58;
  swift_getWitnessTable();
  uint64_t v37 = (uint64_t)v59;
  sub_1A56D5748();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v36);
  uint64_t v38 = v61;
  uint64_t v39 = swift_getAssociatedConformanceWitness();
  uint64_t v40 = v29;
  uint64_t v41 = v52;
  uint64_t v58 = v39;
  _sSr7SharingE13initializeAll14fromContentsOfyqd___t7ElementQyd__RszSlRd__lF_0(v37, v40, v48, v52, v38, v39);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v42(v37, v38);
  uint64_t result = sub_1A56D5058();
  if ((result & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v62 = (uint64_t)v32;
  uint64_t v43 = v37;
  uint64_t v44 = v53;
  v47(v53, v21, AssociatedTypeWitness);
  uint64_t v63 = v42;
  uint64_t v45 = v55;
  swift_getWitnessTable();
  uint64_t v46 = v65;
  sub_1A56D5748();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v45);
  _sSr7SharingE13initializeAll14fromContentsOfyqd___t7ElementQyd__RszSlRd__lF_0(v43, v50, v49, v41, v38, v58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(v46, a3);
  v63(v43, v38);
  return ((uint64_t (*)(char *, uint64_t))v51)(v21, AssociatedTypeWitness);
}

uint64_t _UnsafeMutableWrappedBuffer.init(first:count:second:count:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1A56D58B8();
  uint64_t v4 = v3;
  uint64_t result = sub_1A56D58B8();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  if (v6) {
    uint64_t v7 = result;
  }
  else {
    uint64_t v7 = 0;
  }
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v6 == 0;
  return result;
}

Swift::Void __swiftcall _UnsafeMutableWrappedBuffer.deinitialize()()
{
  uint64_t v2 = *(void *)(v0 + 16);
  sub_1A5595448(*v1, v1[1], v2);
  sub_1A56D58F8();
  uint64_t v3 = sub_1A56D5898();
  uint64_t v4 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v3 - 8) + 32);
  v4((uint64_t *)v5, v1 + 2, v3);
  v4(v6, (uint64_t *)v5, v3);
  if ((v7 & 1) == 0) {
    sub_1A5595448(v6[0], v6[1], v2);
  }
}

uint64_t _UnsafeMutableWrappedBuffer.suffix(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 24);
  char v6 = *(unsigned char *)(v2 + 32) & 1;
  if (v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *(void *)(v2 + 24);
  }
  BOOL v8 = __OFADD__(v4, v7);
  uint64_t v9 = v4 + v7;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    uint64_t result = *(void *)v2;
    uint64_t v11 = *(void *)(v2 + 16);
    if (v9 <= v10)
    {
LABEL_15:
      *(void *)a2 = result;
      *(void *)(a2 + 8) = v4;
      *(void *)(a2 + 16) = v11;
      *(void *)(a2 + 24) = v5;
      *(unsigned char *)(a2 + 32) = v6 & 1;
      return result;
    }
    if (*(unsigned char *)(v2 + 32))
    {
      sub_1A56D58F8();
      swift_getWitnessTable();
      sub_1A56D5008();
      uint64_t result = sub_1A56D58E8();
LABEL_14:
      char v6 = 1;
      goto LABEL_15;
    }
    if (v5 >= v10)
    {
      sub_1A56D58F8();
      swift_getWitnessTable();
      sub_1A56D5008();
      uint64_t result = sub_1A56D58E8();
      uint64_t v11 = 0;
      uint64_t v5 = 0;
      goto LABEL_14;
    }
    if (!__OFSUB__(v10, v5))
    {
      sub_1A56D58F8();
      swift_getWitnessTable();
      sub_1A56D5008();
      uint64_t result = sub_1A56D58E8();
      char v6 = v5 == 0;
      if (!v5) {
        uint64_t v11 = 0;
      }
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.initialize<A>(fromSequencePrefix:)(uint64_t a1, char *a2, void (*a3)(void, void), uint64_t a4, uint64_t a5)
{
  uint64_t v66 = a2;
  uint64_t v60 = a1;
  uint64_t v56 = (void (*)(char *, uint64_t))a3;
  uint64_t v8 = *((void *)a3 + 2);
  uint64_t v53 = sub_1A56D5898();
  uint64_t v52 = *(void *)(v53 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v53);
  uint64_t v64 = (char *)&v49 - v10;
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v63 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v54 = (char *)&v49 - v13;
  uint64_t v62 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v68 = (char *)&v49 - v15;
  uint64_t v61 = *(void *)(a4 - 8);
  uint64_t v16 = v61;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v49 - v20;
  sub_1A56D58F8();
  uint64_t v22 = sub_1A56D5898();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v23 + 32);
  uint64_t v25 = v23 + 32;
  uint64_t v26 = a4;
  v24(v69, (uint64_t *)(v5 + 16), v22);
  uint64_t v58 = v16;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v27(v21, (uint64_t)v66, v26);
  uint64_t v59 = v24;
  uint64_t v55 = v25;
  v24((uint64_t *)v73, v69, v22);
  if (v73[16] == 1)
  {
    uint64_t v28 = v5;
    uint64_t v56 = *(void (**)(char *, uint64_t))(v61 + 8);
    v56(v21, v26);
  }
  else
  {
    uint64_t v50 = v5;
    uint64_t v51 = *(void *)(v5 + 8);
    uint64_t v29 = sub_1A56D52A8();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v61 + 8);
    v30(v21, v26);
    if (v51 < v29)
    {
      uint64_t v31 = v66;
      v27(v19, (uint64_t)v66, v26);
      uint64_t v32 = v60;
      uint64_t v33 = (void (*)(uint64_t, uint64_t))v30;
      sub_1A56D5288();
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v36 = _UnsafeMutableWrappedBuffer.initialize<A>(fromPrefixOf:)(v32, (uint64_t)v56, v34, AssociatedConformanceWitness);
      v33((uint64_t)v31, v26);
      return v36;
    }
    uint64_t v28 = v50;
    uint64_t v56 = v30;
  }
  v27(v19, (uint64_t)v66, v26);
  uint64_t v37 = *(void *)(v28 + 8);
  uint64_t v36 = sub_1A56D5298();
  if (v36 != v37 || (v59(&v70, v69, v22), uint64_t v36 = v37, (v72 & 1) != 0))
  {
    v56(v66, v26);
LABEL_17:
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v60, v68, AssociatedTypeWitness);
    return v36;
  }
  uint64_t v38 = v71;
  if (v71 < 1)
  {
    uint64_t v38 = 0;
    uint64_t v48 = v66;
LABEL_16:
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v56)(v48, v26);
    uint64_t v36 = v37 + v38;
    if (!__OFADD__(v37, v38)) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v51 = v37;
    uint64_t v61 = v70;
    uint64_t v55 = v26;
    uint64_t v62 = swift_getAssociatedConformanceWitness();
    uint64_t v39 = 0;
    uint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
    uint64_t v41 = (void (**)(char *, char *, uint64_t))(v65 + 32);
    uint64_t v59 = (void (*)(uint64_t *, uint64_t *, uint64_t))(v65 + 16);
    uint64_t v42 = v54;
    uint64_t v43 = (uint64_t)v63;
    while (1)
    {
      uint64_t v44 = v64;
      sub_1A56D5918();
      if ((*v40)(v44, 1, v8) == 1) {
        break;
      }
      (*v41)(v42, v44, v8);
      uint64_t result = sub_1A56D58A8();
      if (!result) {
        goto LABEL_22;
      }
      uint64_t v46 = v65;
      uint64_t v47 = result + *(void *)(v65 + 72) * v39;
      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v43, v42, v8);
      sub_1A5587510(v43, v47, v8);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v8);
      if (v38 == ++v39)
      {
        uint64_t v26 = v55;
        uint64_t v48 = v66;
        uint64_t v37 = v51;
        goto LABEL_16;
      }
    }
    v56(v66, v55);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v44, v53);
    uint64_t v36 = v51 + v39;
    if (!__OFADD__(v51, v39)) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.initialize<A>(fromPrefixOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_1A56D5898();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v7);
  uint64_t v29 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v23 - v14;
  int v34 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = *(void *)(v4 + 8);
  uint64_t v30 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v31 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v28 = v10 + 16;
  uint64_t v26 = v4 + 16;
  uint64_t v27 = v10 + 8;
  uint64_t v25 = v17;
  uint64_t v18 = (uint64_t)v29;
  do
  {
    if (v16 == v17)
    {
      if (v34)
      {
        uint64_t v16 = v17;
        goto LABEL_15;
      }
      sub_1A56D58F8();
      uint64_t v19 = sub_1A56D5898();
      uint64_t v20 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32);
      v20(v35, v26, v19);
      v20(&v36, (uint64_t)v35, v19);
      if ((v38 & 1) != 0 || v37 < 1) {
        return v17;
      }
      uint64_t v16 = 0;
      int v34 = 1;
      uint64_t v17 = v37;
    }
    sub_1A56D5918();
    if ((*v31)(v9, 1, v5) == 1) {
      goto LABEL_12;
    }
    (*v30)(v15, v9, v5);
    uint64_t result = sub_1A56D58A8();
    if (!result) {
      goto LABEL_18;
    }
    uint64_t v21 = result + *(void *)(v10 + 72) * v16;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v18, v15, v5);
    sub_1A5587510(v18, v21, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v5);
  }
  while (!__OFADD__(v16++, 1));
  __break(1u);
LABEL_12:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v24);
  uint64_t v17 = v16;
  if ((v34 & 1) == 0) {
    return v17;
  }
LABEL_15:
  uint64_t v17 = v25 + v16;
  if (!__OFADD__(v25, v16)) {
    return v17;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.prefix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = *(void *)(v2 + 8);
  uint64_t v20 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  char v18 = *(unsigned char *)(v2 + 32);
  sub_1A56D58F8();
  uint64_t v7 = sub_1A56D5898();
  uint64_t v8 = *(uint64_t (**)(char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v21, (unsigned char *)(v2 + 16), v7);
  uint64_t result = v8(v24, v21, v7);
  if (v26) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v25;
  }
  uint64_t v11 = *(void *)(v2 + 8);
  BOOL v12 = __OFADD__(v11, v10);
  uint64_t v13 = v11 + v10;
  if (v12)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v13 <= a1)
  {
    char v16 = v18 & 1;
    uint64_t v11 = v19;
    uint64_t v14 = v20;
LABEL_14:
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v5;
    *(void *)(a2 + 24) = v6;
    *(unsigned char *)(a2 + 32) = v16;
    return result;
  }
  uint64_t v14 = *(void *)v2;
  if (v11 >= a1)
  {
    v22[0] = v14;
    v22[1] = v11;
    swift_getWitnessTable();
    sub_1A56D5728();
    uint64_t result = sub_1A56D58E8();
    uint64_t v14 = result;
    uint64_t v11 = v17;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    char v16 = 1;
    goto LABEL_14;
  }
  uint64_t result = v8((char *)v22, v21, v7);
  if ((v23 & 1) == 0)
  {
    if (!__OFSUB__(a1, v11))
    {
      swift_getWitnessTable();
      sub_1A56D5728();
      uint64_t result = sub_1A56D58E8();
      uint64_t v6 = v15;
      char v16 = v15 == 0;
      if (v15) {
        uint64_t v5 = result;
      }
      else {
        uint64_t v5 = 0;
      }
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t _UnsafeWrappedBuffer.first.getter()
{
  return *(void *)v0;
}

uint64_t _UnsafeWrappedBuffer.second.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t _UnsafeWrappedBuffer.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  return result;
}

uint64_t _UnsafeWrappedBuffer.count.getter(uint64_t a1)
{
  return sub_1A5595380(a1, MEMORY[0x1E4FBB0C0]);
}

uint64_t _UnsafeMutableWrappedBuffer.init(_:_:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, uint64_t a4@<X8>)
{
  BOOL v8 = (a3 & 1) == 0;
  uint64_t result = sub_1A56D58E8();
  if (v8 && a2 == 0) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = a1;
  }
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v10;
  *(void *)(a4 + 16) = v11;
  *(void *)(a4 + 24) = a2;
  *(unsigned char *)(a4 + 32) = a3 & 1 | (a2 == 0);
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1A56D58E8();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  if (v7) {
    uint64_t v8 = result;
  }
  else {
    uint64_t v8 = 0;
  }
  *(void *)(a3 + 16) = v8;
  *(void *)(a3 + 24) = v7;
  *(unsigned char *)(a3 + 32) = v7 == 0;
  return result;
}

uint64_t sub_1A55952F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A56D58D8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A559532C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1A56D58D8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _UnsafeMutableWrappedBuffer.count.getter(uint64_t a1)
{
  return sub_1A5595380(a1, MEMORY[0x1E4FBB730]);
}

uint64_t sub_1A5595380(uint64_t a1, void (*a2)(uint64_t, void))
{
  a2(255, *(void *)(a1 + 16));
  uint64_t v3 = sub_1A56D5898();
  uint64_t v4 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32);
  v4(v8, v2 + 16, v3);
  v4(v9, (uint64_t)v8, v3);
  if (v11) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v10;
  }
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t result = v6 + v5;
  if (__OFADD__(v6, v5)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5595448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    return a1;
  }
  uint64_t result = swift_arrayDestroy();
  if ((unsigned __int128)(a2 * (__int128)*(uint64_t *)(*(void *)(a3 - 8) + 72)) >> 64 == (a2
                                                                                            * *(void *)(*(void *)(a3 - 8) + 72)) >> 63)
    return a1;
  __break(1u);
  return result;
}

uint64_t _sSr7SharingE13initializeAll14fromContentsOfyqd___t7ElementQyd__RszSlRd__lF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1A56D5898();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v29 = (char *)&v24 - v14;
  uint64_t v25 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v24 - v18;
  uint64_t v27 = a2;
  uint64_t v28 = a4;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  sub_1A56D52B8();
  if (v38 != 1) {
    return v37;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v16, a1, a5);
  uint64_t v20 = sub_1A56D5298();
  swift_getAssociatedConformanceWitness();
  uint64_t v21 = v29;
  sub_1A56D5918();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v19, AssociatedTypeWitness);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v28 - 8) + 48))(v21, 1);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v31);
  if (v22 != 1)
  {
    __break(1u);
    return v37;
  }
  return v20;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A55957EC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1A559580C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t type metadata accessor for _UnsafeWrappedBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _UnsafeMutableWrappedBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A559586C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!result)
  {
    uint64_t v5 = 0;
    goto LABEL_7;
  }
  uint64_t v5 = a2;
  if (!a2)
  {
LABEL_7:
    *a3 = v5;
    return result;
  }
  if (*(void *)(v3 + 48) >= a2)
  {
    if (*(void *)(v3 + 40)) {
      __n128 result = sub_1A56D5848();
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t _emptyDequeStorage.getter()
{
  if (qword_1E966BCC8 != -1) {
    swift_once();
  }

  return swift_retain();
}

void _DequeBuffer.deinit()
{
  sub_1A55959EC((uint64_t *)(v0 + 16));

  JUMPOUT(0x1A6269D10);
}

uint64_t *sub_1A55959EC(uint64_t *result)
{
  uint64_t v2 = result[1];
  uint64_t v1 = result[2];
  if (__OFADD__(v1, v2))
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = *result;
  if (*result >= v1 + v2) {
    return (uint64_t *)sub_1A56D5868();
  }
  uint64_t v4 = v3 - v1;
  if (__OFSUB__(v3, v1)) {
    goto LABEL_7;
  }
  sub_1A56D5868();
  __n128 result = (uint64_t *)(v2 - v4);
  if (!__OFSUB__(v2, v4)) {
    return (uint64_t *)sub_1A56D5868();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t _DequeBuffer.__deallocating_deinit()
{
  _DequeBuffer.deinit();

  return swift_deallocClassInstance();
}

uint64_t _DequeBuffer.description.getter()
{
  sub_1A5595B4C(&v1);
  return v1;
}

uint64_t sub_1A5595B4C@<X0>(void *a1@<X8>)
{
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  strcpy((char *)v4, "_DequeStorage<");
  HIBYTE(v4[1]) = -18;
  sub_1A56D6238();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  _DequeBufferHeader.description.getter();
  sub_1A56D51C8();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v3 = v4[1];
  *a1 = v4[0];
  a1[1] = v3;
  return result;
}

uint64_t sub_1A5595C38()
{
  return _DequeBuffer.description.getter();
}

void *sub_1A5595C5C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BCA8);
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  qword_1E966BCD0 = (uint64_t)result;
  return result;
}

uint64_t sub_1A5595C98()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for _DequeBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Deque.customMirror.getter(uint64_t a1)
{
  uint64_t v2 = sub_1A56D6128();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672088);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = a1;
  v13[1] = a1;
  uint64_t v9 = *MEMORY[0x1E4FBC3E8];
  uint64_t v10 = sub_1A56D6118();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  type metadata accessor for Deque();
  swift_getWitnessTable();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBC430], v2);
  swift_retain_n();
  return sub_1A56D6148();
}

uint64_t sub_1A5595F10()
{
  return Deque.customMirror.getter(*v0);
}

uint64_t _DequeBufferHeader.capacity.getter()
{
  return *(void *)v0;
}

uint64_t _DequeBufferHeader.count.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t _DequeBufferHeader.count.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t _DequeBufferHeader.startSlot.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t _DequeBufferHeader.startSlot.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

Sharing::_DequeBufferHeader __swiftcall _DequeBufferHeader.init(capacity:count:startSlot:)(Swift::Int capacity, Swift::Int count, Sharing::_DequeSlot startSlot)
{
  v3->Swift::Int position = capacity;
  v3[1].Swift::Int position = count;
  v3[2].Swift::Int position = startSlot.position;
  result.startSlot = startSlot;
  result.count = count;
  result.capacity = capacity;
  return result;
}

uint64_t _DequeBufferHeader.capacity.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*_DequeBufferHeader.capacity.modify())()
{
  return nullsub_1;
}

uint64_t (*_DequeBufferHeader.count.modify())()
{
  return nullsub_1;
}

uint64_t (*_DequeBufferHeader.startSlot.modify())()
{
  return nullsub_1;
}

uint64_t _DequeBufferHeader.description.getter()
{
  return 0;
}

uint64_t getEnumTagSinglePayload for _DequeBufferHeader(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for _DequeBufferHeader(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)Sharing::_DequeBufferHeader result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for _DequeBufferHeader()
{
  return &type metadata for _DequeBufferHeader;
}

unint64_t SFProximityHandoffMachServiceName.getter()
{
  return 0xD000000000000037;
}

unint64_t SFProximityHandoffDomain.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1A55961DC()
{
  uint64_t v0 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v0, qword_1E9672090);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9672090);
  return sub_1A56D4D88();
}

uint64_t sub_1A559625C(uint64_t a1)
{
  unint64_t v2 = sub_1A55967BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5596298(uint64_t a1)
{
  unint64_t v2 = sub_1A55967BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55962D4()
{
  if (*v0) {
    return 0x726568746FLL;
  }
  else {
    return 0x55706F7244726961;
  }
}

uint64_t sub_1A5596310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55A625C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5596338(uint64_t a1)
{
  unint64_t v2 = sub_1A5596714();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A5596374(uint64_t a1)
{
  unint64_t v2 = sub_1A5596714();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55963B0(uint64_t a1)
{
  unint64_t v2 = sub_1A5596768();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55963EC(uint64_t a1)
{
  unint64_t v2 = sub_1A5596768();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFProximityHandoffClient.Identifier.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96720A8);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96720B0);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v17 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96720B8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1[1];
  uint64_t v20 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5596714();
  sub_1A56D61D8();
  if (v12)
  {
    char v24 = 1;
    sub_1A5596768();
    sub_1A56D5D98();
    uint64_t v13 = v22;
    sub_1A56D5DE8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v13);
  }
  else
  {
    char v23 = 0;
    sub_1A55967BC();
    uint64_t v15 = v17;
    sub_1A56D5D98();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1A5596714()
{
  unint64_t result = qword_1E96720C0;
  if (!qword_1E96720C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96720C0);
  }
  return result;
}

unint64_t sub_1A5596768()
{
  unint64_t result = qword_1E96720C8;
  if (!qword_1E96720C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96720C8);
  }
  return result;
}

unint64_t sub_1A55967BC()
{
  unint64_t result = qword_1E96720D0;
  if (!qword_1E96720D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96720D0);
  }
  return result;
}

uint64_t SFProximityHandoffClient.Identifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96720D8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96720E0);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96720E8);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5596714();
  uint64_t v13 = v35;
  sub_1A56D61A8();
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v34;
  uint64_t v29 = v7;
  uint64_t v35 = a1;
  uint64_t v15 = sub_1A56D5D78();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_1A56D5A78();
    swift_allocError();
    uint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *uint64_t v22 = &type metadata for SFProximityHandoffClient.Identifier;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    a1 = v35;
LABEL_7:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0Tm(v23);
  }
  if (*(unsigned char *)(v15 + 32))
  {
    char v37 = 1;
    sub_1A5596768();
    sub_1A56D5C88();
    uint64_t v16 = v30;
    uint64_t v17 = sub_1A56D5CF8();
    uint64_t v18 = v6;
    uint64_t v19 = v33;
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
  }
  else
  {
    char v36 = 0;
    sub_1A55967BC();
    sub_1A56D5C88();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    uint64_t v17 = 0;
    uint64_t v26 = 0;
  }
  uint64_t v27 = v32;
  *uint64_t v32 = v17;
  v27[1] = v26;
  uint64_t v23 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_0Tm(v23);
}

uint64_t sub_1A5596CB8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SFProximityHandoffClient.Identifier.init(from:)(a1, a2);
}

uint64_t sub_1A5596CD0(void *a1)
{
  return SFProximityHandoffClient.Identifier.encode(to:)(a1);
}

uint64_t SFProximityHandoffClient.clientIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 128);
  *a1 = *(void *)(v1 + 120);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *SFProximityHandoffClient.__allocating_init(identifier:)(uint64_t *a1)
{
  return SFProximityHandoffClient.init(identifier:)(a1);
}

void *SFProximityHandoffClient.init(identifier:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = sub_1A56D57F8();
  uint64_t v4 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1A56D57E8();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1A56D4F78();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v21 = v9;
  swift_defaultActor_initialize();
  sub_1A554956C();
  swift_retain();
  sub_1A56D4F58();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1A55A6104((unint64_t *)&qword_1E966C468, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C450);
  sub_1A54E40A8((unint64_t *)&qword_1E966C458, &qword_1E966C450);
  sub_1A56D59A8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC68], v22);
  uint64_t v10 = (void *)sub_1A56D5828();
  v2[15] = v21;
  v2[16] = v20;
  v2[17] = v10;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v12 = v10;
  uint64_t v13 = (void *)sub_1A56D5098();
  id v14 = objc_msgSend(v11, sel_initWithMachServiceName_options_, v13, 0);

  type metadata accessor for SFXPCConnection();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = 0;
  id v16 = v14;
  objc_msgSend(v16, sel_sf_setQueue_, v12);
  if (qword_1EB3DCFD8 != -1) {
    swift_once();
  }
  objc_msgSend(v16, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

  v2[14] = v15;
  swift_release();
  uint64_t v17 = (objc_class *)type metadata accessor for SFProximityHandoffClient();
  v23.receiver = v2;
  v23.super_class = v17;
  uint64_t v18 = objc_msgSendSuper2(&v23, sel_init);
  objc_msgSend(*(id *)(v18[14] + 16), sel_activate);
  return v18;
}

uint64_t SFProximityHandoffClient.deinit()
{
  objc_msgSend(*(id *)(*(void *)(v0 + 112) + 16), sel_invalidate);
  swift_release();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t SFProximityHandoffClient.__deallocating_deinit()
{
  objc_msgSend(*(id *)(*(void *)(v0 + 112) + 16), sel_invalidate);
  swift_release();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1A559718C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1A56D4D98();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559724C, v1, 0);
}

uint64_t sub_1A559724C()
{
  if (qword_1E9670320 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (char *)v0[2];
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)qword_1E9672090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v3);
  *(void *)uint64_t v5 = 0xD00000000000001CLL;
  *((void *)v5 + 1) = 0x80000001A5739F10;
  uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9672108);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v5[v7[11]], v1, v3);
  uint64_t v8 = &v5[v7[12]];
  *(void *)uint64_t v8 = &unk_1E9672100;
  *((void *)v8 + 1) = v4;
  uint64_t v9 = &v5[v7[13]];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  swift_retain();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1A55973A8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1A55973C8, 0, 0);
}

uint64_t sub_1A55973C8()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1E96723B0 + dword_1E96723B0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A553AC8C;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2);
}

uint64_t sub_1A5597478(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1A5597498, 0, 0);
}

uint64_t sub_1A5597498()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFProximityHandoffInvocations.ProximityHandoffInteractions()), sel_init);
  uint64_t v2 = v1;
  v0[9] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[10] = v4;
  uint64_t v5 = v0[8];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[11] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[12] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[13] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  id v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55AB03C;
  void v11[6] = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96721B8);
  *uint64_t v12 = v0;
  v12[1] = sub_1A5597694;
  return MEMORY[0x1F4188160](v0 + 5, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55AB080, v11, v13);
}

uint64_t sub_1A5597694()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_1A55AB5C0;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 96);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v3 = sub_1A55AB370;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A55977D4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(0)
                 - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5597898, 0, 0);
}

uint64_t sub_1A5597898()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55AAFA4;
  void v15[6] = v12;
  id v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *id v16 = v0;
  v16[1] = sub_1A5597B00;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A5597B00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A55AB380;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 104);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = sub_1A55AB378;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A5597C40(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(0)
                 - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5597D04, 0, 0);
}

uint64_t sub_1A5597D04()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55AAD68;
  void v15[6] = v12;
  id v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *id v16 = v0;
  v16[1] = sub_1A5597B00;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A5597F6C(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1A5597F8C, 0, 0);
}

uint64_t sub_1A5597F8C()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.StartTempPairing()), sel_init);
  uint64_t v2 = v1;
  v0[9] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[10] = v4;
  uint64_t v5 = v0[8];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[11] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[12] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[13] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55AAA78;
  void v11[6] = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96723A0);
  *uint64_t v12 = v0;
  v12[1] = sub_1A5597694;
  return MEMORY[0x1F4188160](v0 + 5, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55AAABC, v11, v13);
}

uint64_t sub_1A559818C()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x1F4188298](sub_1A55981AC, 0, 0);
}

uint64_t sub_1A55981AC()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.StopTempPairing()), sel_init);
  uint64_t v2 = v1;
  v0[6] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[7] = v4;
  uint64_t v5 = v0[5];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[8] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[9] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[10] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[11] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55AAA24;
  void v11[6] = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[12] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1A5598398;
  return MEMORY[0x1F4188160](v12, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v11, &type metadata for VoidResponse);
}

uint64_t sub_1A5598398()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_1A5598548;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 72);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v3 = sub_1A55984D8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A55984D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A5598548()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (void *)v0[6];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A55985E4()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x1F4188298](sub_1A5598604, 0, 0);
}

uint64_t sub_1A5598604()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.TempPairingConnect()), sel_init);
  uint64_t v2 = v1;
  v0[6] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[7] = v4;
  uint64_t v5 = v0[5];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[8] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[9] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[10] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[11] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55AA834;
  void v11[6] = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[12] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1A55987F0;
  return MEMORY[0x1F4188160](v12, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v11, &type metadata for VoidResponse);
}

uint64_t sub_1A55987F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_1A55AB36C;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 72);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v3 = sub_1A55AB368;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A5598930()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x1F4188298](sub_1A5598950, 0, 0);
}

uint64_t sub_1A5598950()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.TempPairingDisconnect()), sel_init);
  uint64_t v2 = v1;
  v0[6] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[7] = v4;
  uint64_t v5 = v0[5];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[8] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[9] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[10] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[11] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55AA7E0;
  void v11[6] = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[12] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1A55987F0;
  return MEMORY[0x1F4188160](v12, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v11, &type metadata for VoidResponse);
}

uint64_t sub_1A5598B3C(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropSend.Request() - 8);
  v3[8] = v4;
  v3[9] = *(void *)(v4 + 64);
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5598C04, 0, 0);
}

uint64_t sub_1A5598C04()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.Send()), sel_init);
  v0[11] = v1;
  uint64_t v20 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v21 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v21 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[12] = v2;
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[6];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[13] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[14] = v9;
  sub_1A55A61F4(v7, v3, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Request);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[15] = v12;
  *(void *)(v12 + 16) = v21;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Request);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v20;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[16] = v15;
  v15[2] = v21;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55AA594;
  void v15[6] = v12;
  id v16 = (void *)swift_task_alloc();
  v0[17] = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672358);
  *id v16 = v0;
  v16[1] = sub_1A5598E80;
  uint64_t v18 = v0[5];
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55AA5D4, v15, v17);
}

uint64_t sub_1A5598E80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A55AB384;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 112);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = sub_1A55AB37C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A5598FC0(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDrop.TransferIdentifier() - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5599084, 0, 0);
}

uint64_t sub_1A5599084()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.Cancel()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55AA2F8;
  void v15[6] = v12;
  id v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *id v16 = v0;
  v16[1] = sub_1A5597B00;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A55992F0(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1A5599310, 0, 0);
}

uint64_t sub_1A5599310()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.TransfersMonitor()), sel_init);
  uint64_t v2 = v1;
  v0[9] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[10] = v4;
  uint64_t v5 = v0[8];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[11] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[12] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[13] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55A9FC4;
  void v11[6] = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672330);
  *uint64_t v12 = v0;
  v12[1] = sub_1A5597694;
  return MEMORY[0x1F4188160](v0 + 5, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55AA008, v11, v13);
}

uint64_t sub_1A5599510(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters(0) - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55995D4, 0, 0);
}

uint64_t sub_1A55995D4()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55AA294;
  void v15[6] = v12;
  id v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *id v16 = v0;
  v16[1] = sub_1A5597B00;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A5599840()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x1F4188298](sub_1A5599860, 0, 0);
}

uint64_t sub_1A5599860()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.ResignTransferPresenter()), sel_init);
  unint64_t v2 = v1;
  v0[6] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[7] = v4;
  uint64_t v5 = v0[5];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[8] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[9] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[10] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[11] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55A9F30;
  void v11[6] = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[12] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1A55987F0;
  return MEMORY[0x1F4188160](v12, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v11, &type metadata for VoidResponse);
}

uint64_t sub_1A5599A4C(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0) - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A5599B10, 0, 0);
}

uint64_t sub_1A5599B10()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.StartNearbySharingDiscovery()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55A9EE0;
  void v15[6] = v12;
  id v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *id v16 = v0;
  v16[1] = sub_1A5599D7C;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A5599D7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A5599F34;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 104);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = sub_1A5599EBC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A5599EBC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A5599F34()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = (void *)v0[10];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A5599FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[5] = a2;
  return MEMORY[0x1F4188298](sub_1A559A000, 0, 0);
}

uint64_t sub_1A559A000()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.StopNearbySharingDiscovery()), sel_init);
  uint64_t v2 = v1;
  v0[8] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[9] = v4;
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v6 + 24);
  v0[10] = v8;
  id v9 = *(void **)(v6 + 16);
  v0[11] = v9;
  unint64_t v10 = (void *)swift_allocObject();
  v0[12] = v10;
  v10[2] = v3;
  v10[3] = v4;
  void v10[4] = v7;
  v10[5] = v5;
  v10[6] = v8;
  v10[7] = v2;
  swift_bridgeObjectRetain();
  id v11 = v9;
  swift_bridgeObjectRetain();
  id v12 = v2;
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v13 = (void *)swift_task_alloc();
  v0[13] = v13;
  void v13[2] = v3;
  v13[3] = v4;
  v13[4] = v11;
  v13[5] = sub_1A55A9D84;
  v13[6] = v10;
  id v14 = (void *)swift_task_alloc();
  v0[14] = v14;
  *id v14 = v0;
  v14[1] = sub_1A559A204;
  return MEMORY[0x1F4188160](v14, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v13, &type metadata for VoidResponse);
}

uint64_t sub_1A559A204()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_1A559A3B4;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 88);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v3 = sub_1A559A344;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A559A344()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A559A3B4()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = (void *)v0[8];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A559A450(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0) - 8);
  v3[8] = v4;
  v3[9] = *(void *)(v4 + 64);
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559A518, 0, 0);
}

uint64_t sub_1A559A518()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.TakeNearbySharingAssertion()), sel_init);
  v0[11] = v1;
  uint64_t v20 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v21 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v21 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[12] = v2;
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[6];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[13] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[14] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFAirDrop.NearbySharingAssertionRequest);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[15] = v12;
  *(void *)(v12 + 16) = v21;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFAirDrop.NearbySharingAssertionRequest);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v20;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[16] = v15;
  v15[2] = v21;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55A9BA0;
  void v15[6] = v12;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[17] = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
  *uint64_t v16 = v0;
  v16[1] = sub_1A559A794;
  uint64_t v18 = v0[5];
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A9BE0, v15, v17);
}

uint64_t sub_1A559A794()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A559A94C;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 112);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = sub_1A559A8D4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A559A8D4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A559A94C()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[11];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A559A9F4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = sub_1A56D4CB8();
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  v3[9] = *(void *)(v5 + 64);
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559AABC, 0, 0);
}

uint64_t sub_1A559AABC()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.ReleaseNearbySharingAssertion()), sel_init);
  v0[11] = v1;
  unint64_t v19 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v20 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v20 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[12] = v2;
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  swift_beginAccess();
  uint64_t v9 = *(void *)(v7 + 24);
  v0[13] = v9;
  unint64_t v10 = *(void **)(v7 + 16);
  v0[14] = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v8, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  v0[15] = v13;
  *(void *)(v13 + 16) = v20;
  *(void *)(v13 + 24) = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v13 + v11, v3, v5);
  *(void *)(v13 + v12) = v9;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  swift_bridgeObjectRetain();
  id v14 = v10;
  swift_bridgeObjectRetain();
  id v15 = v19;
  swift_retain_n();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  uint64_t v16[2] = v20;
  v16[3] = v2;
  void v16[4] = v14;
  v16[5] = sub_1A55A9A28;
  v16[6] = v13;
  uint64_t v17 = (void *)swift_task_alloc();
  v0[17] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1A5598E80;
  return MEMORY[0x1F4188160](v17, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v16, &type metadata for VoidResponse);
}

uint64_t sub_1A559AD24(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1A559AD44, 0, 0);
}

uint64_t sub_1A559AD44()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.NearbySharingInteractions()), sel_init);
  uint64_t v2 = v1;
  v0[9] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[10] = v4;
  uint64_t v5 = v0[8];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[11] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[12] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[13] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55A96E8;
  void v11[6] = v8;
  unint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966B2D0);
  *unint64_t v12 = v0;
  v12[1] = sub_1A559AF44;
  return MEMORY[0x1F4188160](v0 + 5, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A972C, v11, v13);
}

uint64_t sub_1A559AF44()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_1A559B100;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 96);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v3 = sub_1A559B084;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A559B084()
{
  uint64_t v1 = *(_OWORD **)(v0 + 56);

  swift_release();
  *uint64_t v1 = *(_OWORD *)(v0 + 40);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A559B100()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[9];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  unint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A559B19C(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDrop.NearbySharingInteraction(0) - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559B260, 0, 0);
}

uint64_t sub_1A559B260()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.SimulateNearbySharingInteractions()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFAirDrop.NearbySharingInteraction);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFAirDrop.NearbySharingInteraction);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55A9698;
  void v15[6] = v12;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1A5597B00;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A559B4CC(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0) - 8);
  v3[8] = v4;
  v3[9] = *(void *)(v4 + 64);
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559B594, 0, 0);
}

uint64_t sub_1A559B594()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.BoopAtADistanceBegin()), sel_init);
  v0[11] = v1;
  uint64_t v20 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v21 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v21 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[12] = v2;
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[6];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[13] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[14] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[15] = v12;
  *(void *)(v12 + 16) = v21;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v20;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[16] = v15;
  v15[2] = v21;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55A922C;
  void v15[6] = v12;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[17] = v16;
  uint64_t v17 = type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo(0);
  *uint64_t v16 = v0;
  v16[1] = sub_1A5598E80;
  uint64_t v18 = v0[5];
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A926C, v15, v17);
}

uint64_t sub_1A559B80C(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters(0) - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559B8D0, 0, 0);
}

uint64_t sub_1A559B8D0()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55A9084;
  void v15[6] = v12;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1A5597B00;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A559BB3C(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0) - 8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 + 64);
  v3[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559BC00, 0, 0);
}

uint64_t sub_1A559BC00()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.BoopAtADistanceEnd()), sel_init);
  v0[10] = v1;
  uint64_t v18 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v19 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v19 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[11] = v2;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[12] = v8;
  id v9 = *(void **)(v5 + 16);
  v0[13] = v9;
  sub_1A55A61F4(v7, v3, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[14] = v12;
  *(void *)(v12 + 16) = v19;
  *(void *)(v12 + 24) = v2;
  sub_1A55A8D94(v3, v12 + v10, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v18;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  v15[2] = v19;
  uint64_t v15[3] = v2;
  v15[4] = v13;
  v15[5] = sub_1A55A8DFC;
  void v15[6] = v12;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1A5597B00;
  return MEMORY[0x1F4188160](v16, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v15, &type metadata for VoidResponse);
}

uint64_t sub_1A559BE6C(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  uint64_t v4 = sub_1A56D4CB8();
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  v3[9] = *(void *)(v5 + 64);
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559BF34, 0, 0);
}

uint64_t sub_1A559BF34()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.EndNearbySharingInteraction()), sel_init);
  v0[11] = v1;
  unint64_t v19 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v20 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v20 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[12] = v2;
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  swift_beginAccess();
  uint64_t v9 = *(void *)(v7 + 24);
  v0[13] = v9;
  unint64_t v10 = *(void **)(v7 + 16);
  v0[14] = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v8, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  v0[15] = v13;
  *(void *)(v13 + 16) = v20;
  *(void *)(v13 + 24) = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v13 + v11, v3, v5);
  *(void *)(v13 + v12) = v9;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  swift_bridgeObjectRetain();
  id v14 = v10;
  swift_bridgeObjectRetain();
  id v15 = v19;
  swift_retain_n();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[16] = v16;
  uint64_t v16[2] = v20;
  v16[3] = v2;
  void v16[4] = v14;
  v16[5] = sub_1A55A8A90;
  v16[6] = v13;
  uint64_t v17 = (void *)swift_task_alloc();
  v0[17] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1A5598E80;
  return MEMORY[0x1F4188160](v17, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8BC0, v16, &type metadata for VoidResponse);
}

uint64_t sub_1A559C19C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 121) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v2;
  return MEMORY[0x1F4188298](sub_1A559C1C0, 0, 0);
}

uint64_t sub_1A559C1C0()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.UserSafetyIntervention()), sel_init);
  uint64_t v2 = v1;
  *(void *)(v0 + 56) = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 121);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 + 24);
  *(void *)(v0 + 72) = v7;
  uint64_t v8 = *(void **)(v5 + 16);
  *(void *)(v0 + 80) = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 88) = v9;
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v4;
  *(unsigned char *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v7;
  *(void *)(v9 + 48) = v2;
  swift_bridgeObjectRetain();
  id v10 = v8;
  swift_bridgeObjectRetain();
  id v11 = v2;
  swift_retain_n();
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v12;
  void v12[2] = v3;
  v12[3] = v4;
  v12[4] = v10;
  v12[5] = sub_1A55A88D8;
  v12[6] = v9;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1A559C3C8;
  return MEMORY[0x1F4188160](v0 + 120, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A8900, v12, &type metadata for SFInterventionResponse);
}

uint64_t sub_1A559C3C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_1A559C584;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 80);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v3 = sub_1A559C508;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A559C508()
{
  uint64_t v1 = *(unsigned char **)(v0 + 40);

  swift_release();
  *uint64_t v1 = *(unsigned char *)(v0 + 120);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A559C584()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = (void *)v0[7];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  unint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A559C620(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10) - 8);
  v2[9] = v3;
  v2[10] = *(void *)(v3 + 64);
  v2[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559C6E8, 0, 0);
}

uint64_t sub_1A559C6E8()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.ItemDestinationAlert()), sel_init);
  v0[12] = v1;
  unint64_t v20 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v21 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v21 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  unint64_t v19 = v2;
  v0[13] = v2;
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[7];
  swift_beginAccess();
  uint64_t v8 = *(void *)(v5 + 24);
  v0[14] = v8;
  uint64_t v9 = *(void **)(v5 + 16);
  v0[15] = v9;
  sub_1A54F60EC(v7, v4, &qword_1E9670D10);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  v0[16] = v12;
  *(void *)(v12 + 16) = v21;
  *(void *)(v12 + 24) = v19;
  sub_1A550D4D4(v4, v12 + v10, &qword_1E9670D10);
  *(void *)(v12 + v11) = v8;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v20;
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_bridgeObjectRetain();
  id v14 = v20;
  swift_retain_n();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[17] = v15;
  v15[2] = v21;
  uint64_t v15[3] = v19;
  v15[4] = v13;
  v15[5] = sub_1A55A860C;
  void v15[6] = v12;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[18] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1A559C954;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  return MEMORY[0x1F4188160](v0 + 5, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A86C8, v15, v17);
}

uint64_t sub_1A559C954()
{
  unint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A559CB18;
  }
  else
  {
    uint64_t v4 = (void *)v2[15];
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v5 = v2[6];
    v2[20] = v2[5];
    v2[21] = v5;
    uint64_t v3 = sub_1A559CA9C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A559CA9C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  return v1(v2, v3);
}

uint64_t sub_1A559CB18()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = (void *)v0[12];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A559CBC0(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = sub_1A56D4CB8();
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  v3[12] = *(void *)(v5 + 64);
  v3[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A559CC8C, 0, 0);
}

uint64_t sub_1A559CC8C()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.FetchEndpointMetadata()), sel_init);
  v0[14] = v1;
  unint64_t v19 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v20 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v20 = 0xD00000000000001BLL;
    unint64_t v2 = 0x80000001A573A0E0;
  }
  v0[15] = v2;
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v8 = v0[8];
  uint64_t v7 = v0[9];
  swift_beginAccess();
  uint64_t v9 = *(void *)(v7 + 24);
  v0[16] = v9;
  unint64_t v10 = *(void **)(v7 + 16);
  v0[17] = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v8, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v12 = (v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  v0[18] = v13;
  *(void *)(v13 + 16) = v20;
  *(void *)(v13 + 24) = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v13 + v11, v3, v6);
  *(void *)(v13 + v12) = v9;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  swift_bridgeObjectRetain();
  id v14 = v10;
  swift_bridgeObjectRetain();
  id v15 = v19;
  swift_retain_n();
  uint64_t v16 = (void *)swift_task_alloc();
  v0[19] = v16;
  uint64_t v16[2] = v20;
  v16[3] = v2;
  void v16[4] = v14;
  v16[5] = sub_1A55A81E8;
  v16[6] = v13;
  uint64_t v17 = (void *)swift_task_alloc();
  v0[20] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1A559CF04;
  return MEMORY[0x1F4188160](v0 + 5, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55A822C, v16, &type metadata for SFAirDrop.EndpointMetadata);
}

uint64_t sub_1A559CF04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1A559D0D0;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 136);
    swift_release();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = sub_1A559D044;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1A559D044()
{
  uint64_t v1 = *(_OWORD **)(v0 + 56);

  swift_release();
  *uint64_t v1 = *(_OWORD *)(v0 + 40);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1A559D0D0()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = (void *)v0[14];
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1A559D178(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x1F4188298](sub_1A559D198, 0, 0);
}

uint64_t sub_1A559D198()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SFAirDropInvocations.TempPairingMonitor()), sel_init);
  uint64_t v2 = v1;
  v0[9] = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v3 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v4 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v3 = 0xD00000000000001BLL;
    unint64_t v4 = 0x80000001A573A0E0;
  }
  v0[10] = v4;
  uint64_t v5 = v0[8];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 24);
  v0[11] = v6;
  uint64_t v7 = *(void **)(v5 + 16);
  v0[12] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[13] = v8;
  _OWORD v8[2] = v3;
  v8[3] = v4;
  v8[4] = v6;
  v8[5] = v2;
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_retain_n();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  void v11[2] = v3;
  void v11[3] = v4;
  v11[4] = v9;
  v11[5] = sub_1A55AA888;
  void v11[6] = v8;
  unint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C4F8);
  *unint64_t v12 = v0;
  v12[1] = sub_1A5597694;
  return MEMORY[0x1F4188160](v0 + 5, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55AA8CC, v11, v13);
}

uint64_t sub_1A559D398(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(0);
  *(void *)(v3 + 40) = swift_task_alloc();
  *(unsigned char *)(v3 + 64) = *a2;
  return MEMORY[0x1F4188298](sub_1A559D438, v2, 0);
}

uint64_t sub_1A559D438()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v2, v4, v5);
  *(unsigned char *)(v2 + *(int *)(v3 + 20)) = v1;
  id v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1E9672118 + dword_1E9672118);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  void *v6 = v0;
  v6[1] = sub_1A559D540;
  uint64_t v7 = *(void *)(v0 + 40);
  return v9((uint64_t)v9, v7);
}

uint64_t sub_1A559D540()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_1A559D6F0;
  }
  else {
    uint64_t v4 = sub_1A559D66C;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A559D66C()
{
  sub_1A55A6050(*(void *)(v0 + 40), type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A559D6F0()
{
  sub_1A55A6050(*(void *)(v0 + 40), type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A559D774(unsigned char *a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(0);
  *(void *)(v3 + 40) = swift_task_alloc();
  *(unsigned char *)(v3 + 64) = *a1;
  return MEMORY[0x1F4188298](sub_1A559D814, v2, 0);
}

uint64_t sub_1A559D814()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1A55A61F4(*(void *)(v0 + 16), v2, type metadata accessor for SFProximityHandoff.Content);
  *(unsigned char *)(v2 + *(int *)(v3 + 20)) = v1;
  uint64_t v6 = (uint64_t (*)(void))((char *)&dword_1E9672128 + dword_1E9672128);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1A559D8F8;
  return v6();
}

uint64_t sub_1A559D8F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_1A559DAA8;
  }
  else {
    uint64_t v4 = sub_1A559DA24;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1A559DA24()
{
  sub_1A55A6050(*(void *)(v0 + 40), type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A559DAA8()
{
  sub_1A55A6050(*(void *)(v0 + 40), type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void SFProximityHandoffClient.__allocating_init()()
{
}

void SFProximityHandoffClient.init()()
{
}

uint64_t SFProximityHandoffClient.unownedExecutor.getter()
{
  return v0;
}

uint64_t static SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.interactionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A56D4CB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.viewState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t sub_1A559DC94()
{
  if (*v0) {
    return 0x7461745377656976;
  }
  else {
    return 0x7463617265746E69;
  }
}

uint64_t sub_1A559DCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55A6354(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A559DD08(uint64_t a1)
{
  unint64_t v2 = sub_1A55A60B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A559DD44(uint64_t a1)
{
  unint64_t v2 = sub_1A55A60B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672130);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55A60B0();
  sub_1A56D61D8();
  v10[15] = 0;
  sub_1A56D4CB8();
  sub_1A55A6104(&qword_1E966C7D8, MEMORY[0x1E4F27990]);
  sub_1A56D5E38();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3
                       + *(int *)(type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(0)
                                + 20));
    void v10[13] = 1;
    sub_1A55A614C();
    sub_1A56D5E38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_1A56D4CB8();
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672148);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  uint64_t v26 = v7;
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55A60B0();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v22 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = v24;
  char v30 = 0;
  sub_1A55A6104(&qword_1E966C888, MEMORY[0x1E4F27990]);
  uint64_t v15 = v27;
  uint64_t v16 = v25;
  sub_1A56D5D48();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v21 = (uint64_t)v13;
  v17(v13, v5, v15);
  char v28 = 1;
  sub_1A55A61A0();
  sub_1A56D5D48();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v16);
  uint64_t v18 = v21;
  *(unsigned char *)(v21 + *(int *)(v22 + 20)) = v29;
  sub_1A55A61F4(v18, v23, type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1A55A6050(v18, type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
}

uint64_t sub_1A559E2D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A559E2E8(void *a1)
{
  return SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.encode(to:)(a1);
}

id SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1A55B2384(a1);

  return v4;
}

id SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.init(coder:)(void *a1)
{
  id v2 = sub_1A55B2384(a1);

  return v2;
}

uint64_t static SFProximityHandoffInvocations.PerformHandoffContentAction.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.content.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55A61F4(v1, a1, type metadata accessor for SFProximityHandoff.Content);
}

uint64_t SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.action.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t sub_1A559E468()
{
  if (*v0) {
    return 0x6E6F69746361;
  }
  else {
    return 0x746E65746E6F63;
  }
}

uint64_t sub_1A559E4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55A80F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A559E4C8(uint64_t a1)
{
  unint64_t v2 = sub_1A55A6478();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A559E504(uint64_t a1)
{
  unint64_t v2 = sub_1A55A6478();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672158);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55A6478();
  sub_1A56D61D8();
  v10[15] = 0;
  type metadata accessor for SFProximityHandoff.Content(0);
  sub_1A55A6104(&qword_1E9672168, (void (*)(uint64_t))type metadata accessor for SFProximityHandoff.Content);
  sub_1A56D5E38();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3
                       + *(int *)(type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(0)
                                + 20));
    void v10[13] = 1;
    sub_1A55A64CC();
    sub_1A56D5E38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for SFProximityHandoff.Content(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v19 = (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672178);
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55A6478();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v17;
  char v22 = 0;
  sub_1A55A6104(&qword_1E9672180, (void (*)(uint64_t))type metadata accessor for SFProximityHandoff.Content);
  uint64_t v14 = v18;
  sub_1A56D5D48();
  sub_1A55A8D94(v19, v12, type metadata accessor for SFProximityHandoff.Content);
  char v20 = 1;
  sub_1A55A6520();
  sub_1A56D5D48();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  *(unsigned char *)(v12 + *(int *)(v9 + 20)) = v21;
  sub_1A55A61F4(v12, v16, type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return sub_1A55A6050(v12, type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
}

uint64_t sub_1A559EA28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A559EA40(void *a1)
{
  return SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.encode(to:)(a1);
}

uint64_t static SFProximityHandoffInvocations.ProximityHandoffInteractions.supportsSecureCoding.getter()
{
  return 1;
}

id _s7Sharing29SFProximityHandoffInvocationsO06NearbyA21InteractionViewUpdateC4nameAESS_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___SFXPCInvocation_name];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v8, sel_init);
}

id _s7Sharing29SFProximityHandoffInvocationsO06NearbyA21InteractionViewUpdateC4nameAESS_tcfc_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR___SFXPCInvocation_name];
  *(void *)uint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v5, sel_init);
}

id _s7Sharing29SFProximityHandoffInvocationsO06NearbyA21InteractionViewUpdateCAEycfc_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id _s7Sharing29SFProximityHandoffInvocationsO06NearbyA21InteractionViewUpdateCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1A559EBFC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A55FB8F0(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_636;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A559EEC0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A55FC0FC(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_624;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A559F184(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672360);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDropSend.Request();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Request);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A55FC908(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55AA708;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_498;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A559F448(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferIdentifier();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A55FD114(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_459;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A559F70C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A55FD920(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_447;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A559F9D0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A55FE12C(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_384;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A559FC94(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = a8;
  uint64_t v32 = a2;
  id v34 = a1;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v14 = *(void *)(v33 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v33);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1A55FE938(a3, a4, a5, a6, a7);
  if (!v8)
  {
    char v20 = v18;
    char v21 = v19;
    unint64_t v30 = v17;
    uint64_t v31 = v16;
    uint64_t v29 = sub_1A56D4A68();
    uint64_t v22 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v33);
    unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v24 + v23, (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_372;
    uint64_t v25 = _Block_copy(aBlock);
    id v26 = v20;
    id v27 = v21;
    swift_release();
    char v28 = (void *)v29;
    objc_msgSend(v34, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v36, v29, v26, v27, 0, v25);
    _Block_release(v25);

    sub_1A54EA09C(v31, v30);
  }
}

void sub_1A559FEFC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722F8);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFAirDrop.NearbySharingAssertionRequest);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A55FF0F4(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A9D14;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_360;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A55A01C0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFAirDrop.NearbySharingInteraction);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A560017C(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_270;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A55A0484(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722C0);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A5600988(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A93A0;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_258;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A55A0748(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters(0);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A5601194(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_219;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A55A0A0C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v35 = a2;
  id v37 = a1;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v36 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55A61F4(a5, (uint64_t)v17, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1A5600988(a3, a4, (uint64_t)v17, a6);
  if (!v7)
  {
    unint64_t v22 = v19;
    unint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v34 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v36);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v27 + v26, v14, v25);
    aBlock[4] = sub_1A55A8CF4;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_207;
    char v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v34, v22);
  }
}

void sub_1A55A0CD0(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = a7;
  uint64_t v32 = a2;
  id v33 = a1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672298);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1A56019A0(a3, a4, a5, a6);
  if (!v7)
  {
    unint64_t v19 = v17;
    char v20 = v18;
    unint64_t v30 = v16;
    uint64_t v31 = v15;
    uint64_t v29 = sub_1A56D4A68();
    uint64_t v21 = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v12);
    unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v22, (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
    aBlock[4] = sub_1A55A8A6C;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_156;
    uint64_t v24 = _Block_copy(aBlock);
    id v25 = v19;
    id v26 = v20;
    swift_release();
    uint64_t v27 = (void *)v29;
    objc_msgSend(v33, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v35, v29, v25, v26, 0, v24);
    _Block_release(v24);

    sub_1A54EA09C(v31, v30);
  }
}

void sub_1A55A0F28(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v36 = a1;
  uint64_t v37 = a7;
  uint64_t v34 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672288);
  uint64_t v11 = *(void *)(v35 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v35);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54F60EC(a5, (uint64_t)v16, &qword_1E9670D10);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v39;
  uint64_t v18 = sub_1A5602130(a3, a4, (uint64_t)v16, a6);
  if (!v17)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v39 = v18;
    uint64_t v33 = sub_1A56D4A68();
    uint64_t v25 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v35);
    unint64_t v26 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v27 + v26, v13, v25);
    aBlock[4] = sub_1A55A8870;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_117_0;
    uint64_t v28 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v24;
    swift_release();
    uint64_t v31 = (void *)v33;
    objc_msgSend(v36, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v37, v33, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v39, v22);
  }
}

void sub_1A55A11DC(void *a1, uint64_t a2, objc_class *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v44 = a7;
  uint64_t v40 = a2;
  id v42 = a1;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(a8);
  uint64_t v16 = *(void *)(v41 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v41);
  uint64_t v18 = sub_1A56D4CB8();
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a5);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1A55FF900(a3, a4, (uint64_t)v20, a6);
  if (!v11)
  {
    unint64_t v26 = v24;
    uint64_t v27 = v25;
    uint64_t v35 = a10;
    uint64_t v36 = a11;
    unint64_t v38 = v23;
    uint64_t v39 = v22;
    uint64_t v37 = sub_1A56D4A68();
    uint64_t v28 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v41);
    unint64_t v29 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v30 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v30 + v29, (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v28);
    aBlock[4] = v35;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = v36;
    uint64_t v31 = _Block_copy(aBlock);
    id v32 = v26;
    id v33 = v27;
    swift_release();
    uint64_t v34 = (void *)v37;
    objc_msgSend(v42, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v44, v37, v32, v33, 0, v31);
    _Block_release(v31);

    sub_1A54EA09C(v39, v38);
  }
}

void sub_1A55A14B8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = a8;
  id v37 = a1;
  uint64_t v39 = a6;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1A55FB174(a3, a4, a5);
  if (!v10)
  {
    unint64_t v23 = v20;
    uint64_t v24 = v21;
    uint64_t v25 = v22;
    uint64_t v32 = a9;
    uint64_t v33 = a10;
    uint64_t v35 = v19;
    uint64_t v34 = sub_1A56D4A68();
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v15);
    unint64_t v26 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v27 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v27 + v26, v18, v15);
    aBlock[4] = v32;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = v33;
    uint64_t v28 = _Block_copy(aBlock);
    id v29 = v24;
    id v30 = v25;
    swift_release();
    uint64_t v31 = (void *)v34;
    objc_msgSend(v37, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v39, v34, v29, v30, 0, v28);
    _Block_release(v28);

    sub_1A54EA09C(v35, v23);
  }
}

uint64_t sub_1A55A1704(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v35 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672358);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v31 = (uint64_t)&v30 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672368);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v30 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v30 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672370);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54F6308(a1, a2);
  id v34 = a5;
  swift_unknownObjectRetain();
  uint64_t v26 = v35;
  swift_unknownObjectRetain();
  sub_1A56085E8((uint64_t)a5, a1, a2, a3, v26, (uint64_t)v20);
  swift_storeEnumTagMultiPayload();
  sub_1A550D4D4((uint64_t)v20, (uint64_t)v22, &qword_1E9672368);
  sub_1A550D4D4((uint64_t)v22, (uint64_t)v25, &qword_1E9672368);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_1A553FC9C(a1, a2);
  sub_1A54F60EC((uint64_t)v25, (uint64_t)v17, &qword_1E9672368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = *v17;
    uint64_t v27 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    swift_willThrowTypedImpl();
    sub_1A54E4D44((uint64_t)v25, &qword_1E9672370);
    uint64_t v36 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672360);
    return sub_1A56D5408();
  }
  else
  {
    uint64_t v29 = v31;
    sub_1A550D4D4((uint64_t)v17, v31, &qword_1E9672358);
    sub_1A54F60EC(v29, v32, &qword_1E9672358);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672360);
    sub_1A56D5418();
    sub_1A54E4D44(v29, &qword_1E9672358);
    return sub_1A54E4D44((uint64_t)v25, &qword_1E9672370);
  }
}

uint64_t sub_1A55A1A5C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v35 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v31 = (uint64_t)&v30 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672300);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v30 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v30 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672308);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54F6308(a1, a2);
  id v34 = a5;
  swift_unknownObjectRetain();
  uint64_t v26 = v35;
  swift_unknownObjectRetain();
  sub_1A5608B40((uint64_t)a5, a1, a2, a3, v26, (uint64_t)v20);
  swift_storeEnumTagMultiPayload();
  sub_1A550D4D4((uint64_t)v20, (uint64_t)v22, &qword_1E9672300);
  sub_1A550D4D4((uint64_t)v22, (uint64_t)v25, &qword_1E9672300);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_1A553FC9C(a1, a2);
  sub_1A54F60EC((uint64_t)v25, (uint64_t)v17, &qword_1E9672300);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = *v17;
    uint64_t v27 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    swift_willThrowTypedImpl();
    sub_1A54E4D44((uint64_t)v25, &qword_1E9672308);
    uint64_t v36 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722F8);
    return sub_1A56D5408();
  }
  else
  {
    uint64_t v29 = v31;
    sub_1A550D4D4((uint64_t)v17, v31, qword_1E966B098);
    sub_1A54F60EC(v29, v32, qword_1E966B098);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722F8);
    sub_1A56D5418();
    sub_1A54E4D44(v29, qword_1E966B098);
    return sub_1A54E4D44((uint64_t)v25, &qword_1E9672308);
  }
}

uint64_t sub_1A55A1DB4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v35 = a4;
  uint64_t v10 = type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v32 = (uint64_t)&v30 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722C8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v30 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v30 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722D0);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54F6308(a1, a2);
  id v34 = a5;
  swift_unknownObjectRetain();
  uint64_t v26 = v35;
  swift_unknownObjectRetain();
  sub_1A560906C((uint64_t)a5, a1, a2, a3, v26, (uint64_t)v20);
  swift_storeEnumTagMultiPayload();
  sub_1A550D4D4((uint64_t)v20, (uint64_t)v22, &qword_1E96722C8);
  sub_1A550D4D4((uint64_t)v22, (uint64_t)v25, &qword_1E96722C8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_1A553FC9C(a1, a2);
  sub_1A54F60EC((uint64_t)v25, (uint64_t)v17, &qword_1E96722C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = *v17;
    uint64_t v27 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    swift_willThrowTypedImpl();
    sub_1A54E4D44((uint64_t)v25, &qword_1E96722D0);
    uint64_t v36 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722C0);
    return sub_1A56D5408();
  }
  else
  {
    uint64_t v29 = v32;
    sub_1A55A8D94((uint64_t)v17, v32, type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo);
    sub_1A55A61F4(v29, v31, type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722C0);
    sub_1A56D5418();
    sub_1A55A6050(v29, type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo);
    return sub_1A54E4D44((uint64_t)v25, &qword_1E96722D0);
  }
}

uint64_t sub_1A55A2130(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1A54F6308(a1, a2);
  id v10 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A5607698((uint64_t)a5, a1, a2, a3, a4, (uint64_t)&v12);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  sub_1A553FC9C(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  return sub_1A56D5418();
}

uint64_t sub_1A55A223C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1A54F6308(a1, a2);
  id v10 = (id)a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A5609590(a5, a1, a2, a3, a4, (uint64_t)&v12);
  swift_unknownObjectRelease();

  LOBYTE(a5) = v12;
  swift_unknownObjectRelease();
  sub_1A553FC9C(a1, a2);
  LOBYTE(v12) = a5 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672298);
  return sub_1A56D5418();
}

uint64_t sub_1A55A2360(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1A54F6308(a1, a2);
  id v10 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A56080F0((uint64_t)a5, a1, a2, a3, a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  sub_1A553FC9C(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672288);
  return sub_1A56D5418();
}

uint64_t sub_1A55A2488(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1A54F6308(a1, a2);
  id v10 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A5609A88((uint64_t)a5, a1, a2, a3, a4, (uint64_t)&v14);
  swift_unknownObjectRelease();

  uint64_t v11 = v15;
  uint64_t v12 = v14;
  swift_unknownObjectRelease();
  sub_1A553FC9C(a1, a2);
  uint64_t v14 = v12;
  uint64_t v15 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672278);
  return sub_1A56D5418();
}

uint64_t sub_1A55A25A8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t), uint64_t *a8)
{
  sub_1A54F6308(a1, a2);
  id v15 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  a7(&v19, a5, a1, a2, a3, a4);
  swift_unknownObjectRelease();

  uint64_t v16 = v20;
  uint64_t v17 = v19;
  swift_unknownObjectRelease();
  sub_1A553FC9C(a1, a2);
  uint64_t v19 = v17;
  uint64_t v20 = v16;
  __swift_instantiateConcreteTypeFromMangledName(a8);
  return sub_1A56D5418();
}

void sub_1A55A26D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96723B8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55AB1AC;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_653;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9B9510;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_665;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A2A6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55A8BE4;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_171;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF398;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_183;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A2E04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96723A8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55AAAE0;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_588;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF438;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_600;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A319C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672360);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55AA5F8;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_474;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF3E8;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_486;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A3534(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672338);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55AA02C;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_411;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF460;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_423;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A38CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722F8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55A9C04;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_336;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF370;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_348;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A3C64(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BBA0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55A9750;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_285;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF488;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_297;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A3FFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96722C0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55A9290;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_234;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF3C0;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_246;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A4394(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672298);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55A8924;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_132;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF4B0;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_144;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A472C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672288);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55A86EC;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_93;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF500;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_105;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A4AC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672278);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55A8250;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A558454C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_4;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF4D8;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55A8344;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_66;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1A55A4E5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFA8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = a3;
  *((void *)v15 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = &v15[(v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v16 = v26;
  *((void *)v16 + 1) = v6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1A55AA8F0;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1A55AB374;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_537;
  uint64_t v18 = _Block_copy(aBlock);
  LODWORD(v6) = dword_1EF9AF410;
  uint64_t v19 = _Block_copy(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1A55AB4D0;
  *(void *)(v21 + 24) = v20;
  void v29[4] = sub_1A55AB374;
  v29[5] = v21;
  v29[0] = MEMORY[0x1E4F143A8];
  v29[1] = 1107296256;
  _OWORD v29[2] = sub_1A55DB320;
  v29[3] = &block_descriptor_549;
  uint64_t v22 = _Block_copy(v29);
  swift_bridgeObjectRetain();
  id v23 = a4;
  swift_retain();
  swift_retain();
  _Block_copy(v19);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v6, v22);
  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v19);
  _Block_release(v18);
  if (v22)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_1A55A51F4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(void, void), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v67 = a8;
  uint64_t v59 = a6;
  id v68 = a3;
  uint64_t v60 = a1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a7);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v65 = v15;
  uint64_t v66 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A56D4C28();
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v58 = (char *)&v54 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  id v23 = (char *)&v54 - v22;
  MEMORY[0x1F4188790](v21);
  int64_t v69 = (char *)&v54 - v24;
  sub_1A56D4C18();
  if (qword_1E966C878 != -1) {
    swift_once();
  }
  uint64_t v64 = a10;
  uint64_t v63 = a9;
  uint64_t v25 = sub_1A56D4D98();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1E966C890);
  swift_bridgeObjectRetain_n();
  uint64_t v61 = v26;
  uint64_t v27 = sub_1A56D4D78();
  os_log_type_t v28 = sub_1A56D57D8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v55 = v23;
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v56 = v16;
    uint64_t v31 = v30;
    aBlock[0] = v30;
    uint64_t v54 = a5;
    *(_DWORD *)uint64_t v29 = 136446210;
    swift_bridgeObjectRetain();
    v73[0] = sub_1A54E3290(v60, a2, aBlock);
    id v23 = v55;
    a5 = v54;
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5389000, v27, v28, "asyncXPC [%{public}s] START -- Client", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v32 = v31;
    uint64_t v16 = v56;
    MEMORY[0x1A626CE20](v32, -1, -1);
    MEMORY[0x1A626CE20](v29, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v33 = a2;
  id v34 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v66, a4, v13);
  unint64_t v35 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v36 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v36 + v35, v34, v13);
  aBlock[4] = v63;
  aBlock[5] = v36;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A55A5ED8;
  aBlock[3] = v64;
  id v37 = _Block_copy(aBlock);
  swift_release();
  id v38 = objc_msgSend(v68, sel_remoteObjectProxyWithErrorHandler_, v37);
  _Block_release(v37);
  sub_1A56D5968();
  swift_unknownObjectRelease();
  aBlock[0] = sub_1A54EBB98((uint64_t)v73, 0, 0, 0xD000000000000051, 0x80000001A573A130, 217);
  a5(aBlock, a4);
  uint64_t v39 = v69;
  uint64_t v40 = v62;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v23, v69, v16);
  swift_bridgeObjectRetain_n();
  disableAirDropTLS();
  disableAirDropTLS();
  uint64_t v41 = sub_1A56D4D78();
  os_log_type_t v42 = sub_1A56D57D8();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = (void *)swift_slowAlloc();
    uint64_t v56 = v16;
    id v68 = v44;
    uint64_t v71 = v44;
    *(_DWORD *)uint64_t v43 = 136446722;
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_1A54E3290(v60, v33, (uint64_t *)&v71);
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 1040;
    LODWORD(v70) = 3;
    sub_1A56D5928();
    *(_WORD *)(v43 + 18) = 2048;
    uint64_t v45 = v57;
    sub_1A56D4C18();
    sub_1A56D4AD8();
    uint64_t v47 = v46;
    uint64_t v48 = *(void (**)(char *, uint64_t))(v40 + 8);
    uint64_t v49 = v45;
    uint64_t v50 = v56;
    v48(v49, v56);
    uint64_t v70 = v47;
    sub_1A56D5928();
    v48(v23, v50);
    _os_log_impl(&dword_1A5389000, v41, v42, "asyncXPC [%{public}s] END -- {duration: %.*f}", (uint8_t *)v43, 0x1Cu);
    id v51 = v68;
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v51, -1, -1);
    MEMORY[0x1A626CE20](v43, -1, -1);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v73);
    return ((uint64_t (*)(char *, uint64_t))v48)(v39, v50);
  }
  else
  {

    uint64_t v53 = *(void (**)(char *, uint64_t))(v40 + 8);
    v53(v23, v16);
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v73);
    return ((uint64_t (*)(char *, uint64_t))v53)(v39, v16);
  }
}

uint64_t sub_1A55A5E90(void *a1, uint64_t a2, uint64_t *a3)
{
  id v4 = a1;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_1A56D5408();
}

void sub_1A55A5ED8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t type metadata accessor for SFProximityHandoffClient()
{
  return self;
}

uint64_t sub_1A55A5F64(uint64_t a1)
{
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  void v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1A54E8628;
  return MEMORY[0x1F4188298](sub_1A55973C8, 0, 0);
}

uint64_t type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E96721E0);
}

uint64_t type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E96721F0);
}

uint64_t sub_1A55A6050(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A55A60B0()
{
  unint64_t result = qword_1E9672138;
  if (!qword_1E9672138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672138);
  }
  return result;
}

uint64_t sub_1A55A6104(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A55A614C()
{
  unint64_t result = qword_1E9672140;
  if (!qword_1E9672140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672140);
  }
  return result;
}

unint64_t sub_1A55A61A0()
{
  unint64_t result = qword_1E9672150;
  if (!qword_1E9672150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672150);
  }
  return result;
}

uint64_t sub_1A55A61F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A55A625C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x55706F7244726961 && a2 == 0xE900000000000049;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1A55A6354(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463617265746E69 && a2 == 0xED000044496E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461745377656976 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1A55A6478()
{
  unint64_t result = qword_1E9672160;
  if (!qword_1E9672160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672160);
  }
  return result;
}

unint64_t sub_1A55A64CC()
{
  unint64_t result = qword_1E9672170;
  if (!qword_1E9672170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672170);
  }
  return result;
}

unint64_t sub_1A55A6520()
{
  unint64_t result = qword_1E9672188;
  if (!qword_1E9672188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672188);
  }
  return result;
}

uint64_t sub_1A55A6574()
{
  return sub_1A55A6104(&qword_1E9672190, (void (*)(uint64_t))type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
}

uint64_t sub_1A55A65BC()
{
  return sub_1A55A6104(&qword_1E9672198, (void (*)(uint64_t))type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
}

unint64_t sub_1A55A6608()
{
  unint64_t result = qword_1E966B168;
  if (!qword_1E966B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B168);
  }
  return result;
}

unint64_t sub_1A55A6660()
{
  unint64_t result = qword_1E966B160;
  if (!qword_1E966B160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B160);
  }
  return result;
}

uint64_t sub_1A55A66B4()
{
  return sub_1A55A6104(&qword_1E96721A0, (void (*)(uint64_t))type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
}

uint64_t sub_1A55A66FC()
{
  return sub_1A55A6104(&qword_1E96721A8, (void (*)(uint64_t))type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters);
}

unint64_t sub_1A55A6748()
{
  unint64_t result = qword_1E966B1D8;
  if (!qword_1E966B1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B1D8);
  }
  return result;
}

unint64_t sub_1A55A67A0()
{
  unint64_t result = qword_1E966C240[0];
  if (!qword_1E966C240[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E966C240);
  }
  return result;
}

uint64_t sub_1A55A67F4()
{
  return sub_1A54E40A8(&qword_1E96721B0, &qword_1E96721B8);
}

uint64_t sub_1A55A6830()
{
  return sub_1A54E40A8(&qword_1E96721C0, &qword_1E96721B8);
}

uint64_t method lookup function for SFProximityHandoffClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFProximityHandoffClient);
}

uint64_t dispatch thunk of SFProximityHandoffClient.__allocating_init(identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SFProximityHandoffClient.proximityHandoffInteractions()(uint64_t a1)
{
  id v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1A54E8628;
  return v7(a1);
}

uint64_t dispatch thunk of SFProximityHandoffClient.nearbySharingInteractionView(update:viewState:)(uint64_t a1, uint64_t a2)
{
  char v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x80);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A54E83BC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of SFProximityHandoffClient.performHandoffContent(action:on:)(uint64_t a1, uint64_t a2)
{
  char v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x88);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1A54E8628;
  return v9(a1, a2);
}

uint64_t getEnumTagSinglePayload for SFProximityHandoffClient.Identifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SFProximityHandoffClient.Identifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1A55A6C8C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1A55A6CA4(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoffClient.Identifier()
{
  return &type metadata for SFProximityHandoffClient.Identifier;
}

ValueMetadata *type metadata accessor for SFProximityHandoffInvocations()
{
  return &type metadata for SFProximityHandoffInvocations;
}

uint64_t type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A56D4CB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s18TransferIdentifierVwxx(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4CB8();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A55A703C);
}

uint64_t sub_1A55A703C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 7u) {
      int v10 = 7;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 7;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 6u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A55A7118);
}

uint64_t sub_1A55A7118(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A56D4CB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  }
  return result;
}

uint64_t sub_1A55A71D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55A7964(a1, a2, a3, MEMORY[0x1E4F27990]);
}

uint64_t type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A56D4CB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
    uint64_t v9 = v8[5];
    int v10 = (void *)((char *)a1 + v9);
    unsigned int v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *int v10 = v13;
    v10[1] = v12;
    *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
    uint64_t v14 = v8[8];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for SFProximityHandoff.Content(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  int v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  uint64_t v13 = v7[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  int v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  int v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A55A77B8);
}

uint64_t sub_1A55A77B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 4) {
      return v10 - 3;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A55A7888);
}

uint64_t sub_1A55A7888(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
  return result;
}

uint64_t sub_1A55A7944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55A7964(a1, a2, a3, type metadata accessor for SFProximityHandoff.Content);
}

uint64_t sub_1A55A7964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SFProximityHandoffInvocations.ProximityHandoffInteractions()
{
  return self;
}

ValueMetadata *type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.CodingKeys()
{
  return &type metadata for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.CodingKeys()
{
  return &type metadata for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters.CodingKeys;
}

unsigned char *_s7Sharing29SFProximityHandoffInvocationsO27PerformHandoffContentActionC10ParametersV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55A7B0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoffClient.Identifier.CodingKeys()
{
  return &type metadata for SFProximityHandoffClient.Identifier.CodingKeys;
}

ValueMetadata *type metadata accessor for SFProximityHandoffClient.Identifier.AirDropUICodingKeys()
{
  return &type metadata for SFProximityHandoffClient.Identifier.AirDropUICodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SFProximityHandoffClient.Identifier.OtherCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A55A7BF0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoffClient.Identifier.OtherCodingKeys()
{
  return &type metadata for SFProximityHandoffClient.Identifier.OtherCodingKeys;
}

unint64_t sub_1A55A7C2C()
{
  unint64_t result = qword_1E9672200;
  if (!qword_1E9672200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672200);
  }
  return result;
}

unint64_t sub_1A55A7C84()
{
  unint64_t result = qword_1E9672208;
  if (!qword_1E9672208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672208);
  }
  return result;
}

unint64_t sub_1A55A7CDC()
{
  unint64_t result = qword_1E9672210;
  if (!qword_1E9672210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672210);
  }
  return result;
}

unint64_t sub_1A55A7D34()
{
  unint64_t result = qword_1E9672218;
  if (!qword_1E9672218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672218);
  }
  return result;
}

unint64_t sub_1A55A7D8C()
{
  unint64_t result = qword_1E9672220;
  if (!qword_1E9672220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672220);
  }
  return result;
}

unint64_t sub_1A55A7DE4()
{
  unint64_t result = qword_1E9672228;
  if (!qword_1E9672228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672228);
  }
  return result;
}

unint64_t sub_1A55A7E3C()
{
  unint64_t result = qword_1E9672230;
  if (!qword_1E9672230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672230);
  }
  return result;
}

unint64_t sub_1A55A7E94()
{
  unint64_t result = qword_1E9672238;
  if (!qword_1E9672238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672238);
  }
  return result;
}

unint64_t sub_1A55A7EEC()
{
  unint64_t result = qword_1E9672240;
  if (!qword_1E9672240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672240);
  }
  return result;
}

unint64_t sub_1A55A7F44()
{
  unint64_t result = qword_1E9672248;
  if (!qword_1E9672248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672248);
  }
  return result;
}

unint64_t sub_1A55A7F9C()
{
  unint64_t result = qword_1E9672250;
  if (!qword_1E9672250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672250);
  }
  return result;
}

unint64_t sub_1A55A7FF4()
{
  unint64_t result = qword_1E9672258;
  if (!qword_1E9672258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672258);
  }
  return result;
}

unint64_t sub_1A55A804C()
{
  unint64_t result = qword_1E9672260;
  if (!qword_1E9672260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672260);
  }
  return result;
}

unint64_t sub_1A55A80A4()
{
  unint64_t result = qword_1E9672268;
  if (!qword_1E9672268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672268);
  }
  return result;
}

uint64_t sub_1A55A80F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1A55A81E8(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55A822C(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A4AC4);
}

uint64_t sub_1A55A8244()
{
  return objectdestroy_52Tm(&qword_1E9672278);
}

uint64_t sub_1A55A8250()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9672278) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E9672278, (uint64_t)&unk_1EF9BA6B0, (uint64_t)sub_1A55A8368, (uint64_t)&block_descriptor_72);
}

uint64_t sub_1A55A831C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1A55A8344()
{
  return sub_1A55DBDAC(*(void *)(v0 + 16));
}

uint64_t sub_1A55A834C()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A835C()
{
  return objectdestroy_68Tm(&qword_1E9672278);
}

uint64_t sub_1A55A8368(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E9672278);
}

uint64_t sub_1A55A8374()
{
  return objectdestroy_68Tm(&qword_1E9672278);
}

uint64_t sub_1A55A8380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55AA728(a1, a2, a3, a4, a5, &qword_1E9672278, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55A2488);
}

uint64_t sub_1A55A83A0()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v0 + v2, v4);
  unint64_t v6 = v0 + v2 + v1[16];
  uint64_t v7 = sub_1A56D4C28();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  unint64_t v8 = v0 + v2 + v1[17];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D58);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v10 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E0) + 48);
      v5(v10, v4);
      uint64_t v11 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96710E8) + 52);
      uint64_t v12 = &qword_1E96710F0;
      goto LABEL_6;
    }
    if (EnumCaseMultiPayload) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D68) + 80);
  swift_bridgeObjectRelease();
  sub_1A5512C74(*(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(unsigned char *)(v10 + 48));
  uint64_t v11 = (int *)(type metadata accessor for SFAirDrop.DeclineAction() + 28);
  uint64_t v12 = &qword_1E96710D8;
LABEL_6:
  v5(v10 + *v11, v4);
  __swift_instantiateConcreteTypeFromMangledName(v12);
  swift_release();
LABEL_7:
  swift_release();

  return swift_deallocObject();
}

void sub_1A55A860C(void **a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9670D10) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A55A0F28(*a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A55A86C8(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A472C);
}

uint64_t sub_1A55A86E0()
{
  return objectdestroy_52Tm(&qword_1E9672288);
}

uint64_t sub_1A55A86EC()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9672288) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E9672288, (uint64_t)&unk_1EF9BA840, (uint64_t)sub_1A55A87E4, (uint64_t)&block_descriptor_111);
}

uint64_t sub_1A55A87B8()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A87C8()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A87D8()
{
  return objectdestroy_68Tm(&qword_1E9672288);
}

uint64_t sub_1A55A87E4(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E9672288);
}

uint64_t sub_1A55A87F0(void *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_1A55A5E90(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1A55A8864()
{
  return objectdestroy_68Tm(&qword_1E9672288);
}

uint64_t sub_1A55A8870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55AA728(a1, a2, a3, a4, a5, &qword_1E9672288, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55A2360);
}

uint64_t sub_1A55A8890()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A55A88D8(void **a1, uint64_t a2)
{
  sub_1A55A0CD0(*a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1A55A8900(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A4394);
}

uint64_t sub_1A55A8918()
{
  return objectdestroy_52Tm(&qword_1E9672298);
}

uint64_t sub_1A55A8924()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9672298) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E9672298, (uint64_t)&unk_1EF9BA9D0, (uint64_t)sub_1A55A8A54, (uint64_t)&block_descriptor_150);
}

uint64_t sub_1A55A89F0()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A8A00()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A55A8A38()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A8A48()
{
  return objectdestroy_68Tm(&qword_1E9672298);
}

uint64_t sub_1A55A8A54(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E9672298);
}

uint64_t sub_1A55A8A60()
{
  return objectdestroy_68Tm(&qword_1E9672298);
}

uint64_t sub_1A55A8A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55AA728(a1, a2, a3, a4, a5, &qword_1E9672298, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55A223C);
}

void sub_1A55A8A90(void **a1, uint64_t a2)
{
}

void sub_1A55A8AD4(void **a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(sub_1A56D4CB8() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v15 = (*(void *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A55A11DC(*a1, a2, *(objc_class **)(v6 + 16), *(void **)(v6 + 24), v6 + v14, *(void *)(v6 + v15), *(void *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)), a3, a4, a5, a6);
}

uint64_t sub_1A55A8BC0(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A2A6C);
}

uint64_t sub_1A55A8BD8()
{
  return objectdestroy_52Tm(&qword_1E966BB98);
}

uint64_t sub_1A55A8BE4()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E966BB98) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E966BB98, (uint64_t)&unk_1EF9BAB88, (uint64_t)sub_1A55A8CDC, (uint64_t)&block_descriptor_189);
}

uint64_t sub_1A55A8CB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A8CC0()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A8CD0()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55A8CDC(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E966BB98);
}

uint64_t sub_1A55A8CE8()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55A8CF8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A55A2130(a1, a2, a3, a4, a5);
}

uint64_t sub_1A55A8D94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A55A8DFC(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A55A0A0C);
}

uint64_t sub_1A55A8E3C()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55A8E48()
{
  uint64_t v1 = (int *)(type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v14 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = v3 + *(int *)(type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0) + 20);
  uint64_t v7 = sub_1A56D4C28();
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v3 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent(0);
  v8(v9 + *(int *)(v10 + 24), v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v9 + *(int *)(v10 + 52);
  swift_bridgeObjectRelease();
  sub_1A54EA09C(*(void *)(v11 + 16), *(void *)(v11 + 24));
  uint64_t v12 = type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo(0);
  v5(v11 + *(int *)(v12 + 24), v4);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55A9084(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate.Parameters, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A55A0748);
}

uint64_t sub_1A55A90C4()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t objectdestroy_197Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + v1[7];
  uint64_t v7 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55A922C(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A55A0484);
}

uint64_t sub_1A55A926C(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A3FFC);
}

uint64_t sub_1A55A9284()
{
  return objectdestroy_52Tm(&qword_1E96722C0);
}

uint64_t sub_1A55A9290()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96722C0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E96722C0, (uint64_t)&unk_1EF9BAE30, (uint64_t)sub_1A55A9388, (uint64_t)&block_descriptor_252);
}

uint64_t sub_1A55A935C()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A936C()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A937C()
{
  return objectdestroy_68Tm(&qword_1E96722C0);
}

uint64_t sub_1A55A9388(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E96722C0);
}

uint64_t sub_1A55A9394()
{
  return objectdestroy_68Tm(&qword_1E96722C0);
}

uint64_t sub_1A55A93A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55AA728(a1, a2, a3, a4, a5, &qword_1E96722C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55A1DB4);
}

uint64_t sub_1A55A93C0()
{
  uint64_t v1 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_1A56D4CB8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v0 + v3, v5);
  uint64_t v8 = v0 + v3 + v1[5];
  type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = (v2 + 32) & ~v2;
    uint64_t v9 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5)) {
      v7(v10, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v8 + *(int *)(v9 + 44), v5);
    uint64_t v3 = v17;
  }
  uint64_t v11 = v4 + v1[6];
  uint64_t v12 = sub_1A56D4C28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v4 + v1[7];
  uint64_t v14 = sub_1A56D5B08();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55A9698(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFAirDrop.NearbySharingInteraction, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A55A01C0);
}

uint64_t sub_1A55A96D8()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

void sub_1A55A96E8(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55A972C(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A3C64);
}

uint64_t sub_1A55A9744()
{
  return objectdestroy_52Tm(&qword_1E966BBA0);
}

uint64_t sub_1A55A9750()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E966BBA0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E966BBA0, (uint64_t)&unk_1EF9BB010, (uint64_t)sub_1A55A9848, (uint64_t)&block_descriptor_303);
}

uint64_t sub_1A55A981C()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A982C()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A983C()
{
  return objectdestroy_68Tm(&qword_1E966BBA0);
}

uint64_t sub_1A55A9848(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E966BBA0);
}

uint64_t sub_1A55A9854()
{
  return objectdestroy_68Tm(&qword_1E966BBA0);
}

uint64_t sub_1A55A9860(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A55A9880(a1, a2, a3, a4, a5, &qword_1E966BBA0, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A5609044);
}

uint64_t sub_1A55A9880(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6, void (*a7)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  return sub_1A55A25A8(a1, a2, a3, a4, a5, v7 + ((*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), a7, a6);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1A55A9A28(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55A9A6C()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55A9A78()
{
  uint64_t v1 = *(void *)(type metadata accessor for SFAirDrop.NearbySharingAssertionRequest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1A56D4CB8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55A9BA0(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFAirDrop.NearbySharingAssertionRequest, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A559FEFC);
}

uint64_t sub_1A55A9BE0(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A38CC);
}

uint64_t sub_1A55A9BF8()
{
  return objectdestroy_52Tm(&qword_1E96722F8);
}

uint64_t sub_1A55A9C04()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96722F8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E96722F8, (uint64_t)&unk_1EF9BB1C8, (uint64_t)sub_1A55A9CFC, (uint64_t)&block_descriptor_354);
}

uint64_t sub_1A55A9CD0()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A9CE0()
{
  return swift_deallocObject();
}

uint64_t sub_1A55A9CF0()
{
  return objectdestroy_68Tm(&qword_1E96722F8);
}

uint64_t sub_1A55A9CFC(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E96722F8);
}

uint64_t sub_1A55A9D08()
{
  return objectdestroy_68Tm(&qword_1E96722F8);
}

uint64_t sub_1A55A9D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55AA728(a1, a2, a3, a4, a5, &qword_1E96722F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55A1A5C);
}

uint64_t sub_1A55A9D34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A55A9D84(void **a1, uint64_t a2)
{
  sub_1A559FC94(*a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1A55A9DAC()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55A9DB8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1A56D4CB8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55A9EE0(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A559F9D0);
}

uint64_t sub_1A55A9F20()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

void sub_1A55A9F30(void **a1, uint64_t a2)
{
}

void sub_1A55A9F74(void **a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1A55A14B8(*a1, a2, *(void *)(v6 + 16), *(void **)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), a3, a4, a5, a6);
}

uint64_t sub_1A55A9FB4()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

void sub_1A55A9FC4(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55AA008(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A3534);
}

uint64_t sub_1A55AA020()
{
  return objectdestroy_52Tm(&qword_1E9672338);
}

uint64_t sub_1A55AA02C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9672338) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E9672338, (uint64_t)&unk_1EF9BB498, (uint64_t)sub_1A55AA124, (uint64_t)&block_descriptor_429);
}

uint64_t sub_1A55AA0F8()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AA108()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AA118()
{
  return objectdestroy_68Tm(&qword_1E9672338);
}

uint64_t sub_1A55AA124(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E9672338);
}

uint64_t sub_1A55AA130()
{
  return objectdestroy_68Tm(&qword_1E9672338);
}

uint64_t sub_1A55AA13C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A55A9880(a1, a2, a3, a4, a5, &qword_1E9672338, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A5608B18);
}

uint64_t sub_1A55AA15C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  type metadata accessor for SFAirDropClient.Identifier();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v5 = sub_1A56D4CB8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55AA294(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter.Parameters, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A559F70C);
}

uint64_t sub_1A55AA2D4()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55AA2E0()
{
  return objectdestroy_449Tm((uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
}

uint64_t sub_1A55AA2F8(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A559F448);
}

uint64_t sub_1A55AA338()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55AA344()
{
  uint64_t v1 = (int *)type metadata accessor for SFAirDropSend.Request();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v13 = *(void *)(*((void *)v1 - 1) + 64);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v0 + v2, v4);
  sub_1A5512CD4(*(void *)(v3 + v1[5]), *(void *)(v3 + v1[5] + 8), *(unsigned char *)(v3 + v1[5] + 16));
  swift_bridgeObjectRelease();
  v5(v0 + v2 + v1[7], v4);
  unint64_t v6 = v0 + v2 + v1[8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966B120);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v5(v6, v4);
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(v3 + v1[10]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_1A54EA09C(*v8, v9);
  }
  uint64_t v10 = (uint64_t *)(v3 + v1[11]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_1A54EA09C(*v10, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55AA594(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, (uint64_t (*)(void))type metadata accessor for SFAirDropSend.Request, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A559F184);
}

uint64_t sub_1A55AA5D4(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A319C);
}

uint64_t sub_1A55AA5EC()
{
  return objectdestroy_52Tm(&qword_1E9672360);
}

uint64_t sub_1A55AA5F8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9672360) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E9672360, (uint64_t)&unk_1EF9BB740, (uint64_t)sub_1A55AA6F0, (uint64_t)&block_descriptor_492);
}

uint64_t sub_1A55AA6C4()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AA6D4()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AA6E4()
{
  return objectdestroy_68Tm(&qword_1E9672360);
}

uint64_t sub_1A55AA6F0(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E9672360);
}

uint64_t sub_1A55AA6FC()
{
  return objectdestroy_68Tm(&qword_1E9672360);
}

uint64_t sub_1A55AA708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1A55AA728(a1, a2, a3, a4, a5, &qword_1E9672360, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A55A1704);
}

uint64_t sub_1A55AA728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = v7 + ((*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return a7(a1, a2, a3, a4, a5, v14);
}

void sub_1A55AA7E0(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55AA824()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

void sub_1A55AA834(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55AA878()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

void sub_1A55AA888(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55AA8CC(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A4E5C);
}

uint64_t sub_1A55AA8E4()
{
  return objectdestroy_52Tm(&qword_1E966BFA8);
}

uint64_t sub_1A55AA8F0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFA8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E966BFA8, (uint64_t)&unk_1EF9BB9E8, (uint64_t)sub_1A55AA9E8, (uint64_t)&block_descriptor_555);
}

uint64_t sub_1A55AA9BC()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AA9CC()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AA9DC()
{
  return objectdestroy_68Tm(&qword_1E966BFA8);
}

uint64_t sub_1A55AA9E8(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E966BFA8);
}

uint64_t sub_1A55AA9F4()
{
  return objectdestroy_68Tm(&qword_1E966BFA8);
}

uint64_t sub_1A55AAA00(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A55A9880(a1, a2, a3, a4, a5, &qword_1E966BFA8, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A5609F80);
}

void sub_1A55AAA24(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55AAA68()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

void sub_1A55AAA78(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55AAABC(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A2E04);
}

uint64_t sub_1A55AAAD4()
{
  return objectdestroy_52Tm(&qword_1E96723A8);
}

uint64_t sub_1A55AAAE0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96723A8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E96723A8, (uint64_t)&unk_1EF9BBC18, (uint64_t)sub_1A55AABD8, (uint64_t)&block_descriptor_606);
}

uint64_t sub_1A55AABAC()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AABBC()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AABCC()
{
  return objectdestroy_68Tm(&qword_1E96723A8);
}

uint64_t sub_1A55AABD8(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E96723A8);
}

uint64_t sub_1A55AABE4()
{
  return objectdestroy_68Tm(&qword_1E96723A8);
}

uint64_t sub_1A55AABF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A55A9880(a1, a2, a3, a4, a5, &qword_1E96723A8, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A5607B90);
}

uint64_t sub_1A55AAC10()
{
  uint64_t v1 = *(void *)(type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters(0)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1A56D4CB8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  type metadata accessor for SFProximityHandoff.Content(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55AAD68(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFProximityHandoffInvocations.PerformHandoffContentAction.Parameters, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A559EEC0);
}

uint64_t sub_1A55AADA8(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void, uint64_t, void, void, unint64_t, void, void))
{
  uint64_t v8 = *(void *)(a3(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a4(*a1, a2, *(void *)(v4 + 16), *(void *)(v4 + 24), v4 + v9, *(void *)(v4 + v10), *(void *)(v4 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1A55AAE6C()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t sub_1A55AAE78()
{
  return objectdestroy_449Tm(type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters);
}

uint64_t objectdestroy_449Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(a1(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1A56D4CB8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v1 + v3, v5);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55AAFA4(void *a1, uint64_t a2)
{
  return sub_1A55AADA8(a1, a2, type metadata accessor for SFProximityHandoffInvocations.NearbySharingInteractionViewUpdate.Parameters, (uint64_t (*)(void, uint64_t, void, void, unint64_t, void, void))sub_1A559EBFC);
}

uint64_t sub_1A55AAFE4()
{
  return objectdestroy_68Tm(&qword_1E966BB98);
}

uint64_t objectdestroy_272Tm()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1A55AB03C(void **a1, uint64_t a2)
{
}

uint64_t sub_1A55AB080(uint64_t a1)
{
  return sub_1A55AB098(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1A55A26D4);
}

uint64_t sub_1A55AB098(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1A55AB0B0()
{
  return objectdestroy_52Tm(&qword_1E96723B8);
}

uint64_t objectdestroy_52Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55AB1AC()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E96723B8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55A51F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(void (**)(void, void))(v0 + v3), *(void *)(v0 + v3 + 8), &qword_1E96723B8, (uint64_t)&unk_1EF9BBEC0, (uint64_t)sub_1A55AB2A4, (uint64_t)&block_descriptor_671);
}

uint64_t sub_1A55AB278()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AB288()
{
  return swift_deallocObject();
}

uint64_t sub_1A55AB298()
{
  return objectdestroy_68Tm(&qword_1E96723B8);
}

uint64_t sub_1A55AB2A4(void *a1)
{
  return sub_1A55A87F0(a1, &qword_1E96723B8);
}

uint64_t sub_1A55AB2B0()
{
  return objectdestroy_68Tm(&qword_1E96723B8);
}

uint64_t objectdestroy_68Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);

  return swift_deallocObject();
}

uint64_t sub_1A55AB348(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A55A9880(a1, a2, a3, a4, a5, &qword_1E96723B8, (void (*)(uint64_t *__return_ptr, void *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1A5607670);
}

uint64_t Deque<A>.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1A56D5898();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v21 - v11;
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a2, (uint64_t)&type metadata for _DequeBufferHeader, a3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v20);
  v21[0] = a1;
  sub_1A56D60C8();
  void v21[2] = Deque.makeIterator()(a2, a3);
  v21[3] = v13;
  v21[4] = v14;
  uint64_t v15 = type metadata accessor for Deque.Iterator();
  Deque.Iterator.next()(v15, (uint64_t)v12);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v16(v12, 1, a3) != 1)
  {
    uint64_t v18 = v7 + 32;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    do
    {
      v17(v9, v12, a3);
      sub_1A56D4FF8();
      (*(void (**)(char *, uint64_t))(v18 - 24))(v9, a3);
      Deque.Iterator.next()(v15, (uint64_t)v12);
    }
    while (v16(v12, 1, a3) != 1);
  }
  return swift_release();
}

uint64_t Deque<A>.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A56D60B8();
  Deque<A>.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_1A56D60E8();
}

uint64_t sub_1A55AB868(uint64_t a1, uint64_t a2)
{
  return Deque<A>.hashValue.getter(*v2, *(void *)(a1 + 16), *(void *)(a2 - 8));
}

uint64_t sub_1A55AB87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Deque<A>.hash(into:)(a1, *v3, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_1A55AB890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  sub_1A56D60B8();
  Deque<A>.hash(into:)((uint64_t)v7, *v3, *(void *)(a2 + 16), v5);
  return sub_1A56D60E8();
}

uint64_t sub_1A55AB8E8()
{
  return swift_getWitnessTable();
}

uint64_t Deque._storage.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Deque._storage.modify())()
{
  return nullsub_1;
}

uint64_t type metadata accessor for Deque()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t static Deque<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = MEMORY[0x1E4FBC248];
  uint64_t v7 = MEMORY[0x1E4FBB550];
  uint64_t v8 = MEMORY[0x1E4FBC278];
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a1, (uint64_t)&type metadata for _DequeBufferHeader, a3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBC278], v12);
  sub_1A558BB64((uint64_t)sub_1A55896D4, 0, a2, (uint64_t)&type metadata for _DequeBufferHeader, a3, v6, v7, v8, v13);
  if (!v14
    || (uint64_t v9 = nullsub_1(a1, &type metadata for _DequeBufferHeader, a3),
        v9 == nullsub_1(a2, &type metadata for _DequeBufferHeader, a3)))
  {
    char v10 = 1;
  }
  else
  {
    type metadata accessor for Deque();
    swift_getWitnessTable();
    char v10 = sub_1A56D52C8();
  }
  return v10 & 1;
}

uint64_t sub_1A55ABB2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static Deque<A>.== infix(_:_:)(*a1, *a2, *(void *)(a3 + 16));
}

uint64_t Deque.init(arrayLiteral:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a1;
  uint64_t v3 = sub_1A56D53D8();
  uint64_t WitnessTable = swift_getWitnessTable();
  return Deque.init<A>(_:)((uint64_t)&v6, a2, v3, WitnessTable);
}

uint64_t sub_1A55ABBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_1A56D53D8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = Deque.init<A>(_:)((uint64_t)&v8, v4, v5, WitnessTable);
  *a3 = result;
  return result;
}

uint64_t Range<>._count.getter(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t static _DequeSlot.zero.getter()
{
  return 0;
}

BOOL static _DequeSlot.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

Sharing::_DequeSlot __swiftcall _DequeSlot.orIfZero(_:)(Sharing::_DequeSlot result)
{
  if (v1.position > 0) {
    return v1;
  }
  return result;
}

Sharing::_DequeSlot __swiftcall _DequeSlot.advanced(by:)(Swift::Int by)
{
  return (Sharing::_DequeSlot)(v1 + by);
}

BOOL static _DequeSlot.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t _DequeSlot.position.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*_DequeSlot.position.modify())()
{
  return nullsub_1;
}

uint64_t _DequeSlot.description.getter()
{
  return 64;
}

uint64_t sub_1A55ABCFC()
{
  return 64;
}

BOOL sub_1A55ABD64(void *a1, void *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1A55ABD7C()
{
  unint64_t result = qword_1E96723C0;
  if (!qword_1E96723C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96723C0);
  }
  return result;
}

BOOL sub_1A55ABDD0(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1A55ABDE4(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1A55ABDF8(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1A55ABE0C(void *a1, void *a2)
{
  return *a2 < *a1;
}

ValueMetadata *type metadata accessor for _DequeSlot()
{
  return &type metadata for _DequeSlot;
}

uint64_t sub_1A55ABE30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a7;
  uint64_t v64 = a5;
  uint64_t v63 = a3;
  uint64_t v77 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v66 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v68 = (char *)&v59 - v12;
  uint64_t v13 = sub_1A56D5BA8();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v60 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v65 = (char *)&v59 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v17 - 8);
  Class v71 = (Class)((char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_1A56D4CB8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v59 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v59 - v23;
  Class v72 = (Class)type metadata accessor for _SFXPCAsyncSequenceContainer(0);
  id v25 = objc_allocWithZone(v72);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v26 = (char *)v25;
  sub_1A56D4CA8();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v27(&v26[OBJC_IVAR____SFXPCAsyncSequenceContainer_uuid], v24, v19);
  os_log_type_t v28 = (uint64_t *)&v26[OBJC_IVAR____SFXPCAsyncSequenceContainer_name];
  *os_log_type_t v28 = v77;
  v28[1] = (uint64_t)a2;
  id v67 = a2;
  swift_bridgeObjectRetain();
  *(void *)&v26[OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences] = sub_1A54F05D8(MEMORY[0x1E4FBC860]);
  *(void *)&v26[OBJC_IVAR____SFXPCAsyncSequenceContainer_containerRegistry] = a4;
  swift_retain();

  if (a4)
  {
    uint64_t v29 = sub_1A56D5478();
    (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v71, 1, 1, v29);
    uint64_t v30 = v59;
    v27(v59, v24, v19);
    unint64_t v31 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v32 = (v21 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (char *)swift_allocObject();
    *((void *)v33 + 2) = 0;
    *((void *)v33 + 3) = 0;
    *((void *)v33 + 4) = a4;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v33[v31], v30, v19);
    id v34 = (uint64_t *)&v33[v32];
    uint64_t v35 = v77;
    uint64_t v36 = (uint64_t)v67;
    *id v34 = v77;
    v34[1] = v36;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1A54EB08C((uint64_t)v71, (uint64_t)&unk_1E9670AD8, (uint64_t)v33);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
    uint64_t v36 = (uint64_t)v67;
    swift_bridgeObjectRelease();
    uint64_t v35 = v77;
  }
  v76.receiver = v26;
  v76.super_class = v72;
  id v37 = objc_msgSendSuper2(&v76, sel_init);
  swift_release();
  Class v71 = (Class)type metadata accessor for _SFXPCBlockContainer();
  objc_allocWithZone(v71);
  swift_retain();
  id v67 = sub_1A54F443C(v35, v36, a4);
  uint64_t v77 = a4;
  swift_release();
  sub_1A56D48B8();
  swift_allocObject();
  sub_1A56D48A8();
  id v38 = v68;
  sub_1A56D5B98();
  uint64_t v40 = v69;
  uint64_t v39 = v70;
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
  uint64_t result = v41(v38, 1, v70);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  uint64_t v44 = (uint64_t)v65;
  v43(v65, v38, v39);
  Class v75 = v72;
  v74[0] = v37;
  Class v72 = (Class)v37;
  uint64_t v45 = v39;
  uint64_t v46 = (void (*)(unsigned char *, void))sub_1A56D4898();
  sub_1A553763C((uint64_t)v74, v44);
  v46(v73, 0);
  uint64_t v47 = v66;
  sub_1A56D5B98();
  uint64_t result = v41(v47, 1, v45);
  if (result == 1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v48 = (uint64_t)v60;
  v43(v60, v47, v45);
  Class v75 = v71;
  v74[0] = v67;
  uint64_t v49 = (char *)v67;
  uint64_t v50 = (void (*)(unsigned char *, void))sub_1A56D4898();
  sub_1A553763C((uint64_t)v74, v48);
  v50(v73, 0);
  uint64_t v51 = v63;
  uint64_t v52 = v64;
  uint64_t v53 = v62;
  uint64_t v54 = sub_1A56D4888();
  swift_release();
  swift_release();
  if (v53)
  {

    (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
    Class v55 = v72;
    uint64_t v56 = (char *)v72 + OBJC_IVAR____SFXPCAsyncSequenceContainer_sequences;
    swift_beginAccess();
    if (!*(void *)(*(void *)v56 + 16)) {

    }
    uint64_t v57 = &v49[OBJC_IVAR____SFXPCBlockContainer_registeredAsyncBlocks];
    swift_beginAccess();
    if (!*(void *)(*(void *)v57 + 16))
    {
      uint64_t v58 = &v49[OBJC_IVAR____SFXPCBlockContainer_registeredSyncBlocks];
      swift_beginAccess();
      if (!*(void *)(*(void *)v58 + 16)) {
    }
      }
  }
  return v54;
}

uint64_t sub_1A55AC634@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X8>)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return sub_1A553FC9C(a1, a2);
}

uint64_t sub_1A55AC6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = v11;
  v9[10] = v8;
  v9[7] = a7;
  unsigned char v9[8] = a8;
  v9[5] = a5;
  v9[6] = a6;
  v9[3] = a2;
  v9[4] = a3;
  void v9[2] = a1;
  return MEMORY[0x1F4188298](sub_1A55AC730, 0, 0);
}

uint64_t sub_1A55AC730()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  long long v9 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  long long v4 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 40) = v9;
  *(void *)(v3 + 56) = v1;
  *(_OWORD *)(v3 + 64) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1A55AC848;
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v7, 0, 0, 0xD000000000000014, 0x80000001A573A100, sub_1A55B39A8, v3, v6);
}

uint64_t sub_1A55AC848()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A55AC984, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A55AC984()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A55AC9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

void sub_1A55ACAB8(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v101 = a4;
  uint64_t v102 = a3;
  uint64_t v112 = a1;
  uint64_t v96 = a7;
  uint64_t v125 = *MEMORY[0x1E4F143B8];
  uint64_t v95 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v98 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = v10;
  uint64_t v11 = sub_1A56D5898();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v104 = (char *)&v93 - v13;
  uint64_t v106 = (void *)a5;
  uint64_t v103 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v115 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1A56D4C28();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v107 = (char *)&v93 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v93 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v93 - v25;
  os_activity_flag_t v27 = dword_1EF9AF348;
  uint64_t v117 = "syncXPC";
  uint64_t v118 = 7;
  char v119 = 2;
  int v120 = dword_1EF9AF348;
  v121.opaque[0] = 0;
  v121.opaque[1] = 0;
  if (qword_1E966C7B8 != -1) {
    swift_once();
  }
  os_log_type_t v28 = _os_activity_create(&dword_1A5389000, "syncXPC", (os_activity_t)qword_1E966C7C8, v27);
  if (v28)
  {
    os_activity_scope_enter(v28, &v121);
    swift_unknownObjectRelease();
  }
  uint64_t v94 = v24;
  os_activity_scope_state_t v114 = &v121;
  sub_1A56D4C18();
  if (qword_1E966C878 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1A56D4D98();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1E966C890);
  swift_bridgeObjectRetain_n();
  os_log_t v111 = v30;
  unint64_t v31 = sub_1A56D4D78();
  os_log_type_t v32 = sub_1A56D57D8();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v113 = v16;
  uint64_t v108 = v19;
  uint64_t v100 = v11;
  if (v33)
  {
    id v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    aBlock[0] = v35;
    *(_DWORD *)id v34 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)&v124[0] = sub_1A54E3290(v112, a2, aBlock);
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5389000, v31, v32, "syncXPC [%{public}s] START -- Client", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v35, -1, -1);
    MEMORY[0x1A626CE20](v34, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0;
  id v37 = (void **)(v36 + 16);
  id v38 = v110;
  unsigned __int8 v39 = objc_msgSend(v110, sel_respondsToSelector_, sel_synchronousRemoteObjectProxyWithErrorHandler_);
  uint64_t v40 = (uint64_t)v115;
  if (v39)
  {
    aBlock[4] = (uint64_t)sub_1A55B36F4;
    aBlock[5] = v36;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1A560A4A8;
    aBlock[3] = (uint64_t)&block_descriptor_29;
    uint64_t v41 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain_n();
    id v42 = objc_msgSend(v38, sel_synchronousRemoteObjectProxyWithErrorHandler_, v41);
    _Block_release(v41);
    sub_1A56D5968();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    memset(v124, 0, sizeof(v124));
  }
  swift_beginAccess();
  uint64_t v43 = *v37;
  unint64_t v109 = v26;
  if (v43)
  {
    os_log_t v123 = v43;
    uint64_t v44 = v43;
    uint64_t v45 = v43;
    uint64_t v46 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
    uint64_t v47 = sub_1A56D5EE8();
    if (v47)
    {
      uint64_t v48 = (void *)v47;
    }
    else
    {
      uint64_t v48 = (void *)swift_allocError();
      *uint64_t v50 = v123;
    }
    swift_willThrow();
  }
  else
  {
    uint64_t v49 = v105;
    tryCast<A>(_:as:description:file:line:)((uint64_t)v124, (uint64_t)v106, 0, 0, 0xD000000000000051, 0x80000001A573A130, 194, (uint64_t)v106, v40);
    if (v49)
    {
      uint64_t v48 = v49;
    }
    else
    {
      v102(v40);
      id v110 = 0;
      id v68 = *v37;
      if (!*v37)
      {
        uint64_t v74 = v100;
        Optional.tryUnwrap(_:file:line:)(0x746C75736572, 0xE600000000000000, 0xD000000000000051, 0x80000001A573A130, 197, v100, v98);
        id v110 = 0;
        uint64_t v76 = v113;
        uint64_t v77 = v94;
        (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v94, v26, v15);
        swift_bridgeObjectRetain_n();
        disableAirDropTLS();
        disableAirDropTLS();
        uint64_t v78 = v26;
        uint64_t v79 = sub_1A56D4D78();
        os_log_type_t v80 = sub_1A56D57D8();
        int v81 = v80;
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v82 = swift_slowAlloc();
          LODWORD(v108) = v81;
          uint64_t v83 = v82;
          os_log_t v111 = (os_log_t)swift_slowAlloc();
          os_log_t v123 = v111;
          *(_DWORD *)uint64_t v83 = 136446722;
          swift_bridgeObjectRetain();
          uint64_t v116 = sub_1A54E3290(v112, a2, (uint64_t *)&v123);
          uint64_t v112 = v15;
          sub_1A56D5928();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v83 + 12) = 1040;
          LODWORD(v116) = 3;
          sub_1A56D5928();
          *(_WORD *)(v83 + 18) = 2048;
          int64_t v84 = v107;
          sub_1A56D4C18();
          sub_1A56D4AD8();
          uint64_t v86 = v85;
          uint64_t v87 = *(void (**)(char *, uint64_t))(v76 + 8);
          uint64_t v88 = v84;
          uint64_t v89 = v112;
          v87(v88, v112);
          uint64_t v116 = v86;
          sub_1A56D5928();
          v87(v77, v89);
          _os_log_impl(&dword_1A5389000, v79, (os_log_type_t)v108, "syncXPC [%{public}s] END -- Client {duration: %.*f}", (uint8_t *)v83, 0x1Cu);
          os_log_t v90 = v111;
          swift_arrayDestroy();
          MEMORY[0x1A626CE20](v90, -1, -1);
          MEMORY[0x1A626CE20](v83, -1, -1);

          (*(void (**)(char *, uint64_t))(v99 + 8))(v104, v100);
          (*(void (**)(char *, void *))(v103 + 8))(v115, v106);
          sub_1A553E2C0((uint64_t)v124);
          v87(v109, v89);
        }
        else
        {

          int64_t v91 = *(void (**)(char *, uint64_t))(v76 + 8);
          v91(v77, v15);
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v99 + 8))(v104, v74);
          (*(void (**)(char *, void *))(v103 + 8))(v115, v106);
          sub_1A553E2C0((uint64_t)v124);
          v91(v78, v15);
        }
        int64_t v92 = v114;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v96, v98, v97);
        swift_release();
        os_activity_scope_leave(v92);
        return;
      }
      os_log_t v123 = (os_log_t)*v37;
      id v69 = v68;
      id v70 = v68;
      id v71 = v68;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
      uint64_t v72 = sub_1A56D5EE8();
      uint64_t v73 = v100;
      if (v72)
      {
        uint64_t v48 = (void *)v72;
      }
      else
      {
        uint64_t v48 = (void *)swift_allocError();
        *Class v75 = v123;
      }
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v99 + 8))(v104, v73);
      (*(void (**)(char *, void *))(v103 + 8))(v115, v106);
    }
  }
  sub_1A553E2C0((uint64_t)v124);
  swift_release();
  uint64_t v51 = v113;
  uint64_t v52 = v108;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v108, v26, v15);
  swift_bridgeObjectRetain();
  id v53 = v48;
  swift_bridgeObjectRetain();
  id v54 = v48;
  disableAirDropTLS();
  disableAirDropTLS();
  Class v55 = sub_1A56D4D78();
  os_log_type_t v56 = sub_1A56D57B8();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v58 = (void *)swift_slowAlloc();
    uint64_t v106 = v58;
    unint64_t v115 = (char *)swift_slowAlloc();
    *(void *)&v124[0] = v115;
    *(_DWORD *)uint64_t v57 = 136446978;
    os_log_t v111 = v55;
    swift_bridgeObjectRetain();
    os_log_t v123 = (os_log_t)sub_1A54E3290(v112, a2, (uint64_t *)v124);
    uint64_t v112 = v15;
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v57 + 12) = 2114;
    os_log_t v59 = (os_log_t)sub_1A56D4948();
    os_log_t v123 = v59;
    sub_1A56D5928();
    *uint64_t v58 = v59;

    *(_WORD *)(v57 + 22) = 1040;
    LODWORD(v123) = 3;
    sub_1A56D5928();
    *(_WORD *)(v57 + 28) = 2048;
    uint64_t v60 = v107;
    sub_1A56D4C18();
    sub_1A56D4AD8();
    os_log_t v62 = v61;
    id v110 = v48;
    os_log_type_t v63 = v56;
    uint64_t v64 = *(void (**)(char *, uint64_t))(v51 + 8);
    v64(v60, v112);
    os_log_t v123 = v62;
    uint64_t v15 = v112;
    sub_1A56D5928();
    v64(v52, v15);
    os_log_t v65 = v111;
    _os_log_impl(&dword_1A5389000, v111, v63, "syncXPC [%{public}s] FAIL -- Client {error: %{public}@, duration: %.*f}", (uint8_t *)v57, 0x26u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BFB0);
    uint64_t v66 = (uint64_t)v106;
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v66, -1, -1);
    id v67 = v115;
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v67, -1, -1);
    MEMORY[0x1A626CE20](v57, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v64 = *(void (**)(char *, uint64_t))(v51 + 8);
    v64(v52, v15);
  }
  swift_willThrow();
  v64(v109, v15);
  os_activity_scope_leave(v114);
}

uint64_t sub_1A55ADA88@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1A56D6158();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t SFXPCConnection.__allocating_init(machServiceName:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  uint64_t v5 = (void *)sub_1A56D5098();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 0);

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = 0;
  id v8 = v6;
  objc_msgSend(v8, sel_sf_setQueue_, a3);
  if (qword_1EB3DCFD8 != -1) {
    swift_once();
  }
  objc_msgSend(v8, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

  return v7;
}

Swift::Void __swiftcall SFXPCConnection.activate()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_activate);
}

Swift::Void __swiftcall SFXPCConnection.invalidate()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
}

uint64_t SFXPCConnection.asyncInvoke<A>(_:parameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[8] = a5;
  v6[9] = v5;
  v6[6] = a3;
  v6[7] = a4;
  v6[5] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  v6[11] = v8;
  v6[12] = *(void *)(v8 + 64);
  v6[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55ADE50, 0, 0);
}

uint64_t sub_1A55ADE50()
{
  uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone(*(Class *)(v0 + 56)), sel_init);
  *(void *)(v0 + 112) = v1;
  uint64_t v26 = v1;
  if (*(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v27 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v2 = *(void *)&v1[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v2 = 0x80000001A573A0E0;
    unint64_t v27 = 0xD00000000000001BLL;
  }
  *(void *)(v0 + 120) = v2;
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v22 = v3;
  unint64_t v23 = v2;
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v10 = *(void *)(v0 + 56);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v8 + 24);
  *(void *)(v0 + 128) = v11;
  uint64_t v24 = *(void **)(v8 + 16);
  *(void *)(v0 + 136) = v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v9, v6);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v13 = (v4 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (char *)swift_allocObject();
  *(void *)(v0 + 144) = v14;
  *((void *)v14 + 2) = v10;
  *((void *)v14 + 3) = v7;
  *((void *)v14 + 4) = v27;
  *((void *)v14 + 5) = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v14[v12], v22, v6);
  *(void *)&v14[v13] = v11;
  *(void *)&v14[(v13 + 15) & 0xFFFFFFFFFFFFFFF8] = v26;
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v15 = v24;
  swift_bridgeObjectRetain();
  id v16 = v26;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v17;
  unint64_t v18 = sub_1A55B2320();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *uint64_t v17 = v0;
  v17[1] = sub_1A55AE0E4;
  uint64_t v20 = *(void *)(v0 + 40);
  v17[9] = AssociatedTypeWitness;
  v17[10] = v15;
  v17[7] = v18;
  unsigned char v17[8] = v25;
  v17[5] = sub_1A55B2238;
  v17[6] = v14;
  void v17[3] = v27;
  void v17[4] = v23;
  void v17[2] = v20;
  return MEMORY[0x1F4188298](sub_1A55AC730, 0, 0);
}

uint64_t sub_1A55AE0E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 136);
  swift_release();

  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_1A55AE2C4;
  }
  else {
    uint64_t v4 = sub_1A55AE24C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1A55AE24C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A55AE2C4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id SFXPCInvocation.init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR___SFXPCInvocation_name];
  *(void *)uint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v5, sel_init);
}

id SFXPCInvocation.init(coder:)(void *a1)
{
  id v2 = sub_1A55B2384(a1);

  return v2;
}

void sub_1A55AE3B0(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR___SFXPCInvocation_name + 8))
  {
    uint64_t v3 = (void *)sub_1A56D5098();
    id v4 = (id)sub_1A56D5098();
    objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);
  }
}

uint64_t sub_1A55AE44C()
{
  uint64_t v0 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v0, qword_1E966C890);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E966C890);
  if (qword_1EB3DB9F8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EB3DC850);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t static VoidParameters.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A55AE524(uint64_t a1)
{
  unint64_t v2 = sub_1A55B2498();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55AE560(uint64_t a1)
{
  unint64_t v2 = sub_1A55B2498();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VoidParameters.encode(to:)(void *a1)
{
  return sub_1A55AE728(a1, (uint64_t *)&unk_1E966C490, (void (*)(void))sub_1A55B2498);
}

uint64_t VoidParameters.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A55AE600(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A55AE628(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55AE8AC(a1, a2, a3, (uint64_t *)&unk_1E966C490, (void (*)(void))sub_1A55B2498);
}

uint64_t static VoidResponse.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A55AE674(uint64_t a1)
{
  unint64_t v2 = sub_1A55B24EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55AE6B0(uint64_t a1)
{
  unint64_t v2 = sub_1A55B24EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VoidResponse.encode(to:)(void *a1)
{
  return sub_1A55AE728(a1, &qword_1E966BBF0, (void (*)(void))sub_1A55B24EC);
}

uint64_t sub_1A55AE728(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A56D61D8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t VoidResponse.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A55AE870(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55AE8AC(a1, a2, a3, &qword_1E966BBF0, (void (*)(void))sub_1A55B24EC);
}

uint64_t sub_1A55AE8AC(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1A56D61D8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t SFXPCConnection.containerRegistry.getter()
{
  return swift_retain();
}

uint64_t SFXPCConnection.containerRegistry.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t (*SFXPCConnection.containerRegistry.modify())()
{
  return j__swift_endAccess;
}

uint64_t SFXPCConnection.__allocating_init(_:queue:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = 0;
  id v5 = a1;
  objc_msgSend(v5, sel_sf_setQueue_, a2);
  if (qword_1EB3DCFD8 != -1) {
    swift_once();
  }
  objc_msgSend(v5, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

  return v4;
}

uint64_t SFXPCConnection.init(_:queue:)(void *a1, void *a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  id v4 = a1;
  objc_msgSend(v4, sel_sf_setQueue_, a2);
  if (qword_1EB3DCFD8 != -1) {
    swift_once();
  }
  objc_msgSend(v4, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

  return v2;
}

uint64_t SFXPCConnection.__allocating_init(_:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = swift_allocObject();
  SFXPCConnection.init(_:queue:)(v5, a2, a3);
  return v5;
}

uint64_t *SFXPCConnection.init(_:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *v3;
  swift_bridgeObjectRelease();
  v3[3] = 0;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  uint64_t v7 = (void *)sub_1A56D5098();
  id v8 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v7, 0);

  v3[2] = (uint64_t)v8;
  id v9 = v8;
  objc_msgSend(v9, sel_sf_setQueue_, a3);
  if (qword_1EB3DCFD8 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

  uint64_t v10 = (void *)v3[2];
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  v12[3] = a3;
  v12[4] = v5;
  void v17[4] = sub_1A55B25B8;
  v17[5] = v12;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  void v17[2] = sub_1A55AEF94;
  void v17[3] = &block_descriptor_5;
  unint64_t v13 = _Block_copy(v17);
  id v14 = v10;
  id v15 = a3;
  swift_release();
  objc_msgSend(v14, sel_setInterruptionHandler_, v13);

  _Block_release(v13);
  return v3;
}

uint64_t sub_1A55AEE60(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    id v5 = objc_allocWithZone(MEMORY[0x1E4F29268]);
    id v6 = (void *)sub_1A56D5098();
    id v7 = objc_msgSend(v5, sel_initWithMachServiceName_options_, v6, 0);

    id v8 = *(void **)(v4 + 16);
    *(void *)(v4 + 16) = v7;

    id v9 = *(id *)(v4 + 16);
    objc_msgSend(v9, sel_sf_setQueue_, a2);
    if (qword_1EB3DCFD8 != -1) {
      swift_once();
    }
    objc_msgSend(v9, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

    objc_msgSend(*(id *)(v4 + 16), sel_activate);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A55AEF94(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t SFXPCConnection.__allocating_init(serviceName:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4F29268]);
  id v5 = (void *)sub_1A56D5098();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithServiceName_, v5);

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = 0;
  id v8 = v6;
  objc_msgSend(v8, sel_sf_setQueue_, a3);
  if (qword_1EB3DCFD8 != -1) {
    swift_once();
  }
  objc_msgSend(v8, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

  return v7;
}

uint64_t SFXPCConnection.__allocating_init(listenerEndpoint:queue:)(void *a1, void *a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29268]), sel_initWithListenerEndpoint_, a1);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = 0;
  id v6 = v4;
  objc_msgSend(v6, sel_sf_setQueue_, a2);
  if (qword_1EB3DCFD8 != -1) {
    swift_once();
  }
  objc_msgSend(v6, sel_setRemoteObjectInterface_, qword_1EB3DD6F8);

  return v5;
}

id SFXPCInvocation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void sub_1A55AF1F4(void **a1, void *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v44 = a7;
  uint64_t v45 = a5;
  unint64_t v46 = a3;
  id v43 = a2;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v13 = sub_1A56D5428();
  uint64_t v41 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v39 - v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v39 - v17, v45, AssociatedTypeWitness);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = AssociatedConformanceWitness;
  uint64_t v23 = v48;
  uint64_t v25 = sub_1A55ABE30(v46, a4, (uint64_t)v18, a6, AssociatedTypeWitness, v24, v22);
  if (!v23)
  {
    uint64_t v29 = v27;
    uint64_t v48 = v25;
    unint64_t v46 = v26;
    id v40 = v28;
    uint64_t v45 = sub_1A56D4A68();
    uint64_t v30 = v41;
    uint64_t v31 = v42;
    (*(void (**)(char *, id, uint64_t))(v41 + 16))(v15, v43, v42);
    uint64_t v32 = *(unsigned __int8 *)(v30 + 80);
    id v43 = v19;
    uint64_t v33 = (v32 + 32) & ~v32;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = a8;
    *(void *)(v34 + 24) = a9;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v34 + v33, v15, v31);
    aBlock[4] = sub_1A55B3E48;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_73_0;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = v29;
    id v37 = v40;
    swift_release();
    id v38 = (void *)v45;
    objc_msgSend(v43, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v44, v45, v36, v37, 0, v35);
    _Block_release(v35);

    sub_1A54EA09C(v48, v46);
  }
}

uint64_t sub_1A55AF574(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v33 = a6;
  id v30 = a5;
  uint64_t v31 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v29 = sub_1A56D6158();
  uint64_t v27 = *(void *)(v29 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v29);
  uint64_t v25 = (char *)&v22 - v10;
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v23 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v28 = type metadata accessor for SFXPCConnection.PerformedInvocation();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  id v16 = (char *)&v22 - v15;
  sub_1A54F6308(a1, a2);
  id v17 = v30;
  id v18 = v30;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A55AC634(a1, a2, v17, (uint64_t)v16);
  uint64_t v19 = v29;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v25, v16, v29);
  sub_1A55AC9E8(v19, (uint64_t)v34, (uint64_t)v14);
  uint64_t v20 = v24;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v23, v14, AssociatedTypeWitness);
  sub_1A56D5428();
  sub_1A56D5418();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v14, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v28);
}

void SFXPCConnection.syncInvoke<A>(_:parameters:)(objc_class *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v34 = a2;
  uint64_t v31 = a5;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v10 = sub_1A56D6158();
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v28 = (char *)&v27 - v11;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = type metadata accessor for SFXPCConnection.PerformedInvocation();
  uint64_t v27 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v33 = (uint64_t)&v27 - v12;
  uint64_t v13 = (char *)objc_msgSend(objc_allocWithZone(a1), sel_init);
  id v14 = v13;
  if (*(void *)&v13[OBJC_IVAR___SFXPCInvocation_name + 8])
  {
    unint64_t v15 = *(void *)&v13[OBJC_IVAR___SFXPCInvocation_name];
    unint64_t v16 = *(void *)&v13[OBJC_IVAR___SFXPCInvocation_name + 8];
  }
  else
  {
    unint64_t v16 = 0x80000001A573A1B0;
    unint64_t v15 = 0xD000000000000019;
  }
  id v17 = *(void **)(v6 + 16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C870);
  uint64_t v32 = &v27;
  MEMORY[0x1F4188790](v18);
  *(&v27 - 8) = a3;
  *(&v27 - 7) = a4;
  *(&v27 - 6) = v15;
  *(&v27 - 5) = v16;
  *(&v27 - 4) = v34;
  *(&v27 - 3) = v19;
  uint64_t v20 = v14;
  *(&v27 - 2) = (uint64_t)v14;
  sub_1A55B2320();
  swift_bridgeObjectRetain();
  id v21 = v17;
  uint64_t v22 = v33;
  uint64_t v23 = v15;
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  sub_1A55ACAB8(v23, v16, (void (*)(uint64_t))sub_1A55B25F4, (uint64_t)(&v27 - 10), v18, v35, v33);
  if (v24)
  {

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v26 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v28, v22, v30);
    sub_1A55AC9E8(v26, (uint64_t)&v37, v31);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v22, v25);
  }
}

uint64_t sub_1A55AFCCC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v48 = a6;
  uint64_t v49 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v18 = (char *)v44 - v17;
  uint64_t v19 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)v44 - v17, a4, AssociatedTypeWitness);
  swift_beginAccess();
  uint64_t v21 = *(void *)(a5 + 24);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v23 = AssociatedConformanceWitness;
  uint64_t v24 = v51;
  uint64_t result = sub_1A55ABE30(a2, a3, (uint64_t)v18, v21, AssociatedTypeWitness, v25, v23);
  if (!v24)
  {
    uint64_t v30 = result;
    unint64_t v31 = v27;
    id v45 = v28;
    id v46 = v29;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v32 = type metadata accessor for SFXPCConnection.PerformedInvocation();
    uint64_t v51 = sub_1A56D5898();
    uint64_t v33 = swift_allocBox();
    uint64_t v47 = v34;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v34, 1, 1, v32);
    v44[0] = sub_1A56D4A68();
    uint64_t v35 = (void *)swift_allocObject();
    void v35[2] = a7;
    uint64_t v35[3] = a8;
    v35[4] = v33;
    v44[1] = v33;
    aBlock[4] = sub_1A55B3734;
    aBlock[5] = v35;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A560291C;
    aBlock[3] = &block_descriptor_35;
    uint64_t v36 = _Block_copy(aBlock);
    unint64_t v37 = v31;
    uint64_t v38 = v30;
    uint64_t v39 = v19;
    id v40 = v45;
    id v41 = v46;
    swift_retain();
    swift_release();
    uint64_t v42 = (void *)v44[0];
    objc_msgSend(v39, sel_invoke_parametersData_parametersAsyncSequenceContainer_parametersBlocksContainer_sync_completion_, v48, v44[0], v40, v41, 1, v36);
    sub_1A54EA09C(v38, v37);

    _Block_release(v36);
    uint64_t v43 = v47;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v43);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A55B00AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  v19[3] = a6;
  id v21 = a5;
  uint64_t v22 = a4;
  swift_getAssociatedTypeWitness();
  v19[2] = swift_getAssociatedConformanceWitness();
  v19[1] = swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for SFXPCConnection.PerformedInvocation();
  uint64_t v20 = sub_1A56D5898();
  uint64_t v9 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = swift_projectBox();
  uint64_t v13 = a1;
  uint64_t v14 = a1;
  unint64_t v15 = a2;
  sub_1A54F6308(v14, a2);
  id v16 = v21;
  id v17 = v21;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1A55AC634(v13, v15, v16, (uint64_t)v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v11, 0, 1, v8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(v12, v11, v20);
}

uint64_t SFXPCConnection.waitForScheduledSendsToComplete()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1A55B02F4, 0, 0);
}

uint64_t sub_1A55B02F4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A55B03C8;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_1A55B03C8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A55B04C4, 0, 0);
}

uint64_t sub_1A55B04C4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A55B04D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96723F8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1A55B3654;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55AEF94;
  aBlock[3] = &block_descriptor_23;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v7;
  swift_release();
  objc_msgSend(v11, sel_scheduleSendBarrierBlock_, v10);
  _Block_release(v10);
}

uint64_t sub_1A55B0694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t *a9)
{
  uint64_t v10 = v9;
  uint64_t v54 = a7;
  uint64_t v55 = a8;
  uint64_t v56 = a6;
  uint64_t v57 = a2;
  uint64_t v62 = a5;
  uint64_t v58 = a4;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DC870);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  id v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = sub_1A56D5BA8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v44 - v24;
  uint64_t result = Optional<A>.throwIfNotNil()(a1);
  if (v9) {
    goto LABEL_12;
  }
  uint64_t v49 = v25;
  uint64_t v50 = v23;
  uint64_t v52 = v18;
  uint64_t v53 = v20;
  uint64_t v51 = v16;
  uint64_t v27 = v58;
  uint64_t v28 = v62;
  if (a3 >> 60 == 15)
  {
    sub_1A54F38F4();
    uint64_t v10 = swift_allocError();
    *(_OWORD *)uint64_t v29 = xmmword_1A56F2E20;
    *(void *)(v29 + 16) = 0xD000000000000051;
    *(void *)(v29 + 24) = 0x80000001A573A130;
    uint64_t v30 = 164;
LABEL_11:
    *(void *)(v29 + 32) = v30;
    *(_OWORD *)(v29 + 40) = 0u;
    *(_OWORD *)(v29 + 56) = 0u;
    *(void *)(v29 + 72) = 0;
    *(void *)(v29 + 80) = 0x2000000000000000;
    *(void *)(v29 + 88) = 0;
    *(void *)(v29 + 96) = 0;
    uint64_t result = swift_willThrow();
LABEL_12:
    *a9 = v10;
    return result;
  }
  if (!v58)
  {
    sub_1A54F38F4();
    uint64_t v10 = swift_allocError();
    *(void *)uint64_t v29 = 0xD000000000000018;
    *(void *)(v29 + 8) = 0x80000001A573A230;
    *(void *)(v29 + 16) = 0xD000000000000051;
    *(void *)(v29 + 24) = 0x80000001A573A130;
    uint64_t v30 = 165;
    goto LABEL_11;
  }
  if (!v62)
  {
    sub_1A54F38F4();
    uint64_t v10 = swift_allocError();
    *(void *)uint64_t v29 = 0xD000000000000011;
    *(void *)(v29 + 8) = 0x80000001A573A250;
    *(void *)(v29 + 16) = 0xD000000000000051;
    *(void *)(v29 + 24) = 0x80000001A573A130;
    uint64_t v30 = 166;
    goto LABEL_11;
  }
  sub_1A56D4878();
  swift_allocObject();
  unint64_t v46 = a3;
  sub_1A54F6308(v57, a3);
  uint64_t v31 = v27;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v32 = sub_1A56D4868();
  uint64_t v33 = v52;
  sub_1A56D5B98();
  uint64_t v34 = v53;
  uint64_t v35 = v19;
  uint64_t v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  uint64_t v48 = v53 + 48;
  uint64_t result = v47(v33, 1, v19);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    uint64_t v53 = v34 + 32;
    uint64_t v37 = (uint64_t)v49;
    id v45 = v36;
    v36(v49, v33, v35);
    uint64_t ObjectType = swift_getObjectType();
    v60[0] = v31;
    swift_unknownObjectRetain();
    uint64_t v52 = (char *)v32;
    uint64_t v38 = (void (*)(unsigned char *, void))sub_1A56D4858();
    sub_1A553763C((uint64_t)v60, v37);
    v38(v59, 0);
    uint64_t v39 = v51;
    sub_1A56D5B98();
    uint64_t result = v47(v39, 1, v35);
    uint64_t v40 = (uint64_t)v50;
    if (result != 1)
    {
      v45(v50, v39, v35);
      uint64_t ObjectType = swift_getObjectType();
      v60[0] = v28;
      swift_unknownObjectRetain();
      id v41 = (void (*)(unsigned char *, void))sub_1A56D4858();
      sub_1A553763C((uint64_t)v60, v40);
      v41(v59, 0);
      uint64_t v42 = v57;
      unint64_t v43 = v46;
      sub_1A56D4848();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      return sub_1A553FC9C(v42, v43);
    }
  }
  __break(1u);
  return result;
}

uint64_t SFXPCConnection.deinit()
{
  swift_release();
  return v0;
}

uint64_t SFXPCConnection.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

id sub_1A55B0C14(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;

  return a1;
}

void sub_1A55B0C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v13 = sub_1A56D5428();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v30 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - v16, a1, v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  uint64_t v20 = v32;
  *((void *)v19 + 2) = v31;
  *((void *)v19 + 3) = v20;
  *((void *)v19 + 4) = a9;
  *((void *)v19 + 5) = a2;
  *((void *)v19 + 6) = a3;
  *((void *)v19 + 7) = a4;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  uint64_t v21 = &v19[(v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v22 = v34;
  *(void *)uint64_t v21 = v33;
  *((void *)v21 + 1) = v22;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1A55B3AF0;
  *(void *)(v23 + 24) = v19;
  aBlock[4] = sub_1A558454C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A55DB320;
  aBlock[3] = &block_descriptor_50;
  uint64_t v24 = _Block_copy(aBlock);
  LODWORD(v13) = dword_1EF9AF528;
  uint64_t v25 = _Block_copy(v24);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1A55A8344;
  *(void *)(v27 + 24) = v26;
  v37[4] = sub_1A55AB374;
  v37[5] = v27;
  v37[0] = MEMORY[0x1E4F143A8];
  v37[1] = 1107296256;
  v37[2] = sub_1A55DB320;
  v37[3] = &block_descriptor_61;
  uint64_t v28 = _Block_copy(v37);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  _Block_copy(v25);
  swift_retain();
  swift_release();
  _os_activity_initiate(&dword_1A5389000, "asyncXPC", (os_activity_flag_t)v13, v28);
  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v25);
  _Block_release(v24);
  if (v28)
  {
    __break(1u);
    goto LABEL_5;
  }
  swift_release();
  swift_release();
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_1A55B102C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v66 = a7;
  uint64_t v58 = a6;
  os_log_t v59 = a5;
  uint64_t v70 = a4;
  id v67 = a3;
  uint64_t v61 = a1;
  uint64_t v68 = a8;
  uint64_t v10 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v65 = a9;
  uint64_t v13 = sub_1A56D5428();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v63 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)&v52 - v15;
  uint64_t v69 = sub_1A56D4C28();
  uint64_t v16 = *(void *)(v69 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v69);
  uint64_t v56 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v55 = (char *)&v52 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v54 = (char *)&v52 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v52 - v23;
  sub_1A56D4C18();
  if (qword_1E966C878 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1A56D4D98();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1E966C890);
  swift_bridgeObjectRetain_n();
  uint64_t v62 = v26;
  uint64_t v27 = sub_1A56D4D78();
  os_log_type_t v28 = sub_1A56D57D8();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v57 = v10;
  if (v29)
  {
    uint64_t v60 = v12;
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = v31;
    uint64_t v53 = v16;
    *(_DWORD *)uint64_t v30 = 136446210;
    swift_bridgeObjectRetain();
    v73[0] = sub_1A54E3290(v61, a2, aBlock);
    uint64_t v12 = v60;
    uint64_t v16 = v53;
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5389000, v27, v28, "asyncXPC [%{public}s] START -- Client", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v31, -1, -1);
    MEMORY[0x1A626CE20](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v64, v70, v13);
  unint64_t v33 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v34 = (char *)swift_allocObject();
  uint64_t v35 = v68;
  *((void *)v34 + 2) = v66;
  *((void *)v34 + 3) = v35;
  *((void *)v34 + 4) = v65;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v34[v33], v32, v13);
  aBlock[4] = (uint64_t)sub_1A55B3CCC;
  aBlock[5] = (uint64_t)v34;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A55A5ED8;
  aBlock[3] = (uint64_t)&block_descriptor_67;
  uint64_t v36 = _Block_copy(aBlock);
  swift_release();
  id v37 = objc_msgSend(v67, sel_remoteObjectProxyWithErrorHandler_, v36);
  _Block_release(v36);
  sub_1A56D5968();
  swift_unknownObjectRelease();
  tryCast<A>(_:as:description:file:line:)((uint64_t)v73, v35, 0, 0, 0xD000000000000051, 0x80000001A573A130, 217, v35, (uint64_t)v12);
  v59(v12, v70);
  uint64_t v60 = v12;
  uint64_t v38 = v54;
  uint64_t v39 = v69;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v54, v24, v69);
  swift_bridgeObjectRetain_n();
  disableAirDropTLS();
  disableAirDropTLS();
  uint64_t v40 = sub_1A56D4D78();
  os_log_type_t v41 = sub_1A56D57D8();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    aBlock[0] = v70;
    *(_DWORD *)uint64_t v42 = 136446722;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1A54E3290(v61, a2, aBlock);
    sub_1A56D5928();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 1040;
    LODWORD(v71) = 3;
    sub_1A56D5928();
    *(_WORD *)(v42 + 18) = 2048;
    unint64_t v43 = v55;
    sub_1A56D4C18();
    sub_1A56D4AD8();
    uint64_t v45 = v44;
    unint64_t v46 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v47 = v43;
    uint64_t v48 = v69;
    v46(v47, v69);
    uint64_t v71 = v45;
    sub_1A56D5928();
    v46(v38, v48);
    _os_log_impl(&dword_1A5389000, v40, v41, "asyncXPC [%{public}s] END -- {duration: %.*f}", (uint8_t *)v42, 0x1Cu);
    uint64_t v49 = v70;
    swift_arrayDestroy();
    MEMORY[0x1A626CE20](v49, -1, -1);
    MEMORY[0x1A626CE20](v42, -1, -1);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v68);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v73);
    return ((uint64_t (*)(char *, uint64_t))v46)(v24, v48);
  }
  else
  {

    uint64_t v51 = *(void (**)(char *, uint64_t))(v16 + 8);
    v51(v38, v39);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v68);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v73);
    return ((uint64_t (*)(char *, uint64_t))v51)(v24, v39);
  }
}

uint64_t sub_1A55B1DB4(void *a1)
{
  id v1 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  sub_1A56D5428();
  return sub_1A56D5408();
}

id SFXPCInvocation.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___SFXPCInvocation_name];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SFXPCInvocation.init()()
{
  swift_getObjectType();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v2 = v0;
  uint64_t v3 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v4 = sub_1A56D50D8();
  uint64_t v6 = v5;

  uint64_t v7 = (uint64_t *)&v2[OBJC_IVAR___SFXPCInvocation_name];
  *uint64_t v7 = v4;
  v7[1] = v6;

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v9, sel_init);
}

id SFXPCInvocation.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1A55B2384(a1);

  return v4;
}

id SFXPCInvocation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A55B2130()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();

  return swift_deallocObject();
}

void sub_1A55B2238(void **a1, void *a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A55AF1F4(a1, a2, *(void *)(v2 + 32), *(void **)(v2 + 40), v2 + v8, *(void *)(v2 + v9), *(void *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), v5, v6);
}

unint64_t sub_1A55B2320()
{
  unint64_t result = qword_1E966C728[0];
  if (!qword_1E966C728[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1E966C728);
  }
  return result;
}

uint64_t type metadata accessor for SFXPCInvocation()
{
  return self;
}

id sub_1A55B2384(void *a1)
{
  unint64_t v3 = v1;
  unint64_t v4 = (void *)sub_1A56D5098();
  id v5 = objc_msgSend(a1, sel_decodeObjectForKey_, v4);

  if (v5)
  {
    sub_1A56D5968();
    swift_unknownObjectRelease();
    sub_1A54E3F10(v15, v16);
    sub_1A54E3F10(v16, v15);
    int v6 = swift_dynamicCast();
    uint64_t v7 = v12;
    uint64_t v8 = v13;
    if (!v6)
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
    unint64_t v9 = &v3[OBJC_IVAR___SFXPCInvocation_name];
    *(void *)unint64_t v9 = v7;
    *((void *)v9 + 1) = v8;
  }
  else
  {
    uint64_t v10 = &v3[OBJC_IVAR___SFXPCInvocation_name];
    *(void *)uint64_t v10 = 0;
    *((void *)v10 + 1) = 0;
  }

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for SFXPCInvocation();
  return objc_msgSendSuper2(&v14, sel_init);
}

unint64_t sub_1A55B2498()
{
  unint64_t result = qword_1E966C228;
  if (!qword_1E966C228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C228);
  }
  return result;
}

unint64_t sub_1A55B24EC()
{
  unint64_t result = qword_1E966B148;
  if (!qword_1E966B148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B148);
  }
  return result;
}

uint64_t sub_1A55B2540()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1A55B2578()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55B25B8()
{
  return sub_1A55AEE60(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t type metadata accessor for SFXPCConnection.PerformedInvocation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A55B25F4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A55AFCCC(a1, *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_1A55B261C(uint64_t a1)
{
  sub_1A55B04D8(a1, v1);
}

ValueMetadata *type metadata accessor for VoidParameters()
{
  return &type metadata for VoidParameters;
}

ValueMetadata *type metadata accessor for VoidResponse()
{
  return &type metadata for VoidResponse;
}

uint64_t type metadata accessor for SFXPCConnection()
{
  return self;
}

uint64_t method lookup function for SFXPCConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFXPCConnection);
}

uint64_t dispatch thunk of SFXPCConnection.__allocating_init(_:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for SFXPCInvocation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SFXPCInvocation);
}

uint64_t dispatch thunk of SFXPCInvocation.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static SFXPCInvocation.supportsSecureCoding.getter()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SFXPCInvocation.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SFXPCInvocation.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t sub_1A55B2730()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t result = sub_1A56D6158();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1A55B27DC(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)unint64_t v3 = *(void *)a2;
    unint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)unint64_t v3 = v14;
      v3[v5] = 1;
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(a1);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1A55B2964(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {

  }
  else {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_1A55B2A64(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *a1 = v10;
    char v12 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v4) = v12;
  return a1;
}

unsigned __int8 *sub_1A55B2BAC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 0;
    }
    a1[v7] = v20;
  }
  return a1;
}

void *sub_1A55B2DCC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1A55B2F04(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1A55B311C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1A55B3250(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1A55B3418);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

ValueMetadata *type metadata accessor for VoidResponse.CodingKeys()
{
  return &type metadata for VoidResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for VoidParameters.CodingKeys()
{
  return &type metadata for VoidParameters.CodingKeys;
}

unint64_t sub_1A55B3464()
{
  unint64_t result = qword_1E966B158;
  if (!qword_1E966B158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B158);
  }
  return result;
}

unint64_t sub_1A55B34BC()
{
  unint64_t result = qword_1E966B150;
  if (!qword_1E966B150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966B150);
  }
  return result;
}

unint64_t sub_1A55B3514()
{
  unint64_t result = qword_1E966C238;
  if (!qword_1E966C238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C238);
  }
  return result;
}

unint64_t sub_1A55B356C()
{
  unint64_t result = qword_1E966C230;
  if (!qword_1E966C230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E966C230);
  }
  return result;
}

uint64_t sub_1A55B35C0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96723F8);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1A55B3654()
{
  return sub_1A56D5418();
}

uint64_t sub_1A55B36BC()
{
  return swift_deallocObject();
}

id sub_1A55B36F4(void *a1)
{
  return sub_1A55B0C14(a1, v1);
}

uint64_t sub_1A55B36FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55B3734(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1A55B00AC(a1, a2, a3, a4, a5, *(void *)(v5 + 32));
}

uint64_t sub_1A55B3740@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A55B0694(*(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), a2, a1);
}

uint64_t sub_1A55B3778()
{
  uint64_t v1 = sub_1A56D4CB8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A55B386C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1A56D4CB8() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  unsigned int v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  unsigned int v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *unsigned int v13 = v2;
  v13[1] = sub_1A54E83BC;
  return sub_1A5585564(a1, v6, v7, v8, v9, v11, v12);
}

void sub_1A55B39A8(uint64_t a1)
{
  sub_1A55B0C68(a1, v1[5], v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4]);
}

uint64_t sub_1A55B39DC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v1 = sub_1A56D5428();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55B3AF0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v4 = *(void *)(sub_1A56D5428() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A55B102C(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), v0 + v5, *(void (**)(char *, uint64_t))(v0 + v6), *(void *)(v0 + v6 + 8), v1, v2, v3);
}

uint64_t sub_1A55B3BC4()
{
  return swift_deallocObject();
}

uint64_t sub_1A55B3BD4()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A55B3C0C()
{
  return swift_deallocObject();
}

uint64_t sub_1A55B3C1C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v1 = sub_1A56D5428();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1A55B3CCC(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  sub_1A56D5428();

  return sub_1A55B1DB4(a1);
}

uint64_t sub_1A55B3D7C()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v1 = sub_1A56D5428();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1A55B3E48(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v11 = *(void *)(sub_1A56D5428() - 8);
  uint64_t v12 = v5 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  return sub_1A55AF574(a1, a2, a3, a4, a5, v12);
}

uint64_t SFPlatformValue.description.getter()
{
  return 0;
}

uint64_t sub_1A55B3FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = type metadata accessor for SFPlatformValue();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v10 - v6, v2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 32))(a2, v7, v4);
}

uint64_t SFVariantValue.description.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_1A55B3FC4(v3, (uint64_t)v5);
  sub_1A56D5EF8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7[0];
}

uint64_t SFVariantValue<A>.userDefaultsRepresentation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55B3FC4(v5, (uint64_t)v7);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t SFVariantValue<A>.init(userDefaultsString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v8 = type metadata accessor for SFPlatformValue();
  uint64_t v9 = sub_1A56D5898();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unsigned int v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(v8 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v11);
  int v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v26 - v18;
  SFPlatformValue<A>.init(userDefaultsString:)(a1, a2, a3, v26, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v20 = type metadata accessor for SFVariantValue();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v27, 1, 1, v20);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v22(v19, v13, v8);
    v22(v17, v19, v8);
    uint64_t v23 = type metadata accessor for SFPlatformValue();
    uint64_t v24 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v27, v17, v23);
    uint64_t v25 = type metadata accessor for SFVariantValue();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
  }
}

uint64_t type metadata accessor for SFPlatformValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SFPlatformValue<A>.init(userDefaultsString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v9 = sub_1A56D5898();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unsigned int v13 = (char *)&v25 - v12;
  uint64_t v14 = *(void *)(a3 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v11);
  int v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v25 - v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a2, a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v20 = type metadata accessor for SFPlatformValue();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v22(v19, v13, a3);
    v22(v17, v19, a3);
    uint64_t v23 = v26;
    v22(v26, v17, a3);
    uint64_t v24 = type metadata accessor for SFPlatformValue();
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
}

uint64_t type metadata accessor for SFVariantValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A55B47F4(uint64_t a1, uint64_t a2)
{
  return SFVariantValue<A>.userDefaultsRepresentation.getter(a1, *(void *)(a2 - 8));
}

uint64_t sub_1A55B47FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return SFVariantValue<A>.init(userDefaultsString:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t SFPlatformValue<A>.userDefaultsRepresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))(*(void *)(a1 + 16));
}

uint64_t sub_1A55B4820(uint64_t a1, uint64_t a2)
{
  return SFPlatformValue<A>.userDefaultsRepresentation.getter(a1, *(void *)(a2 - 8));
}

uint64_t sub_1A55B4828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  return SFPlatformValue<A>.init(userDefaultsString:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t sub_1A55B4858()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A55B48E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1A55B49A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1A55B49CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A55B4A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A55B4A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A55B4ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1A55B4B0C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1A55B4C68(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1A55B4E80);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t SFAirDropReceive.ItemDestination.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A56D49A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96714D8);
  MEMORY[0x1F4188790](v8 - 8);
  unsigned int v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  unsigned int v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v21 - v15;
  sub_1A55B71C0(v2, (uint64_t)&v21 - v15);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2u:
      sub_1A553FC9C(*(void *)v16, *((void *)v16 + 1));
      goto LABEL_5;
    case 3u:
      uint64_t v20 = sub_1A56D4A28();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F276C0], v4);
      return sub_1A56D4A18();
    case 4u:
LABEL_5:
      uint64_t v19 = swift_storeEnumTagMultiPayload();
      SFAirDropReceive.ItemDestination.url.getter(v19);
      uint64_t result = sub_1A55B7224((uint64_t)v14);
      break;
    default:
      uint64_t v17 = sub_1A56D4A28();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, v16, v17);
      break;
  }
  return result;
}

uint64_t SFAirDropReceive.ItemDestination.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1A56D4A28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.ItemDestination();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55B71C0(v1, (uint64_t)v8);
  uint64_t v9 = 0x746C75616665642ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)v8;
      break;
    case 2u:
      sub_1A553FC9C(*(void *)v8, *((void *)v8 + 1));
      uint64_t v9 = 0x7461646174656D2ELL;
      break;
    case 3u:
      return v9;
    case 4u:
      uint64_t v9 = 0x6D6574496F6E2ELL;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      sub_1A55B7524((unint64_t *)&qword_1E96715A0, MEMORY[0x1E4F276F0]);
      uint64_t v9 = sub_1A56D5E78();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v9;
}

uint64_t SFAirDropReceive.ItemDestination.hash(into:)()
{
  uint64_t v1 = sub_1A56D4A28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.ItemDestination();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A55B71C0(v0, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A56D60C8();
      sub_1A56D5188();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2u:
      uint64_t v9 = *v7;
      unint64_t v10 = v7[1];
      sub_1A56D60C8();
      if (v10 >> 60 == 15)
      {
        uint64_t result = sub_1A56D60D8();
      }
      else
      {
        sub_1A56D60D8();
        sub_1A54E9E98(v9, v10);
        sub_1A56D4A88();
        sub_1A553FC9C(v9, v10);
        uint64_t result = sub_1A553FC9C(v9, v10);
      }
      break;
    case 3u:
    case 4u:
      uint64_t result = sub_1A56D60C8();
      break;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
      sub_1A56D60C8();
      sub_1A55B7524(&qword_1E96724E0, MEMORY[0x1E4F276F0]);
      sub_1A56D4FF8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      break;
  }
  return result;
}

uint64_t sub_1A55B5624()
{
  uint64_t result = 0x746C7561666564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x52556D6F74737563;
      break;
    case 2:
      uint64_t result = 0x70416D6F74737563;
      break;
    case 3:
      uint64_t result = 0x6D6574496F6ELL;
      break;
    case 4:
      uint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55B56D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55B83B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55B5700(uint64_t a1)
{
  unint64_t v2 = sub_1A55B7280();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55B573C(uint64_t a1)
{
  unint64_t v2 = sub_1A55B7280();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55B5778()
{
  return 0x4449656C646E7562;
}

uint64_t sub_1A55B5790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A55B5828(uint64_t a1)
{
  unint64_t v2 = sub_1A55B737C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55B5864(uint64_t a1)
{
  unint64_t v2 = sub_1A55B737C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55B58A0(uint64_t a1)
{
  unint64_t v2 = sub_1A55B73D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55B58DC(uint64_t a1)
{
  unint64_t v2 = sub_1A55B73D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55B5918(uint64_t a1)
{
  unint64_t v2 = sub_1A55B7424();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55B5954(uint64_t a1)
{
  unint64_t v2 = sub_1A55B7424();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55B5990(uint64_t a1)
{
  unint64_t v2 = sub_1A55B72D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55B59CC(uint64_t a1)
{
  unint64_t v2 = sub_1A55B72D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55B5A08(uint64_t a1)
{
  unint64_t v2 = sub_1A55B7328();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55B5A44(uint64_t a1)
{
  unint64_t v2 = sub_1A55B7328();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropReceive.ItemDestination.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96724E8);
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v46 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96724F0);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96724F8);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672500);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1A56D4A28();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672508);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SFAirDropReceive.ItemDestination();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672510);
  uint64_t v49 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55B7280();
  sub_1A56D61D8();
  sub_1A55B71C0(v52, (uint64_t)v15);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      LOBYTE(v50) = 2;
      sub_1A55B737C();
      uint64_t v24 = v36;
      sub_1A56D5D98();
      uint64_t v25 = v43;
      sub_1A56D5DE8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v16);
    case 2u:
      uint64_t v26 = *v15;
      unint64_t v27 = v15[1];
      LOBYTE(v50) = 4;
      sub_1A55B72D4();
      os_log_type_t v28 = v46;
      sub_1A56D5D98();
      uint64_t v50 = v26;
      unint64_t v51 = v27;
      sub_1A54E9FA0();
      uint64_t v29 = v48;
      sub_1A56D5DD8();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v16);
      return sub_1A553FC9C(v26, v27);
    case 3u:
      LOBYTE(v50) = 0;
      sub_1A55B7424();
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v16);
    case 4u:
      LOBYTE(v50) = 3;
      sub_1A55B7328();
      uint64_t v31 = v39;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v16);
    default:
      uint64_t v20 = v37;
      uint64_t v19 = v38;
      uint64_t v21 = v34;
      (*(void (**)(void))(v37 + 32))();
      LOBYTE(v50) = 1;
      sub_1A55B73D0();
      uint64_t v22 = v35;
      sub_1A56D5D98();
      sub_1A55B7524(&qword_1E9670E80, MEMORY[0x1E4F276F0]);
      uint64_t v23 = v42;
      sub_1A56D5E38();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v23);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v16);
  }
}

uint64_t SFAirDropReceive.ItemDestination.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t SFAirDropReceive.ItemDestination.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672548);
  uint64_t v73 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v78 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672550);
  uint64_t v70 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v77 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672558);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  uint64_t v72 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v76 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672560);
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  MEMORY[0x1F4188790](v8);
  Class v75 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672568);
  uint64_t v67 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v74 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672570);
  uint64_t v81 = *(void *)(v11 - 8);
  uint64_t v82 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (uint64_t *)((char *)&v62 - v19);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v62 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v62 - v24;
  uint64_t v26 = a1[3];
  uint64_t v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1A55B7280();
  uint64_t v27 = v87;
  sub_1A56D61A8();
  uint64_t v87 = v27;
  if (v27)
  {
LABEL_16:
    uint64_t v45 = (uint64_t)v85;
    return __swift_destroy_boxed_opaque_existential_0Tm(v45);
  }
  uint64_t v63 = v20;
  uint64_t v65 = v23;
  uint64_t v64 = v17;
  uint64_t v28 = v83;
  uint64_t v29 = v84;
  uint64_t v66 = v25;
  uint64_t v30 = v82;
  uint64_t v31 = sub_1A56D5D78();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v36 = sub_1A56D5A78();
    uint64_t v37 = swift_allocError();
    uint64_t v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *uint64_t v39 = v14;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v39, *MEMORY[0x1E4FBBA70], v36);
    uint64_t v87 = v37;
    swift_willThrow();
LABEL_15:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
    goto LABEL_16;
  }
  uint64_t v32 = v80;
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      LOBYTE(v86) = 1;
      sub_1A55B73D0();
      uint64_t v40 = v75;
      uint64_t v41 = v87;
      sub_1A56D5C88();
      uint64_t v87 = v41;
      if (v41) {
        goto LABEL_15;
      }
      sub_1A56D4A28();
      sub_1A55B7524(&qword_1E9671018, MEMORY[0x1E4F276F0]);
      uint64_t v42 = (uint64_t)v65;
      uint64_t v43 = v69;
      uint64_t v44 = v87;
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v45 = (uint64_t)v85;
      uint64_t v87 = v44;
      if (!v44)
      {
        swift_storeEnumTagMultiPayload();
        uint64_t v35 = (uint64_t)v66;
        sub_1A55B7478(v42, (uint64_t)v66);
        goto LABEL_23;
      }
      return __swift_destroy_boxed_opaque_existential_0Tm(v45);
    case 2:
      LOBYTE(v86) = 2;
      sub_1A55B737C();
      unint64_t v46 = v76;
      uint64_t v47 = v87;
      sub_1A56D5C88();
      uint64_t v87 = v47;
      if (v47) {
        goto LABEL_15;
      }
      uint64_t v48 = v71;
      uint64_t v49 = sub_1A56D5CF8();
      uint64_t v50 = v46;
      uint64_t v87 = 0;
      uint64_t v60 = v59;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v50, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v61 = (uint64_t)v63;
      *uint64_t v63 = v49;
      *(void *)(v61 + 8) = v60;
      goto LABEL_21;
    case 3:
      LOBYTE(v86) = 3;
      sub_1A55B7328();
      unint64_t v51 = v77;
      uint64_t v52 = v87;
      sub_1A56D5C88();
      uint64_t v87 = v52;
      if (v52) {
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v35 = (uint64_t)v66;
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    case 4:
      uint64_t v53 = v29;
      LOBYTE(v86) = 4;
      sub_1A55B72D4();
      uint64_t v54 = v78;
      uint64_t v55 = v87;
      sub_1A56D5C88();
      uint64_t v87 = v55;
      if (v55) {
        goto LABEL_15;
      }
      sub_1A54EA048();
      uint64_t v57 = v87;
      sub_1A56D5CE8();
      uint64_t v58 = v81;
      uint64_t v87 = v57;
      if (v57)
      {
        (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v53);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v30);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v54, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v30);
      uint64_t v61 = (uint64_t)v64;
      _OWORD *v64 = v86;
LABEL_21:
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = (uint64_t)v66;
      sub_1A55B7478(v61, (uint64_t)v66);
LABEL_22:
      uint64_t v45 = (uint64_t)v85;
LABEL_23:
      sub_1A55B7478(v35, v79);
      break;
    default:
      LOBYTE(v86) = 0;
      sub_1A55B7424();
      uint64_t v33 = v74;
      uint64_t v34 = v87;
      sub_1A56D5C88();
      uint64_t v87 = v34;
      if (v34) {
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v13, v30);
      uint64_t v35 = (uint64_t)v66;
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v45);
}

uint64_t sub_1A55B6C60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.ItemDestination.init(from:)(a1, a2);
}

uint64_t sub_1A55B6C78(void *a1)
{
  return SFAirDropReceive.ItemDestination.encode(to:)(a1);
}

uint64_t sub_1A55B6C90()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A55B6CD4()
{
  return sub_1A56D60E8();
}

uint64_t _s7Sharing16SFAirDropReceiveO15ItemDestinationO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (uint64_t *)((char *)&v34 - v12);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96725F8);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_1A55B71C0(a1, (uint64_t)v19);
  sub_1A55B71C0(a2, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A55B71C0((uint64_t)v19, (uint64_t)v13);
      uint64_t v22 = *v13;
      uint64_t v21 = v13[1];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      if (v22 == *(void *)v20 && v21 == *(void *)(v20 + 8))
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_28;
      }
      char v24 = sub_1A56D5F28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_28;
      }
      goto LABEL_30;
    case 2u:
      sub_1A55B71C0((uint64_t)v19, (uint64_t)v10);
      uint64_t v26 = *v10;
      unint64_t v25 = v10[1];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_1A553FC9C(v26, v25);
        goto LABEL_21;
      }
      uint64_t v27 = *(void *)v20;
      unint64_t v28 = *(void *)(v20 + 8);
      if (v25 >> 60 == 15)
      {
        if (v28 >> 60 == 15) {
          goto LABEL_28;
        }
        goto LABEL_25;
      }
      if (v28 >> 60 == 15)
      {
LABEL_25:
        sub_1A553FC9C(v26, v25);
        sub_1A553FC9C(v27, v28);
        goto LABEL_30;
      }
      sub_1A54F6308(*(void *)v20, *(void *)(v20 + 8));
      sub_1A54F6308(v26, v25);
      char v32 = sub_1A55CF004(v26, v25, v27, v28);
      sub_1A553FC9C(v27, v28);
      sub_1A553FC9C(v27, v28);
      sub_1A553FC9C(v26, v25);
      sub_1A553FC9C(v26, v25);
      if (v32)
      {
LABEL_28:
        sub_1A55B7224((uint64_t)v19);
        char v29 = 1;
        return v29 & 1;
      }
LABEL_30:
      sub_1A55B7224((uint64_t)v19);
LABEL_22:
      char v29 = 0;
      return v29 & 1;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_28;
      }
      goto LABEL_21;
    case 4u:
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_28;
      }
      goto LABEL_21;
    default:
      sub_1A55B71C0((uint64_t)v19, (uint64_t)v15);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v30 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v6, v20, v4);
        char v29 = MEMORY[0x1A6268C50](v15, v6);
        uint64_t v31 = *(void (**)(char *, uint64_t))(v30 + 8);
        v31(v6, v4);
        v31(v15, v4);
        sub_1A55B7224((uint64_t)v19);
        return v29 & 1;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v4);
LABEL_21:
      sub_1A55B85D8((uint64_t)v19);
      goto LABEL_22;
  }
}

uint64_t type metadata accessor for SFAirDropReceive.ItemDestination()
{
  uint64_t result = qword_1E966B258;
  if (!qword_1E966B258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A55B71C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A55B7224(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A55B7280()
{
  unint64_t result = qword_1E9672518;
  if (!qword_1E9672518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672518);
  }
  return result;
}

unint64_t sub_1A55B72D4()
{
  unint64_t result = qword_1E9672520;
  if (!qword_1E9672520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672520);
  }
  return result;
}

unint64_t sub_1A55B7328()
{
  unint64_t result = qword_1E9672528;
  if (!qword_1E9672528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672528);
  }
  return result;
}

unint64_t sub_1A55B737C()
{
  unint64_t result = qword_1E9672530;
  if (!qword_1E9672530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672530);
  }
  return result;
}

unint64_t sub_1A55B73D0()
{
  unint64_t result = qword_1E9672538;
  if (!qword_1E9672538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672538);
  }
  return result;
}

unint64_t sub_1A55B7424()
{
  unint64_t result = qword_1E9672540;
  if (!qword_1E9672540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672540);
  }
  return result;
}

uint64_t sub_1A55B7478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A55B74DC()
{
  return sub_1A55B7524(&qword_1E966B248, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.ItemDestination);
}

uint64_t sub_1A55B7524(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *_s15ItemDestinationOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        unint64_t v11 = a2[1];
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v12 = *a2;
          sub_1A54E9E98(v12, v11);
          *a1 = v12;
          a1[1] = v11;
        }
        goto LABEL_12;
      case 1:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 0:
        uint64_t v8 = sub_1A56D4A28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t _s15ItemDestinationOwxx(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      unint64_t v5 = a1[1];
      if (v5 >> 60 != 15)
      {
        uint64_t v6 = *a1;
        return sub_1A54EA09C(v6, v5);
      }
      break;
    case 1:
      return swift_bridgeObjectRelease();
    case 0:
      uint64_t v3 = sub_1A56D4A28();
      uint64_t v4 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
  }
  return result;
}

uint64_t *_s15ItemDestinationOwcp(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      unint64_t v9 = a2[1];
      if (v9 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        uint64_t v10 = *a2;
        sub_1A54E9E98(v10, v9);
        *a1 = v10;
        a1[1] = v9;
      }
      goto LABEL_10;
    case 1:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 0:
      uint64_t v7 = sub_1A56D4A28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t *_s15ItemDestinationOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A55B7224((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        unint64_t v8 = a2[1];
        if (v8 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          uint64_t v9 = *a2;
          sub_1A54E9E98(v9, v8);
          *a1 = v9;
          a1[1] = v8;
        }
        goto LABEL_11;
      case 1:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 0:
        uint64_t v7 = sub_1A56D4A28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s15ItemDestinationOwtk(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1A56D4A28();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s15ItemDestinationOwta(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A55B7224((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1A56D4A28();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A55B7B78()
{
  uint64_t result = sub_1A56D4A28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *_s15ItemDestinationO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55B7CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15ItemDestinationO10CodingKeysOMa()
{
  return &_s15ItemDestinationO10CodingKeysON;
}

ValueMetadata *_s15ItemDestinationO17DefaultCodingKeysOMa()
{
  return &_s15ItemDestinationO17DefaultCodingKeysON;
}

ValueMetadata *_s15ItemDestinationO19CustomURLCodingKeysOMa()
{
  return &_s15ItemDestinationO19CustomURLCodingKeysON;
}

ValueMetadata *_s15ItemDestinationO19CustomAppCodingKeysOMa()
{
  return &_s15ItemDestinationO19CustomAppCodingKeysON;
}

ValueMetadata *_s15ItemDestinationO16NoItemCodingKeysOMa()
{
  return &_s15ItemDestinationO16NoItemCodingKeysON;
}

unsigned char *_s15ItemDestinationO19CustomURLCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A55B7DF8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15ItemDestinationO18MetadataCodingKeysOMa()
{
  return &_s15ItemDestinationO18MetadataCodingKeysON;
}

unint64_t sub_1A55B7E34()
{
  unint64_t result = qword_1E9672578;
  if (!qword_1E9672578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672578);
  }
  return result;
}

unint64_t sub_1A55B7E8C()
{
  unint64_t result = qword_1E9672580;
  if (!qword_1E9672580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672580);
  }
  return result;
}

unint64_t sub_1A55B7EE4()
{
  unint64_t result = qword_1E9672588;
  if (!qword_1E9672588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672588);
  }
  return result;
}

unint64_t sub_1A55B7F3C()
{
  unint64_t result = qword_1E9672590;
  if (!qword_1E9672590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672590);
  }
  return result;
}

unint64_t sub_1A55B7F94()
{
  unint64_t result = qword_1E9672598;
  if (!qword_1E9672598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672598);
  }
  return result;
}

unint64_t sub_1A55B7FEC()
{
  unint64_t result = qword_1E96725A0;
  if (!qword_1E96725A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725A0);
  }
  return result;
}

unint64_t sub_1A55B8044()
{
  unint64_t result = qword_1E96725A8;
  if (!qword_1E96725A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725A8);
  }
  return result;
}

unint64_t sub_1A55B809C()
{
  unint64_t result = qword_1E96725B0;
  if (!qword_1E96725B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725B0);
  }
  return result;
}

unint64_t sub_1A55B80F4()
{
  unint64_t result = qword_1E96725B8;
  if (!qword_1E96725B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725B8);
  }
  return result;
}

unint64_t sub_1A55B814C()
{
  unint64_t result = qword_1E96725C0;
  if (!qword_1E96725C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725C0);
  }
  return result;
}

unint64_t sub_1A55B81A4()
{
  unint64_t result = qword_1E96725C8;
  if (!qword_1E96725C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725C8);
  }
  return result;
}

unint64_t sub_1A55B81FC()
{
  unint64_t result = qword_1E96725D0;
  if (!qword_1E96725D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725D0);
  }
  return result;
}

unint64_t sub_1A55B8254()
{
  unint64_t result = qword_1E96725D8;
  if (!qword_1E96725D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725D8);
  }
  return result;
}

unint64_t sub_1A55B82AC()
{
  unint64_t result = qword_1E96725E0;
  if (!qword_1E96725E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725E0);
  }
  return result;
}

unint64_t sub_1A55B8304()
{
  unint64_t result = qword_1E96725E8;
  if (!qword_1E96725E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725E8);
  }
  return result;
}

unint64_t sub_1A55B835C()
{
  unint64_t result = qword_1E96725F0;
  if (!qword_1E96725F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96725F0);
  }
  return result;
}

uint64_t sub_1A55B83B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x52556D6F74737563 && a2 == 0xE90000000000004CLL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x70416D6F74737563 && a2 == 0xE900000000000070 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6574496F6ELL && a2 == 0xE600000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A55B85D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96725F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55B8638()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1A55B8680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A55C0BCC(a1, (uint64_t)v9);
  uint64_t v10 = sub_1A56D5478();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A55C05D8((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1A56D53F8();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A56D5468();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

void sub_1A55B8850()
{
  unint64_t v1 = (void *)*v0;
  uint64_t v2 = v0[2];
  uint64_t v9 = *(void *)(*v0 + 80);
  uint64_t v10 = v1[11];
  uint64_t v11 = v1[12];
  uint64_t v12 = v1[13];
  uint64_t v13 = v1[14];
  uint64_t v14 = v1[15];
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  uint64_t v18 = v12;
  uint64_t v19 = v13;
  uint64_t v20 = v14;
  type metadata accessor for CombineLatestStateMachine.IteratorDeinitializedAction();
  sub_1A56D5898();
  sub_1A55C2718((void (*)(uint64_t))sub_1A55BFD38, (uint64_t)&v8, v2);
  uint64_t v3 = v15;
  if (v15)
  {
    uint64_t v4 = *(void *)(v16 + 16);
    if (v4)
    {
      sub_1A56D5438();
      sub_1A5561590();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
      do
      {
        ++v5;
        uint64_t v6 = swift_allocError();
        sub_1A56D4F98();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
        swift_allocError();
        *uint64_t v7 = v6;
        swift_continuation_throwingResumeWithError();
      }
      while (v4 != v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    sub_1A56D5528();
    sub_1A55BFD9C(v3);
    swift_release();
  }
}

uint64_t sub_1A55B8A94(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x1F4188298](sub_1A55B8ADC, 0, 0);
}

uint64_t sub_1A55B8ADC()
{
  unint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  swift_getTupleTypeMetadata3();
  uint64_t v2 = sub_1A56D5898();
  *unint64_t v1 = v0;
  v1[1] = sub_1A55B8C54;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  return MEMORY[0x1F4188148](v3, &unk_1E9672610, v4, sub_1A55BFE78, v4, 0, 0, v2);
}

uint64_t sub_1A55B8C54()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1A55B8D88, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1A55B8D88()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A55B8DA0(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v3 = sub_1A56D6158();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55B8F8C, 0, 0);
}

uint64_t sub_1A55B8F8C()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1E9672618 + dword_1E9672618);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1A55B9054;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  return v5(v2, 0, 0, (uint64_t)sub_1A55BFEFC, v3);
}

uint64_t sub_1A55B9054()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1A55B9150, 0, 0);
}

uint64_t sub_1A55B9150()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1A558A604(v3, WitnessTable);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1A55B9224(uint64_t a1, void *a2)
{
  uint64_t v46 = a1;
  uint64_t v3 = (void *)*a2;
  uint64_t v45 = *(void *)(*a2 + 104);
  uint64_t v44 = v3[10];
  swift_getAssociatedTypeWitness();
  uint64_t v4 = v3[14];
  uint64_t v5 = v3[11];
  swift_getAssociatedTypeWitness();
  uint64_t v6 = v3[15];
  uint64_t v7 = v3[12];
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v8 = sub_1A56D6158();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&TupleTypeMetadata3 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)&TupleTypeMetadata3 - v11;
  uint64_t v12 = v44;
  uint64_t v13 = v45;
  uint64_t v50 = v44;
  uint64_t v51 = v5;
  uint64_t v52 = v7;
  uint64_t v53 = v45;
  uint64_t v54 = v4;
  uint64_t v55 = v6;
  uint64_t Action = type metadata accessor for CombineLatestStateMachine.NextAction();
  uint64_t v15 = sub_1A56D5898();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&TupleTypeMetadata3 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = a2[2];
  uint64_t v48 = v46;
  uint64_t v49 = a2;
  uint64_t v50 = v12;
  uint64_t v51 = v5;
  uint64_t v22 = (char *)&TupleTypeMetadata3 - v21;
  uint64_t v52 = v7;
  uint64_t v53 = v13;
  uint64_t v23 = v19;
  uint64_t v25 = v24;
  uint64_t v54 = v4;
  uint64_t v55 = v6;
  type metadata accessor for CombineLatestStateMachine();
  sub_1A55C2718((void (*)(uint64_t))sub_1A55BFF04, (uint64_t)v47, v20);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v18, v22, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(Action - 8) + 48))(v18, 1, Action) != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v26 = *(void *)(*(void *)v18 + 16);
        if (v26)
        {
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v26; ++i)
            swift_continuation_throwingResume();
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v23);
        return swift_bridgeObjectRelease();
      case 2u:
        uint64_t v29 = *(void *)v18;
        uint64_t v30 = v43;
        sub_1A56D5558();
        uint64_t v31 = &v18[*(int *)(swift_getTupleTypeMetadata2() + 48)];
        uint64_t v33 = v41;
        uint64_t v32 = v42;
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
        v34(v41, v31, v30);
        uint64_t v35 = v40;
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v40, v33, v30);
        v34(*(char **)(*(void *)(v29 + 64) + 40), v35, v30);
        swift_continuation_resume();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v30);
        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v23);
      case 3u:
        uint64_t v36 = *(void *)v18;
        uint64_t v37 = v41;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v41, 1, 1);
        uint64_t v38 = v43;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void, char *, uint64_t))(v42 + 32))(*(void *)(*(void *)(v36 + 64) + 40), v37, v38);
        swift_continuation_resume();
        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v23);
      default:
        sub_1A56D5BC8();
        __break(1u);
        JUMPOUT(0x1A55B9818);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v23);
}

uint64_t sub_1A55B9828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v71 = a2;
  uint64_t v63 = a4;
  uint64_t v5 = *(void **)a3;
  uint64_t v6 = *(void *)(*(void *)a3 + 96);
  uint64_t v7 = sub_1A56D5898();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v55 = (char *)v50 - v9;
  uint64_t v10 = v5[11];
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v53 = (char *)v50 - v12;
  uint64_t v13 = v5[10];
  uint64_t v52 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)v50 - v14;
  uint64_t v15 = v5[13];
  uint64_t v16 = v5[14];
  v50[1] = a3;
  uint64_t v17 = v5[15];
  uint64_t v65 = v13;
  uint64_t v66 = v10;
  uint64_t v67 = v6;
  uint64_t v68 = v15;
  uint64_t v18 = v6;
  uint64_t v69 = v16;
  uint64_t v70 = v17;
  uint64_t Action = type metadata accessor for CombineLatestStateMachine.NextAction();
  uint64_t v20 = *(void *)(Action - 8);
  uint64_t v21 = MEMORY[0x1F4188790](Action);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v50 - v22;
  uint64_t v59 = v13;
  uint64_t v60 = v10;
  uint64_t v65 = v13;
  uint64_t v66 = v10;
  uint64_t v24 = v18;
  uint64_t v26 = v25;
  uint64_t v58 = v24;
  uint64_t v67 = v24;
  uint64_t v68 = v15;
  uint64_t v69 = v16;
  uint64_t v70 = v17;
  uint64_t v27 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_1A55601D8(v71, v27, v23);
  uint64_t v61 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v26, v23, Action);
  uint64_t v62 = Action;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v48 = v61;
      uint64_t v47 = v62;
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v26, v62);
      goto LABEL_6;
    case 2u:
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      sub_1A56D5898();
      swift_getTupleTypeMetadata3();
      sub_1A56D5898();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
      uint64_t v42 = sub_1A56D6158();
      sub_1A56D5558();
      uint64_t v43 = v26 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v45 = v61;
      uint64_t v44 = v62;
      uint64_t v46 = v63;
      (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v63, v23, v62);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v43, v42);
      break;
    case 3u:
      uint64_t v48 = v61;
      uint64_t v47 = v62;
LABEL_6:
      uint64_t v49 = v63;
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v63, v23, v47);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
      break;
    default:
      uint64_t v29 = v59;
      uint64_t v28 = v60;
      uint64_t v30 = v57;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v32 = v26 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v58 = v26 + *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v34 = (uint64_t)v51;
      uint64_t v33 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v51, v26, v29);
      uint64_t v35 = (uint64_t)v53;
      uint64_t v36 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v53, v32, v28);
      uint64_t v38 = (uint64_t)v55;
      uint64_t v37 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v55, v58, v30);
      sub_1A55B9EE0(v64, v34, v35, v38, v71);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v30);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v60);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v59);
      uint64_t v40 = v61;
      uint64_t v39 = v62;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v23, v62);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v63, 1, 1, v39);
      break;
  }
  return result;
}

uint64_t sub_1A55B9EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v48 = a1;
  uint64_t v49 = a5;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v43 = a2;
  uint64_t v7 = *(void **)v5;
  uint64_t v54 = *(void *)(*(void *)v5 + 96);
  uint64_t v53 = sub_1A56D5898();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t v45 = *(void *)(v51 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v40 - v9;
  uint64_t v50 = v7[11];
  uint64_t v10 = *(void *)(v50 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v42 = (char *)&v40 - v13;
  uint64_t v15 = v7[10];
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v41 = (char *)&v40 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v22;
  uint64_t v23 = sub_1A56D5478();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v43, v15);
  uint64_t v40 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v46, v50);
  uint64_t v24 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v52, v47, v53);
  unint64_t v25 = (*(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v26 = (v17 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v28 = (v11 + *(unsigned __int8 *)(v24 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  uint64_t v30 = v15;
  *((void *)v29 + 4) = v15;
  uint64_t v31 = v50;
  uint64_t v32 = v54;
  *((void *)v29 + 5) = v50;
  *((void *)v29 + 6) = v32;
  uint64_t v47 = v7[13];
  *((void *)v29 + 7) = v47;
  uint64_t v33 = v7[14];
  *((void *)v29 + 8) = v33;
  uint64_t v34 = v7[15];
  *((void *)v29 + 9) = v34;
  uint64_t v35 = &v29[v25];
  uint64_t v36 = v30;
  (*(void (**)(char *, char *))(v16 + 32))(v35, v41);
  *(void *)&v29[v26] = v6;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v29[v27], v42, v31);
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v29[v28], v52, v53);
  swift_retain();
  uint64_t v37 = (void **)sub_1A54EB08C((uint64_t)v44, (uint64_t)&unk_1E9672628, (uint64_t)v29);
  uint64_t v55 = v36;
  uint64_t v56 = v31;
  uint64_t v57 = v54;
  uint64_t v58 = v47;
  uint64_t v59 = v33;
  uint64_t v60 = v34;
  uint64_t v38 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_1A55588D8(v37, v49, v38);
  return swift_release();
}

uint64_t sub_1A55BA344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_1A56D53F8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x1F4188298](sub_1A55BA3D8, v6, v8);
}

uint64_t sub_1A55BA3D8()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_1A55BA480;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A55BA480()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 8);
  return v1();
}

void sub_1A55BA558(void *a1)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *(void *)(*a1 + 104);
  uint64_t v4 = *(void *)(*a1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = v2[14];
  uint64_t v6 = v2[11];
  swift_getAssociatedTypeWitness();
  uint64_t v7 = v2[15];
  uint64_t v8 = v2[12];
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  uint64_t AssociatedTypeWitness = swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v9 = sub_1A56D6158();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = a1[2];
  uint64_t v32 = v4;
  uint64_t v33 = v6;
  uint64_t v34 = v8;
  uint64_t v35 = v3;
  uint64_t v36 = v5;
  uint64_t v37 = v7;
  uint64_t v38 = v4;
  uint64_t v39 = v6;
  uint64_t v40 = v8;
  uint64_t v41 = v3;
  uint64_t v42 = v5;
  uint64_t v43 = v7;
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v38 = v4;
  uint64_t v39 = v6;
  uint64_t v40 = v8;
  uint64_t v41 = v3;
  uint64_t v42 = v5;
  uint64_t v43 = v7;
  type metadata accessor for CombineLatestStateMachine.CancelledAction();
  sub_1A56D5898();
  sub_1A55C2718((void (*)(uint64_t))sub_1A55BFE80, (uint64_t)v31, v12);
  uint64_t v13 = v38;
  if ((~v38 & 0xF000000000000007) != 0)
  {
    unint64_t v27 = v11;
    if (v38 < 0)
    {
      uint64_t v18 = v38 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v19 = *(void *)(v39 + 16);
      if (v19)
      {
        uint64_t v26 = v38;
        sub_1A56D5438();
        sub_1A5561590();
        uint64_t AssociatedTypeWitness = v18;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v20 = 0;
        do
        {
          ++v20;
          uint64_t v21 = swift_allocError();
          sub_1A56D4F98();
          swift_allocError();
          *uint64_t v22 = v21;
          swift_continuation_throwingResumeWithError();
        }
        while (v19 != v20);
        swift_bridgeObjectRelease();
        uint64_t v13 = v26;
      }
      else
      {
        swift_retain();
      }
      sub_1A56D5528();
      sub_1A55BFEE8(v13);
      swift_release();
    }
    else
    {
      uint64_t v14 = *(void *)(v40 + 16);
      if (v14)
      {
        uint64_t v26 = v38;
        sub_1A56D5438();
        sub_1A5561590();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v15 = 0;
        do
        {
          ++v15;
          uint64_t v16 = swift_allocError();
          sub_1A56D4F98();
          swift_allocError();
          *uint64_t v17 = v16;
          swift_continuation_throwingResumeWithError();
        }
        while (v14 != v15);
        swift_bridgeObjectRelease();
        uint64_t v13 = v26;
      }
      else
      {
        swift_retain();
      }
      sub_1A56D5528();
      uint64_t v23 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v27, 1, 1);
      uint64_t v24 = v29;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void, char *, uint64_t))(v28 + 32))(*(void *)(*(void *)(v13 + 64) + 40), v23, v24);
      swift_continuation_resume();
      swift_release();
      sub_1A55BFEE8(v13);
    }
  }
}

uint64_t sub_1A55BAA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  void v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  void v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1A55BAA84, 0, 0);
}

uint64_t sub_1A55BAA84()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1A55BAB74;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v6 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v7 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188080](v4, v5, v6, 0, 0, &unk_1E9672638, v1, v7);
}

uint64_t sub_1A55BAB74()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1A55BAC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[21] = a5;
  v6[22] = a6;
  v6[19] = a3;
  v6[20] = a4;
  v6[18] = a2;
  uint64_t v7 = *(void **)a4;
  v6[23] = *(void *)(*(void *)a4 + 104);
  uint64_t v8 = v7[10];
  v6[24] = v8;
  swift_getAssociatedTypeWitness();
  v6[25] = v7[14];
  uint64_t v9 = v7[11];
  v6[26] = v9;
  swift_getAssociatedTypeWitness();
  v6[27] = v7[15];
  uint64_t v10 = v7[12];
  v6[28] = v10;
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  v6[29] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v11 = sub_1A56D6158();
  v6[30] = v11;
  v6[31] = *(void *)(v11 - 8);
  v6[32] = swift_task_alloc();
  uint64_t v12 = sub_1A56D5898();
  v6[33] = v12;
  v6[34] = *(void *)(v12 - 8);
  v6[35] = swift_task_alloc();
  uint64_t v13 = *(void *)(v10 - 8);
  v6[36] = v13;
  v6[37] = *(void *)(v13 + 64);
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  uint64_t v14 = *(void *)(v9 - 8);
  v6[40] = v14;
  v6[41] = *(void *)(v14 + 64);
  v6[42] = swift_task_alloc();
  uint64_t v15 = *(void *)(v8 - 8);
  v6[43] = v15;
  v6[44] = *(void *)(v15 + 64);
  v6[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  v6[46] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55BB028, 0, 0);
}

uint64_t sub_1A55BB028()
{
  uint64_t v2 = v0[45];
  uint64_t v1 = v0[46];
  uint64_t v30 = v1;
  uint64_t v3 = v0[43];
  uint64_t v29 = v0[44];
  uint64_t v33 = v0[42];
  uint64_t v34 = v0[41];
  uint64_t v32 = v0[40];
  uint64_t v36 = v0[34];
  uint64_t v37 = v0[35];
  uint64_t v39 = v0[33];
  uint64_t v41 = v0[36];
  uint64_t v4 = v0[26];
  uint64_t v49 = v0[28];
  uint64_t v51 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v45 = v0[23];
  uint64_t v47 = v0[25];
  uint64_t v35 = v0[22];
  uint64_t v31 = v0[21];
  uint64_t v6 = v0[19];
  uint64_t v43 = v0[20];
  uint64_t v7 = sub_1A56D5478();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v1, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = 0;
  *((void *)v10 + 3) = 0;
  *((void *)v10 + 4) = v5;
  *((void *)v10 + 5) = v4;
  *((void *)v10 + 6) = v49;
  *((void *)v10 + 7) = v45;
  *((void *)v10 + 8) = v47;
  *((void *)v10 + 9) = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v10[v9], v2, v5);
  *(void *)&v10[(v29 + v9 + 7) & 0xFFFFFFFFFFFFFFF8] = v43;
  swift_retain();
  sub_1A55B8680(v30, (uint64_t)&unk_1E9672648, (uint64_t)v10);
  sub_1A55C05D8(v30);
  uint64_t v28 = v8;
  v8(v30, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v33, v31, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v32 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = v5;
  *((void *)v12 + 5) = v4;
  *((void *)v12 + 6) = v49;
  *((void *)v12 + 7) = v45;
  *((void *)v12 + 8) = v47;
  *((void *)v12 + 9) = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v12[v11], v33, v4);
  *(void *)&v12[(v34 + v11 + 7) & 0xFFFFFFFFFFFFFFF8] = v43;
  swift_retain();
  sub_1A55B8680(v30, (uint64_t)&unk_1E9672658, (uint64_t)v12);
  sub_1A55C05D8(v30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v35, v39);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v37, 1, v49) == 1)
  {
    (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);
  }
  else
  {
    uint64_t v13 = v0[46];
    uint64_t v15 = v0[38];
    uint64_t v14 = v0[39];
    uint64_t v38 = v15;
    uint64_t v17 = v0[36];
    uint64_t v16 = v0[37];
    uint64_t v18 = v0[28];
    uint64_t v50 = v0[27];
    uint64_t v44 = v0[26];
    uint64_t v46 = v0[25];
    uint64_t v40 = v0[24];
    uint64_t v42 = v0[23];
    uint64_t v19 = v0[20];
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
    uint64_t v48 = v14;
    v20(v14, v0[35], v18);
    v28(v13, 1, 1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v18);
    unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    unint64_t v22 = (v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = 0;
    uint64_t v23[3] = 0;
    v23[4] = v40;
    v23[5] = v44;
    v23[6] = v18;
    v23[7] = v42;
    v23[8] = v46;
    v23[9] = v50;
    v20((uint64_t)v23 + v21, v38, v18);
    *(void *)((char *)v23 + v22) = v19;
    swift_retain();
    sub_1A55B8680(v13, (uint64_t)&unk_1E9672668, (uint64_t)v23);
    sub_1A55C05D8(v13);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v48, v18);
  }
  if (sub_1A56D5578())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
  else
  {
    uint64_t v26 = (void *)swift_task_alloc();
    v0[47] = v26;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BBB0);
    *uint64_t v26 = v0;
    v26[1] = sub_1A55BB5E4;
    return MEMORY[0x1F4187E30](v0 + 49, 0, 0, v27);
  }
}

uint64_t sub_1A55BB5E4()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A55BB86C;
  }
  else {
    uint64_t v2 = sub_1A55BB6F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A55BB6F8()
{
  if (sub_1A56D5578())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BBB0);
    *uint64_t v3 = v0;
    v3[1] = sub_1A55BB5E4;
    return MEMORY[0x1F4187E30](v0 + 392, 0, 0, v4);
  }
}

uint64_t sub_1A55BB86C()
{
  uint64_t v1 = v0[48];
  uint64_t v3 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v5 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[24];
  uint64_t v35 = *(void *)(v0[20] + 16);
  uint64_t v8 = (void *)swift_task_alloc();
  _OWORD v8[2] = v7;
  v8[3] = v4;
  v8[4] = v2;
  v8[5] = v6;
  v8[6] = v5;
  v8[7] = v3;
  v8[8] = v1;
  v0[2] = v7;
  v0[3] = v4;
  v0[4] = v2;
  v0[5] = v6;
  v0[6] = v5;
  v0[7] = v3;
  type metadata accessor for CombineLatestStateMachine();
  v0[8] = v7;
  unint64_t v9 = v0 + 8;
  v0[9] = v4;
  v0[10] = v2;
  v0[11] = v6;
  v0[12] = v5;
  v0[13] = v3;
  type metadata accessor for CombineLatestStateMachine.UpstreamThrewAction();
  sub_1A56D5898();
  sub_1A55C2718((void (*)(uint64_t))sub_1A55C0838, (uint64_t)v8, v35);
  swift_task_dealloc();
  uint64_t v11 = v0[14];
  uint64_t v10 = (void *)v0[15];
  uint64_t v12 = v0[16];
  if ((~(v11 & v12) & 0xF000000000000007) != 0)
  {
    if (v12 < 0)
    {
      uint64_t v19 = (void *)v0[15];
      uint64_t v37 = v0[16];
      uint64_t v20 = *(void *)(v0[17] + 16);
      if (v20)
      {
        uint64_t v33 = (void *)v0[15];
        id v21 = v19;
        sub_1A56D5438();
        sub_1A5561590();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v22 = 0;
        do
        {
          ++v22;
          uint64_t v23 = swift_allocError();
          sub_1A56D4F98();
          swift_allocError();
          *uint64_t v24 = v23;
          swift_continuation_throwingResumeWithError();
        }
        while (v20 != v22);
        swift_bridgeObjectRelease();
        uint64_t v10 = v33;
        unint64_t v9 = v0 + 8;
      }
      else
      {
        uint64_t v10 = (void *)v0[15];
        id v25 = v19;
        swift_retain();
      }
      uint64_t v26 = (void *)v0[32];
      uint64_t v34 = v0[31];
      uint64_t v27 = v0[30];
      sub_1A56D5528();
      *uint64_t v26 = v10;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void, void *, uint64_t))(v34 + 32))(*(void *)(*(void *)(v11 + 64) + 40), v26, v27);
      swift_continuation_resume();
      uint64_t v12 = v37;
    }
    else
    {
      uint64_t v13 = (void *)v0[15];
      uint64_t v14 = v10[2];
      if (v14)
      {
        uint64_t v36 = v0[16];
        sub_1A56D5438();
        sub_1A5561590();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v15 = 0;
        uint64_t v16 = v13;
        do
        {
          ++v15;
          uint64_t v17 = swift_allocError();
          sub_1A56D4F98();
          swift_allocError();
          *uint64_t v18 = v17;
          swift_continuation_throwingResumeWithError();
        }
        while (v14 != v15);
        swift_bridgeObjectRelease();
        uint64_t v10 = v16;
        unint64_t v9 = v0 + 8;
        uint64_t v12 = v36;
      }
      else
      {
        swift_retain();
        uint64_t v10 = v13;
      }
      sub_1A56D5528();
    }
    swift_release();
  }
  uint64_t v28 = (void *)v0[48];
  sub_1A56D5588();
  sub_1A55C08B4(v11, v10, v12);

  if (sub_1A56D5578())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
  else
  {
    uint64_t v31 = (void *)swift_task_alloc();
    v0[47] = v31;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E966BBB0);
    *uint64_t v31 = v0;
    v31[1] = sub_1A55BB5E4;
    return MEMORY[0x1F4187E30](v9 + 41, 0, 0, v32);
  }
}

uint64_t sub_1A55BBD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[37] = a4;
  v5[38] = a5;
  uint64_t v6 = *(void **)a5;
  uint64_t v7 = *(void *)(*(void *)a5 + 104);
  v5[39] = v7;
  uint64_t v21 = v7;
  uint64_t v20 = v6[10];
  v5[40] = v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[41] = AssociatedTypeWitness;
  uint64_t v9 = v6[14];
  v5[42] = v9;
  uint64_t v10 = v6[11];
  v5[43] = v10;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = v6[15];
  v5[44] = v11;
  uint64_t v12 = v6[12];
  v5[45] = v12;
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  v5[46] = swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  v5[47] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v13 = sub_1A56D6158();
  v5[48] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v5[49] = v14;
  v5[50] = v14;
  v5[51] = swift_task_alloc();
  uint64_t v15 = swift_task_alloc();
  v5[10] = v20;
  v5[52] = v15;
  v5[11] = v10;
  v5[12] = v12;
  v5[13] = v21;
  v5[14] = v9;
  v5[15] = v11;
  v5[53] = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
  uint64_t v16 = sub_1A56D5898();
  v5[54] = v16;
  v5[55] = *(void *)(v16 - 8);
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  uint64_t v17 = sub_1A56D5898();
  v5[58] = v17;
  v5[59] = *(void *)(v17 - 8);
  v5[60] = swift_task_alloc();
  v5[61] = *(void *)(AssociatedTypeWitness - 8);
  v5[62] = swift_task_alloc();
  v5[63] = *(void *)(v20 - 8);
  v5[64] = swift_task_alloc();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  v5[65] = v18;
  v5[66] = *(void *)(v18 - 8);
  v5[67] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55BC1E8, 0, 0);
}

uint64_t sub_1A55BC1E8()
{
  (*(void (**)(void, void, void))(v0[63] + 16))(v0[64], v0[37], v0[40]);
  sub_1A56D55A8();
  return MEMORY[0x1F4188298](sub_1A55BC28C, 0, 0);
}

uint64_t sub_1A55BC28C()
{
  uint64_t v1 = (void *)v0[38];
  v0[2] = v0;
  v0[3] = sub_1A55BC338;
  uint64_t v2 = swift_continuation_init();
  sub_1A55BF76C(v2, v1, (void (*)(uint64_t))sub_1A55C0D28);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A55BC338()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 544) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_1A55C1178, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[69] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_1A55BC4EC;
    uint64_t v6 = v1[65];
    uint64_t v7 = v1[60];
    return MEMORY[0x1F4187C78](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_1A55BC4EC()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A55C117C;
  }
  else {
    uint64_t v2 = sub_1A55BC600;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A55BC600()
{
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v1 + 48))(v2, 1, v0[41]) == 1)
  {
    uint64_t v4 = v0[44];
    uint64_t v3 = v0[45];
    uint64_t v5 = v0[42];
    uint64_t v6 = v0[43];
    uint64_t v8 = v0[39];
    uint64_t v7 = v0[40];
    uint64_t v9 = v0[38];
    (*(void (**)(uint64_t, void))(v0[59] + 8))(v2, v0[58]);
    uint64_t v53 = *(void *)(v9 + 16);
    uint64_t v10 = (void *)swift_task_alloc();
    v10[2] = v7;
    v10[3] = v6;
    void v10[4] = v3;
    v10[5] = v8;
    v10[6] = v5;
    v10[7] = v4;
    v0[16] = v7;
    v0[17] = v6;
    v0[18] = v3;
    v0[19] = v8;
    v0[20] = v5;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine();
    v0[22] = v7;
    v0[23] = v6;
    v0[24] = v3;
    v0[25] = v8;
    v0[26] = v5;
    v0[27] = v4;
    type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction();
    sub_1A56D5898();
    sub_1A55C2718((void (*)(uint64_t))sub_1A55C0C34, (uint64_t)v10, v53);
    swift_task_dealloc();
    uint64_t v11 = v0[34];
    if ((~v11 & 0xF000000000000007) != 0)
    {
      uint64_t v12 = v0[36];
      if (v11 < 0)
      {
        uint64_t v36 = v11 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v37 = *(void *)(v12 + 16);
        if (v37)
        {
          uint64_t v55 = v11 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v58 = v0[34];
          sub_1A56D5438();
          sub_1A5561590();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v38 = 0;
          do
          {
            ++v38;
            uint64_t v39 = v12;
            uint64_t v40 = swift_allocError();
            sub_1A56D4F98();
            swift_allocError();
            *uint64_t v41 = v40;
            uint64_t v12 = v39;
            swift_continuation_throwingResumeWithError();
          }
          while (v37 != v38);
          swift_bridgeObjectRelease();
          uint64_t v36 = v55;
          uint64_t v11 = v58;
        }
        else
        {
          swift_retain();
        }
        uint64_t v42 = v0[52];
        uint64_t v44 = v0[48];
        uint64_t v43 = v0[49];
        uint64_t v45 = v0[46];
        sub_1A56D5528();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v42, 1, 1, v45);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void, uint64_t, uint64_t))(v43 + 32))(*(void *)(*(void *)(v36 + 64) + 40), v42, v44);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v13 = *(void *)(v0[35] + 16);
        if (v13)
        {
          sub_1A56D5438();
          sub_1A5561590();
          uint64_t v56 = v11;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v14 = 0;
          do
          {
            ++v14;
            uint64_t v15 = swift_allocError();
            sub_1A56D4F98();
            swift_allocError();
            *uint64_t v16 = v15;
            swift_continuation_throwingResumeWithError();
          }
          while (v13 != v14);
          swift_bridgeObjectRelease();
          uint64_t v11 = v56;
        }
        else
        {
          swift_retain();
        }
        sub_1A56D5528();
      }
      swift_release();
      sub_1A55C0AE8(v11);
    }
    (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = (uint64_t (*)(void))v0[1];
    return v46();
  }
  else
  {
    uint64_t v52 = v0[55];
    uint64_t v50 = v0[57];
    uint64_t v51 = v0[54];
    uint64_t v54 = v0[56];
    uint64_t v57 = v0[53];
    uint64_t v17 = v0[45];
    uint64_t v48 = v0[62];
    uint64_t v49 = v0[44];
    uint64_t v19 = v0[42];
    uint64_t v18 = v0[43];
    uint64_t v20 = v0[39];
    uint64_t v21 = v0[40];
    uint64_t v22 = v0[38];
    (*(void (**)(void))(v1 + 32))();
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = (void *)swift_task_alloc();
    v24[2] = v21;
    uint64_t v24[3] = v18;
    v24[4] = v17;
    v24[5] = v20;
    void v24[6] = v19;
    v24[7] = v49;
    char v24[8] = v48;
    v0[28] = v21;
    v0[29] = v18;
    v0[30] = v17;
    v0[31] = v20;
    v0[32] = v19;
    v0[33] = v49;
    type metadata accessor for CombineLatestStateMachine();
    sub_1A55C2718((void (*)(uint64_t))sub_1A55C0CCC, (uint64_t)v24, v23);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v54, v50, v51);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v54, 1) != 1)
    {
      id v25 = (char *)v0[56];
      uint64_t v27 = v0[51];
      uint64_t v26 = v0[52];
      uint64_t v28 = v0[49];
      uint64_t v29 = v0[50];
      uint64_t v30 = v0[48];
      uint64_t v31 = *(void *)v25;
      sub_1A56D5558();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v26, &v25[*(int *)(TupleTypeMetadata2 + 48)], v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v26, v30);
      (*(void (**)(void, uint64_t, uint64_t))(v28 + 32))(*(void *)(*(void *)(v31 + 64) + 40), v27, v30);
      swift_continuation_resume();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v30);
    }
    uint64_t v34 = v0[61];
    uint64_t v33 = v0[62];
    uint64_t v35 = v0[41];
    (*(void (**)(void, void))(v0[55] + 8))(v0[57], v0[54]);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    return MEMORY[0x1F4188298](sub_1A55BC28C, 0, 0);
  }
}

uint64_t sub_1A55BCD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int **a9@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v33 = a8;
  uint64_t v29 = a2;
  uint64_t v30 = a7;
  uint64_t v25 = a3;
  uint64_t v26 = a6;
  uint64_t v28 = a4;
  uint64_t v36 = a9;
  uint64_t v37 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1A56D5898();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v31 = sub_1A56D5898();
  uint64_t v14 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v27 = sub_1A56D5898();
  uint64_t v18 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v20 = (uint64_t *)((char *)&v24 - v19);
  uint64_t v21 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v24 - v19, v29, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v16, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  uint64_t v38 = v25;
  uint64_t v39 = v28;
  uint64_t v40 = v32;
  uint64_t v41 = v26;
  uint64_t v42 = v30;
  uint64_t v43 = v33;
  uint64_t v22 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_1A5559C40(v20, v16, v12, v22, v36);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v31);
  return (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v20, v27);
}

uint64_t sub_1A55BD0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[37] = a4;
  v5[38] = a5;
  uint64_t v6 = *(void **)a5;
  uint64_t v7 = *(void *)(*(void *)a5 + 104);
  v5[39] = v7;
  uint64_t v8 = v6[10];
  v5[40] = v8;
  swift_getAssociatedTypeWitness();
  uint64_t v20 = v6[14];
  v5[41] = v20;
  uint64_t v19 = v6[11];
  v5[42] = v19;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[43] = AssociatedTypeWitness;
  uint64_t v10 = v6[15];
  v5[44] = v10;
  uint64_t v11 = v6[12];
  v5[45] = v11;
  swift_getAssociatedTypeWitness();
  sub_1A56D5898();
  v5[46] = swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  v5[47] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v12 = sub_1A56D6158();
  v5[48] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[49] = v13;
  v5[50] = v13;
  v5[51] = swift_task_alloc();
  uint64_t v14 = swift_task_alloc();
  v5[10] = v8;
  v5[52] = v14;
  v5[11] = v19;
  v5[12] = v11;
  v5[13] = v7;
  v5[14] = v20;
  v5[15] = v10;
  v5[53] = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
  uint64_t v15 = sub_1A56D5898();
  v5[54] = v15;
  v5[55] = *(void *)(v15 - 8);
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  uint64_t v16 = sub_1A56D5898();
  v5[58] = v16;
  v5[59] = *(void *)(v16 - 8);
  v5[60] = swift_task_alloc();
  v5[61] = *(void *)(AssociatedTypeWitness - 8);
  v5[62] = swift_task_alloc();
  v5[63] = *(void *)(v19 - 8);
  v5[64] = swift_task_alloc();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  v5[65] = v17;
  v5[66] = *(void *)(v17 - 8);
  v5[67] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55BD528, 0, 0);
}

uint64_t sub_1A55BD528()
{
  (*(void (**)(void, void, void))(v0[63] + 16))(v0[64], v0[37], v0[42]);
  sub_1A56D55A8();
  return MEMORY[0x1F4188298](sub_1A55BD5CC, 0, 0);
}

uint64_t sub_1A55BD5CC()
{
  uint64_t v1 = (void *)v0[38];
  v0[2] = v0;
  v0[3] = sub_1A55BD678;
  uint64_t v2 = swift_continuation_init();
  sub_1A55BF76C(v2, v1, (void (*)(uint64_t))sub_1A55C0BB0);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A55BD678()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 544) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_1A55BD940, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[69] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_1A55BD82C;
    uint64_t v6 = v1[65];
    uint64_t v7 = v1[60];
    return MEMORY[0x1F4187C78](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_1A55BD82C()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A55BE15C;
  }
  else {
    uint64_t v2 = sub_1A55BDA30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A55BD940()
{
  (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A55BDA30()
{
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v1 + 48))(v2, 1, v0[43]) == 1)
  {
    uint64_t v4 = v0[44];
    uint64_t v3 = v0[45];
    uint64_t v5 = v0[41];
    uint64_t v6 = v0[42];
    uint64_t v8 = v0[39];
    uint64_t v7 = v0[40];
    uint64_t v9 = v0[38];
    (*(void (**)(uint64_t, void))(v0[59] + 8))(v2, v0[58]);
    uint64_t v53 = *(void *)(v9 + 16);
    uint64_t v10 = (void *)swift_task_alloc();
    v10[2] = v7;
    v10[3] = v6;
    void v10[4] = v3;
    v10[5] = v8;
    v10[6] = v5;
    v10[7] = v4;
    v0[16] = v7;
    v0[17] = v6;
    v0[18] = v3;
    v0[19] = v8;
    v0[20] = v5;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine();
    v0[22] = v7;
    v0[23] = v6;
    v0[24] = v3;
    v0[25] = v8;
    v0[26] = v5;
    v0[27] = v4;
    type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction();
    sub_1A56D5898();
    sub_1A55C2718((void (*)(uint64_t))sub_1A55C0B68, (uint64_t)v10, v53);
    swift_task_dealloc();
    uint64_t v11 = v0[34];
    if ((~v11 & 0xF000000000000007) != 0)
    {
      uint64_t v12 = v0[36];
      if (v11 < 0)
      {
        uint64_t v36 = v11 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v37 = *(void *)(v12 + 16);
        if (v37)
        {
          uint64_t v55 = v11 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v58 = v0[34];
          sub_1A56D5438();
          sub_1A5561590();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v38 = 0;
          do
          {
            ++v38;
            uint64_t v39 = v12;
            uint64_t v40 = swift_allocError();
            sub_1A56D4F98();
            swift_allocError();
            *uint64_t v41 = v40;
            uint64_t v12 = v39;
            swift_continuation_throwingResumeWithError();
          }
          while (v37 != v38);
          swift_bridgeObjectRelease();
          uint64_t v36 = v55;
          uint64_t v11 = v58;
        }
        else
        {
          swift_retain();
        }
        uint64_t v42 = v0[52];
        uint64_t v44 = v0[48];
        uint64_t v43 = v0[49];
        uint64_t v45 = v0[46];
        sub_1A56D5528();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v42, 1, 1, v45);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void, uint64_t, uint64_t))(v43 + 32))(*(void *)(*(void *)(v36 + 64) + 40), v42, v44);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v13 = *(void *)(v0[35] + 16);
        if (v13)
        {
          sub_1A56D5438();
          sub_1A5561590();
          uint64_t v56 = v11;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v14 = 0;
          do
          {
            ++v14;
            uint64_t v15 = swift_allocError();
            sub_1A56D4F98();
            swift_allocError();
            *uint64_t v16 = v15;
            swift_continuation_throwingResumeWithError();
          }
          while (v13 != v14);
          swift_bridgeObjectRelease();
          uint64_t v11 = v56;
        }
        else
        {
          swift_retain();
        }
        sub_1A56D5528();
      }
      swift_release();
      sub_1A55C0AE8(v11);
    }
    (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = (uint64_t (*)(void))v0[1];
    return v46();
  }
  else
  {
    uint64_t v52 = v0[55];
    uint64_t v50 = v0[57];
    uint64_t v51 = v0[54];
    uint64_t v54 = v0[56];
    uint64_t v57 = v0[53];
    uint64_t v17 = v0[45];
    uint64_t v48 = v0[62];
    uint64_t v49 = v0[44];
    uint64_t v19 = v0[41];
    uint64_t v18 = v0[42];
    uint64_t v20 = v0[39];
    uint64_t v21 = v0[40];
    uint64_t v22 = v0[38];
    (*(void (**)(void))(v1 + 32))();
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = (void *)swift_task_alloc();
    v24[2] = v21;
    uint64_t v24[3] = v18;
    v24[4] = v17;
    v24[5] = v20;
    void v24[6] = v19;
    v24[7] = v49;
    char v24[8] = v48;
    v0[28] = v21;
    v0[29] = v18;
    v0[30] = v17;
    v0[31] = v20;
    v0[32] = v19;
    v0[33] = v49;
    type metadata accessor for CombineLatestStateMachine();
    sub_1A55C2718((void (*)(uint64_t))sub_1A55C0B84, (uint64_t)v24, v23);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v54, v50, v51);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v54, 1) != 1)
    {
      uint64_t v25 = (char *)v0[56];
      uint64_t v27 = v0[51];
      uint64_t v26 = v0[52];
      uint64_t v28 = v0[49];
      uint64_t v29 = v0[50];
      uint64_t v30 = v0[48];
      uint64_t v31 = *(void *)v25;
      sub_1A56D5558();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v26, &v25[*(int *)(TupleTypeMetadata2 + 48)], v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v26, v30);
      (*(void (**)(void, uint64_t, uint64_t))(v28 + 32))(*(void *)(*(void *)(v31 + 64) + 40), v27, v30);
      swift_continuation_resume();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v30);
    }
    uint64_t v34 = v0[61];
    uint64_t v33 = v0[62];
    uint64_t v35 = v0[43];
    (*(void (**)(void, void))(v0[55] + 8))(v0[57], v0[54]);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    return MEMORY[0x1F4188298](sub_1A55BD5CC, 0, 0);
  }
}

uint64_t sub_1A55BE15C()
{
  (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A55BE24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int **a9@<X8>)
{
  uint64_t v31 = a5;
  uint64_t v32 = a8;
  uint64_t v27 = a4;
  uint64_t v28 = a7;
  uint64_t v25 = a3;
  uint64_t v26 = a6;
  uint64_t v29 = a2;
  uint64_t v35 = a9;
  uint64_t v36 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1A56D5898();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v30 = sub_1A56D5898();
  uint64_t v14 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1A56D5898();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (uint64_t *)((char *)&v25 - v20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))((char *)&v25 - v20, 1, 1, v17);
  uint64_t v22 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v16, v29, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  uint64_t v37 = v25;
  uint64_t v38 = v27;
  uint64_t v39 = v31;
  uint64_t v40 = v26;
  uint64_t v41 = v28;
  uint64_t v42 = v32;
  uint64_t v23 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_1A5559C40(v21, v16, v12, v23, v35);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v30);
  return (*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v21, v18);
}

uint64_t sub_1A55BE5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[37] = a4;
  v5[38] = a5;
  uint64_t v6 = *(void **)a5;
  uint64_t v7 = *(void *)(*(void *)a5 + 104);
  v5[39] = v7;
  uint64_t v21 = v7;
  uint64_t v8 = v6[10];
  v5[40] = v8;
  swift_getAssociatedTypeWitness();
  uint64_t v9 = v6[14];
  v5[41] = v9;
  uint64_t v10 = v6[11];
  v5[42] = v10;
  swift_getAssociatedTypeWitness();
  uint64_t v20 = v6[15];
  v5[43] = v20;
  uint64_t v11 = v6[12];
  v5[44] = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[45] = AssociatedTypeWitness;
  uint64_t v13 = sub_1A56D5898();
  v5[46] = v13;
  v5[47] = swift_getTupleTypeMetadata3();
  sub_1A56D5898();
  v5[48] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E966C8B0);
  uint64_t v14 = sub_1A56D6158();
  v5[49] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v5[50] = v15;
  v5[51] = v15;
  v5[52] = swift_task_alloc();
  uint64_t v16 = swift_task_alloc();
  v5[10] = v8;
  v5[53] = v16;
  v5[11] = v10;
  v5[12] = v11;
  v5[13] = v21;
  v5[14] = v9;
  v5[15] = v20;
  v5[54] = type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
  uint64_t v17 = sub_1A56D5898();
  v5[55] = v17;
  v5[56] = *(void *)(v17 - 8);
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = *(void *)(v13 - 8);
  v5[60] = swift_task_alloc();
  v5[61] = *(void *)(AssociatedTypeWitness - 8);
  v5[62] = swift_task_alloc();
  v5[63] = *(void *)(v11 - 8);
  v5[64] = swift_task_alloc();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  v5[65] = v18;
  v5[66] = *(void *)(v18 - 8);
  v5[67] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1A55BEA44, 0, 0);
}

uint64_t sub_1A55BEA44()
{
  (*(void (**)(void, void, void))(v0[63] + 16))(v0[64], v0[37], v0[44]);
  sub_1A56D55A8();
  return MEMORY[0x1F4188298](sub_1A55BEAE8, 0, 0);
}

uint64_t sub_1A55BEAE8()
{
  uint64_t v1 = (void *)v0[38];
  v0[2] = v0;
  v0[3] = sub_1A55BEB94;
  uint64_t v2 = swift_continuation_init();
  sub_1A55BF76C(v2, v1, (void (*)(uint64_t))sub_1A55C0B28);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1A55BEB94()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 544) = v3;
  if (v3)
  {
    swift_willThrow();
    return MEMORY[0x1F4188298](sub_1A55BEE5C, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v5 = (void *)swift_task_alloc();
    v1[69] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_1A55BED48;
    uint64_t v6 = v1[65];
    uint64_t v7 = v1[60];
    return MEMORY[0x1F4187C78](v7, v6, AssociatedConformanceWitness);
  }
}

uint64_t sub_1A55BED48()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1A55BF67C;
  }
  else {
    uint64_t v2 = sub_1A55BEF4C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1A55BEE5C()
{
  (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1A55BEF4C()
{
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v1 + 48))(v2, 1, v0[45]) == 1)
  {
    uint64_t v4 = v0[43];
    uint64_t v3 = v0[44];
    uint64_t v5 = v0[41];
    uint64_t v6 = v0[42];
    uint64_t v8 = v0[39];
    uint64_t v7 = v0[40];
    uint64_t v9 = v0[38];
    (*(void (**)(uint64_t, void))(v0[59] + 8))(v2, v0[46]);
    uint64_t v53 = *(void *)(v9 + 16);
    uint64_t v10 = (void *)swift_task_alloc();
    v10[2] = v7;
    v10[3] = v6;
    void v10[4] = v3;
    v10[5] = v8;
    v10[6] = v5;
    v10[7] = v4;
    v0[16] = v7;
    v0[17] = v6;
    v0[18] = v3;
    v0[19] = v8;
    v0[20] = v5;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine();
    v0[22] = v7;
    v0[23] = v6;
    v0[24] = v3;
    v0[25] = v8;
    v0[26] = v5;
    v0[27] = v4;
    type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction();
    sub_1A56D5898();
    sub_1A55C2718((void (*)(uint64_t))sub_1A55C0ACC, (uint64_t)v10, v53);
    swift_task_dealloc();
    uint64_t v11 = v0[34];
    if ((~v11 & 0xF000000000000007) != 0)
    {
      uint64_t v12 = v0[36];
      if (v11 < 0)
      {
        uint64_t v36 = v11 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v37 = *(void *)(v12 + 16);
        if (v37)
        {
          uint64_t v55 = v11 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v58 = v0[34];
          sub_1A56D5438();
          sub_1A5561590();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v38 = 0;
          do
          {
            ++v38;
            uint64_t v39 = v12;
            uint64_t v40 = swift_allocError();
            sub_1A56D4F98();
            swift_allocError();
            *uint64_t v41 = v40;
            uint64_t v12 = v39;
            swift_continuation_throwingResumeWithError();
          }
          while (v37 != v38);
          swift_bridgeObjectRelease();
          uint64_t v36 = v55;
          uint64_t v11 = v58;
        }
        else
        {
          swift_retain();
        }
        uint64_t v42 = v0[53];
        uint64_t v44 = v0[49];
        uint64_t v43 = v0[50];
        uint64_t v45 = v0[47];
        sub_1A56D5528();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v42, 1, 1, v45);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void, uint64_t, uint64_t))(v43 + 32))(*(void *)(*(void *)(v36 + 64) + 40), v42, v44);
        swift_continuation_resume();
      }
      else
      {
        uint64_t v13 = *(void *)(v0[35] + 16);
        if (v13)
        {
          sub_1A56D5438();
          sub_1A5561590();
          uint64_t v56 = v11;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v14 = 0;
          do
          {
            ++v14;
            uint64_t v15 = swift_allocError();
            sub_1A56D4F98();
            swift_allocError();
            *uint64_t v16 = v15;
            swift_continuation_throwingResumeWithError();
          }
          while (v13 != v14);
          swift_bridgeObjectRelease();
          uint64_t v11 = v56;
        }
        else
        {
          swift_retain();
        }
        sub_1A56D5528();
      }
      swift_release();
      sub_1A55C0AE8(v11);
    }
    (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = (uint64_t (*)(void))v0[1];
    return v46();
  }
  else
  {
    uint64_t v52 = v0[56];
    uint64_t v50 = v0[58];
    uint64_t v51 = v0[55];
    uint64_t v54 = v0[57];
    uint64_t v57 = v0[54];
    uint64_t v17 = v0[44];
    uint64_t v48 = v0[62];
    uint64_t v49 = v0[43];
    uint64_t v19 = v0[41];
    uint64_t v18 = v0[42];
    uint64_t v20 = v0[39];
    uint64_t v21 = v0[40];
    uint64_t v22 = v0[38];
    (*(void (**)(void))(v1 + 32))();
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = (void *)swift_task_alloc();
    v24[2] = v21;
    uint64_t v24[3] = v18;
    v24[4] = v17;
    v24[5] = v20;
    void v24[6] = v19;
    v24[7] = v49;
    char v24[8] = v48;
    v0[28] = v21;
    v0[29] = v18;
    v0[30] = v17;
    v0[31] = v20;
    v0[32] = v19;
    v0[33] = v49;
    type metadata accessor for CombineLatestStateMachine();
    sub_1A55C2718((void (*)(uint64_t))sub_1A55C0AFC, (uint64_t)v24, v23);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v54, v50, v51);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v54, 1) != 1)
    {
      uint64_t v25 = (char *)v0[57];
      uint64_t v27 = v0[52];
      uint64_t v26 = v0[53];
      uint64_t v28 = v0[50];
      uint64_t v29 = v0[51];
      uint64_t v30 = v0[49];
      uint64_t v31 = *(void *)v25;
      sub_1A56D5558();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v26, &v25[*(int *)(TupleTypeMetadata2 + 48)], v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v26, v30);
      (*(void (**)(void, uint64_t, uint64_t))(v28 + 32))(*(void *)(*(void *)(v31 + 64) + 40), v27, v30);
      swift_continuation_resume();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v30);
    }
    uint64_t v34 = v0[61];
    uint64_t v33 = v0[62];
    uint64_t v35 = v0[45];
    (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    return MEMORY[0x1F4188298](sub_1A55BEAE8, 0, 0);
  }
}

uint64_t sub_1A55BF67C()
{
  (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1A55BF76C(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v4 = (void *)*a2;
  uint64_t v5 = a2[2];
  uint64_t v10 = *(void *)(*a2 + 80);
  uint64_t v11 = v4[11];
  uint64_t v12 = v4[12];
  uint64_t v13 = v4[13];
  uint64_t v14 = v4[14];
  uint64_t v15 = v4[15];
  uint64_t v16 = a1;
  type metadata accessor for CombineLatestStateMachine();
  uint64_t v17 = v10;
  uint64_t v18 = v11;
  uint64_t v19 = v12;
  uint64_t v20 = v13;
  uint64_t v21 = v14;
  uint64_t v22 = v15;
  type metadata accessor for CombineLatestStateMachine.ChildTaskSuspendedAction();
  sub_1A56D5898();
  sub_1A55C2718(a3, (uint64_t)&v9, v5);
  uint64_t v6 = v17;
  uint64_t v7 = v18;
  if ((~v17 & 0xF00000000000000FLL) != 0 || (v18 & 0xF000000000000007) != 0xF000000000000007)
  {
    if (v18 < 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E966C8B0);
      swift_allocError();
      *uint64_t v8 = v7 & 0x7FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
    else
    {
      swift_continuation_throwingResume();
      sub_1A55C0B44(v6, v7);
    }
  }
}

uint64_t sub_1A55BF920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int **a9@<X8>)
{
  uint64_t v31 = a5;
  uint64_t v32 = a8;
  uint64_t v27 = a4;
  uint64_t v28 = a7;
  uint64_t v25 = a3;
  uint64_t v26 = a6;
  uint64_t v30 = a2;
  uint64_t v35 = a9;
  uint64_t v36 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1A56D5898();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v29 = sub_1A56D5898();
  uint64_t v14 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1A56D5898();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (uint64_t *)((char *)&v25 - v20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))((char *)&v25 - v20, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v16, 1, 1, v13);
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v12, v30, AssociatedTypeWitness);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, AssociatedTypeWitness);
  uint64_t v37 = v25;
  uint64_t v38 = v27;
  uint64_t v39 = v31;
  uint64_t v40 = v26;
  uint64_t v41 = v28;
  uint64_t v42 = v32;
  uint64_t v23 = (void *)type metadata accessor for CombineLatestStateMachine();
  sub_1A5559C40(v21, v16, v12, v23, v35);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v29);
  return (*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v21, v18);
}

uint64_t sub_1A55BFCC8()
{
  swift_release();
  return v0;
}

uint64_t _s7Sharing18AirDropUserDefaultCfD_0()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CombineLatestStorage()
{
  return swift_getGenericMetadata();
}

id sub_1A55BFD38@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)type metadata accessor for CombineLatestStateMachine();
  id result = sub_1A5557E8C(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A55BFD9C(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A55BFDDC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1A54E83BC;
  return sub_1A55B8DA0(a1, v1);
}

void sub_1A55BFE78()
{
  sub_1A55BA558(v0);
}

unint64_t sub_1A55BFE80@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t result = sub_1A555F020(v2);
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_1A55BFEE8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1A5569674();
  }
  return result;
}

uint64_t sub_1A55BFEFC(uint64_t a1)
{
  return sub_1A55B9224(a1, v1);
}

uint64_t sub_1A55BFF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A55B9828(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1A55BFF20()
{
  uint64_t v12 = *((void *)v0 + 5);
  uint64_t v13 = *((void *)v0 + 4);
  uint64_t v1 = *((void *)v0 + 6);
  uint64_t v2 = *(void *)(v13 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v12 - 8);
  unint64_t v5 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_1A56D5898() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v3], v13);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(&v0[v5], v12);
  uint64_t v9 = &v0[v8];
  uint64_t v10 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v1);
  }

  return swift_deallocObject();
}

uint64_t sub_1A55C015C(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(*(void *)(v1 + 32) - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(*(void *)(v1 + 40) - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(sub_1A56D5898() - 8) + 80);
  unint64_t v10 = v8 + v7 + v9;
  uint64_t v11 = v1 + v4;
  uint64_t v12 = *(void *)(v1 + v5);
  uint64_t v13 = v1 + v8;
  uint64_t v14 = v1 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[5] = v13;
  void v15[6] = v14;
  uint64_t v15[3] = v11;
  v15[4] = v12;
  v15[1] = sub_1A54E83BC;
  _OWORD v15[2] = a1;
  return MEMORY[0x1F4188298](sub_1A55BAA84, 0, 0);
}

uint64_t sub_1A55C0310(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *unint64_t v10 = v3;
  v10[1] = sub_1A54E8628;
  return sub_1A55BAC84(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1A55C03D8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55C04B8(uint64_t a1)
{
  uint64_t v4 = v1[3];
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = (uint64_t)v1 + v5;
  uint64_t v8 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v1[4] - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A54E8628;
  return sub_1A55BBD90(a1, v6, v4, v7, v8);
}

uint64_t sub_1A55C05D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55C0638()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55C0718(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1[5] - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[5] - 8) + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (uint64_t)v1 + v4;
  uint64_t v8 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v1[5] - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A54E8628;
  return sub_1A55BD0D4(a1, v5, v6, v7, v8);
}

unint64_t sub_1A55C0838@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v3 = *(void (**)(void, void))(v1 + 64);
  unint64_t v4 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t result = sub_1A555DF68(v3, v4);
  *a1 = result;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  return result;
}

uint64_t sub_1A55C08B4(uint64_t a1, id a2, uint64_t a3)
{
  if ((~(a1 & a3) & 0xF000000000000007) != 0) {
    return sub_1A55645A8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1A55C08CC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A55C09AC(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1[6] - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[6] - 8) + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (uint64_t)v1 + v4;
  uint64_t v8 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v1[6] - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1A54E8628;
  return sub_1A55BE5F4(a1, v5, v6, v7, v8);
}

unint64_t sub_1A55C0ACC@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A55C0C50(2, a1);
}

uint64_t sub_1A55C0AE8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1A5561888();
  }
  return result;
}

uint64_t sub_1A55C0AFC(uint64_t a1)
{
  return sub_1A55C0CF8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1A55BF920);
}

unint64_t sub_1A55C0B28@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A55C0D44(2, a1);
}

void sub_1A55C0B44(uint64_t a1, uint64_t a2)
{
  if ((~a1 & 0xF00000000000000FLL) != 0 || (a2 & 0xF000000000000007) != 0xF000000000000007) {
    sub_1A556165C(a1, a2);
  }
}

unint64_t sub_1A55C0B68@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A55C0C50(1, a1);
}

uint64_t sub_1A55C0B84(uint64_t a1)
{
  return sub_1A55C0CF8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1A55BE24C);
}

unint64_t sub_1A55C0BB0@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A55C0D44(1, a1);
}

uint64_t sub_1A55C0BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A55C0C34@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A55C0C50(0, a1);
}

unint64_t sub_1A55C0C50@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t result = sub_1A555CCAC(a1, v4);
  *a2 = result;
  a2[1] = v6;
  a2[2] = v7;
  return result;
}

uint64_t sub_1A55C0CCC(uint64_t a1)
{
  return sub_1A55C0CF8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1A55BCD2C);
}

uint64_t sub_1A55C0CF8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

unint64_t sub_1A55C0D28@<X0>(unint64_t *a1@<X8>)
{
  return sub_1A55C0D44(0, a1);
}

unint64_t sub_1A55C0D44@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (void *)type metadata accessor for CombineLatestStateMachine();
  unint64_t result = sub_1A555954C(a1, v5, v6);
  *a2 = result;
  a2[1] = v8;
  return result;
}

void *sub_1A55C0DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v31 = a1;
  uint64_t v4 = (void *)*v3;
  uint64_t v27 = *(void *)(*v3 + 96);
  uint64_t v5 = v27;
  uint64_t v32 = sub_1A56D5898();
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v32);
  uint64_t v29 = (char *)&v25 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  uint64_t v28 = (char *)&v25 - v11;
  uint64_t v12 = v4[10];
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v26 = v4[13];
  uint64_t v25 = v4[14];
  uint64_t v16 = v4[15];
  uint64_t v35 = v12;
  uint64_t v36 = v8;
  uint64_t v37 = v5;
  uint64_t v38 = v26;
  uint64_t v39 = v25;
  uint64_t v40 = v16;
  uint64_t v17 = type metadata accessor for CombineLatestStateMachine();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v25 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v31, v12);
  uint64_t v21 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v28, v33, v8);
  uint64_t v22 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v29, v34, v32);
  sub_1A5557C54((uint64_t)v15, v21, v22, v12, v8, v27, (uint64_t)v20);
  uint64_t v23 = sub_1A55C2850();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v3[2] = v23;
  return v3;
}

void *sub_1A55C1124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55C0DC4(a1, a2, a3);
}

uint64_t _arrayDescription<A>(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)&long long v28 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_1A56D5898();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v32 = 91;
  unint64_t v33 = 0xE100000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, a2);
  sub_1A56D5288();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v16;
  uint64_t v31 = v14;
  uint64_t v29 = AssociatedConformanceWitness;
  sub_1A56D5918();
  uint64_t v18 = v28;
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v19(v10, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v21 = v18 + 32;
    uint64_t v22 = v23;
    v23(v6, v10, AssociatedTypeWitness);
    long long v28 = xmmword_1A56F0E60;
    while (1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3DCFE0);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = v28;
      *(void *)(v24 + 56) = AssociatedTypeWitness;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v24 + 32));
      (*(void (**)(uint64_t *, char *, uint64_t))(v21 - 16))(boxed_opaque_existential_0, v6, AssociatedTypeWitness);
      sub_1A56D59C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v21 - 24))(v6, AssociatedTypeWitness);
      sub_1A56D5918();
      if (v19(v10, 1, AssociatedTypeWitness) == 1) {
        break;
      }
      v22(v6, v10, AssociatedTypeWitness);
      sub_1A56D51C8();
    }
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v31);
  sub_1A56D51C8();
  return v32;
}

uint64_t _addressString(for:)()
{
  return 30768;
}

{
  sub_1A55C16D0();
  sub_1A56D5248();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  return 30768;
}

uint64_t _addressString<A>(for:)()
{
  return 30768;
}

unint64_t sub_1A55C16D0()
{
  unint64_t result = qword_1E9672670;
  if (!qword_1E9672670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672670);
  }
  return result;
}

uint64_t _dictionaryDescription<A, B, C>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&long long v56 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v51 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = *(void (***)(char *, uint64_t))(v12 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v41 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v55 = sub_1A56D5898();
  uint64_t v49 = *(void (***)(char *, char *, uint64_t))(v55 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v55);
  uint64_t v54 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v52 = *(char **)(a4 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v24 = (char *)&v38 - v23;
  uint64_t v53 = a4;
  if (sub_1A56D56C8()) {
    return 6109787;
  }
  uint64_t v39 = v22;
  uint64_t v57 = 91;
  unint64_t v58 = 0xE100000000000000;
  (*((void (**)(char *, uint64_t, uint64_t))v52 + 2))(v20, a1, v53);
  uint64_t v52 = v24;
  sub_1A56D5288();
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v49 += 4;
  uint64_t v50 = AssociatedConformanceWitness;
  uint64_t v27 = TupleTypeMetadata2;
  long long v28 = v41;
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v42 + 4);
  uint64_t v48 = TupleTypeMetadata2 - 8;
  uint64_t v45 = (void (**)(uint64_t *, char *, uint64_t))(v42 + 2);
  uint64_t v46 = (void (**)(char *, char *, uint64_t))(v56 + 32);
  uint64_t v43 = (void (**)(char *, uint64_t))(v56 + 8);
  uint64_t v44 = (void (**)(uint64_t *, char *, uint64_t))(v56 + 16);
  ++v42;
  char v29 = 1;
  long long v56 = xmmword_1A56F0E60;
  while (1)
  {
    uint64_t v34 = v54;
    sub_1A56D5918();
    (*v49)(v18, v34, v55);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v18, 1, v27) == 1) {
      break;
    }
    uint64_t v35 = v27;
    uint64_t v36 = &v18[*(int *)(v27 + 48)];
    (*v47)(v28, v18, a2);
    uint64_t v37 = v51;
    (*v46)(v51, v36, a3);
    if ((v29 & 1) == 0) {
      sub_1A56D51C8();
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB3DCFE0);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v56;
    *(void *)(v30 + 56) = a2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v30 + 32));
    (*v45)(boxed_opaque_existential_0, v28, a2);
    sub_1A56D59C8();
    swift_bridgeObjectRelease();
    sub_1A56D51C8();
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = v56;
    *(void *)(v32 + 56) = a3;
    unint64_t v33 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v32 + 32));
    (*v44)(v33, v37, a3);
    sub_1A56D59C8();
    swift_bridgeObjectRelease();
    (*v43)(v37, a3);
    (*v42)(v28, a2);
    char v29 = 0;
    uint64_t v27 = v35;
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v52, v53);
  sub_1A56D51C8();
  return v57;
}

uint64_t SFAirDrop.EndpointMetadata.imageData.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1A54F6308(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t SFAirDrop.EndpointMetadata.init(imageData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t SFAirDrop.EndpointMetadata.description.getter()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_1A56D5A28();
  swift_bridgeObjectRelease();
  if (v1 >> 60 != 15) {
    sub_1A56D4A48();
  }
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  return 0xD00000000000002CLL;
}

uint64_t sub_1A55C1E3C()
{
  return 0x7461446567616D69;
}

uint64_t sub_1A55C1E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A55C1EFC(uint64_t a1)
{
  unint64_t v2 = sub_1A55C20C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C1F38(uint64_t a1)
{
  unint64_t v2 = sub_1A55C20C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDrop.EndpointMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672678);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C20C0();
  sub_1A56D61D8();
  v10[0] = v8;
  v10[1] = v7;
  sub_1A54E9FA0();
  sub_1A56D5DD8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A55C20C0()
{
  unint64_t result = qword_1E9672680;
  if (!qword_1E9672680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672680);
  }
  return result;
}

uint64_t SFAirDrop.EndpointMetadata.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672688);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C20C0();
  sub_1A56D61A8();
  if (!v2)
  {
    sub_1A54EA048();
    sub_1A56D5CE8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1A55C2280@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return SFAirDrop.EndpointMetadata.init(from:)(a1, a2);
}

uint64_t sub_1A55C2298(void *a1)
{
  return SFAirDrop.EndpointMetadata.encode(to:)(a1);
}

uint64_t *_s16EndpointMetadataVwxx(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_1A54EA09C(*result, v1);
  }
  return result;
}

uint64_t _s16EndpointMetadataVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_1A54E9E98(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *_s16EndpointMetadataVwca(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_1A54EA09C(v7, v8);
      return a1;
    }
    sub_1A551BBE0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_1A54E9E98(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *_s16EndpointMetadataVwta(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1A54EA09C(v6, v4);
      return a1;
    }
    sub_1A551BBE0((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t _s16EndpointMetadataVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s16EndpointMetadataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)unint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.EndpointMetadata()
{
  return &type metadata for SFAirDrop.EndpointMetadata;
}

unsigned char *_s16EndpointMetadataV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A55C2594);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s16EndpointMetadataV10CodingKeysOMa()
{
  return &_s16EndpointMetadataV10CodingKeysON;
}

unint64_t sub_1A55C25D0()
{
  unint64_t result = qword_1E9672690;
  if (!qword_1E9672690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672690);
  }
  return result;
}

unint64_t sub_1A55C2628()
{
  unint64_t result = qword_1E9672698;
  if (!qword_1E9672698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672698);
  }
  return result;
}

unint64_t sub_1A55C2680()
{
  unint64_t result = qword_1E96726A0[0];
  if (!qword_1E96726A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E96726A0);
  }
  return result;
}

uint64_t sub_1A55C26D4()
{
  return swift_initClassMetadata2();
}

void sub_1A55C2718(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1A55C27CC()
{
  MEMORY[0x1A6269D10]();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ManagedCriticalState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1A55C2850()
{
  return sub_1A56D5A88();
}

uint64_t sub_1A55C28B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2, v3);
}

BOOL static SFProximityHandoff.Content.Action.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SFProximityHandoff.Content.Action.hash(into:)()
{
  return sub_1A56D60C8();
}

uint64_t sub_1A55C298C()
{
  uint64_t result = 1852141679;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684956531;
      break;
    case 2:
      uint64_t result = 0x6572616873;
      break;
    case 3:
      uint64_t result = 0x726566736E617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55C2A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55C96A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55C2A2C(uint64_t a1)
{
  unint64_t v2 = sub_1A55C30C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C2A68(uint64_t a1)
{
  unint64_t v2 = sub_1A55C30C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55C2AA4(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3214();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C2AE0(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3214();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55C2B1C(uint64_t a1)
{
  unint64_t v2 = sub_1A55C31C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C2B58(uint64_t a1)
{
  unint64_t v2 = sub_1A55C31C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55C2B94(uint64_t a1)
{
  unint64_t v2 = sub_1A55C316C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C2BD0(uint64_t a1)
{
  unint64_t v2 = sub_1A55C316C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55C2C0C(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3118();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C2C48(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3118();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFProximityHandoff.Content.Action.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672728);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x1F4188790](v3);
  char v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672730);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672738);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672740);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672748);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C30C4();
  sub_1A56D61D8();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_1A55C31C0();
      uint64_t v17 = v23;
      sub_1A56D5D98();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_1A55C316C();
      uint64_t v17 = v26;
      sub_1A56D5D98();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_1A55C3118();
      uint64_t v17 = v29;
      sub_1A56D5D98();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_1A55C3214();
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_1A55C30C4()
{
  unint64_t result = qword_1E9672750;
  if (!qword_1E9672750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672750);
  }
  return result;
}

unint64_t sub_1A55C3118()
{
  unint64_t result = qword_1E9672758;
  if (!qword_1E9672758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672758);
  }
  return result;
}

unint64_t sub_1A55C316C()
{
  unint64_t result = qword_1E9672760;
  if (!qword_1E9672760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672760);
  }
  return result;
}

unint64_t sub_1A55C31C0()
{
  unint64_t result = qword_1E9672768;
  if (!qword_1E9672768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672768);
  }
  return result;
}

unint64_t sub_1A55C3214()
{
  unint64_t result = qword_1E9672770;
  if (!qword_1E9672770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672770);
  }
  return result;
}

uint64_t SFProximityHandoff.Content.Action.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t SFProximityHandoff.Content.Action.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672778);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672780);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672788);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672790);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672798);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1A55C30C4();
  uint64_t v19 = v52;
  sub_1A56D61A8();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_1A56D5D78();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_1A56D5A78();
    swift_allocError();
    char v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *char v29 = &type metadata for SFProximityHandoff.Content.Action;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4FBBA70], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_0Tm(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_1A55C31C0();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_1A56D5C88();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_1A55C316C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_1A56D5C88();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_1A55C3118();
      uint64_t v37 = v52;
      sub_1A56D5C88();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_0Tm(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_1A55C3214();
      uint64_t v26 = v52;
      sub_1A56D5C88();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v30);
}

uint64_t sub_1A55C38E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SFProximityHandoff.Content.Action.init(from:)(a1, a2);
}

uint64_t sub_1A55C38FC(void *a1)
{
  return SFProximityHandoff.Content.Action.encode(to:)(a1);
}

uint64_t SFProximityHandoff.Content.Item.description.getter()
{
  return 7107189;
}

uint64_t sub_1A55C3924()
{
  return 7107189;
}

uint64_t sub_1A55C3934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A55C39BC(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3E20();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C39F8(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3E20();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55C3A34(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3E74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C3A70(uint64_t a1)
{
  unint64_t v2 = sub_1A55C3E74();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFProximityHandoff.Content.Item.encode(to:)(void *a1)
{
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727A0);
  uint64_t v23 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1A56D4A28();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SFProximityHandoff.Content.Item(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727A8);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C3E20();
  uint64_t v13 = v20;
  sub_1A56D61D8();
  sub_1A55C501C(v21, (uint64_t)v9, type metadata accessor for SFProximityHandoff.Content.Item);
  uint64_t v14 = v9;
  uint64_t v15 = v10;
  uint64_t v16 = v19;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v14, v19);
  sub_1A55C3E74();
  sub_1A56D5D98();
  sub_1A55C42AC(&qword_1E9670E80, MEMORY[0x1E4F276F0]);
  sub_1A56D5E38();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v15);
}

uint64_t type metadata accessor for SFProximityHandoff.Content.Item(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E9672870);
}

unint64_t sub_1A55C3E20()
{
  unint64_t result = qword_1E96727B0;
  if (!qword_1E96727B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96727B0);
  }
  return result;
}

unint64_t sub_1A55C3E74()
{
  unint64_t result = qword_1E96727B8;
  if (!qword_1E96727B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96727B8);
  }
  return result;
}

uint64_t SFProximityHandoff.Content.Item.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for SFProximityHandoff.Content.Item(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727C0);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727C8);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C3E20();
  uint64_t v28 = v10;
  uint64_t v11 = v27;
  sub_1A56D61A8();
  if (!v11)
  {
    uint64_t v27 = a1;
    uint64_t v12 = v25;
    uint64_t v13 = v26;
    uint64_t v14 = sub_1A56D5D78();
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v22 = v14;
    if (v15 == 1)
    {
      sub_1A55C3E74();
      sub_1A56D5C88();
      uint64_t v16 = v24;
      sub_1A56D4A28();
      sub_1A55C42AC(&qword_1E9671018, MEMORY[0x1E4F276F0]);
      sub_1A56D5D48();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v6);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v13);
      a1 = v27;
      sub_1A55C5550((uint64_t)v5, v23, type metadata accessor for SFProximityHandoff.Content.Item);
    }
    else
    {
      uint64_t v17 = sub_1A56D5A78();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
      *uint64_t v19 = v3;
      sub_1A56D5C98();
      sub_1A56D5A68();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA70], v17);
      swift_willThrow();
      uint64_t v20 = v24;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v13);
      a1 = v27;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1A55C42AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A55C42F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFProximityHandoff.Content.Item.init(from:)(a1, a2);
}

uint64_t sub_1A55C430C(void *a1)
{
  return SFProximityHandoff.Content.Item.encode(to:)(a1);
}

uint64_t SFProximityHandoff.Content.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFProximityHandoff.Content(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for SFProximityHandoff.Content(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E9672860);
}

uint64_t SFProximityHandoff.Content.items.getter()
{
  type metadata accessor for SFProximityHandoff.Content(0);

  return swift_bridgeObjectRetain();
}

uint64_t SFProximityHandoff.Content.supportedActions.getter()
{
  type metadata accessor for SFProximityHandoff.Content(0);

  return swift_bridgeObjectRetain();
}

uint64_t SFProximityHandoff.Content.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFProximityHandoff.Content(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

int *SFProximityHandoff.Content.init(interactionID:bundleIdentifier:items:supportedActions:title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a8, a1, v16);
  uint64_t result = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v18 = (void *)(a8 + result[5]);
  *uint64_t v18 = a2;
  v18[1] = a3;
  *(void *)(a8 + result[6]) = a4;
  *(void *)(a8 + result[7]) = a5;
  uint64_t v19 = (void *)(a8 + result[8]);
  *uint64_t v19 = a6;
  v19[1] = a7;
  return result;
}

unint64_t sub_1A55C44F0(char a1)
{
  unint64_t result = 0x7463617265746E69;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x736D657469;
      break;
    case 4:
      unint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A55C459C()
{
  return sub_1A55C44F0(*v0);
}

uint64_t sub_1A55C45A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55C9834(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55C45CC(uint64_t a1)
{
  unint64_t v2 = sub_1A55C4938();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C4608(uint64_t a1)
{
  unint64_t v2 = sub_1A55C4938();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFProximityHandoff.Content.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C4938();
  sub_1A56D61D8();
  LOBYTE(v12) = 0;
  sub_1A56D4CB8();
  sub_1A55C42AC(&qword_1E966C7D8, MEMORY[0x1E4F27990]);
  sub_1A56D5E38();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for SFProximityHandoff.Content(0);
    LOBYTE(v12) = 1;
    sub_1A56D5DE8();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727E0);
    sub_1A55C4F18(&qword_1E96727E8, &qword_1E96727F0);
    sub_1A56D5E38();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727F8);
    sub_1A55C4FAC(&qword_1E9672800, (void (*)(void))sub_1A55A64CC);
    sub_1A56D5E38();
    LOBYTE(v12) = 4;
    sub_1A56D5DA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A55C4938()
{
  unint64_t result = qword_1E96727D8;
  if (!qword_1E96727D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96727D8);
  }
  return result;
}

uint64_t SFProximityHandoff.Content.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v26 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672808);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C4938();
  uint64_t v28 = v7;
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v22 = a1;
  uint64_t v11 = v25;
  LOBYTE(v30) = 0;
  sub_1A55C42AC(&qword_1E966C888, MEMORY[0x1E4F27990]);
  uint64_t v12 = v26;
  uint64_t v13 = v27;
  sub_1A56D5D48();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v10, v12, v4);
  LOBYTE(v30) = 1;
  uint64_t v14 = sub_1A56D5CF8();
  uint64_t v15 = (uint64_t *)&v10[v8[5]];
  *uint64_t v15 = v14;
  v15[1] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727E0);
  char v29 = 2;
  sub_1A55C4F18(&qword_1E9672810, &qword_1E9672818);
  sub_1A56D5D48();
  *(void *)&v10[v8[6]] = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E96727F8);
  char v29 = 3;
  sub_1A55C4FAC(&qword_1E9672820, (void (*)(void))sub_1A55A6520);
  sub_1A56D5D48();
  uint64_t v26 = 0;
  *(void *)&v10[v8[7]] = v30;
  LOBYTE(v30) = 4;
  uint64_t v17 = sub_1A56D5CA8();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v13);
  uint64_t v20 = (uint64_t *)&v10[v8[8]];
  *uint64_t v20 = v17;
  v20[1] = v19;
  sub_1A55C501C((uint64_t)v10, v23, type metadata accessor for SFProximityHandoff.Content);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  return sub_1A55C5904((uint64_t)v10, type metadata accessor for SFProximityHandoff.Content);
}

uint64_t sub_1A55C4F18(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96727E0);
    sub_1A55C42AC(a2, (void (*)(uint64_t))type metadata accessor for SFProximityHandoff.Content.Item);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A55C4FAC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E96727F8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A55C501C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A55C5084@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFProximityHandoff.Content.init(from:)(a1, a2);
}

uint64_t sub_1A55C509C(void *a1)
{
  return SFProximityHandoff.Content.encode(to:)(a1);
}

uint64_t _s7Sharing18SFProximityHandoffO7ContentV13interactionID10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1A56D4CB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SFProximityHandoff.Interaction.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SFProximityHandoff.Interaction(0);
  return sub_1A55C501C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
}

uint64_t type metadata accessor for SFProximityHandoff.Interaction(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E9672880);
}

uint64_t SFProximityHandoff.Interaction.state.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFProximityHandoff.Interaction(0) + 20);

  return sub_1A55C51D0(a1, v3);
}

uint64_t sub_1A55C51D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*SFProximityHandoff.Interaction.state.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t SFProximityHandoff.Interaction.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFProximityHandoff.Interaction(0) + 24);

  return sub_1A55C52C0(v3, a1);
}

uint64_t sub_1A55C52C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SFProximityHandoff.Interaction.content.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFProximityHandoff.Interaction(0) + 24);

  return sub_1A55C536C(a1, v3);
}

uint64_t sub_1A55C536C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*SFProximityHandoff.Interaction.content.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t SFProximityHandoff.Interaction.showDeviceDetails.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFProximityHandoff.Interaction(0) + 28));
}

uint64_t SFProximityHandoff.Interaction.init(id:state:content:showDeviceDetails:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for SFProximityHandoff.Interaction(0);
  uint64_t v11 = a5 + v10[6];
  uint64_t v12 = type metadata accessor for SFProximityHandoff.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a5, a1, v13);
  sub_1A55C5550(a2, a5 + v10[5], type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  uint64_t result = sub_1A55C536C(a3, v11);
  *(unsigned char *)(a5 + v10[7]) = a4;
  return result;
}

uint64_t sub_1A55C5550(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t SFProximityHandoff.Interaction.init(id:state:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v6 = type metadata accessor for SFProximityHandoff.Interaction(0);
  uint64_t v7 = (int *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1A56D4CB8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  sub_1A55C501C(a2, (uint64_t)v15, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  uint64_t v20 = v26;
  sub_1A55C52C0(v26, (uint64_t)v12);
  uint64_t v21 = (uint64_t)&v9[v7[8]];
  uint64_t v22 = type metadata accessor for SFProximityHandoff.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v9, v19, v16);
  sub_1A55C5550((uint64_t)v15, (uint64_t)&v9[v7[7]], type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  sub_1A55C536C((uint64_t)v12, v21);
  v9[v7[9]] = 0;
  sub_1A55C5550((uint64_t)v9, v27, type metadata accessor for SFProximityHandoff.Interaction);
  sub_1A55C58A4(v20);
  sub_1A55C5904(a2, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v25, v16);
}

uint64_t sub_1A55C58A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A55C5904(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A55C5964()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6574617473;
      break;
    case 2:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55C59E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55C9A58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55C5A10(uint64_t a1)
{
  unint64_t v2 = sub_1A55C5D30();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55C5A4C(uint64_t a1)
{
  unint64_t v2 = sub_1A55C5D30();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFProximityHandoff.Interaction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672830);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C5D30();
  sub_1A56D61D8();
  v8[15] = 0;
  sub_1A56D4CB8();
  sub_1A55C42AC(&qword_1E966C7D8, MEMORY[0x1E4F27990]);
  sub_1A56D5E38();
  if (!v1)
  {
    type metadata accessor for SFProximityHandoff.Interaction(0);
    v8[14] = 1;
    type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    sub_1A55C42AC(&qword_1E9672840, (void (*)(uint64_t))type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    sub_1A56D5E38();
    v8[13] = 2;
    type metadata accessor for SFProximityHandoff.Content(0);
    sub_1A55C42AC(&qword_1E9672168, (void (*)(uint64_t))type metadata accessor for SFProximityHandoff.Content);
    sub_1A56D5DD8();
    v8[12] = 3;
    sub_1A56D5DF8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A55C5D30()
{
  unint64_t result = qword_1E9672838;
  if (!qword_1E9672838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672838);
  }
  return result;
}

uint64_t SFProximityHandoff.Interaction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v28 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  MEMORY[0x1F4188790](v31);
  uint64_t v30 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v33 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672848);
  uint64_t v29 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SFProximityHandoff.Interaction(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 24)];
  uint64_t v15 = type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v36 = v14;
  v16(v14, 1, 1, v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55C5D30();
  uint64_t v35 = v9;
  uint64_t v17 = (uint64_t)v37;
  sub_1A56D61A8();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return sub_1A55C58A4(v36);
  }
  else
  {
    void v26[2] = v15;
    uint64_t v18 = (uint64_t)v30;
    uint64_t v37 = a1;
    uint64_t v19 = v32;
    char v41 = 0;
    sub_1A55C42AC(&qword_1E966C888, MEMORY[0x1E4F27990]);
    sub_1A56D5D48();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v21 = (uint64_t)v13;
    v20(v13, v33, v6);
    char v40 = 1;
    sub_1A55C42AC(&qword_1E9672850, (void (*)(uint64_t))type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    sub_1A56D5D48();
    v26[1] = v6;
    uint64_t v22 = v10;
    sub_1A55C5550(v18, v21 + *(int *)(v10 + 20), type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    char v39 = 2;
    sub_1A55C42AC(&qword_1E9672180, (void (*)(uint64_t))type metadata accessor for SFProximityHandoff.Content);
    uint64_t v23 = (uint64_t)v28;
    sub_1A56D5CE8();
    sub_1A55C536C(v23, v36);
    char v38 = 3;
    char v24 = sub_1A56D5D08();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v35, v34);
    *(unsigned char *)(v21 + *(int *)(v22 + 28)) = v24 & 1;
    sub_1A55C501C(v21, v27, type metadata accessor for SFProximityHandoff.Interaction);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
    return sub_1A55C5904(v21, type metadata accessor for SFProximityHandoff.Interaction);
  }
}

unint64_t sub_1A55C6368()
{
  unint64_t result = qword_1E9672858;
  if (!qword_1E9672858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672858);
  }
  return result;
}

uint64_t sub_1A55C63BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFProximityHandoff.Interaction.init(from:)(a1, a2);
}

uint64_t sub_1A55C63D4(void *a1)
{
  return SFProximityHandoff.Interaction.encode(to:)(a1);
}

uint64_t sub_1A55C63EC()
{
  return sub_1A55C42AC(&qword_1E966C7E0, MEMORY[0x1E4F27990]);
}

ValueMetadata *type metadata accessor for SFProximityHandoff()
{
  return &type metadata for SFProximityHandoff;
}

uint64_t *initializeBufferWithCopyOfBuffer for SFProximityHandoff.Content(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A56D4CB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SFProximityHandoff.Content(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SFProximityHandoff.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SFProximityHandoff.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SFProximityHandoff.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for SFProximityHandoff.Content(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFProximityHandoff.Content(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A55C693C);
}

uint64_t sub_1A55C693C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SFProximityHandoff.Content(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A55C6A14);
}

uint64_t sub_1A55C6A14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1A56D4CB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A55C6AD4()
{
  uint64_t result = sub_1A56D4CB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Action()
{
  return &type metadata for SFProximityHandoff.Content.Action;
}

uint64_t *initializeBufferWithCopyOfBuffer for SFProximityHandoff.Content.Item(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1A56D4A28();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t destroy for SFProximityHandoff.Content.Item(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4A28();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for SFProximityHandoff.Content.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SFProximityHandoff.Content.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SFProximityHandoff.Content.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SFProximityHandoff.Content.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SFProximityHandoff.Content.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SFProximityHandoff.Content.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4A28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t sub_1A55C6F24(uint64_t a1)
{
  uint64_t result = sub_1A56D4A28();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SFProximityHandoff.Interaction(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A56D4CB8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v59 = v9;
      *uint64_t v11 = *v12;
      uint64_t v14 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      uint64_t v15 = v7;
      uint64_t v16 = (int *)v14;
      uint64_t v17 = *(int *)(v14 + 20);
      unint64_t __dst = &v11[v17];
      uint64_t v58 = v15;
      uint64_t v18 = &v12[v17];
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v8 + 48))(&v12[v17], 1))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
        memcpy(__dst, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        v59(__dst, v18, v58);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v58);
      }
      uint64_t v21 = v16[6];
      uint64_t v22 = &v11[v21];
      uint64_t v23 = &v12[v21];
      uint64_t v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
      uint64_t v25 = v16[7];
      uint64_t v26 = &v11[v25];
      uint64_t v27 = &v12[v25];
      uint64_t v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
      uint64_t v29 = v16[8];
      uint64_t v30 = &v11[v29];
      uint64_t v31 = &v12[v29];
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      uint64_t v33 = v16[9];
      uint64_t v34 = &v11[v33];
      uint64_t v35 = &v12[v33];
      uint64_t v36 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v36;
      v11[v16[10]] = v12[v16[10]];
      uint64_t v37 = v16[11];
      char v38 = &v11[v37];
      char v39 = &v12[v37];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v40 = v38;
      uint64_t v7 = v58;
      uint64_t v9 = v59;
      v59(v40, v39, v58);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v41 = a3[6];
    uint64_t v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
    uint64_t v45 = *((void *)v44 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v45 + 48))(v43, 1, v44))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
      memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      v9(v42, v43, v7);
      uint64_t v47 = v44[5];
      uint64_t v48 = &v42[v47];
      uint64_t v49 = &v43[v47];
      uint64_t v50 = *((void *)v49 + 1);
      *(void *)uint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = v50;
      *(void *)&v42[v44[6]] = *(void *)&v43[v44[6]];
      *(void *)&v42[v44[7]] = *(void *)&v43[v44[7]];
      uint64_t v51 = v44[8];
      uint64_t v52 = &v42[v51];
      char v53 = &v43[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = v54;
      char v55 = *(void (**)(char *, void, uint64_t, int *))(v45 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v42, 0, 1, v44);
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for SFProximityHandoff.Interaction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4CB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4)) {
      v6(v9, v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 44), v4);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t v11 = type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    v6(v10, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SFProximityHandoff.Interaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (unsigned char *)(a1 + v9);
  uint64_t v11 = (unsigned char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v54 = a2;
    char v55 = a3;
    uint64_t v13 = v8;
    *uint64_t v10 = *v11;
    uint64_t v14 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    uint64_t v15 = v14[5];
    uint64_t v16 = &v10[v15];
    uint64_t v17 = &v11[v15];
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(&v11[v15], 1, v6))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13((uint64_t)v16, (uint64_t)v17, v6);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
    }
    uint64_t v19 = v14[6];
    uint64_t v20 = &v10[v19];
    uint64_t v21 = &v11[v19];
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = v14[7];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = v14[8];
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = v14[9];
    uint64_t v32 = &v10[v31];
    uint64_t v33 = &v11[v31];
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    v10[v14[10]] = v11[v14[10]];
    uint64_t v35 = v14[11];
    uint64_t v36 = &v10[v35];
    uint64_t v37 = &v11[v35];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13((uint64_t)v36, (uint64_t)v37, v6);
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = v13;
    a2 = v54;
    a3 = v55;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v38 = a3[6];
  char v39 = (char *)(a1 + v38);
  char v40 = (char *)(a2 + v38);
  uint64_t v41 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v42 = *((void *)v41 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v39, (uint64_t)v40, v6);
    uint64_t v44 = v41[5];
    uint64_t v45 = &v39[v44];
    uint64_t v46 = &v40[v44];
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    *(void *)&v39[v41[6]] = *(void *)&v40[v41[6]];
    *(void *)&v39[v41[7]] = *(void *)&v40[v41[7]];
    uint64_t v48 = v41[8];
    uint64_t v49 = &v39[v48];
    uint64_t v50 = &v40[v48];
    uint64_t v51 = *((void *)v50 + 1);
    *(void *)uint64_t v49 = *(void *)v50;
    *((void *)v49 + 1) = v51;
    uint64_t v52 = *(void (**)(char *, void, uint64_t, int *))(v42 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52(v39, 0, 1, v41);
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for SFProximityHandoff.Interaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v57 = *(void *)(v6 - 8);
  char v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 24);
  v56(a1, a2, v6);
  uint64_t v58 = a3;
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (unsigned char *)(a1 + v7);
    uint64_t v9 = (unsigned char *)(a2 + v7);
    sub_1A55C5904(a1 + v7, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    uint64_t v10 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v55 = a2;
      *uint64_t v8 = *v9;
      uint64_t v11 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v57 + 48))(&v9[v12], 1, v6))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 16))(v13, v14, v6);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v57 + 56))(v13, 0, 1, v6);
      }
      uint64_t v16 = v11[6];
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      uint64_t v19 = v11[7];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      *uint64_t v20 = *v21;
      v20[1] = v21[1];
      uint64_t v22 = v11[8];
      uint64_t v23 = &v8[v22];
      uint64_t v24 = &v9[v22];
      *uint64_t v23 = *v24;
      v23[1] = v24[1];
      uint64_t v25 = v11[9];
      uint64_t v26 = &v8[v25];
      uint64_t v27 = &v9[v25];
      *uint64_t v26 = *v27;
      v26[1] = v27[1];
      v8[v11[10]] = v9[v11[10]];
      uint64_t v28 = v11[11];
      uint64_t v29 = &v8[v28];
      uint64_t v30 = &v9[v28];
      uint64_t v54 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v29, v30, v6);
      swift_storeEnumTagMultiPayload();
      a2 = v55;
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  uint64_t v34 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v35 = *((void *)v34 - 1);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, int *))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      v56((uint64_t)v32, (uint64_t)v33, v6);
      uint64_t v48 = v34[5];
      uint64_t v49 = &v32[v48];
      uint64_t v50 = &v33[v48];
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = *((void *)v50 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v32[v34[6]] = *(void *)&v33[v34[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v32[v34[7]] = *(void *)&v33[v34[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v51 = v34[8];
      uint64_t v52 = &v32[v51];
      char v53 = &v33[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = *((void *)v53 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1A55C5904((uint64_t)v32, type metadata accessor for SFProximityHandoff.Content);
    goto LABEL_13;
  }
  if (v38)
  {
LABEL_13:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
    memcpy(v32, v33, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v32, v33, v6);
  uint64_t v39 = v34[5];
  char v40 = &v32[v39];
  uint64_t v41 = &v33[v39];
  *(void *)char v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  *(void *)&v32[v34[6]] = *(void *)&v33[v34[6]];
  *(void *)&v32[v34[7]] = *(void *)&v33[v34[7]];
  uint64_t v42 = v34[8];
  uint64_t v43 = &v32[v42];
  uint64_t v44 = &v33[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  *((void *)v43 + 1) = *((void *)v44 + 1);
  uint64_t v45 = *(void (**)(char *, void, uint64_t, int *))(v35 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45(v32, 0, 1, v34);
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(v58 + 28)) = *(unsigned char *)(a2 + *(int *)(v58 + 28));
  return a1;
}

uint64_t initializeWithTake for SFProximityHandoff.Interaction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (unsigned char *)(a1 + v9);
  uint64_t v11 = (unsigned char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = v8;
    uint64_t v27 = a3;
    *uint64_t v10 = *v11;
    uint64_t v13 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(&v11[v14], 1, v6))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      uint64_t v8 = v26;
    }
    else
    {
      uint64_t v18 = v16;
      uint64_t v8 = v26;
      v26((uint64_t)v15, (uint64_t)v18, v6);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
    }
    *(_OWORD *)&v10[v13[6]] = *(_OWORD *)&v11[v13[6]];
    *(_OWORD *)&v10[v13[7]] = *(_OWORD *)&v11[v13[7]];
    *(_OWORD *)&v10[v13[8]] = *(_OWORD *)&v11[v13[8]];
    *(_OWORD *)&v10[v13[9]] = *(_OWORD *)&v11[v13[9]];
    v10[v13[10]] = v11[v13[10]];
    v8((uint64_t)&v10[v13[11]], (uint64_t)&v11[v13[11]], v6);
    swift_storeEnumTagMultiPayload();
    a3 = v27;
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v23 = *((void *)v22 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v20, (uint64_t)v21, v6);
    *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
    *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
    *(void *)&v20[v22[7]] = *(void *)&v21[v22[7]];
    *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SFProximityHandoff.Interaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v39 = *(void *)(v6 - 8);
  int v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40);
  v38(a1, a2, v6);
  uint64_t v40 = a3;
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (unsigned char *)(a1 + v7);
    uint64_t v9 = (unsigned char *)(a2 + v7);
    sub_1A55C5904(a1 + v7, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
    uint64_t v10 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v11 = (int *)type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v39 + 48))(&v9[v12], 1, v6))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1E966B098);
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 32);
      }
      else
      {
        uint64_t v17 = v14;
        uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 32);
        v16(v13, v17, v6);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v39 + 56))(v13, 0, 1, v6);
      }
      *(_OWORD *)&v8[v11[6]] = *(_OWORD *)&v9[v11[6]];
      *(_OWORD *)&v8[v11[7]] = *(_OWORD *)&v9[v11[7]];
      *(_OWORD *)&v8[v11[8]] = *(_OWORD *)&v9[v11[8]];
      *(_OWORD *)&v8[v11[9]] = *(_OWORD *)&v9[v11[9]];
      v8[v11[10]] = v9[v11[10]];
      v16(&v8[v11[11]], &v9[v11[11]], v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for SFProximityHandoff.Content(0);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      v38((uint64_t)v19, (uint64_t)v20, v6);
      uint64_t v28 = v21[5];
      uint64_t v29 = &v19[v28];
      uint64_t v30 = &v20[v28];
      uint64_t v32 = *(void *)v30;
      uint64_t v31 = *((void *)v30 + 1);
      *(void *)uint64_t v29 = v32;
      *((void *)v29 + 1) = v31;
      swift_bridgeObjectRelease();
      *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
      swift_bridgeObjectRelease();
      *(void *)&v19[v21[7]] = *(void *)&v20[v21[7]];
      swift_bridgeObjectRelease();
      uint64_t v33 = v21[8];
      uint64_t v34 = &v19[v33];
      uint64_t v35 = &v20[v33];
      uint64_t v37 = *(void *)v35;
      uint64_t v36 = *((void *)v35 + 1);
      *(void *)uint64_t v34 = v37;
      *((void *)v34 + 1) = v36;
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1A55C5904((uint64_t)v19, type metadata accessor for SFProximityHandoff.Content);
    goto LABEL_13;
  }
  if (v25)
  {
LABEL_13:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v19, v20, v6);
  *(_OWORD *)&v19[v21[5]] = *(_OWORD *)&v20[v21[5]];
  *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
  *(void *)&v19[v21[7]] = *(void *)&v20[v21[7]];
  *(_OWORD *)&v19[v21[8]] = *(_OWORD *)&v20[v21[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(v40 + 28)) = *(unsigned char *)(a2 + *(int *)(v40 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for SFProximityHandoff.Interaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A55C86F4);
}

uint64_t sub_1A55C86F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = a3[5];
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
      if (*(_DWORD *)(*(void *)(v14 - 8) + 84) != a2)
      {
        unsigned int v16 = *(unsigned __int8 *)(a1 + a3[7]);
        if (v16 >= 2) {
          return ((v16 + 2147483646) & 0x7FFFFFFF) + 1;
        }
        else {
          return 0;
        }
      }
      uint64_t v8 = v14;
      uint64_t v12 = *(void *)(v14 - 8);
      uint64_t v13 = a3[6];
    }
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SFProximityHandoff.Interaction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A55C887C);
}

uint64_t sub_1A55C887C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1A56D4CB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672828);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(unsigned char *)(a1 + a4[7]) = a2 + 1;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1A55C89DC()
{
  sub_1A56D4CB8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SFAirDrop.NearbySharingInteraction.State(319);
    if (v1 <= 0x3F)
    {
      sub_1A55C8AE8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1A55C8AE8()
{
  if (!qword_1E9672890)
  {
    type metadata accessor for SFProximityHandoff.Content(255);
    unint64_t v0 = sub_1A56D5898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9672890);
    }
  }
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Interaction.CodingKeys()
{
  return &type metadata for SFProximityHandoff.Interaction.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SFProximityHandoff.Content.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55C8C1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.CodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.CodingKeys;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Item.CodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.Item.CodingKeys;
}

unsigned char *_s7Sharing18SFProximityHandoffO7ContentV4ItemO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A55C8D04);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Item.UrlCodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.Item.UrlCodingKeys;
}

unsigned char *_s7Sharing18SFProximityHandoffO7ContentV6ActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55C8E08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Action.CodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Action.OpenCodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.Action.OpenCodingKeys;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Action.SendCodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.Action.SendCodingKeys;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Action.ShareCodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.Action.ShareCodingKeys;
}

ValueMetadata *type metadata accessor for SFProximityHandoff.Content.Action.TransferCodingKeys()
{
  return &type metadata for SFProximityHandoff.Content.Action.TransferCodingKeys;
}

unint64_t sub_1A55C8E84()
{
  unint64_t result = qword_1E9672898;
  if (!qword_1E9672898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672898);
  }
  return result;
}

unint64_t sub_1A55C8EDC()
{
  unint64_t result = qword_1E96728A0;
  if (!qword_1E96728A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728A0);
  }
  return result;
}

unint64_t sub_1A55C8F34()
{
  unint64_t result = qword_1E96728A8;
  if (!qword_1E96728A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728A8);
  }
  return result;
}

unint64_t sub_1A55C8F8C()
{
  unint64_t result = qword_1E96728B0;
  if (!qword_1E96728B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728B0);
  }
  return result;
}

unint64_t sub_1A55C8FE4()
{
  unint64_t result = qword_1E96728B8;
  if (!qword_1E96728B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728B8);
  }
  return result;
}

unint64_t sub_1A55C903C()
{
  unint64_t result = qword_1E96728C0;
  if (!qword_1E96728C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728C0);
  }
  return result;
}

unint64_t sub_1A55C9094()
{
  unint64_t result = qword_1E96728C8;
  if (!qword_1E96728C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728C8);
  }
  return result;
}

unint64_t sub_1A55C90EC()
{
  unint64_t result = qword_1E96728D0;
  if (!qword_1E96728D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728D0);
  }
  return result;
}

unint64_t sub_1A55C9144()
{
  unint64_t result = qword_1E96728D8;
  if (!qword_1E96728D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728D8);
  }
  return result;
}

unint64_t sub_1A55C919C()
{
  unint64_t result = qword_1E96728E0;
  if (!qword_1E96728E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728E0);
  }
  return result;
}

unint64_t sub_1A55C91F4()
{
  unint64_t result = qword_1E96728E8;
  if (!qword_1E96728E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728E8);
  }
  return result;
}

unint64_t sub_1A55C924C()
{
  unint64_t result = qword_1E96728F0;
  if (!qword_1E96728F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728F0);
  }
  return result;
}

unint64_t sub_1A55C92A4()
{
  unint64_t result = qword_1E96728F8;
  if (!qword_1E96728F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96728F8);
  }
  return result;
}

unint64_t sub_1A55C92FC()
{
  unint64_t result = qword_1E9672900;
  if (!qword_1E9672900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672900);
  }
  return result;
}

unint64_t sub_1A55C9354()
{
  unint64_t result = qword_1E9672908;
  if (!qword_1E9672908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672908);
  }
  return result;
}

unint64_t sub_1A55C93AC()
{
  unint64_t result = qword_1E9672910;
  if (!qword_1E9672910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672910);
  }
  return result;
}

unint64_t sub_1A55C9404()
{
  unint64_t result = qword_1E9672918;
  if (!qword_1E9672918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672918);
  }
  return result;
}

unint64_t sub_1A55C945C()
{
  unint64_t result = qword_1E9672920;
  if (!qword_1E9672920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672920);
  }
  return result;
}

unint64_t sub_1A55C94B4()
{
  unint64_t result = qword_1E9672928;
  if (!qword_1E9672928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672928);
  }
  return result;
}

unint64_t sub_1A55C950C()
{
  unint64_t result = qword_1E9672930;
  if (!qword_1E9672930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672930);
  }
  return result;
}

unint64_t sub_1A55C9564()
{
  unint64_t result = qword_1E9672938;
  if (!qword_1E9672938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672938);
  }
  return result;
}

unint64_t sub_1A55C95BC()
{
  unint64_t result = qword_1E9672940;
  if (!qword_1E9672940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672940);
  }
  return result;
}

unint64_t sub_1A55C9614()
{
  unint64_t result = qword_1E9672948;
  if (!qword_1E9672948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672948);
  }
  return result;
}

uint64_t sub_1A55C9668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A55C501C(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SFAirDrop.NearbySharingInteraction.State);
}

uint64_t sub_1A55C96A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1852141679 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684956531 && a2 == 0xE400000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572616873 && a2 == 0xE500000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1A55C9834(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463617265746E69 && a2 == 0xED000044496E6F69;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A573A310 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A573A330 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A55C9A58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A573A350)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t SFAirDropReceive.AskRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55D0A90(v1, a1, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
}

uint64_t SFAirDropReceive.AskRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 20);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;

  return sub_1A55118A0(v4, v5, v6);
}

uint64_t type metadata accessor for SFAirDropReceive.AskRequest(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E966B230);
}

uint64_t SFAirDropReceive.AskRequest.transferTypes.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 24));
}

uint64_t SFAirDropReceive.AskRequest.canAutoAccept.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 28));
}

uint64_t SFAirDropReceive.AskRequest.verifiableIdentity.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 32));
}

uint64_t SFAirDropReceive.AskRequest.senderIsMe.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 36));
}

uint64_t SFAirDropReceive.AskRequest.contactIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderBundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderComputerName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderModelName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderEmail.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderEmailHash.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderCompositeName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderFirstName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderLastName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.senderID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 76));
  swift_bridgeObjectRetain();
  return v1;
}

void *SFAirDropReceive.AskRequest.senderIcon.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 80));
  id v2 = v1;
  return v1;
}

void sub_1A55C9FD8(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 80);
  uint64_t v5 = *(void **)(a2 + v4);
  id v6 = v3;

  *(void *)(a2 + v4) = v3;
}

void SFAirDropReceive.AskRequest.senderIcon.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 80);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*SFAirDropReceive.AskRequest.senderIcon.modify())(void, void, void)
{
  return nullsub_1;
}

void *SFAirDropReceive.AskRequest.smallPreviewImage.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 84));
  id v2 = v1;
  return v1;
}

void sub_1A55CA0DC(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 84);
  uint64_t v5 = *(void **)(a2 + v4);
  id v6 = v3;

  *(void *)(a2 + v4) = v3;
}

void SFAirDropReceive.AskRequest.smallPreviewImage.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 84);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*SFAirDropReceive.AskRequest.smallPreviewImage.modify())(void, void, void)
{
  return nullsub_1;
}

void *SFAirDropReceive.AskRequest.previewImage.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 88));
  id v2 = v1;
  return v1;
}

void sub_1A55CA1E0(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 88);
  uint64_t v5 = *(void **)(a2 + v4);
  id v6 = v3;

  *(void *)(a2 + v4) = v3;
}

void SFAirDropReceive.AskRequest.previewImage.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 88);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*SFAirDropReceive.AskRequest.previewImage.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t SFAirDropReceive.AskRequest.itemsDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 92));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 96);

  return sub_1A55CA334(v3, a1);
}

uint64_t sub_1A55CA334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SFAirDropReceive.AskRequest.urlItems.getter()
{
  type metadata accessor for SFAirDropReceive.AskRequest(0);

  return swift_bridgeObjectRetain();
}

uint64_t SFAirDropReceive.AskRequest.items.getter()
{
  type metadata accessor for SFAirDropReceive.AskRequest(0);

  return swift_bridgeObjectRetain();
}

uint64_t SFAirDropReceive.AskRequest.customPayload.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 108);
  uint64_t v2 = *(void *)v1;
  sub_1A54F6308(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

void *SFAirDropReceive.AskRequest.files.getter()
{
  type metadata accessor for SFAirDropReceive.AskRequest(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A55CEA8C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.init(id:type:transferTypes:canAutoAccept:verifiableIdentity:senderIsMe:contactIdentifier:senderBundleID:senderComputerName:senderModelName:senderEmail:senderEmailHash:senderCompositeName:senderFirstName:senderLastName:senderID:senderIcon:smallPreviewImage:previewImage:itemsDescription:itemsDescriptionAdvanced:urlItems:items:customPayload:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v38 = *a2;
  uint64_t v39 = a2[1];
  char v40 = *((unsigned char *)a2 + 16);
  uint64_t v41 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
  uint64_t v60 = v41[21];
  uint64_t v61 = v41[20];
  uint64_t v59 = v41[22];
  sub_1A55D0C00(a1, a9, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
  uint64_t v42 = a9 + v41[5];
  *(void *)uint64_t v42 = v38;
  *(void *)(v42 + 8) = v39;
  *(unsigned char *)(v42 + 16) = v40;
  *(void *)(a9 + v41[6]) = a3;
  *(unsigned char *)(a9 + v41[7]) = a4;
  *(unsigned char *)(a9 + v41[8]) = a5;
  *(unsigned char *)(a9 + v41[9]) = a6;
  uint64_t v43 = (void *)(a9 + v41[10]);
  *uint64_t v43 = a7;
  v43[1] = a8;
  uint64_t v44 = (void *)(a9 + v41[11]);
  *uint64_t v44 = a10;
  v44[1] = a11;
  uint64_t v45 = (void *)(a9 + v41[12]);
  *uint64_t v45 = a12;
  v45[1] = a13;
  uint64_t v46 = (void *)(a9 + v41[13]);
  void *v46 = a14;
  v46[1] = a15;
  uint64_t v47 = (void *)(a9 + v41[14]);
  *uint64_t v47 = a16;
  v47[1] = a17;
  uint64_t v48 = (void *)(a9 + v41[15]);
  void *v48 = a18;
  v48[1] = a19;
  uint64_t v49 = (void *)(a9 + v41[16]);
  *uint64_t v49 = a20;
  v49[1] = a21;
  uint64_t v50 = (void *)(a9 + v41[17]);
  *uint64_t v50 = a22;
  v50[1] = a23;
  uint64_t v51 = (void *)(a9 + v41[18]);
  *uint64_t v51 = a24;
  v51[1] = a25;
  uint64_t v52 = (void *)(a9 + v41[19]);
  void *v52 = a26;
  v52[1] = a27;
  *(void *)(a9 + v61) = a28;
  *(void *)(a9 + v60) = a29;
  *(void *)(a9 + v59) = a30;
  char v53 = (void *)(a9 + v41[23]);
  *char v53 = a31;
  v53[1] = a32;
  uint64_t result = sub_1A55CEB80(a33, a9 + v41[24]);
  *(void *)(a9 + v41[25]) = a34;
  *(void *)(a9 + v41[26]) = a35;
  uint64_t v55 = (void *)(a9 + v41[27]);
  *uint64_t v55 = a36;
  v55[1] = a37;
  return result;
}

uint64_t SFAirDropReceive.AskRequest.senderDisplayName.getter()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(v1 + 64));
  if (v2[1])
  {
    uint64_t v3 = *v2;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + *(int *)(v1 + 48));
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t SFAirDropReceive.AskRequest.description.getter()
{
  return 0;
}

uint64_t sub_1A55CA92C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1A56D4A28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1A55D07F4(&qword_1E96724E0, MEMORY[0x1E4F276F0]);
    uint64_t v27 = sub_1A56D4FE8();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1A55D07F4(&qword_1E9672A80, MEMORY[0x1E4F276F0]);
      char v32 = sub_1A56D5058();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    uint64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1A55CAD70(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v55 = a2 + 56;
  uint64_t v42 = result + 56;
  uint64_t v43 = result;
  int64_t v41 = v8;
  if (v7) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v10 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v10 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v10);
  int64_t v12 = v3 + 1;
  if (!v11)
  {
    int64_t v12 = v10 + 1;
    if (v10 + 1 >= v8) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v12);
    if (!v11)
    {
      int64_t v12 = v10 + 2;
      if (v10 + 2 >= v8) {
        return 1;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v10 + 3;
        if (v10 + 3 >= v8) {
          return 1;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v13 = v10 + 4;
          if (v13 < v8)
          {
            unint64_t v11 = *(void *)(v4 + 8 * v13);
            if (v11)
            {
              int64_t v12 = v13;
              goto LABEL_23;
            }
            while (1)
            {
              int64_t v12 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                break;
              }
              if (v12 >= v8) {
                return 1;
              }
              unint64_t v11 = *(void *)(v4 + 8 * v12);
              ++v13;
              if (v11) {
                goto LABEL_23;
              }
            }
LABEL_60:
            __break(1u);
            return result;
          }
          return 1;
        }
      }
    }
  }
LABEL_23:
  uint64_t v44 = (v11 - 1) & v11;
  int64_t v45 = v12;
  for (unint64_t i = __clz(__rbit64(v11)) + (v12 << 6); ; unint64_t i = __clz(__rbit64(v7)) | (v3 << 6))
  {
    int64_t v14 = (unsigned __int8 *)(*(void *)(result + 48) + 80 * i);
    uint64_t v15 = *((void *)v14 + 2);
    uint64_t v16 = *((void *)v14 + 5);
    uint64_t v17 = *((void *)v14 + 7);
    uint64_t v18 = *((void *)v14 + 9);
    int v57 = *v14;
    uint64_t v54 = *((void *)v14 + 1);
    int v53 = v14[24];
    uint64_t v51 = *((void *)v14 + 4);
    uint64_t v47 = *((void *)v14 + 6);
    uint64_t v48 = *((void *)v14 + 8);
    sub_1A56D60B8();
    uint64_t v50 = v17;
    swift_bridgeObjectRetain();
    uint64_t v49 = v18;
    swift_bridgeObjectRetain();
    uint64_t v56 = v15;
    swift_bridgeObjectRetain();
    uint64_t v52 = v16;
    swift_bridgeObjectRetain();
    SFAirDropReceive.AskRequest.ItemInfo.hash(into:)();
    uint64_t v19 = sub_1A56D60E8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v22 = v55;
    if (((*(void *)(v55 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      break;
    }
    uint64_t v23 = ~v20;
    uint64_t v24 = *(void *)(a2 + 48);
    while (1)
    {
      uint64_t v25 = (unsigned __int8 *)(v24 + 80 * v21);
      if (v57 != *v25) {
        goto LABEL_27;
      }
      int v26 = v25[24];
      uint64_t v28 = *((void *)v25 + 4);
      uint64_t v27 = *((void *)v25 + 5);
      uint64_t v29 = *((void *)v25 + 6);
      uint64_t v30 = *((void *)v25 + 7);
      uint64_t v32 = *((void *)v25 + 8);
      uint64_t v31 = *((void *)v25 + 9);
      if (*((void *)v25 + 1) == v54 && *((void *)v25 + 2) == v56)
      {
        if (v53 != v26) {
          goto LABEL_27;
        }
      }
      else
      {
        char v34 = sub_1A56D5F28();
        uint64_t v22 = v55;
        if (v34 & 1) == 0 || ((v53 ^ v26)) {
          goto LABEL_27;
        }
      }
      if (v28 != v51 || v27 != v52)
      {
        char v36 = sub_1A56D5F28();
        uint64_t v22 = v55;
        if ((v36 & 1) == 0) {
          goto LABEL_27;
        }
      }
      if (v30) {
        break;
      }
      if (!v50) {
        goto LABEL_49;
      }
LABEL_27:
      unint64_t v21 = (v21 + 1) & v23;
      if (((*(void *)(v22 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_57;
      }
    }
    if (!v50) {
      goto LABEL_27;
    }
    if (v29 != v47 || v30 != v50)
    {
      char v38 = sub_1A56D5F28();
      uint64_t v22 = v55;
      if ((v38 & 1) == 0) {
        goto LABEL_27;
      }
    }
LABEL_49:
    if (v32 != v48 || v31 != v49)
    {
      char v40 = sub_1A56D5F28();
      uint64_t v22 = v55;
      if ((v40 & 1) == 0) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v3 = v45;
    uint64_t v2 = a2;
    uint64_t v4 = v42;
    uint64_t result = v43;
    int64_t v8 = v41;
    unint64_t v7 = v44;
    if (!v44) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v44 = (v7 - 1) & v7;
    int64_t v45 = v3;
  }
LABEL_57:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1A55CB168(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x726566736E617274;
      break;
    case 3:
      unint64_t result = 0x416F7475416E6163;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x73497265646E6573;
      break;
    case 6:
    case 17:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x75427265646E6573;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0x6F4D7265646E6573;
      break;
    case 10:
    case 11:
      unint64_t result = 0x6D457265646E6573;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0x69467265646E6573;
      break;
    case 14:
      unint64_t result = 0x614C7265646E6573;
      break;
    case 15:
      unint64_t result = 0x44497265646E6573;
      break;
    case 16:
      unint64_t result = 0x63497265646E6573;
      break;
    case 18:
      unint64_t result = 0x4977656976657270;
      break;
    case 19:
      unint64_t result = 0xD000000000000010;
      break;
    case 20:
      unint64_t result = 0xD000000000000018;
      break;
    case 21:
      unint64_t result = 0x736D6574496C7275;
      break;
    case 22:
      unint64_t result = 0x736D657469;
      break;
    case 23:
      unint64_t result = 0x61506D6F74737563;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A55CB480()
{
  return sub_1A55CB168(*v0);
}

uint64_t sub_1A55CB488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55D4084(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A55CB4B0(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_1A55CB4BC(uint64_t a1)
{
  unint64_t v2 = sub_1A55D06D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55CB4F8(uint64_t a1)
{
  unint64_t v2 = sub_1A55D06D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropReceive.AskRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672950);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D06D8();
  sub_1A56D61D8();
  LOBYTE(v15) = 0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1A55D07F4(&qword_1E9672960, (void (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier);
  sub_1A56D5E38();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
    int64_t v10 = (long long *)(v3 + v9[5]);
    char v11 = *((unsigned char *)v10 + 16);
    long long v15 = *v10;
    char v16 = v11;
    char v14 = 1;
    sub_1A55D072C();
    sub_1A56D5E38();
    LOBYTE(v15) = 2;
    sub_1A56D5E48();
    LOBYTE(v15) = 3;
    sub_1A56D5DF8();
    LOBYTE(v15) = 4;
    sub_1A56D5DF8();
    LOBYTE(v15) = 5;
    sub_1A56D5DF8();
    LOBYTE(v15) = 6;
    sub_1A56D5DA8();
    LOBYTE(v15) = 7;
    sub_1A56D5DE8();
    LOBYTE(v15) = 8;
    sub_1A56D5DE8();
    LOBYTE(v15) = 9;
    sub_1A56D5DE8();
    LOBYTE(v15) = 10;
    sub_1A56D5DA8();
    LOBYTE(v15) = 11;
    sub_1A56D5DA8();
    LOBYTE(v15) = 12;
    sub_1A56D5DA8();
    LOBYTE(v15) = 13;
    sub_1A56D5DA8();
    LOBYTE(v15) = 14;
    sub_1A56D5DA8();
    LOBYTE(v15) = 15;
    sub_1A56D5DE8();
    *(void *)&long long v15 = *(void *)(v3 + v9[20]);
    char v14 = 16;
    sub_1A55D0780();
    sub_1A56D5E38();
    *(void *)&long long v15 = *(void *)(v3 + v9[21]);
    char v14 = 17;
    sub_1A56D5E38();
    *(void *)&long long v15 = *(void *)(v3 + v9[22]);
    char v14 = 18;
    sub_1A56D5E38();
    LOBYTE(v15) = 19;
    sub_1A56D5DA8();
    LOBYTE(v15) = 20;
    type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
    sub_1A55D07F4(&qword_1E9672978, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
    sub_1A56D5DD8();
    *(void *)&long long v15 = *(void *)(v3 + v9[25]);
    char v14 = 21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672980);
    sub_1A55D0938(&qword_1E9672988, &qword_1E9670E80);
    sub_1A56D5E38();
    *(void *)&long long v15 = *(void *)(v3 + v9[26]);
    char v14 = 22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672990);
    sub_1A55D09CC(&qword_1E9672998, (void (*)(void))sub_1A55D083C);
    sub_1A56D5E38();
    long long v15 = *(_OWORD *)(v3 + v9[27]);
    char v14 = 23;
    sub_1A54E9FA0();
    sub_1A56D5DD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void SFAirDropReceive.AskRequest.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v80[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v80[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96729A8);
  uint64_t v10 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  int64_t v12 = &v80[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for SFAirDropReceive.AskRequest(0);
  char v14 = (int *)MEMORY[0x1F4188790](v13);
  char v16 = &v80[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = v14[20];
  uint64_t v87 = (uint64_t)a1;
  uint64_t v88 = v17;
  *(void *)&v16[v17] = 0;
  uint64_t v89 = v14[21];
  *(void *)&v16[v89] = 0;
  int64_t v92 = v16;
  uint64_t v93 = v14;
  uint64_t v90 = v14[22];
  *(void *)&v16[v90] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D06D8();
  uint64_t v85 = v12;
  sub_1A56D61A8();
  if (v2)
  {
    uint64_t v91 = v2;
    unsigned int v18 = 458752;
  }
  else
  {
    LOBYTE(v94) = 0;
    sub_1A55D07F4(&qword_1E96729B0, (void (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier);
    sub_1A56D5D48();
    uint64_t v31 = (uint64_t)v92;
    sub_1A55D0C00((uint64_t)v9, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
    char v97 = 1;
    sub_1A55D0890();
    sub_1A56D5D48();
    char v32 = v95;
    uint64_t v33 = v93;
    uint64_t v34 = v31 + v93[5];
    *(_OWORD *)uint64_t v34 = v94;
    *(unsigned char *)(v34 + 16) = v32;
    LOBYTE(v94) = 2;
    *(void *)(v31 + v33[6]) = sub_1A56D5D58();
    LOBYTE(v94) = 3;
    *(unsigned char *)(v31 + v33[7]) = sub_1A56D5D08() & 1;
    LOBYTE(v94) = 4;
    *(unsigned char *)(v31 + v33[8]) = sub_1A56D5D08() & 1;
    LOBYTE(v94) = 5;
    *(unsigned char *)(v31 + v33[9]) = sub_1A56D5D08() & 1;
    LOBYTE(v94) = 6;
    uint64_t v35 = sub_1A56D5CA8();
    char v36 = (uint64_t *)(v31 + v33[10]);
    uint64_t *v36 = v35;
    v36[1] = v37;
    LOBYTE(v94) = 7;
    uint64_t v38 = sub_1A56D5CF8();
    uint64_t v39 = (uint64_t *)(v31 + v33[11]);
    *uint64_t v39 = v38;
    v39[1] = v40;
    LOBYTE(v94) = 8;
    uint64_t v41 = sub_1A56D5CF8();
    uint64_t v42 = (uint64_t *)(v31 + v93[12]);
    uint64_t *v42 = v41;
    v42[1] = v43;
    LOBYTE(v94) = 9;
    uint64_t v44 = sub_1A56D5CF8();
    uint64_t v91 = 0;
    uint64_t v46 = (uint64_t *)&v92[v93[13]];
    uint64_t *v46 = v44;
    v46[1] = v45;
    LOBYTE(v94) = 10;
    uint64_t v47 = v91;
    uint64_t v48 = sub_1A56D5CA8();
    uint64_t v91 = v47;
    if (v47)
    {
      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
      unsigned int v18 = 459715;
    }
    else
    {
      uint64_t v50 = (uint64_t *)&v92[v93[14]];
      *uint64_t v50 = v48;
      v50[1] = v49;
      LOBYTE(v94) = 11;
      uint64_t v51 = v91;
      uint64_t v52 = sub_1A56D5CA8();
      uint64_t v91 = v51;
      if (v51)
      {
        (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
        unsigned int v18 = 460739;
      }
      else
      {
        uint64_t v54 = (uint64_t *)&v92[v93[15]];
        *uint64_t v54 = v52;
        v54[1] = v53;
        LOBYTE(v94) = 12;
        uint64_t v55 = v91;
        uint64_t v56 = sub_1A56D5CA8();
        uint64_t v91 = v55;
        if (v55)
        {
          (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
          unsigned int v18 = 462787;
        }
        else
        {
          uint64_t v58 = (uint64_t *)&v92[v93[16]];
          *uint64_t v58 = v56;
          v58[1] = v57;
          LOBYTE(v94) = 13;
          uint64_t v59 = v91;
          uint64_t v60 = sub_1A56D5CA8();
          uint64_t v91 = v59;
          if (v59)
          {
            (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
            unsigned int v18 = 466883;
          }
          else
          {
            uint64_t v62 = (uint64_t *)&v92[v93[17]];
            *uint64_t v62 = v60;
            v62[1] = v61;
            LOBYTE(v94) = 14;
            uint64_t v63 = v91;
            uint64_t v64 = sub_1A56D5CA8();
            uint64_t v91 = v63;
            if (v63)
            {
              (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
              unsigned int v18 = 475075;
            }
            else
            {
              uint64_t v66 = (uint64_t *)&v92[v93[18]];
              uint64_t *v66 = v64;
              v66[1] = v65;
              LOBYTE(v94) = 15;
              uint64_t v67 = v91;
              uint64_t v68 = sub_1A56D5CF8();
              uint64_t v91 = v67;
              if (v67)
              {
                (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
                unsigned int v18 = 491459;
              }
              else
              {
                uint64_t v70 = (uint64_t *)&v92[v93[19]];
                uint64_t *v70 = v68;
                v70[1] = v69;
                char v97 = 16;
                sub_1A55D08E4();
                uint64_t v71 = v91;
                sub_1A56D5D48();
                uint64_t v91 = v71;
                if (!v71)
                {
                  *(void *)&v92[v88] = v94;
                  char v97 = 17;
                  sub_1A56D5D48();
                  uint64_t v91 = 0;
                  *(void *)&v92[v89] = v94;
                  char v97 = 18;
                  sub_1A56D5D48();
                  uint64_t v91 = 0;
                  *(void *)&v92[v90] = v94;
                  LOBYTE(v94) = 19;
                  uint64_t v72 = sub_1A56D5CA8();
                  uint64_t v91 = 0;
                  uint64_t v74 = (uint64_t *)&v92[v93[23]];
                  *uint64_t v74 = v72;
                  v74[1] = v73;
                  type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
                  LOBYTE(v94) = 20;
                  sub_1A55D07F4(&qword_1E96729C8, (void (*)(uint64_t))type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
                  uint64_t v75 = v91;
                  sub_1A56D5CE8();
                  uint64_t v91 = v75;
                  if (v75)
                  {
                    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
                    LODWORD(v84) = 0;
                    LODWORD(v85) = 0;
                    LODWORD(v86) = 0;
                    int v26 = 1;
                  }
                  else
                  {
                    sub_1A55CEB80((uint64_t)v6, (uint64_t)&v92[v93[24]]);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672980);
                    char v97 = 21;
                    sub_1A55D0938(&qword_1E96729D0, &qword_1E9671018);
                    uint64_t v76 = v91;
                    sub_1A56D5D48();
                    uint64_t v91 = v76;
                    if (v76)
                    {
                      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
                      LODWORD(v85) = 0;
                      LODWORD(v86) = 0;
                      int v26 = 1;
                      LODWORD(v84) = 1;
                    }
                    else
                    {
                      *(void *)&v92[v93[25]] = v94;
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672990);
                      char v97 = 22;
                      sub_1A55D09CC(&qword_1E96729D8, (void (*)(void))sub_1A55D0A3C);
                      uint64_t v77 = v91;
                      sub_1A56D5D48();
                      uint64_t v91 = v77;
                      if (v77)
                      {
                        (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
                        LODWORD(v86) = 0;
                        int v26 = 1;
                        LODWORD(v84) = 1;
                        LODWORD(v85) = 1;
                      }
                      else
                      {
                        *(void *)&v92[v93[26]] = v94;
                        char v97 = 23;
                        sub_1A54EA048();
                        uint64_t v78 = v91;
                        sub_1A56D5CE8();
                        uint64_t v91 = v78;
                        if (!v78)
                        {
                          (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
                          uint64_t v79 = (uint64_t)v92;
                          *(_OWORD *)&v92[v93[27]] = v94;
                          sub_1A55D0A90(v79, v84, type metadata accessor for SFAirDropReceive.AskRequest);
                          __swift_destroy_boxed_opaque_existential_0Tm(v87);
                          sub_1A55D0AF8(v79, type metadata accessor for SFAirDropReceive.AskRequest);
                          return;
                        }
                        (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
                        int v26 = 1;
                        LODWORD(v84) = 1;
                        LODWORD(v85) = 1;
                        LODWORD(v86) = 1;
                      }
                    }
                  }
                  __swift_destroy_boxed_opaque_existential_0Tm(v87);
                  uint64_t v19 = (uint64_t)v92;
                  sub_1A55D0AF8((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
                  LODWORD(v87) = 1;
                  int v96 = 1;
                  int v82 = 1;
                  int v83 = 1;
                  int v81 = 1;
                  int v24 = 1;
                  int v23 = 1;
                  int v22 = 1;
                  int v21 = 1;
                  LOBYTE(v20) = 1;
                  uint64_t v25 = v93;
                  goto LABEL_29;
                }
                unsigned int v18 = 524227;
                (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v85, v86);
              }
            }
          }
        }
      }
    }
  }
  uint64_t v19 = (uint64_t)v92;
  __swift_destroy_boxed_opaque_existential_0Tm(v87);
  int v20 = (v18 >> 6) & 1;
  int v21 = (v18 >> 7) & 1;
  int v22 = (v18 >> 8) & 1;
  int v23 = (v18 >> 9) & 1;
  int v24 = (v18 >> 10) & 1;
  int v81 = (v18 >> 11) & 1;
  int v82 = (v18 >> 12) & 1;
  int v83 = (v18 >> 13) & 1;
  int v96 = (v18 >> 14) & 1;
  LODWORD(v87) = (v18 >> 15) & 1;
  if (v18) {
    sub_1A55D0AF8(v19, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
  }
  uint64_t v25 = v93;
  if ((v18 & 2) == 0)
  {
    int v26 = 0;
    LODWORD(v84) = 0;
    LODWORD(v85) = 0;
    LODWORD(v86) = 0;
    if ((v18 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
  LODWORD(v86) = 0;
  LODWORD(v85) = 0;
  LODWORD(v84) = 0;
  int v26 = 0;
LABEL_29:
  sub_1A5512CD4(*(void *)(v19 + v25[5]), *(void *)(v19 + v25[5] + 8), *(unsigned char *)(v19 + v25[5] + 16));
  if ((v20 & 1) == 0)
  {
LABEL_8:
    if (v21) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  if (!v22)
  {
LABEL_10:
    if (v23) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    int v27 = v26;
    if ((v24 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v27 = v26;
  if (!v24)
  {
LABEL_12:
    int v28 = v84;
    if (v81) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  int v28 = v84;
  if (v81)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    int v29 = (int)v85;
    if ((v82 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v29 = (int)v85;
  if (!v82)
  {
LABEL_14:
    int v30 = v86;
    if (v83) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  int v30 = v86;
  if (v83)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    if ((v96 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  if (!v96)
  {
LABEL_16:
    if (!v87) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  if (v87) {
LABEL_17:
  }
    swift_bridgeObjectRelease();
LABEL_18:

  if (v27)
  {
    swift_bridgeObjectRelease();
    if (!v28)
    {
LABEL_20:
      if (!v29) {
        goto LABEL_21;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      if (!v30) {
        return;
      }
      goto LABEL_26;
    }
  }
  else if (!v28)
  {
    goto LABEL_20;
  }
  sub_1A54E4D44(v19 + v25[24], &qword_1E9671128);
  if (v29) {
    goto LABEL_25;
  }
LABEL_21:
  if (!v30) {
    return;
  }
LABEL_26:
  swift_bridgeObjectRelease();
}

uint64_t sub_1A55CCA48@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55D0A90(v1, a1, (uint64_t (*)(void))type metadata accessor for SFAirDrop.TransferIdentifier);
}

void sub_1A55CCA7C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1A55CCA94(void *a1)
{
  return SFAirDropReceive.AskRequest.encode(to:)(a1);
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.convertMediaFormats.getter()
{
  return *v0;
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileBomPath.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileIsDirectory.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileType.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.init(convertMediaFormats:fileBomPath:fileIsDirectory:fileName:fileSubType:fileType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(unsigned char *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  return result;
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1A56D60D8();
  swift_bridgeObjectRetain();
  sub_1A56D5188();
  swift_bridgeObjectRelease();
  sub_1A56D60D8();
  swift_bridgeObjectRetain();
  sub_1A56D5188();
  swift_bridgeObjectRelease();
  sub_1A56D60D8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1A56D5188();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1A56D5188();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1A55CCCC8()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x506D6F42656C6966;
      break;
    case 2:
      unint64_t result = 0x69447349656C6966;
      break;
    case 3:
      unint64_t result = 0x656D614E656C6966;
      break;
    case 4:
      unint64_t result = 0x54627553656C6966;
      break;
    case 5:
      unint64_t result = 0x65707954656C6966;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55CCDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55D4AD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55CCDD8(uint64_t a1)
{
  unint64_t v2 = sub_1A55D0B58();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55CCE14(uint64_t a1)
{
  unint64_t v2 = sub_1A55D0B58();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96729E8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v14 = *(void *)(v1 + 16);
  uint64_t v15 = v8;
  int v13 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 32);
  v12[5] = *(void *)(v1 + 40);
  v12[6] = v9;
  uint64_t v10 = *(void *)(v1 + 56);
  void v12[2] = *(void *)(v1 + 48);
  v12[3] = v10;
  v12[4] = *(void *)(v1 + 64);
  v12[1] = *(void *)(v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D0B58();
  sub_1A56D61D8();
  char v21 = 0;
  sub_1A56D5DF8();
  if (!v2)
  {
    char v20 = 1;
    sub_1A56D5DE8();
    char v19 = 2;
    sub_1A56D5DF8();
    char v18 = 3;
    sub_1A56D5DE8();
    char v17 = 4;
    sub_1A56D5DA8();
    char v16 = 5;
    sub_1A56D5DE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E96729F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D0B58();
  sub_1A56D61A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  char v35 = 0;
  char v9 = sub_1A56D5D08();
  char v34 = 1;
  uint64_t v10 = sub_1A56D5CF8();
  uint64_t v12 = v11;
  uint64_t v29 = v10;
  char v33 = 2;
  swift_bridgeObjectRetain();
  int v28 = sub_1A56D5D08();
  char v32 = 3;
  uint64_t v26 = sub_1A56D5CF8();
  uint64_t v27 = v14;
  char v31 = 4;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1A56D5CA8();
  uint64_t v25 = v15;
  char v30 = 5;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1A56D5CF8();
  uint64_t v18 = v17;
  int v23 = v9 & 1;
  v28 &= 1u;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v23;
  *(void *)(a2 + 8) = v29;
  *(void *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 24) = v28;
  uint64_t v21 = v25;
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = v19;
  *(void *)(a2 + 72) = v18;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A55CD4F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.AskRequest.ItemInfo.init(from:)(a1, a2);
}

uint64_t sub_1A55CD50C(void *a1)
{
  return SFAirDropReceive.AskRequest.ItemInfo.encode(to:)(a1);
}

uint64_t sub_1A55CD524()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A55CD59C()
{
  return sub_1A56D60E8();
}

uint64_t SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1A56D5C68();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 9;
  if (v2 < 9) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.init(stringValue:)@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.init(rawValue:)(&v3);
  *a1 = v3;
  return result;
}

void SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.rawValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000026;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000024;
      break;
    case 7:
      unint64_t result = 0xD000000000000028;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.stringValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000026;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000024;
      break;
    case 7:
      unint64_t result = 0xD000000000000028;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55CD88C(unsigned __int8 *a1, char *a2)
{
  return sub_1A56265C8(*a1, *a2);
}

uint64_t sub_1A55CD898()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A55CD8E0()
{
  return sub_1A56AC16C();
}

uint64_t sub_1A55CD8E8()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A55CD92C@<X0>(char *a1@<X8>)
{
  return SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.init(rawValue:)(a1);
}

unint64_t sub_1A55CD938@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A55CD964@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys.init(rawValue:)(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1A55CD99C(uint64_t a1)
{
  unint64_t v2 = sub_1A55D0BAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55CD9D8(uint64_t a1)
{
  unint64_t v2 = sub_1A55D0BAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SFAirDropReceive.AskRequest.AdvancedItemsDescription.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_1A56D4C28();
  uint64_t v55 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672A00);
  uint64_t v54 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  uint64_t v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1A55D0BAC();
  int v13 = v57;
  sub_1A56D61A8();
  if (!v13)
  {
    uint64_t v52 = v5;
    uint64_t v15 = v54;
    uint64_t v14 = v55;
    uint64_t v57 = v11;
    LOBYTE(v58) = 0;
    uint64_t v16 = v6;
    uint64_t v51 = sub_1A56D5CF8();
    uint64_t v18 = v17;
    LOBYTE(v58) = 1;
    uint64_t v19 = sub_1A56D5CD8();
    if ((v20 & 1) == 0)
    {
      uint64_t v21 = v19;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v16);
      uint64_t v22 = (uint64_t)v57;
      uint64_t *v57 = v51;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = v21;
LABEL_4:
      uint64_t v23 = v53;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      sub_1A55D0C00(v22, v23, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
    }
    LOBYTE(v58) = 2;
    uint64_t v26 = sub_1A56D5CA8();
    uint64_t v50 = v8;
    if (v25)
    {
      uint64_t v48 = v26;
      uint64_t v49 = v25;
      LOBYTE(v58) = 3;
      sub_1A55D07F4(&qword_1E9670500, MEMORY[0x1E4F27928]);
      uint64_t v27 = v50;
      sub_1A56D5D48();
      LOBYTE(v58) = 4;
      char v31 = sub_1A56D5CB8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v16);
      LOBYTE(v27) = v31 & 1;
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
      char v33 = v57;
      char v34 = (char *)v57 + *(int *)(v32 + 64);
      uint64_t v35 = *(int *)(v32 + 80);
      char v36 = v52;
      uint64_t *v57 = v51;
      v33[1] = v18;
      uint64_t v37 = v49;
      v33[2] = v48;
      v33[3] = v37;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v34, v36, v3);
      *((unsigned char *)v33 + v35) = (_BYTE)v27;
      uint64_t v22 = (uint64_t)v33;
    }
    else
    {
      LOBYTE(v58) = 5;
      uint64_t v28 = sub_1A56D5CD8();
      uint64_t v55 = v16;
      if (v29)
      {
        LOBYTE(v58) = 6;
        uint64_t v38 = sub_1A56D5CD8();
        uint64_t v23 = v53;
        if ((v39 & 1) == 0)
        {
          uint64_t v58 = 0;
          unint64_t v59 = 0xE000000000000000;
          uint64_t v40 = v38;
          sub_1A56D5A28();
          sub_1A56D51C8();
          uint64_t v60 = v40;
          sub_1A56D5E78();
          sub_1A56D51C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v55);
          uint64_t v22 = (uint64_t)v57;
          uint64_t *v57 = v51;
          *(void *)(v22 + 8) = v18;
          *(void *)(v22 + 16) = v40;
          goto LABEL_5;
        }
        LOBYTE(v58) = 7;
        uint64_t v41 = sub_1A56D5CD8();
        if (v42)
        {
          LOBYTE(v58) = 8;
          uint64_t v44 = sub_1A56D5CC8();
          char v46 = v45;
          (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v55);
          uint64_t v47 = v57;
          uint64_t *v57 = v51;
          v47[1] = v18;
          if (v46)
          {
            uint64_t v23 = v53;
            uint64_t v22 = (uint64_t)v57;
            goto LABEL_5;
          }
          uint64_t v22 = (uint64_t)v57;
          v57[2] = v44;
        }
        else
        {
          uint64_t v43 = v41;
          uint64_t v58 = 0;
          unint64_t v59 = 0xE000000000000000;
          sub_1A56D5A28();
          sub_1A56D51C8();
          uint64_t v60 = v43;
          sub_1A56D5E78();
          sub_1A56D51C8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v55);
          uint64_t v22 = (uint64_t)v57;
          uint64_t *v57 = v51;
          *(void *)(v22 + 8) = v18;
          *(void *)(v22 + 16) = v43;
        }
        goto LABEL_4;
      }
      uint64_t v30 = v28;
      uint64_t v58 = 0;
      unint64_t v59 = 0xE000000000000000;
      sub_1A56D5A28();
      sub_1A56D51C8();
      uint64_t v60 = v30;
      sub_1A56D5E78();
      sub_1A56D51C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v50, v55);
      uint64_t v22 = (uint64_t)v57;
      uint64_t *v57 = v51;
      *(void *)(v22 + 8) = v18;
      *(void *)(v22 + 16) = v30;
    }
    uint64_t v23 = v53;
    goto LABEL_5;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
}

uint64_t SFAirDropReceive.AskRequest.AdvancedItemsDescription.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1A56D4C28();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672A10);
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D0BAC();
  sub_1A56D61D8();
  sub_1A55D0A90(v2, (uint64_t)v9, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *((void *)v9 + 3);
      uint64_t v28 = *((void *)v9 + 2);
      uint64_t v29 = v14;
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
      uint64_t v16 = &v9[*(int *)(v15 + 64)];
      uint64_t v27[3] = v9[*(int *)(v15 + 80)];
      uint64_t v18 = v30;
      uint64_t v17 = v31;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v16, v31);
      char v39 = 0;
      uint64_t v19 = v10;
      uint64_t v20 = v33;
      sub_1A56D5DE8();
      swift_bridgeObjectRelease();
      if (v20)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
      }
      else
      {
        char v38 = 2;
        sub_1A56D5DE8();
        swift_bridgeObjectRelease();
        char v37 = 3;
        sub_1A55D07F4(&qword_1E9670478, MEMORY[0x1E4F27928]);
        uint64_t v26 = v31;
        sub_1A56D5E38();
        char v36 = 4;
        sub_1A56D5DF8();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v26);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v19);
    case 2u:
      char v41 = 0;
      uint64_t v21 = v33;
      sub_1A56D5DE8();
      if (v21) {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      char v40 = 5;
      goto LABEL_18;
    case 3u:
      char v43 = 0;
      uint64_t v22 = v33;
      sub_1A56D5DE8();
      if (v22) {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      char v42 = 7;
      goto LABEL_18;
    case 4u:
      char v45 = 0;
      uint64_t v23 = v33;
      sub_1A56D5DE8();
      if (v23) {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      char v44 = 6;
      goto LABEL_18;
    case 5u:
      char v47 = 0;
      uint64_t v24 = v33;
      sub_1A56D5DE8();
      if (v24) {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      char v46 = 8;
      sub_1A56D5E08();
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v10);
    case 6u:
      char v48 = 0;
      sub_1A56D5DE8();
      goto LABEL_15;
    default:
      char v35 = 0;
      uint64_t v13 = v33;
      sub_1A56D5DE8();
      if (v13)
      {
LABEL_15:
        (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        char v34 = 1;
LABEL_18:
        sub_1A56D5E18();
        return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v10);
      }
  }
}

uint64_t sub_1A55CE7E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SFAirDropReceive.AskRequest.AdvancedItemsDescription.init(from:)(a1, a2);
}

uint64_t sub_1A55CE7FC(void *a1)
{
  return SFAirDropReceive.AskRequest.AdvancedItemsDescription.encode(to:)(a1);
}

uint64_t sub_1A55CE818@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1A54E9E98(a2, a3);
      uint64_t v10 = (char *)sub_1A56D48E8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1A56D4908();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1A56D48F8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1A55CEA7CLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1A54EA09C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1A56D48E8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1A56D4908();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1A56D48F8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

void *sub_1A55CEA8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672A88);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 80);
  uint64_t v5 = sub_1A55CEBE8(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1A55D4DAC();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1A55CEB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1A55CEBE8(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  char v28 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v29 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(a4 + 48) + 80 * v14;
    ++v12;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
    char v21 = *(unsigned char *)(v18 + 24);
    uint64_t v22 = *(void *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v24 = *(void *)(v18 + 48);
    uint64_t v25 = *(void *)(v18 + 72);
    long long v26 = *(_OWORD *)(v18 + 56);
    *(unsigned char *)uint64_t v10 = *(unsigned char *)v18;
    *(void *)(v10 + 8) = v19;
    *(void *)(v10 + 16) = v20;
    *(unsigned char *)(v10 + 24) = v21;
    *(void *)(v10 + 32) = v22;
    *(void *)(v10 + 40) = v23;
    *(void *)(v10 + 48) = v24;
    *(_OWORD *)(v10 + 56) = v26;
    *(void *)(v10 + 72) = v25;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v29)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v29)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v29)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v29)
              {
                unint64_t v8 = 0;
                int64_t v11 = v29 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v27;
      uint64_t result = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A55CEE74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1A55CE818((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1A55CEF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1A56D48E8();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1A56D4908();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1A56D48F8();
  sub_1A55CE818(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1A55CF004(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1A55CF26CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1A54E9E98(a3, a4);
                  sub_1A54E9E98(a1, a2);
                  char v17 = sub_1A55CEF4C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1A54EA09C(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1A54E9E98(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1A55CEF4C(v21, v22, v20, a3, a4);
                  sub_1A54EA09C(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1A54E9E98(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1A54E9E98(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1A55CEE74(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1A54EA09C(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s7Sharing16SFAirDropReceiveO10AskRequestV24AdvancedItemsDescriptionO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v89 = a1;
  uint64_t v90 = (unsigned char *)a2;
  uint64_t v86 = sub_1A56D4C28();
  uint64_t v88 = *(void *)(v86 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v86);
  uint64_t v84 = &v81[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  uint64_t v85 = &v81[-v4];
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v87 = (uint64_t *)&v81[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v81[-v9];
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (uint64_t *)&v81[-v12];
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (uint64_t *)&v81[-v15];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  unint64_t v19 = (uint64_t *)&v81[-v18];
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (uint64_t *)&v81[-v21];
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (uint64_t *)&v81[-v23];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672A68);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  char v28 = &v81[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v29 = (double *)&v28[*(int *)(v26 + 56)];
  sub_1A55D0A90(v89, (uint64_t)v28, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
  sub_1A55D0A90((uint64_t)v90, (uint64_t)v29, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
  uint64_t v90 = v28;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1A55D0A90((uint64_t)v90, (uint64_t)v22, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      uint64_t v34 = v22[1];
      uint64_t v89 = *v22;
      char v35 = (uint64_t *)v22[2];
      uint64_t v36 = v22[3];
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
      uint64_t v38 = *(int *)(v37 + 64);
      char v39 = (char *)v22 + v38;
      uint64_t v40 = *(int *)(v37 + 80);
      int v41 = *((unsigned __int8 *)v22 + v40);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v88 + 8))((char *)v22 + v38, v86);
        swift_bridgeObjectRelease();
        uint64_t v30 = (uint64_t)v90;
        goto LABEL_48;
      }
      uint64_t v87 = v35;
      int v82 = v41;
      double v42 = *v29;
      uint64_t v43 = *((void *)v29 + 1);
      uint64_t v44 = *((void *)v29 + 3);
      int v83 = (uint64_t *)*((void *)v29 + 2);
      char v45 = (char *)v29 + v38;
      int v46 = *((unsigned __int8 *)v29 + v40);
      char v47 = *(void (**)(unsigned char *, char *, uint64_t))(v88 + 32);
      char v48 = v39;
      uint64_t v49 = v86;
      v47(v85, v48, v86);
      v47(v84, v45, v49);
      if (v89 == *(void *)&v42 && v34 == v43)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v52 = (uint64_t)v90;
      }
      else
      {
        char v51 = sub_1A56D5F28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = (uint64_t)v90;
        if ((v51 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_61:
          uint64_t v80 = *(void (**)(unsigned char *, uint64_t))(v88 + 8);
          v80(v84, v49);
          v80(v85, v49);
          goto LABEL_62;
        }
      }
      if (v87 == v83 && v36 == v44)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v74 = sub_1A56D5F28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v74 & 1) == 0) {
          goto LABEL_61;
        }
      }
      uint64_t v76 = v84;
      uint64_t v75 = v85;
      char v77 = sub_1A56D4BD8();
      uint64_t v78 = *(void (**)(unsigned char *, uint64_t))(v88 + 8);
      v78(v76, v49);
      v78(v75, v49);
      if ((v77 & 1) == 0)
      {
LABEL_62:
        sub_1A55D0AF8(v52, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
        return 0;
      }
      int v79 = v82 ^ v46;
      sub_1A55D0AF8(v52, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      return v79 ^ 1u;
    case 2u:
      uint64_t v30 = (uint64_t)v90;
      sub_1A55D0A90((uint64_t)v90, (uint64_t)v19, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      uint64_t v53 = *v19;
      uint64_t v54 = v19[1];
      uint64_t v33 = v19[2];
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_48;
      }
      uint64_t v55 = *((void *)v29 + 2);
      if (v53 == *(void *)v29 && v54 == *((void *)v29 + 1)) {
        goto LABEL_41;
      }
      char v57 = sub_1A56D5F28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v57) {
        goto LABEL_42;
      }
      goto LABEL_40;
    case 3u:
      uint64_t v30 = (uint64_t)v90;
      sub_1A55D0A90((uint64_t)v90, (uint64_t)v16, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      uint64_t v31 = *v16;
      uint64_t v32 = v16[1];
      uint64_t v33 = v16[2];
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_48;
      }
      goto LABEL_21;
    case 4u:
      uint64_t v30 = (uint64_t)v90;
      sub_1A55D0A90((uint64_t)v90, (uint64_t)v13, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      uint64_t v31 = *v13;
      uint64_t v32 = v13[1];
      uint64_t v33 = v13[2];
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_21;
      }
      goto LABEL_48;
    case 5u:
      uint64_t v30 = (uint64_t)v90;
      sub_1A55D0A90((uint64_t)v90, (uint64_t)v10, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      uint64_t v60 = *(void *)v10;
      uint64_t v61 = *((void *)v10 + 1);
      double v62 = *((double *)v10 + 2);
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_48;
      }
      double v63 = v29[2];
      if (v60 == *(void *)v29 && v61 == *((void *)v29 + 1))
      {
        swift_bridgeObjectRelease_n();
        BOOL v66 = v62 == v63;
      }
      else
      {
        char v65 = sub_1A56D5F28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v65 & 1) == 0) {
          goto LABEL_40;
        }
        BOOL v66 = v62 == v63;
      }
      goto LABEL_43;
    case 6u:
      uint64_t v30 = (uint64_t)v90;
      uint64_t v67 = v87;
      sub_1A55D0A90((uint64_t)v90, (uint64_t)v87, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      uint64_t v68 = *v67;
      uint64_t v69 = v67[1];
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_48;
      }
      if (v68 == *(void *)v29 && v69 == *((void *)v29 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v71 = sub_1A56D5F28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v71 & 1) == 0) {
          goto LABEL_40;
        }
      }
      sub_1A55D0AF8(v30, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      return 1;
    default:
      uint64_t v30 = (uint64_t)v90;
      sub_1A55D0A90((uint64_t)v90, (uint64_t)v24, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      uint64_t v31 = *v24;
      uint64_t v32 = v24[1];
      uint64_t v33 = v24[2];
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_48:
        swift_bridgeObjectRelease();
        sub_1A54E4D44(v30, &qword_1E9672A68);
        return 0;
      }
LABEL_21:
      uint64_t v55 = *((void *)v29 + 2);
      if (v31 == *(void *)v29 && v32 == *((void *)v29 + 1))
      {
LABEL_41:
        swift_bridgeObjectRelease_n();
        goto LABEL_42;
      }
      char v59 = sub_1A56D5F28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
      {
LABEL_40:
        sub_1A55D0AF8(v30, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
        return 0;
      }
LABEL_42:
      BOOL v66 = v33 == v55;
LABEL_43:
      uint64_t v72 = v66;
      sub_1A55D0AF8(v30, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      return v72;
  }
}

uint64_t _s7Sharing16SFAirDropReceiveO10AskRequestV8ItemInfoV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  int v2 = a1[24];
  uint64_t v3 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v18 = *((void *)a1 + 8);
  uint64_t v19 = *((void *)a1 + 6);
  uint64_t v17 = *((void *)a1 + 9);
  int v6 = a2[24];
  uint64_t v8 = *((void *)a2 + 4);
  uint64_t v7 = *((void *)a2 + 5);
  uint64_t v10 = *((void *)a2 + 6);
  uint64_t v9 = *((void *)a2 + 7);
  uint64_t v11 = *((void *)a2 + 9);
  uint64_t v16 = *((void *)a2 + 8);
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2))
  {
    if (v2 != v6) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_1A56D5F28();
    uint64_t result = 0;
    if (v12 & 1) == 0 || ((v2 ^ v6)) {
      return result;
    }
  }
  if (v3 != v8 || v4 != v7)
  {
    char v14 = sub_1A56D5F28();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (!v5)
  {
    if (!v9)
    {
LABEL_20:
      if (v18 == v16 && v17 == v11) {
        return 1;
      }
      return sub_1A56D5F28();
    }
    return 0;
  }
  if (!v9) {
    return 0;
  }
  if (v19 == v10 && v5 == v9) {
    goto LABEL_20;
  }
  char v15 = sub_1A56D5F28();
  uint64_t result = 0;
  if (v15) {
    goto LABEL_20;
  }
  return result;
}

BOOL _s7Sharing16SFAirDropReceiveO10AskRequestV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672A70);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  char v14 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v111 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v111 - v18;
  if ((_s7Sharing9SFAirDropO17PermissionRequestV18InterventionActionV2eeoiySbAGy_x_G_AItFZ_0() & 1) == 0) {
    return 0;
  }
  uint64_t v116 = v5;
  uint64_t v20 = (int *)type metadata accessor for SFAirDropReceive.AskRequest(0);
  uint64_t v21 = v20[5];
  char v22 = *(unsigned char *)(a1 + v21 + 16);
  long long v119 = *(_OWORD *)(a1 + v21);
  char v120 = v22;
  uint64_t v23 = (long long *)(a2 + v21);
  char v24 = *((unsigned char *)v23 + 16);
  long long v117 = *v23;
  char v118 = v24;
  if ((_s7Sharing9SFAirDropO12TransferTypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v119, (uint64_t)&v117) & 1) == 0
    || *(void *)(a1 + v20[6]) != *(void *)(a2 + v20[6])
    || *(unsigned __int8 *)(a1 + v20[7]) != *(unsigned __int8 *)(a2 + v20[7])
    || *(unsigned __int8 *)(a1 + v20[8]) != *(unsigned __int8 *)(a2 + v20[8])
    || *(unsigned __int8 *)(a1 + v20[9]) != *(unsigned __int8 *)(a2 + v20[9]))
  {
    return 0;
  }
  uint64_t v26 = v20[10];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = *(void *)(a1 + v26 + 8);
  int64_t v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  if (v28)
  {
    if (!v30) {
      return 0;
    }
    if (*v27 != *v29 || v28 != v30)
    {
      char v31 = sub_1A56D5F28();
      BOOL result = 0;
      if ((v31 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v30)
  {
    return 0;
  }
  uint64_t v32 = v20[11];
  uint64_t v33 = *(void *)(a1 + v32);
  uint64_t v34 = *(void *)(a1 + v32 + 8);
  char v35 = (void *)(a2 + v32);
  if (v33 != *v35 || v34 != v35[1])
  {
    char v36 = sub_1A56D5F28();
    BOOL result = 0;
    if ((v36 & 1) == 0) {
      return result;
    }
  }
  uint64_t v37 = v20[12];
  uint64_t v38 = *(void *)(a1 + v37);
  uint64_t v39 = *(void *)(a1 + v37 + 8);
  uint64_t v40 = (void *)(a2 + v37);
  if (v38 != *v40 || v39 != v40[1])
  {
    char v41 = sub_1A56D5F28();
    BOOL result = 0;
    if ((v41 & 1) == 0) {
      return result;
    }
  }
  uint64_t v42 = v20[13];
  uint64_t v43 = *(void *)(a1 + v42);
  uint64_t v44 = *(void *)(a1 + v42 + 8);
  char v45 = (void *)(a2 + v42);
  if (v43 != *v45 || v44 != v45[1])
  {
    char v46 = sub_1A56D5F28();
    BOOL result = 0;
    if ((v46 & 1) == 0) {
      return result;
    }
  }
  uint64_t v47 = v20[14];
  char v48 = (void *)(a1 + v47);
  uint64_t v49 = *(void *)(a1 + v47 + 8);
  uint64_t v50 = (void *)(a2 + v47);
  uint64_t v51 = v50[1];
  if (v49)
  {
    if (!v51) {
      return 0;
    }
    if (*v48 != *v50 || v49 != v51)
    {
      char v52 = sub_1A56D5F28();
      BOOL result = 0;
      if ((v52 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v51)
  {
    return 0;
  }
  uint64_t v53 = v20[15];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = *(void *)(a1 + v53 + 8);
  uint64_t v56 = (void *)(a2 + v53);
  uint64_t v57 = v56[1];
  if (v55)
  {
    if (!v57) {
      return 0;
    }
    if (*v54 != *v56 || v55 != v57)
    {
      char v58 = sub_1A56D5F28();
      BOOL result = 0;
      if ((v58 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v57)
  {
    return 0;
  }
  uint64_t v59 = v20[16];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = *(void *)(a1 + v59 + 8);
  double v62 = (void *)(a2 + v59);
  uint64_t v63 = v62[1];
  if (v61)
  {
    if (!v63) {
      return 0;
    }
    if (*v60 != *v62 || v61 != v63)
    {
      char v64 = sub_1A56D5F28();
      BOOL result = 0;
      if ((v64 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v63)
  {
    return 0;
  }
  uint64_t v65 = v20[17];
  BOOL v66 = (void *)(a1 + v65);
  uint64_t v67 = *(void *)(a1 + v65 + 8);
  uint64_t v68 = (void *)(a2 + v65);
  uint64_t v69 = v68[1];
  if (v67)
  {
    if (!v69) {
      return 0;
    }
    if (*v66 != *v68 || v67 != v69)
    {
      char v70 = sub_1A56D5F28();
      BOOL result = 0;
      if ((v70 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v69)
  {
    return 0;
  }
  uint64_t v71 = v20[18];
  uint64_t v72 = (void *)(a1 + v71);
  uint64_t v73 = *(void *)(a1 + v71 + 8);
  char v74 = (void *)(a2 + v71);
  uint64_t v75 = v74[1];
  if (v73)
  {
    if (!v75) {
      return 0;
    }
    if (*v72 != *v74 || v73 != v75)
    {
      char v76 = sub_1A56D5F28();
      BOOL result = 0;
      if ((v76 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v75)
  {
    return 0;
  }
  uint64_t v77 = v20[19];
  uint64_t v78 = *(void *)(a1 + v77);
  uint64_t v79 = *(void *)(a1 + v77 + 8);
  uint64_t v80 = (void *)(a2 + v77);
  if (v78 == *v80 && v79 == v80[1] || (v81 = sub_1A56D5F28(), BOOL result = 0, (v81 & 1) != 0))
  {
    unint64_t v115 = v20;
    uint64_t v82 = v20[20];
    int v83 = *(void **)(a2 + v82);
    id v114 = *(id *)(a1 + v82);
    if (v114)
    {
      if (!v83) {
        return 0;
      }
      type metadata accessor for CGImage(0);
      uint64_t v113 = v84;
      uint64_t v112 = sub_1A55D07F4((unint64_t *)&qword_1E9672A78, type metadata accessor for CGImage);
      id v111 = v83;
      id v114 = v114;
      char v85 = sub_1A56D4D08();

      if ((v85 & 1) == 0) {
        return 0;
      }
    }
    else if (v83)
    {
      return 0;
    }
    uint64_t v86 = v115[21];
    uint64_t v87 = *(void **)(a2 + v86);
    id v114 = *(id *)(a1 + v86);
    if (v114)
    {
      if (!v87) {
        return 0;
      }
      type metadata accessor for CGImage(0);
      uint64_t v113 = v88;
      uint64_t v112 = sub_1A55D07F4((unint64_t *)&qword_1E9672A78, type metadata accessor for CGImage);
      id v111 = v87;
      id v114 = v114;
      char v89 = sub_1A56D4D08();

      if ((v89 & 1) == 0) {
        return 0;
      }
    }
    else if (v87)
    {
      return 0;
    }
    uint64_t v90 = v115[22];
    uint64_t v91 = *(void **)(a2 + v90);
    id v114 = *(id *)(a1 + v90);
    if (v114)
    {
      if (!v91) {
        return 0;
      }
      type metadata accessor for CGImage(0);
      uint64_t v113 = v92;
      uint64_t v112 = sub_1A55D07F4((unint64_t *)&qword_1E9672A78, type metadata accessor for CGImage);
      id v111 = v91;
      id v114 = v114;
      char v93 = sub_1A56D4D08();

      if ((v93 & 1) == 0) {
        return 0;
      }
    }
    else if (v91)
    {
      return 0;
    }
    uint64_t v94 = v115[23];
    char v95 = (void *)(a1 + v94);
    uint64_t v96 = *(void *)(a1 + v94 + 8);
    char v97 = (void *)(a2 + v94);
    uint64_t v98 = v97[1];
    if (!v96)
    {
      uint64_t v99 = v115;
      if (v98) {
        return 0;
      }
      goto LABEL_85;
    }
    if (!v98) {
      return 0;
    }
    uint64_t v99 = v115;
    if (*v95 == *v97 && v96 == v98 || (v100 = sub_1A56D5F28(), BOOL result = 0, (v100 & 1) != 0))
    {
LABEL_85:
      sub_1A55CA334(a1 + v99[24], (uint64_t)v19);
      sub_1A55CA334(a2 + v99[24], (uint64_t)v17);
      uint64_t v101 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_1A55CA334((uint64_t)v19, (uint64_t)v10);
      sub_1A55CA334((uint64_t)v17, v101);
      uint64_t v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
      v116 += 48;
      if (v102((uint64_t)v10, 1, v4) == 1)
      {
        sub_1A54E4D44((uint64_t)v17, &qword_1E9671128);
        sub_1A54E4D44((uint64_t)v19, &qword_1E9671128);
        if (v102(v101, 1, v4) == 1)
        {
          sub_1A54E4D44((uint64_t)v10, &qword_1E9671128);
LABEL_92:
          if ((sub_1A55CA92C(*(void *)(a1 + v115[25]), *(void *)(a2 + v115[25])) & 1) == 0
            || (sub_1A55CAD70(*(void *)(a1 + v115[26]), *(void *)(a2 + v115[26])) & 1) == 0)
          {
            return 0;
          }
          uint64_t v104 = v115[27];
          uint64_t v105 = *(void *)(a1 + v104);
          unint64_t v106 = *(void *)(a1 + v104 + 8);
          uint64_t v107 = (uint64_t *)(a2 + v104);
          uint64_t v108 = *v107;
          unint64_t v109 = v107[1];
          if (v106 >> 60 == 15)
          {
            if (v109 >> 60 == 15) {
              return 1;
            }
            goto LABEL_98;
          }
          if (v109 >> 60 == 15)
          {
LABEL_98:
            sub_1A54F6308(v105, v106);
            sub_1A54F6308(v108, v109);
            sub_1A553FC9C(v105, v106);
            sub_1A553FC9C(v108, v109);
            return 0;
          }
          sub_1A54F6308(v105, v106);
          sub_1A54F6308(v108, v109);
          char v110 = sub_1A55CF004(v105, v106, v108, v109);
          sub_1A553FC9C(v108, v109);
          sub_1A553FC9C(v105, v106);
          return (v110 & 1) != 0;
        }
      }
      else
      {
        sub_1A55CA334((uint64_t)v10, (uint64_t)v14);
        if (v102(v101, 1, v4) != 1)
        {
          sub_1A55D0C00(v101, (uint64_t)v7, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
          char v103 = _s7Sharing16SFAirDropReceiveO10AskRequestV24AdvancedItemsDescriptionO2eeoiySbAG_AGtFZ_0((uint64_t)v14, (uint64_t)v7);
          sub_1A55D0AF8((uint64_t)v7, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
          sub_1A54E4D44((uint64_t)v17, &qword_1E9671128);
          sub_1A54E4D44((uint64_t)v19, &qword_1E9671128);
          sub_1A55D0AF8((uint64_t)v14, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
          sub_1A54E4D44((uint64_t)v10, &qword_1E9671128);
          if ((v103 & 1) == 0) {
            return 0;
          }
          goto LABEL_92;
        }
        sub_1A54E4D44((uint64_t)v17, &qword_1E9671128);
        sub_1A54E4D44((uint64_t)v19, &qword_1E9671128);
        sub_1A55D0AF8((uint64_t)v14, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      }
      sub_1A54E4D44((uint64_t)v10, &qword_1E9672A70);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1A55D06D8()
{
  unint64_t result = qword_1E9672958;
  if (!qword_1E9672958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672958);
  }
  return result;
}

unint64_t sub_1A55D072C()
{
  unint64_t result = qword_1E9672968;
  if (!qword_1E9672968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672968);
  }
  return result;
}

unint64_t sub_1A55D0780()
{
  unint64_t result = qword_1E9672970;
  if (!qword_1E9672970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672970);
  }
  return result;
}

uint64_t type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(uint64_t a1)
{
  return sub_1A550D49C(a1, (uint64_t *)&unk_1E966B218);
}

uint64_t sub_1A55D07F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A55D083C()
{
  unint64_t result = qword_1E96729A0;
  if (!qword_1E96729A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96729A0);
  }
  return result;
}

unint64_t sub_1A55D0890()
{
  unint64_t result = qword_1E96729B8;
  if (!qword_1E96729B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96729B8);
  }
  return result;
}

unint64_t sub_1A55D08E4()
{
  unint64_t result = qword_1E96729C0;
  if (!qword_1E96729C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96729C0);
  }
  return result;
}

uint64_t sub_1A55D0938(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9672980);
    sub_1A55D07F4(a2, MEMORY[0x1E4F276F0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A55D09CC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9672990);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A55D0A3C()
{
  unint64_t result = qword_1E96729E0;
  if (!qword_1E96729E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96729E0);
  }
  return result;
}

uint64_t sub_1A55D0A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A55D0AF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A55D0B58()
{
  unint64_t result = qword_1E96729F0;
  if (!qword_1E96729F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E96729F0);
  }
  return result;
}

unint64_t sub_1A55D0BAC()
{
  unint64_t result = qword_1E9672A08;
  if (!qword_1E9672A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A08);
  }
  return result;
}

uint64_t sub_1A55D0C00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A55D0C68()
{
  return sub_1A55D07F4(&qword_1E96710D0, (void (*)(uint64_t))type metadata accessor for SFAirDrop.TransferIdentifier);
}

unint64_t sub_1A55D0CB4()
{
  unint64_t result = qword_1E9672A18;
  if (!qword_1E9672A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A18);
  }
  return result;
}

unint64_t sub_1A55D0D0C()
{
  unint64_t result = qword_1E9672A20;
  if (!qword_1E9672A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A20);
  }
  return result;
}

unint64_t sub_1A55D0D64()
{
  unint64_t result = qword_1E9672A28;
  if (!qword_1E9672A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A28);
  }
  return result;
}

unint64_t sub_1A55D0DBC()
{
  unint64_t result = qword_1E9672A30;
  if (!qword_1E9672A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A30);
  }
  return result;
}

id sub_1A55D0E10@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 80));
  *a2 = v3;

  return v3;
}

id sub_1A55D0E5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 84));
  *a2 = v3;

  return v3;
}

id sub_1A55D0EA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for SFAirDropReceive.AskRequest(0) + 88));
  *a2 = v3;

  return v3;
}

void *_s10AskRequestVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v63 = *a2;
    *a1 = *a2;
    a1 = (void *)(v63 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1A56D4CB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    unsigned __int8 v13 = v10[16];
    sub_1A55118A0(*(void *)v10, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    unsigned char v9[16] = v13;
    uint64_t v14 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v16 = a3[10];
    uint64_t v17 = a3[11];
    uint64_t v18 = (void *)((char *)a1 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v89 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v89;
    uint64_t v20 = (void *)((char *)a1 + v17);
    uint64_t v21 = (void *)((char *)a2 + v17);
    uint64_t v90 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v90;
    uint64_t v22 = a3[12];
    uint64_t v23 = a3[13];
    char v24 = (void *)((char *)a1 + v22);
    uint64_t v25 = (void *)((char *)a2 + v22);
    uint64_t v87 = v25[1];
    *char v24 = *v25;
    v24[1] = v87;
    uint64_t v26 = (void *)((char *)a1 + v23);
    uint64_t v27 = (void *)((char *)a2 + v23);
    uint64_t v88 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v88;
    uint64_t v28 = a3[14];
    uint64_t v29 = a3[15];
    uint64_t v30 = (void *)((char *)a1 + v28);
    char v31 = (void *)((char *)a2 + v28);
    uint64_t v85 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v85;
    uint64_t v32 = (void *)((char *)a1 + v29);
    uint64_t v33 = (void *)((char *)a2 + v29);
    uint64_t v86 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v86;
    uint64_t v34 = a3[16];
    uint64_t v35 = a3[17];
    char v36 = (void *)((char *)a1 + v34);
    uint64_t v37 = (void *)((char *)a2 + v34);
    uint64_t v83 = v37[1];
    void *v36 = *v37;
    v36[1] = v83;
    uint64_t v38 = (void *)((char *)a1 + v35);
    uint64_t v39 = (void *)((char *)a2 + v35);
    uint64_t v84 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v84;
    uint64_t v40 = a3[18];
    uint64_t v41 = a3[19];
    uint64_t v42 = (void *)((char *)a1 + v40);
    uint64_t v43 = (void *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    void *v42 = *v43;
    v42[1] = v44;
    char v45 = (void *)((char *)a1 + v41);
    char v46 = (void *)((char *)a2 + v41);
    uint64_t v47 = v46[1];
    *char v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = a3[20];
    uint64_t v49 = a3[21];
    uint64_t v50 = *(void **)((char *)a2 + v48);
    *(void *)((char *)a1 + v48) = v50;
    uint64_t v82 = *(void **)((char *)a2 + v49);
    *(void *)((char *)a1 + v49) = v82;
    uint64_t v51 = a3[22];
    uint64_t v52 = a3[23];
    uint64_t v53 = *(void **)((char *)a2 + v51);
    *(void *)((char *)a1 + v51) = v53;
    uint64_t v54 = (void *)((char *)a1 + v52);
    uint64_t v55 = (void *)((char *)a2 + v52);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    uint64_t v57 = a3[24];
    uint64_t v92 = (void *)((char *)a1 + v57);
    char v81 = (void *)((char *)a2 + v57);
    uint64_t v58 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
    uint64_t v79 = *(void *)(v58 - 8);
    uint64_t v80 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v79 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v59 = v50;
    id v60 = v82;
    id v61 = v53;
    swift_bridgeObjectRetain();
    if (v80(v81, 1, v58))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
      memcpy(v92, v81, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v72 = v81[1];
          void *v92 = *v81;
          v92[1] = v72;
          uint64_t v73 = v81[3];
          v92[2] = v81[2];
          v92[3] = v73;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
          uint64_t v75 = *(int *)(v74 + 64);
          uint64_t v91 = (char *)v92 + v75;
          char v76 = (char *)v81 + v75;
          uint64_t v77 = sub_1A56D4C28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v91, v76, v77);
          *((unsigned char *)v92 + *(int *)(v74 + 80)) = *((unsigned char *)v81 + *(int *)(v74 + 80));
          break;
        case 6u:
          uint64_t v78 = v81[1];
          void *v92 = *v81;
          v92[1] = v78;
          goto LABEL_7;
        default:
          uint64_t v64 = v81[1];
          void *v92 = *v81;
          v92[1] = v64;
          v92[2] = v81[2];
LABEL_7:
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v92, 0, 1, v58);
    }
    uint64_t v65 = a3[26];
    *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
    *(void *)((char *)a1 + v65) = *(void *)((char *)a2 + v65);
    uint64_t v66 = a3[27];
    uint64_t v67 = (char *)a1 + v66;
    uint64_t v68 = (_OWORD *)((char *)a2 + v66);
    unint64_t v69 = *(void *)((char *)a2 + v66 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v67 = *v68;
    }
    else
    {
      uint64_t v70 = *(void *)v68;
      sub_1A54E9E98(v70, v69);
      *(void *)uint64_t v67 = v70;
      *((void *)v67 + 1) = v69;
    }
  }
  return a1;
}

uint64_t _s10AskRequestVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_1A5512CD4(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[24];
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120) + 64);
        uint64_t v12 = sub_1A56D4C28();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
        break;
      default:
        break;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(a1 + a2[27]);
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_1A54EA09C(v10, v9);
  }
  return result;
}

uint64_t _s10AskRequestVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  unsigned __int8 v12 = *(unsigned char *)(v9 + 16);
  sub_1A55118A0(*(void *)v9, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v87 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v87;
  uint64_t v19 = (void *)(a1 + v16);
  uint64_t v20 = (void *)(a2 + v16);
  uint64_t v88 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v88;
  uint64_t v21 = a3[12];
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)(a1 + v21);
  char v24 = (void *)(a2 + v21);
  uint64_t v85 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v85;
  uint64_t v25 = (void *)(a1 + v22);
  uint64_t v26 = (void *)(a2 + v22);
  uint64_t v86 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v86;
  uint64_t v27 = a3[14];
  uint64_t v28 = a3[15];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v83 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v83;
  char v31 = (void *)(a1 + v28);
  uint64_t v32 = (void *)(a2 + v28);
  uint64_t v84 = v32[1];
  *char v31 = *v32;
  v31[1] = v84;
  uint64_t v33 = a3[16];
  uint64_t v34 = a3[17];
  uint64_t v35 = (void *)(a1 + v33);
  char v36 = (void *)(a2 + v33);
  uint64_t v81 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v81;
  uint64_t v37 = (void *)(a1 + v34);
  uint64_t v38 = (void *)(a2 + v34);
  uint64_t v82 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v82;
  uint64_t v39 = a3[18];
  uint64_t v40 = a3[19];
  uint64_t v41 = (void *)(a1 + v39);
  uint64_t v42 = (void *)(a2 + v39);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = (void *)(a1 + v40);
  char v45 = (void *)(a2 + v40);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  uint64_t v47 = a3[20];
  uint64_t v48 = a3[21];
  uint64_t v49 = *(void **)(a2 + v47);
  *(void *)(a1 + v47) = v49;
  uint64_t v80 = *(void **)(a2 + v48);
  *(void *)(a1 + v48) = v80;
  uint64_t v50 = a3[22];
  uint64_t v51 = a3[23];
  uint64_t v52 = *(void **)(a2 + v50);
  *(void *)(a1 + v50) = v52;
  uint64_t v53 = (void *)(a1 + v51);
  uint64_t v54 = (void *)(a2 + v51);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = a3[24];
  uint64_t v90 = (void *)(a1 + v56);
  uint64_t v79 = (void *)(a2 + v56);
  uint64_t v57 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v77 = *(void *)(v57 - 8);
  uint64_t v78 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v77 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v58 = v49;
  id v59 = v80;
  id v60 = v52;
  swift_bridgeObjectRetain();
  if (v78(v79, 1, v57))
  {
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
    memcpy(v90, v79, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v70 = v79[1];
        *uint64_t v90 = *v79;
        v90[1] = v70;
        uint64_t v71 = v79[3];
        v90[2] = v79[2];
        v90[3] = v71;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
        uint64_t v73 = *(int *)(v72 + 64);
        uint64_t v89 = (char *)v90 + v73;
        uint64_t v74 = (char *)v79 + v73;
        uint64_t v75 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v89, v74, v75);
        *((unsigned char *)v90 + *(int *)(v72 + 80)) = *((unsigned char *)v79 + *(int *)(v72 + 80));
        break;
      case 6u:
        uint64_t v76 = v79[1];
        *uint64_t v90 = *v79;
        v90[1] = v76;
        goto LABEL_5;
      default:
        uint64_t v62 = v79[1];
        *uint64_t v90 = *v79;
        v90[1] = v62;
        v90[2] = v79[2];
LABEL_5:
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v90, 0, 1, v57);
  }
  uint64_t v63 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(void *)(a1 + v63) = *(void *)(a2 + v63);
  uint64_t v64 = a3[27];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = (_OWORD *)(a2 + v64);
  unint64_t v67 = *(void *)(a2 + v64 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v65 = *v66;
  }
  else
  {
    uint64_t v68 = *(void *)v66;
    sub_1A54E9E98(v68, v67);
    *(void *)uint64_t v65 = v68;
    *(void *)(v65 + 8) = v67;
  }
  return a1;
}

uint64_t _s10AskRequestVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  unsigned __int8 v12 = *(unsigned char *)(v9 + 16);
  sub_1A55118A0(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  unsigned __int8 v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_1A5512CD4(v13, v14, v15);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[11];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)(a1 + v22);
  char v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[13];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[14];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[15];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[16];
  uint64_t v35 = (void *)(a1 + v34);
  char v36 = (void *)(a2 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[17];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[18];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[19];
  uint64_t v44 = (void *)(a1 + v43);
  char v45 = (void *)(a2 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[20];
  uint64_t v47 = *(void **)(a1 + v46);
  uint64_t v48 = *(void **)(a2 + v46);
  *(void *)(a1 + v46) = v48;
  id v49 = v48;

  uint64_t v50 = a3[21];
  uint64_t v51 = *(void **)(a1 + v50);
  uint64_t v52 = *(void **)(a2 + v50);
  *(void *)(a1 + v50) = v52;
  id v53 = v52;

  uint64_t v54 = a3[22];
  uint64_t v55 = *(void **)(a1 + v54);
  uint64_t v56 = *(void **)(a2 + v54);
  *(void *)(a1 + v54) = v56;
  id v57 = v56;

  uint64_t v58 = a3[23];
  id v59 = (void *)(a1 + v58);
  id v60 = (void *)(a2 + v58);
  *id v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = a3[24];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  uint64_t v64 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
  LODWORD(v8) = v66(v62, 1, v64);
  int v67 = v66(v63, 1, v64);
  if (v8)
  {
    if (!v67)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v62 = *v63;
          v62[1] = v63[1];
          v62[2] = v63[2];
          v62[3] = v63[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
          uint64_t v79 = *(int *)(v78 + 64);
          uint64_t v87 = (char *)v62 + v79;
          uint64_t v80 = (char *)v63 + v79;
          uint64_t v81 = sub_1A56D4C28();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v87, v80, v81);
          *((unsigned char *)v62 + *(int *)(v78 + 80)) = *((unsigned char *)v63 + *(int *)(v78 + 80));
          break;
        case 6u:
          *uint64_t v62 = *v63;
          v62[1] = v63[1];
          goto LABEL_5;
        default:
          *uint64_t v62 = *v63;
          v62[1] = v63[1];
          v62[2] = v63[2];
LABEL_5:
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
    memcpy(v62, v63, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_10;
  }
  if (v67)
  {
    sub_1A55D0AF8((uint64_t)v62, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1A55D0AF8((uint64_t)v62, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        v62[2] = v63[2];
        v62[3] = v63[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
        uint64_t v83 = *(int *)(v82 + 64);
        uint64_t v84 = (char *)v62 + v83;
        uint64_t v85 = (char *)v63 + v83;
        uint64_t v86 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
        *((unsigned char *)v62 + *(int *)(v82 + 80)) = *((unsigned char *)v63 + *(int *)(v82 + 80));
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        v62[2] = v63[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_10:
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[27];
  uint64_t v70 = (uint64_t *)(a1 + v69);
  uint64_t v71 = (uint64_t *)(a2 + v69);
  unint64_t v72 = *(void *)(a2 + v69 + 8);
  if (*(void *)(a1 + v69 + 8) >> 60 != 15)
  {
    if (v72 >> 60 != 15)
    {
      uint64_t v74 = *v71;
      sub_1A54E9E98(v74, v72);
      uint64_t v75 = *v70;
      unint64_t v76 = v70[1];
      uint64_t *v70 = v74;
      v70[1] = v72;
      sub_1A54EA09C(v75, v76);
      return a1;
    }
    sub_1A551BBE0((uint64_t)v70);
    goto LABEL_15;
  }
  if (v72 >> 60 == 15)
  {
LABEL_15:
    *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
    return a1;
  }
  uint64_t v73 = *v71;
  sub_1A54E9E98(v73, v72);
  uint64_t *v70 = v73;
  v70[1] = v72;
  return a1;
}

uint64_t _s10AskRequestVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[22];
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  uint64_t v20 = (_OWORD *)(a1 + v19);
  uint64_t v21 = (_OWORD *)(a2 + v19);
  uint64_t v22 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v25 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v25;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
      uint64_t v27 = *(int *)(v26 + 64);
      uint64_t v28 = (char *)v20 + v27;
      uint64_t v29 = (char *)v21 + v27;
      uint64_t v30 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *((unsigned char *)v20 + *(int *)(v26 + 80)) = *((unsigned char *)v21 + *(int *)(v26 + 80));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(v23 + 64));
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v31 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  *(_OWORD *)(a1 + a3[27]) = *(_OWORD *)(a2 + a3[27]);
  return a1;
}

uint64_t _s10AskRequestVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1A56D4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  unsigned __int8 v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_1A5512CD4(v11, v12, v13);
  uint64_t v14 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[13];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[14];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[15];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  void *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[16];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (uint64_t *)(a2 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[17];
  uint64_t v52 = (void *)(a1 + v51);
  id v53 = (uint64_t *)(a2 + v51);
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  void *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[18];
  id v57 = (void *)(a1 + v56);
  uint64_t v58 = (uint64_t *)(a2 + v56);
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  void *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  uint64_t v61 = a3[19];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (uint64_t *)(a2 + v61);
  uint64_t v65 = *v63;
  uint64_t v64 = v63[1];
  *uint64_t v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[20];
  int v67 = *(void **)(a1 + v66);
  *(void *)(a1 + v66) = *(void *)(a2 + v66);

  uint64_t v68 = a3[21];
  uint64_t v69 = *(void **)(a1 + v68);
  *(void *)(a1 + v68) = *(void *)(a2 + v68);

  uint64_t v70 = a3[22];
  uint64_t v71 = *(void **)(a1 + v70);
  *(void *)(a1 + v70) = *(void *)(a2 + v70);

  uint64_t v72 = a3[23];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (uint64_t *)(a2 + v72);
  uint64_t v76 = *v74;
  uint64_t v75 = v74[1];
  void *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  uint64_t v77 = a3[24];
  uint64_t v78 = (_OWORD *)(a1 + v77);
  uint64_t v79 = (_OWORD *)(a2 + v77);
  uint64_t v80 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(0);
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v81 + 48);
  int v83 = v82(v78, 1, v80);
  int v84 = v82(v79, 1, v80);
  if (!v83)
  {
    if (!v84)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1A55D0AF8((uint64_t)v78, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v92 = v79[1];
        _OWORD *v78 = *v79;
        v78[1] = v92;
        uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
        uint64_t v94 = *(int *)(v93 + 64);
        char v95 = (char *)v78 + v94;
        uint64_t v96 = (char *)v79 + v94;
        uint64_t v97 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
        *((unsigned char *)v78 + *(int *)(v93 + 80)) = *((unsigned char *)v79 + *(int *)(v93 + 80));
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v91 = *(void *)(v81 + 64);
LABEL_8:
      memcpy(v78, v79, v91);
      goto LABEL_14;
    }
    sub_1A55D0AF8((uint64_t)v78, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
LABEL_7:
    size_t v91 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128) - 8) + 64);
    goto LABEL_8;
  }
  if (v84) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v85 = v79[1];
    _OWORD *v78 = *v79;
    v78[1] = v85;
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
    uint64_t v87 = *(int *)(v86 + 64);
    uint64_t v88 = (char *)v78 + v87;
    uint64_t v89 = (char *)v79 + v87;
    uint64_t v90 = sub_1A56D4C28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
    *((unsigned char *)v78 + *(int *)(v86 + 80)) = *((unsigned char *)v79 + *(int *)(v86 + 80));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v78, v79, *(void *)(v81 + 64));
  }
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
LABEL_14:
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  swift_bridgeObjectRelease();
  uint64_t v98 = a3[27];
  uint64_t v99 = (uint64_t *)(a1 + v98);
  char v100 = (uint64_t *)(a2 + v98);
  unint64_t v101 = *(void *)(a1 + v98 + 8);
  if (v101 >> 60 != 15)
  {
    unint64_t v102 = v100[1];
    if (v102 >> 60 != 15)
    {
      uint64_t v103 = *v99;
      *uint64_t v99 = *v100;
      v99[1] = v102;
      sub_1A54EA09C(v103, v101);
      return a1;
    }
    sub_1A551BBE0((uint64_t)v99);
  }
  *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
  return a1;
}

uint64_t _s10AskRequestVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1A55D2B24);
}

uint64_t sub_1A55D2B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 96);
    return v12(v14, a2, v13);
  }
}

uint64_t _s10AskRequestVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1A55D2C6C);
}

uint64_t sub_1A55D2C6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 44) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671128);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 96);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1A55D2DA0()
{
  sub_1A56D4CB8();
  if (v0 <= 0x3F)
  {
    sub_1A55D2ED8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1A55D2ED8()
{
  if (!qword_1E966B228)
  {
    type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription(255);
    unint64_t v0 = sub_1A56D5898();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E966B228);
    }
  }
}

uint64_t _s10AskRequestV8ItemInfoVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s10AskRequestV8ItemInfoVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10AskRequestV8ItemInfoVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s10AskRequestV8ItemInfoVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10AskRequestV8ItemInfoVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10AskRequestV8ItemInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo()
{
  return &type metadata for SFAirDropReceive.AskRequest.ItemInfo;
}

void *_s10AskRequestV24AdvancedItemsDescriptionOwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (void *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2[3];
        a1[2] = a2[2];
        a1[3] = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
        uint64_t v11 = *(int *)(v10 + 64);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        *((unsigned char *)a1 + *(int *)(v10 + 80)) = *((unsigned char *)a2 + *(int *)(v10 + 80));
        break;
      case 6u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s10AskRequestV24AdvancedItemsDescriptionOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120) + 64);
      uint64_t v4 = sub_1A56D4C28();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

void *_s10AskRequestV24AdvancedItemsDescriptionOwcp(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
      uint64_t v9 = *(int *)(v8 + 64);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      *((unsigned char *)a1 + *(int *)(v8 + 80)) = *((unsigned char *)a2 + *(int *)(v8 + 80));
      break;
    case 6u:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      goto LABEL_3;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      a1[2] = a2[2];
LABEL_3:
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s10AskRequestV24AdvancedItemsDescriptionOwca(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1A55D0AF8((uint64_t)a1, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
        uint64_t v6 = *(int *)(v5 + 64);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_1A56D4C28();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        *((unsigned char *)a1 + *(int *)(v5 + 80)) = *((unsigned char *)a2 + *(int *)(v5 + 80));
        break;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        goto LABEL_4;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
LABEL_4:
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *_s10AskRequestV24AdvancedItemsDescriptionOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
    uint64_t v8 = *(int *)(v7 + 64);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1A56D4C28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(v7 + 80)) = *((unsigned char *)a2 + *(int *)(v7 + 80));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s10AskRequestV24AdvancedItemsDescriptionOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1A55D0AF8((uint64_t)a1, type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671120);
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1A56D4C28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *((unsigned char *)a1 + *(int *)(v7 + 80)) = *((unsigned char *)a2 + *(int *)(v7 + 80));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A55D3A04()
{
  uint64_t v3 = &unk_1A56F4C00;
  uint64_t result = sub_1A56D4C28();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    uint64_t v4 = &v2;
    uint64_t v5 = &unk_1A56F4C00;
    long long v6 = &unk_1A56F4C00;
    uint64_t v7 = &unk_1A56F4C00;
    uint64_t v8 = &unk_1A56F4C00;
    uint64_t v9 = &unk_1A56F4B80;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *_s10AskRequestV24AdvancedItemsDescriptionO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55D3BA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys()
{
  return &type metadata for SFAirDropReceive.AskRequest.AdvancedItemsDescription.CodingKeys;
}

unsigned char *_s10AskRequestV8ItemInfoV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55D3CA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AskRequestV8ItemInfoV10CodingKeysOMa()
{
  return &_s10AskRequestV8ItemInfoV10CodingKeysON;
}

uint64_t _s10AskRequestV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10AskRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *uint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55D3E3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AskRequestV10CodingKeysOMa()
{
  return &_s10AskRequestV10CodingKeysON;
}

unint64_t sub_1A55D3E78()
{
  unint64_t result = qword_1E9672A38;
  if (!qword_1E9672A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A38);
  }
  return result;
}

unint64_t sub_1A55D3ED0()
{
  unint64_t result = qword_1E9672A40;
  if (!qword_1E9672A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A40);
  }
  return result;
}

unint64_t sub_1A55D3F28()
{
  unint64_t result = qword_1E9672A48;
  if (!qword_1E9672A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A48);
  }
  return result;
}

unint64_t sub_1A55D3F80()
{
  unint64_t result = qword_1E9672A50;
  if (!qword_1E9672A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A50);
  }
  return result;
}

unint64_t sub_1A55D3FD8()
{
  unint64_t result = qword_1E9672A58;
  if (!qword_1E9672A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A58);
  }
  return result;
}

unint64_t sub_1A55D4030()
{
  unint64_t result = qword_1E9672A60;
  if (!qword_1E9672A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672A60);
  }
  return result;
}

uint64_t sub_1A55D4084(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726566736E617274 && a2 == 0xED00007365707954 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x416F7475416E6163 && a2 == 0xED00007470656363 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A573A410 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73497265646E6573 && a2 == 0xEA0000000000654DLL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A573A430 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x75427265646E6573 && a2 == 0xEE004449656C646ELL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A573A450 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F4D7265646E6573 && a2 == 0xEF656D614E6C6564 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6D457265646E6573 && a2 == 0xEB000000006C6961 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6D457265646E6573 && a2 == 0xEF687361486C6961 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A573A470 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x69467265646E6573 && a2 == 0xEF656D614E747372 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x614C7265646E6573 && a2 == 0xEE00656D614E7473 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x44497265646E6573 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x63497265646E6573 && a2 == 0xEA00000000006E6FLL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A573A490 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4977656976657270 && a2 == 0xEC0000006567616DLL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A573A4B0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A573A4D0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x736D6574496C7275 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x61506D6F74737563 && a2 == 0xED000064616F6C79)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else
  {
    char v6 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 23;
    }
    else {
      return 24;
    }
  }
}

uint64_t sub_1A55D4AD8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001A573A4F0 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x506D6F42656C6966 && a2 == 0xEB00000000687461 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69447349656C6966 && a2 == 0xEF79726F74636572 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x54627553656C6966 && a2 == 0xEB00000000657079 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65707954656C6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1A55D4DAC()
{
  return swift_release();
}

unint64_t sub_1A55D4DB4(char a1)
{
  unint64_t result = 0xD000000000000020;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000034;
      break;
    case 4:
      unint64_t result = 0xD000000000000043;
      break;
    case 5:
      unint64_t result = 0xD000000000000039;
      break;
    case 6:
      unint64_t result = 0xD000000000000042;
      break;
    case 7:
      unint64_t result = 0xD000000000000038;
      break;
    case 8:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000027;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55D4ED8()
{
  unint64_t v1 = (void *)sub_1A56D5098();
  id v2 = objc_msgSend(v0, sel_cuValueForEntitlementNoCache_, v1);

  if (v2)
  {
    sub_1A56D5968();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1A54E3E90((uint64_t)v4, (uint64_t)v5);
  if (v6)
  {
    if (swift_dynamicCast()) {
      return *(void *)&v4[0];
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1A553E2C0((uint64_t)v5);
    return 0;
  }
}

unint64_t static Logger.sharingSubsystem.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_1A55D4FE4(uint64_t a1)
{
  return sub_1A55D5120(a1, qword_1E966C098);
}

uint64_t static Logger.airDropNWClient.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55D51BC(&qword_1E966C0B0, (uint64_t)qword_1E966C098, a1);
}

uint64_t sub_1A55D5034(uint64_t a1)
{
  return sub_1A55D5120(a1, qword_1E966BF18);
}

uint64_t static Logger.askToAirDrop.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55D51BC(&qword_1E966BF38, (uint64_t)qword_1E966BF18, a1);
}

uint64_t sub_1A55D5080(uint64_t a1)
{
  return sub_1A55D5120(a1, qword_1E9672A90);
}

uint64_t static Logger.communal.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55D51BC(&qword_1E9670330, (uint64_t)qword_1E9672A90, a1);
}

uint64_t sub_1A55D50C4(uint64_t a1)
{
  return sub_1A55D5120(a1, qword_1EB3DC850);
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55D51BC(qword_1EB3DB9F8, (uint64_t)qword_1EB3DC850, a1);
}

uint64_t sub_1A55D5100(uint64_t a1)
{
  return sub_1A55D5120(a1, qword_1E9672AA8);
}

uint64_t sub_1A55D5120(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1A56D4D98();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1A56D4D88();
}

uint64_t static Logger.utility.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A55D51BC(&qword_1E9670340, (uint64_t)qword_1E9672AA8, a1);
}

uint64_t sub_1A55D51BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1A56D4D98();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t Range<>.interval.getter()
{
  return sub_1A55D526C(&qword_1E9672AC0);
}

uint64_t ClosedRange<>.interval.getter()
{
  return sub_1A55D526C(&qword_1E9672AC8);
}

uint64_t sub_1A55D526C(uint64_t *a1)
{
  return sub_1A56D4AD8();
}

unsigned char *static FormatStyle<>.oslog(_:)@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static OSLogDateFormatter.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t OSLogDateFormatter.Style.hash(into:)()
{
  return sub_1A56D60C8();
}

unint64_t sub_1A55D52F8()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 1701669236;
      break;
    case 3:
      unint64_t result = 0x69546F4E656D6974;
      break;
    case 4:
      unint64_t result = 1819047270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55D539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A55D867C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A55D53C4(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5BC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D5400(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5BC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55D543C(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5D18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D5478(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5D18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55D54B4(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5D6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D54F0(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5D6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55D552C(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5C1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D5568(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5C1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55D55A4(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5CC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D55E0(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5CC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1A55D561C(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5C70();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D5658(uint64_t a1)
{
  unint64_t v2 = sub_1A55D5C70();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t OSLogDateFormatter.Style.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AD0);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AD8);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AE0);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AE8);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AF0);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AF8);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D5BC8();
  sub_1A56D61D8();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_1A55D5D18();
      uint64_t v21 = v39;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_1A55D5CC4();
      uint64_t v22 = v29;
      uint64_t v21 = v39;
      sub_1A56D5D98();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_1A55D5C70();
      uint64_t v22 = v32;
      uint64_t v21 = v39;
      sub_1A56D5D98();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_1A55D5C1C();
      uint64_t v22 = v35;
      uint64_t v21 = v39;
      sub_1A56D5D98();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_1A55D5D6C();
      uint64_t v19 = v39;
      sub_1A56D5D98();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

unint64_t sub_1A55D5BC8()
{
  unint64_t result = qword_1E9672B00;
  if (!qword_1E9672B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B00);
  }
  return result;
}

unint64_t sub_1A55D5C1C()
{
  unint64_t result = qword_1E9672B08;
  if (!qword_1E9672B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B08);
  }
  return result;
}

unint64_t sub_1A55D5C70()
{
  unint64_t result = qword_1E9672B10;
  if (!qword_1E9672B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B10);
  }
  return result;
}

unint64_t sub_1A55D5CC4()
{
  unint64_t result = qword_1E9672B18;
  if (!qword_1E9672B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B18);
  }
  return result;
}

unint64_t sub_1A55D5D18()
{
  unint64_t result = qword_1E9672B20;
  if (!qword_1E9672B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B20);
  }
  return result;
}

unint64_t sub_1A55D5D6C()
{
  unint64_t result = qword_1E9672B28;
  if (!qword_1E9672B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B28);
  }
  return result;
}

uint64_t OSLogDateFormatter.Style.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t OSLogDateFormatter.Style.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B30);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  id v53 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B38);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B40);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B48);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B50);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B58);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1A55D5BC8();
  uint64_t v18 = v56;
  sub_1A56D61A8();
  if (v18)
  {
LABEL_7:
    uint64_t v33 = (uint64_t)v55;
    return __swift_destroy_boxed_opaque_existential_0Tm(v33);
  }
  uint64_t v39 = v10;
  char v40 = v12;
  uint64_t v19 = v9;
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  uint64_t v41 = 0;
  uint64_t v56 = v14;
  uint64_t v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v16;
  uint64_t v25 = sub_1A56D5D78();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_1A56D5A78();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E96704F0);
    *uint64_t v32 = &type metadata for OSLogDateFormatter.Style;
    sub_1A56D5C98();
    sub_1A56D5A68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
    goto LABEL_7;
  }
  char v26 = *(unsigned char *)(v25 + 32);
  switch(v26)
  {
    case 1:
      char v58 = 1;
      sub_1A55D5D18();
      uint64_t v35 = v41;
      sub_1A56D5C88();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      goto LABEL_19;
    case 2:
      char v59 = 2;
      sub_1A55D5CC4();
      uint64_t v36 = v41;
      sub_1A56D5C88();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
      goto LABEL_19;
    case 3:
      char v60 = 3;
      sub_1A55D5C70();
      uint64_t v37 = v41;
      sub_1A56D5C88();
      if (v37) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v46);
LABEL_19:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      goto LABEL_21;
    case 4:
      char v61 = 4;
      sub_1A55D5C1C();
      uint64_t v38 = v41;
      sub_1A56D5C88();
      if (v38) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      uint64_t v23 = v54;
      goto LABEL_21;
    default:
      char v27 = *(unsigned char *)(v25 + 32);
      char v57 = 0;
      sub_1A55D5D6C();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      sub_1A56D5C88();
      if (v28)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
        uint64_t v33 = (uint64_t)v55;
        return __swift_destroy_boxed_opaque_existential_0Tm(v33);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      char v26 = v27;
LABEL_21:
      *uint64_t v23 = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v55);
      break;
  }
  return result;
}

uint64_t sub_1A55D6560@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OSLogDateFormatter.Style.init(from:)(a1, a2);
}

uint64_t sub_1A55D6578(void *a1)
{
  return OSLogDateFormatter.Style.encode(to:)(a1);
}

void OSLogDateFormatter.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

id sub_1A55D659C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  unint64_t v1 = (void *)sub_1A56D5098();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  return v0;
}

uint64_t OSLogDateFormatter.format(_:)()
{
  id v0 = sub_1A55D659C();
  unint64_t v1 = (void *)sub_1A56D4AF8();
  id v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  uint64_t v3 = sub_1A56D50D8();
  return v3;
}

uint64_t OSLogDateFormatter.parse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v6 = sub_1A56D4C28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v24) = *v3;
  id v13 = sub_1A55D659C();
  uint64_t v23 = a1;
  uint64_t v26 = a2;
  uint64_t v14 = (void *)sub_1A56D5098();
  id v15 = objc_msgSend(v13, sel_dateFromString_, v14);

  if (v15)
  {
    sub_1A56D4BE8();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v12, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v22, v12, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
  }
  sub_1A55D6B28((uint64_t)v12);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1A56D5A28();
  sub_1A56D51C8();
  sub_1A56D51C8();
  sub_1A56D51C8();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  uint64_t v18 = v24;
  unint64_t v19 = v25;
  sub_1A54F38F4();
  swift_allocError();
  *(void *)uint64_t v20 = v18;
  *(void *)(v20 + 8) = v19;
  *(void *)(v20 + 16) = 0xD00000000000004CLL;
  *(void *)(v20 + 24) = 0x80000001A573A7E0;
  *(void *)(v20 + 32) = 110;
  *(_OWORD *)(v20 + 40) = 0u;
  *(_OWORD *)(v20 + 56) = 0u;
  *(_OWORD *)(v20 + 72) = 0u;
  *(_OWORD *)(v20 + 88) = 0u;
  return swift_willThrow();
}

uint64_t sub_1A55D6B28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9671108);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OSLogDateFormatter.hash(into:)()
{
  return sub_1A56D60C8();
}

BOOL static OSLogDateFormatter.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A55D6BC8()
{
  return 0x656C797473;
}

uint64_t sub_1A55D6BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A55D6C6C(uint64_t a1)
{
  unint64_t v2 = sub_1A55D6E2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D6CA8(uint64_t a1)
{
  unint64_t v2 = sub_1A55D6E2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t OSLogDateFormatter.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D6E2C();
  sub_1A56D61D8();
  char v10 = v7;
  sub_1A55D6E80();
  sub_1A56D5E38();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A55D6E2C()
{
  unint64_t result = qword_1E9672B68;
  if (!qword_1E9672B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B68);
  }
  return result;
}

unint64_t sub_1A55D6E80()
{
  unint64_t result = qword_1E9672B70;
  if (!qword_1E9672B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B70);
  }
  return result;
}

uint64_t OSLogDateFormatter.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t OSLogDateFormatter.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55D6E2C();
  sub_1A56D61A8();
  if (!v2)
  {
    sub_1A55D716C();
    sub_1A56D5D48();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

void sub_1A55D7084(uint64_t *a1@<X8>)
{
  id v2 = sub_1A55D659C();
  uint64_t v3 = (void *)sub_1A56D4AF8();
  id v4 = objc_msgSend(v2, sel_stringFromDate_, v3);

  uint64_t v5 = sub_1A56D50D8();
  uint64_t v7 = v6;

  *a1 = v5;
  a1[1] = v7;
}

uint64_t sub_1A55D711C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return OSLogDateFormatter.parse(_:)(*a1, a1[1], a2);
}

uint64_t sub_1A55D713C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OSLogDateFormatter.init(from:)(a1, a2);
}

uint64_t sub_1A55D7154(void *a1)
{
  return OSLogDateFormatter.encode(to:)(a1);
}

unint64_t sub_1A55D716C()
{
  unint64_t result = qword_1E9672B80;
  if (!qword_1E9672B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672B80);
  }
  return result;
}

uint64_t TinyDateRangeFormatter.format(_:)()
{
  uint64_t v0 = sub_1A56D4CF8();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1A56D4CD8();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_1A56D4B28();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1A56D4BC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AC0);
  sub_1A56D4AD8();
  if (v7 >= 1.0)
  {
    sub_1A56D4B18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B88);
    sub_1A56D4BA8();
    uint64_t v13 = v4;
    uint64_t v12 = v3;
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1A56F4E80;
    sub_1A56D4B48();
    sub_1A56D4B88();
    sub_1A56D4B98();
    sub_1A55D888C(v9);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1A56D4CC8();
    sub_1A56D4CE8();
    sub_1A56D4BB8();
    sub_1A55D9D60(&qword_1E9672B90, MEMORY[0x1E4F27908]);
    uint64_t v10 = v12;
    sub_1A56D5788();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v10);
    uint64_t v16 = 32;
    unint64_t v17 = 0xE100000000000000;
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1A5547048();
    uint64_t v8 = sub_1A56D5948();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_1A56D4AD8();
    sub_1A56D5668();
    sub_1A56D51C8();
    return v18;
  }
  return v8;
}

uint64_t static TinyDateRangeFormatter.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A55D75D0(uint64_t a1)
{
  unint64_t v2 = sub_1A55D8BA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D760C(uint64_t a1)
{
  unint64_t v2 = sub_1A55D8BA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TinyDateRangeFormatter.encode(to:)(void *a1)
{
  return sub_1A55D83B0(a1, &qword_1E9672B98, (void (*)(void))sub_1A55D8BA4);
}

uint64_t TinyDateRangeFormatter.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t TinyDateRangeFormatter.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A55D76E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TinyDateRangeFormatter.format(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A55D770C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55D855C(a1, a2, a3, &qword_1E9672B98, (void (*)(void))sub_1A55D8BA4);
}

uint64_t sub_1A55D7748()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A55D7780()
{
  return sub_1A56D60E8();
}

uint64_t FuzzyTinyDateRangeFormatter.format(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4CF8();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1A56D4CD8();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1A56D4B28();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1A56D4BC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AC0);
  v17[1] = a1;
  sub_1A56D4AD8();
  double v10 = fabs(v9);
  if (v10 >= 36000.0)
  {
    if (v10 >= 604800.0)
    {
      if (v10 >= 1814400.0)
      {
        if (v10 >= 5184000.0)
        {
          if (v10 >= 15552000.0)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B88);
            sub_1A56D4BA8();
            uint64_t v11 = swift_allocObject();
            *(_OWORD *)(v11 + 16) = xmmword_1A56F0E60;
            if (v10 >= 25920000.0) {
              sub_1A56D4B68();
            }
            else {
              sub_1A56D4B78();
            }
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B88);
            sub_1A56D4BA8();
            uint64_t v11 = swift_allocObject();
            *(_OWORD *)(v11 + 16) = xmmword_1A56F4E90;
            sub_1A56D4B78();
            sub_1A56D4B58();
          }
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B88);
          sub_1A56D4BA8();
          uint64_t v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_1A56F0E60;
          sub_1A56D4B58();
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B88);
        sub_1A56D4BA8();
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1A56F4E90;
        sub_1A56D4B58();
        sub_1A56D4B18();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B88);
      sub_1A56D4BA8();
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1A56F0E60;
      sub_1A56D4B18();
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672B88);
    sub_1A56D4BA8();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1A56F0E60;
    sub_1A56D4B48();
  }
  sub_1A55D888C(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1A56D4B18();
  sub_1A56D4CC8();
  sub_1A56D4CE8();
  sub_1A56D4BB8();
  sub_1A55D9D60(&qword_1E9672B90, MEMORY[0x1E4F27908]);
  sub_1A56D5788();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v20 = 32;
  unint64_t v21 = 0xE100000000000000;
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1A5547048();
  uint64_t v12 = sub_1A56D5948();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v22 = v12;
  uint64_t v23 = v14;
  uint64_t v20 = 28525;
  unint64_t v21 = 0xE200000000000000;
  uint64_t v18 = 109;
  unint64_t v19 = 0xE100000000000000;
  uint64_t v15 = sub_1A56D5948();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t static FuzzyTinyDateRangeFormatter.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A55D7F64(uint64_t a1)
{
  unint64_t v2 = sub_1A55D8BF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D7FA0(uint64_t a1)
{
  unint64_t v2 = sub_1A55D8BF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FuzzyTinyDateRangeFormatter.encode(to:)(void *a1)
{
  return sub_1A55D83B0(a1, &qword_1E9672BA8, (void (*)(void))sub_1A55D8BF8);
}

uint64_t FuzzyTinyDateRangeFormatter.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A55D8040@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = FuzzyTinyDateRangeFormatter.format(_:)(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1A55D8068(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55D855C(a1, a2, a3, &qword_1E9672BA8, (void (*)(void))sub_1A55D8BF8);
}

uint64_t CompactDateRangeFormatter.format(_:)()
{
  sub_1A55D8C4C();
  sub_1A56D4C08();
  LOBYTE(v1) = 0;
  sub_1A56D4C08();
  swift_bridgeObjectRelease_n();
  sub_1A56D4C08();
  sub_1A56D51C8();
  sub_1A56D4C08();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672AC0);
  sub_1A56D4C08();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  sub_1A55D8CA0();
  sub_1A56D5788();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  return v1;
}

uint64_t static CompactDateRangeFormatter.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A55D82FC(uint64_t a1)
{
  unint64_t v2 = sub_1A55D8CF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55D8338(uint64_t a1)
{
  unint64_t v2 = sub_1A55D8CF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CompactDateRangeFormatter.encode(to:)(void *a1)
{
  return sub_1A55D83B0(a1, &qword_1E9672BC8, (void (*)(void))sub_1A55D8CF4);
}

uint64_t sub_1A55D83B0(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A56D61D8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CompactDateRangeFormatter.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A55D84F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CompactDateRangeFormatter.format(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A55D8520(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A55D855C(a1, a2, a3, &qword_1E9672BC8, (void (*)(void))sub_1A55D8CF4);
}

uint64_t sub_1A55D855C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1A56D61D8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A55D867C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001A573A850 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000 || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69546F4E656D6974 && a2 == 0xEE00656E6F5A656DLL || (sub_1A56D5F28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1819047270 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1A56D5F28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1A55D888C(uint64_t a1)
{
  uint64_t v2 = sub_1A56D4BA8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672D10);
    uint64_t v9 = sub_1A56D5A08();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1A55D9D60(&qword_1E9672D18, MEMORY[0x1E4F278E8]);
      uint64_t v16 = sub_1A56D4FE8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1A55D9D60(&qword_1E9672D20, MEMORY[0x1E4F278E8]);
          char v23 = sub_1A56D5058();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        unint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1A55D8BA4()
{
  unint64_t result = qword_1E9672BA0;
  if (!qword_1E9672BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BA0);
  }
  return result;
}

unint64_t sub_1A55D8BF8()
{
  unint64_t result = qword_1E9672BB0;
  if (!qword_1E9672BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BB0);
  }
  return result;
}

unint64_t sub_1A55D8C4C()
{
  unint64_t result = qword_1E9672BB8;
  if (!qword_1E9672BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BB8);
  }
  return result;
}

unint64_t sub_1A55D8CA0()
{
  unint64_t result = qword_1E9672BC0;
  if (!qword_1E9672BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BC0);
  }
  return result;
}

unint64_t sub_1A55D8CF4()
{
  unint64_t result = qword_1E9672BD0;
  if (!qword_1E9672BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BD0);
  }
  return result;
}

unint64_t sub_1A55D8D4C()
{
  unint64_t result = qword_1E9672BD8;
  if (!qword_1E9672BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BD8);
  }
  return result;
}

unint64_t sub_1A55D8DA4()
{
  unint64_t result = qword_1E9672BE0;
  if (!qword_1E9672BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BE0);
  }
  return result;
}

unint64_t sub_1A55D8DFC()
{
  unint64_t result = qword_1E9672BE8;
  if (!qword_1E9672BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BE8);
  }
  return result;
}

unint64_t sub_1A55D8E54()
{
  unint64_t result = qword_1E9672BF0;
  if (!qword_1E9672BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BF0);
  }
  return result;
}

unint64_t sub_1A55D8EAC()
{
  unint64_t result = qword_1E9672BF8;
  if (!qword_1E9672BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672BF8);
  }
  return result;
}

unint64_t sub_1A55D8F04()
{
  unint64_t result = qword_1E9672C00;
  if (!qword_1E9672C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C00);
  }
  return result;
}

unint64_t sub_1A55D8F5C()
{
  unint64_t result = qword_1E9672C08;
  if (!qword_1E9672C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C08);
  }
  return result;
}

unint64_t sub_1A55D8FB4()
{
  unint64_t result = qword_1E9672C10;
  if (!qword_1E9672C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C10);
  }
  return result;
}

unint64_t sub_1A55D900C()
{
  unint64_t result = qword_1E9672C18;
  if (!qword_1E9672C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C18);
  }
  return result;
}

unint64_t sub_1A55D9064()
{
  unint64_t result = qword_1E9672C20;
  if (!qword_1E9672C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C20);
  }
  return result;
}

unint64_t sub_1A55D90BC()
{
  unint64_t result = qword_1E9672C28;
  if (!qword_1E9672C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C28);
  }
  return result;
}

unint64_t sub_1A55D9114()
{
  unint64_t result = qword_1E9672C30;
  if (!qword_1E9672C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C30);
  }
  return result;
}

unint64_t sub_1A55D916C()
{
  unint64_t result = qword_1E9672C38;
  if (!qword_1E9672C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C38);
  }
  return result;
}

unint64_t sub_1A55D91C4()
{
  unint64_t result = qword_1E9672C40;
  if (!qword_1E9672C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C40);
  }
  return result;
}

unint64_t sub_1A55D921C()
{
  unint64_t result = qword_1E9672C48;
  if (!qword_1E9672C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C48);
  }
  return result;
}

unint64_t sub_1A55D9274()
{
  unint64_t result = qword_1E9672C50;
  if (!qword_1E9672C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C50);
  }
  return result;
}

unint64_t sub_1A55D92CC()
{
  unint64_t result = qword_1E9672C58;
  if (!qword_1E9672C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C58);
  }
  return result;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter()
{
  return &type metadata for OSLogDateFormatter;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.Style()
{
  return &type metadata for OSLogDateFormatter.Style;
}

ValueMetadata *type metadata accessor for TinyDateRangeFormatter()
{
  return &type metadata for TinyDateRangeFormatter;
}

ValueMetadata *type metadata accessor for FuzzyTinyDateRangeFormatter()
{
  return &type metadata for FuzzyTinyDateRangeFormatter;
}

ValueMetadata *type metadata accessor for CompactDateRangeFormatter()
{
  return &type metadata for CompactDateRangeFormatter;
}

ValueMetadata *type metadata accessor for CompactDateRangeFormatter.CodingKeys()
{
  return &type metadata for CompactDateRangeFormatter.CodingKeys;
}

ValueMetadata *type metadata accessor for FuzzyTinyDateRangeFormatter.CodingKeys()
{
  return &type metadata for FuzzyTinyDateRangeFormatter.CodingKeys;
}

ValueMetadata *type metadata accessor for TinyDateRangeFormatter.CodingKeys()
{
  return &type metadata for TinyDateRangeFormatter.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for OSLogDateFormatter.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1A55D9444);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.CodingKeys()
{
  return &type metadata for OSLogDateFormatter.CodingKeys;
}

unsigned char *_s7Sharing18OSLogDateFormatterV5StyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55D9548);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.Style.CodingKeys()
{
  return &type metadata for OSLogDateFormatter.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.Style.DateWithTimeZoneCodingKeys()
{
  return &type metadata for OSLogDateFormatter.Style.DateWithTimeZoneCodingKeys;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.Style.DateCodingKeys()
{
  return &type metadata for OSLogDateFormatter.Style.DateCodingKeys;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.Style.TimeCodingKeys()
{
  return &type metadata for OSLogDateFormatter.Style.TimeCodingKeys;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.Style.TimeNoTimeZoneCodingKeys()
{
  return &type metadata for OSLogDateFormatter.Style.TimeNoTimeZoneCodingKeys;
}

ValueMetadata *type metadata accessor for OSLogDateFormatter.Style.FullCodingKeys()
{
  return &type metadata for OSLogDateFormatter.Style.FullCodingKeys;
}

unint64_t sub_1A55D95D4()
{
  unint64_t result = qword_1E9672C60;
  if (!qword_1E9672C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C60);
  }
  return result;
}

unint64_t sub_1A55D962C()
{
  unint64_t result = qword_1E9672C68;
  if (!qword_1E9672C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C68);
  }
  return result;
}

unint64_t sub_1A55D9684()
{
  unint64_t result = qword_1E9672C70;
  if (!qword_1E9672C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C70);
  }
  return result;
}

unint64_t sub_1A55D96DC()
{
  unint64_t result = qword_1E9672C78;
  if (!qword_1E9672C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C78);
  }
  return result;
}

unint64_t sub_1A55D9734()
{
  unint64_t result = qword_1E9672C80;
  if (!qword_1E9672C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C80);
  }
  return result;
}

unint64_t sub_1A55D978C()
{
  unint64_t result = qword_1E9672C88;
  if (!qword_1E9672C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C88);
  }
  return result;
}

unint64_t sub_1A55D97E4()
{
  unint64_t result = qword_1E9672C90;
  if (!qword_1E9672C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C90);
  }
  return result;
}

unint64_t sub_1A55D983C()
{
  unint64_t result = qword_1E9672C98;
  if (!qword_1E9672C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672C98);
  }
  return result;
}

unint64_t sub_1A55D9894()
{
  unint64_t result = qword_1E9672CA0;
  if (!qword_1E9672CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CA0);
  }
  return result;
}

unint64_t sub_1A55D98EC()
{
  unint64_t result = qword_1E9672CA8;
  if (!qword_1E9672CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CA8);
  }
  return result;
}

unint64_t sub_1A55D9944()
{
  unint64_t result = qword_1E9672CB0;
  if (!qword_1E9672CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CB0);
  }
  return result;
}

unint64_t sub_1A55D999C()
{
  unint64_t result = qword_1E9672CB8;
  if (!qword_1E9672CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CB8);
  }
  return result;
}

unint64_t sub_1A55D99F4()
{
  unint64_t result = qword_1E9672CC0;
  if (!qword_1E9672CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CC0);
  }
  return result;
}

unint64_t sub_1A55D9A4C()
{
  unint64_t result = qword_1E9672CC8;
  if (!qword_1E9672CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CC8);
  }
  return result;
}

unint64_t sub_1A55D9AA4()
{
  unint64_t result = qword_1E9672CD0;
  if (!qword_1E9672CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CD0);
  }
  return result;
}

unint64_t sub_1A55D9AFC()
{
  unint64_t result = qword_1E9672CD8;
  if (!qword_1E9672CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CD8);
  }
  return result;
}

unint64_t sub_1A55D9B54()
{
  unint64_t result = qword_1E9672CE0;
  if (!qword_1E9672CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CE0);
  }
  return result;
}

unint64_t sub_1A55D9BAC()
{
  unint64_t result = qword_1E9672CE8;
  if (!qword_1E9672CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CE8);
  }
  return result;
}

unint64_t sub_1A55D9C04()
{
  unint64_t result = qword_1E9672CF0;
  if (!qword_1E9672CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CF0);
  }
  return result;
}

unint64_t sub_1A55D9C5C()
{
  unint64_t result = qword_1E9672CF8;
  if (!qword_1E9672CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672CF8);
  }
  return result;
}

unint64_t sub_1A55D9CB4()
{
  unint64_t result = qword_1E9672D00;
  if (!qword_1E9672D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D00);
  }
  return result;
}

unint64_t sub_1A55D9D0C()
{
  unint64_t result = qword_1E9672D08;
  if (!qword_1E9672D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D08);
  }
  return result;
}

uint64_t sub_1A55D9D60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t SFAirDrop.DeviceRelationship.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 4;
  if (result < 4) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t SFAirDrop.DeviceRelationship.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1A55D9DDC()
{
  unint64_t result = qword_1E9672D28;
  if (!qword_1E9672D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D28);
  }
  return result;
}

unint64_t sub_1A55D9E30@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return SFAirDrop.DeviceRelationship.init(rawValue:)(*a1, a2);
}

void sub_1A55D9E38(void *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *_s18DeviceRelationshipOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55D9F10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFAirDrop.DeviceRelationship()
{
  return &type metadata for SFAirDrop.DeviceRelationship;
}

uint64_t sub_1A55D9F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_1A55DAC84(v10, v9, a2, a3);
  if (a1 && (v11 & 0x8000000000000000) == 0 && v11 < a1)
  {
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 24);
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  uint64_t v12 = sub_1A55DAC08(v10, a1, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = (int)a2;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  if (v12 < v13)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x1A55DA0B4);
  }
LABEL_16:
  uint64_t v14 = sub_1A56D4A58();
  uint64_t v16 = v15;
  uint64_t result = sub_1A54EA09C(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

Sharing::SFString_optional __swiftcall SFString.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1A56D5C68();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t SFString.rawValue.getter()
{
  unint64_t result = 0xD000000000000023;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000022;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000025;
      break;
    case 8:
      unint64_t result = 0xD000000000000024;
      break;
    case 9:
      unint64_t result = 0x4F435F454259414DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A55DA248(unsigned __int8 *a1, char *a2)
{
  return sub_1A5625F88(*a1, *a2);
}

uint64_t sub_1A55DA254()
{
  return sub_1A56D60E8();
}

uint64_t sub_1A55DA29C()
{
  return sub_1A56ABED4();
}

uint64_t sub_1A55DA2A4()
{
  return sub_1A56D60E8();
}

Sharing::SFString_optional sub_1A55DA2E8(Swift::String *a1)
{
  return SFString.init(rawValue:)(*a1);
}

unint64_t sub_1A55DA2F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SFString.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A55DA31C()
{
  uint64_t v0 = (void *)sub_1A56D5098();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  qword_1E9672D30 = (uint64_t)v1;
}

uint64_t SFString.localized.getter()
{
  uint64_t v1 = *v0;
  if (qword_1E9670348 != -1) {
    swift_once();
  }
  char v2 = (void *)qword_1E9672D30;
  if (qword_1E9672D30)
  {
    unint64_t v3 = (void *)sub_1A56D5098();
    swift_bridgeObjectRelease();
    unsigned int v4 = (void *)sub_1A56D5098();
    swift_bridgeObjectRelease();
    char v5 = (void *)sub_1A56D5098();
    id v6 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v3, v4, v5);

    uint64_t v7 = sub_1A56D50D8();
  }
  else
  {
    uint64_t v7 = 0xD000000000000023;
    switch(v1)
    {
      case 1:
        uint64_t v7 = 0xD000000000000022;
        break;
      case 2:
        uint64_t v7 = 0xD000000000000025;
        break;
      case 3:
        uint64_t v7 = 0xD000000000000016;
        break;
      case 4:
        uint64_t v7 = 0xD000000000000017;
        break;
      case 7:
        uint64_t v7 = 0xD000000000000025;
        break;
      case 8:
        uint64_t v7 = 0xD000000000000024;
        break;
      case 9:
        uint64_t v7 = 0x4F435F454259414DLL;
        break;
      default:
        return v7;
    }
  }
  return v7;
}

uint64_t SFString.format(_:)()
{
  SFString.localized.getter();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1A56D50E8();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::String __swiftcall String.init(_:)(Sharing::SFString a1)
{
  SFString.localized.getter();
  uint64_t v1 = sub_1A56D5268();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

Swift::String __swiftcall IDSIdentifierFormatStyle.format(_:)(Swift::String a1)
{
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1A55DAD70(8);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1A62693C0](v1, v3, v5, v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

uint64_t static IDSIdentifierFormatStyle.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A55DA884(uint64_t a1)
{
  unint64_t v2 = sub_1A55DAE0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1A55DA8C0(uint64_t a1)
{
  unint64_t v2 = sub_1A55DAE0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IDSIdentifierFormatStyle.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672D38);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55DAE0C();
  sub_1A56D61D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t IDSIdentifierFormatStyle.hashValue.getter()
{
  return sub_1A56D60E8();
}

uint64_t IDSIdentifierFormatStyle.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1A55DAA6C@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1A55DAD70(8);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1A62693C0](v2, v4, v6, v8);
  uint64_t v11 = v10;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9;
  a1[1] = v11;
  return result;
}

uint64_t sub_1A55DAAF8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9672D38);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A55DAE0C();
  sub_1A56D61D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A55DAC08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < result || result < v7)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x1A55DAC74);
  }
  return result;
}

uint64_t sub_1A55DAC84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x1A55DAD50);
  }
  return result;
}

uint64_t sub_1A55DAD70(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A56D51B8();
    return sub_1A56D5278();
  }
  return result;
}

unint64_t sub_1A55DAE0C()
{
  unint64_t result = qword_1E9672D40;
  if (!qword_1E9672D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D40);
  }
  return result;
}

unint64_t sub_1A55DAE64()
{
  unint64_t result = qword_1E9672D48;
  if (!qword_1E9672D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D48);
  }
  return result;
}

unint64_t sub_1A55DAEBC()
{
  unint64_t result = qword_1E9672D50;
  if (!qword_1E9672D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D50);
  }
  return result;
}

unint64_t sub_1A55DAF14()
{
  unint64_t result = qword_1E9672D58;
  if (!qword_1E9672D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D58);
  }
  return result;
}

unint64_t sub_1A55DAF6C()
{
  unint64_t result = qword_1E9672D60;
  if (!qword_1E9672D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D60);
  }
  return result;
}

unint64_t sub_1A55DAFC4()
{
  unint64_t result = qword_1E9672D68;
  if (!qword_1E9672D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SFString(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SFString(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A55DB174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SFString()
{
  return &type metadata for SFString;
}

ValueMetadata *type metadata accessor for IDSIdentifierFormatStyle()
{
  return &type metadata for IDSIdentifierFormatStyle;
}

ValueMetadata *type metadata accessor for IDSIdentifierFormatStyle.CodingKeys()
{
  return &type metadata for IDSIdentifierFormatStyle.CodingKeys;
}

unint64_t sub_1A55DB1D0()
{
  unint64_t result = qword_1E9672D70;
  if (!qword_1E9672D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D70);
  }
  return result;
}

unint64_t sub_1A55DB228()
{
  unint64_t result = qword_1E9672D78;
  if (!qword_1E9672D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D78);
  }
  return result;
}

unint64_t SF_os_activity.Scope.enter(dso:)(void *dso)
{
  unint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 16);
  int v6 = *(_DWORD *)(v1 + 20);
  unint64_t result = SF_os_activity.init(_:dso:options:)(dso, v3, v4, (os_activity_flag_t *)&v6, (unint64_t)&activity);
  if (activity)
  {
    os_activity_scope_enter(activity, (os_activity_scope_state_t)(v1 + 24));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A55DB2F8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A55DB320(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void static SF_os_activity.initiate(_:dso:options:execute:)(const char *a1, int a2, char a3, uint64_t isEscapingClosureAtFileLocation, os_activity_flag_t *a5, void *aBlock)
{
  os_activity_flag_t v9 = *a5;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v12 = v10;
  if (a3) {
    goto LABEL_6;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (isEscapingClosureAtFileLocation)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_1A55DC6A4;
    *(void *)(v14 + 24) = v13;
    uint64_t v30 = sub_1A55DC69C;
    uint64_t v31 = v14;
    uint64_t aBlocka = MEMORY[0x1E4F143A8];
    uint64_t v27 = 1107296256;
    BOOL v28 = sub_1A55DB320;
    uint64_t v29 = &block_descriptor_14;
    uint64_t v15 = _Block_copy(&aBlocka);
    _Block_copy(v12);
    swift_retain();
    swift_release();
    _os_activity_initiate((void *)isEscapingClosureAtFileLocation, a1, v9, v15);
    _Block_release(v15);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    _Block_release(v12);
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
LABEL_6:
    unint64_t v11 = (unint64_t)a1 >> 32;
    if (!((unint64_t)a1 >> 32))
    {
      if (a1 >> 11 == 27)
      {
LABEL_30:
        __break(1u);
        return;
      }
      LODWORD(v11) = a1 >> 16;
      if (a1 >> 16 <= 0x10)
      {
        if ((a1 & 0xFFFFFF80) == 0)
        {
          if (a1 > 0xFF)
          {
            __break(1u);
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          unsigned int v16 = ((_BYTE)a1 + 1);
LABEL_12:
          *(void *)description = (v16 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v16) & 0x38)) & 0x38));
          if (!isEscapingClosureAtFileLocation) {
            goto LABEL_14;
          }
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v12;
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = sub_1A55DBDF0;
          *(void *)(v18 + 24) = v17;
          uint64_t v30 = sub_1A55DBE10;
          uint64_t v31 = v18;
          uint64_t aBlocka = MEMORY[0x1E4F143A8];
          uint64_t v27 = 1107296256;
          BOOL v28 = sub_1A55DB320;
          uint64_t v29 = &block_descriptor_6;
          unint64_t v19 = _Block_copy(&aBlocka);
          _Block_copy(v12);
          swift_retain();
          swift_release();
          _os_activity_initiate((void *)isEscapingClosureAtFileLocation, description, v9, v19);
          _Block_release(v19);
          char v20 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if ((v20 & 1) == 0)
          {
LABEL_14:
            _Block_release(v12);
            return;
          }
          goto LABEL_29;
        }
LABEL_22:
        int v21 = (a1 & 0x3F) << 8;
        unsigned int v22 = (v21 | (a1 >> 6)) + 33217;
        unsigned int v23 = (v21 | (a1 >> 6) & 0x3F) << 8;
        unsigned int v24 = (((v23 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
        unsigned int v25 = (v23 | (a1 >> 12)) + 8487393;
        if (v11) {
          unsigned int v16 = v24;
        }
        else {
          unsigned int v16 = v25;
        }
        if (a1 < 0x800) {
          unsigned int v16 = v22;
        }
        goto LABEL_12;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  _Block_release(v10);
}

uint64_t sub_1A55DB710()
{
  qword_1E9672D80 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_none");

  return swift_unknownObjectRetain();
}

uint64_t sub_1A55DB74C()
{
  qword_1E966C7C8 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");

  return swift_unknownObjectRetain();
}

unint64_t SF_os_activity.init(_:dso:options:)@<X0>(void *dso@<X3>, unint64_t result@<X0>, char a3@<W2>, os_activity_flag_t *a4@<X4>, unint64_t a5@<X8>)
{
  int v6 = (char *)result;
  BOOL v7 = (void *)a5;
  os_activity_flag_t v8 = *a4;
  if ((a3 & 1) == 0)
  {
    if (result)
    {
      if (dso)
      {
        if (qword_1E966C7B8 == -1)
        {
LABEL_5:
          os_activity_flag_t v9 = qword_1E966C7C8;
LABEL_16:
          unint64_t result = (unint64_t)_os_activity_create(dso, v6, v9, v8);
LABEL_18:
          *BOOL v7 = result;
          return result;
        }
LABEL_29:
        unint64_t v16 = result;
        swift_once();
        int v6 = (char *)v16;
        goto LABEL_5;
      }
LABEL_17:
      unint64_t result = 0;
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_20;
  }
  a5 = HIDWORD(result);
  if (HIDWORD(result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (result >> 11 != 27)
  {
    LODWORD(a5) = WORD1(result);
    if (WORD1(result) <= 0x10u)
    {
      if ((result & 0xFFFFFF80) == 0)
      {
        if (result > 0xFF)
        {
          __break(1u);
          goto LABEL_29;
        }
        unsigned int v10 = (result + 1);
        goto LABEL_12;
      }
LABEL_22:
      int v11 = (result & 0x3F) << 8;
      unsigned int v12 = (v11 | (result >> 6)) + 33217;
      unsigned int v13 = (v11 | (result >> 6) & 0x3F) << 8;
      unsigned int v14 = (((v13 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
      unsigned int v15 = (v13 | (result >> 12)) + 8487393;
      if (a5) {
        unsigned int v10 = v14;
      }
      else {
        unsigned int v10 = v15;
      }
      if (result < 0x800) {
        unsigned int v10 = v12;
      }
LABEL_12:
      *(void *)description = (v10 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v10) & 0x38)) & 0x38));
      if (dso)
      {
        if (qword_1E966C7B8 != -1) {
          swift_once();
        }
        os_activity_flag_t v9 = qword_1E966C7C8;
        int v6 = description;
        goto LABEL_16;
      }
      goto LABEL_17;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

os_activity_t sub_1A55DB94C@<X0>(char *description@<X0>, void *dso@<X2>, os_activity_flag_t flags@<W3>, os_activity_t *a4@<X8>)
{
  if (dso && description)
  {
    if (qword_1E966C7B8 != -1) {
      swift_once();
    }
    os_activity_t result = _os_activity_create(dso, description, (os_activity_t)qword_1E966C7C8, flags);
  }
  else
  {
    os_activity_t result = 0;
  }
  *a4 = result;
  return result;
}

unint64_t SF_os_activity.init(_:dso:parent:options:)@<X0>(os_activity_t dso@<X3>, unint64_t result@<X0>, char a3@<W2>, NSObject **a4@<X4>, os_activity_flag_t *a5@<X5>, os_activity_t *a6@<X8>)
{
  unint64_t v8 = result;
  os_activity_flag_t v9 = a6;
  unsigned int v10 = *a4;
  os_activity_flag_t v11 = *a5;
  if (!*a4)
  {
    if (qword_1E966C7B8 != -1) {
      goto LABEL_28;
    }
    goto LABEL_7;
  }
  for (; (a3 & 1) != 0; os_activity_t result = swift_unknownObjectRetain())
  {
    a6 = (os_activity_t *)HIDWORD(v8);
    if (HIDWORD(v8)) {
      goto LABEL_19;
    }
    if (v8 >> 11 == 27)
    {
      __break(1u);
      return result;
    }
    LODWORD(a6) = WORD1(v8);
    if (WORD1(v8) > 0x10u) {
      goto LABEL_20;
    }
    if ((v8 & 0xFFFFFF80) != 0) {
      goto LABEL_21;
    }
    if (v8 <= 0xFF)
    {
      unsigned int v14 = (v8 + 1);
      goto LABEL_14;
    }
    __break(1u);
LABEL_28:
    swift_once();
LABEL_7:
    unsigned int v10 = qword_1E966C7C8;
  }
  if (!v8)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    int v15 = (v8 & 0x3F) << 8;
    unsigned int v16 = (v15 | (v8 >> 6)) + 33217;
    unsigned int v17 = (v15 | (v8 >> 6) & 0x3F) << 8;
    unsigned int v18 = (((v17 | (v8 >> 12) & 0x3F) << 8) | (v8 >> 18)) - 2122219023;
    unsigned int v19 = (v17 | (v8 >> 12)) + 8487393;
    if (a6) {
      unsigned int v14 = v18;
    }
    else {
      unsigned int v14 = v19;
    }
    if (v8 < 0x800) {
      unsigned int v14 = v16;
    }
LABEL_14:
    *(void *)description = (v14 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v14) & 0x38)) & 0x38));
    if (!dso) {
      goto LABEL_17;
    }
    unsigned int v13 = description;
    os_activity_t v12 = dso;
    goto LABEL_16;
  }
  if (dso)
  {
    os_activity_t v12 = dso;
    unsigned int v13 = (char *)v8;
LABEL_16:
    dso = _os_activity_create(v12, v13, v10, v11);
  }
LABEL_17:
  os_activity_t result = swift_unknownObjectRelease();
  *os_activity_flag_t v9 = dso;
  return result;
}

uint64_t static SF_os_activity.none.getter@<X0>(void *a1@<X8>)
{
  return sub_1A55DBBD8(qword_1E9670350, &qword_1E9672D80, a1);
}

uint64_t static SF_os_activity.current.getter@<X0>(void *a1@<X8>)
{
  return sub_1A55DBBD8(&qword_1E966C7B8, &qword_1E966C7C8, a1);
}

uint64_t sub_1A55DBBD8@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_unknownObjectRetain();
}

void static SF_os_activity.Options.ifNonePresent.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A55DBC38(uint64_t result, uint64_t a2, void *a3, os_activity_flag_t a4, const void *a5)
{
  if (a3)
  {
    uint64_t v5 = (const char *)result;
    if (result)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = a5;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_1A55DC6A4;
      *(void *)(v10 + 24) = v9;
      v12[4] = sub_1A55DC69C;
      v12[5] = v10;
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 1107296256;
      void v12[2] = sub_1A55DB320;
      v12[3] = &block_descriptor_39;
      os_activity_flag_t v11 = _Block_copy(v12);
      _Block_copy(a5);
      swift_retain();
      swift_release();
      _os_activity_initiate(a3, v5, a4, v11);
      _Block_release(v11);
      LOBYTE(a4) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      os_activity_t result = swift_release();
      if (a4) {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1A55DBDAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1A55DBDB8()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A55DBDF0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1A55DBE00()
{
  return swift_deallocObject();
}

uint64_t sub_1A55DBE10()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1A55DBE50()
{
  return swift_deallocObject();
}

void SF_os_activity.apply(execute:)(const void *a1)
{
  uint64_t v2 = _Block_copy(a1);
  unint64_t v3 = v2;
  char v4 = *v1;
  if (v4)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1A55DC6A4;
    *(void *)(v6 + 24) = v5;
    v9[4] = sub_1A55DC69C;
    v9[5] = v6;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    void v9[2] = sub_1A55DB320;
    v9[3] = &block_descriptor_25;
    BOOL v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    os_activity_apply(v4, v7);
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  else
  {
    _Block_release(v2);
  }
}

uint64_t sub_1A55DBFE0()
{
  return swift_deallocObject();
}

unint64_t static SF_os_activity.labelUserAction(_:dso:)@<X0>(unint64_t result@<X0>, char a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X8>)
{
  if (a2)
  {
    a4 = HIDWORD(result);
    if (!HIDWORD(result))
    {
      if (result >> 11 != 27)
      {
        LODWORD(a4) = WORD1(result);
        if (WORD1(result) > 0x10u)
        {
LABEL_18:
          __break(1u);
LABEL_19:
          int v7 = (result & 0x3F) << 8;
          unsigned int v8 = (v7 | (result >> 6)) + 33217;
          unsigned int v9 = (v7 | (result >> 6) & 0x3F) << 8;
          unsigned int v10 = (((v9 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
          unsigned int v11 = (v9 | (result >> 12)) + 8487393;
          if (a4) {
            unsigned int v6 = v10;
          }
          else {
            unsigned int v6 = v11;
          }
          if (result < 0x800) {
            unsigned int v6 = v8;
          }
          goto LABEL_13;
        }
        if ((result & 0xFFFFFF80) != 0) {
          goto LABEL_19;
        }
        if (result <= 0xFF)
        {
          unsigned int v6 = (result + 1);
LABEL_13:
          v12[1] = v4;
          void v12[2] = v5;
          v12[0] = (v6 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v6) & 0x38)) & 0x38));
          if (a3) {
            return MEMORY[0x1A626B920](a3, v12);
          }
          return result;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_27;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a3)
  {
LABEL_27:
    JUMPOUT(0x1A626B920);
  }
  return result;
}

uint64_t SF_os_activity.Options.rawValue.getter()
{
  return *v0;
}

uint64_t SF_os_activity.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static SF_os_activity.Options.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static SF_os_activity.Options.detached.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

_DWORD *sub_1A55DC148@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A55DC154(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1A55DC15C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1A55DC170@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1A55DC184@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A55DC198(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1A55DC1C8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1A55DC1F4@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1A55DC218(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_1A55DC22C(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_1A55DC240(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_1A55DC254@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A55DC268(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A55DC27C(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1A55DC290(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A55DC2A4()
{
  return *v0 == 0;
}

uint64_t sub_1A55DC2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

_DWORD *sub_1A55DC2CC(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

_DWORD *sub_1A55DC2E0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_1A55DC2F0(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_1A55DC2FC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t SF_os_activity.Scope.description.getter()
{
  return *(void *)v0;
}

void SF_os_activity.Scope.options.getter(_DWORD *a1@<X8>)
{
  *a1 = *(_DWORD *)(v1 + 20);
}

Swift::Void __swiftcall SF_os_activity.Scope.leave()()
{
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 24));
}

unint64_t sub_1A55DC338()
{
  unint64_t result = qword_1E9672D90;
  if (!qword_1E9672D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D90);
  }
  return result;
}

unint64_t sub_1A55DC390()
{
  unint64_t result = qword_1E9672D98;
  if (!qword_1E9672D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672D98);
  }
  return result;
}

unint64_t sub_1A55DC3E8()
{
  unint64_t result = qword_1E9672DA0;
  if (!qword_1E9672DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672DA0);
  }
  return result;
}

unint64_t sub_1A55DC440()
{
  unint64_t result = qword_1E9672DA8;
  if (!qword_1E9672DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9672DA8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SF_os_activity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for SF_os_activity()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for SF_os_activity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for SF_os_activity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SFCodableCGImage(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SFCodableCGImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SF_os_activity()
{
  return &type metadata for SF_os_activity;
}

ValueMetadata *type metadata accessor for SF_os_activity.Options()
{
  return &type metadata for SF_os_activity.Options;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SF_os_activity.Scope(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SF_os_activity.Scope(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SF_os_activity.Scope()
{
  return &type metadata for SF_os_activity.Scope;
}

uint64_t sub_1A55DC68C()
{
  return swift_deallocObject();
}

uint64_t sub_1A55DC6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1A56D5478();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) != 1)
  {
    sub_1A56D5468();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1A54E4D44(a1, &qword_1EB3DB820);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A56D53F8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  unsigned int v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  v10[3] = a2;
  void v10[4] = a3;
  return swift_task_create();
}

uint64_t Optional.tryUnwrap(_:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v20 = a1;
  uint64_t v21 = a3;
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  unsigned int v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v14);
  uint64_t v16 = *(void *)(a6 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a7, v13, v16);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a6);
  sub_1A54F38F4();
  swift_allocError();
  *(void *)uint64_t v18 = v20;
  *(void *)(v18 + 8) = a2;
  *(void *)(v18 + 16) = v21;
  *(void *)(v18 + 24) = a4;
  *(void *)(v18 + 32) = v22;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 56) = 0u;
  *(void *)(v18 + 72) = 0;
  *(void *)(v18 + 80) = 0x2000000000000000;
  *(void *)(v18 + 88) = 0;
  *(void *)(v18 + 96) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t tryCast<A>(_:as:description:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v31 = a7;
  uint64_t v35 = a6;
  uint64_t v32 = a4;
  v28[1] = a2;
  uint64_t v29 = a3;
  uint64_t v12 = sub_1A56D5898();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v28 - v14;
  sub_1A54E3F20(a1, (uint64_t)&v33);
  char v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56);
  if (v16)
  {
    uint64_t v18 = *(void *)(a8 - 8);
    v17(v15, 0, 1, a8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a9, v15, a8);
  }
  else
  {
    v17(v15, 1, 1, a8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_1A56D5B48();
    uint64_t v20 = v33;
    unint64_t v21 = v34;
    uint64_t v22 = sub_1A56D6238();
    uint64_t v24 = v23;
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v25 = v20;
    *(void *)(v25 + 8) = v21;
    *(void *)(v25 + 16) = v22;
    *(void *)(v25 + 24) = v24;
    uint64_t v26 = v32;
    *(void *)(v25 + 32) = v29;
    *(void *)(v25 + 40) = v26;
    uint64_t v27 = v35;
    *(void *)(v25 + 48) = v30;
    *(void *)(v25 + 56) = v27;
    *(void *)(v25 + 64) = v31;
    *(_OWORD *)(v25 + 72) = xmmword_1A56ED1E0;
    *(void *)(v25 + 88) = 0;
    *(void *)(v25 + 96) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
}

{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  long long v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  long long v26;
  uint64_t v27;
  long long v28;
  uint64_t MetatypeMetadata;

  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  unint64_t v21 = a3;
  uint64_t v13 = sub_1A56D6138();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MetatypeMetadata = swift_getMetatypeMetadata();
  *(void *)&BOOL v28 = a2;
  sub_1A56D60F8();
  *(void *)&uint64_t v26 = 0x2874736143797274;
  *((void *)&v26 + 1) = 0xE800000000000000;
  sub_1A56D6108();
  sub_1A56D51C8();
  swift_bridgeObjectRelease();
  sub_1A56D51C8();
  uint64_t v17 = v26;
  sub_1A54F60EC(a1, (uint64_t)&v26, &qword_1EB3DB9F0);
  if (v27)
  {
    sub_1A54E3F10(&v26, &v28);
    swift_bridgeObjectRelease();
    tryCast<A>(_:as:description:file:line:)((uint64_t)&v28, a2, v21, v22, v23, v24, v25, a8, a9);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v28);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    sub_1A54E4D44((uint64_t)&v26, &qword_1EB3DB9F0);
    sub_1A54F38F4();
    swift_allocError();
    *(_OWORD *)unsigned int v19 = v17;
    *(void *)(v19 + 16) = 0xD000000000000046;
    *(void *)(v19 + 24) = 0x80000001A5738AB0;
    *(void *)(v19 + 32) = 132;
    *(_OWORD *)(v19 + 40) = 0u;
    *(_OWORD *)(v19 + 56) = 0u;
    *(void *)(v19 + 72) = 0;
    *(void *)(v19 + 80) = 0x2000000000000000;
    *(void *)(v19 + 88) = 0;
    *(void *)(v19 + 96) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return swift_bridgeObjectRelease();
  }
}

uint64_t Optional<A>.throwIfNotNil()(uint64_t result)
{
  if (result)
  {
    uint64_t v14 = *(void *)(result + OBJC_IVAR____SFXPCError_errorCode);
    uint64_t v1 = *(void *)(result + OBJC_IVAR____SFXPCError_domain + 8);
    uint64_t v13 = *(void *)(result + OBJC_IVAR____SFXPCError_domain);
    uint64_t v2 = *(void *)(result + OBJC_IVAR____SFXPCError_internalLocalizedDescription + 8);
    uint64_t v12 = *(void *)(result + OBJC_IVAR____SFXPCError_internalLocalizedDescription);
    uint64_t v3 = *(void *)(result + OBJC_IVAR____SFXPCError_internalDebugDescription + 8);
    uint64_t v11 = *(void *)(result + OBJC_IVAR____SFXPCError_internalDebugDescription);
    uint64_t v4 = *(void *)(result + OBJC_IVAR____SFXPCError_file + 8);
    uint64_t v10 = *(void *)(result + OBJC_IVAR____SFXPCError_file);
    uint64_t v5 = *(void *)(result + OBJC_IVAR____SFXPCError_line);
    uint64_t v7 = *(void *)(result + OBJC_IVAR____SFXPCError_process);
    uint64_t v6 = *(void *)(result + OBJC_IVAR____SFXPCError_process + 8);
    unint64_t v8 = *(unsigned __int8 *)(result + OBJC_IVAR____SFXPCError_line + 8) | 0xC000000000000000;
    sub_1A54F38F4();
    swift_allocError();
    *uint64_t v9 = v13;
    v9[1] = v1;
    void v9[2] = v14;
    v9[3] = v12;
    v9[4] = v2;
    v9[5] = v11;
    void v9[6] = v3;
    v9[7] = v10;
    unsigned char v9[8] = v4;
    v9[9] = v5;
    v9[10] = v8;
    void v9[11] = v7;
    v9[12] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.throwIf(_:_:file:line:)(Swift::Bool _, Swift::String a2, Swift::String file, Swift::Int line)
{
  if (_ == (v4 & 1))
  {
    object = file._object;
    uint64_t countAndFlagsBits = file._countAndFlagsBits;
    unint64_t v8 = a2._object;
    uint64_t v9 = a2._countAndFlagsBits;
    uint64_t v10 = v4 & 1;
    sub_1A54F38F4();
    swift_allocError();
    *(void *)uint64_t v11 = v9;
    *(void *)(v11 + 8) = v8;
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = countAndFlagsBits;
    *(void *)(v11 + 32) = object;
    *(void *)(v11 + 40) = line;
    *(_OWORD *)(v11 + 48) = 0u;
    *(_OWORD *)(v11 + 64) = 0u;
    *(void *)(v11 + 88) = 0;
    *(void *)(v11 + 96) = 0;
    *(void *)(v11 + 80) = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
}

uint64_t sub_1A55DD158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3DB820);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A54F60EC(a1, (uint64_t)v9, &qword_1EB3DB820);
  uint64_t v10 = sub_1A56D5478();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A54E4D44((uint64_t)v9, &qword_1EB3DB820);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1A56D53F8();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A56D5468();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  char v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    char v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}