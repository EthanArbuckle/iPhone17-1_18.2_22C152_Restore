uint64_t static FluidTouchGestureEvent.dispatch(report:platform:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v5;

  v5 = *a3;
  type metadata accessor for FluidTouchGesture();
  *(unsigned char *)(swift_initStackObject() + 16) = v5;
  return FluidTouchGesture.dispatch(report:)(a1, a2);
}

uint64_t FluidTouchGesture.__allocating_init(platform:)(unsigned char *a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  return result;
}

uint64_t type metadata accessor for FluidTouchGesture()
{
  return self;
}

#error "2607DAF9C: call analysis failed (funcsize=174)"

void FluidTouchGesture.platform.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t FluidTouchGesture.init(platform:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 16) = *a1;
  return v1;
}

uint64_t FluidTouchGesture.deinit()
{
  return v0;
}

uint64_t FluidTouchGesture.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 17, 7);
}

uint64_t sub_2607DB170(void *a1)
{
  return FluidTouchGesture.dispatch(report:)(*a1, a1[1]);
}

unint64_t sub_2607DB19C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = a2;
  uint64_t v8 = a1;
  uint64_t v47 = *MEMORY[0x263EF8340];
  unint64_t v9 = a3 >> 62;
  uint64_t v10 = (int)a2;
  uint64_t v11 = a1 & 7;
  if ((a1 & 7) != 0)
  {
    char v4 = 8 - v11;
    uint64_t v12 = 0;
    switch(v9)
    {
      case 1uLL:
        goto LABEL_14;
      case 2uLL:
        uint64_t v10 = *(void *)(a2 + 16);
LABEL_14:
        if ((unint64_t)(v10 - 0x1000000000000000) >> 61 == 7) {
          goto LABEL_83;
        }
        __break(1u);
LABEL_16:
        if (v6 < *(void *)(v7 + 16)) {
          goto LABEL_60;
        }
        if (v6 >= *(void *)(v7 + 24)) {
          goto LABEL_63;
        }
        uint64_t v17 = sub_26087AED0();
        if (!v17) {
          goto LABEL_77;
        }
        uint64_t v18 = v17;
        uint64_t v19 = sub_26087AEF0();
        uint64_t v20 = v6 - v19;
        if (__OFSUB__(v6, v19)) {
          goto LABEL_65;
        }
        if (++v6 < *(void *)(v7 + 16)) {
          goto LABEL_67;
        }
        if (v6 >= *(void *)(v7 + 24)) {
          goto LABEL_69;
        }
        int v21 = *(unsigned __int8 *)(v18 + v20);
        uint64_t v22 = sub_26087AED0();
        if (!v22) {
          goto LABEL_79;
        }
        uint64_t v7 = v22;
        uint64_t v23 = sub_26087AEF0();
        uint64_t v24 = v6 - v23;
        if (!__OFSUB__(v6, v23)) {
          goto LABEL_36;
        }
        __break(1u);
LABEL_26:
        uint64_t v25 = v7 >> 32;
        if (v6 < (int)v7 || v6 >= v25) {
          goto LABEL_61;
        }
        uint64_t v27 = sub_26087AED0();
        if (v27)
        {
          uint64_t v7 = v27;
          uint64_t v28 = sub_26087AEF0();
          uint64_t v29 = v6 - v28;
          if (__OFSUB__(v6, v28))
          {
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
          }
          uint64_t v30 = v6 + 1;
          if (v30 >= v25) {
            goto LABEL_66;
          }
          int v21 = *(unsigned __int8 *)(v7 + v29);
          uint64_t v31 = sub_26087AED0();
          if (v31)
          {
            uint64_t v7 = v31;
            uint64_t v32 = sub_26087AEF0();
            uint64_t v24 = v30 - v32;
            if (!__OFSUB__(v30, v32))
            {
LABEL_36:
              unsigned int v14 = (v5 & v21) >> (v8 & 7);
              int v15 = *(unsigned __int8 *)(v7 + v24);
              return ((v15 & (0xFFuLL >> v4)) << v4) | v14;
            }
            goto LABEL_68;
          }
        }
        else
        {
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
        }
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        break;
      default:
        goto LABEL_3;
    }
    goto LABEL_81;
  }
  switch(v9)
  {
    case 1uLL:
      goto LABEL_39;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
LABEL_39:
      if ((unint64_t)(v10 - 0x1000000000000000) >> 61 == 7)
      {
        uint64_t v11 = 8 * v10;
LABEL_9:
        uint64_t v10 = v11 + a1;
        if (__OFADD__(v11, a1))
        {
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        uint64_t v3 = v10 >> 3;
        switch((int)v9)
        {
          case 1:
            goto LABEL_48;
          case 2:
            goto LABEL_41;
          case 3:
            goto LABEL_80;
          default:
            if (v3 >= BYTE6(a3)) {
              goto LABEL_70;
            }
            uint64_t v41 = a2;
            __int16 v42 = a3;
            char v43 = BYTE2(a3);
            char v44 = BYTE3(a3);
            char v45 = BYTE4(a3);
            char v46 = BYTE5(a3);
            unint64_t result = *((unsigned __int8 *)&v41 + v3);
            break;
        }
      }
      else
      {
        __break(1u);
LABEL_41:
        if (v3 < *(void *)(a2 + 16)) {
          goto LABEL_71;
        }
        OUTLINED_FUNCTION_12();
        if (v33 == v34) {
          goto LABEL_73;
        }
        uint64_t v35 = sub_26087AED0();
        if (!v35) {
          goto LABEL_82;
        }
        uint64_t v8 = v35;
        uint64_t v36 = sub_26087AEF0();
        uint64_t v37 = v3 - v36;
        if (__OFSUB__(v3, v36))
        {
          __break(1u);
LABEL_48:
          if (v3 < (int)v7 || v3 >= v7 >> 32) {
            goto LABEL_72;
          }
          uint64_t v39 = sub_26087AED0();
          if (!v39)
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            uint64_t v12 = 8 * v10;
LABEL_3:
            if (!__OFADD__(v12, v8))
            {
              uint64_t v6 = (v12 + v8) >> 3;
              uint64_t v10 = 255;
              uint64_t v5 = 255 << v11;
              switch((int)v9)
              {
                case 1:
                  goto LABEL_26;
                case 2:
                  goto LABEL_16;
                case 3:
                  __break(1u);
                  goto LABEL_76;
                default:
                  if (v6 >= BYTE6(a3)) {
                    goto LABEL_59;
                  }
                  uint64_t v41 = v7;
                  __int16 v42 = a3;
                  char v43 = BYTE2(a3);
                  char v44 = BYTE3(a3);
                  char v45 = BYTE4(a3);
                  char v46 = BYTE5(a3);
                  if (v6 + 1 >= BYTE6(a3)) {
                    goto LABEL_62;
                  }
                  unsigned int v13 = (*((unsigned char *)&v41 + v6) & v5);
                  uint64_t v41 = v7;
                  unsigned int v14 = v13 >> (v8 & 7);
                  __int16 v42 = a3;
                  char v43 = BYTE2(a3);
                  char v44 = BYTE3(a3);
                  char v45 = BYTE4(a3);
                  char v46 = BYTE5(a3);
                  int v15 = *((unsigned __int8 *)&v41 + v6 + 1);
                  break;
              }
              return ((v15 & (0xFFuLL >> v4)) << v4) | v14;
            }
            __break(1u);
            goto LABEL_58;
          }
          uint64_t v8 = v39;
          uint64_t v40 = sub_26087AEF0();
          uint64_t v37 = v3 - v40;
          if (__OFSUB__(v3, v40)) {
            goto LABEL_74;
          }
        }
        return *(unsigned __int8 *)(v8 + v37);
      }
      return result;
    default:
      goto LABEL_9;
  }
}

void _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  OUTLINED_FUNCTION_17();
  sub_2607DC29C(v57, v58, v59, v60, v61, v62, v63, v64, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51,
    a52,
    a53,
    a54,
    a55,
    a56,
    a57);
}

void _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  OUTLINED_FUNCTION_17();
  sub_2607DB718(v57, v58, v59, v60, v61, v62, v63, v64, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51,
    a52,
    a53,
    a54,
    a55,
    a56,
    a57);
}

void sub_2607DB718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  OUTLINED_FUNCTION_16();
  a56 = v59;
  a57 = v60;
  OUTLINED_FUNCTION_13();
  uint64_t v121 = v61;
  a44 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0();
  unint64_t v76 = HIDWORD(v57);
  unint64_t v77 = v57 >> 40;
  char v78 = v62 & 7;
  if ((v62 & 7) != 0)
  {
    unint64_t v79 = 0;
    int v80 = 0;
    char v81 = 8 - v78;
    uint64_t v82 = (255 << v78);
    int v83 = v62 & 7;
    unint64_t v84 = 0xFFuLL >> (8 - v78);
    uint64_t v122 = v70;
    while (2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = v71;
      switch(v122)
      {
        case 1:
          goto LABEL_11;
        case 2:
          uint64_t v86 = *(void *)(v58 + 16);
LABEL_11:
          unint64_t v70 = (unint64_t)(v86 - 0x1000000000000000) >> 61;
          if (v70 != 7)
          {
            __break(1u);
            goto LABEL_38;
          }
          uint64_t v85 = 8 * v86;
LABEL_4:
          uint64_t v87 = v62 + v79;
          if (!__OFADD__(v62, v79))
          {
            BOOL v88 = __OFADD__(v85, v87);
            uint64_t v89 = v85 + v87;
            if (v88) {
              goto LABEL_70;
            }
            uint64_t v90 = v89 >> 3;
            switch(v122)
            {
              case 1:
                unint64_t v115 = v84;
                int v116 = v83;
                unint64_t v117 = v77;
                unint64_t v119 = v76;
                OUTLINED_FUNCTION_4();
                if (v90 < v97 || v90 >= v121) {
                  goto LABEL_76;
                }
                uint64_t v94 = v82;
                if (!sub_26087AED0()) {
                  goto LABEL_94;
                }
                uint64_t v99 = OUTLINED_FUNCTION_20();
                if (__OFSUB__(v90, v99)) {
                  goto LABEL_79;
                }
                uint64_t v100 = v90 + 1;
                if (v90 + 1 >= v121) {
                  goto LABEL_81;
                }
                int v92 = *(unsigned __int8 *)(v77 + v90 - v99);
                if (!sub_26087AED0()) {
                  goto LABEL_96;
                }
                if (!__OFSUB__(v100, sub_26087AEF0())) {
                  goto LABEL_33;
                }
                goto LABEL_82;
              case 2:
                if (v90 < *(void *)(v58 + 16)) {
                  goto LABEL_75;
                }
                unint64_t v115 = v84;
                int v116 = v83;
                unint64_t v117 = v77;
                unint64_t v119 = v76;
                OUTLINED_FUNCTION_4();
                if (v90 >= *(void *)(v58 + 24)) {
                  goto LABEL_78;
                }
                uint64_t v94 = v82;
                if (!sub_26087AED0()) {
                  goto LABEL_92;
                }
                uint64_t v95 = OUTLINED_FUNCTION_20();
                if (__OFSUB__(v90, v95)) {
                  goto LABEL_80;
                }
                uint64_t v96 = v90 + 1;
                if (v90 + 1 < *(void *)(v58 + 16)) {
                  goto LABEL_83;
                }
                if (v96 >= *(void *)(v58 + 24)) {
                  goto LABEL_84;
                }
                int v92 = *(unsigned __int8 *)(v77 + v90 - v95);
                if (!sub_26087AED0()) {
                  goto LABEL_95;
                }
                if (__OFSUB__(v96, sub_26087AEF0())) {
                  goto LABEL_85;
                }
LABEL_33:
                OUTLINED_FUNCTION_19();
                unint64_t v76 = v119;
                char v69 = a16;
                unint64_t v77 = v117;
                char v81 = v82;
                uint64_t v82 = v94;
                int v83 = v116;
                unint64_t v84 = v115;
                goto LABEL_34;
              case 3:
                goto LABEL_93;
              default:
                if (v90 >= v72)
                {
                  __break(1u);
LABEL_75:
                  __break(1u);
LABEL_76:
                  __break(1u);
LABEL_77:
                  __break(1u);
LABEL_78:
                  __break(1u);
LABEL_79:
                  __break(1u);
LABEL_80:
                  __break(1u);
LABEL_81:
                  __break(1u);
LABEL_82:
                  __break(1u);
LABEL_83:
                  __break(1u);
LABEL_84:
                  __break(1u);
LABEL_85:
                  __break(1u);
LABEL_86:
                  __break(1u);
LABEL_87:
                  __break(1u);
LABEL_88:
                  __break(1u);
LABEL_89:
                  __break(1u);
LABEL_90:
                  __break(1u);
LABEL_91:
                  __break(1u);
LABEL_92:
                  __break(1u);
LABEL_93:
                  __break(1u);
LABEL_94:
                  __break(1u);
LABEL_95:
                  __break(1u);
LABEL_96:
                  __break(1u);
LABEL_97:
                  __break(1u);
LABEL_98:
                  __break(1u);
LABEL_99:
                  __break(1u);
                }
                a30 = v71;
                a31 = v73;
                a32 = v74;
                a33 = v75;
                a34 = v63;
                a35 = v64;
                a36 = v65;
                a37 = v66;
                a38 = v57;
                a39 = v67;
                a40 = v68;
                a41 = v69;
                a42 = v76;
                uint64_t v91 = v90 + 1;
                a43 = v77;
                if (v90 + 1 >= v72) {
                  goto LABEL_77;
                }
                int v92 = *(&a30 + v90);
                a30 = v71;
                a31 = v73;
                a32 = v74;
                a33 = v75;
                a34 = v63;
                a35 = v64;
                a36 = v65;
                a37 = v66;
                a38 = v57;
                a39 = v67;
                a40 = v68;
                a41 = v69;
                a42 = v76;
                a43 = v77;
                int v93 = *(&a30 + v91);
LABEL_34:
                v80 |= (((v93 & v84) << v81) | ((v92 & v82) >> v83)) << v79;
                BOOL v101 = v79 >= 0x18;
                v79 += 8;
                if (!v101) {
                  continue;
                }
                goto LABEL_67;
            }
          }
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
          break;
        default:
          goto LABEL_4;
      }
      break;
    }
  }
  else
  {
LABEL_38:
    int v102 = 0;
    unint64_t v103 = 32;
    uint64_t v104 = v70;
LABEL_39:
    unint64_t v105 = v103;
    while (2)
    {
      unint64_t v103 = v105 - 8;
      uint64_t v106 = 0;
      uint64_t v107 = v71;
      switch(v104)
      {
        case 1:
          goto LABEL_47;
        case 2:
          uint64_t v107 = *(void *)(v58 + 16);
LABEL_47:
          if ((unint64_t)(v107 - 0x1000000000000000) >> 61 != 7)
          {
            __break(1u);
            goto LABEL_69;
          }
          uint64_t v106 = 8 * v107;
LABEL_41:
          uint64_t v108 = v62 + v103;
          if (__OFADD__(v62, v103)) {
            goto LABEL_71;
          }
          BOOL v88 = __OFADD__(v106, v108);
          uint64_t v109 = v106 + v108;
          if (!v88)
          {
            uint64_t v110 = v109 >> 3;
            switch(v104)
            {
              case 1:
                uint64_t v123 = v104;
                unint64_t v118 = v77;
                unint64_t v120 = v76;
                OUTLINED_FUNCTION_7();
                if (v110 < v113 || v110 >= v121) {
                  goto LABEL_86;
                }
                if (!sub_26087AED0()) {
                  goto LABEL_99;
                }
                if (!__OFSUB__(v110, sub_26087AEF0())) {
                  goto LABEL_63;
                }
                goto LABEL_89;
              case 2:
                uint64_t v123 = v104;
                if (v110 < *(void *)(v58 + 16)) {
                  goto LABEL_88;
                }
                unint64_t v118 = v77;
                unint64_t v120 = v76;
                OUTLINED_FUNCTION_7();
                OUTLINED_FUNCTION_12();
                if (v112 == v88) {
                  goto LABEL_90;
                }
                if (!sub_26087AED0()) {
                  goto LABEL_98;
                }
                if (__OFSUB__(v110, sub_26087AEF0())) {
                  goto LABEL_91;
                }
LABEL_63:
                OUTLINED_FUNCTION_19();
                unint64_t v76 = v120;
                char v69 = a16;
                unint64_t v77 = v118;
                uint64_t v104 = v123;
LABEL_64:
                if (!v105) {
                  goto LABEL_67;
                }
                v105 -= 8;
                if (v103 >= 0x20) {
                  continue;
                }
                v102 |= v111 << (v103 & 0x18);
                if (!v103) {
                  goto LABEL_67;
                }
                goto LABEL_39;
              case 3:
                goto LABEL_97;
              default:
                if (v110 >= v72) {
                  goto LABEL_87;
                }
                a30 = v71;
                a31 = v73;
                a32 = v74;
                a33 = v75;
                a34 = v63;
                a35 = v64;
                a36 = v65;
                a37 = v66;
                a38 = v57;
                a39 = v67;
                a40 = v68;
                a41 = v69;
                a42 = v76;
                a43 = v77;
                int v111 = *(&a30 + v110);
                goto LABEL_64;
            }
          }
          break;
        default:
          goto LABEL_41;
      }
      break;
    }
  }
  __break(1u);
LABEL_67:
  OUTLINED_FUNCTION_11();
}

#error "2607DC154: call analysis failed (funcsize=363)"

void sub_2607DC29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  OUTLINED_FUNCTION_16();
  a56 = v59;
  a57 = v60;
  OUTLINED_FUNCTION_13();
  uint64_t v122 = v61;
  a44 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0();
  unint64_t v76 = HIDWORD(v57);
  unint64_t v77 = v57 >> 40;
  char v78 = v62 & 7;
  if ((v62 & 7) != 0)
  {
    uint64_t v79 = 0;
    int v80 = 0;
    char v81 = 8 - v78;
    uint64_t v82 = (255 << v78);
    int v83 = v62 & 7;
    unint64_t v84 = 0xFFuLL >> (8 - v78);
    char v85 = 1;
    uint64_t v124 = v70;
    while (2)
    {
      char v123 = v85;
      uint64_t v86 = 0;
      uint64_t v87 = v71;
      switch(v124)
      {
        case 1:
          goto LABEL_11;
        case 2:
          uint64_t v87 = *(void *)(v58 + 16);
LABEL_11:
          unint64_t v70 = (unint64_t)(v87 - 0x1000000000000000) >> 61;
          if (v70 != 7)
          {
            __break(1u);
            goto LABEL_37;
          }
          uint64_t v86 = 8 * v87;
LABEL_4:
          uint64_t v88 = v62 + v79;
          if (!__OFADD__(v62, v79))
          {
            BOOL v89 = __OFADD__(v86, v88);
            uint64_t v90 = v86 + v88;
            if (v89) {
              goto LABEL_69;
            }
            unint64_t v117 = v84;
            uint64_t v91 = v90 >> 3;
            switch(v124)
            {
              case 1:
                int v116 = v83;
                unint64_t v118 = v77;
                unint64_t v120 = v76;
                OUTLINED_FUNCTION_6();
                if (v91 < v98 || v91 >= v122) {
                  goto LABEL_75;
                }
                uint64_t v95 = v82;
                if (!sub_26087AED0()) {
                  goto LABEL_93;
                }
                uint64_t v100 = OUTLINED_FUNCTION_20();
                if (__OFSUB__(v91, v100)) {
                  goto LABEL_78;
                }
                uint64_t v101 = v91 + 1;
                if (v91 + 1 >= v122) {
                  goto LABEL_80;
                }
                int v93 = *(unsigned __int8 *)(v77 + v91 - v100);
                if (!sub_26087AED0()) {
                  goto LABEL_95;
                }
                if (!__OFSUB__(v101, sub_26087AEF0())) {
                  goto LABEL_33;
                }
                goto LABEL_81;
              case 2:
                if (v91 < *(void *)(v58 + 16)) {
                  goto LABEL_74;
                }
                int v116 = v83;
                unint64_t v118 = v77;
                unint64_t v120 = v76;
                OUTLINED_FUNCTION_6();
                if (v91 >= *(void *)(v58 + 24)) {
                  goto LABEL_77;
                }
                uint64_t v95 = v82;
                if (!sub_26087AED0()) {
                  goto LABEL_91;
                }
                uint64_t v96 = OUTLINED_FUNCTION_20();
                if (__OFSUB__(v91, v96)) {
                  goto LABEL_79;
                }
                uint64_t v97 = v91 + 1;
                if (v91 + 1 < *(void *)(v58 + 16)) {
                  goto LABEL_82;
                }
                if (v97 >= *(void *)(v58 + 24)) {
                  goto LABEL_83;
                }
                int v93 = *(unsigned __int8 *)(v77 + v91 - v96);
                if (!sub_26087AED0()) {
                  goto LABEL_94;
                }
                if (__OFSUB__(v97, sub_26087AEF0())) {
                  goto LABEL_84;
                }
LABEL_33:
                OUTLINED_FUNCTION_18();
                unint64_t v76 = v120;
                char v69 = a15;
                unint64_t v77 = v118;
                char v81 = v82;
                uint64_t v82 = v95;
                int v83 = v116;
                goto LABEL_34;
              case 3:
                goto LABEL_92;
              default:
                if (v91 >= v72)
                {
                  __break(1u);
LABEL_74:
                  __break(1u);
LABEL_75:
                  __break(1u);
LABEL_76:
                  __break(1u);
LABEL_77:
                  __break(1u);
LABEL_78:
                  __break(1u);
LABEL_79:
                  __break(1u);
LABEL_80:
                  __break(1u);
LABEL_81:
                  __break(1u);
LABEL_82:
                  __break(1u);
LABEL_83:
                  __break(1u);
LABEL_84:
                  __break(1u);
LABEL_85:
                  __break(1u);
LABEL_86:
                  __break(1u);
LABEL_87:
                  __break(1u);
LABEL_88:
                  __break(1u);
LABEL_89:
                  __break(1u);
LABEL_90:
                  __break(1u);
LABEL_91:
                  __break(1u);
LABEL_92:
                  __break(1u);
LABEL_93:
                  __break(1u);
LABEL_94:
                  __break(1u);
LABEL_95:
                  __break(1u);
LABEL_96:
                  __break(1u);
LABEL_97:
                  __break(1u);
LABEL_98:
                  __break(1u);
                }
                a30 = v71;
                a31 = v73;
                a32 = v74;
                a33 = v75;
                a34 = v63;
                a35 = v64;
                a36 = v65;
                a37 = v66;
                a38 = v57;
                a39 = v67;
                a40 = v68;
                a41 = v69;
                a42 = v76;
                uint64_t v92 = v91 + 1;
                a43 = v77;
                if (v91 + 1 >= v72) {
                  goto LABEL_76;
                }
                int v93 = *(&a30 + v91);
                a30 = v71;
                a31 = v73;
                a32 = v74;
                a33 = v75;
                a34 = v63;
                a35 = v64;
                a36 = v65;
                a37 = v66;
                a38 = v57;
                a39 = v67;
                a40 = v68;
                a41 = v69;
                a42 = v76;
                a43 = v77;
                int v94 = *(&a30 + v92);
LABEL_34:
                char v85 = 0;
                unsigned int v102 = (v93 & v82) >> v83;
                unint64_t v84 = v117;
                v80 |= (((v94 & v117) << v81) | v102) << v79;
                uint64_t v79 = 8;
                if ((v123 & 1) == 0) {
                  goto LABEL_66;
                }
                continue;
            }
          }
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
          break;
        default:
          goto LABEL_4;
      }
      break;
    }
  }
  else
  {
LABEL_37:
    int v103 = 0;
    unint64_t v104 = 16;
    uint64_t v105 = v70;
LABEL_38:
    unint64_t v106 = v104;
    while (2)
    {
      unint64_t v104 = v106 - 8;
      uint64_t v107 = 0;
      uint64_t v108 = v71;
      switch(v105)
      {
        case 1:
          goto LABEL_46;
        case 2:
          uint64_t v108 = *(void *)(v58 + 16);
LABEL_46:
          if ((unint64_t)(v108 - 0x1000000000000000) >> 61 != 7)
          {
            __break(1u);
            goto LABEL_68;
          }
          uint64_t v107 = 8 * v108;
LABEL_40:
          uint64_t v109 = v62 + v104;
          if (__OFADD__(v62, v104)) {
            goto LABEL_70;
          }
          BOOL v89 = __OFADD__(v107, v109);
          uint64_t v110 = v107 + v109;
          if (!v89)
          {
            uint64_t v111 = v110 >> 3;
            switch(v105)
            {
              case 1:
                uint64_t v125 = v105;
                unint64_t v119 = v77;
                unint64_t v121 = v76;
                OUTLINED_FUNCTION_9();
                if (v111 < v114 || v111 >= v122) {
                  goto LABEL_85;
                }
                if (!sub_26087AED0()) {
                  goto LABEL_98;
                }
                if (!__OFSUB__(v111, sub_26087AEF0())) {
                  goto LABEL_62;
                }
                goto LABEL_88;
              case 2:
                uint64_t v125 = v105;
                if (v111 < *(void *)(v58 + 16)) {
                  goto LABEL_87;
                }
                unint64_t v119 = v77;
                unint64_t v121 = v76;
                OUTLINED_FUNCTION_9();
                OUTLINED_FUNCTION_12();
                if (v113 == v89) {
                  goto LABEL_89;
                }
                if (!sub_26087AED0()) {
                  goto LABEL_97;
                }
                if (__OFSUB__(v111, sub_26087AEF0())) {
                  goto LABEL_90;
                }
LABEL_62:
                OUTLINED_FUNCTION_18();
                unint64_t v76 = v121;
                char v69 = a15;
                unint64_t v77 = v119;
                uint64_t v105 = v125;
LABEL_63:
                if (!v106) {
                  goto LABEL_66;
                }
                v106 -= 8;
                if (v104 >= 0x10) {
                  continue;
                }
                v103 |= v112 << (v104 & 8);
                if (!v104) {
                  goto LABEL_66;
                }
                goto LABEL_38;
              case 3:
                goto LABEL_96;
              default:
                if (v111 >= v72) {
                  goto LABEL_86;
                }
                a30 = v71;
                a31 = v73;
                a32 = v74;
                a33 = v75;
                a34 = v63;
                a35 = v64;
                a36 = v65;
                a37 = v66;
                a38 = v57;
                a39 = v67;
                a40 = v68;
                a41 = v69;
                a42 = v76;
                a43 = v77;
                int v112 = *(&a30 + v111);
                goto LABEL_63;
            }
          }
          break;
        default:
          goto LABEL_40;
      }
      break;
    }
  }
  __break(1u);
LABEL_66:
  OUTLINED_FUNCTION_11();
}

unint64_t sub_2607DC824(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  uint64_t v7 = (int)a2;
  uint64_t v105 = (uint64_t)a2 >> 32;
  uint64_t v124 = *MEMORY[0x263EF8340];
  uint64_t v8 = BYTE6(a3);
  unint64_t v9 = a2 >> 8;
  unint64_t v10 = a2 >> 16;
  unint64_t v11 = a2 >> 24;
  unint64_t v12 = HIDWORD(a2);
  unint64_t v13 = a2 >> 40;
  unint64_t v14 = HIWORD(a2);
  unint64_t v15 = HIBYTE(a2);
  unint64_t v16 = a3 >> 8;
  unint64_t v17 = a3 >> 16;
  unint64_t v18 = a3 >> 24;
  unint64_t v19 = HIDWORD(a3);
  unint64_t v20 = a3 >> 40;
  uint64_t v21 = 0;
  uint64_t v22 = a1 & 7;
  if ((a1 & 7) != 0)
  {
    uint64_t v23 = 8 - v22;
    unint64_t v24 = (255 << v22);
    int v25 = a1 & 7;
    unint64_t v26 = 0xFFuLL >> (8 - v22);
    unint64_t v27 = -8;
    uint64_t v108 = v6;
    while (2)
    {
      unint64_t v106 = v27 + 8;
      int64_t v28 = 0;
      uint64_t v29 = v7;
      switch(v108)
      {
        case 1:
          goto LABEL_11;
        case 2:
          uint64_t v29 = *(void *)(a2 + 16);
LABEL_11:
          unint64_t v6 = (unint64_t)(v29 - 0x1000000000000000) >> 61;
          if (v6 != 7)
          {
            __break(1u);
            goto LABEL_37;
          }
          int64_t v28 = 8 * v29;
LABEL_4:
          uint64_t v30 = a1 + v106;
          if (!__OFADD__(a1, v106))
          {
            BOOL v31 = __OFADD__(v28, v30);
            v28 += v30;
            if (v31) {
              goto LABEL_68;
            }
            uint64_t v32 = v28 >> 3;
            switch(v108)
            {
              case 1:
                unint64_t v73 = v26;
                int v74 = v25;
                unsigned int v75 = v24;
                uint64_t v76 = v23;
                uint64_t v78 = v7;
                unint64_t v103 = v20;
                uint64_t v80 = v8;
                if (v32 < v7 || v32 >= v105) {
                  goto LABEL_75;
                }
                unint64_t v85 = v19;
                unint64_t v87 = v18;
                unint64_t v89 = v17;
                unint64_t v91 = v16;
                unint64_t v93 = v15;
                unint64_t v95 = v14;
                unint64_t v97 = v13;
                unint64_t v99 = v12;
                unint64_t v101 = v11;
                unint64_t v83 = v10;
                unint64_t v46 = v9;
                uint64_t v47 = sub_26087AED0();
                if (!v47) {
                  goto LABEL_93;
                }
                uint64_t v48 = v47;
                uint64_t v49 = a1;
                uint64_t v50 = sub_26087AEF0();
                if (__OFSUB__(v32, v50)) {
                  goto LABEL_78;
                }
                uint64_t v51 = v32 + 1;
                if (v32 + 1 >= v105) {
                  goto LABEL_80;
                }
                int v34 = *(unsigned __int8 *)(v48 + v32 - v50);
                uint64_t v52 = sub_26087AED0();
                if (!v52) {
                  goto LABEL_95;
                }
                uint64_t v53 = v52;
                uint64_t v54 = sub_26087AEF0();
                if (__OFSUB__(v51, v54)) {
                  goto LABEL_81;
                }
                int v35 = *(unsigned __int8 *)(v53 + v51 - v54);
                a1 = v49;
                uint64_t v7 = v78;
                uint64_t v8 = v80;
                unint64_t v9 = v46;
                unint64_t v10 = v83;
                goto LABEL_33;
              case 2:
                if (v32 < *(void *)(a2 + 16)) {
                  goto LABEL_74;
                }
                unint64_t v73 = v26;
                int v74 = v25;
                unsigned int v75 = v24;
                uint64_t v76 = v23;
                uint64_t v77 = v7;
                unint64_t v103 = v20;
                uint64_t v79 = v8;
                if (v32 >= *(void *)(a2 + 24)) {
                  goto LABEL_77;
                }
                unint64_t v85 = v19;
                unint64_t v87 = v18;
                unint64_t v89 = v17;
                unint64_t v91 = v16;
                unint64_t v93 = v15;
                unint64_t v95 = v14;
                unint64_t v97 = v13;
                unint64_t v99 = v12;
                unint64_t v101 = v11;
                unint64_t v36 = v10;
                unint64_t v81 = v9;
                uint64_t v37 = sub_26087AED0();
                if (!v37) {
                  goto LABEL_91;
                }
                uint64_t v38 = v37;
                uint64_t v39 = a1;
                uint64_t v40 = sub_26087AEF0();
                if (__OFSUB__(v32, v40)) {
                  goto LABEL_79;
                }
                uint64_t v41 = v32 + 1;
                if (v32 + 1 < *(void *)(a2 + 16)) {
                  goto LABEL_82;
                }
                if (v41 >= *(void *)(a2 + 24)) {
                  goto LABEL_83;
                }
                int v34 = *(unsigned __int8 *)(v38 + v32 - v40);
                uint64_t v42 = sub_26087AED0();
                if (!v42) {
                  goto LABEL_94;
                }
                uint64_t v43 = v42;
                uint64_t v44 = sub_26087AEF0();
                if (__OFSUB__(v41, v44)) {
                  goto LABEL_84;
                }
                int v35 = *(unsigned __int8 *)(v43 + v41 - v44);
                a1 = v39;
                uint64_t v7 = v77;
                uint64_t v8 = v79;
                unint64_t v9 = v81;
                unint64_t v10 = v36;
LABEL_33:
                unint64_t v12 = v99;
                unint64_t v11 = v101;
                unint64_t v14 = v95;
                unint64_t v13 = v97;
                unint64_t v16 = v91;
                unint64_t v15 = v93;
                unint64_t v18 = v87;
                unint64_t v17 = v89;
                unint64_t v19 = v85;
                unint64_t v20 = v103;
                uint64_t v23 = v76;
                int v25 = v74;
                unint64_t v24 = v75;
                unint64_t v26 = v73;
                goto LABEL_34;
              case 3:
                goto LABEL_92;
              default:
                if (v32 >= v8)
                {
                  __break(1u);
LABEL_74:
                  __break(1u);
LABEL_75:
                  __break(1u);
LABEL_76:
                  __break(1u);
LABEL_77:
                  __break(1u);
LABEL_78:
                  __break(1u);
LABEL_79:
                  __break(1u);
LABEL_80:
                  __break(1u);
LABEL_81:
                  __break(1u);
LABEL_82:
                  __break(1u);
LABEL_83:
                  __break(1u);
LABEL_84:
                  __break(1u);
LABEL_85:
                  __break(1u);
LABEL_86:
                  __break(1u);
LABEL_87:
                  __break(1u);
LABEL_88:
                  __break(1u);
LABEL_89:
                  __break(1u);
LABEL_90:
                  __break(1u);
LABEL_91:
                  __break(1u);
LABEL_92:
                  __break(1u);
LABEL_93:
                  __break(1u);
LABEL_94:
                  __break(1u);
LABEL_95:
                  __break(1u);
LABEL_96:
                  __break(1u);
LABEL_97:
                  __break(1u);
LABEL_98:
                  __break(1u);
                }
                char v110 = v7;
                char v111 = v9;
                char v112 = v10;
                char v113 = v11;
                char v114 = v12;
                char v115 = v13;
                char v116 = v14;
                char v117 = v15;
                char v118 = a3;
                char v119 = v16;
                char v120 = v17;
                char v121 = v18;
                char v122 = v19;
                uint64_t v33 = v32 + 1;
                char v123 = v20;
                if (v32 + 1 >= v8) {
                  goto LABEL_76;
                }
                int v34 = *(&v110 + v32);
                char v110 = v7;
                char v111 = v9;
                char v112 = v10;
                char v113 = v11;
                char v114 = v12;
                char v115 = v13;
                char v116 = v14;
                char v117 = v15;
                char v118 = a3;
                char v119 = v16;
                char v120 = v17;
                char v121 = v18;
                char v122 = v19;
                char v123 = v20;
                int v35 = *(&v110 + v33);
LABEL_34:
                v21 |= (unint64_t)(((v35 & v26) << v23) | ((v34 & v24) >> v25)) << v106;
                v27 += 8;
                if (v27 >= 0x38) {
                  return v21;
                }
                continue;
            }
          }
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          break;
        default:
          goto LABEL_4;
      }
      break;
    }
  }
  else
  {
LABEL_37:
    uint64_t v55 = 64;
    uint64_t v56 = v6;
LABEL_38:
    unint64_t v24 = v55 - 8;
    while (2)
    {
      uint64_t v57 = v24 + 8;
      int64_t v28 = 0;
      uint64_t v58 = v7;
      switch(v56)
      {
        case 1:
          goto LABEL_46;
        case 2:
          uint64_t v58 = *(void *)(a2 + 16);
LABEL_46:
          int64_t v28 = (unint64_t)(v58 - 0x1000000000000000) >> 61;
          if (v28 != 7)
          {
            __break(1u);
            goto LABEL_67;
          }
          int64_t v28 = 8 * v58;
LABEL_40:
          uint64_t v59 = a1 + v24;
          if (__OFADD__(a1, v24)) {
            goto LABEL_69;
          }
          BOOL v31 = __OFADD__(v28, v59);
          v28 += v59;
          if (!v31)
          {
            uint64_t v60 = v28 >> 3;
            switch(v56)
            {
              case 1:
                uint64_t v107 = v24 + 8;
                uint64_t v109 = v56;
                unint64_t v102 = v11;
                unint64_t v104 = v20;
                unint64_t v86 = v19;
                unint64_t v88 = v18;
                unint64_t v90 = v17;
                unint64_t v92 = v16;
                unint64_t v94 = v15;
                unint64_t v96 = v14;
                unint64_t v98 = v13;
                unint64_t v100 = v12;
                unint64_t v82 = v9;
                unint64_t v84 = v10;
                if (v60 < v7 || v60 >= v105) {
                  goto LABEL_85;
                }
                uint64_t v61 = v8;
                uint64_t v62 = v7;
                uint64_t v68 = sub_26087AED0();
                if (!v68) {
                  goto LABEL_98;
                }
                uint64_t v64 = v68;
                uint64_t v69 = sub_26087AEF0();
                uint64_t v66 = v60 - v69;
                if (!__OFSUB__(v60, v69)) {
                  goto LABEL_61;
                }
                goto LABEL_88;
              case 2:
                unint64_t v86 = v19;
                unint64_t v88 = v18;
                unint64_t v90 = v17;
                unint64_t v92 = v16;
                unint64_t v94 = v15;
                unint64_t v96 = v14;
                unint64_t v98 = v13;
                unint64_t v100 = v12;
                unint64_t v102 = v11;
                unint64_t v82 = v9;
                unint64_t v84 = v10;
                if (v60 < *(void *)(a2 + 16)) {
                  goto LABEL_87;
                }
                uint64_t v107 = v24 + 8;
                uint64_t v109 = v56;
                unint64_t v104 = v20;
                if (v60 >= *(void *)(a2 + 24)) {
                  goto LABEL_89;
                }
                uint64_t v61 = v8;
                uint64_t v62 = v7;
                uint64_t v63 = sub_26087AED0();
                if (!v63) {
                  goto LABEL_97;
                }
                uint64_t v64 = v63;
                uint64_t v65 = sub_26087AEF0();
                uint64_t v66 = v60 - v65;
                if (__OFSUB__(v60, v65)) {
                  goto LABEL_90;
                }
LABEL_61:
                int64_t v28 = *(unsigned __int8 *)(v64 + v66);
                uint64_t v7 = v62;
                uint64_t v8 = v61;
                unint64_t v9 = v82;
                unint64_t v10 = v84;
                unint64_t v12 = v100;
                unint64_t v11 = v102;
                unint64_t v14 = v96;
                unint64_t v13 = v98;
                unint64_t v16 = v92;
                unint64_t v15 = v94;
                unint64_t v18 = v88;
                unint64_t v17 = v90;
                unint64_t v19 = v86;
                unint64_t v20 = v104;
                uint64_t v57 = v107;
                uint64_t v56 = v109;
LABEL_62:
                if (v57 <= 7) {
                  goto LABEL_71;
                }
                unint64_t v70 = v24 - 8;
                BOOL v71 = v24 >= 0x40;
                v24 -= 8;
                if (v71) {
                  continue;
                }
                uint64_t v55 = v70 + 8;
                v21 |= v28 << ((v70 + 8) & 0x38);
                if (v70 == -8) {
                  return v21;
                }
                goto LABEL_38;
              case 3:
                goto LABEL_96;
              default:
                if (v60 >= v8) {
                  goto LABEL_86;
                }
                char v110 = v7;
                char v111 = v9;
                char v112 = v10;
                char v113 = v11;
                char v114 = v12;
                char v115 = v13;
                char v116 = v14;
                char v117 = v15;
                char v118 = a3;
                char v119 = v16;
                char v120 = v17;
                char v121 = v18;
                char v122 = v19;
                char v123 = v20;
                int64_t v28 = *(&v110 + v60);
                goto LABEL_62;
            }
          }
          break;
        default:
          goto LABEL_40;
      }
      break;
    }
  }
  __break(1u);
LABEL_71:
  if (v24 > 0xFFFFFFFFFFFFFFC0) {
    return ((unint64_t)v28 >> -(char)v24) | v21;
  }
  return v21;
}

uint64_t OUTLINED_FUNCTION_3()
{
  return 0;
}

void sub_2607DCEC8(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2607DCED0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2607DCF28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

double sub_2607DCF84(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unsigned __int8 v3 = sub_2607DB19C(a1, a2, a3);
  if ((v3 & 0x80) == 0) {
    return (double)v3 / 127.0;
  }
  double v5 = OUTLINED_FUNCTION_14(~v3);
  return OUTLINED_FUNCTION_15(-0.0078125, v5);
}

#error "2607DCFDC: call analysis failed (funcsize=19)"

double sub_2607DD01C(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3 = sub_2607DC824(a1, a2, a3);
  double result = OUTLINED_FUNCTION_15(1.08420217e-19, (double)v3);
  if (v4 < 0) {
    return ((double)(unint64_t)~v4 + 1.0) * -1.08420217e-19;
  }
  return result;
}

#error "2607DD070: call analysis failed (funcsize=16)"

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

_UNKNOWN **sub_2607DD0E8()
{
  return &protocol witness table for FluidTouchGestureReport;
}

_UNKNOWN **sub_2607DD0F4()
{
  return &protocol witness table for FluidTouchGestureReport;
}

uint64_t method lookup function for FluidTouchGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FluidTouchGesture);
}

uint64_t dispatch thunk of FluidTouchGesture.__allocating_init(platform:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for IOHIDEvent(uint64_t a1)
{
}

void sub_2607DD154(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

unint64_t _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0()
{
  OUTLINED_FUNCTION_17();
  return sub_2607DB19C(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_1()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return a24;
}

void OUTLINED_FUNCTION_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  sub_2607DB718(a1, v58, v57, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51,
    a52,
    a53,
    a54,
    a55,
    a56,
    a57);
}

double OUTLINED_FUNCTION_14@<D0>(unsigned int a1@<W8>)
{
  return (double)a1 + 1.0;
}

double OUTLINED_FUNCTION_15@<D0>(double a1@<X8>, double a2@<D0>)
{
  return a2 * a1;
}

uint64_t OUTLINED_FUNCTION_20()
{
  return sub_26087AEF0();
}

unint64_t OUTLINED_FUNCTION_21(uint64_t a1)
{
  return sub_2607DB19C(a1, v2, v1);
}

uint64_t AppleVendorUsage.init(rawValue:)(unsigned __int8 a1)
{
  return a1 | ((a1 == 0) << 8);
}

uint64_t sub_2607DD414@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = AppleVendorUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

void sub_2607DD448(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2607DD454()
{
  return sub_260853108(*v0);
}

uint64_t sub_2607DD45C()
{
  return sub_2608532EC();
}

uint64_t sub_2607DD464(uint64_t a1)
{
  return sub_26085341C(a1, *v1);
}

BOOL sub_2607DD46C(char *a1, char *a2)
{
  return sub_26083AF14(*a1, *a2);
}

uint64_t static AppleVendorUsage.usagePage.getter()
{
  return 65280;
}

uint64_t sub_2607DD480()
{
  return 65280;
}

uint64_t static AppleVendorUsage.nxTranslated.getter()
{
  return 24;
}

unint64_t sub_2607DD490(uint64_t a1)
{
  unint64_t result = sub_2607DD4B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2607DD4B8()
{
  unint64_t result = qword_26A8B45A0;
  if (!qword_26A8B45A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45A0);
  }
  return result;
}

unint64_t sub_2607DD508()
{
  unint64_t result = qword_26A8B45A8;
  if (!qword_26A8B45A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorUsage()
{
  return &type metadata for AppleVendorUsage;
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return 1;
}

uint64_t static HIDUsagePageProtocol.usageMinimum.getter()
{
  return 1;
}

uint64_t sub_2607DD574()
{
  return 0xFFFFLL;
}

uint64_t static HIDUsagePageProtocol.usageMaximum.getter()
{
  return 0xFFFFLL;
}

uint64_t sub_2607DD584()
{
  return sub_2607DD480();
}

uint64_t sub_2607DD58C()
{
  return 65306;
}

uint64_t sub_2607DD594()
{
  return 9;
}

uint64_t sub_2607DD59C()
{
  return 12;
}

uint64_t sub_2607DD5A4()
{
  return 7;
}

uint64_t sub_2607DD5AC()
{
  return 255;
}

uint64_t sub_2607DD5B4()
{
  return 65281;
}

uint64_t HIDUsagePageProtocol<>.page.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2607DD5F0()
{
  return sub_2607E40D4(*v0);
}

void HIDUsageProtocol<>.usage.getter()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  swift_getAssociatedTypeWitness();
  uint64_t v51 = v1;
  OUTLINED_FUNCTION_7_0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_10_0();
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v50 = (char *)&v46 - v2;
  uint64_t v3 = swift_checkMetadataState();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_0();
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v52 = (char *)&v46 - v7;
  OUTLINED_FUNCTION_19_0();
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v54 = (char *)&v46 - v8;
  OUTLINED_FUNCTION_19_0();
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)&v46 - v10;
  OUTLINED_FUNCTION_19_0();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v46 - v16;
  sub_26087B3B0();
  char v18 = OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_7_0();
  uint64_t v55 = v19;
  OUTLINED_FUNCTION_20_1();
  v20();
  if ((v18 & 1) == 0)
  {
    unint64_t v26 = *(void (**)(void))(v5 + 8);
    OUTLINED_FUNCTION_18_0();
    v26();
    uint64_t v27 = v5;
    goto LABEL_20;
  }
  uint64_t v21 = OUTLINED_FUNCTION_8_0();
  uint64_t v47 = v5;
  uint64_t v22 = v5 + 8;
  uint64_t v23 = *(void (**)(void))(v5 + 8);
  OUTLINED_FUNCTION_6_0();
  v24();
  if (v21 <= 64)
  {
    uint64_t v27 = v47;
    unint64_t v26 = v23;
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_20_1();
  v25();
  int64_t v57 = 0x8000000000000000;
  if (OUTLINED_FUNCTION_3_1())
  {
    if (OUTLINED_FUNCTION_8_0() < 64)
    {
LABEL_14:
      uint64_t v31 = OUTLINED_FUNCTION_22();
      unint64_t v26 = v23;
      OUTLINED_FUNCTION_6_0();
      v23();
      uint64_t v27 = v47;
      if (v31 < v57) {
        goto LABEL_34;
      }
LABEL_20:
      uint64_t v36 = OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_7_0();
      uint64_t v37 = v55;
      OUTLINED_FUNCTION_20_1();
      v37();
      if (v36 < 65)
      {
        uint64_t v38 = OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_18_0();
        v26();
        if (v38 != 64 || (OUTLINED_FUNCTION_3_1() & 1) != 0) {
          goto LABEL_32;
        }
      }
      else
      {
        OUTLINED_FUNCTION_18_0();
        v26();
      }
      uint64_t v39 = v54;
      OUTLINED_FUNCTION_7_0();
      OUTLINED_FUNCTION_20_1();
      v37();
      int64_t v57 = 0x7FFFFFFFFFFFFFFFLL;
      char v40 = OUTLINED_FUNCTION_3_1();
      uint64_t v41 = OUTLINED_FUNCTION_8_0();
      if (v40)
      {
        if (v41 > 64)
        {
          sub_2607DDC34();
          OUTLINED_FUNCTION_17_0();
          char v42 = sub_26087B250();
          OUTLINED_FUNCTION_4_0();
          v26();
          while (1)
          {
            OUTLINED_FUNCTION_4_0();
            v26();
            if ((v42 & 1) == 0) {
              break;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            uint64_t v56 = 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
            v27 += 32;
            v44(v53, v39, v3);
            sub_2607DDC34();
            uint64_t v39 = v52;
            OUTLINED_FUNCTION_17_0();
            char v42 = sub_26087B250();
            OUTLINED_FUNCTION_4_0();
            v26();
          }
          goto LABEL_32;
        }
      }
      else if (v41 > 63)
      {
        goto LABEL_30;
      }
      uint64_t v43 = OUTLINED_FUNCTION_22();
      OUTLINED_FUNCTION_4_0();
      v26();
      if (v57 < v43) {
        goto LABEL_29;
      }
LABEL_32:
      OUTLINED_FUNCTION_22();
      ((void (*)(char *, uint64_t))v26)(v17, v3);
      OUTLINED_FUNCTION_14_0();
      return;
    }
LABEL_10:
    sub_2607DDC34();
    OUTLINED_FUNCTION_17_0();
    char v30 = OUTLINED_FUNCTION_15_0();
    OUTLINED_FUNCTION_6_0();
    v23();
    unint64_t v26 = v23;
    OUTLINED_FUNCTION_6_0();
    v23();
    uint64_t v27 = v47;
    if ((v30 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }
  char v28 = OUTLINED_FUNCTION_3_1();
  uint64_t v29 = OUTLINED_FUNCTION_8_0();
  if ((v28 & 1) == 0)
  {
    if (v29 >= 64)
    {
      unint64_t v26 = v23;
      OUTLINED_FUNCTION_6_0();
      v23();
      uint64_t v27 = v47;
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  if (v29 > 64) {
    goto LABEL_10;
  }
  swift_getAssociatedConformanceWitness();
  sub_26087BBF0();
  sub_26087BBC0();
  LODWORD(v50) = OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_6_0();
  v23();
  uint64_t v51 = v22;
  uint64_t v27 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v14, v3);
  if ((v50 & 1) == 0)
  {
    int64_t v32 = v57;
    uint64_t v33 = OUTLINED_FUNCTION_22();
    uint64_t v34 = OUTLINED_FUNCTION_21_0();
    ((void (*)(uint64_t))v23)(v34);
    BOOL v35 = v33 < v32;
    unint64_t v26 = v23;
    if (v35) {
      goto LABEL_34;
    }
    goto LABEL_20;
  }
  uint64_t v45 = OUTLINED_FUNCTION_21_0();
  ((void (*)(uint64_t))v23)(v45);
LABEL_34:
  __break(1u);
}

unint64_t sub_2607DDC34()
{
  unint64_t result = qword_26A8B45B0;
  if (!qword_26A8B45B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45B0);
  }
  return result;
}

uint64_t sub_2607DDC80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_26083A3D4(a1, a2);
  return OUTLINED_FUNCTION_2_0(v2);
}

void HIDUsagePageProtocol<>.init(page:usage:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_26087B620();
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v18 - v14;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v3, v1) == v7)
  {
    v18[1] = v5;
    sub_2607DDC34();
    HIDUsageProtocol<>.init<A>(_:)();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v3) != 1)
    {
      OUTLINED_FUNCTION_5_0();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v9, v15, v3);
      uint64_t v16 = 0;
      goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  }
  uint64_t v16 = 1;
LABEL_6:
  __swift_storeEnumTagSinglePayload(v9, v16, 1, v3);
  OUTLINED_FUNCTION_14_0();
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

void sub_2607DDE3C()
{
}

void HIDUsageProtocol.init<A>(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v25 = v10;
  uint64_t v11 = sub_26087B620();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v5, v1);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(v5, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32))(v17, v18, v7, v3);
  OUTLINED_FUNCTION_5_0();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v9, v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
    uint64_t v20 = 1;
    uint64_t v21 = v25;
  }
  else
  {
    OUTLINED_FUNCTION_5_0();
    uint64_t v23 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v16, v7);
    uint64_t v20 = 0;
    uint64_t v21 = v23;
  }
  __swift_storeEnumTagSinglePayload(v21, v20, 1, v7);
  OUTLINED_FUNCTION_14_0();
}

void sub_2607DE010()
{
}

void HIDUsageProtocol<>.init<A>(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v51 = v1;
  uint64_t v52 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v54 = v10;
  sub_26087B620();
  OUTLINED_FUNCTION_0_0();
  uint64_t v45 = v12;
  uint64_t v46 = v11;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v13);
  uint64_t v50 = (char *)&v45 - v14;
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_9_0();
  uint64_t v20 = v19 - v18;
  uint64_t v49 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_26087B620();
  OUTLINED_FUNCTION_0_0();
  uint64_t v47 = v23;
  uint64_t v48 = v22;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v24);
  unint64_t v26 = (char *)&v45 - v25;
  OUTLINED_FUNCTION_0_0();
  uint64_t v28 = v27;
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  int64_t v32 = (char *)&v45 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v45 - v33;
  BOOL v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  uint64_t v53 = v9;
  v35(v20, v9, v5);
  sub_26087B4C0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v36 = OUTLINED_FUNCTION_13_0();
    v37(v36);
    uint64_t v39 = v47;
    uint64_t v38 = v48;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v34, v26, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v32, v34, AssociatedTypeWitness);
    unint64_t v26 = v50;
    sub_26087B3C0();
    uint64_t v40 = OUTLINED_FUNCTION_13_0();
    v41(v40);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v34, AssociatedTypeWitness);
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v7) != 1)
    {
      OUTLINED_FUNCTION_5_0();
      uint64_t v43 = v54;
      OUTLINED_FUNCTION_7_0();
      v44();
      uint64_t v42 = 0;
      goto LABEL_7;
    }
    uint64_t v39 = v45;
    uint64_t v38 = v46;
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v38);
  uint64_t v42 = 1;
  uint64_t v43 = v54;
LABEL_7:
  __swift_storeEnumTagSinglePayload(v43, v42, 1, v7);
  OUTLINED_FUNCTION_14_0();
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t HIDUsage._usage.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HIDUsage.page.getter(uint64_t result)
{
  return (unsigned __int16)result;
}

uint64_t HIDUsage.usage.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HIDUsage.init(page:usage:)(unsigned __int16 a1, unsigned __int16 a2)
{
  return a1 | (a2 << 16);
}

uint64_t HIDUsage.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unsigned __int16 v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  LOWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(a2, v3);
  OUTLINED_FUNCTION_5_0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  return v6 | ((unsigned __int16)v3 << 16);
}

uint64_t HIDUsage.hash(into:)()
{
  return sub_26087BCD0();
}

BOOL static HIDUsage.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

BOOL sub_2607DE484(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2607DE494()
{
  return sub_26087BCB0();
}

uint64_t sub_2607DE4BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656761705FLL && a2 == 0xE500000000000000;
  if (v2 || (sub_26087BBE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676173755FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_26087BBE0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2607DE59C()
{
  return 2;
}

uint64_t sub_2607DE5A4()
{
  return sub_26087BD00();
}

uint64_t OUTLINED_FUNCTION_41()
{
  return 0;
}

uint64_t sub_2607DE5F8(char a1)
{
  if (a1) {
    return 0x65676173755FLL;
  }
  else {
    return 0x656761705FLL;
  }
}

BOOL sub_2607DE628(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2607DE484(*a1, *a2);
}

uint64_t sub_2607DE634()
{
  return sub_2607DE5A4();
}

uint64_t sub_2607DE63C()
{
  return sub_2607DE494();
}

uint64_t sub_2607DE644()
{
  return sub_26087BD00();
}

uint64_t sub_2607DE688()
{
  return sub_2607DE5F8(*v0);
}

uint64_t sub_2607DE690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2607DE4BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2607DE6B8()
{
  return OUTLINED_FUNCTION_41();
}

uint64_t sub_2607DE6D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2607DE59C();
  *a1 = result;
  return result;
}

uint64_t sub_2607DE700(uint64_t a1)
{
  unint64_t v2 = sub_2607DE8F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2607DE73C(uint64_t a1)
{
  unint64_t v2 = sub_2607DE8F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HIDUsage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B45B8);
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_9_0();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2607DE8F0();
  sub_26087BD20();
  sub_26087BB70();
  if (!v1) {
    sub_26087BB70();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2607DE8F0()
{
  unint64_t result = qword_26A8B45C0;
  if (!qword_26A8B45C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45C0);
  }
  return result;
}

uint64_t HIDUsage.hashValue.getter()
{
  return sub_26087BD00();
}

uint64_t HIDUsage.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B45C8);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_9_0();
  uint64_t v4 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_2607DE8F0();
  sub_26087BD10();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    unsigned __int16 v5 = sub_26087BAC0();
    unsigned __int16 v6 = sub_26087BAC0();
    uint64_t v7 = OUTLINED_FUNCTION_12_0();
    v8(v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5 | (v6 << 16);
  }
  return v4;
}

uint64_t sub_2607DEAF4()
{
  return HIDUsage.page.getter(*v0);
}

uint64_t sub_2607DEAFC()
{
  return HIDUsage.usage.getter(*v0);
}

uint64_t sub_2607DEB04@<X0>(unsigned __int16 a1@<W0>, unsigned __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result = HIDUsage.init(page:usage:)(a1, a2);
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = 0;
  return result;
}

uint64_t sub_2607DEB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = HIDUsage.init<A>(_:)(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(unsigned char *)(a4 + 4) = 0;
  return result;
}

uint64_t sub_2607DEB5C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = HIDUsage.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2607DEB88(void *a1)
{
  return HIDUsage.encode(to:)(a1);
}

uint64_t sub_2607DEBA4()
{
  return HIDUsage.hashValue.getter();
}

uint64_t sub_2607DEBAC()
{
  return HIDUsage.hash(into:)();
}

uint64_t sub_2607DEBB4()
{
  return sub_26087BD00();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

BOOL sub_2607DEC60(int *a1, int *a2)
{
  return static HIDUsage.== infix(_:_:)(*a1, *a2);
}

uint64_t HIDUsage.description.getter()
{
  sub_2607DDC34();
  uint64_t v0 = OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_16_0();
  sub_26087B330();
  sub_26087B330();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2607DED08()
{
  return HIDUsage.description.getter();
}

BOOL static HIDUsage.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a2 >= (unsigned __int16)a1 && HIWORD(a1) < HIWORD(a2);
}

unint64_t sub_2607DED2C(uint64_t a1)
{
  unint64_t result = sub_2607DED54();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2607DED54()
{
  unint64_t result = qword_26A8B45D0;
  if (!qword_26A8B45D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45D0);
  }
  return result;
}

unint64_t sub_2607DEDA4()
{
  unint64_t result = qword_26A8B45D8;
  if (!qword_26A8B45D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45D8);
  }
  return result;
}

BOOL sub_2607DEDF0(unsigned int *a1, unsigned int *a2)
{
  return static HIDUsage.< infix(_:_:)(*a1, *a2);
}

BOOL sub_2607DEDFC(unsigned int *a1, unsigned int *a2)
{
  return sub_26086C0E4(*a1, *a2);
}

BOOL sub_2607DEE08(unsigned int *a1, unsigned int *a2)
{
  return sub_26086C254(*a1, *a2);
}

BOOL sub_2607DEE14(unsigned int *a1, unsigned int *a2)
{
  return sub_26086C514(*a1, *a2);
}

uint64_t dispatch thunk of HIDUsageProtocol.page.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDUsageProtocol.usage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDUsageProtocol.init(page:usage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of HIDUsageProtocol.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of static HIDUsagePageProtocol.usageMinimum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static HIDUsagePageProtocol.usageMaximum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static HIDUsagePageProtocol.usagePage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

_DWORD *__swift_memcpy4_2(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HIDUsage(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HIDUsage(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HIDUsage()
{
  return &type metadata for HIDUsage;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HIDUsage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HIDUsage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2607DF074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2607DF09C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2607DF0A8(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HIDUsage.CodingKeys()
{
  return &type metadata for HIDUsage.CodingKeys;
}

unint64_t sub_2607DF0C8()
{
  unint64_t result = qword_26A8B45E0;
  if (!qword_26A8B45E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45E0);
  }
  return result;
}

unint64_t sub_2607DF118()
{
  unint64_t result = qword_26A8B45E8;
  if (!qword_26A8B45E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45E8);
  }
  return result;
}

unint64_t sub_2607DF168()
{
  unint64_t result = qword_26A8B45F0;
  if (!qword_26A8B45F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45F0);
  }
  return result;
}

uint64_t sub_2607DF1B4()
{
  return sub_2607DD594();
}

uint64_t sub_2607DF1BC()
{
  return sub_2607E3F64(*v0);
}

uint64_t sub_2607DF1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_26083A43C(a1, a2);
  return OUTLINED_FUNCTION_2_0(v2);
}

uint64_t sub_2607DF1EC()
{
  return sub_2607DD5B4();
}

uint64_t sub_2607DF1F4()
{
  sub_26083A2C0();
  return OUTLINED_FUNCTION_2_0(v0);
}

uint64_t sub_2607DF21C()
{
  return sub_2607DD59C();
}

uint64_t sub_2607DF224()
{
  return sub_2607E40D8(*v0);
}

void sub_2607DF22C(uint64_t a1@<X8>)
{
  sub_26083A378();
  *(_WORD *)a1 = v2;
  *(unsigned char *)(a1 + 2) = v3 & 1;
}

uint64_t sub_2607DF25C()
{
  return sub_2607DD5AC();
}

uint64_t sub_2607DF264()
{
  sub_26083A330();
  return OUTLINED_FUNCTION_2_0(v0);
}

uint64_t sub_2607DF28C()
{
  return sub_2607DD5A4();
}

uint64_t sub_2607DF294(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_26083A3AC(a1, a2);
  return OUTLINED_FUNCTION_2_0(v2);
}

uint64_t sub_2607DF2BC()
{
  return sub_2607DD58C();
}

uint64_t sub_2607DF2C4()
{
  return sub_2607E3F6C(*v0);
}

void sub_2607DF2CC(uint64_t a1@<X8>)
{
  sub_26083A3FC();
  *(_WORD *)a1 = v2;
  *(unsigned char *)(a1 + 2) = v3 & 1;
}

void OUTLINED_FUNCTION_1_0()
{
  HIDUsageProtocol.init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_2_0(uint64_t result)
{
  *uint64_t v1 = result;
  v1[1] = BYTE1(result) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return sub_26087B700();
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return sub_26087B6F0();
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_15_0()
{
  return sub_26087B250();
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return sub_26087B360();
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return sub_26087B670();
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22()
{
  return sub_26087B6E0();
}

void static Platform.current.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

BOOL Platform.isiOSPlatformClass.getter()
{
  return *v0 != 1;
}

BOOL static Platform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Platform.hash(into:)()
{
  return sub_26087BCB0();
}

uint64_t Platform.hashValue.getter()
{
  return sub_26087BD00();
}

unint64_t sub_2607DF594()
{
  unint64_t result = qword_26A8B45F8;
  if (!qword_26A8B45F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B45F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Platform(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Platform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2607DF734);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_2607DF75C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Platform()
{
  return &type metadata for Platform;
}

uint64_t FluidTouchGestureFilter.eventMask.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FluidTouchGestureFilter.__allocating_init(service:)(uint64_t a1, uint64_t a2)
{
  char v6 = 0;
  uint64_t v4 = swift_allocObject();
  FluidTouchGestureFilter.init(platform:service:)(&v6, a1, a2);
  return v4;
}

uint64_t FluidTouchGestureFilter.__allocating_init(platform:service:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  FluidTouchGestureFilter.init(platform:service:)(a1, a2, a3);
  return v6;
}

void *FluidTouchGestureFilter.init(platform:service:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  uint64_t v6 = MEMORY[0x263F8EE78];
  v3[4] = sub_2607E2554(MEMORY[0x263F8EE78]);
  v3[5] = sub_2607E2554(v6);
  v3[2] = sub_2607DF8D0(v5);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
  swift_unknownObjectRelease();
  v3[3] = v8;
  return v3;
}

uint64_t sub_2607DF8D0(char a1)
{
  if (a1 == 1) {
    unsigned int v1 = dword_270C9DF20;
  }
  else {
    unsigned int v1 = dword_270C9DF48;
  }
  if (v1 > 0x40) {
    return 0;
  }
  int v3 = v1 & 0x3F;
  if (v1 != 64 && v3 == 63) {
    goto LABEL_12;
  }
  if (v1 == 64) {
    return 0;
  }
  if (v3 != 63) {
    return 1 << v3;
  }
LABEL_12:
  uint64_t result = sub_26087B980();
  __break(1u);
  return result;
}

BOOL FluidTouchGestureFilter.filterEvent(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  OUTLINED_FUNCTION_4_1();
  unsigned int v8 = v7();
  if ((HIDEventType.maskValue.getter(v8) & v6) == 0)
  {
    sub_2607E2A1C((uint64_t)a2, a1);
    return 0;
  }
  uint64_t v201 = MEMORY[0x263F8EE78];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    BOOL v14 = 0;
    goto LABEL_186;
  }
  uint64_t v193 = a1;
  uint64_t v194 = v2;
  BOOL v14 = 0;
  unint64_t v15 = 0;
  unint64_t v16 = v11 + 32;
  unint64_t v196 = v11 + 32;
  while (1)
  {
    sub_2607E2820(v15, 1, v12);
    sub_2607E2A1C(v16 + 40 * v15, (uint64_t)v200);
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(v200, v200[3]);
    OUTLINED_FUNCTION_4_1();
    uint64_t v19 = v18();
    switch(v19)
    {
      case 4:
        OUTLINED_FUNCTION_21_1(v19, v20, v21, v22, v23, v24);
        uint64_t v34 = (void *)sub_2607E1568(&v197);
        BOOL v35 = v34;
        if (v14)
        {
          BOOL v14 = 1;
        }
        else
        {
          id v86 = v34;
          int v87 = sub_2607E1624();

          BOOL v14 = v87 == 1;
        }
        uint64_t v195 = v13;
        if (qword_26A8B44B8 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_18_1();
        uint64_t v88 = HIDReportDescriptor.reportBitCount(for:)(0x11u);
        uint64_t v89 = HIDReport.init(bitCount:id:)(v88, 17);
        unint64_t v91 = v90;
        uint64_t v197 = v89;
        unint64_t v198 = v90;
        uint64_t v92 = a2[3];
        uint64_t v93 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v92);
        (*(void (**)(uint64_t, uint64_t))(v93 + 328))(v92, v93);
        switch(v91 >> 62)
        {
          case 1uLL:
            if (!__OFSUB__(HIDWORD(v89), v89)) {
              goto LABEL_110;
            }
            goto LABEL_216;
          case 2uLL:
            if (!__OFSUB__(*(void *)(v89 + 24), *(void *)(v89 + 16))) {
              goto LABEL_110;
            }
            goto LABEL_215;
          case 3uLL:
            goto LABEL_114;
          default:
LABEL_110:
            OUTLINED_FUNCTION_2_1();
            if (!v135) {
              goto LABEL_205;
            }
            if (v138 > 13)
            {
              sub_2607E22C0(v137, 48);
              uint64_t v89 = v197;
              unint64_t v91 = v198;
            }
LABEL_114:
            id v26 = v35;
            int v139 = sub_2607E1624();

            unsigned int v140 = sub_2607DB19C(8, v89, v91);
            sub_2607E1974(v139 & 0xFFFFFF8F | (16 * ((v140 >> 4) & 7)), 8);
            id v141 = j_j__objc_retain(v26);
            IOHIDEventGetFloatValue();
            double v143 = v142;

            sub_2607E260C(16, v143);
            id v144 = j_j__objc_retain(v26);
            IOHIDEventGetFloatValue();
            double v146 = v145;

            double v147 = v146;
            uint64_t v148 = 32;
            break;
        }
        goto LABEL_145;
      case 5:
        OUTLINED_FUNCTION_21_1(v19, v20, v21, v22, v23, v24);
        __swift_project_boxed_opaque_existential_1(&v197, v199);
        OUTLINED_FUNCTION_4_1();
        if (v39() != 5) {
          goto LABEL_204;
        }
        __swift_project_boxed_opaque_existential_1(&v197, v199);
        uint64_t v40 = OUTLINED_FUNCTION_17_1();
        id v26 = (id)v41(v40);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
        if (v14)
        {
          BOOL v14 = 1;
        }
        else
        {
          id v126 = v26;
          int v127 = sub_2607E1624();

          BOOL v14 = v127 == 1;
        }
        uint64_t v195 = v13;
        if (qword_26A8B4558 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_18_1();
        uint64_t v128 = HIDReportDescriptor.reportBitCount(for:)(0x10u);
        uint64_t v129 = HIDReport.init(bitCount:id:)(v128, 16);
        unint64_t v131 = v130;
        uint64_t v197 = v129;
        unint64_t v198 = v130;
        uint64_t v132 = OUTLINED_FUNCTION_15_1();
        v133(v132);
        switch(v131 >> 62)
        {
          case 1uLL:
            if (!__OFSUB__(HIDWORD(v129), v129)) {
              goto LABEL_138;
            }
            goto LABEL_223;
          case 2uLL:
            if (!__OFSUB__(*(void *)(v129 + 24), *(void *)(v129 + 16))) {
              goto LABEL_138;
            }
            goto LABEL_218;
          case 3uLL:
            goto LABEL_141;
          default:
LABEL_138:
            OUTLINED_FUNCTION_2_1();
            if (!v135) {
              goto LABEL_206;
            }
            if (v159 >= 12)
            {
              uint64_t v172 = 88;
              while (2)
              {
                uint64_t v173 = 0;
                switch(v198 >> 62)
                {
                  case 1uLL:
                  case 2uLL:
                    OUTLINED_FUNCTION_20_2();
                    if (!v135) {
                      goto LABEL_195;
                    }
                    uint64_t v173 = 8 * v175;
LABEL_153:
                    if (__OFADD__(v173, v172)) {
                      goto LABEL_211;
                    }
                    sub_26087AFD0();
                    unint64_t v174 = v172 - 24;
                    v172 -= 8;
                    if (v174 <= 8) {
                      break;
                    }
                    continue;
                  default:
                    goto LABEL_153;
                }
                break;
              }
            }
LABEL_141:
            IOHIDEventGetPhase();
            char v160 = OUTLINED_FUNCTION_25();
            OUTLINED_FUNCTION_24(v160);
            switch(v162)
            {
              case 1:
              case 2:
                OUTLINED_FUNCTION_2_1();
                if (!v135) {
                  goto LABEL_196;
                }
                uint64_t v161 = 8 * v177;
LABEL_142:
                if (__OFADD__(v161, 8)) {
                  goto LABEL_213;
                }
                OUTLINED_FUNCTION_10_1();
                id v154 = j_j__objc_retain(v26);
                break;
              default:
                goto LABEL_142;
            }
            break;
        }
        goto LABEL_144;
      case 7:
        OUTLINED_FUNCTION_21_1(v19, v20, v21, v22, v23, v24);
        __swift_project_boxed_opaque_existential_1(&v197, v199);
        OUTLINED_FUNCTION_4_1();
        if (v36() != 7) {
          goto LABEL_203;
        }
        __swift_project_boxed_opaque_existential_1(&v197, v199);
        uint64_t v37 = OUTLINED_FUNCTION_17_1();
        id v26 = (id)v38(v37);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
        if (v14)
        {
          BOOL v14 = 1;
        }
        else
        {
          IOHIDEventGetPhase();
          OUTLINED_FUNCTION_16_1();
          if (v42) {
            BOOL v14 = 1;
          }
          else {
            BOOL v14 = 0;
          }
        }
        uint64_t v195 = v13;
        if (qword_26A8B4578 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_18_1();
        uint64_t v120 = HIDReportDescriptor.reportBitCount(for:)(0xFu);
        uint64_t v121 = HIDReport.init(bitCount:id:)(v120, 15);
        unint64_t v123 = v122;
        uint64_t v197 = v121;
        unint64_t v198 = v122;
        uint64_t v124 = OUTLINED_FUNCTION_15_1();
        v125(v124);
        switch(v123 >> 62)
        {
          case 1uLL:
            if (!__OFSUB__(HIDWORD(v121), v121)) {
              goto LABEL_123;
            }
            goto LABEL_219;
          case 2uLL:
            if (!__OFSUB__(*(void *)(v121 + 24), *(void *)(v121 + 16))) {
              goto LABEL_123;
            }
            goto LABEL_220;
          case 3uLL:
            goto LABEL_126;
          default:
LABEL_123:
            OUTLINED_FUNCTION_2_1();
            if (!v135) {
              goto LABEL_207;
            }
            if (v150 >= 12)
            {
              uint64_t v155 = 88;
              while (2)
              {
                uint64_t v156 = 0;
                switch(v198 >> 62)
                {
                  case 1uLL:
                  case 2uLL:
                    OUTLINED_FUNCTION_20_2();
                    if (!v135) {
                      goto LABEL_194;
                    }
                    uint64_t v156 = 8 * v158;
LABEL_131:
                    if (__OFADD__(v156, v155)) {
                      goto LABEL_212;
                    }
                    sub_26087AFD0();
                    unint64_t v157 = v155 - 24;
                    v155 -= 8;
                    if (v157 <= 8) {
                      break;
                    }
                    continue;
                  default:
                    goto LABEL_131;
                }
                break;
              }
            }
LABEL_126:
            IOHIDEventGetPhase();
            char v151 = OUTLINED_FUNCTION_25();
            OUTLINED_FUNCTION_24(v151);
            switch(v153)
            {
              case 1:
              case 2:
                OUTLINED_FUNCTION_2_1();
                if (!v135) {
                  goto LABEL_197;
                }
                uint64_t v152 = 8 * v176;
LABEL_127:
                if (__OFADD__(v152, 8)) {
                  goto LABEL_214;
                }
                OUTLINED_FUNCTION_10_1();
                id v154 = v26;
                break;
              default:
                goto LABEL_127;
            }
            break;
        }
LABEL_144:
        IOHIDEventGetFloatValue();
        double v164 = v163;

        double v147 = v164;
        uint64_t v148 = 16;
LABEL_145:
        sub_2607E260C(v148, v147);
LABEL_146:
        uint64_t v165 = v197;
        unint64_t v166 = v198;
        sub_2607DCED0(v197, v198);
        sub_2607E2734((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2608224E4);
        uint64_t v167 = *(void *)(v201 + 16);
        sub_2607E27A8(v167, (uint64_t (*)(BOOL))sub_2608224E4);
        uint64_t v168 = v201;
        *(void *)(v201 + 16) = v167 + 1;
        uint64_t v169 = v168 + 16 * v167;
        *(void *)(v169 + 32) = v165;
        *(void *)(v169 + 40) = v166;

        uint64_t v170 = v165;
        unint64_t v171 = v166;
        goto LABEL_147;
    }
    if (v19 == 16) {
      break;
    }
    switch(v19)
    {
      case 0x16:
        if (qword_26A8B44A8 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_18_1();
        uint64_t v27 = HIDReportDescriptor.reportBitCount(for:)(0xEu);
        uint64_t v28 = HIDReport.init(bitCount:id:)(v27, 14);
        uint64_t v30 = v29;
        sub_2607E2734((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2608224E4);
        uint64_t v31 = *(void *)(v201 + 16);
        sub_2607E27A8(v31, (uint64_t (*)(BOOL))sub_2608224E4);
        uint64_t v32 = v201;
        *(void *)(v201 + 16) = v31 + 1;
        uint64_t v33 = v32 + 16 * v31;
        *(void *)(v33 + 32) = v28;
        *(void *)(v33 + 40) = v30;
        BOOL v14 = 1;
        goto LABEL_148;
      case 0x1B:
        OUTLINED_FUNCTION_21_1(v19, v20, v21, v22, v23, v24);
        id v26 = (id)sub_2607E13F0(&v197);
        if (v14)
        {
          BOOL v14 = 1;
        }
        else
        {
          IOHIDEventGetPhase();
          OUTLINED_FUNCTION_16_1();
          if (v42) {
            BOOL v14 = 1;
          }
          else {
            BOOL v14 = 0;
          }
        }
        if (qword_26A8B44F0 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_18_1();
        uint64_t v64 = HIDReportDescriptor.reportBitCount(for:)(0xCu);
        HIDReport.init(bitCount:id:)(v64, 12);
        OUTLINED_FUNCTION_28();
        sub_2607DCED0((uint64_t)v17, v16);
        sub_2607DB19C(8, (uint64_t)v17, v16);
        sub_2607DCF28((uint64_t)v17, v16);
        uint64_t v65 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
          case 2uLL:
            OUTLINED_FUNCTION_2_1();
            if (!v135) {
              goto LABEL_193;
            }
            uint64_t v65 = 8 * v136;
LABEL_53:
            if (__OFADD__(v65, 8)) {
              goto LABEL_208;
            }
            OUTLINED_FUNCTION_10_1();
            double v66 = FluidTouchGestureEvent.delta.getter();
            sub_2607E1640(v66, v67);
            FluidTouchGestureEvent.swipeMask.getter();
            OUTLINED_FUNCTION_22_0();
            uint64_t v68 = 0;
            switch(v69)
            {
              case 1:
              case 2:
                OUTLINED_FUNCTION_2_1();
                if (!v135) {
                  goto LABEL_198;
                }
                uint64_t v68 = 8 * v179;
LABEL_55:
                if (__OFADD__(v68, 16)) {
                  goto LABEL_222;
                }
                OUTLINED_FUNCTION_10_1();
                unsigned int v70 = (unsigned __int16)FluidTouchGestureEvent.flavor.getter();
                if (v70 >= 0xFF) {
                  uint64_t v71 = 255;
                }
                else {
                  uint64_t v71 = v70;
                }
                sub_2607E1974(v71, 32);
                id v72 = j_j__objc_retain(v26);
                IOHIDEventGetFloatValue();
                double v74 = v73;

                if ((~*(void *)&v74 & 0x7FF0000000000000) != 0) {
                  double v75 = v74;
                }
                else {
                  double v75 = 0.0;
                }
                sub_2607E260C(40, v75);
                unsigned int v76 = (unsigned __int16)FluidTouchGestureEvent.gestureMotion.getter();
                if (v76 >= 0xFF) {
                  uint64_t v77 = 255;
                }
                else {
                  uint64_t v77 = v76;
                }
                sub_2607E1974(v77, 24);
                uint64_t v78 = (void *)sub_2607E16A4(v26);
                uint64_t v195 = v13;
                if (v78)
                {
                  uint64_t v58 = v78;
                  id v79 = j_j__objc_retain(v78);
                  IOHIDEventGetFloatValue();
                  double v81 = v80;

                  j_j__objc_retain(v58);
                  OUTLINED_FUNCTION_23();
                  double v83 = v82;

                  j_j__objc_retain(v58);
                  OUTLINED_FUNCTION_19_1();

                  unint64_t v84 = HIDFixed.init(doubleValue:)(v81);
                  OUTLINED_FUNCTION_8_1(v84);
                  unint64_t v85 = HIDFixed.init(doubleValue:)(v83);
                  OUTLINED_FUNCTION_9_1(v85);
                  goto LABEL_67;
                }
                unint64_t v181 = HIDFixed.init(doubleValue:)(0.0);
                OUTLINED_FUNCTION_8_1(v181);
                unint64_t v182 = HIDFixed.init(doubleValue:)(0.0);
                OUTLINED_FUNCTION_9_1(v182);
                break;
              default:
                goto LABEL_55;
            }
            break;
          default:
            goto LABEL_53;
        }
        goto LABEL_146;
      case 0x17:
        OUTLINED_FUNCTION_21_1(v19, v20, v21, v22, v23, v24);
        uint64_t v25 = (void *)sub_2607E1334(&v197);
        if (v14)
        {
          BOOL v14 = 1;
        }
        else
        {
          IOHIDEventGetPhase();
          OUTLINED_FUNCTION_16_1();
          if (v42) {
            BOOL v14 = 1;
          }
          else {
            BOOL v14 = 0;
          }
        }
        if (qword_26A8B44F8 != -1) {
          swift_once();
        }
        OUTLINED_FUNCTION_18_1();
        uint64_t v94 = HIDReportDescriptor.reportBitCount(for:)(0xBu);
        uint64_t v95 = HIDReport.init(bitCount:id:)(v94, 11);
        unint64_t v97 = v96;
        uint64_t v197 = v95;
        unint64_t v198 = v96;
        IOHIDEventGetPhase();
        sub_2607DCED0(v95, v97);
        sub_2607DB19C(8, v95, v97);
        sub_2607DCF28(v95, v97);
        uint64_t v98 = 0;
        switch(v97 >> 62)
        {
          case 1uLL:
          case 2uLL:
            OUTLINED_FUNCTION_2_1();
            if (!v135) {
              goto LABEL_192;
            }
            uint64_t v98 = 8 * v149;
LABEL_78:
            if (__OFADD__(v98, 8)) {
              goto LABEL_210;
            }
            OUTLINED_FUNCTION_10_1();
            double v99 = DockSwipeEvent.delta.getter();
            sub_2607E1640(v99, v100);
            DockSwipeEvent.swipeMask.getter();
            OUTLINED_FUNCTION_22_0();
            uint64_t v101 = 0;
            switch(v102)
            {
              case 1:
              case 2:
                OUTLINED_FUNCTION_2_1();
                if (!v135) {
                  goto LABEL_199;
                }
                uint64_t v101 = 8 * v180;
LABEL_80:
                if (__OFADD__(v101, 16)) {
                  goto LABEL_217;
                }
                OUTLINED_FUNCTION_10_1();
                DockSwipeEvent.flavor.getter();
                OUTLINED_FUNCTION_22_0();
                uint64_t v103 = 0;
                switch(v104)
                {
                  case 1:
                  case 2:
                    OUTLINED_FUNCTION_2_1();
                    if (!v135) {
                      goto LABEL_202;
                    }
                    uint64_t v103 = 8 * v184;
LABEL_82:
                    if (__OFADD__(v103, 32)) {
                      goto LABEL_225;
                    }
                    OUTLINED_FUNCTION_10_1();
                    id v105 = j_j__objc_retain(v25);
                    IOHIDEventGetFloatValue();
                    double v107 = v106;

                    if ((~*(void *)&v107 & 0x7FF0000000000000) != 0) {
                      double v108 = v107;
                    }
                    else {
                      double v108 = 0.0;
                    }
                    sub_2607E260C(40, v108);
                    unsigned int v109 = (unsigned __int16)DockSwipeEvent.gestureMotion.getter();
                    if (v109 >= 0xFF) {
                      uint64_t v110 = 255;
                    }
                    else {
                      uint64_t v110 = v109;
                    }
                    sub_2607E1974(v110, 24);
                    char v111 = (void *)sub_2607E16A4(v25);
                    uint64_t v195 = v13;
                    if (v111)
                    {
                      char v112 = v111;
                      id v113 = j_j__objc_retain(v111);
                      IOHIDEventGetFloatValue();
                      double v115 = v114;

                      j_j__objc_retain(v112);
                      OUTLINED_FUNCTION_23();
                      double v117 = v116;

                      j_j__objc_retain(v112);
                      OUTLINED_FUNCTION_19_1();

                      unint64_t v118 = HIDFixed.init(doubleValue:)(v115);
                      OUTLINED_FUNCTION_8_1(v118);
                      unint64_t v119 = HIDFixed.init(doubleValue:)(v117);
                      OUTLINED_FUNCTION_9_1(v119);
                    }
                    else
                    {
                      unint64_t v185 = HIDFixed.init(doubleValue:)(0.0);
                      OUTLINED_FUNCTION_8_1(v185);
                      unint64_t v186 = HIDFixed.init(doubleValue:)(0.0);
                      OUTLINED_FUNCTION_9_1(v186);
                    }
                    uint64_t v187 = v197;
                    unint64_t v188 = v198;
                    sub_2607DCED0(v197, v198);
                    sub_2607E2734((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2608224E4);
                    uint64_t v189 = *(void *)(v201 + 16);
                    sub_2607E27A8(v189, (uint64_t (*)(BOOL))sub_2608224E4);
                    uint64_t v190 = v201;
                    *(void *)(v201 + 16) = v189 + 1;
                    uint64_t v191 = v190 + 16 * v189;
                    *(void *)(v191 + 32) = v187;
                    *(void *)(v191 + 40) = v188;

                    uint64_t v170 = v187;
                    unint64_t v171 = v188;
                    break;
                  default:
                    goto LABEL_82;
                }
                break;
              default:
                goto LABEL_80;
            }
            break;
          default:
            goto LABEL_78;
        }
LABEL_147:
        sub_2607DCF28(v170, v171);
        uint64_t v13 = v195;
LABEL_148:
        unint64_t v16 = v196;
        break;
    }
    ++v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v200);
    if (v15 == v13) {
      goto LABEL_201;
    }
  }
  OUTLINED_FUNCTION_21_1(v19, v20, v21, v22, v23, v24);
  id v26 = (id)sub_2607E14AC(&v197);
  if (v14)
  {
    BOOL v14 = 1;
  }
  else
  {
    IOHIDEventGetPhase();
    OUTLINED_FUNCTION_16_1();
    if (v42) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = 0;
    }
  }
  if (qword_26A8B4500 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_1();
  uint64_t v43 = HIDReportDescriptor.reportBitCount(for:)(0xDu);
  HIDReport.init(bitCount:id:)(v43, 13);
  OUTLINED_FUNCTION_28();
  sub_2607DCED0((uint64_t)v17, v16);
  sub_2607DB19C(8, (uint64_t)v17, v16);
  sub_2607DCF28((uint64_t)v17, v16);
  uint64_t v44 = 0;
  switch(v16 >> 62)
  {
    case 1uLL:
    case 2uLL:
      OUTLINED_FUNCTION_2_1();
      if (v135)
      {
        uint64_t v44 = 8 * v134;
LABEL_34:
        if (__OFADD__(v44, 8)) {
          goto LABEL_209;
        }
        OUTLINED_FUNCTION_10_1();
        double v45 = NavigationSwipeEvent.delta.getter();
        sub_2607E1640(v45, v46);
        NavigationSwipeEvent.swipeMask.getter();
        OUTLINED_FUNCTION_22_0();
        uint64_t v47 = 0;
        switch(v48)
        {
          case 1:
          case 2:
            OUTLINED_FUNCTION_2_1();
            if (!v135) {
              goto LABEL_200;
            }
            uint64_t v47 = 8 * v178;
LABEL_36:
            if (__OFADD__(v47, 16)) {
              goto LABEL_221;
            }
            break;
          default:
            goto LABEL_36;
        }
        OUTLINED_FUNCTION_10_1();
        NavigationSwipeEvent.flavor.getter();
        OUTLINED_FUNCTION_22_0();
        uint64_t v49 = 0;
        switch(v50)
        {
          case 1:
          case 2:
            OUTLINED_FUNCTION_2_1();
            if (!v135)
            {
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
LABEL_209:
              __break(1u);
LABEL_210:
              __break(1u);
LABEL_211:
              __break(1u);
LABEL_212:
              __break(1u);
LABEL_213:
              __break(1u);
LABEL_214:
              __break(1u);
LABEL_215:
              __break(1u);
LABEL_216:
              __break(1u);
LABEL_217:
              __break(1u);
LABEL_218:
              __break(1u);
LABEL_219:
              __break(1u);
LABEL_220:
              __break(1u);
LABEL_221:
              __break(1u);
LABEL_222:
              __break(1u);
LABEL_223:
              __break(1u);
LABEL_224:
              __break(1u);
LABEL_225:
              __break(1u);
              JUMPOUT(0x2607E0C84);
            }
            uint64_t v49 = 8 * v183;
LABEL_38:
            if (__OFADD__(v49, 32)) {
              goto LABEL_224;
            }
            OUTLINED_FUNCTION_10_1();
            id v51 = j_j__objc_retain(v26);
            IOHIDEventGetFloatValue();
            double v53 = v52;

            if ((~*(void *)&v53 & 0x7FF0000000000000) != 0) {
              double v54 = v53;
            }
            else {
              double v54 = 0.0;
            }
            sub_2607E260C(40, v54);
            unsigned int v55 = (unsigned __int16)NavigationSwipeEvent.gestureMotion.getter();
            if (v55 >= 0xFF) {
              uint64_t v56 = 255;
            }
            else {
              uint64_t v56 = v55;
            }
            sub_2607E1974(v56, 24);
            int64_t v57 = (void *)sub_2607E16A4(v26);
            uint64_t v195 = v13;
            if (v57)
            {
              uint64_t v58 = v57;
              id v59 = j_j__objc_retain(v57);
              IOHIDEventGetFloatValue();
              double v61 = v60;

              j_j__objc_retain(v58);
              OUTLINED_FUNCTION_23();
              double v63 = v62;

              j_j__objc_retain(v58);
              OUTLINED_FUNCTION_19_1();

              sub_2607E1838(v61, v63);
LABEL_67:
            }
            else
            {
              sub_2607E1838(0.0, 0.0);
            }
            break;
          default:
            goto LABEL_38;
        }
        goto LABEL_146;
      }
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      swift_bridgeObjectRelease();
      a1 = v193;
      uint64_t v3 = v194;
LABEL_186:
      if ((*(unsigned char *)(v3 + 41) & 8) != 0)
      {
        *(void *)(a1 + 32) = 0;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
      }
      else
      {
        sub_2607E2A1C((uint64_t)a2, a1);
      }
      if ((*(unsigned char *)(v3 + 33) & 8) == 0) {
        swift_bridgeObjectRelease();
      }
      return v14;
    default:
      goto LABEL_34;
  }
}

uint64_t sub_2607E0D74(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 7)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E0DD0(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 2)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E0E2C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 6)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E0E88(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 17)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E0EE4(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E0F40(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 5)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E0F9C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 9)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E0FF8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 11)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E1054(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 23)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E10B0(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 22)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E110C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 4)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E1168(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 1)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E11C4(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 35)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E1220(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 39)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E127C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 16)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E12D8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_6_1(a1, a2);
  uint64_t v2 = OUTLINED_FUNCTION_1_1(v8);
  uint64_t result = v3(v2);
  if (result == 27)
  {
    uint64_t v5 = OUTLINED_FUNCTION_0_1((uint64_t)v8);
    uint64_t v7 = v6(v5);
    return OUTLINED_FUNCTION_3_2(v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E1334(void *a1)
{
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v8);
  uint64_t v2 = v9;
  uint64_t v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (result == 23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E13F0(void *a1)
{
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v8);
  uint64_t v2 = v9;
  uint64_t v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (result == 27)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E14AC(void *a1)
{
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v8);
  uint64_t v2 = v9;
  uint64_t v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (result == 16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E1568(void *a1)
{
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v8);
  uint64_t v2 = v9;
  uint64_t v3 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  if (result == 4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 352))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E1624()
{
  return IOHIDEventGetPhase() & 0xFFFFFF8FLL;
}

uint64_t sub_2607E1640(double a1, double a2)
{
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0) {
    a1 = 0.0;
  }
  sub_2607E260C(120, a1);
  if ((~*(void *)&a2 & 0x7FF0000000000000) != 0) {
    double v3 = a2;
  }
  else {
    double v3 = 0.0;
  }
  return sub_2607E260C(136, v3);
}

uint64_t sub_2607E16A4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_children);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_2607E2AD0();
    unint64_t v3 = sub_26087B3F0();

    uint64_t v4 = sub_26082DFC8(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    while (1)
    {
      sub_2607E2A1C(v6, (uint64_t)v18);
      uint64_t v7 = v19;
      uint64_t v8 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      HIDEventProtocol.first(where:)((uint64_t (*)(uint64_t *))sub_2607E2624, 0, v7, v8, (uint64_t *)&v12);
      if (v13) {
        break;
      }
      sub_2607E2B10((uint64_t)&v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      v6 += 40;
      if (!--v5) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    sub_2607E2B70(&v12, (uint64_t)v14);
    sub_2607E2B70(v14, (uint64_t)&v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    if (*((void *)&v16 + 1))
    {
      sub_2607E2B70(&v15, (uint64_t)v18);
      sub_2607E2A1C((uint64_t)v18, (uint64_t)&v15);
      uint64_t v9 = sub_2607E0F9C((uint64_t)&v15, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      return v9;
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_2607E2B10((uint64_t)&v15);
  return 0;
}

void sub_2607E1838(double a1, double a2)
{
  unint64_t v3 = HIDFixed.init(doubleValue:)(a1);
  if ((v3 & 0x100000000) != 0) {
    unint64_t v3 = 0;
  }
  else {
    unint64_t v3 = v3;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v3, 56);
  unint64_t v4 = HIDFixed.init(doubleValue:)(a2);
  if ((v4 & 0x100000000) != 0) {
    unint64_t v4 = 0;
  }
  else {
    unint64_t v4 = v4;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v4, 88);
}

uint64_t FluidTouchGestureFilter.updateCopyMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x263F8EE78];
}

uint64_t FluidTouchGestureFilter.updateFilterMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  return MEMORY[0x263F8EE78];
}

uint64_t FluidTouchGestureFilter.deinit()
{
  return v0;
}

uint64_t FluidTouchGestureFilter.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_2607E18C8()
{
  return FluidTouchGestureFilter.eventMask.getter();
}

BOOL sub_2607E18EC(uint64_t a1, void *a2)
{
  return FluidTouchGestureFilter.filterEvent(_:)(a1, a2);
}

uint64_t sub_2607E1914(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2607E1940(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2607E1974(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = 0;
  if ((a2 & 7) != 0)
  {
    switch(v4 >> 62)
    {
      case 1uLL:
      case 2uLL:
        OUTLINED_FUNCTION_2_1();
        if (v11) {
          goto LABEL_3;
        }
        __break(1u);
        goto LABEL_15;
      default:
LABEL_3:
        BOOL v6 = __OFADD__(a2, 8 * v5);
        uint64_t v7 = a2 + 8 * v5;
        if (!v6)
        {
          OUTLINED_FUNCTION_7_1();
          OUTLINED_FUNCTION_14_1();
          OUTLINED_FUNCTION_12_1();
          uint64_t v7 = 0;
          switch(v8)
          {
            case 1:
            case 2:
              goto LABEL_17;
            default:
              goto LABEL_5;
          }
        }
        goto LABEL_19;
    }
  }
  switch(v4 >> 62)
  {
    case 1uLL:
    case 2uLL:
LABEL_15:
      OUTLINED_FUNCTION_2_1();
      if (v11) {
        goto LABEL_23;
      }
      __break(1u);
LABEL_17:
      OUTLINED_FUNCTION_2_1();
      if (!v11)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      v7 *= 8;
LABEL_5:
      uint64_t v9 = a2 + 8;
      if (__OFADD__(a2, 8)) {
        goto LABEL_21;
      }
      BOOL v6 = __OFADD__(v7, v9);
      v7 += v9;
      if (v6) {
        goto LABEL_22;
      }
      sub_26087B080();
      break;
    default:
      while (1)
      {
        BOOL v6 = __OFADD__(v5, a2);
        uint64_t v7 = v5 + a2;
        if (!v6) {
          break;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        uint64_t v5 = 8 * v7;
      }
      break;
  }
  return sub_26087AFD0();
}

void _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 7;
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_12_1();
    uint64_t v5 = 0;
    switch(v6)
    {
      case 1:
      case 2:
        goto LABEL_28;
      default:
        goto LABEL_3;
    }
  }
  uint64_t v16 = 24;
  unint64_t v4 = 0xF000000000000000;
  while (2)
  {
    uint64_t v17 = *v2;
    uint64_t v8 = 0;
    switch((unint64_t)v2[1] >> 62)
    {
      case 1uLL:
        uint64_t v20 = (int)v17;
        goto LABEL_25;
      case 2uLL:
        uint64_t v20 = *(void *)(v17 + 16);
LABEL_25:
        if ((unint64_t)(v20 - 0x1000000000000000) >> 61 == 7)
        {
          uint64_t v8 = 8 * v20;
LABEL_19:
          uint64_t v18 = a2 + v16;
          if (__OFADD__(a2, v16))
          {
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
            while (1)
            {
              __break(1u);
LABEL_37:
              __break(1u);
              while (1)
              {
                __break(1u);
LABEL_39:
                __break(1u);
LABEL_40:
                __break(1u);
LABEL_41:
                v8 *= 8;
LABEL_5:
                uint64_t v10 = a2 + 32;
                if (__OFADD__(a2, 32)) {
                  break;
                }
                BOOL v7 = __OFADD__(v8, v10);
                v8 += v10;
                if (v7) {
                  goto LABEL_37;
                }
                OUTLINED_FUNCTION_5_1();
                OUTLINED_FUNCTION_14_1();
                unint64_t v11 = 40;
                while (1)
                {
                  OUTLINED_FUNCTION_13_1();
                  uint64_t v12 = 0;
                  switch(v13)
                  {
                    case 1:
                    case 2:
                      OUTLINED_FUNCTION_20_2();
                      if (!v15) {
                        goto LABEL_30;
                      }
                      uint64_t v12 = 8 * v14;
                      break;
                    default:
                      break;
                  }
                  if (__OFADD__(a2, v8)) {
                    break;
                  }
                  if (__OFADD__(v12, a2 + v8)) {
                    goto LABEL_39;
                  }
                  BOOL v7 = __OFSUB__(v8, v4);
                  v8 -= v4;
                  if (v7) {
                    goto LABEL_40;
                  }
                  OUTLINED_FUNCTION_29();
                  OUTLINED_FUNCTION_26();
                  sub_26087AFD0();
                  v11 -= 8;
                  if (v11 <= 0x10) {
                    return;
                  }
                }
              }
            }
          }
          BOOL v7 = __OFADD__(v8, v18);
          v8 += v18;
          if (v7) {
            goto LABEL_34;
          }
          sub_26087AFD0();
          unint64_t v19 = v16 + 8;
          v16 -= 8;
          if (v19 <= 8) {
            return;
          }
          continue;
        }
        __break(1u);
LABEL_28:
        OUTLINED_FUNCTION_2_1();
        if (v15)
        {
LABEL_3:
          BOOL v7 = __OFADD__(a2, 8 * v5);
          uint64_t v8 = a2 + 8 * v5;
          if (!v7)
          {
            OUTLINED_FUNCTION_7_1();
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_12_1();
            uint64_t v8 = 0;
            switch(v9)
            {
              case 1:
              case 2:
                goto LABEL_31;
              default:
                goto LABEL_5;
            }
          }
          goto LABEL_35;
        }
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        OUTLINED_FUNCTION_2_1();
        if (v15) {
          goto LABEL_41;
        }
        __break(1u);
        return;
      default:
        goto LABEL_19;
    }
  }
}

void sub_2607E1DC4(uint64_t a1, uint64_t a2)
{
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_12_1();
    uint64_t v4 = 0;
    switch(v5)
    {
      case 1:
      case 2:
        goto LABEL_21;
      default:
        goto LABEL_3;
    }
  }
  unint64_t v11 = 24;
  while (2)
  {
    OUTLINED_FUNCTION_13_1();
    uint64_t v12 = 0;
    switch(v13)
    {
      case 1:
      case 2:
        OUTLINED_FUNCTION_20_2();
        if (v15)
        {
          uint64_t v12 = 8 * v14;
LABEL_14:
          if (__OFADD__(a2, v7))
          {
            __break(1u);
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          if (__OFADD__(v12, a2 + v7)) {
            goto LABEL_28;
          }
          sub_26087AFD0();
          v11 -= 8;
          if (v11 <= 8) {
            return;
          }
          continue;
        }
        __break(1u);
LABEL_21:
        OUTLINED_FUNCTION_2_1();
        if (v15)
        {
LABEL_3:
          BOOL v6 = __OFADD__(a2, 8 * v4);
          uint64_t v7 = a2 + 8 * v4;
          if (!v6)
          {
            OUTLINED_FUNCTION_7_1();
            OUTLINED_FUNCTION_14_1();
            OUTLINED_FUNCTION_12_1();
            uint64_t v7 = 0;
            switch(v8)
            {
              case 1:
              case 2:
                goto LABEL_23;
              default:
                goto LABEL_5;
            }
          }
          goto LABEL_29;
        }
        __break(1u);
LABEL_23:
        OUTLINED_FUNCTION_2_1();
        if (v15) {
          goto LABEL_33;
        }
        __break(1u);
LABEL_25:
        OUTLINED_FUNCTION_2_1();
        if (v15)
        {
          uint64_t v10 = 8 * v16;
LABEL_8:
          BOOL v6 = __OFADD__(v10, a2 + 8);
          uint64_t v7 = v10 + a2 + 8;
          if (v6)
          {
            while (1)
            {
              __break(1u);
LABEL_33:
              v7 *= 8;
LABEL_5:
              uint64_t v9 = a2 + 16;
              if (__OFADD__(a2, 16))
              {
LABEL_30:
                __break(1u);
              }
              else
              {
                BOOL v6 = __OFADD__(v7, v9);
                v7 += v9;
                if (!v6)
                {
                  OUTLINED_FUNCTION_5_1();
                  OUTLINED_FUNCTION_14_1();
                  uint64_t v10 = 0;
                  switch(*(void *)(v2 + 8) >> 62)
                  {
                    case 1:
                    case 2:
                      goto LABEL_25;
                    default:
                      goto LABEL_8;
                  }
                }
              }
              __break(1u);
            }
          }
          sub_26087AFD0();
        }
        else
        {
          __break(1u);
        }
        return;
      default:
        goto LABEL_14;
    }
  }
}

void sub_2607E2040(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 7;
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_12_1();
    uint64_t v5 = 0;
    switch(v6)
    {
      case 1:
      case 2:
        goto LABEL_28;
      default:
        goto LABEL_3;
    }
  }
  uint64_t v16 = 24;
  unint64_t v4 = 0xF000000000000000;
  while (2)
  {
    uint64_t v17 = *v2;
    uint64_t v8 = 0;
    switch((unint64_t)v2[1] >> 62)
    {
      case 1uLL:
        uint64_t v20 = (int)v17;
        goto LABEL_25;
      case 2uLL:
        uint64_t v20 = *(void *)(v17 + 16);
LABEL_25:
        if ((unint64_t)(v20 - 0x1000000000000000) >> 61 == 7)
        {
          uint64_t v8 = 8 * v20;
LABEL_19:
          uint64_t v18 = a2 + v16;
          if (__OFADD__(a2, v16))
          {
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
            while (1)
            {
              __break(1u);
LABEL_37:
              __break(1u);
              while (1)
              {
                __break(1u);
LABEL_39:
                __break(1u);
LABEL_40:
                __break(1u);
LABEL_41:
                v8 *= 8;
LABEL_5:
                uint64_t v10 = a2 + 32;
                if (__OFADD__(a2, 32)) {
                  break;
                }
                BOOL v7 = __OFADD__(v8, v10);
                v8 += v10;
                if (v7) {
                  goto LABEL_37;
                }
                OUTLINED_FUNCTION_5_1();
                OUTLINED_FUNCTION_14_1();
                unint64_t v11 = 40;
                while (1)
                {
                  OUTLINED_FUNCTION_13_1();
                  uint64_t v12 = 0;
                  switch(v13)
                  {
                    case 1:
                    case 2:
                      OUTLINED_FUNCTION_20_2();
                      if (!v15) {
                        goto LABEL_30;
                      }
                      uint64_t v12 = 8 * v14;
                      break;
                    default:
                      break;
                  }
                  if (__OFADD__(a2, v8)) {
                    break;
                  }
                  if (__OFADD__(v12, a2 + v8)) {
                    goto LABEL_39;
                  }
                  BOOL v7 = __OFSUB__(v8, v4);
                  v8 -= v4;
                  if (v7) {
                    goto LABEL_40;
                  }
                  OUTLINED_FUNCTION_29();
                  OUTLINED_FUNCTION_26();
                  sub_26087AFD0();
                  v11 -= 8;
                  if (v11 <= 0x10) {
                    return;
                  }
                }
              }
            }
          }
          BOOL v7 = __OFADD__(v8, v18);
          v8 += v18;
          if (v7) {
            goto LABEL_34;
          }
          sub_26087AFD0();
          unint64_t v19 = v16 + 8;
          v16 -= 8;
          if (v19 <= 8) {
            return;
          }
          continue;
        }
        __break(1u);
LABEL_28:
        OUTLINED_FUNCTION_2_1();
        if (v15)
        {
LABEL_3:
          BOOL v7 = __OFADD__(a2, 8 * v5);
          uint64_t v8 = a2 + 8 * v5;
          if (!v7)
          {
            OUTLINED_FUNCTION_7_1();
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_12_1();
            uint64_t v8 = 0;
            switch(v9)
            {
              case 1:
              case 2:
                goto LABEL_31;
              default:
                goto LABEL_5;
            }
          }
          goto LABEL_35;
        }
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        OUTLINED_FUNCTION_2_1();
        if (v15) {
          goto LABEL_41;
        }
        __break(1u);
        return;
      default:
        goto LABEL_19;
    }
  }
}

void sub_2607E22C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a2 & 7;
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_12_1();
    uint64_t v4 = 0;
    switch(v5)
    {
      case 1:
      case 2:
        goto LABEL_26;
      default:
        goto LABEL_3;
    }
  }
  unint64_t v15 = 72;
  unint64_t v3 = 0xF000000000000000;
  while (2)
  {
    OUTLINED_FUNCTION_13_1();
    uint64_t v16 = 0;
    switch(v17)
    {
      case 1:
      case 2:
        OUTLINED_FUNCTION_20_2();
        if (v14)
        {
          uint64_t v16 = 8 * v18;
          goto LABEL_19;
        }
        __break(1u);
LABEL_26:
        OUTLINED_FUNCTION_2_1();
        if (v14)
        {
LABEL_3:
          BOOL v6 = __OFADD__(a2, 8 * v4);
          uint64_t v7 = a2 + 8 * v4;
          if (!v6)
          {
            OUTLINED_FUNCTION_7_1();
            OUTLINED_FUNCTION_11_1();
            OUTLINED_FUNCTION_12_1();
            uint64_t v7 = 0;
            switch(v8)
            {
              case 1:
              case 2:
                goto LABEL_29;
              default:
                goto LABEL_5;
            }
          }
          goto LABEL_33;
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        OUTLINED_FUNCTION_2_1();
        if (v14) {
          goto LABEL_39;
        }
        __break(1u);
        return;
      default:
LABEL_19:
        if (__OFADD__(a2, v7))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          while (1)
          {
            __break(1u);
LABEL_35:
            __break(1u);
            while (1)
            {
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              __break(1u);
LABEL_39:
              v7 *= 8;
LABEL_5:
              uint64_t v9 = a2 + 64;
              if (__OFADD__(a2, 64)) {
                break;
              }
              BOOL v6 = __OFADD__(v7, v9);
              v7 += v9;
              if (v6) {
                goto LABEL_35;
              }
              OUTLINED_FUNCTION_5_1();
              sub_26087AFD0();
              unint64_t v10 = 72;
              while (1)
              {
                OUTLINED_FUNCTION_13_1();
                uint64_t v11 = 0;
                switch(v12)
                {
                  case 1:
                  case 2:
                    OUTLINED_FUNCTION_20_2();
                    if (!v14) {
                      goto LABEL_28;
                    }
                    uint64_t v11 = 8 * v13;
                    break;
                  default:
                    break;
                }
                if (__OFADD__(a2, v7)) {
                  break;
                }
                if (__OFADD__(v11, a2 + v7)) {
                  goto LABEL_37;
                }
                BOOL v6 = __OFSUB__(v7, v3);
                v7 -= v3;
                if (v6) {
                  goto LABEL_38;
                }
                sub_26087AFD0();
                v10 -= 8;
                if (v10 <= 0x10) {
                  return;
                }
              }
            }
          }
        }
        if (__OFADD__(v16, a2 + v7)) {
          goto LABEL_32;
        }
        sub_26087AFD0();
        v15 -= 8;
        if (v15 > 8) {
          continue;
        }
        return;
    }
  }
}

uint64_t sub_2607E2554(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    unint64_t v3 = (unsigned int *)(a1 + 32);
    while (1)
    {
      unsigned int v5 = *v3++;
      unsigned int v4 = v5;
      if (v5 >= 0x40) {
        break;
      }
      if (v4 == 63)
      {
        OUTLINED_FUNCTION_27();
        uint64_t result = sub_26087B980();
        __break(1u);
        return result;
      }
      uint64_t v6 = 1 << v4;
      if ((v6 & v2) == 0) {
        goto LABEL_7;
      }
LABEL_8:
      if (!--v1) {
        goto LABEL_11;
      }
    }
    uint64_t v6 = 0;
LABEL_7:
    v2 |= v6;
    goto LABEL_8;
  }
  uint64_t v2 = 0;
LABEL_11:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2607E260C(uint64_t a1, double a2)
{
  if ((~*(void *)&a2 & 0x7FF0000000000000) != 0) {
    return sub_260849BC0(a1, a2);
  }
  __break(1u);
  return a1;
}

BOOL sub_2607E2628(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_4_1();
  return v1() == 9;
}

uint64_t sub_2607E267C(uint64_t a1)
{
  return sub_2607E2694(a1);
}

uint64_t sub_2607E2688(uint64_t a1)
{
  return sub_2607E2694(a1);
}

uint64_t sub_2607E2694(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = sub_26087B980();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_26087B420();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_2607E271C()
{
  return sub_2607E2734((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_26082266C);
}

uint64_t sub_2607E2734(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_2607E2790(uint64_t a1)
{
  return sub_2607E27A8(a1, (uint64_t (*)(BOOL))sub_26082266C);
}

uint64_t sub_2607E27A8(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_2607E27F0(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_26087B410();
  }
  return result;
}

unint64_t sub_2607E2820(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2607E2840(unint64_t a1, unint64_t a2)
{
  sub_2607E2AD0();
  if (a2 >> 62)
  {
    uint64_t v4 = sub_26087B9D0();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_26087B7F0();
  sub_26087B330();
  sub_26087BD50();
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_26087BD50();
  sub_26087B330();
  swift_bridgeObjectRelease();
  uint64_t result = sub_26087B9A0();
  __break(1u);
  return result;
}

uint64_t sub_2607E2A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for FluidTouchGestureFilter()
{
  return self;
}

uint64_t method lookup function for FluidTouchGestureFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FluidTouchGestureFilter);
}

uint64_t dispatch thunk of FluidTouchGestureFilter.__allocating_init(platform:service:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unint64_t sub_2607E2AD0()
{
  unint64_t result = qword_26A8B52D0;
  if (!qword_26A8B52D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A8B52D0);
  }
  return result;
}

uint64_t sub_2607E2B10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2607E2B70(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_1(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v2 = v1[3];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_1_1(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_3_2(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(v1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return sub_26087B080();
}

uint64_t OUTLINED_FUNCTION_6_1(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  return sub_2607E2A1C(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return sub_26087B080();
}

void OUTLINED_FUNCTION_8_1(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0) {
    a1 = 0;
  }
  else {
    a1 = a1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(a1, 56);
}

void OUTLINED_FUNCTION_9_1(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0) {
    a1 = 0;
  }
  else {
    a1 = a1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(a1, 88);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return sub_26087AFD0();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return sub_26087AFD0();
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return sub_26087AFD0();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_21_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  return sub_2607E2A1C((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_23()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_24(char a1)
{
  return a1 & 0x70 | v1;
}

unint64_t OUTLINED_FUNCTION_25()
{
  return sub_2607DB19C(8, v0, v1);
}

uint64_t OUTLINED_FUNCTION_28()
{
  return IOHIDEventGetPhase();
}

uint64_t static GameControllerEvent.eventType.getter()
{
  return 35;
}

uint64_t GameControllerEvent.init(time:controllerType:dpadUp:dpadDown:dpadLeft:dpadRight:faceX:faceY:faceA:faceB:joystickLeft:thumbstickLeft:joystickRight:thumbstickRight:shoulderL1:shoulderL2:shoulderR1:shoulderR2:flags:)()
{
  uint64_t v0 = IOHIDEventCreate();
  IOHIDEventSetIntegerValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetDoubleValue();
  IOHIDEventSetEventFlags();
  return v0;
}

uint64_t GameControllerEvent.init(event:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  if (v3(v2) == 35)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v4 = OUTLINED_FUNCTION_8_2();
    uint64_t v6 = v5(v4);
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t GameControllerEvent.controllerType.getter()
{
  unint64_t result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_27();
    unint64_t result = sub_26087B980();
    __break(1u);
  }
  return result;
}

uint64_t GameControllerEvent.controllerType.setter()
{
  return OUTLINED_FUNCTION_7_2();
}

uint64_t (*GameControllerEvent.controllerType.modify(uint64_t a1, uint64_t a2))()
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = GameControllerEvent.controllerType.getter();
  return sub_2607E327C;
}

uint64_t sub_2607E327C()
{
  return OUTLINED_FUNCTION_7_2();
}

uint64_t GameControllerEvent.dpadUp.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadUp.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.dpadUp.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E32E8;
}

uint64_t sub_2607E32E8()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.dpadDown.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadDown.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.dpadDown.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3358;
}

uint64_t sub_2607E3358()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.dpadLeft.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadLeft.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.dpadLeft.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E33C8;
}

uint64_t sub_2607E33C8()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.dpadRight.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.dpadRight.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.dpadRight.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3438;
}

uint64_t sub_2607E3438()
{
  return OUTLINED_FUNCTION_0_2();
}

double GameControllerEvent.joystickLeft.getter()
{
  return OUTLINED_FUNCTION_4_2();
}

void sub_2607E3460(uint64_t a1@<X8>)
{
  *(double *)a1 = GameControllerEvent.joystickLeft.getter();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_2607E3490()
{
  return GameControllerEvent.joystickLeft.setter();
}

uint64_t GameControllerEvent.joystickLeft.setter()
{
  return OUTLINED_FUNCTION_5_2();
}

uint64_t (*GameControllerEvent.joystickLeft.modify(void *a1, uint64_t a2))()
{
  a1[3] = a2;
  IOHIDEventGetDoubleValue();
  uint64_t v4 = v3;
  IOHIDEventGetDoubleValue();
  *a1 = v4;
  a1[1] = v5;
  a1[2] = 0;
  return sub_2607E3534;
}

uint64_t sub_2607E3534()
{
  return OUTLINED_FUNCTION_6_2();
}

double GameControllerEvent.joystickRight.getter()
{
  return OUTLINED_FUNCTION_4_2();
}

double sub_2607E355C()
{
  IOHIDEventGetDoubleValue();
  double v1 = v0;
  IOHIDEventGetDoubleValue();
  return v1;
}

void sub_2607E35A8(uint64_t a1@<X8>)
{
  *(double *)a1 = GameControllerEvent.joystickRight.getter();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_2607E35D8()
{
  return GameControllerEvent.joystickRight.setter();
}

uint64_t GameControllerEvent.joystickRight.setter()
{
  return OUTLINED_FUNCTION_5_2();
}

uint64_t sub_2607E35F8()
{
  IOHIDEventSetDoubleValue();
  return IOHIDEventSetDoubleValue();
}

uint64_t (*GameControllerEvent.joystickRight.modify(void *a1, uint64_t a2))()
{
  a1[3] = a2;
  IOHIDEventGetDoubleValue();
  uint64_t v4 = v3;
  IOHIDEventGetDoubleValue();
  *a1 = v4;
  a1[1] = v5;
  a1[2] = 0;
  return sub_2607E36CC;
}

uint64_t sub_2607E36CC()
{
  return OUTLINED_FUNCTION_6_2();
}

uint64_t sub_2607E36E0()
{
  IOHIDEventSetDoubleValue();
  return IOHIDEventSetDoubleValue();
}

uint64_t GameControllerEvent.buttonX.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonX.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonX.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3794;
}

uint64_t sub_2607E3794()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonY.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonY.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonY.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3804;
}

uint64_t sub_2607E3804()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonA.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonA.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonA.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3874;
}

uint64_t sub_2607E3874()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonB.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonB.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonB.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E38E4;
}

uint64_t sub_2607E38E4()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder1.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder1.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonLeftShoulder1.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3954;
}

uint64_t sub_2607E3954()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder2.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonLeftShoulder2.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonLeftShoulder2.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E39C4;
}

uint64_t sub_2607E39C4()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonRightShoulder1.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonRightShoulder1.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonRightShoulder1.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3A34;
}

uint64_t sub_2607E3A34()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonRightShoulder2.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonRightShoulder2.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonRightShoulder2.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3AA4;
}

uint64_t sub_2607E3AA4()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonThumbstickLeft.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonThumbstickLeft.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonThumbstickLeft.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3B14;
}

uint64_t sub_2607E3B14()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t GameControllerEvent.buttonThumbstickRight.getter()
{
  return OUTLINED_FUNCTION_1_2();
}

uint64_t GameControllerEvent.buttonThumbstickRight.setter()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t (*GameControllerEvent.buttonThumbstickRight.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_2607E3B84;
}

uint64_t sub_2607E3B84()
{
  return OUTLINED_FUNCTION_0_2();
}

uint64_t sub_2607E3B98()
{
  return 35;
}

uint64_t sub_2607E3BA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = GameControllerEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2607E3BC8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id sub_2607E3BD0()
{
  return *v0;
}

unint64_t sub_2607E3BD8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  unint64_t result = GameControllerEvent.controllerType.getter();
  *double v1 = result;
  return result;
}

uint64_t sub_2607E3C00()
{
  return GameControllerEvent.controllerType.setter();
}

uint64_t sub_2607E3C0C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.dpadUp.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3C34()
{
  return GameControllerEvent.dpadUp.setter();
}

uint64_t sub_2607E3C40(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.dpadDown.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3C68()
{
  return GameControllerEvent.dpadDown.setter();
}

uint64_t sub_2607E3C74(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.dpadLeft.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3C9C()
{
  return GameControllerEvent.dpadLeft.setter();
}

uint64_t sub_2607E3CA8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.dpadRight.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3CD0()
{
  return GameControllerEvent.dpadRight.setter();
}

uint64_t sub_2607E3CEC(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonX.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3D14()
{
  return GameControllerEvent.buttonX.setter();
}

uint64_t sub_2607E3D20(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonY.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3D48()
{
  return GameControllerEvent.buttonY.setter();
}

uint64_t sub_2607E3D54(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonA.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3D7C()
{
  return GameControllerEvent.buttonA.setter();
}

uint64_t sub_2607E3D88(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonB.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3DB0()
{
  return GameControllerEvent.buttonB.setter();
}

uint64_t sub_2607E3DBC(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonLeftShoulder1.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3DE4()
{
  return GameControllerEvent.buttonLeftShoulder1.setter();
}

uint64_t sub_2607E3DF0(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonLeftShoulder2.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3E18()
{
  return GameControllerEvent.buttonLeftShoulder2.setter();
}

uint64_t sub_2607E3E24(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonRightShoulder1.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3E4C()
{
  return GameControllerEvent.buttonRightShoulder1.setter();
}

uint64_t sub_2607E3E58(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonRightShoulder2.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3E80()
{
  return GameControllerEvent.buttonRightShoulder2.setter();
}

uint64_t sub_2607E3E8C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonThumbstickLeft.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3EB4()
{
  return GameControllerEvent.buttonThumbstickLeft.setter();
}

uint64_t sub_2607E3EC0(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = GameControllerEvent.buttonThumbstickRight.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_2607E3EE8()
{
  return GameControllerEvent.buttonThumbstickRight.setter();
}

ValueMetadata *type metadata accessor for GameControllerEvent()
{
  return &type metadata for GameControllerEvent;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return IOHIDEventSetDoubleValue();
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return IOHIDEventGetDoubleValue();
}

uint64_t OUTLINED_FUNCTION_2_2(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_3(uint64_t a1)
{
  return *(void *)a1;
}

double OUTLINED_FUNCTION_4_2()
{
  return sub_2607E355C();
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return sub_2607E35F8();
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return sub_2607E36E0();
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return v0;
}

uint64_t sub_2607E3F64(uint64_t result)
{
  return result;
}

uint64_t sub_2607E3F6C(uint64_t result)
{
  return (unsigned __int16)result;
}

uint64_t ButtonUsage.init(rawValue:)(unsigned __int8 a1)
{
  if (a1 <= 2u) {
    unsigned __int8 v1 = a1;
  }
  else {
    unsigned __int8 v1 = 0;
  }
  return v1 | ((a1 > 2u) << 8);
}

uint64_t static ButtonUsage.usageMinimum.getter()
{
  return 0;
}

uint64_t static ButtonUsage.usageMaximum.getter()
{
  return 2;
}

uint64_t sub_2607E3FAC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = ButtonUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t static ButtonUsage.usagePage.getter()
{
  return 9;
}

uint64_t static ButtonUsage.primary.getter()
{
  return 0;
}

uint64_t static ButtonUsage.tertiary.getter()
{
  return 2;
}

uint64_t static ButtonUsage.secondary.getter()
{
  return 1;
}

unint64_t sub_2607E4000(uint64_t a1)
{
  unint64_t result = sub_2607E4028();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2607E4028()
{
  unint64_t result = qword_26A8B4608;
  if (!qword_26A8B4608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4608);
  }
  return result;
}

unint64_t sub_2607E4078()
{
  unint64_t result = qword_26A8B4610;
  if (!qword_26A8B4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4610);
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonUsage()
{
  return &type metadata for ButtonUsage;
}

uint64_t static UInt8.logicalMaximum.getter()
{
  return 255;
}

void sub_2607E40E8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_2607E40F0(unsigned char *a1@<X8>)
{
  *a1 = -1;
}

uint64_t static UInt16.logicalMaximum.getter()
{
  return 0xFFFFLL;
}

void sub_2607E4108(_WORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_2607E4110(_WORD *a1@<X8>)
{
  *a1 = -1;
}

uint64_t static UInt32.logicalMaximum.getter()
{
  return 0xFFFFFFFFLL;
}

void sub_2607E4128(_DWORD *a1@<X8>)
{
  *a1 = -1;
}

uint64_t static UInt64.logicalMinimum.getter()
{
  return 0;
}

uint64_t static UInt64.logicalMaximum.getter()
{
  return -1;
}

void sub_2607E4144(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_2607E414C(void *a1@<X8>)
{
  *a1 = -1;
}

double HIDReport.scaledValue<A>(as:atIndex:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_2();
  uint64_t v33 = v8;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v33 - v14;
  swift_getAssociatedConformanceWitness();
  BOOL v35 = v15;
  HIDReport.subscript.getter(a2, a3, a4, AssociatedTypeWitness, (uint64_t)v15);
  uint64_t v16 = OUTLINED_FUNCTION_23_0();
  v17(v16);
  if (sub_26087B6F0() < 65)
  {
    char v21 = OUTLINED_FUNCTION_19_2();
    uint64_t v22 = sub_26087B6E0();
    uint64_t v18 = v33;
    unint64_t v19 = *(void (**)(void))(v33 + 8);
    OUTLINED_FUNCTION_11_2();
    v19();
    if (v21) {
      double v20 = (double)v22;
    }
    else {
      double v20 = (double)(unint64_t)v22;
    }
  }
  else
  {
    sub_2607E4518();
    sub_2607E4564();
    OUTLINED_FUNCTION_13_2();
    uint64_t v18 = v33;
    unint64_t v19 = *(void (**)(void))(v33 + 8);
    OUTLINED_FUNCTION_11_2();
    v19();
    double v20 = v36;
  }
  uint64_t v23 = OUTLINED_FUNCTION_23_0();
  v24(v23);
  if (sub_26087B6F0() <= 64)
  {
    char v26 = OUTLINED_FUNCTION_19_2();
    uint64_t v27 = sub_26087B6E0();
    OUTLINED_FUNCTION_11_2();
    v19();
    if (v26) {
      double v25 = (double)v27;
    }
    else {
      double v25 = (double)(unint64_t)v27;
    }
  }
  else
  {
    sub_2607E4518();
    sub_2607E4564();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_11_2();
    v19();
    double v25 = v36;
  }
  uint64_t v28 = v35;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v34, v35, AssociatedTypeWitness);
  if (sub_26087B6F0() <= 64)
  {
    char v30 = OUTLINED_FUNCTION_19_2();
    uint64_t v31 = sub_26087B6E0();
    OUTLINED_FUNCTION_11_2();
    v19();
    if (v30) {
      double v29 = (double)v31;
    }
    else {
      double v29 = (double)(unint64_t)v31;
    }
  }
  else
  {
    sub_2607E4518();
    sub_2607E4564();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_11_2();
    v19();
    double v29 = v36;
  }
  ((void (*)(char *, uint64_t))v19)(v28, AssociatedTypeWitness);
  return (v29 - v20) / (v25 - v20);
}

unint64_t sub_2607E4518()
{
  unint64_t result = qword_26A8B4618;
  if (!qword_26A8B4618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4618);
  }
  return result;
}

unint64_t sub_2607E4564()
{
  unint64_t result = qword_26A8B4620;
  if (!qword_26A8B4620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4620);
  }
  return result;
}

void HIDReport.setScaledValue<A>(_:as:atIndex:)(double a1, uint64_t a2, char **a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_2();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  char v26 = (char *)&v40 - v25;
  if (a4 == MEMORY[0x263F8E778])
  {
    sub_2607E4F08(0, 255, v19, v20, v21, v22, v23, v24, v40, v41, v42, SHIBYTE(v42), v44, v45, v46, v47, v48, v49, v50,
      v51,
      v52);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_9_2();
    _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v28, v29);
  }
  else if (a4 == MEMORY[0x263F8E888])
  {
    sub_2607E4E08(0, 0xFFFFLL, v19, v20, v21, v22, v23, v24, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50,
      v51,
      v52);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_9_2();
    _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcis_0(v31, v32);
  }
  else if (a4 == MEMORY[0x263F8E8F8])
  {
    sub_2607E4C50(0, 0xFFFFFFFFLL, a1);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_9_2();
    _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v34, v35);
  }
  else if (a4 == MEMORY[0x263F8E970])
  {
    sub_2607E4A98(0, 0xFFFFFFFFFFFFFFFFLL, a1);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_9_2();
    _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v37, v38);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
    (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    FixedWidthInteger.init(scaledValue:logicalMinimum:logicalMaximum:)((uint64_t)v18, (uint64_t)v15, AssociatedTypeWitness, (uint64_t)v26, a1);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v26, AssociatedTypeWitness);
    HIDReport.subscript.setter((uint64_t)v18, a3, AssociatedTypeWitness, AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v26, AssociatedTypeWitness);
    OUTLINED_FUNCTION_9_2();
  }
}

#error "2607E48DC: call analysis failed (funcsize=57)"

#error "2607E49D8: call analysis failed (funcsize=57)"

uint64_t sub_2607E4A98(unint64_t a1, unint64_t a2, double a3)
{
  unint64_t v3 = a2;
  double v5 = (double)a1;
  double v6 = (double)a2;
  double v7 = (double)a2 - (double)a1;
  double v8 = v7 * a3 + (double)a1;
  if (v8 > (double)a1) {
    double v9 = v7 * a3 + (double)a1;
  }
  else {
    double v9 = (double)a1;
  }
  if (v9 > v6) {
    double v9 = (double)a2;
  }
  if (sub_2607E5658((uint64_t)&v15, v9) && (v16 & 1) == 0) {
    return v15;
  }
  double v10 = 0.0 - v6;
  if (0.0 - v6 < INFINITY) {
    *(void *)&double v10 = ((COERCE__INT64(0.0 - v6) >> 63) | 1) + COERCE__INT64(0.0 - v6);
  }
  double v11 = -v10;
  if (v8 > v11) {
    return v3;
  }
  *(void *)&double v12 = ((*(uint64_t *)&v5 >> 63) | 1) + *(void *)&v5;
  double v13 = v12;
  unint64_t v3 = a1;
  if (v8 < v12) {
    return v3;
  }
  if (v8 > v12) {
    double v13 = v8;
  }
  if (v13 <= v11) {
    double v11 = v13;
  }
  sub_2607E5658((uint64_t)&v15, v11);
  if ((v16 & 1) == 0) {
    return v15;
  }
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_26087B7F0();
  sub_26087B330();
  sub_26087B330();
  sub_26087B330();
  sub_26087B330();
  uint64_t result = sub_26087B990();
  __break(1u);
  return result;
}

uint64_t sub_2607E4C50(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3 = a2;
  double v5 = (double)a1;
  double v6 = (double)a2;
  double v7 = (double)a2 - (double)a1;
  double v8 = v7 * a3 + (double)a1;
  if (v8 > (double)a1) {
    double v9 = v7 * a3 + (double)a1;
  }
  else {
    double v9 = (double)a1;
  }
  if (v9 > v6) {
    double v9 = (double)a2;
  }
  if (sub_2607E5774((uint64_t)v15, v9) && (v15[0] & 0x100000000) == 0) {
    return LODWORD(v15[0]);
  }
  double v10 = 0.0 - v6;
  if (0.0 - v6 < INFINITY) {
    *(void *)&double v10 = ((COERCE__INT64(0.0 - v6) >> 63) | 1) + COERCE__INT64(0.0 - v6);
  }
  double v11 = -v10;
  if (v8 > v11) {
    return v3;
  }
  *(void *)&double v12 = ((*(uint64_t *)&v5 >> 63) | 1) + *(void *)&v5;
  double v13 = v12;
  uint64_t v3 = a1;
  if (v8 < v12) {
    return v3;
  }
  if (v8 > v12) {
    double v13 = v8;
  }
  if (v13 <= v11) {
    double v11 = v13;
  }
  sub_2607E5774((uint64_t)v15, v11);
  if ((v15[0] & 0x100000000) == 0) {
    return LODWORD(v15[0]);
  }
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_26087B7F0();
  sub_26087B330();
  sub_26087B330();
  sub_26087B330();
  sub_26087B330();
  uint64_t result = sub_26087B990();
  __break(1u);
  return result;
}

void sub_2607E4E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_22_1();
  a20 = v21;
  a21 = v24;
  OUTLINED_FUNCTION_18_2();
  double v27 = OUTLINED_FUNCTION_14_2(v25, v26);
  if (v27 > v23) {
    double v27 = v23;
  }
  if (sub_2607E58D0((uint64_t)&a11, v27) && (a12 & 1) == 0) {
    goto LABEL_16;
  }
  double v28 = OUTLINED_FUNCTION_17_2();
  *(void *)&double v30 = ((v29 >> 63) | 1) + v29;
  if (v31) {
    double v28 = v30;
  }
  OUTLINED_FUNCTION_16_2(v28);
  if (!(v31 ^ v32 | v34)) {
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_2_3();
  if (v31) {
    goto LABEL_16;
  }
  if (!v34 & v33) {
    double v36 = v22;
  }
  if (v36 <= v35) {
    double v35 = v36;
  }
  sub_2607E58D0((uint64_t)&a11, v35);
  if (a12)
  {
    OUTLINED_FUNCTION_3_4();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_0_3();
    sub_26087B330();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_4_3();
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_20_3();
  }
}

void sub_2607E4F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_22_1();
  a20 = v21;
  a21 = v24;
  OUTLINED_FUNCTION_18_2();
  double v27 = OUTLINED_FUNCTION_14_2(v25, v26);
  if (v27 > v23) {
    double v27 = v23;
  }
  if (sub_2607E5A30(&a11, v27) && (a12 & 1) == 0) {
    goto LABEL_16;
  }
  double v28 = OUTLINED_FUNCTION_17_2();
  *(void *)&double v30 = ((v29 >> 63) | 1) + v29;
  if (v31) {
    double v28 = v30;
  }
  OUTLINED_FUNCTION_16_2(v28);
  if (!(v31 ^ v32 | v34)) {
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_2_3();
  if (v31) {
    goto LABEL_16;
  }
  if (!v34 & v33) {
    double v36 = v22;
  }
  if (v36 <= v35) {
    double v35 = v36;
  }
  sub_2607E5A30(&a11, v35);
  if (a12)
  {
    OUTLINED_FUNCTION_3_4();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_0_3();
    sub_26087B330();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_4_3();
    __break(1u);
  }
  else
  {
LABEL_16:
    OUTLINED_FUNCTION_20_3();
  }
}

#error "2607E5038: call analysis failed (funcsize=55)"

#error "2607E5130: call analysis failed (funcsize=56)"

unint64_t sub_2607E51F8()
{
  unint64_t result = qword_26A8B4628;
  if (!qword_26A8B4628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4628);
  }
  return result;
}

unint64_t sub_2607E5248()
{
  unint64_t result = qword_26A8B4630;
  if (!qword_26A8B4630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4630);
  }
  return result;
}

unint64_t sub_2607E5298()
{
  unint64_t result = qword_26A8B4638;
  if (!qword_26A8B4638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4638);
  }
  return result;
}

BOOL sub_2607E52E8(uint64_t a1, double a2)
{
  int v4 = LODWORD(a2);
  uint64_t v5 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v6 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v7 = v5 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOWORD(v15) = 0;
    BOOL result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (uint64_t v8 = sub_26087B490(), v8 > 15))
  {
LABEL_38:
    LOWORD(v15) = 0;
    BOOL result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_26087B470();
  BOOL result = v9 >= v10;
  uint64_t v12 = v10 + __clz(__rbit64(v6));
  uint64_t v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 15)
  {
    if ((unint64_t)(v13 - 65) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0) {
          LOWORD(v13) = 0;
        }
        else {
          uint64_t v13 = v6 >> (v12 - v9);
        }
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LOWORD(v13) = 0;
      }
      else
      {
        uint64_t v13 = v6 << v13;
      }
    }
    else
    {
      LOWORD(v13) = 0;
    }
LABEL_20:
    if (v9 != 15)
    {
      if (v9 < 0)
      {
        LOWORD(v14) = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_WORD)v13) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if (v13 >= -16 && v13 <= 16)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF0) {
        goto LABEL_8;
      }
      LODWORD(v13) = (unsigned __int16)v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 0x10) {
        goto LABEL_8;
      }
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 15) {
    goto LABEL_37;
  }
  LOWORD(v14) = 0;
  LOWORD(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0) {
LABEL_23:
  }
    int v14 = 1 << v9;
LABEL_24:
  int v15 = (__int16)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0) {
      goto LABEL_38;
    }
LABEL_33:
    LOBYTE(v7) = 0;
    LOWORD(v15) = 0x8000;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  int v15 = -v15;
LABEL_29:
  *(_WORD *)a1 = v15;
  *(unsigned char *)(a1 + 2) = v7;
  return result;
}

BOOL sub_2607E54A0(unsigned char *a1, double a2)
{
  int v4 = LODWORD(a2);
  uint64_t v5 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v6 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v7 = v5 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v15) = 0;
    BOOL result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (uint64_t v8 = sub_26087B490(), v8 > 7))
  {
LABEL_38:
    LOBYTE(v15) = 0;
    BOOL result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_26087B470();
  BOOL result = v9 >= v10;
  uint64_t v12 = v10 + __clz(__rbit64(v6));
  uint64_t v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 7)
  {
    if ((unint64_t)(v13 - 65) >= 0xFFFFFFFFFFFFFF7FLL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0) {
          LOBYTE(v13) = 0;
        }
        else {
          uint64_t v13 = v6 >> (v12 - v9);
        }
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LOBYTE(v13) = 0;
      }
      else
      {
        uint64_t v13 = v6 << v13;
      }
    }
    else
    {
      LOBYTE(v13) = 0;
    }
LABEL_20:
    if (v9 != 7)
    {
      if (v9 < 0)
      {
        LOBYTE(v14) = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || (_BYTE)v13) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if (v13 >= -8 && v13 <= 8)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFF8) {
        goto LABEL_8;
      }
      LODWORD(v13) = v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 8) {
        goto LABEL_8;
      }
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 7) {
    goto LABEL_37;
  }
  LOBYTE(v14) = 0;
  LOBYTE(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0) {
LABEL_23:
  }
    int v14 = 1 << v9;
LABEL_24:
  int v15 = (char)(v13 | v14);
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0) {
      goto LABEL_38;
    }
LABEL_33:
    LOBYTE(v7) = 0;
    LOBYTE(v15) = 0x80;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  int v15 = -v15;
LABEL_29:
  *a1 = v15;
  a1[1] = v7;
  return result;
}

BOOL sub_2607E5658(uint64_t a1, double a2)
{
  uint64_t v3 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v4 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v5 = v3 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (v5)
  {
    if (v3 != 2047 && a2 > -1.0)
    {
      uint64_t v9 = sub_26087B490();
      if (v9 <= 63)
      {
        uint64_t v10 = v9;
        uint64_t v11 = sub_26087B470();
        unint64_t v12 = v11 + __clz(__rbit64(v4));
        uint64_t v13 = v10 - v12;
        if (__OFSUB__(v10, v12))
        {
          __break(1u);
        }
        else
        {
          if (v13 < -64 || v13 > 64)
          {
LABEL_12:
            unint64_t v14 = 0;
            uint64_t v15 = 0;
            if ((v10 & 0x8000000000000000) == 0) {
              goto LABEL_22;
            }
LABEL_23:
            LOBYTE(v5) = 0;
            uint64_t v7 = v14 | v15;
            BOOL result = v10 >= v11;
            goto LABEL_24;
          }
          if ((v13 & 0x8000000000000000) == 0)
          {
            if ((unint64_t)v13 >= 0x40) {
              goto LABEL_12;
            }
            unint64_t v14 = v4 << v13;
            if (v10 < 0) {
              goto LABEL_17;
            }
            goto LABEL_22;
          }
        }
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0) {
          goto LABEL_12;
        }
        unint64_t v14 = v4 >> (v12 - v10);
        if (v10 < 0)
        {
LABEL_17:
          uint64_t v15 = 0;
          goto LABEL_23;
        }
LABEL_22:
        uint64_t v15 = 1 << v10;
        goto LABEL_23;
      }
    }
    uint64_t v7 = 0;
    BOOL result = 0;
    LOBYTE(v5) = 1;
  }
  else
  {
    uint64_t v7 = 0;
    BOOL result = 1;
  }
LABEL_24:
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

BOOL sub_2607E5774(uint64_t a1, double a2)
{
  unsigned int v3 = LODWORD(a2);
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    int v8 = 0;
    BOOL result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    uint64_t v10 = sub_26087B490();
    if (v10 <= 31)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_26087B470();
      uint64_t v13 = v12 + __clz(__rbit64(v5));
      uint64_t v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 31)
        {
          if (v14 < -32 || v14 > 32)
          {
LABEL_13:
            LODWORD(v14) = 0;
            int v15 = 0;
            if ((v11 & 0x8000000000000000) == 0) {
              goto LABEL_26;
            }
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFE0) {
              goto LABEL_13;
            }
            LODWORD(v14) = v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 0x20) {
              goto LABEL_13;
            }
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            int v15 = 1 << v11;
            goto LABEL_27;
          }
          int v15 = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          int v8 = v14 | v15;
          BOOL result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) <= 0xFFFFFFFFFFFFFF7ELL)
        {
          LODWORD(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40) {
            LODWORD(v14) = 0;
          }
          else {
            uint64_t v14 = v5 << v14;
          }
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0) {
        LODWORD(v14) = 0;
      }
      else {
        uint64_t v14 = v5 >> (v13 - v11);
      }
      goto LABEL_24;
    }
  }
  int v8 = 0;
  BOOL result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *(_DWORD *)a1 = v8;
  *(unsigned char *)(a1 + 4) = v6;
  return result;
}

BOOL sub_2607E58D0(uint64_t a1, double a2)
{
  int v3 = LODWORD(a2);
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    __int16 v8 = 0;
    BOOL result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    uint64_t v10 = sub_26087B490();
    if (v10 <= 15)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_26087B470();
      uint64_t v13 = v12 + __clz(__rbit64(v5));
      uint64_t v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 15)
        {
          if (v14 < -16 || v14 > 16)
          {
LABEL_13:
            LOWORD(v14) = 0;
            LOWORD(v15) = 0;
            if ((v11 & 0x8000000000000000) == 0) {
              goto LABEL_26;
            }
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF0) {
              goto LABEL_13;
            }
            LODWORD(v14) = (unsigned __int16)v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 0x10) {
              goto LABEL_13;
            }
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            int v15 = 1 << v11;
            goto LABEL_27;
          }
          LOWORD(v15) = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          __int16 v8 = v14 | v15;
          BOOL result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) <= 0xFFFFFFFFFFFFFF7ELL)
        {
          LOWORD(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40) {
            LOWORD(v14) = 0;
          }
          else {
            uint64_t v14 = v5 << v14;
          }
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0) {
        LOWORD(v14) = 0;
      }
      else {
        uint64_t v14 = v5 >> (v13 - v11);
      }
      goto LABEL_24;
    }
  }
  __int16 v8 = 0;
  BOOL result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *(_WORD *)a1 = v8;
  *(unsigned char *)(a1 + 2) = v6;
  return result;
}

BOOL sub_2607E5A30(unsigned char *a1, double a2)
{
  int v3 = LODWORD(a2);
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    char v8 = 0;
    BOOL result = 1;
    goto LABEL_28;
  }
  if (v4 != 2047 && a2 > -1.0)
  {
    uint64_t v10 = sub_26087B490();
    if (v10 <= 7)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_26087B470();
      uint64_t v13 = v12 + __clz(__rbit64(v5));
      uint64_t v14 = v11 - v13;
      if (__OFSUB__(v11, v13))
      {
        __break(1u);
      }
      else
      {
        if (v13 <= 7)
        {
          if (v14 < -8 || v14 > 8)
          {
LABEL_13:
            LOBYTE(v14) = 0;
            LOBYTE(v15) = 0;
            if ((v11 & 0x8000000000000000) == 0) {
              goto LABEL_26;
            }
            goto LABEL_27;
          }
          if (v14 < 0)
          {
            if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFF8) {
              goto LABEL_13;
            }
            LODWORD(v14) = v3 >> (v13 - v11);
          }
          else
          {
            if ((unint64_t)v14 >= 8) {
              goto LABEL_13;
            }
            LODWORD(v14) = v3 << v14;
          }
LABEL_24:
          if ((v11 & 0x8000000000000000) == 0)
          {
LABEL_26:
            int v15 = 1 << v11;
            goto LABEL_27;
          }
          LOBYTE(v15) = 0;
LABEL_27:
          LOBYTE(v6) = 0;
          char v8 = v14 | v15;
          BOOL result = v11 >= v12;
          goto LABEL_28;
        }
        if ((unint64_t)(v14 - 65) <= 0xFFFFFFFFFFFFFF7ELL)
        {
          LOBYTE(v14) = 0;
          goto LABEL_24;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)v14 >= 0x40) {
            LOBYTE(v14) = 0;
          }
          else {
            uint64_t v14 = v5 << v14;
          }
          goto LABEL_24;
        }
      }
      if ((unint64_t)v14 <= 0xFFFFFFFFFFFFFFC0) {
        LOBYTE(v14) = 0;
      }
      else {
        uint64_t v14 = v5 >> (v13 - v11);
      }
      goto LABEL_24;
    }
  }
  char v8 = 0;
  BOOL result = 0;
  LOBYTE(v6) = 1;
LABEL_28:
  *a1 = v8;
  a1[1] = v6;
  return result;
}

BOOL sub_2607E5B90(uint64_t a1, double a2)
{
  unsigned int v4 = LODWORD(a2);
  uint64_t v5 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v6 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v7 = v5 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v7)
  {
    int v15 = 0;
    BOOL result = 1;
    goto LABEL_29;
  }
  if (v5 == 2047 || (uint64_t v8 = sub_26087B490(), v8 > 31))
  {
LABEL_38:
    int v15 = 0;
    BOOL result = 0;
    LOBYTE(v7) = 1;
    goto LABEL_29;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_26087B470();
  BOOL result = v9 >= v10;
  uint64_t v12 = v10 + __clz(__rbit64(v6));
  uint64_t v13 = v9 - v12;
  if (__OFSUB__(v9, v12))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 > 31)
  {
    if ((unint64_t)(v13 - 65) > 0xFFFFFFFFFFFFFF7ELL)
    {
      if (v13 < 0)
      {
        if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFC0) {
          LODWORD(v13) = 0;
        }
        else {
          uint64_t v13 = v6 >> (v12 - v9);
        }
      }
      else if ((unint64_t)v13 >= 0x40)
      {
        LODWORD(v13) = 0;
      }
      else
      {
        uint64_t v13 = v6 << v13;
      }
    }
    else
    {
      LODWORD(v13) = 0;
    }
LABEL_20:
    if (v9 != 31)
    {
      if (v9 < 0)
      {
        int v14 = 0;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_31:
    if (a2 >= 0.0 || v13) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if (v13 >= -32 && v13 <= 32)
  {
    if (v13 < 0)
    {
      if ((unint64_t)v13 <= 0xFFFFFFFFFFFFFFE0) {
        goto LABEL_8;
      }
      LODWORD(v13) = v4 >> (v12 - v9);
    }
    else
    {
      if ((unint64_t)v13 >= 0x20) {
        goto LABEL_8;
      }
      LODWORD(v13) = v4 << v13;
    }
    goto LABEL_20;
  }
LABEL_8:
  if (v9 == 31) {
    goto LABEL_37;
  }
  int v14 = 0;
  LODWORD(v13) = 0;
  if ((v9 & 0x8000000000000000) == 0) {
LABEL_23:
  }
    int v14 = 1 << v9;
LABEL_24:
  int v15 = v13 | v14;
  if (a2 >= 0.0)
  {
    if ((v15 & 0x80000000) == 0)
    {
      LOBYTE(v7) = 0;
      goto LABEL_29;
    }
    goto LABEL_36;
  }
  if (v15 < 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0) {
      goto LABEL_38;
    }
LABEL_33:
    LOBYTE(v7) = 0;
    int v15 = 0x80000000;
    goto LABEL_29;
  }
  LOBYTE(v7) = 0;
  int v15 = -v15;
LABEL_29:
  *(_DWORD *)a1 = v15;
  *(unsigned char *)(a1 + 4) = v7;
  return result;
}

BOOL sub_2607E5D3C(uint64_t a1, double a2)
{
  uint64_t v4 = (*(void *)&a2 >> 52) & 0x7FFLL;
  unint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  uint64_t v6 = v4 | *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    uint64_t v12 = 0;
    BOOL result = 1;
    goto LABEL_22;
  }
  if (v4 != 2047)
  {
    uint64_t v7 = sub_26087B490();
    if (v7 <= 63)
    {
      uint64_t v8 = v7;
      uint64_t v9 = sub_26087B470();
      BOOL result = v8 >= v9;
      unint64_t v11 = v9 + __clz(__rbit64(v5));
      uint64_t v12 = v8 - v11;
      if (__OFSUB__(v8, v11))
      {
        __break(1u);
      }
      else
      {
        if (v12 >= -64 && v12 <= 64)
        {
          if (v12 < 0) {
            goto LABEL_29;
          }
          if ((unint64_t)v12 < 0x40)
          {
            unint64_t v14 = v5 << v12;
            goto LABEL_13;
          }
        }
LABEL_7:
        if (v8 != 63)
        {
          uint64_t i = 0;
          unint64_t v14 = 0;
          if (v8 < 0) {
            goto LABEL_17;
          }
LABEL_16:
          for (uint64_t i = 1 << v8; ; uint64_t i = 0)
          {
LABEL_17:
            uint64_t v12 = v14 | i;
            if (a2 >= 0.0)
            {
              if ((v12 & 0x8000000000000000) == 0)
              {
                LOBYTE(v6) = 0;
                goto LABEL_22;
              }
            }
            else
            {
              if ((v12 & 0x8000000000000000) == 0)
              {
                LOBYTE(v6) = 0;
                uint64_t v12 = -v12;
                goto LABEL_22;
              }
              __break(1u);
            }
            __break(1u);
LABEL_29:
            if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0) {
              goto LABEL_7;
            }
            unint64_t v14 = v5 >> -(char)v12;
LABEL_13:
            if (v8 == 63) {
              break;
            }
            if ((v8 & 0x8000000000000000) == 0) {
              goto LABEL_16;
            }
          }
          if (a2 < 0.0 && !v14) {
            goto LABEL_33;
          }
          goto LABEL_25;
        }
      }
      if (a2 < 0.0)
      {
LABEL_33:
        LOBYTE(v6) = 0;
        uint64_t v12 = 0x8000000000000000;
        goto LABEL_22;
      }
    }
  }
LABEL_25:
  uint64_t v12 = 0;
  BOOL result = 0;
  LOBYTE(v6) = 1;
LABEL_22:
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v6;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return sub_26087B330();
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return sub_26087B330();
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return sub_26087B7F0();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return sub_26087B990();
}

double OUTLINED_FUNCTION_7_3(double a1)
{
  *(void *)&double result = ((*(uint64_t *)&a1 >> 63) | 1) + *(void *)&a1;
  return result;
}

double OUTLINED_FUNCTION_8_3()
{
  return 0.0 - v0;
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return sub_26087B330();
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return sub_26087B1C0();
}

double OUTLINED_FUNCTION_14_2@<D0>(unsigned int a1@<W8>, double a2@<D0>)
{
  double v3 = ((double)a1 - (double)v2) * a2;
  if (v3 + (double)v2 > (double)v2) {
    return v3 + (double)v2;
  }
  else {
    return (double)v2;
  }
}

char *OUTLINED_FUNCTION_15_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

double OUTLINED_FUNCTION_16_2(double a1)
{
  return -a1;
}

double OUTLINED_FUNCTION_17_2()
{
  return 0.0 - v0;
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return sub_26087B700();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return v0;
}

uint64_t static RotationEvent.dispatch(report:platform:)(uint64_t a1, unint64_t a2, char *a3)
{
  char v5 = *a3;
  type metadata accessor for RotationGesture();
  *(unsigned char *)(swift_initStackObject() + 16) = v5;
  return RotationGesture.dispatch(report:)(a1, a2);
}

uint64_t RotationGesture.__allocating_init(platform:)(unsigned char *a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  return result;
}

uint64_t type metadata accessor for RotationGesture()
{
  return self;
}

uint64_t RotationGesture.dispatch(report:)(uint64_t a1, unint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  sub_2607DCFD0(16, a1, a2);
  sub_2607DB19C(8, a1, a2);
  mach_absolute_time();
  RotationEvent = (void *)IOHIDEventCreateRotationEvent();
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_15;
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if ((unint64_t)(v6 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      if (v6 >= 12)
      {
        uint64_t v10 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(32, a1, a2);
        if (v10)
        {
          uint64_t v24 = v10;
          uint64_t v11 = sub_2607E67C8((uint64_t)&v24, (uint64_t)&v25);
          unint64_t v13 = v12;
          sub_2607DCED0(v11, v12);
          uint64_t v14 = mach_absolute_time();
          int v15 = sub_2607E64B4(v14, 16973568, 0, v11, v13, 0);
          IOHIDEventAppendEvent();

          sub_2607DCF28(v11, v13);
        }
      }
LABEL_10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_26087C870;
      int v17 = *(unsigned __int8 *)(v2 + 16);
      id v18 = RotationEvent;
      uint64_t v19 = mach_absolute_time();
      if (v17 == 1)
      {
        uint64_t v20 = DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v19, 3, 0, 0, 0, 0);
        uint64_t v21 = &protocol witness table for DigitizerEvent;
        double v22 = &type metadata for DigitizerEvent;
      }
      else
      {
        uint64_t v20 = PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v19, 0, 0);
        uint64_t v21 = &protocol witness table for PointerEvent;
        double v22 = &type metadata for PointerEvent;
      }
      IOHIDEventAppendEvent();

      *(void *)(v16 + 56) = v22;
      *(void *)(v16 + 64) = v21;
      *(void *)(v16 + 32) = v20;

      return v16;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_16;
    case 3uLL:
      goto LABEL_10;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void RotationGesture.platform.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t RotationGesture.init(platform:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 16) = *a1;
  return v1;
}

uint64_t RotationGesture.deinit()
{
  return v0;
}

uint64_t RotationGesture.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 17, 7);
}

uint64_t sub_2607E6488(uint64_t a1)
{
  return RotationGesture.dispatch(report:)(*(void *)a1, *(void *)(a1 + 8));
}

void *sub_2607E64B4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  int v18 = a2;
  v16[2] = a1;
  v16[3] = &v18;
  v16[4] = a3;
  int v17 = a6;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4)
      {
        __break(1u);
        JUMPOUT(0x2607E6628);
      }
      uint64_t v11 = sub_2607EAC40((int)a4, a4 >> 32, (void *(*)(uint64_t *__return_ptr, void *, char *))sub_2607E6D8C);
      goto LABEL_8;
    case 2uLL:
      uint64_t v12 = *(void *)(a4 + 16);
      uint64_t v13 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      uint64_t v14 = sub_2607EAC40(v12, v13, (void *(*)(uint64_t *__return_ptr, void *, char *))sub_2607E6D8C);
      swift_release();
      swift_release();
      goto LABEL_9;
    case 3uLL:
      uint64_t v10 = 0;
      uint64_t v9 = 0;
      uint64_t v8 = 0;
      goto LABEL_7;
    default:
      uint64_t v8 = BYTE6(a5);
      uint64_t v9 = a5 & 0xFFFFFFFFFFFFLL;
      uint64_t v10 = a4;
LABEL_7:
      uint64_t v11 = sub_2607EACF0(v10, v9, (void *(*)(uint64_t *__return_ptr, uint64_t *, char *))sub_2607E6D8C, (uint64_t)v16, v8);
LABEL_8:
      uint64_t v14 = v11;
LABEL_9:
      sub_2607DCF28(a4, a5);
      return v14;
  }
}

uint64_t sub_2607E6638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0x8000000000000000) == 0 && !HIDWORD(a5))
  {
    if (a1) {
      return IOHIDEventCreateVendorDefinedEvent();
    }
    __break(1u);
  }
  uint64_t result = sub_26087B980();
  __break(1u);
  return result;
}

uint64_t sub_2607E6724(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4640);
  unint64_t v10 = sub_2607E6CC0();
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = *v2 + 32;
  uint64_t v4 = v3 + *(void *)(*v2 + 16);
  swift_bridgeObjectRetain();
  sub_2607E6C48(v3, v4, &v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_2607E67C8(uint64_t a1, uint64_t a2)
{
  void v8[3] = MEMORY[0x263F8D3E8];
  v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x263F8D3E8]);
  uint64_t v3 = *v2;
  if (*v2 && (uint64_t v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_26087AF40();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = MEMORY[0x26121C3A0]();
    }
    else
    {
      uint64_t v6 = MEMORY[0x26121C3C0]();
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_2607E6884(uint64_t a1, unint64_t a2)
{
  v13[3] = MEMORY[0x263F06F78];
  v13[4] = MEMORY[0x263F06F68];
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v13, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
        JUMPOUT(0x2607E6A00);
      }
      OUTLINED_FUNCTION_0_4();
      sub_2607DCED0(v5, v6);
      sub_2607E6A54((int)v5, v5 >> 32, &v12);
      sub_2607DCF28(v5, v6);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v9 = *(void *)(v5 + 24);
      OUTLINED_FUNCTION_0_4();
      swift_retain();
      swift_retain();
      sub_2607E6A54(v8, v9, &v12);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      OUTLINED_FUNCTION_0_4();
      uint64_t v7 = 0;
      goto LABEL_7;
    default:
      OUTLINED_FUNCTION_0_4();
      uint64_t v7 = BYTE6(v6);
LABEL_7:
      sub_2607E6AE8(v7, &v12);
      break;
  }
  sub_2607DCF28(a1, a2);
  uint64_t v10 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v10;
}

_UNKNOWN **sub_2607E6A10()
{
  return &protocol witness table for RotationReport;
}

_UNKNOWN **sub_2607E6A1C()
{
  return &protocol witness table for RotationReport;
}

uint64_t method lookup function for RotationGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RotationGesture);
}

uint64_t dispatch thunk of RotationGesture.__allocating_init(platform:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2607E6A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_26087AED0();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_26087AEF0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_26087AEE0();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return sub_2607E6C48(v7, v13, a3);
}

uint64_t sub_2607E6AE8@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    if (a1 <= 14)
    {
      uint64_t result = sub_26087AF40();
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFFFLL;
    }
    else
    {
      sub_26087AF00();
      swift_allocObject();
      uint64_t v4 = sub_26087AEC0();
      if ((unint64_t)a1 >= 0x7FFFFFFF)
      {
        sub_26087AFA0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = a1;
        unint64_t v6 = v4 | 0x8000000000000000;
      }
      else
      {
        uint64_t result = a1 << 32;
        unint64_t v6 = v4 | 0x4000000000000000;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    unint64_t v6 = 0xC000000000000000;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2607E6C48@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = sub_26087AF40();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = MEMORY[0x26121C3A0]();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = MEMORY[0x26121C3C0]();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

unint64_t sub_2607E6CC0()
{
  unint64_t result = qword_26A8B4648;
  if (!qword_26A8B4648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4648);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2607E6D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int *a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_2607E6638(a1, a2, a3, *a4, a5);
  if (!v6) {
    *a6 = result;
  }
  return result;
}

uint64_t sub_2607E6D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2607E6D5C(a1, a2, *(void *)(v3 + 16), *(unsigned int **)(v3 + 24), *(void *)(v3 + 32), a3);
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t static GenericGestureReport.initialReportBitCount.getter()
{
  return 48;
}

uint64_t static GenericGestureReport.reportID.getter()
{
  return 20;
}

uint64_t sub_2607E6DD8()
{
  uint64_t result = sub_2607E6DFC();
  *(void *)&xmmword_26A8B4650 = result;
  *((void *)&xmmword_26A8B4650 + 1) = v1;
  return result;
}

uint64_t sub_2607E6DFC()
{
  LOBYTE(v12) = 3;
  uint64_t v12 = sub_260815298((char *)&v12, 1);
  unint64_t v13 = v0;
  uint64_t v1 = sub_2607E6F08();
  unint64_t v3 = v2;
  sub_26087B050();
  sub_2607DCF28(v1, v3);
  uint64_t v4 = sub_2607E6724((uint64_t)&unk_270C9E0B8);
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = v12;
  unint64_t v8 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087C870;
  *(void *)(inited + 56) = &type metadata for ApplicationCollection;
  *(void *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  sub_2607DCED0(v7, v8);
  uint64_t v10 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v7, v8);
  return v10;
}

uint64_t sub_2607E6F08()
{
  LOBYTE(v113[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v113, 0xFF1AuLL);
  unint64_t v68 = v1;
  uint64_t v69 = v0;
  LOBYTE(v113[0]) = 17;
  uint64_t v2 = sub_2608155C0((char *)v113, 0xE0F5uLL);
  unint64_t v85 = v3;
  uint64_t v86 = v2;
  LOBYTE(v113[0]) = 6;
  uint64_t v58 = sub_260815298((char *)v113, 0);
  unint64_t v84 = v4;
  LOBYTE(v113[0]) = 7;
  uint64_t v57 = sub_260815298((char *)v113, 255);
  unint64_t v6 = v5;
  LOBYTE(v113[0]) = 12;
  uint64_t v7 = sub_2608155C0((char *)v113, 8uLL);
  unint64_t v77 = v8;
  uint64_t v78 = v7;
  LOBYTE(v113[0]) = 14;
  uint64_t v9 = sub_260815298((char *)v113, 1);
  unint64_t v75 = v10;
  uint64_t v76 = v9;
  LOBYTE(v111[0]) = 0;
  LOBYTE(v108) = 1;
  LOBYTE(v106[0]) = 0;
  *(_WORD *)&v112[3] = 0;
  *(_WORD *)&v112[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v111, &v108, v106, &v112[4], &v112[3], &v112[2], &v112[1], v113);
  LOBYTE(v111[0]) = 5;
  uint64_t v11 = sub_2608155C0((char *)v111, 0xFF1AuLL);
  unint64_t v73 = v12;
  uint64_t v74 = v11;
  LOBYTE(v111[0]) = 17;
  uint64_t v13 = sub_2608155C0((char *)v111, 0xE0F6uLL);
  unint64_t v71 = v14;
  uint64_t v72 = v13;
  LOBYTE(v111[0]) = 6;
  uint64_t v70 = sub_260815298((char *)v111, 0);
  unint64_t v105 = v15;
  LOBYTE(v111[0]) = 7;
  uint64_t v16 = sub_260815298((char *)v111, 255);
  unint64_t v103 = v17;
  uint64_t v104 = v16;
  LOBYTE(v111[0]) = 12;
  uint64_t v18 = sub_2608155C0((char *)v111, 8uLL);
  unint64_t v101 = v19;
  uint64_t v102 = v18;
  LOBYTE(v111[0]) = 14;
  uint64_t v20 = sub_260815298((char *)v111, 1);
  unint64_t v99 = v21;
  uint64_t v100 = v20;
  LOBYTE(v108) = 0;
  LOBYTE(v106[0]) = 1;
  memset(v112, 0, sizeof(v112));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v108, v106, &v112[4], &v112[3], &v112[2], &v112[1], v112, v111);
  LOBYTE(v108) = 5;
  uint64_t v22 = sub_2608155C0((char *)&v108, 0xFF1AuLL);
  unint64_t v97 = v23;
  uint64_t v98 = v22;
  LOBYTE(v108) = 17;
  uint64_t v24 = sub_2608155C0((char *)&v108, 0xE0F7uLL);
  unint64_t v95 = v25;
  uint64_t v96 = v24;
  LOBYTE(v108) = 6;
  uint64_t v26 = sub_260815298((char *)&v108, 0);
  unint64_t v93 = v27;
  uint64_t v94 = v26;
  LOBYTE(v108) = 7;
  uint64_t v28 = sub_260815298((char *)&v108, 255);
  unint64_t v91 = v29;
  uint64_t v92 = v28;
  LOBYTE(v108) = 12;
  uint64_t v30 = sub_2608155C0((char *)&v108, 8uLL);
  unint64_t v89 = v31;
  uint64_t v90 = v30;
  LOBYTE(v108) = 14;
  uint64_t v32 = sub_260815298((char *)&v108, 1);
  unint64_t v87 = v33;
  uint64_t v88 = v32;
  LOBYTE(v106[0]) = 0;
  v112[4] = 1;
  *(_WORD *)&v112[2] = 0;
  *(_WORD *)char v112 = 0;
  char v110 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v106, &v112[4], &v112[3], &v112[2], &v112[1], v112, &v110, &v108);
  LOBYTE(v106[0]) = 5;
  uint64_t v34 = sub_2608155C0((char *)v106, 0xFF1AuLL);
  unint64_t v82 = v35;
  uint64_t v83 = v34;
  LOBYTE(v106[0]) = 17;
  uint64_t v36 = sub_2608155C0((char *)v106, 0xE0F8uLL);
  unint64_t v80 = v37;
  uint64_t v81 = v36;
  LOBYTE(v106[0]) = 6;
  uint64_t v79 = sub_260815298((char *)v106, 0);
  unint64_t v67 = v38;
  LOBYTE(v106[0]) = 7;
  uint64_t v39 = sub_260815298((char *)v106, 0xFFFFLL);
  unint64_t v65 = v40;
  uint64_t v66 = v39;
  LOBYTE(v106[0]) = 12;
  uint64_t v41 = sub_2608155C0((char *)v106, 0x10uLL);
  unint64_t v63 = v42;
  uint64_t v64 = v41;
  LOBYTE(v106[0]) = 14;
  uint64_t v43 = sub_260815298((char *)v106, 1);
  unint64_t v61 = v44;
  uint64_t v62 = v43;
  *(_WORD *)&v112[3] = 1;
  *(_WORD *)&v112[1] = 0;
  v112[0] = 0;
  char v110 = 0;
  char v107 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v112[4], &v112[3], &v112[2], &v112[1], v112, &v110, &v107, v106);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_26087CFB0;
  *(void *)(v45 + 56) = &type metadata for ReportID;
  *(void *)(v45 + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(v45 + 32) = 20;
  *(void *)(v45 + 96) = &type metadata for UsagePage;
  *(void *)(v45 + 104) = &protocol witness table for UsagePage;
  *(void *)(v45 + 72) = v69;
  *(void *)(v45 + 80) = v68;
  *(void *)(v45 + 136) = &type metadata for Usage;
  *(void *)(v45 + 144) = &protocol witness table for Usage;
  *(void *)(v45 + 112) = v86;
  *(void *)(v45 + 120) = v85;
  *(void *)(v45 + 176) = &type metadata for LogicalMinimum;
  *(void *)(v45 + 184) = &protocol witness table for LogicalMinimum;
  *(void *)(v45 + 152) = v58;
  *(void *)(v45 + 160) = v84;
  *(void *)(v45 + 216) = &type metadata for LogicalMaximum;
  *(void *)(v45 + 224) = &protocol witness table for LogicalMaximum;
  *(void *)(v45 + 192) = v57;
  *(void *)(v45 + 200) = v6;
  *(void *)(v45 + 656) = &type metadata for UsagePage;
  *(void *)(v45 + 936) = &type metadata for UsagePage;
  *(void *)(v45 + 376) = &type metadata for UsagePage;
  *(void *)(v45 + 384) = &protocol witness table for UsagePage;
  *(void *)(v45 + 664) = &protocol witness table for UsagePage;
  *(void *)(v45 + 944) = &protocol witness table for UsagePage;
  *(void *)(v45 + 256) = &type metadata for ReportSize;
  *(void *)(v45 + 264) = &protocol witness table for ReportSize;
  *(void *)(v45 + 232) = v78;
  *(void *)(v45 + 240) = v77;
  *(void *)(v45 + 696) = &type metadata for Usage;
  *(void *)(v45 + 976) = &type metadata for Usage;
  *(void *)(v45 + 416) = &type metadata for Usage;
  *(void *)(v45 + 424) = &protocol witness table for Usage;
  *(void *)(v45 + 704) = &protocol witness table for Usage;
  *(void *)(v45 + 984) = &protocol witness table for Usage;
  *(void *)(v45 + 296) = &type metadata for ReportCount;
  *(void *)(v45 + 304) = &protocol witness table for ReportCount;
  *(void *)(v45 + 272) = v76;
  *(void *)(v45 + 280) = v75;
  *(void *)(v45 + 456) = &type metadata for LogicalMinimum;
  *(void *)(v45 + 464) = &protocol witness table for LogicalMinimum;
  *(void *)(v45 + 736) = &type metadata for LogicalMinimum;
  *(void *)(v45 + 744) = &protocol witness table for LogicalMinimum;
  *(void *)(v45 + 1016) = &type metadata for LogicalMinimum;
  *(void *)(v45 + 1024) = &protocol witness table for LogicalMinimum;
  uint64_t v59 = v113[0];
  uint64_t v46 = v113[0];
  unint64_t v60 = v113[1];
  *(void *)(v45 + 776) = &type metadata for LogicalMaximum;
  *(void *)(v45 + 1056) = &type metadata for LogicalMaximum;
  *(void *)(v45 + 496) = &type metadata for LogicalMaximum;
  *(void *)(v45 + 504) = &protocol witness table for LogicalMaximum;
  *(void *)(v45 + 784) = &protocol witness table for LogicalMaximum;
  *(void *)(v45 + 1064) = &protocol witness table for LogicalMaximum;
  *(void *)(v45 + 336) = &type metadata for Input;
  *(void *)(v45 + 344) = &protocol witness table for Input;
  *(void *)(v45 + 312) = v46;
  *(void *)(v45 + 320) = v60;
  *(void *)(v45 + 352) = v74;
  *(void *)(v45 + 360) = v73;
  *(void *)(v45 + 392) = v72;
  *(void *)(v45 + 400) = v71;
  *(void *)(v45 + 432) = v70;
  *(void *)(v45 + 440) = v105;
  *(void *)(v45 + 472) = v104;
  *(void *)(v45 + 480) = v103;
  *(void *)(v45 + 536) = &type metadata for ReportSize;
  *(void *)(v45 + 544) = &protocol witness table for ReportSize;
  *(void *)(v45 + 512) = v102;
  *(void *)(v45 + 520) = v101;
  *(void *)(v45 + 576) = &type metadata for ReportCount;
  *(void *)(v45 + 584) = &protocol witness table for ReportCount;
  *(void *)(v45 + 552) = v100;
  *(void *)(v45 + 560) = v99;
  *(void *)(v45 + 816) = &type metadata for ReportSize;
  *(void *)(v45 + 824) = &protocol witness table for ReportSize;
  *(void *)(v45 + 1096) = &type metadata for ReportSize;
  *(void *)(v45 + 1104) = &protocol witness table for ReportSize;
  uint64_t v55 = v111[0];
  uint64_t v47 = v111[0];
  unint64_t v56 = v111[1];
  *(void *)(v45 + 616) = &type metadata for Input;
  *(void *)(v45 + 624) = &protocol witness table for Input;
  *(void *)(v45 + 592) = v47;
  *(void *)(v45 + 600) = v56;
  *(void *)(v45 + 632) = v98;
  *(void *)(v45 + 640) = v97;
  *(void *)(v45 + 672) = v96;
  *(void *)(v45 + 680) = v95;
  *(void *)(v45 + 712) = v94;
  *(void *)(v45 + 720) = v93;
  *(void *)(v45 + 752) = v92;
  *(void *)(v45 + 760) = v91;
  *(void *)(v45 + 792) = v90;
  *(void *)(v45 + 800) = v89;
  *(void *)(v45 + 856) = &type metadata for ReportCount;
  *(void *)(v45 + 864) = &protocol witness table for ReportCount;
  *(void *)(v45 + 832) = v88;
  *(void *)(v45 + 840) = v87;
  *(void *)(v45 + 1136) = &type metadata for ReportCount;
  *(void *)(v45 + 1144) = &protocol witness table for ReportCount;
  unint64_t v53 = v109;
  unint64_t v48 = v109;
  uint64_t v54 = v108;
  *(void *)(v45 + 896) = &type metadata for Input;
  *(void *)(v45 + 904) = &protocol witness table for Input;
  *(void *)(v45 + 872) = v54;
  *(void *)(v45 + 880) = v48;
  *(void *)(v45 + 912) = v83;
  *(void *)(v45 + 920) = v82;
  *(void *)(v45 + 952) = v81;
  *(void *)(v45 + 960) = v80;
  *(void *)(v45 + 992) = v79;
  *(void *)(v45 + 1000) = v67;
  *(void *)(v45 + 1032) = v66;
  *(void *)(v45 + 1040) = v65;
  *(void *)(v45 + 1072) = v64;
  *(void *)(v45 + 1080) = v63;
  *(void *)(v45 + 1112) = v62;
  *(void *)(v45 + 1120) = v61;
  *(void *)(v45 + 1176) = &type metadata for Input;
  *(void *)(v45 + 1184) = &protocol witness table for Input;
  uint64_t v50 = v106[0];
  unint64_t v51 = v106[1];
  *(void *)(v45 + 1152) = v106[0];
  *(void *)(v45 + 1160) = v51;
  sub_2607DCED0(v69, v68);
  sub_2607DCED0(v86, v85);
  sub_2607DCED0(v58, v84);
  sub_2607DCED0(v57, v6);
  sub_2607DCED0(v78, v77);
  sub_2607DCED0(v76, v75);
  sub_2607DCED0(v59, v60);
  sub_2607DCED0(v74, v73);
  sub_2607DCED0(v72, v71);
  sub_2607DCED0(v70, v105);
  sub_2607DCED0(v104, v103);
  sub_2607DCED0(v102, v101);
  sub_2607DCED0(v100, v99);
  sub_2607DCED0(v55, v56);
  sub_2607DCED0(v98, v97);
  sub_2607DCED0(v96, v95);
  sub_2607DCED0(v94, v93);
  sub_2607DCED0(v92, v91);
  sub_2607DCED0(v90, v89);
  sub_2607DCED0(v88, v87);
  sub_2607DCED0(v54, v53);
  sub_2607DCED0(v83, v82);
  sub_2607DCED0(v81, v80);
  sub_2607DCED0(v79, v67);
  sub_2607DCED0(v66, v65);
  sub_2607DCED0(v64, v63);
  sub_2607DCED0(v62, v61);
  sub_2607DCED0(v50, v51);
  uint64_t v52 = static HIDReportDescriptor.Builder.buildBlock(_:)(v45);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v50, v51);
  sub_2607DCF28(v62, v61);
  sub_2607DCF28(v64, v63);
  sub_2607DCF28(v66, v65);
  sub_2607DCF28(v79, v67);
  sub_2607DCF28(v81, v80);
  sub_2607DCF28(v83, v82);
  sub_2607DCF28(v54, v53);
  sub_2607DCF28(v88, v87);
  sub_2607DCF28(v90, v89);
  sub_2607DCF28(v92, v91);
  sub_2607DCF28(v94, v93);
  sub_2607DCF28(v96, v95);
  sub_2607DCF28(v98, v97);
  sub_2607DCF28(v55, v56);
  sub_2607DCF28(v100, v99);
  sub_2607DCF28(v102, v101);
  sub_2607DCF28(v104, v103);
  sub_2607DCF28(v70, v105);
  sub_2607DCF28(v72, v71);
  sub_2607DCF28(v74, v73);
  sub_2607DCF28(v59, v60);
  sub_2607DCF28(v76, v75);
  sub_2607DCF28(v78, v77);
  sub_2607DCF28(v57, v6);
  sub_2607DCF28(v58, v84);
  sub_2607DCF28(v86, v85);
  sub_2607DCF28(v69, v68);
  return v52;
}

uint64_t static GenericGestureReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44A0 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B4650;
  *a1 = xmmword_26A8B4650;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2607E77EC()
{
  return 48;
}

uint64_t sub_2607E77F8()
{
  return 20;
}

uint64_t GenericGestureReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t GenericGestureReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*GenericGestureReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_2607E788C()
{
  uint64_t v1 = *(void *)v0;
  sub_2607DCED0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t sub_2607E78C0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*sub_2607E78F8())()
{
  return nullsub_1;
}

uint64_t sub_2607E7918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = GenericGestureReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2607E7940()
{
  return sub_26087583C(*(void *)v0, *(void *)(v0 + 8));
}

void sub_2607E794C(void *a1, void *a2)
{
  static GenericGestureReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t GenericGestureReport.phaseBits.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

unint64_t sub_2607E7970@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = GenericGestureReport.phaseBits.getter();
  *a1 = result;
  return result;
}

uint64_t GenericGestureReport.phaseBits.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

uint64_t (*GenericGestureReport.phaseBits.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = OUTLINED_FUNCTION_0_5();
  return sub_2607E79F0;
}

uint64_t sub_2607E79F0(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 8);
}

unint64_t GenericGestureReport.phase.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0() & 0xFFFFFF8F;
}

unint64_t sub_2607E7A44@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = GenericGestureReport.phase.getter();
  *a1 = result;
  return result;
}

uint64_t GenericGestureReport.phase.setter()
{
  unsigned int v0 = OUTLINED_FUNCTION_0_5();
  uint64_t v1 = OUTLINED_FUNCTION_1_4(v0);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
}

uint64_t (*GenericGestureReport.phase.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = OUTLINED_FUNCTION_0_5() & 0x8F;
  return sub_2607E7AF8;
}

uint64_t sub_2607E7AF8()
{
  unsigned int v0 = OUTLINED_FUNCTION_0_5();
  uint64_t v1 = OUTLINED_FUNCTION_1_4(v0);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
}

unint64_t GenericGestureReport.gestureType.getter()
{
  unint64_t v0 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return GenericGestureType.init(rawValue:)(v0);
}

unint64_t sub_2607E7B60@<X0>(_DWORD *a1@<X8>)
{
  unint64_t result = GenericGestureReport.gestureType.getter();
  *a1 = result;
  return result;
}

uint64_t GenericGestureReport.gestureType.setter(uint64_t a1)
{
  if (a1 >= 0xFF) {
    a1 = 255;
  }
  else {
    a1 = a1;
  }
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 16);
}

uint64_t (*GenericGestureReport.gestureType.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  unsigned __int8 v3 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(_DWORD *)(a1 + 8) = GenericGestureType.init(rawValue:)(v3);
  return sub_2607E7BFC;
}

uint64_t sub_2607E7BFC(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 0xFF) {
    uint64_t v2 = 255;
  }
  else {
    uint64_t v2 = v1;
  }
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, 16);
}

unint64_t GenericGestureReport.tapCount.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

unint64_t sub_2607E7C44@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = GenericGestureReport.tapCount.getter();
  *a1 = result;
  return result;
}

uint64_t GenericGestureReport.tapCount.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 24);
}

uint64_t (*GenericGestureReport.tapCount.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_2607E7CCC;
}

uint64_t sub_2607E7CCC(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 24);
}

#error "2607E7D10: call analysis failed (funcsize=14)"

void sub_2607E7D30(void *a1@<X0>, double *a2@<X8>)
{
  *a2 = GenericGestureReport.swipeProgress.getter(*a1, a1[1]);
}

#error "2607E7D88: call analysis failed (funcsize=18)"

#error "2607E7DC8: call analysis failed (funcsize=24)"

uint64_t sub_2607E7E0C(double *a1)
{
  return GenericGestureReport.swipeProgress.setter(*a1);
}

uint64_t sub_2607E7E38(unsigned __int8 *a1)
{
  return GenericGestureReport.phaseBits.setter(*a1);
}

uint64_t sub_2607E7E64()
{
  return GenericGestureReport.phase.setter();
}

uint64_t sub_2607E7E90(unsigned int *a1)
{
  return GenericGestureReport.gestureType.setter(*a1);
}

uint64_t sub_2607E7EBC(unsigned __int8 *a1)
{
  return GenericGestureReport.tapCount.setter(*a1);
}

uint64_t sub_2607E7EE8(double *a1)
{
  return GenericGestureReport.swipeProgress.setter(*a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HIDReport(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_2607DCED0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for HIDReport(uint64_t a1)
{
  return sub_2607DCF28(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for HIDReport(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_2607DCED0(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2607DCF28(v5, v6);
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *assignWithTake for HIDReport(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2607DCF28(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDReport(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for HIDReport(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)__n128 result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericGestureReport()
{
  return &type metadata for GenericGestureReport;
}

unint64_t OUTLINED_FUNCTION_0_5()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t OUTLINED_FUNCTION_1_4(unsigned int a1)
{
  return v1 & 0xFFFFFF8F | (16 * ((a1 >> 4) & 7));
}

uint64_t HIDScrollMomentum.rawValue.setter(uint64_t result)
{
  *int v1 = result;
  return result;
}

uint64_t (*HIDScrollMomentum.rawValue.modify())()
{
  return nullsub_1;
}

void *static HIDScrollMomentum.allCases.getter()
{
  return &unk_270C9E130;
}

unint64_t HIDScrollMomentum.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || result >= 0x100)
  {
    OUTLINED_FUNCTION_27();
    __n128 result = sub_26087B980();
    __break(1u);
  }
  return result;
}

uint64_t static HIDScrollMomentum.start.getter()
{
  return 2;
}

uint64_t static HIDScrollMomentum.continue.getter()
{
  return 1;
}

uint64_t static HIDScrollMomentum.end.getter()
{
  return 4;
}

uint64_t static HIDScrollMomentum.interrupted.getter()
{
  return 16;
}

unsigned char *sub_2607E81B4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_2607E81C0(void *a1@<X8>)
{
  *a1 = &unk_270C9E130;
}

uint64_t sub_2607E81D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_5();
  *a1 = result;
  return result;
}

uint64_t sub_2607E81F8(unsigned __int8 *a1)
{
  return sub_2608310AC(*a1, *v1);
}

uint64_t sub_2607E8204@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_39_2(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_2607E8234@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_36_0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_2607E8264@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_35_0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_2607E8294(uint64_t a1, unsigned __int8 *a2)
{
  return sub_260831058(a1, *a2);
}

uint64_t sub_2607E829C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_260875A58(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2607E82D0@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_260875AEC(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2607E8304(unsigned __int8 *a1)
{
  return sub_2608310FC(*a1);
}

uint64_t sub_2607E830C(unsigned __int8 *a1)
{
  return sub_26083105C(*a1);
}

uint64_t sub_2607E8314(unsigned __int8 *a1)
{
  return sub_260831070(*a1);
}

uint64_t sub_2607E831C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_26087A9E0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_2607E834C(unsigned __int8 *a1)
{
  return sub_2608310B4(*a1, *v1);
}

uint64_t sub_2607E8358(unsigned __int8 *a1)
{
  return sub_26087A9E4(*a1, *v1);
}

BOOL sub_2607E8364()
{
  return sub_2607E8410(*v0);
}

uint64_t sub_2607E836C()
{
  OUTLINED_FUNCTION_14_3();
  if (qword_26A8B4540 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(6u);
  HIDReport.init(bitCount:id:)(v1, 6);
  OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_7_4();
  return v0 & 1;
}

BOOL sub_2607E83F8(uint64_t a1)
{
  return a1 == 0;
}

BOOL sub_2607E8404(int a1)
{
  return a1 == 0;
}

BOOL sub_2607E8410(char a1)
{
  return a1 == 0;
}

uint64_t sub_2607E841C()
{
  OUTLINED_FUNCTION_14_3();
  if (qword_26A8B44D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(2u);
  HIDReport.init(bitCount:id:)(v1, 2);
  OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_7_4();
  return v0 & 1;
}

uint64_t sub_2607E84A8()
{
  OUTLINED_FUNCTION_14_3();
  if (qword_26A8B44C0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(1u);
  HIDReport.init(bitCount:id:)(v1, 1);
  OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_7_4();
  return v0 & 1;
}

uint64_t sub_2607E8534()
{
  OUTLINED_FUNCTION_14_3();
  if (qword_26A8B44B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(4u);
  HIDReport.init(bitCount:id:)(v1, 4);
  OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_7_4();
  return v0 & 1;
}

uint64_t sub_2607E85C0()
{
  OUTLINED_FUNCTION_14_3();
  if (qword_26A8B44C8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(3u);
  HIDReport.init(bitCount:id:)(v1, 3);
  OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_7_4();
  return v0 & 1;
}

uint64_t sub_2607E864C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

uint64_t sub_2607E8664(unsigned __int8 *a1)
{
  return sub_26083110C(*a1);
}

unsigned __int8 *sub_2607E866C@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2607E867C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_260875670();
  *a1 = result;
  return result;
}

uint64_t HIDScrollMomentum.description.getter(unsigned __int8 a1)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  if ((byte_270C9E178 & a1) != 0)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2607E9958();
    uint64_t v3 = v17;
    OUTLINED_FUNCTION_19_3();
    if (v4)
    {
      OUTLINED_FUNCTION_11_3();
      uint64_t v3 = v17;
    }
    OUTLINED_FUNCTION_17_3();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  if ((byte_270C9E179 & a1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      OUTLINED_FUNCTION_8_4();
    }
    OUTLINED_FUNCTION_19_3();
    if (v4) {
      OUTLINED_FUNCTION_11_3();
    }
    OUTLINED_FUNCTION_17_3();
  }
  if ((byte_270C9E17A & a1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      OUTLINED_FUNCTION_8_4();
    }
    OUTLINED_FUNCTION_19_3();
    if (v4) {
      OUTLINED_FUNCTION_11_3();
    }
    OUTLINED_FUNCTION_17_3();
  }
  char v5 = byte_270C9E17B;
  if ((byte_270C9E17B & a1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      OUTLINED_FUNCTION_8_4();
    }
    unint64_t v6 = *(void *)(v3 + 16);
    uint64_t v7 = v6 + 1;
    if (v6 >= *(void *)(v3 + 24) >> 1) {
      sub_2607E9958();
    }
    *(void *)(v3 + 16) = v7;
    *(unsigned char *)(v3 + v6 + 32) = v5;
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 16);
    if (!v7) {
      goto LABEL_38;
    }
  }
  sub_2607E9890(0, v7, 0);
  uint64_t v8 = 0;
  do
  {
    if ((*(unsigned char *)(v3 + v8 + 32) & 2) != 0)
    {
      unint64_t v11 = 0xE500000000000000;
      uint64_t v9 = 0x7472617473;
    }
    else if (*(unsigned char *)(v3 + v8 + 32))
    {
      unint64_t v11 = 0xE800000000000000;
      uint64_t v9 = 0x65756E69746E6F63;
    }
    else if ((*(unsigned char *)(v3 + v8 + 32) & 4) != 0)
    {
      unint64_t v11 = 0xE300000000000000;
      uint64_t v9 = 6581861;
    }
    else if ((*(unsigned char *)(v3 + v8 + 32) & 0x10) != 0)
    {
      unint64_t v11 = 0xEB00000000646574;
      uint64_t v9 = 0x7075727265746E69;
    }
    else
    {
      uint64_t v9 = sub_26087BBA0();
      unint64_t v11 = v10;
    }
    unint64_t v13 = *(void *)(v2 + 16);
    unint64_t v12 = *(void *)(v2 + 24);
    if (v13 >= v12 >> 1) {
      sub_2607E9890(v12 > 1, v13 + 1, 1);
    }
    ++v8;
    *(void *)(v2 + 16) = v13 + 1;
    uint64_t v14 = v2 + 16 * v13;
    *(void *)(v14 + 32) = v9;
    *(void *)(v14 + 40) = v11;
  }
  while (v7 != v8);
LABEL_38:
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4668);
  sub_2607E9A5C((unint64_t *)&qword_26A8B4670, &qword_26A8B4668);
  uint64_t v15 = sub_26087B230();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2607E89B0()
{
  return HIDScrollMomentum.description.getter(*v0);
}

char *sub_2607E89B8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2607E8A14(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2607E8A74(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2607E8ADC(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_27();
    __src = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_2607E8B4C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_26087BA10();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_2607E8BE0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

char *sub_2607E8C40(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

uint64_t sub_2607E8CA4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t v8 = sub_26087BA10();
    __break(1u);
    return MEMORY[0x270FA01D0](v8, v9, v10, v7);
  }
  if (a3 < a1
    || (uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4708),
        a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4708);
    return MEMORY[0x270FA01D8](a3, a1, a2, v11);
  }
  else if (a3 != a1)
  {
    uint64_t v7 = result;
    uint64_t v8 = a3;
    unint64_t v9 = a1;
    uint64_t v10 = a2;
    return MEMORY[0x270FA01D0](v8, v9, v10, v7);
  }
  return result;
}

char *sub_2607E8DDC(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_26087BA10();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_2607E8E6C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = (char *)OUTLINED_FUNCTION_2_4();
    __break(1u);
  }
  else if (a3 != result || &result[144 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_5(a3, result);
  }
  return result;
}

uint64_t sub_2607E8ECC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_26087BA10();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_2607E8FAC(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_6_4();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_4_4();
    __break(1u);
    return result;
  }
  if (&__dst[__n] > __src && &__src[__n] > __dst)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  return memcpy(__dst, __src, __n);
}

void *sub_2607E9054(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_6_4();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_4_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_3();
  if (!v8 & v7) {
    BOOL v9 = v6 > v3;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  return memcpy(v5, v4, 4 * v2);
}

uint64_t sub_2607E90F4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_6_4();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_4();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14_3();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50C0);
  return swift_arrayInitWithCopy();
}

uint64_t sub_2607E91C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_6_4();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_4();
    __break(1u);
    return result;
  }
  if (a3 + 8 * a2 > a1 && a1 + 8 * a2 > a3)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_2607E9274(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_26087BA10();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_2607E9354(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_6_4();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_4_4();
    __break(1u);
    return result;
  }
  if (&__dst[8 * a2] > __src && &__src[8 * a2] > __dst)
  {
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  return memcpy(__dst, __src, 8 * a2);
}

uint64_t sub_2607E9400(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0
    || ((uint64_t v5 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4708) - 8) + 72) * a2,
         unint64_t v6 = a3 + v5,
         unint64_t v7 = a1 + v5,
         v6 > a1)
      ? (BOOL v8 = v7 > a3)
      : (BOOL v8 = 0),
        v8))
  {
    uint64_t result = sub_26087BA10();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_2607E951C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_26087BA10();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_2607E95FC(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_26087BA10();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_2607E96D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_26087BA10();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_2607E97B4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[16 * a2] > __src ? (BOOL v3 = &__src[16 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_26087BA10();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 16 * a2);
  }
  return result;
}

void sub_2607E9890(char a1, uint64_t a2, char a3)
{
  sub_2607E9FB8(a1, a2, a3, *v3, &qword_26A8B52E0, (void (*)(uint64_t, uint64_t, void *))sub_2607E89B8, (void (*)(uint64_t, uint64_t, void *))sub_2607E8ECC);
  *BOOL v3 = v4;
}

void sub_2607E98E0()
{
  sub_2607E9D8C();
  *char v0 = v1;
}

void sub_2607E9908()
{
  sub_2607E9D8C();
  *char v0 = v1;
}

void sub_2607E9930()
{
  sub_2607E9E44();
  *char v0 = v1;
}

void sub_2607E9958()
{
  sub_2607E9E44();
  *char v0 = v1;
}

unint64_t sub_2607E9984()
{
  unint64_t result = qword_26A8B4678;
  if (!qword_26A8B4678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4678);
  }
  return result;
}

unint64_t sub_2607E99D4()
{
  unint64_t result = qword_26A8B4680;
  if (!qword_26A8B4680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4680);
  }
  return result;
}

uint64_t sub_2607E9A20()
{
  return sub_2607E9A5C(&qword_26A8B4688, &qword_26A8B4690);
}

uint64_t sub_2607E9A5C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2607E9AA4()
{
  unint64_t result = qword_26A8B4698;
  if (!qword_26A8B4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4698);
  }
  return result;
}

unint64_t sub_2607E9AF4()
{
  unint64_t result = qword_26A8B46A0;
  if (!qword_26A8B46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B46A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDScrollMomentum()
{
  return &type metadata for HIDScrollMomentum;
}

void sub_2607E9B50()
{
  sub_2607E9D8C();
  *char v0 = v1;
}

void sub_2607E9B78()
{
  sub_2607E9EF0();
  *char v0 = v1;
}

void sub_2607E9B98(char a1, uint64_t a2, char a3)
{
  sub_2607E9FB8(a1, a2, a3, *v3, &qword_26A8B46D8, (void (*)(uint64_t, uint64_t, void *))sub_2607E8B4C, (void (*)(uint64_t, uint64_t, void *))sub_2607E9274);
  *BOOL v3 = v4;
}

size_t sub_2607E9BE8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_2607EA158(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

void sub_2607E9C08(char a1, uint64_t a2, char a3)
{
  sub_2607E9FB8(a1, a2, a3, *v3, &qword_26A8B4710, (void (*)(uint64_t, uint64_t, void *))sub_2607E8B4C, (void (*)(uint64_t, uint64_t, void *))sub_2607E951C);
  *BOOL v3 = v4;
}

char *sub_2607E9C58(char *a1, int64_t a2, char a3)
{
  size_t result = sub_2607EA2FC(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

void sub_2607E9C78(char a1, uint64_t a2, char a3)
{
  sub_2607E9FB8(a1, a2, a3, *v3, &qword_26A8B46D0, (void (*)(uint64_t, uint64_t, void *))sub_2607E8B4C, (void (*)(uint64_t, uint64_t, void *))sub_2607E96D4);
  *BOOL v3 = v4;
}

void sub_2607E9CC8(char a1, uint64_t a2, char a3)
{
  sub_2607E9FB8(a1, a2, a3, *v3, &qword_26A8B46C8, (void (*)(uint64_t, uint64_t, void *))sub_2607E8B4C, (void (*)(uint64_t, uint64_t, void *))sub_2607E97B4);
  *BOOL v3 = v4;
}

uint64_t sub_2607E9D18(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_2607EA3D4(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

char *sub_2607E9D38(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_2607EA4B8(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

void sub_2607E9D58(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_2607E9D8C()
{
  OUTLINED_FUNCTION_20_4();
  if (v4)
  {
    OUTLINED_FUNCTION_10_3();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_16_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    BOOL v8 = (void *)swift_allocObject();
    size_t v9 = _swift_stdlib_malloc_size(v8);
    v8[2] = v2;
    void v8[3] = 2 * ((uint64_t)(v9 - 32) / 4);
  }
  uint64_t v10 = (char *)OUTLINED_FUNCTION_13_3();
  if (v1)
  {
    sub_2607E8A14(v10, v11, v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_2607E9054((uint64_t)v10, v11);
  }
  swift_release();
}

void sub_2607E9E44()
{
  OUTLINED_FUNCTION_20_4();
  if (v4)
  {
    OUTLINED_FUNCTION_10_3();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_16_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    BOOL v8 = (void *)swift_allocObject();
    size_t v9 = _swift_stdlib_malloc_size(v8);
    v8[2] = v2;
    void v8[3] = 2 * v9 - 64;
  }
  uint64_t v10 = (char *)OUTLINED_FUNCTION_13_3();
  if (v1)
  {
    sub_2607E8ADC(v10, v11, v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_2607E8FAC(v10, v11, v12);
  }
  swift_release();
}

void sub_2607E9EF0()
{
  OUTLINED_FUNCTION_20_4();
  if (v4)
  {
    OUTLINED_FUNCTION_10_3();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_16_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
    unint64_t v7 = (void *)swift_allocObject();
    size_t v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 40);
  }
  size_t v9 = (char *)OUTLINED_FUNCTION_13_3();
  if (v1)
  {
    sub_2607E8A74(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_2607E90F4((uint64_t)v9, v10);
  }
  swift_release();
}

void sub_2607E9FB8(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_10_3();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_16_3();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v16 = (void *)swift_allocObject();
    size_t v17 = _swift_stdlib_malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v18 = v16 + 4;
  uint64_t v19 = a4 + 32;
  if (a1)
  {
    a6(v19, v14, v18);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  swift_release();
}

void sub_2607EA09C()
{
  OUTLINED_FUNCTION_20_4();
  if (v4)
  {
    OUTLINED_FUNCTION_10_3();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_16_3();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B46E0);
    unint64_t v7 = (void *)swift_allocObject();
    size_t v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 8);
  }
  size_t v9 = (char *)OUTLINED_FUNCTION_13_3();
  if (v1)
  {
    sub_2607E8BE0(v9, v10, v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_2607E9354(v9, v10, v11);
  }
  swift_release();
}

size_t sub_2607EA158(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    char v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4700);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4708) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4708) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (unint64_t)v13 + v16;
  unint64_t v18 = a4 + v16;
  if (v5)
  {
    sub_2607E8CA4(v18, v8, v17);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2607E9400(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

char *sub_2607EA2FC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B46F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  char v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_2607E8DDC(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2607E95FC(v13, v8, v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_2607EA3D4(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B46C0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (char *)(a4 + 32);
  if (v5)
  {
    sub_2607E8A14(v12, v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2607E9054((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

char *sub_2607EA4B8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B46B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  char v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_2607E89B8(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2607E97B4(v13, v8, v12);
  }
  swift_release();
  return v10;
}

void *OUTLINED_FUNCTION_1_5@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return sub_26087BA10();
}

void OUTLINED_FUNCTION_3_5()
{
  JUMPOUT(0x26121C450);
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return sub_26087BA10();
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return sub_2607DCF28(v0, v1);
}

void OUTLINED_FUNCTION_8_4()
{
  sub_2607E9958();
}

void OUTLINED_FUNCTION_11_3()
{
  sub_2607E9958();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return v0 + 32;
}

void OUTLINED_FUNCTION_17_3()
{
  *(void *)(v0 + 16) = v1;
  *(unsigned char *)(v0 + v3 + 32) = v2;
}

uint64_t static VendorDefinedEvent.eventType.getter()
{
  return 1;
}

void *VendorDefinedEvent.init<A>(timestamp:usage:version:data:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a3;
  int v20 = a6;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4)
      {
        __break(1u);
        JUMPOUT(0x2607EA930);
      }
      swift_retain();
      uint64_t v15 = sub_2607EAC40((int)a4, a4 >> 32, (void *(*)(uint64_t *__return_ptr, void *, char *))sub_2607EAABC);
      sub_2607DCF28(a4, a5);
      break;
    case 2uLL:
      uint64_t v16 = *(void *)(a4 + 16);
      uint64_t v17 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      uint64_t v15 = sub_2607EAC40(v16, v17, (void *(*)(uint64_t *__return_ptr, void *, char *))sub_2607EAABC);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      uint64_t v14 = 0;
      uint64_t v13 = 0;
      uint64_t v12 = 0;
      goto LABEL_7;
    default:
      uint64_t v12 = BYTE6(a5);
      uint64_t v13 = a5 & 0xFFFFFFFFFFFFLL;
      uint64_t v14 = a4;
LABEL_7:
      uint64_t v15 = sub_2607EACF0(v14, v13, (void *(*)(uint64_t *__return_ptr, uint64_t *, char *))sub_2607EAABC, (uint64_t)v19, v12);
      break;
  }
  sub_2607DCF28(a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a7 - 8) + 8))(a2, a7);
  return v15;
}

uint64_t sub_2607EA940@<X0>(uint64_t a1@<X0>, unint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t *a5@<X8>)
{
  unint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if ((v10 & 0x8000000000000000) == 0 && !HIDWORD(v10))
  {
    unint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    if ((v11 & 0x8000000000000000) == 0 && !HIDWORD(v11) && (a2 & 0x8000000000000000) == 0 && !HIDWORD(a2))
    {
      if (a1)
      {
        uint64_t result = IOHIDEventCreateVendorDefinedEvent();
        *a5 = result;
        return result;
      }
      __break(1u);
    }
  }
  uint64_t result = sub_26087B980();
  __break(1u);
  return result;
}

uint64_t sub_2607EAABC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2607EA940(a1, *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t VendorDefinedEvent.data.getter(void *a1)
{
  id v1 = a1;
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  uint64_t DataValue = IOHIDEventGetDataValue();
  uint64_t v4 = sub_2607E67C8(DataValue, DataValue + IntegerValue);

  return v4;
}

void VendorDefinedEvent.withUnsafeBytes<A>(_:)(void (*a1)(uint64_t, uint64_t), uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  uint64_t DataValue = IOHIDEventGetDataValue();
  a1(DataValue, DataValue + IntegerValue);
}

uint64_t VendorDefinedEvent.usage.getter(void *a1)
{
  id v1 = a1;
  unsigned __int16 IntegerValue = IOHIDEventGetIntegerValue();
  unsigned __int16 v3 = IOHIDEventGetIntegerValue();

  return IntegerValue | (v3 << 16);
}

uint64_t VendorDefinedEvent.version.getter()
{
  return IOHIDEventGetIntegerValue();
}

void *sub_2607EAC40(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, void *, char *))
{
  uint64_t result = (void *)sub_26087AED0();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = (void *)sub_26087AEF0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    uint64_t v8 = (void *)((char *)v8 + a1 - (void)result);
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v11 = sub_26087AEE0();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = (char *)v8 + v12;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t result = a3(&v15, v8, v14);
  if (!v3) {
    return (void *)v15;
  }
  return result;
}

void *sub_2607EACF0(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v8 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  uint64_t result = a3(&v7, &v8, (char *)&v8 + a5);
  if (!v5) {
    return (void *)v7;
  }
  return result;
}

ValueMetadata *type metadata accessor for VendorDefinedEvent()
{
  return &type metadata for VendorDefinedEvent;
}

uint64_t GameControllerFilter.eventMask.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t GameControllerFilter.__allocating_init(service:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  GameControllerFilter.init(platform:service:)(v4, a1, a2);
  return v4;
}

uint64_t GameControllerFilter.__allocating_init(platform:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  GameControllerFilter.init(platform:service:)(v5, a2, a3);
  return v5;
}

void *GameControllerFilter.init(platform:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = MEMORY[0x263F8EE78];
  v3[4] = sub_2607E2554(MEMORY[0x263F8EE78]);
  v3[5] = sub_2607E2554(v5);
  v3[2] = sub_2607E2554((uint64_t)&unk_270C9E180);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
  swift_unknownObjectRelease();
  v3[3] = v7;
  return v3;
}

BOOL GameControllerFilter.filterEvent(_:)(uint64_t a1, uint64_t a2)
{
  sub_2607E2A1C(a2, (uint64_t)v10);
  uint64_t v5 = (void *)GameControllerEvent.init(event:)(v10);
  if (v5)
  {
    if ((*(unsigned char *)(v2 + 44) & 8) != 0)
    {
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    else
    {
      sub_2607E2A1C(a2, a1);
    }
    if ((*(unsigned char *)(v2 + 36) & 8) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_26087C870;
      id v7 = v5;
      *(void *)(v6 + 32) = GameControllerReport.init(gameControllerEvent:)(v7);
      *(void *)(v6 + 40) = v8;
    }
    else
    {
    }
  }
  else
  {
    sub_2607E2A1C(a2, a1);
  }
  return v5 != 0;
}

uint64_t GameControllerFilter.updateCopyMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x263F8EE78];
}

uint64_t GameControllerFilter.updateFilterMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  return MEMORY[0x263F8EE78];
}

uint64_t GameControllerFilter.deinit()
{
  return v0;
}

uint64_t GameControllerFilter.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_2607EB03C()
{
  return GameControllerFilter.eventMask.getter();
}

BOOL sub_2607EB060(uint64_t a1, uint64_t a2)
{
  return GameControllerFilter.filterEvent(_:)(a1, a2);
}

uint64_t sub_2607EB088(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2607EB0B4(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x263F8EE78];
}

uint64_t type metadata accessor for GameControllerFilter()
{
  return self;
}

uint64_t method lookup function for GameControllerFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GameControllerFilter);
}

uint64_t dispatch thunk of GameControllerFilter.__allocating_init(platform:service:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t static ZoomToggleReport.initialReportBitCount.getter()
{
  return 16;
}

uint64_t static ZoomToggleReport.reportID.getter()
{
  return 14;
}

uint64_t sub_2607EB140()
{
  uint64_t result = sub_2607EB164();
  *(void *)&xmmword_26A8B4728 = result;
  *((void *)&xmmword_26A8B4728 + 1) = v1;
  return result;
}

uint64_t sub_2607EB164()
{
  LOBYTE(v12) = 3;
  uint64_t v12 = sub_260815298((char *)&v12, 1);
  unint64_t v13 = v0;
  uint64_t v1 = sub_2607EB270();
  unint64_t v3 = v2;
  sub_26087B050();
  sub_2607DCF28(v1, v3);
  uint64_t v4 = sub_2607E6724((uint64_t)&unk_270C9DFA0);
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = v12;
  unint64_t v8 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087C870;
  *(void *)(inited + 56) = &type metadata for ApplicationCollection;
  *(void *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  sub_2607DCED0(v7, v8);
  uint64_t v10 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v7, v8);
  return v10;
}

uint64_t sub_2607EB270()
{
  LOBYTE(v16[0]) = 12;
  uint64_t v0 = sub_2608155C0((char *)v16, 8uLL);
  unint64_t v2 = v1;
  LOBYTE(v16[0]) = 14;
  uint64_t v3 = sub_260815298((char *)v16, 1);
  unint64_t v5 = v4;
  unsigned __int8 v15 = 0;
  char v14 = 1;
  __int16 v13 = 0;
  __int16 v12 = 0;
  char v11 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v15, &v14, (unsigned char *)&v13 + 1, &v13, (unsigned char *)&v12 + 1, &v12, &v11, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D350;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 14;
  *(void *)(inited + 96) = &type metadata for ReportSize;
  *(void *)(inited + 104) = &protocol witness table for ReportSize;
  *(void *)(inited + 72) = v0;
  *(void *)(inited + 80) = v2;
  *(void *)(inited + 136) = &type metadata for ReportCount;
  *(void *)(inited + 144) = &protocol witness table for ReportCount;
  *(void *)(inited + 112) = v3;
  *(void *)(inited + 120) = v5;
  uint64_t v7 = v16[0];
  unint64_t v8 = v16[1];
  *(void *)(inited + 176) = &type metadata for Input;
  *(void *)(inited + 184) = &protocol witness table for Input;
  *(void *)(inited + 152) = v7;
  *(void *)(inited + 160) = v8;
  sub_2607DCED0(v0, v2);
  sub_2607DCED0(v3, v5);
  sub_2607DCED0(v7, v8);
  uint64_t v9 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v7, v8);
  sub_2607DCF28(v3, v5);
  sub_2607DCF28(v0, v2);
  return v9;
}

uint64_t static ZoomToggleReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44A8 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B4728;
  *a1 = xmmword_26A8B4728;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2607EB490()
{
  return 16;
}

uint64_t sub_2607EB49C()
{
  return 14;
}

uint64_t ZoomToggleReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t ZoomToggleReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ZoomToggleReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_2607EB530@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ZoomToggleReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2607EB558()
{
  return sub_260875854(*(void *)v0, *(void *)(v0 + 8));
}

unint64_t ZoomToggleReport.flags.getter(uint64_t a1, unint64_t a2)
{
  return sub_2607DB19C(8, a1, a2);
}

unint64_t sub_2607EB570@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = ZoomToggleReport.flags.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t ZoomToggleReport.flags.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

uint64_t (*ZoomToggleReport.flags.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_2607DB19C(8, *(void *)v1, *(void *)(v1 + 8));
  return sub_2607E79F0;
}

uint64_t sub_2607EB5FC(unsigned __int8 *a1)
{
  return ZoomToggleReport.flags.setter(*a1);
}

ValueMetadata *type metadata accessor for ZoomToggleReport()
{
  return &type metadata for ZoomToggleReport;
}

uint64_t static TranslationEvent.dispatch(report:platform:)(uint64_t a1, unint64_t a2, char *a3)
{
  char v5 = *a3;
  type metadata accessor for TranslationGesture();
  *(unsigned char *)(swift_initStackObject() + 16) = v5;
  return TranslationGesture.dispatch(report:)(a1, a2);
}

uint64_t TranslationGesture.__allocating_init(platform:)(unsigned char *a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  return result;
}

uint64_t type metadata accessor for TranslationGesture()
{
  return self;
}

uint64_t TranslationGesture.dispatch(report:)(uint64_t a1, unint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  sub_2607DCFD0(16, a1, a2);
  sub_2607DCFD0(32, a1, a2);
  sub_2607DB19C(8, a1, a2);
  mach_absolute_time();
  TranslationEvent = (void *)IOHIDEventCreateTranslationEvent();
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_15;
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if ((unint64_t)(v6 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      if (v6 >= 14)
      {
        uint64_t v10 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(48, a1, a2);
        if (v10)
        {
          uint64_t v24 = v10;
          uint64_t v11 = sub_2607E67C8((uint64_t)&v24, (uint64_t)&v25);
          unint64_t v13 = v12;
          sub_2607DCED0(v11, v12);
          uint64_t v14 = mach_absolute_time();
          unsigned __int8 v15 = sub_2607E64B4(v14, 16973568, 0, v11, v13, 0);
          IOHIDEventAppendEvent();

          sub_2607DCF28(v11, v13);
        }
      }
LABEL_10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_26087C870;
      int v17 = *(unsigned __int8 *)(v2 + 16);
      id v18 = TranslationEvent;
      uint64_t v19 = mach_absolute_time();
      if (v17 == 1)
      {
        uint64_t v20 = DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v19, 3, 0, 0, 0, 0);
        unint64_t v21 = &protocol witness table for DigitizerEvent;
        uint64_t v22 = &type metadata for DigitizerEvent;
      }
      else
      {
        uint64_t v20 = PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v19, 0, 0);
        unint64_t v21 = &protocol witness table for PointerEvent;
        uint64_t v22 = &type metadata for PointerEvent;
      }
      IOHIDEventAppendEvent();

      *(void *)(v16 + 56) = v22;
      *(void *)(v16 + 64) = v21;
      *(void *)(v16 + 32) = v20;

      return v16;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_16;
    case 3uLL:
      goto LABEL_10;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void TranslationGesture.platform.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t TranslationGesture.init(platform:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 16) = *a1;
  return v1;
}

uint64_t TranslationGesture.deinit()
{
  return v0;
}

uint64_t TranslationGesture.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 17, 7);
}

uint64_t sub_2607EB9D0(uint64_t a1)
{
  return TranslationGesture.dispatch(report:)(*(void *)a1, *(void *)(a1 + 8));
}

_UNKNOWN **sub_2607EB9FC()
{
  return &protocol witness table for TranslationReport;
}

_UNKNOWN **sub_2607EBA08()
{
  return &protocol witness table for TranslationReport;
}

uint64_t method lookup function for TranslationGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TranslationGesture);
}

uint64_t dispatch thunk of TranslationGesture.__allocating_init(platform:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t TranslationEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t TranslationEvent.y.getter()
{
  return OUTLINED_FUNCTION_1_6();
}

uint64_t TranslationEvent.init(time:delta:flags:)()
{
  return IOHIDEventCreateTranslationEvent();
}

uint64_t static TranslationEvent.eventType.getter()
{
  return 4;
}

uint64_t (*TranslationEvent.x.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2607EBABC;
}

uint64_t sub_2607EBABC()
{
  return OUTLINED_FUNCTION_2_5();
}

uint64_t TranslationEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_6();
}

uint64_t (*TranslationEvent.y.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2607EBB20;
}

uint64_t sub_2607EBB20()
{
  return OUTLINED_FUNCTION_0_6();
}

uint64_t TranslationEvent.z.getter()
{
  return OUTLINED_FUNCTION_1_6();
}

uint64_t TranslationEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_6();
}

uint64_t (*TranslationEvent.z.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2607EBB90;
}

uint64_t sub_2607EBB90()
{
  return OUTLINED_FUNCTION_0_6();
}

uint64_t sub_2607EBBA4()
{
  return 4;
}

uint64_t sub_2607EBBAC@<X0>(void *a1@<X8>)
{
  uint64_t result = TranslationEvent.x.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_2607EBBD8(double *a1, void *a2)
{
  return TranslationEvent.x.setter(*a2, *a1);
}

uint64_t sub_2607EBBE4@<X0>(void *a1@<X8>)
{
  uint64_t result = TranslationEvent.y.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_2607EBC10()
{
  return TranslationEvent.y.setter();
}

uint64_t sub_2607EBC1C@<X0>(void *a1@<X8>)
{
  uint64_t result = TranslationEvent.z.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_2607EBC48()
{
  return TranslationEvent.z.setter();
}

ValueMetadata *type metadata accessor for TranslationEvent()
{
  return &type metadata for TranslationEvent;
}

uint64_t OUTLINED_FUNCTION_0_6()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return IOHIDEventSetFloatValue();
}

uint64_t EventReportAccumulator.values.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL EventReportAccumulator.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

uint64_t EventReportAccumulator.target.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2607E2A1C(v1 + 8, a1);
}

uint64_t sub_2607EBCC8(uint64_t a1)
{
  sub_2607E2A1C(a1, (uint64_t)v2);
  return EventReportAccumulator.target.setter(v2);
}

uint64_t EventReportAccumulator.target.setter(uint64_t *a1)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v1 + 8), a1);
  EventReportAccumulator.flush(to:)(v1 + 8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall EventReportAccumulator.flush()()
{
  EventReportAccumulator.flush(to:)(v0 + 8);
}

void *(*EventReportAccumulator.target.modify(void *a1))(void *result, char a2)
{
  *a1 = v1;
  return sub_2607EBFA4;
}

void *sub_2607EBFA4(void *result, char a2)
{
  if ((a2 & 1) == 0) {
    return (void *)EventReportAccumulator.flush(to:)(*result + 8);
  }
  return result;
}

uint64_t EventReportAccumulator.init()@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EventReportSenderID();
  sub_2607F72FC(&qword_26A8B4738, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
  uint64_t result = sub_26087B200();
  *a1 = result;
  a1[4] = (uint64_t)&type metadata for NullTarget;
  a1[5] = (uint64_t)&off_270C9F3D8;
  return result;
}

uint64_t EventReportAccumulator.Value.keyboard.getter()
{
  return OUTLINED_FUNCTION_75();
}

uint64_t EventReportAccumulator.Value.consumer.getter()
{
  return OUTLINED_FUNCTION_75();
}

uint64_t EventReportAccumulator.Value.appleVendorKeyboard.getter()
{
  return OUTLINED_FUNCTION_75();
}

uint64_t EventReportAccumulator.Value.appleVendorTopCase.getter()
{
  return OUTLINED_FUNCTION_75();
}

uint64_t EventReportAccumulator.Value.pointer.getter()
{
  return OUTLINED_FUNCTION_75();
}

uint64_t sub_2607EC130(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a1[2];
  uint64_t v26 = a1[4];
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[5];
  uint64_t v29 = a1[7];
  uint64_t v30 = a1[6];
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v10 = v3[3];
  uint64_t v27 = v3[5];
  uint64_t v28 = v3[4];
  uint64_t v32 = v3[6];
  uint64_t v31 = v3[7];
  if ((MEMORY[0x26121C450](*v3, v7, *a1, a1[1]) & 1) == 0)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2[3];
    uint64_t v13 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32))(v8, v7, v11, v12, v13);
  }
  if ((MEMORY[0x26121C450](v9, v10, v6, v24) & 1) == 0)
  {
    OUTLINED_FUNCTION_12_4();
    uint64_t v14 = OUTLINED_FUNCTION_14_4();
    v15(v14);
  }
  if ((MEMORY[0x26121C450](v28, v27, v26, v25) & 1) == 0)
  {
    OUTLINED_FUNCTION_12_4();
    uint64_t v16 = OUTLINED_FUNCTION_14_4();
    v17(v16);
  }
  if ((MEMORY[0x26121C450](v32, v31, v30, v29) & 1) == 0)
  {
    OUTLINED_FUNCTION_12_4();
    uint64_t v18 = OUTLINED_FUNCTION_14_4();
    v19(v18);
  }
  uint64_t v20 = OUTLINED_FUNCTION_59();
  uint64_t result = MEMORY[0x26121C450](v20);
  if ((result & 1) == 0)
  {
    OUTLINED_FUNCTION_12_4();
    uint64_t v22 = OUTLINED_FUNCTION_59();
    return v23(v22);
  }
  return result;
}

uint64_t static EventReportAccumulator.Value.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v10 = a1[7];
  uint64_t v11 = a1[6];
  uint64_t v4 = a2[4];
  uint64_t v5 = a2[5];
  uint64_t v6 = a2[6];
  uint64_t v7 = a2[7];
  if (MEMORY[0x26121C450](*a1, a1[1], *a2, a2[1]))
  {
    uint64_t v8 = OUTLINED_FUNCTION_94();
    if ((MEMORY[0x26121C450](v8) & 1) != 0
      && (MEMORY[0x26121C450](v2, v3, v4, v5) & 1) != 0
      && (MEMORY[0x26121C450](v11, v10, v6, v7) & 1) != 0)
    {
      JUMPOUT(0x26121C450);
    }
  }
  return 0;
}

uint64_t sub_2607EC404@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44C0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(1u);
  uint64_t v3 = HIDReport.init(bitCount:id:)(v2, 1);
  uint64_t v5 = v4;
  if (qword_26A8B44D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v6 = HIDReportDescriptor.reportBitCount(for:)(2u);
  uint64_t v7 = HIDReport.init(bitCount:id:)(v6, 2);
  uint64_t v9 = v8;
  if (qword_26A8B44C8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v10 = HIDReportDescriptor.reportBitCount(for:)(3u);
  uint64_t v11 = HIDReport.init(bitCount:id:)(v10, 3);
  uint64_t v13 = v12;
  if (qword_26A8B44B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v14 = HIDReportDescriptor.reportBitCount(for:)(4u);
  uint64_t v15 = HIDReport.init(bitCount:id:)(v14, 4);
  uint64_t v17 = v16;
  if (qword_26A8B4580 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v18 = HIDReportDescriptor.reportBitCount(for:)(5u);
  uint64_t result = HIDReport.init(bitCount:id:)(v18, 5);
  *a1 = v3;
  a1[1] = v5;
  a1[2] = v7;
  a1[3] = v9;
  a1[4] = v11;
  a1[5] = v13;
  a1[6] = v15;
  a1[7] = v17;
  a1[8] = result;
  a1[9] = v20;
  return result;
}

uint64_t EventReportAccumulator.insert(_:)(uint64_t a1)
{
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_2607F3DA0(a1);
    if (v3) {
      return 0;
    }
  }
  sub_2607EC404((uint64_t *)v5);
  sub_2607F4F6C(v5, a1);
  return 1;
}

uint64_t EventReportAccumulator.dispatchReport(_:from:accumulateOnly:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(v256) = a4;
  uint64_t v5 = *v4;
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_2607F3DA0(a3), (v7 & 1) != 0))
  {
    uint64_t v8 = (uint64_t *)(*(void *)(v5 + 56) + 80 * v6);
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    unint64_t v12 = v8[3];
    uint64_t v14 = v8[4];
    unint64_t v13 = v8[5];
    uint64_t v16 = v8[6];
    unint64_t v15 = v8[7];
    uint64_t v18 = v8[8];
    unint64_t v17 = v8[9];
    *(void *)&long long v398 = *v8;
    *((void *)&v398 + 1) = v10;
    *(void *)&long long v399 = v11;
    *((void *)&v399 + 1) = v12;
    *(void *)&long long v400 = v14;
    *((void *)&v400 + 1) = v13;
    *(void *)&unsigned long long v401 = v16;
    *((void *)&v401 + 1) = v15;
    uint64_t v402 = v18;
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_34();
    sub_2607DCED0(v14, v13);
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    sub_2607EC404((uint64_t *)&v398);
    unint64_t v10 = *((void *)&v398 + 1);
    uint64_t v9 = v398;
    unint64_t v12 = *((void *)&v399 + 1);
    uint64_t v11 = v399;
    unint64_t v13 = *((void *)&v400 + 1);
    uint64_t v14 = v400;
    unint64_t v15 = *((void *)&v401 + 1);
    uint64_t v16 = v401;
    uint64_t v18 = v402;
    unint64_t v17 = v403;
  }
  unint64_t v350 = v12;
  uint64_t v390 = v9;
  OUTLINED_FUNCTION_95();
  sub_2607DCED0(v14, v13);
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_34();
  sub_2607DCED0(v14, v13);
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_95();
  uint64_t v19 = OUTLINED_FUNCTION_94();
  __int16 v21 = sub_2607F6A24(v19, v20);
  uint64_t v22 = OUTLINED_FUNCTION_94();
  sub_2607DCF28(v22, v23);
  if ((v21 & 0x100) != 0)
  {
    unint64_t v51 = v17;
    sub_2607DCF28(v18, v17);
    sub_2607DCF28(v16, v15);
    sub_2607DCF28(v14, v13);
    sub_2607DCF28(v11, v350);
    sub_2607DCF28(v390, v10);
    uint64_t v52 = v18;
LABEL_10:
    OUTLINED_FUNCTION_61();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_40();
    sub_2607DCF28(v52, v51);
    OUTLINED_FUNCTION_61();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_40();
    uint64_t v49 = v52;
LABEL_11:
    unint64_t v50 = v51;
LABEL_12:
  }
  else
  {
    uint64_t v310 = v16;
    switch((char)v21)
    {
      case 1:
        uint64_t v24 = sub_2607DCF28(v9, v10);
        uint64_t v32 = OUTLINED_FUNCTION_26_0(v24, v25, v26, v27, v28, v29, v30, v31, v225, v235, v17, v256, v14, a3, v11, v13, v16, v15, v18,
                (uint64_t)v338,
                v350,
                v10,
                a1);
        sub_2607EDD10(v32, v33, v34);
        long long v35 = v398;
        OUTLINED_FUNCTION_76();
        sub_2607DCF28(v9, v10);
        long long v398 = v35;
        unint64_t v36 = v300;
        *(void *)&long long v399 = v289;
        *((void *)&v399 + 1) = v351;
        uint64_t v37 = v267;
        *(void *)&long long v400 = v267;
        *((void *)&v400 + 1) = v300;
        unsigned long long v38 = v311;
        unsigned long long v401 = v311;
        uint64_t v39 = v328;
        unint64_t v40 = v246;
        uint64_t v402 = v328;
        unint64_t v403 = v246;
        OUTLINED_FUNCTION_76();
        sub_2607DCED0(v289, v351);
        sub_2607DCED0(v267, v300);
        sub_2607DCED0(v311, *((unint64_t *)&v311 + 1));
        sub_2607DCED0(v328, v246);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_28_0();
        OUTLINED_FUNCTION_36();
        sub_2607DCF28(v289, v351);
        uint64_t v41 = sub_2607DCF28(v35, *((unint64_t *)&v35 + 1));
        if ((OUTLINED_FUNCTION_63(v41, v42, v43, v44, v45, v46, v47, v48, v226, v236, v246, v257, v267, v279, v289, v300, v311, *((uint64_t *)&v311 + 1), v328,
                v339,
                v351,
                v362,
                *((uint64_t *)&v35 + 1),
                v35,
                v9,
                v9) & 1) != 0)
        {
          sub_2607DCF28(v382, v374);
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_28_0();
          OUTLINED_FUNCTION_62();
          sub_2607DCF28(v391, v363);
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_28_0();
          OUTLINED_FUNCTION_62();
          sub_2607DCF28(v382, v374);
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_28_0();
          uint64_t v49 = v39;
          unint64_t v50 = v40;
          goto LABEL_12;
        }
        sub_2607DCED0(v382, v374);
        OUTLINED_FUNCTION_76();
        sub_2607DCED0(v37, v36);
        sub_2607DCED0(v38, *((unint64_t *)&v38 + 1));
        sub_2607DCED0(v39, v40);
        uint64_t v173 = v280;
        unint64_t v100 = v40;
        uint64_t v174 = sub_2607F4F6C(&v398, v280);
        if (v258)
        {
          sub_2607DCF28(v382, v374);
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_56();
          OUTLINED_FUNCTION_28_0();
          OUTLINED_FUNCTION_21_3();
          sub_2607DCF28(v391, v363);
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_56();
          OUTLINED_FUNCTION_28_0();
          OUTLINED_FUNCTION_21_3();
          sub_2607DCF28(v382, v374);
          OUTLINED_FUNCTION_27_0();
          OUTLINED_FUNCTION_56();
          unint64_t v109 = *((void *)&v38 + 1);
          uint64_t v108 = v38;
          goto LABEL_26;
        }
        v209 = OUTLINED_FUNCTION_81(v174, v340 + 8, v175, v176, v177, v178, v179, v180, v227, v237, v247, v258, v268, v280, v290, v301, v312, v321, v329,
                 v340,
                 v352,
                 v363,
                 v374,
                 v382,
                 v391,
                 v391);
        sub_2607EC130(v209, v210, v173);
        OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_27_0();
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_28_0();
        OUTLINED_FUNCTION_21_3();
        sub_2607DCF28(v396, v372);
        OUTLINED_FUNCTION_27_0();
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_28_0();
        OUTLINED_FUNCTION_21_3();
        OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_27_0();
        OUTLINED_FUNCTION_56();
        OUTLINED_FUNCTION_28_0();
        uint64_t v49 = v39;
        unint64_t v50 = v40;
        return sub_2607DCF28(v49, v50);
      case 2:
        unint64_t v53 = v350;
        uint64_t v54 = sub_2607DCF28(v11, v350);
        uint64_t v62 = OUTLINED_FUNCTION_26_0(v54, v55, v56, v57, v58, v59, v60, v61, v225, v235, v17, v256, v14, a3, v11, v13, v16, v15, v18,
                (uint64_t)v338,
                v350,
                v10,
                a1);
        sub_2607EDB38(v62, v63, v64);
        long long v65 = v398;
        sub_2607DCED0(v398, *((unint64_t *)&v398 + 1));
        sub_2607DCF28(v11, v53);
        uint64_t v66 = v390;
        *(void *)&long long v398 = v390;
        *((void *)&v398 + 1) = v364;
        long long v399 = v65;
        *(void *)&long long v400 = v269;
        *((void *)&v400 + 1) = v302;
        unsigned long long v401 = v313;
        unint64_t v51 = v248;
        uint64_t v402 = v330;
        unint64_t v403 = v248;
        sub_2607DCED0(v390, v364);
        sub_2607DCED0(v65, *((unint64_t *)&v65 + 1));
        OUTLINED_FUNCTION_89();
        OUTLINED_FUNCTION_53();
        sub_2607DCED0(v330, v248);
        sub_2607DCF28(v330, v248);
        OUTLINED_FUNCTION_40();
        sub_2607DCF28(v269, v302);
        unint64_t v67 = v364;
        uint64_t v68 = v313;
        uint64_t v69 = v291;
        sub_2607DCF28(v65, *((unint64_t *)&v65 + 1));
        uint64_t v70 = OUTLINED_FUNCTION_61();
        uint64_t v71 = v269;
        unint64_t v72 = v302;
        uint64_t v73 = v313;
        if ((OUTLINED_FUNCTION_63(v70, v74, v75, v76, v77, v78, v79, v80, v228, v238, v248, v259, v269, v281, v291, v302, v313, *((uint64_t *)&v313 + 1), v330,
                v341,
                v353,
                v364,
                v65,
                *((uint64_t *)&v65 + 1),
                v390,
                v390) & 1) != 0)
        {
          OUTLINED_FUNCTION_61();
          sub_2607DCF28(v375, v383);
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_104();
          OUTLINED_FUNCTION_85();
          sub_2607DCF28(v66, v67);
          sub_2607DCF28(v69, v354);
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_104();
          OUTLINED_FUNCTION_85();
          sub_2607DCF28(v66, v67);
          sub_2607DCF28(v375, v383);
          OUTLINED_FUNCTION_36();
          OUTLINED_FUNCTION_104();
          uint64_t v49 = v331;
          goto LABEL_11;
        }
        sub_2607DCED0(v66, v67);
        sub_2607DCED0(v375, v383);
        sub_2607DCED0(v71, v72);
        sub_2607DCED0(v68, v322);
        sub_2607DCED0(v331, v51);
        uint64_t v181 = v282;
        uint64_t v182 = sub_2607F4F6C(&v398, v282);
        if (v260)
        {
          OUTLINED_FUNCTION_21_3();
          sub_2607DCF28(v375, v383);
          sub_2607DCF28(v71, v72);
          sub_2607DCF28(v73, v322);
          OUTLINED_FUNCTION_93();
          OUTLINED_FUNCTION_21_3();
          sub_2607DCF28(v69, v354);
          sub_2607DCF28(v71, v72);
          OUTLINED_FUNCTION_98();
          OUTLINED_FUNCTION_93();
          OUTLINED_FUNCTION_21_3();
          sub_2607DCF28(v375, v383);
          sub_2607DCF28(v71, v72);
          OUTLINED_FUNCTION_98();
          uint64_t v49 = v331;
          goto LABEL_11;
        }
        uint64_t v211 = v71;
        unint64_t v213 = v322;
        uint64_t v212 = v331;
        v214 = OUTLINED_FUNCTION_81(v182, v342 + 8, v183, v184, v185, v186, v187, v188, v229, v239, v249, v260, v270, v282, v292, v303, v314, v322, v331,
                 v342,
                 v354,
                 v365,
                 v375,
                 v383,
                 v392,
                 v66);
        sub_2607EC130(v214, v215, v181);
        sub_2607DCF28(v397, v67);
        OUTLINED_FUNCTION_30();
        sub_2607DCF28(v211, v72);
        sub_2607DCF28(v73, v213);
        OUTLINED_FUNCTION_85();
        sub_2607DCF28(v397, v67);
        sub_2607DCF28(v299, v361);
        sub_2607DCF28(v211, v72);
        sub_2607DCF28(v73, v213);
        OUTLINED_FUNCTION_85();
        sub_2607DCF28(v397, v67);
        OUTLINED_FUNCTION_30();
        sub_2607DCF28(v211, v72);
        sub_2607DCF28(v73, v213);
        uint64_t v49 = v212;
        unint64_t v50 = v51;
        return sub_2607DCF28(v49, v50);
      case 3:
        uint64_t v81 = sub_2607DCF28(v14, v13);
        uint64_t v89 = OUTLINED_FUNCTION_26_0(v81, v82, v83, v84, v85, v86, v87, v88, v225, v235, v17, v256, v14, a3, v11, v13, v16, v15, v18,
                (uint64_t)v338,
                v350,
                v10,
                a1);
        sub_2607ED788(v89, v90, v91);
        long long v92 = v398;
        sub_2607DCED0(v398, *((unint64_t *)&v398 + 1));
        sub_2607DCF28(v14, v13);
        unint64_t v93 = v366;
        *(void *)&long long v398 = v9;
        *((void *)&v398 + 1) = v366;
        *(void *)&long long v399 = v293;
        *((void *)&v399 + 1) = v355;
        long long v400 = v92;
        unint64_t v94 = *((void *)&v315 + 1);
        unsigned long long v401 = v315;
        uint64_t v402 = v332;
        unint64_t v403 = v250;
        sub_2607DCED0(v9, v366);
        sub_2607DCED0(v293, v355);
        sub_2607DCED0(v92, *((unint64_t *)&v92 + 1));
        sub_2607DCED0(v315, *((unint64_t *)&v315 + 1));
        sub_2607DCED0(v332, v250);
        sub_2607DCF28(v332, v250);
        sub_2607DCF28(v315, *((unint64_t *)&v315 + 1));
        unint64_t v95 = v355;
        uint64_t v96 = v293;
        sub_2607DCF28(v92, *((unint64_t *)&v92 + 1));
        OUTLINED_FUNCTION_88();
        uint64_t v97 = sub_2607DCF28(v9, v366);
        unint64_t v98 = v366;
        unint64_t v99 = *((void *)&v315 + 1);
        unint64_t v100 = v250;
        if ((OUTLINED_FUNCTION_63(v97, v101, v102, v103, v104, v105, v106, v107, v230, v240, v250, v261, v271, v283, v293, v304, v315, *((uint64_t *)&v315 + 1), v332,
                v343,
                v355,
                v366,
                v92,
                *((uint64_t *)&v92 + 1),
                v9,
                v9) & 1) != 0)
        {
          sub_2607DCF28(v9, v93);
          OUTLINED_FUNCTION_33();
          uint64_t v39 = v333;
          sub_2607DCF28(v376, v384);
          OUTLINED_FUNCTION_47();
          OUTLINED_FUNCTION_21_3();
          OUTLINED_FUNCTION_30();
          OUTLINED_FUNCTION_54();
          sub_2607DCF28(v272, v305);
          OUTLINED_FUNCTION_47();
          OUTLINED_FUNCTION_21_3();
          OUTLINED_FUNCTION_30();
          OUTLINED_FUNCTION_54();
          sub_2607DCF28(v376, v384);
          uint64_t v108 = OUTLINED_FUNCTION_59();
LABEL_26:
          sub_2607DCF28(v108, v109);
          uint64_t v49 = v39;
          unint64_t v50 = v100;
          goto LABEL_12;
        }
        sub_2607DCED0(v9, v98);
        sub_2607DCED0(v96, v95);
        sub_2607DCED0(v376, v384);
        sub_2607DCED0(v316, v94);
        unint64_t v131 = v100;
        sub_2607DCED0(v333, v100);
        uint64_t v189 = v284;
        uint64_t v190 = sub_2607F4F6C(&v398, v284);
        if (v262)
        {
          OUTLINED_FUNCTION_49();
          OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_62();
          sub_2607DCF28(v316, v94);
          sub_2607DCF28(v333, v100);
          OUTLINED_FUNCTION_49();
          OUTLINED_FUNCTION_54();
          sub_2607DCF28(v272, v305);
          sub_2607DCF28(v316, v99);
          sub_2607DCF28(v333, v100);
          OUTLINED_FUNCTION_49();
          OUTLINED_FUNCTION_54();
          OUTLINED_FUNCTION_62();
          sub_2607DCF28(v316, v99);
          uint64_t v49 = v333;
          goto LABEL_34;
        }
        uint64_t v216 = v316;
        uint64_t v217 = v333;
        v218 = OUTLINED_FUNCTION_81(v190, v344 + 8, v191, v192, v193, v194, v195, v196, v231, v241, v251, v262, v272, v284, v294, v305, v316, v323, v333,
                 v344,
                 v356,
                 v367,
                 v376,
                 v384,
                 v393,
                 v9);
        sub_2607EC130(v218, v219, v189);
        OUTLINED_FUNCTION_49();
        OUTLINED_FUNCTION_33();
        sub_2607DCF28(v380, v389);
        sub_2607DCF28(v216, v99);
        OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_49();
        OUTLINED_FUNCTION_33();
        sub_2607DCF28(v277, v309);
        sub_2607DCF28(v216, v99);
        OUTLINED_FUNCTION_105();
        OUTLINED_FUNCTION_49();
        OUTLINED_FUNCTION_33();
        sub_2607DCF28(v380, v389);
        sub_2607DCF28(v216, v99);
        uint64_t v49 = v217;
        unint64_t v50 = v100;
        return sub_2607DCF28(v49, v50);
      case 4:
        uint64_t v110 = OUTLINED_FUNCTION_93();
        uint64_t v118 = OUTLINED_FUNCTION_26_0(v110, v111, v112, v113, v114, v115, v116, v117, v225, v235, v17, v256, v14, a3, v11, v13, v16, v15, v18,
                 (uint64_t)v338,
                 v350,
                 v10,
                 a1);
        sub_2607ED960(v118, v119, v120);
        unint64_t v121 = *((void *)&v398 + 1);
        uint64_t v122 = v398;
        sub_2607DCED0(v398, *((unint64_t *)&v398 + 1));
        OUTLINED_FUNCTION_93();
        unint64_t v123 = v357;
        unint64_t v124 = v368;
        *(void *)&long long v398 = v9;
        *((void *)&v398 + 1) = v368;
        *(void *)&long long v399 = v295;
        *((void *)&v399 + 1) = v357;
        *(void *)&long long v400 = v273;
        *((void *)&v400 + 1) = v306;
        unsigned long long v401 = __PAIR128__(v121, v122);
        unint64_t v125 = v252;
        uint64_t v402 = v334;
        unint64_t v403 = v252;
        sub_2607DCED0(v390, v368);
        sub_2607DCED0(v295, v357);
        OUTLINED_FUNCTION_53();
        sub_2607DCED0(v122, v121);
        OUTLINED_FUNCTION_60();
        sub_2607DCF28(v334, v252);
        uint64_t v377 = v121;
        uint64_t v385 = v122;
        unint64_t v126 = v121;
        uint64_t v127 = v273;
        sub_2607DCF28(v122, v126);
        OUTLINED_FUNCTION_40();
        OUTLINED_FUNCTION_32();
        uint64_t v128 = sub_2607DCF28(v390, v368);
        uint64_t v129 = v390;
        unint64_t v130 = v368;
        unint64_t v131 = v252;
        if ((OUTLINED_FUNCTION_63(v128, v132, v133, v134, v135, v136, v137, v138, v232, v242, v252, v263, v273, v285, v295, v306, v317, v324, v334,
                v345,
                v357,
                v368,
                v377,
                v385,
                v390,
                v390) & 1) != 0)
        {
          sub_2607DCF28(v129, v124);
          sub_2607DCF28(v296, v123);
          sub_2607DCF28(v127, v307);
          uint64_t v139 = v335;
          sub_2607DCF28(v386, v378);
          OUTLINED_FUNCTION_84();
          sub_2607DCF28(v129, v124);
          OUTLINED_FUNCTION_54();
          OUTLINED_FUNCTION_40();
          sub_2607DCF28(v318, v325);
          OUTLINED_FUNCTION_84();
          sub_2607DCF28(v129, v124);
          OUTLINED_FUNCTION_54();
          OUTLINED_FUNCTION_40();
          uint64_t v140 = v386;
          unint64_t v141 = v378;
          goto LABEL_33;
        }
        sub_2607DCED0(v129, v124);
        sub_2607DCED0(v296, v123);
        sub_2607DCED0(v127, v307);
        sub_2607DCED0(v386, v378);
        sub_2607DCED0(v335, v125);
        uint64_t v197 = v286;
        uint64_t v198 = sub_2607F4F6C(&v398, v286);
        if (v264)
        {
          unint64_t v205 = v130;
          sub_2607DCF28(v129, v130);
          OUTLINED_FUNCTION_88();
          sub_2607DCF28(v127, v307);
          OUTLINED_FUNCTION_30();
          uint64_t v139 = v335;
          OUTLINED_FUNCTION_84();
          sub_2607DCF28(v129, v205);
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_87();
          sub_2607DCF28(v318, v325);
          OUTLINED_FUNCTION_84();
          sub_2607DCF28(v129, v205);
          OUTLINED_FUNCTION_88();
          OUTLINED_FUNCTION_87();
          uint64_t v140 = v386;
          unint64_t v141 = v378;
LABEL_33:
          sub_2607DCF28(v140, v141);
          uint64_t v49 = v139;
LABEL_34:
          unint64_t v50 = v131;
          goto LABEL_12;
        }
        unint64_t v220 = v307;
        uint64_t v221 = v335;
        v222 = OUTLINED_FUNCTION_81(v198, v346 + 8, v199, v200, v201, v202, v203, v204, v233, v243, v253, v264, v274, v286, v296, v307, v318, v325, v335,
                 v346,
                 v358,
                 v369,
                 v378,
                 v386,
                 v394,
                 v129);
        sub_2607EC130(v222, v223, v197);
        OUTLINED_FUNCTION_77();
        OUTLINED_FUNCTION_33();
        sub_2607DCF28(v127, v220);
        OUTLINED_FUNCTION_30();
        sub_2607DCF28(v221, v131);
        OUTLINED_FUNCTION_77();
        OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_87();
        sub_2607DCF28(v320, v327);
        sub_2607DCF28(v221, v131);
        OUTLINED_FUNCTION_77();
        OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_87();
        OUTLINED_FUNCTION_30();
        uint64_t v49 = v221;
        unint64_t v50 = v131;
        break;
      default:
        uint64_t v52 = v18;
        unint64_t v51 = v17;
        uint64_t v142 = sub_2607DCF28(v18, v17);
        if (v21 == 5)
        {
          uint64_t v150 = OUTLINED_FUNCTION_26_0(v142, v143, v144, v145, v146, v147, v148, v149, v225, v235, v17, v256, v14, a3, v11, v13, v310, v15, v18,
                   (uint64_t)v338,
                   v350,
                   v10,
                   a1);
          sub_2607EDEE8(v150, v151, v152);
          long long v153 = v398;
          uint64_t v154 = PointerReport.reportWithoutMovement.getter();
          unint64_t v156 = v155;
          sub_2607DCED0(v154, v155);
          sub_2607DCF28(v52, v51);
          uint64_t v157 = v390;
          *(void *)&long long v398 = v390;
          *((void *)&v398 + 1) = v370;
          unint64_t v158 = v308;
          *(void *)&long long v399 = v297;
          *((void *)&v399 + 1) = v359;
          *(void *)&long long v400 = v275;
          *((void *)&v400 + 1) = v308;
          uint64_t v159 = v319;
          unsigned long long v401 = v319;
          uint64_t v402 = v154;
          unint64_t v403 = v156;
          sub_2607DCED0(v390, v370);
          OUTLINED_FUNCTION_15_4();
          sub_2607DCED0(v275, v308);
          sub_2607DCED0(v319, *((unint64_t *)&v319 + 1));
          OUTLINED_FUNCTION_53();
          uint64_t v387 = v154;
          uint64_t v160 = v154;
          unint64_t v161 = v156;
          uint64_t v162 = v390;
          sub_2607DCF28(v160, v161);
          OUTLINED_FUNCTION_98();
          sub_2607DCF28(v275, v308);
          OUTLINED_FUNCTION_2_6();
          uint64_t v163 = sub_2607DCF28(v390, v370);
          char v171 = OUTLINED_FUNCTION_63(v163, v164, v165, v166, v167, v168, v169, v170, v234, v244, v254, *((uint64_t *)&v153 + 1), v275, v287, v297, v308, v319, *((uint64_t *)&v319 + 1), v336,
                   v347,
                   v359,
                   v370,
                   v153,
                   v387,
                   v390,
                   v390);
          unint64_t v245 = v161;
          if (v171)
          {
            sub_2607DCF28(v157, v371);
            sub_2607DCF28(v298, v360);
            sub_2607DCF28(v276, v158);
            OUTLINED_FUNCTION_98();
            sub_2607DCF28(v388, v161);
            uint64_t v172 = v288;
          }
          else
          {
            uint64_t v172 = v288;
            sub_2607F4F6C(&v398, v288);
          }
          uint64_t v208 = v348[4];
          uint64_t v207 = v348[5];
          __swift_project_boxed_opaque_existential_1(v348 + 1, v208);
          v349 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v207 + 48);
          sub_2607DCED0(v379, v265);
          v349(v379, v265, v172, v208, v207);
          sub_2607DCF28(v162, v371);
          sub_2607DCF28(v298, v360);
          OUTLINED_FUNCTION_61();
          sub_2607DCF28(v159, v326);
          sub_2607DCF28(v337, v255);
          sub_2607DCF28(v379, v265);
          sub_2607DCF28(v379, v265);
          sub_2607DCF28(v395, v371);
          sub_2607DCF28(v298, v360);
          OUTLINED_FUNCTION_61();
          sub_2607DCF28(v159, v326);
          uint64_t v49 = v388;
          unint64_t v50 = v245;
          goto LABEL_12;
        }
        OUTLINED_FUNCTION_40();
        sub_2607DCF28(v14, v13);
        sub_2607DCF28(v11, v350);
        sub_2607DCF28(v390, v10);
        if (v21 <= 0x11u && ((1 << v21) & 0x3FA80) != 0)
        {
          uint64_t v206 = v338[5];
          uint64_t v266 = v338[4];
          __swift_project_boxed_opaque_existential_1(v338 + 1, v266);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v206 + 48))(a1, a2, a3, v266, v206);
        }
        goto LABEL_10;
    }
  }
  return sub_2607DCF28(v49, v50);
}

uint64_t sub_2607ED788@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_2607DCED0(a1, a2);
  uint64_t v6 = 8 * sub_26087B040();
  unint64_t v7 = a2;
  uint64_t result = a1;
  if (v6 < 24) {
    goto LABEL_4;
  }
  uint64_t v9 = HIDReport.init(bitCount:id:)(v6, 3);
  unint64_t v11 = v10;
  unint64_t v13 = v10;
  sub_2607DCED0(v9, v10);
  char v12 = HIDReport.initialize(from:)(a1, a2);
  sub_2607DCF28(a1, a2);
  sub_2607DCF28(v9, v11);
  uint64_t result = v9;
  unint64_t v7 = v13;
  if (v12)
  {
    *a3 = v9;
    a3[1] = v13;
  }
  else
  {
LABEL_4:
    sub_2607DCF28(result, v7);
    sub_26087B7F0();
    swift_bridgeObjectRelease();
    sub_2607DCED0(a1, a2);
    sub_2607F6A24(a1, a2);
    sub_2607DCF28(a1, a2);
    sub_26087BBA0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    sub_26087B330();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4798);
    sub_26087B2D0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    uint64_t result = sub_26087B990();
    __break(1u);
  }
  return result;
}

uint64_t sub_2607ED960@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_2607DCED0(a1, a2);
  uint64_t v6 = 8 * sub_26087B040();
  unint64_t v7 = a2;
  uint64_t result = a1;
  if (v6 < 40) {
    goto LABEL_4;
  }
  uint64_t v9 = HIDReport.init(bitCount:id:)(v6, 4);
  unint64_t v11 = v10;
  unint64_t v13 = v10;
  sub_2607DCED0(v9, v10);
  char v12 = HIDReport.initialize(from:)(a1, a2);
  sub_2607DCF28(a1, a2);
  sub_2607DCF28(v9, v11);
  uint64_t result = v9;
  unint64_t v7 = v13;
  if (v12)
  {
    *a3 = v9;
    a3[1] = v13;
  }
  else
  {
LABEL_4:
    sub_2607DCF28(result, v7);
    sub_26087B7F0();
    swift_bridgeObjectRelease();
    sub_2607DCED0(a1, a2);
    sub_2607F6A24(a1, a2);
    sub_2607DCF28(a1, a2);
    sub_26087BBA0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    sub_26087B330();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B47A0);
    sub_26087B2D0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    uint64_t result = sub_26087B990();
    __break(1u);
  }
  return result;
}

uint64_t sub_2607EDB38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_2607DCED0(a1, a2);
  uint64_t v6 = 8 * sub_26087B040();
  unint64_t v7 = a2;
  uint64_t result = a1;
  if (v6 < 72) {
    goto LABEL_4;
  }
  uint64_t v9 = HIDReport.init(bitCount:id:)(v6, 2);
  unint64_t v11 = v10;
  unint64_t v13 = v10;
  sub_2607DCED0(v9, v10);
  char v12 = HIDReport.initialize(from:)(a1, a2);
  sub_2607DCF28(a1, a2);
  sub_2607DCF28(v9, v11);
  uint64_t result = v9;
  unint64_t v7 = v13;
  if (v12)
  {
    *a3 = v9;
    a3[1] = v13;
  }
  else
  {
LABEL_4:
    sub_2607DCF28(result, v7);
    sub_26087B7F0();
    swift_bridgeObjectRelease();
    sub_2607DCED0(a1, a2);
    sub_2607F6A24(a1, a2);
    sub_2607DCF28(a1, a2);
    sub_26087BBA0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    sub_26087B330();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B47A8);
    sub_26087B2D0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    uint64_t result = sub_26087B990();
    __break(1u);
  }
  return result;
}

uint64_t sub_2607EDD10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_2607DCED0(a1, a2);
  uint64_t v6 = 8 * sub_26087B040();
  unint64_t v7 = a2;
  uint64_t result = a1;
  if (v6 < 248) {
    goto LABEL_4;
  }
  uint64_t v9 = HIDReport.init(bitCount:id:)(v6, 1);
  unint64_t v11 = v10;
  unint64_t v13 = v10;
  sub_2607DCED0(v9, v10);
  char v12 = HIDReport.initialize(from:)(a1, a2);
  sub_2607DCF28(a1, a2);
  sub_2607DCF28(v9, v11);
  uint64_t result = v9;
  unint64_t v7 = v13;
  if (v12)
  {
    *a3 = v9;
    a3[1] = v13;
  }
  else
  {
LABEL_4:
    sub_2607DCF28(result, v7);
    sub_26087B7F0();
    swift_bridgeObjectRelease();
    sub_2607DCED0(a1, a2);
    sub_2607F6A24(a1, a2);
    sub_2607DCF28(a1, a2);
    sub_26087BBA0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    sub_26087B330();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B47B0);
    sub_26087B2D0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    uint64_t result = sub_26087B990();
    __break(1u);
  }
  return result;
}

uint64_t sub_2607EDEE8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_2607DCED0(a1, a2);
  uint64_t v6 = 8 * sub_26087B040();
  unint64_t v7 = a2;
  uint64_t result = a1;
  if (v6 < 136) {
    goto LABEL_4;
  }
  uint64_t v9 = HIDReport.init(bitCount:id:)(v6, 5);
  unint64_t v11 = v10;
  unint64_t v13 = v10;
  sub_2607DCED0(v9, v10);
  char v12 = HIDReport.initialize(from:)(a1, a2);
  sub_2607DCF28(a1, a2);
  sub_2607DCF28(v9, v11);
  uint64_t result = v9;
  unint64_t v7 = v13;
  if (v12)
  {
    *a3 = v9;
    a3[1] = v13;
  }
  else
  {
LABEL_4:
    sub_2607DCF28(result, v7);
    sub_26087B7F0();
    swift_bridgeObjectRelease();
    sub_2607DCED0(a1, a2);
    sub_2607F6A24(a1, a2);
    sub_2607DCF28(a1, a2);
    sub_26087BBA0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    sub_26087B330();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B47B8);
    sub_26087B2D0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    uint64_t result = sub_26087B990();
    __break(1u);
  }
  return result;
}

uint64_t EventReportAccumulator.resetValues(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_2607EC404((uint64_t *)v5);
  sub_2607F4F6C(v5, a1);
  sub_2607EE12C(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2607EE12C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v323 = *MEMORY[0x263EF8340];
  uint64_t v5 = type metadata accessor for EventReportSenderID();
  uint64_t v283 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v278 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v282 = (uint64_t)&v278 - v9;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_260876508(v10);
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_2607F3760(v12, v11);
  int64_t v14 = 0;
  uint64_t v285 = 0;
  uint64_t v15 = *(void *)(v13 + 56);
  uint64_t v279 = v13 + 56;
  uint64_t v284 = v13;
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v280 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v281 = a1;
  uint64_t v304 = v8;
  uint64_t v293 = v3 + 1;
  unint64_t v309 = v3;
  if (!v18) {
    goto LABEL_5;
  }
  while (2)
  {
    uint64_t v287 = (v18 - 1) & v18;
    int64_t v288 = v14;
    unint64_t v19 = __clz(__rbit64(v18)) | (v14 << 6);
LABEL_16:
    uint64_t v24 = v282;
    sub_2607F6B78(*(void *)(v284 + 48) + *(void *)(v283 + 72) * v19, v282);
    sub_2607F6BDC(v24, (uint64_t)v8);
    if (*(void *)(a1 + 16) && (unint64_t v25 = sub_2607F3DA0((uint64_t)v8), (v26 & 1) != 0))
    {
      uint64_t v27 = (void *)(*(void *)(a1 + 56) + 80 * v25);
      unint64_t v28 = v27[1];
      uint64_t v31 = v27[2];
      unint64_t v30 = v27[3];
      uint64_t v2 = v27[4];
      unint64_t v32 = v27[5];
      uint64_t v34 = v27[6];
      unint64_t v33 = v27[7];
      uint64_t v35 = v27[8];
      unint64_t v36 = v27[9];
      *(void *)&long long __s1 = *v27;
      uint64_t v29 = __s1;
      *((void *)&__s1 + 1) = v28;
      uint64_t v315 = v31;
      unint64_t v316 = v30;
      uint64_t v317 = v2;
      unint64_t v318 = v32;
      uint64_t v319 = v34;
      unint64_t v320 = v33;
      uint64_t v321 = v35;
      unint64_t v299 = v28;
      sub_2607DCED0(__s1, v28);
      uint64_t v300 = v31;
      uint64_t v37 = v31;
      uint64_t v38 = v29;
      unint64_t v301 = v30;
      unint64_t v39 = v30;
      uint64_t v40 = v34;
      sub_2607DCED0(v37, v39);
      uint64_t v306 = v2;
      uint64_t v289 = (char *)v32;
      sub_2607DCED0(v2, v32);
      unint64_t v302 = v33;
      sub_2607DCED0(v34, v33);
      uint64_t v308 = v35;
      unint64_t v295 = v36;
      sub_2607DCED0(v35, v36);
    }
    else
    {
      sub_2607EC404((uint64_t *)&__s1);
      unint64_t v299 = *((void *)&__s1 + 1);
      uint64_t v38 = __s1;
      uint64_t v300 = v315;
      unint64_t v301 = v316;
      uint64_t v306 = v317;
      uint64_t v40 = v319;
      uint64_t v289 = (char *)v318;
      unint64_t v302 = v320;
      uint64_t v308 = v321;
      unint64_t v295 = v322;
    }
    uint64_t v41 = *v309;
    uint64_t v42 = *(void *)(*v309 + 16);
    uint64_t v298 = v40;
    uint64_t v292 = v38;
    if (v42 && (unint64_t v43 = sub_2607F3DA0((uint64_t)v8), (v44 & 1) != 0))
    {
      uint64_t v45 = (void *)(*(void *)(v41 + 56) + 80 * v43);
      unint64_t v47 = v45[1];
      uint64_t v48 = v45[2];
      uint64_t v2 = v45[3];
      uint64_t v49 = v45[4];
      unint64_t v50 = v45[5];
      uint64_t v52 = v45[6];
      unint64_t v51 = v45[7];
      uint64_t v54 = v45[8];
      unint64_t v53 = v45[9];
      *(void *)&long long __s1 = *v45;
      uint64_t v46 = __s1;
      *((void *)&__s1 + 1) = v47;
      uint64_t v315 = v48;
      unint64_t v316 = v2;
      uint64_t v317 = v49;
      unint64_t v318 = v50;
      uint64_t v319 = v52;
      unint64_t v320 = v51;
      sub_2607DCED0(__s1, v47);
      unint64_t v310 = v2;
      sub_2607DCED0(v48, v2);
      uint64_t v297 = v49;
      unint64_t v307 = v50;
      sub_2607DCED0(v49, v50);
      uint64_t v296 = v52;
      unint64_t v305 = v51;
      unint64_t v55 = v51;
      uint64_t v56 = v46;
      sub_2607DCED0(v52, v55);
      unint64_t v291 = v53;
      unint64_t v57 = v53;
      uint64_t v38 = v292;
      sub_2607DCED0(v54, v57);
    }
    else
    {
      sub_2607EC404((uint64_t *)&__s1);
      unint64_t v47 = *((void *)&__s1 + 1);
      uint64_t v56 = __s1;
      uint64_t v48 = v315;
      unint64_t v310 = v316;
      uint64_t v297 = v317;
      unint64_t v307 = v318;
      uint64_t v296 = v319;
      uint64_t v54 = v321;
      unint64_t v305 = v320;
      unint64_t v291 = v322;
    }
    uint64_t v58 = 0;
    switch(v47 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v56), v56)) {
          goto LABEL_322;
        }
        uint64_t v58 = HIDWORD(v56) - (int)v56;
        break;
      case 2uLL:
        uint64_t v60 = *(void *)(v56 + 16);
        uint64_t v59 = *(void *)(v56 + 24);
        uint64_t v58 = v59 - v60;
        if (!__OFSUB__(v59, v60)) {
          break;
        }
        goto LABEL_321;
      case 3uLL:
        break;
      default:
        uint64_t v58 = BYTE6(v47);
        break;
    }
    unint64_t v61 = v299 >> 62;
    uint64_t v303 = v48;
    uint64_t v290 = v54;
    unint64_t v294 = v47;
    switch(v299 >> 62)
    {
      case 1uLL:
        LODWORD(v62) = HIDWORD(v38) - v38;
        if (__OFSUB__(HIDWORD(v38), v38)) {
          goto LABEL_323;
        }
        uint64_t v62 = (int)v62;
LABEL_38:
        if (v58 == v62)
        {
          if (v58 >= 1)
          {
            unint64_t v66 = (int)v38;
            uint64_t v67 = v38 >> 32;
            switch(v47 >> 62)
            {
              case 1uLL:
                if (v56 >> 32 < (int)v56) {
                  goto LABEL_342;
                }
                unint64_t v110 = v299;
                sub_2607DCED0(v38, v299);
                sub_2607DCED0(v38, v110);
                sub_2607DCED0(v38, v110);
                sub_2607DCED0(v56, v47);
                uint64_t v111 = v285;
                char v112 = sub_2607F49D0((int)v56, v56 >> 32, v47 & 0x3FFFFFFFFFFFFFFFLL, v38, v110);
                uint64_t v285 = v111;
                if (v111)
                {
                  sub_2607DCF28(v38, v110);
                  uint64_t v270 = v38;
                  unint64_t v271 = v110;
                  goto LABEL_394;
                }
                char v113 = v112;
                sub_2607DCF28(v56, v47);
                sub_2607DCF28(v38, v110);
                sub_2607DCF28(v38, v110);
                HIDWORD(v48) = HIDWORD(v303);
                unint64_t v65 = v310;
                if (v113) {
                  goto LABEL_49;
                }
                goto LABEL_48;
              case 2uLL:
                uint64_t v103 = *(void *)(v56 + 16);
                uint64_t v104 = *(void *)(v56 + 24);
                uint64_t v2 = v299;
                sub_2607DCED0(v38, v299);
                sub_2607DCED0(v38, v2);
                sub_2607DCED0(v38, v2);
                swift_retain();
                swift_retain();
                uint64_t v105 = v103;
                uint64_t v106 = v285;
                char v107 = sub_2607F49D0(v105, v104, v47 & 0x3FFFFFFFFFFFFFFFLL, v38, v2);
                uint64_t v285 = v106;
                if (v106) {
                  goto LABEL_388;
                }
                char v108 = v107;
                swift_release();
                swift_release();
                sub_2607DCF28(v38, v2);
                sub_2607DCF28(v38, v2);
                HIDWORD(v48) = HIDWORD(v303);
                unint64_t v65 = v310;
                if (v108) {
                  goto LABEL_49;
                }
                goto LABEL_48;
              case 3uLL:
                *(void *)((char *)&__s1 + 6) = 0;
                *(void *)&long long __s1 = 0;
                if (!v61) {
                  goto LABEL_228;
                }
                if (v61 == 1)
                {
                  if (v67 < (int)v38) {
                    goto LABEL_348;
                  }
                  sub_2607DCED0(v38, v299);
                  uint64_t v68 = (char *)sub_26087AED0();
                  if (v68)
                  {
                    uint64_t v109 = sub_26087AEF0();
                    unint64_t v65 = v310;
                    if (__OFSUB__((int)v38, v109)) {
                      goto LABEL_366;
                    }
                    v68 += (int)v38 - v109;
                  }
                  else
                  {
                    unint64_t v65 = v310;
                  }
                  uint64_t v257 = sub_26087AEE0();
                  if (!v68) {
                    goto LABEL_377;
                  }
LABEL_292:
                  if (v257 >= v67 - (int)v38) {
                    size_t v258 = v67 - (int)v38;
                  }
                  else {
                    size_t v258 = v257;
                  }
                  int v259 = memcmp(&__s1, v68, v258);
                  sub_2607DCF28(v38, v299);
                  if (v259) {
                    goto LABEL_48;
                  }
                }
                else
                {
                  uint64_t v212 = *(void *)(v38 + 16);
                  uint64_t v211 = *(void *)(v38 + 24);
                  sub_2607DCED0(v38, v299);
                  swift_retain();
                  swift_retain();
                  unint64_t v213 = (char *)sub_26087AED0();
                  if (v213)
                  {
                    uint64_t v214 = sub_26087AEF0();
                    unint64_t v65 = v310;
                    if (__OFSUB__(v212, v214)) {
                      goto LABEL_363;
                    }
                    v213 += v212 - v214;
                  }
                  else
                  {
                    unint64_t v65 = v310;
                  }
                  BOOL v20 = __OFSUB__(v211, v212);
                  int64_t v253 = v211 - v212;
                  if (v20) {
                    goto LABEL_349;
                  }
                  uint64_t v254 = sub_26087AEE0();
                  if (!v213)
                  {
                    __break(1u);
LABEL_376:
                    __break(1u);
LABEL_377:
                    __break(1u);
LABEL_378:
                    __break(1u);
LABEL_379:
                    __break(1u);
LABEL_380:
                    __break(1u);
LABEL_381:
                    __break(1u);
LABEL_382:
                    __break(1u);
LABEL_383:
                    __break(1u);
LABEL_384:
                    __break(1u);
LABEL_385:
                    __break(1u);
LABEL_386:
                    __break(1u);
LABEL_387:
                    __break(1u);
LABEL_388:
                    sub_2607DCF28(v38, v2);
                    uint64_t v269 = v38;
LABEL_403:
                    unint64_t v273 = v2;
LABEL_404:
                    sub_2607DCF28(v269, v273);
                    swift_release();
LABEL_405:
                    swift_release();
                    __break(1u);
                    JUMPOUT(0x2607F066CLL);
                  }
LABEL_282:
                  if (v254 >= v253) {
                    size_t v255 = v253;
                  }
                  else {
                    size_t v255 = v254;
                  }
                  int v256 = memcmp(&__s1, v213, v255);
                  swift_release();
                  swift_release();
                  sub_2607DCF28(v38, v299);
                  if (v256) {
                    goto LABEL_48;
                  }
                }
                goto LABEL_49;
              default:
                *(void *)&long long __s1 = v56;
                WORD4(__s1) = v47;
                BYTE10(__s1) = BYTE2(v47);
                BYTE11(__s1) = BYTE3(v47);
                BYTE12(__s1) = BYTE4(v47);
                BYTE13(__s1) = BYTE5(v47);
                if (!v61)
                {
LABEL_228:
                  uint64_t __s2 = v38;
                  int v312 = v299;
                  __int16 v313 = WORD2(v299);
                  int v208 = memcmp(&__s1, &__s2, BYTE6(v299));
                  unint64_t v65 = v310;
                  if (v208) {
                    goto LABEL_48;
                  }
                  goto LABEL_49;
                }
                if (v61 == 1)
                {
                  if (v67 < (int)v38) {
                    goto LABEL_347;
                  }
                  sub_2607DCED0(v38, v299);
                  uint64_t v68 = (char *)sub_26087AED0();
                  if (v68)
                  {
                    uint64_t v69 = sub_26087AEF0();
                    unint64_t v65 = v310;
                    if (__OFSUB__((int)v38, v69)) {
                      goto LABEL_365;
                    }
                    v68 += (int)v38 - v69;
                  }
                  else
                  {
                    unint64_t v65 = v310;
                  }
                  uint64_t v257 = sub_26087AEE0();
                  if (!v68) {
                    goto LABEL_378;
                  }
                  goto LABEL_292;
                }
                uint64_t v216 = *(void *)(v38 + 16);
                uint64_t v215 = *(void *)(v38 + 24);
                sub_2607DCED0(v38, v299);
                swift_retain();
                swift_retain();
                unint64_t v213 = (char *)sub_26087AED0();
                if (v213)
                {
                  uint64_t v217 = sub_26087AEF0();
                  unint64_t v65 = v310;
                  if (__OFSUB__(v216, v217)) {
                    goto LABEL_364;
                  }
                  v213 += v216 - v217;
                }
                else
                {
                  unint64_t v65 = v310;
                }
                BOOL v20 = __OFSUB__(v215, v216);
                int64_t v253 = v215 - v216;
                if (v20) {
                  goto LABEL_350;
                }
                uint64_t v254 = sub_26087AEE0();
                if (!v213) {
                  goto LABEL_376;
                }
                goto LABEL_282;
            }
          }
          unint64_t v65 = v310;
        }
        else
        {
          unint64_t v65 = v310;
LABEL_48:
          uint64_t v70 = v309[4];
          uint64_t v71 = v309[5];
          __swift_project_boxed_opaque_existential_1(v293, v70);
          (*(void (**)(uint64_t, unint64_t, char *, uint64_t, uint64_t))(v71 + 32))(v56, v294, v304, v70, v71);
        }
LABEL_49:
        uint64_t v286 = v56;
        uint64_t v72 = v306;
        uint64_t v2 = v307;
        unint64_t v310 = v65;
        uint64_t v73 = 0;
        unint64_t v74 = v301;
        uint64_t v75 = v300;
        switch(v65 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v48), v303)) {
              goto LABEL_325;
            }
            uint64_t v73 = HIDWORD(v48) - (int)v303;
            break;
          case 2uLL:
            uint64_t v77 = *(void *)(v303 + 16);
            uint64_t v76 = *(void *)(v303 + 24);
            uint64_t v73 = v76 - v77;
            if (!__OFSUB__(v76, v77)) {
              goto LABEL_54;
            }
            goto LABEL_326;
          case 3uLL:
            goto LABEL_54;
          default:
            uint64_t v73 = BYTE6(v310);
            goto LABEL_54;
        }
        break;
      case 2uLL:
        uint64_t v64 = *(void *)(v38 + 16);
        uint64_t v63 = *(void *)(v38 + 24);
        BOOL v20 = __OFSUB__(v63, v64);
        uint64_t v62 = v63 - v64;
        if (!v20) {
          goto LABEL_38;
        }
        goto LABEL_324;
      case 3uLL:
        unint64_t v65 = v310;
        if (!v58) {
          goto LABEL_49;
        }
        goto LABEL_48;
      default:
        uint64_t v62 = BYTE6(v299);
        goto LABEL_38;
    }
LABEL_54:
    unint64_t v78 = v301 >> 62;
    switch(v301 >> 62)
    {
      case 1uLL:
        LODWORD(v79) = HIDWORD(v300) - v300;
        if (__OFSUB__(HIDWORD(v300), v300)) {
          goto LABEL_328;
        }
        uint64_t v79 = (int)v79;
LABEL_63:
        if (v73 == v79)
        {
          if (v73 >= 1)
          {
            uint64_t v84 = (int)v300;
            uint64_t v85 = v300 >> 32;
            switch(v65 >> 62)
            {
              case 1uLL:
                unint64_t v66 = v307;
                uint64_t v123 = v303;
                if (v123 >> 32 < (int)v123) {
                  goto LABEL_343;
                }
                unint64_t v47 = v310;
                uint64_t v124 = v300;
                unint64_t v125 = v301;
                sub_2607DCED0(v300, v301);
                sub_2607DCED0(v124, v125);
                sub_2607DCED0(v124, v125);
                sub_2607DCED0(v123, v47);
                uint64_t v126 = v285;
                char v127 = sub_2607F49D0((int)v123, v123 >> 32, v47 & 0x3FFFFFFFFFFFFFFFLL, v124, v125);
                uint64_t v285 = v126;
                if (v126)
                {
                  sub_2607DCF28(v124, v125);
                  sub_2607DCF28(v124, v125);
                  uint64_t v272 = v123;
                  goto LABEL_395;
                }
                char v128 = v127;
                sub_2607DCF28(v123, v47);
                sub_2607DCF28(v124, v125);
                sub_2607DCF28(v124, v125);
                uint64_t v38 = v72;
                unint64_t v82 = (unint64_t)v289;
                uint64_t v83 = v293;
                uint64_t v2 = v66;
                if (v128) {
                  goto LABEL_74;
                }
                goto LABEL_73;
              case 2uLL:
                uint64_t v114 = v310 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v115 = *(void *)(v303 + 16);
                uint64_t v116 = *(void *)(v303 + 24);
                sub_2607DCED0(v300, v301);
                sub_2607DCED0(v75, v74);
                sub_2607DCED0(v75, v74);
                swift_retain();
                swift_retain();
                uint64_t v117 = v115;
                uint64_t v118 = v285;
                char v119 = sub_2607F49D0(v117, v116, v114, v75, v74);
                uint64_t v285 = v118;
                if (v118)
                {
                  sub_2607DCF28(v75, v74);
                  sub_2607DCF28(v75, v74);
                  swift_release();
                  goto LABEL_405;
                }
                char v120 = v119;
                swift_release();
                swift_release();
                sub_2607DCF28(v75, v74);
                sub_2607DCF28(v75, v74);
                uint64_t v38 = v72;
                unint64_t v82 = (unint64_t)v289;
                uint64_t v83 = v293;
                uint64_t v2 = v307;
                if (v120) {
                  goto LABEL_74;
                }
                goto LABEL_73;
              case 3uLL:
                *(void *)((char *)&__s1 + 6) = 0;
                *(void *)&long long __s1 = 0;
                if (!v78) {
                  goto LABEL_230;
                }
                if (v78 == 1)
                {
                  if (v85 < (int)v300) {
                    goto LABEL_352;
                  }
                  sub_2607DCED0(v300, v301);
                  uint64_t v86 = (char *)sub_26087AED0();
                  if (v86)
                  {
                    uint64_t v121 = sub_26087AEF0();
                    uint64_t v122 = (int)v75 - v121;
                    unint64_t v82 = (unint64_t)v289;
                    uint64_t v83 = v293;
                    if (__OFSUB__(v84, v121)) {
                      goto LABEL_370;
                    }
                    uint64_t v38 = v72;
                    v86 += v122;
                  }
                  else
                  {
                    uint64_t v38 = v72;
                    unint64_t v82 = (unint64_t)v289;
                    uint64_t v83 = v293;
                  }
                  uint64_t v265 = sub_26087AEE0();
                  if (!v86) {
                    goto LABEL_382;
                  }
                  goto LABEL_314;
                }
                uint64_t v219 = *(void *)(v300 + 16);
                uint64_t v218 = *(void *)(v300 + 24);
                sub_2607DCED0(v300, v301);
                swift_retain();
                swift_retain();
                unint64_t v220 = (char *)sub_26087AED0();
                if (v220)
                {
                  uint64_t v221 = sub_26087AEF0();
                  unint64_t v82 = (unint64_t)v289;
                  uint64_t v83 = v293;
                  if (__OFSUB__(v219, v221)) {
                    goto LABEL_367;
                  }
                  uint64_t v38 = v72;
                  v220 += v219 - v221;
                }
                else
                {
                  uint64_t v38 = v72;
                  unint64_t v82 = (unint64_t)v289;
                  uint64_t v83 = v293;
                }
                BOOL v20 = __OFSUB__(v218, v219);
                int64_t v260 = v218 - v219;
                if (v20) {
                  goto LABEL_353;
                }
                uint64_t v261 = sub_26087AEE0();
                if (!v220) {
                  goto LABEL_380;
                }
                goto LABEL_304;
              default:
                LODWORD(__s1) = v303;
                BYTE4(__s1) = BYTE4(v48);
                *(_WORD *)((char *)&__s1 + 5) = *(_WORD *)((char *)&v303 + 5);
                BYTE7(__s1) = HIBYTE(v303);
                DWORD2(__s1) = v310;
                WORD6(__s1) = WORD2(v310);
                if (v78)
                {
                  if (v78 == 1)
                  {
                    if (v85 < (int)v300) {
                      goto LABEL_351;
                    }
                    sub_2607DCED0(v300, v301);
                    uint64_t v86 = (char *)sub_26087AED0();
                    if (v86)
                    {
                      uint64_t v87 = sub_26087AEF0();
                      uint64_t v88 = (int)v75 - v87;
                      unint64_t v82 = (unint64_t)v289;
                      uint64_t v83 = v293;
                      if (__OFSUB__(v84, v87)) {
                        goto LABEL_369;
                      }
                      uint64_t v38 = v72;
                      v86 += v88;
                    }
                    else
                    {
                      uint64_t v38 = v72;
                      unint64_t v82 = (unint64_t)v289;
                      uint64_t v83 = v293;
                    }
                    uint64_t v265 = sub_26087AEE0();
                    if (!v86) {
                      goto LABEL_379;
                    }
LABEL_314:
                    if (v265 >= v85 - v84) {
                      size_t v266 = v85 - v84;
                    }
                    else {
                      size_t v266 = v265;
                    }
                    int v267 = memcmp(&__s1, v86, v266);
                    sub_2607DCF28(v300, v301);
                    if (v267) {
                      goto LABEL_73;
                    }
                  }
                  else
                  {
                    uint64_t v223 = *(void *)(v300 + 16);
                    uint64_t v222 = *(void *)(v300 + 24);
                    sub_2607DCED0(v300, v301);
                    swift_retain();
                    swift_retain();
                    unint64_t v220 = (char *)sub_26087AED0();
                    if (v220)
                    {
                      uint64_t v224 = sub_26087AEF0();
                      unint64_t v82 = (unint64_t)v289;
                      uint64_t v83 = v293;
                      if (__OFSUB__(v223, v224)) {
                        goto LABEL_368;
                      }
                      uint64_t v38 = v72;
                      v220 += v223 - v224;
                    }
                    else
                    {
                      uint64_t v38 = v72;
                      unint64_t v82 = (unint64_t)v289;
                      uint64_t v83 = v293;
                    }
                    BOOL v20 = __OFSUB__(v222, v223);
                    int64_t v260 = v222 - v223;
                    if (v20) {
                      goto LABEL_354;
                    }
                    uint64_t v261 = sub_26087AEE0();
                    if (!v220) {
                      goto LABEL_381;
                    }
LABEL_304:
                    if (v261 >= v260) {
                      size_t v262 = v260;
                    }
                    else {
                      size_t v262 = v261;
                    }
                    int v263 = memcmp(&__s1, v220, v262);
                    swift_release();
                    uint64_t v264 = v300;
                    swift_release();
                    sub_2607DCF28(v264, v301);
                    if (v263) {
                      goto LABEL_73;
                    }
                  }
                }
                else
                {
LABEL_230:
                  uint64_t __s2 = v300;
                  int v312 = v301;
                  __int16 v313 = WORD2(v301);
                  int v209 = memcmp(&__s1, &__s2, BYTE6(v301));
                  uint64_t v38 = v72;
                  unint64_t v82 = (unint64_t)v289;
                  uint64_t v83 = v293;
                  if (v209) {
                    goto LABEL_73;
                  }
                }
                goto LABEL_74;
            }
          }
          uint64_t v38 = v306;
          unint64_t v82 = (unint64_t)v289;
          uint64_t v83 = v293;
        }
        else
        {
          uint64_t v38 = v306;
          unint64_t v82 = (unint64_t)v289;
          uint64_t v83 = v293;
LABEL_73:
          uint64_t v89 = v309[4];
          uint64_t v90 = v309[5];
          __swift_project_boxed_opaque_existential_1(v83, v89);
          (*(void (**)(uint64_t, unint64_t, char *, uint64_t, uint64_t))(v90 + 24))(v303, v310, v304, v89, v90);
        }
LABEL_74:
        uint64_t v91 = 0;
        uint64_t v92 = v297;
        unint64_t v47 = v310;
        switch((unint64_t)v2 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v297), v297)) {
              goto LABEL_329;
            }
            uint64_t v91 = HIDWORD(v297) - (int)v297;
LABEL_79:
            unint64_t v95 = v82 >> 62;
            switch(v82 >> 62)
            {
              case 1uLL:
                LODWORD(v96) = HIDWORD(v38) - v38;
                if (__OFSUB__(HIDWORD(v38), v38)) {
                  goto LABEL_332;
                }
                uint64_t v96 = (int)v96;
LABEL_88:
                if (v91 != v96) {
                  goto LABEL_133;
                }
                if (v91 < 1) {
                  goto LABEL_134;
                }
                break;
              case 2uLL:
                uint64_t v98 = *(void *)(v38 + 16);
                uint64_t v97 = *(void *)(v38 + 24);
                BOOL v20 = __OFSUB__(v97, v98);
                uint64_t v96 = v97 - v98;
                if (!v20) {
                  goto LABEL_88;
                }
                goto LABEL_331;
              case 3uLL:
                if (!v91) {
                  goto LABEL_134;
                }
                goto LABEL_133;
              default:
                uint64_t v96 = BYTE6(v82);
                goto LABEL_88;
            }
            break;
          case 2uLL:
            uint64_t v94 = *(void *)(v297 + 16);
            uint64_t v93 = *(void *)(v297 + 24);
            uint64_t v91 = v93 - v94;
            if (!__OFSUB__(v93, v94)) {
              goto LABEL_79;
            }
            goto LABEL_330;
          case 3uLL:
            goto LABEL_79;
          default:
            uint64_t v91 = BYTE6(v2);
            goto LABEL_79;
        }
        break;
      case 2uLL:
        uint64_t v81 = *(void *)(v300 + 16);
        uint64_t v80 = *(void *)(v300 + 24);
        BOOL v20 = __OFSUB__(v80, v81);
        uint64_t v79 = v80 - v81;
        if (!v20) {
          goto LABEL_63;
        }
        goto LABEL_327;
      case 3uLL:
        uint64_t v38 = v306;
        unint64_t v82 = (unint64_t)v289;
        uint64_t v83 = v293;
        if (!v73) {
          goto LABEL_74;
        }
        goto LABEL_73;
      default:
        uint64_t v79 = BYTE6(v301);
        goto LABEL_63;
    }
    uint64_t v99 = v38 >> 32;
    switch((unint64_t)v2 >> 62)
    {
      case 1uLL:
        if (v297 >> 32 < (int)v297) {
          goto LABEL_344;
        }
        unint64_t v66 = v2 & 0x3FFFFFFFFFFFFFFFLL;
        sub_2607DCED0(v38, v82);
        sub_2607DCED0(v38, v82);
        sub_2607DCED0(v38, v82);
        sub_2607DCED0(v92, v2);
        uint64_t v154 = v285;
        char v155 = sub_2607F49D0((int)v92, v92 >> 32, v2 & 0x3FFFFFFFFFFFFFFFLL, v38, v82);
        uint64_t v285 = v154;
        if (v154)
        {
          sub_2607DCF28(v38, v82);
          sub_2607DCF28(v38, v82);
          uint64_t v272 = v92;
          unint64_t v274 = v2;
          goto LABEL_400;
        }
        char v156 = v155;
        sub_2607DCF28(v92, v2);
        sub_2607DCF28(v38, v82);
        sub_2607DCF28(v38, v82);
        if ((v156 & 1) == 0)
        {
LABEL_133:
          uint64_t v135 = v309[4];
          uint64_t v136 = v309[5];
          __swift_project_boxed_opaque_existential_1(v83, v135);
          (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v136 + 8))(v92, v2, v304, v135, v136);
        }
LABEL_134:
        uint64_t v137 = v83;
        unint64_t v138 = v2;
        uint64_t v139 = 0;
        uint64_t v56 = v296;
        unint64_t v66 = v302;
        uint64_t v2 = v298;
        switch(v305 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v296), v296)) {
              goto LABEL_333;
            }
            uint64_t v139 = HIDWORD(v296) - (int)v296;
LABEL_139:
            unint64_t v142 = v302 >> 62;
            uint64_t v306 = v38;
            switch(v302 >> 62)
            {
              case 1uLL:
                LODWORD(v143) = HIDWORD(v298) - v298;
                if (__OFSUB__(HIDWORD(v298), v298)) {
                  goto LABEL_336;
                }
                uint64_t v38 = v47;
                uint64_t v143 = (int)v143;
                break;
              case 2uLL:
                uint64_t v145 = *(void *)(v298 + 16);
                uint64_t v144 = *(void *)(v298 + 24);
                BOOL v20 = __OFSUB__(v144, v145);
                uint64_t v143 = v144 - v145;
                if (v20) {
                  goto LABEL_335;
                }
                uint64_t v38 = v47;
                break;
              case 3uLL:
                uint64_t v38 = v47;
                if (!v139) {
                  goto LABEL_190;
                }
                goto LABEL_189;
              default:
                uint64_t v38 = v47;
                uint64_t v143 = BYTE6(v302);
                break;
            }
            if (v139 != v143) {
              goto LABEL_189;
            }
            if (v139 < 1) {
              goto LABEL_190;
            }
            break;
          case 2uLL:
            uint64_t v141 = *(void *)(v296 + 16);
            uint64_t v140 = *(void *)(v296 + 24);
            uint64_t v139 = v140 - v141;
            if (!__OFSUB__(v140, v141)) {
              goto LABEL_139;
            }
            goto LABEL_334;
          case 3uLL:
            goto LABEL_139;
          default:
            uint64_t v139 = BYTE6(v305);
            goto LABEL_139;
        }
        uint64_t v146 = v298 >> 32;
        switch(v305 >> 62)
        {
          case 1uLL:
            if (v296 >> 32 < (int)v296) {
              goto LABEL_345;
            }
            unint64_t v47 = v305;
            uint64_t v2 = v298;
            sub_2607DCED0(v298, v302);
            sub_2607DCED0(v2, v302);
            sub_2607DCED0(v2, v302);
            sub_2607DCED0(v56, v47);
            unint64_t v66 = v302;
            uint64_t v169 = v285;
            char v170 = sub_2607F49D0((int)v56, v56 >> 32, v47 & 0x3FFFFFFFFFFFFFFFLL, v2, v302);
            uint64_t v285 = v169;
            if (v169)
            {
              sub_2607DCF28(v2, v66);
              uint64_t v270 = v2;
              unint64_t v271 = v66;
LABEL_394:
              sub_2607DCF28(v270, v271);
              uint64_t v272 = v56;
LABEL_395:
              unint64_t v274 = v47;
LABEL_400:
              sub_2607DCF28(v272, v274);
              __break(1u);
LABEL_401:
              sub_2607DCF28(v47, v66);
              sub_2607DCF28(v47, v66);
              swift_release();
              goto LABEL_405;
            }
            char v148 = v170;
            uint64_t v149 = v56;
            unint64_t v150 = v47;
LABEL_188:
            sub_2607DCF28(v149, v150);
            sub_2607DCF28(v2, v66);
            sub_2607DCF28(v2, v66);
            if ((v148 & 1) == 0)
            {
LABEL_189:
              uint64_t v171 = v309[4];
              uint64_t v172 = v309[5];
              __swift_project_boxed_opaque_existential_1(v137, v171);
              (*(void (**)(uint64_t, unint64_t, char *, uint64_t, uint64_t))(v172 + 16))(v56, v305, v304, v171, v172);
            }
LABEL_190:
            unint64_t v307 = v138;
            unint64_t v173 = v302;
            unint64_t v174 = v291;
            uint64_t v175 = 0;
            uint64_t v176 = v290;
            uint64_t v2 = v295;
            unint64_t v177 = v38;
            uint64_t v178 = v306;
            switch(v291 >> 62)
            {
              case 1uLL:
                if (__OFSUB__(HIDWORD(v290), v290)) {
                  goto LABEL_337;
                }
                uint64_t v175 = HIDWORD(v290) - (int)v290;
                break;
              case 2uLL:
                uint64_t v180 = *(void *)(v290 + 16);
                uint64_t v179 = *(void *)(v290 + 24);
                uint64_t v175 = v179 - v180;
                if (!__OFSUB__(v179, v180)) {
                  goto LABEL_195;
                }
                goto LABEL_338;
              case 3uLL:
                goto LABEL_195;
              default:
                uint64_t v175 = BYTE6(v291);
                goto LABEL_195;
            }
            break;
          case 2uLL:
            unint64_t v157 = v305 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v158 = *(void *)(v296 + 16);
            uint64_t v159 = *(void *)(v296 + 24);
            sub_2607DCED0(v298, v302);
            sub_2607DCED0(v2, v66);
            sub_2607DCED0(v2, v66);
            swift_retain();
            swift_retain();
            uint64_t v160 = v158;
            uint64_t v161 = v285;
            char v162 = sub_2607F49D0(v160, v159, v157, v2, v66);
            uint64_t v285 = v161;
            if (v161)
            {
              sub_2607DCF28(v2, v66);
              uint64_t v269 = v2;
              unint64_t v273 = v66;
              goto LABEL_404;
            }
            char v163 = v162;
            swift_release();
            swift_release();
            sub_2607DCF28(v2, v66);
            sub_2607DCF28(v2, v66);
            if (v163) {
              goto LABEL_190;
            }
            goto LABEL_189;
          case 3uLL:
            *(void *)((char *)&__s1 + 6) = 0;
            *(void *)&long long __s1 = 0;
            if (!v142) {
              goto LABEL_234;
            }
            if (v142 == 1)
            {
              if (v146 < (int)v298) {
                goto LABEL_360;
              }
              sub_2607DCED0(v298, v302);
              uint64_t v164 = (char *)sub_26087AED0();
              if (v164)
              {
                uint64_t v165 = sub_26087AEF0();
                if (__OFSUB__((int)v2, v165)) {
                  goto LABEL_375;
                }
                v164 += (int)v2 - v165;
              }
              uint64_t v166 = sub_26087AEE0();
              if (!v164) {
                goto LABEL_387;
              }
              if (v166 >= v146 - (int)v2) {
                size_t v167 = v146 - (int)v2;
              }
              else {
                size_t v167 = v166;
              }
              int v168 = memcmp(&__s1, v164, v167);
              sub_2607DCF28(v298, v302);
              if (v168) {
                goto LABEL_189;
              }
            }
            else
            {
              unint64_t v236 = v302 & 0x3FFFFFFFFFFFFFFFLL;
              unint64_t v237 = v302;
              uint64_t v238 = *(void *)(v298 + 16);
              uint64_t v239 = *(void *)(v298 + 24);
              sub_2607DCED0(v298, v302);
              swift_retain();
              swift_retain();
              uint64_t v240 = v238;
              uint64_t v241 = v285;
              LOBYTE(v239) = sub_2607F4A9C(v240, v239, v236, &__s1);
              uint64_t v285 = v241;
              swift_release();
              swift_release();
              sub_2607DCF28(v2, v237);
              if ((v239 & 1) == 0) {
                goto LABEL_189;
              }
            }
            goto LABEL_190;
          default:
            *(void *)&long long __s1 = v296;
            DWORD2(__s1) = v305;
            WORD6(__s1) = WORD2(v305);
            if (!v142)
            {
LABEL_234:
              uint64_t __s2 = v298;
              int v312 = v302;
              __int16 v313 = WORD2(v302);
              if (memcmp(&__s1, &__s2, BYTE6(v302))) {
                goto LABEL_189;
              }
              goto LABEL_190;
            }
            if (v142 == 1)
            {
              if (v146 < (int)v298) {
                goto LABEL_359;
              }
              unint64_t v307 = (unint64_t)&__s1 + BYTE6(v305);
              sub_2607DCED0(v298, v302);
              sub_2607DCED0(v2, v66);
              swift_retain();
              uint64_t v147 = v285;
              char v148 = sub_2607F4A9C((int)v2, v2 >> 32, v66 & 0x3FFFFFFFFFFFFFFFLL, &__s1);
              uint64_t v285 = v147;
              uint64_t v149 = v2;
              unint64_t v150 = v66;
              goto LABEL_188;
            }
            unint64_t v47 = v298;
            uint64_t v242 = *(void *)(v298 + 24);
            unint64_t v307 = *(void *)(v298 + 16);
            sub_2607DCED0(v298, v302);
            sub_2607DCED0(v47, v66);
            swift_retain();
            swift_retain();
            uint64_t v243 = v285;
            char v244 = sub_2607F4A9C(v307, v242, v66 & 0x3FFFFFFFFFFFFFFFLL, &__s1);
            uint64_t v285 = v243;
            if (v243) {
              goto LABEL_401;
            }
            char v245 = v244;
            swift_release();
            swift_release();
            sub_2607DCF28(v47, v66);
            sub_2607DCF28(v47, v66);
            if (v245) {
              goto LABEL_190;
            }
            goto LABEL_189;
        }
        break;
      case 2uLL:
        uint64_t v129 = *(void *)(v297 + 16);
        uint64_t v130 = *(void *)(v297 + 24);
        sub_2607DCED0(v38, v82);
        sub_2607DCED0(v38, v82);
        sub_2607DCED0(v38, v82);
        swift_retain();
        swift_retain();
        uint64_t v131 = v129;
        uint64_t v132 = v285;
        char v133 = sub_2607F49D0(v131, v130, v2 & 0x3FFFFFFFFFFFFFFFLL, v38, v82);
        uint64_t v285 = v132;
        if (v132)
        {
          sub_2607DCF28(v38, v82);
          uint64_t v269 = v38;
          unint64_t v273 = v82;
          goto LABEL_404;
        }
        char v134 = v133;
        swift_release();
        swift_release();
        sub_2607DCF28(v38, v82);
        sub_2607DCF28(v38, v82);
        if ((v134 & 1) == 0) {
          goto LABEL_133;
        }
        goto LABEL_134;
      case 3uLL:
        *(void *)((char *)&__s1 + 6) = 0;
        *(void *)&long long __s1 = 0;
        if (!v95) {
          goto LABEL_232;
        }
        if (v95 == 1)
        {
          if (v99 < (int)v38) {
            goto LABEL_356;
          }
          sub_2607DCED0(v38, v82);
          unint64_t v100 = (char *)sub_26087AED0();
          if (v100)
          {
            uint64_t v151 = sub_26087AEF0();
            if (__OFSUB__((int)v38, v151)) {
              goto LABEL_374;
            }
            v100 += (int)v38 - v151;
          }
          uint64_t v102 = sub_26087AEE0();
          if (!v100) {
            goto LABEL_384;
          }
          goto LABEL_161;
        }
        uint64_t v226 = *(void *)(v38 + 16);
        uint64_t v225 = *(void *)(v38 + 24);
        sub_2607DCED0(v38, v82);
        swift_retain();
        swift_retain();
        uint64_t v227 = (char *)sub_26087AED0();
        if (v227)
        {
          uint64_t v228 = sub_26087AEF0();
          if (__OFSUB__(v226, v228)) {
            goto LABEL_371;
          }
          v227 += v226 - v228;
        }
        BOOL v20 = __OFSUB__(v225, v226);
        int64_t v229 = v225 - v226;
        if (v20) {
          goto LABEL_357;
        }
        uint64_t v230 = sub_26087AEE0();
        if (!v227) {
          goto LABEL_385;
        }
        goto LABEL_261;
      default:
        *(void *)&long long __s1 = v297;
        WORD4(__s1) = v2;
        BYTE10(__s1) = BYTE2(v2);
        BYTE11(__s1) = BYTE3(v2);
        BYTE12(__s1) = BYTE4(v2);
        BYTE13(__s1) = BYTE5(v2);
        if (v95)
        {
          if (v95 == 1)
          {
            if (v99 < (int)v38) {
              goto LABEL_355;
            }
            sub_2607DCED0(v38, v82);
            unint64_t v100 = (char *)sub_26087AED0();
            if (v100)
            {
              uint64_t v101 = sub_26087AEF0();
              if (__OFSUB__((int)v38, v101)) {
                goto LABEL_373;
              }
              v100 += (int)v38 - v101;
            }
            uint64_t v102 = sub_26087AEE0();
            if (!v100) {
              goto LABEL_383;
            }
LABEL_161:
            if (v102 >= v99 - (int)v38) {
              size_t v152 = v99 - (int)v38;
            }
            else {
              size_t v152 = v102;
            }
            int v153 = memcmp(&__s1, v100, v152);
            sub_2607DCF28(v38, v82);
            if (v153) {
              goto LABEL_133;
            }
          }
          else
          {
            uint64_t v232 = *(void *)(v38 + 16);
            uint64_t v231 = *(void *)(v38 + 24);
            sub_2607DCED0(v38, v82);
            swift_retain();
            swift_retain();
            uint64_t v227 = (char *)sub_26087AED0();
            if (v227)
            {
              uint64_t v233 = sub_26087AEF0();
              if (__OFSUB__(v232, v233)) {
                goto LABEL_372;
              }
              v227 += v232 - v233;
            }
            BOOL v20 = __OFSUB__(v231, v232);
            int64_t v229 = v231 - v232;
            if (v20) {
              goto LABEL_358;
            }
            uint64_t v230 = sub_26087AEE0();
            if (!v227) {
              goto LABEL_386;
            }
LABEL_261:
            if (v230 >= v229) {
              size_t v234 = v229;
            }
            else {
              size_t v234 = v230;
            }
            int v235 = memcmp(&__s1, v227, v234);
            swift_release();
            swift_release();
            sub_2607DCF28(v38, v82);
            if (v235) {
              goto LABEL_133;
            }
          }
        }
        else
        {
LABEL_232:
          uint64_t __s2 = v38;
          LOWORD(v312) = v82;
          BYTE2(v312) = BYTE2(v82);
          HIBYTE(v312) = BYTE3(v82);
          LOBYTE(v313) = BYTE4(v82);
          HIBYTE(v313) = BYTE5(v82);
          if (memcmp(&__s1, &__s2, BYTE6(v82))) {
            goto LABEL_133;
          }
        }
        goto LABEL_134;
    }
LABEL_195:
    unint64_t v181 = v295 >> 62;
    switch(v295 >> 62)
    {
      case 1uLL:
        LODWORD(v182) = HIDWORD(v308) - v308;
        if (__OFSUB__(HIDWORD(v308), v308)) {
          goto LABEL_340;
        }
        uint64_t v182 = (int)v182;
LABEL_204:
        if (v175 == v182)
        {
          if (v175 >= 1)
          {
            uint64_t v185 = (int)v308;
            uint64_t v186 = v308 >> 32;
            switch(v291 >> 62)
            {
              case 1uLL:
                if (v290 >> 32 < (int)v290) {
                  goto LABEL_346;
                }
                unint64_t v66 = v291 & 0x3FFFFFFFFFFFFFFFLL;
                unint64_t v47 = v308;
                sub_2607DCED0(v308, v295);
                sub_2607DCED0(v47, v2);
                sub_2607DCED0(v47, v2);
                sub_2607DCED0(v176, v174);
                uint64_t v204 = v285;
                char v205 = sub_2607F49D0((int)v176, v176 >> 32, v174 & 0x3FFFFFFFFFFFFFFFLL, v47, v2);
                uint64_t v285 = v204;
                if (v204)
                {
                  uint64_t v276 = v308;
                  sub_2607DCF28(v308, v2);
                  sub_2607DCF28(v276, v2);
                  uint64_t v272 = v176;
                  unint64_t v274 = v174;
                  goto LABEL_400;
                }
                char v206 = v205;
                sub_2607DCF28(v176, v174);
                uint64_t v207 = v308;
                sub_2607DCF28(v308, v2);
                sub_2607DCF28(v207, v2);
                uint64_t v2 = (uint64_t)v304;
                unint64_t v177 = v310;
                if (v206) {
                  goto LABEL_213;
                }
                goto LABEL_212;
              case 2uLL:
                uint64_t v193 = *(void *)(v290 + 16);
                uint64_t v194 = *(void *)(v290 + 24);
                uint64_t v195 = v308;
                sub_2607DCED0(v308, v295);
                sub_2607DCED0(v195, v2);
                sub_2607DCED0(v195, v2);
                swift_retain();
                swift_retain();
                uint64_t v196 = v193;
                uint64_t v197 = v285;
                char v198 = sub_2607F49D0(v196, v194, v174 & 0x3FFFFFFFFFFFFFFFLL, v195, v2);
                uint64_t v285 = v197;
                if (v197)
                {
                  uint64_t v275 = v308;
                  sub_2607DCF28(v308, v2);
                  sub_2607DCF28(v275, v2);
                  swift_release();
                  goto LABEL_405;
                }
                char v199 = v198;
                swift_release();
                swift_release();
                uint64_t v200 = v308;
                sub_2607DCF28(v308, v2);
                sub_2607DCF28(v200, v2);
                uint64_t v2 = (uint64_t)v304;
                unint64_t v177 = v310;
LABEL_273:
                unint64_t v174 = v291;
                if (v199) {
                  goto LABEL_213;
                }
                goto LABEL_212;
              case 3uLL:
                *(void *)((char *)&__s1 + 6) = 0;
                *(void *)&long long __s1 = 0;
                if (!v181) {
                  goto LABEL_236;
                }
                if (v181 != 1) {
                  goto LABEL_271;
                }
                if (v186 < (int)v308) {
                  goto LABEL_362;
                }
                uint64_t v187 = v308;
                sub_2607DCED0(v308, v295);
                sub_2607DCED0(v187, v2);
                swift_retain();
                uint64_t v188 = v185;
                uint64_t v189 = v186;
                uint64_t v190 = v2 & 0x3FFFFFFFFFFFFFFFLL;
                goto LABEL_222;
              default:
                *(void *)&long long __s1 = v290;
                DWORD2(__s1) = v291;
                WORD6(__s1) = WORD2(v291);
                if (v181)
                {
                  if (v181 != 1)
                  {
LABEL_271:
                    uint64_t v246 = v308;
                    uint64_t v247 = *(void *)(v308 + 16);
                    uint64_t v248 = *(void *)(v308 + 24);
                    sub_2607DCED0(v308, v295);
                    sub_2607DCED0(v246, v2);
                    swift_retain();
                    swift_retain();
                    uint64_t v249 = v247;
                    uint64_t v250 = v285;
                    char v251 = sub_2607F4A9C(v249, v248, v2 & 0x3FFFFFFFFFFFFFFFLL, &__s1);
                    uint64_t v285 = v250;
                    if (v250)
                    {
                      uint64_t v277 = v308;
                      sub_2607DCF28(v308, v2);
                      uint64_t v269 = v277;
                      goto LABEL_403;
                    }
                    char v199 = v251;
                    swift_release();
                    uint64_t v252 = v308;
                    swift_release();
                    sub_2607DCF28(v252, v2);
                    sub_2607DCF28(v252, v2);
                    uint64_t v2 = (uint64_t)v304;
                    uint64_t v176 = v290;
                    goto LABEL_273;
                  }
                  if (v186 < (int)v308) {
                    goto LABEL_361;
                  }
                  uint64_t v187 = v308;
                  uint64_t v289 = (char *)&__s1 + BYTE6(v291);
                  sub_2607DCED0(v308, v295);
                  sub_2607DCED0(v187, v2);
                  swift_retain();
                  uint64_t v188 = v185;
                  uint64_t v189 = v186;
                  uint64_t v190 = v2 & 0x3FFFFFFFFFFFFFFFLL;
LABEL_222:
                  uint64_t v201 = v285;
                  char v202 = sub_2607F4A9C(v188, v189, v190, &__s1);
                  uint64_t v285 = v201;
                  sub_2607DCF28(v187, v2);
                  sub_2607DCF28(v187, v2);
                  uint64_t v203 = v187;
                  unint64_t v177 = v310;
                  sub_2607DCF28(v203, v2);
                  uint64_t v2 = (uint64_t)v304;
                  if ((v202 & 1) == 0) {
                    goto LABEL_212;
                  }
                }
                else
                {
LABEL_236:
                  uint64_t __s2 = v308;
                  int v312 = v295;
                  __int16 v313 = WORD2(v295);
                  int v210 = memcmp(&__s1, &__s2, BYTE6(v295));
                  uint64_t v2 = (uint64_t)v304;
                  if (v210) {
                    goto LABEL_212;
                  }
                }
                goto LABEL_213;
            }
          }
          uint64_t v2 = (uint64_t)v304;
        }
        else
        {
          uint64_t v2 = (uint64_t)v304;
LABEL_212:
          uint64_t v191 = v309[4];
          uint64_t v192 = v309[5];
          __swift_project_boxed_opaque_existential_1(v293, v191);
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v192 + 40))(v176, v174, v2, v191, v192);
        }
LABEL_213:
        sub_2607F6C40(v2);
        sub_2607DCF28(v292, v299);
        sub_2607DCF28(v300, v301);
        sub_2607DCF28(v178, v82);
        sub_2607DCF28(v298, v173);
        sub_2607DCF28(v308, v295);
        sub_2607DCF28(v286, v294);
        sub_2607DCF28(v303, v177);
        sub_2607DCF28(v297, v307);
        sub_2607DCF28(v296, v305);
        sub_2607DCF28(v176, v174);
        a1 = v281;
        uint64_t v8 = (char *)v2;
        int64_t v14 = v288;
        unint64_t v18 = v287;
        if (v287) {
          continue;
        }
LABEL_5:
        BOOL v20 = __OFADD__(v14, 1);
        int64_t v21 = v14 + 1;
        if (v20)
        {
          __break(1u);
LABEL_321:
          __break(1u);
LABEL_322:
          __break(1u);
LABEL_323:
          __break(1u);
LABEL_324:
          __break(1u);
LABEL_325:
          __break(1u);
LABEL_326:
          __break(1u);
LABEL_327:
          __break(1u);
LABEL_328:
          __break(1u);
LABEL_329:
          __break(1u);
LABEL_330:
          __break(1u);
LABEL_331:
          __break(1u);
LABEL_332:
          __break(1u);
LABEL_333:
          __break(1u);
LABEL_334:
          __break(1u);
LABEL_335:
          __break(1u);
LABEL_336:
          __break(1u);
LABEL_337:
          __break(1u);
LABEL_338:
          __break(1u);
LABEL_339:
          __break(1u);
LABEL_340:
          __break(1u);
          goto LABEL_341;
        }
        if (v21 >= v280) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v279 + 8 * v21);
        if (v22) {
          goto LABEL_15;
        }
        int64_t v23 = v21 + 1;
        if (v21 + 1 >= v280) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v279 + 8 * v23);
        if (v22) {
          goto LABEL_14;
        }
        int64_t v23 = v21 + 2;
        if (v21 + 2 >= v280) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v279 + 8 * v23);
        if (v22) {
          goto LABEL_14;
        }
        int64_t v23 = v21 + 3;
        if (v21 + 3 < v280)
        {
          unint64_t v22 = *(void *)(v279 + 8 * v23);
          if (!v22)
          {
            while (1)
            {
              int64_t v21 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v21 >= v280) {
                return swift_release();
              }
              unint64_t v22 = *(void *)(v279 + 8 * v21);
              ++v23;
              if (v22) {
                goto LABEL_15;
              }
            }
LABEL_341:
            __break(1u);
LABEL_342:
            __break(1u);
LABEL_343:
            __break(1u);
LABEL_344:
            __break(1u);
LABEL_345:
            __break(1u);
LABEL_346:
            __break(1u);
LABEL_347:
            __break(1u);
LABEL_348:
            __break(1u);
LABEL_349:
            __break(1u);
LABEL_350:
            __break(1u);
LABEL_351:
            __break(1u);
LABEL_352:
            __break(1u);
LABEL_353:
            __break(1u);
LABEL_354:
            __break(1u);
LABEL_355:
            __break(1u);
LABEL_356:
            __break(1u);
LABEL_357:
            __break(1u);
LABEL_358:
            __break(1u);
LABEL_359:
            __break(1u);
LABEL_360:
            __break(1u);
LABEL_361:
            __break(1u);
LABEL_362:
            __break(1u);
LABEL_363:
            __break(1u);
LABEL_364:
            __break(1u);
LABEL_365:
            __break(1u);
LABEL_366:
            __break(1u);
LABEL_367:
            __break(1u);
LABEL_368:
            __break(1u);
LABEL_369:
            __break(1u);
LABEL_370:
            __break(1u);
LABEL_371:
            __break(1u);
LABEL_372:
            __break(1u);
LABEL_373:
            __break(1u);
LABEL_374:
            __break(1u);
LABEL_375:
            __break(1u);
          }
LABEL_14:
          int64_t v21 = v23;
LABEL_15:
          uint64_t v287 = (v22 - 1) & v22;
          int64_t v288 = v21;
          unint64_t v19 = __clz(__rbit64(v22)) + (v21 << 6);
          goto LABEL_16;
        }
        return swift_release();
      case 2uLL:
        uint64_t v184 = *(void *)(v308 + 16);
        uint64_t v183 = *(void *)(v308 + 24);
        BOOL v20 = __OFSUB__(v183, v184);
        uint64_t v182 = v183 - v184;
        if (!v20) {
          goto LABEL_204;
        }
        goto LABEL_339;
      case 3uLL:
        uint64_t v2 = (uint64_t)v304;
        if (!v175) {
          goto LABEL_213;
        }
        goto LABEL_212;
      default:
        uint64_t v182 = BYTE6(v295);
        goto LABEL_204;
    }
  }
}

uint64_t EventReportAccumulator.resetValues(matching:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v63 = type metadata accessor for EventReportSenderID();
  uint64_t v6 = *(void *)(v63 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v63);
  uint64_t v85 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v62 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v62 - v12;
  uint64_t v14 = *v3;
  uint64_t v15 = *(void *)(*v3 + 64);
  uint64_t v75 = *v3 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v76 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v19 = 0;
  unint64_t v74 = v3;
  uint64_t v73 = a2;
  uint64_t v72 = a1;
  uint64_t v71 = v6;
  uint64_t v70 = v11;
  uint64_t v69 = v14;
  uint64_t v68 = v13;
  while (v18)
  {
    unint64_t v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v21 = v20 | (v19 << 6);
LABEL_29:
    uint64_t v32 = *(void *)(v6 + 72);
    sub_2607F6B78(*(void *)(v14 + 48) + v32 * v21, (uint64_t)v13);
    sub_2607F6BDC((uint64_t)v13, (uint64_t)v11);
    if (a1(v11))
    {
      int64_t v77 = v19;
      uint64_t v33 = v85;
      sub_2607F6B78((uint64_t)v11, v85);
      sub_2607EC404(v87);
      uint64_t v34 = v87[0];
      uint64_t v35 = v87[1];
      uint64_t v36 = v87[2];
      uint64_t v78 = v87[3];
      uint64_t v79 = v87[4];
      uint64_t v80 = v87[5];
      uint64_t v81 = v87[6];
      uint64_t v82 = v87[7];
      uint64_t v83 = v87[8];
      uint64_t v84 = v87[9];
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v86 = (void *)*v3;
      uint64_t v37 = v86;
      *uint64_t v3 = 0x8000000000000000;
      unint64_t v38 = sub_2607F3DA0(v33);
      if (__OFADD__(v37[2], (v39 & 1) == 0))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      unint64_t v40 = v38;
      char v41 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4740);
      if (sub_26087B950())
      {
        unint64_t v42 = sub_2607F3DA0(v85);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_45;
        }
        unint64_t v40 = v42;
      }
      char v44 = v86;
      if (v41)
      {
        uint64_t v45 = (uint64_t *)(v86[7] + 80 * v40);
        uint64_t v46 = *v45;
        unint64_t v47 = v45[1];
        uint64_t v48 = v45[2];
        unint64_t v49 = v45[3];
        uint64_t v65 = v45[6];
        unint64_t v64 = v45[7];
        uint64_t v67 = v45[8];
        unint64_t v66 = v45[9];
        sub_2607DCF28(v46, v47);
        sub_2607DCF28(v48, v49);
        OUTLINED_FUNCTION_104();
        sub_2607DCF28(v65, v64);
        sub_2607DCF28(v67, v66);
        *uint64_t v45 = v34;
        v45[1] = v35;
        uint64_t v50 = v78;
        v45[2] = v36;
        v45[3] = v50;
        uint64_t v51 = v80;
        v45[4] = v79;
        v45[5] = v51;
        uint64_t v52 = v82;
        v45[6] = v81;
        v45[7] = v52;
        uint64_t v53 = v84;
        v45[8] = v83;
        v45[9] = v53;
      }
      else
      {
        v86[(v40 >> 6) + 8] |= 1 << v40;
        sub_2607F6B78(v85, v44[6] + v40 * v32);
        uint64_t v54 = (uint64_t *)(v44[7] + 80 * v40);
        *uint64_t v54 = v34;
        v54[1] = v35;
        uint64_t v55 = v78;
        v54[2] = v36;
        v54[3] = v55;
        uint64_t v56 = v80;
        v54[4] = v79;
        v54[5] = v56;
        uint64_t v57 = v82;
        v54[6] = v81;
        v54[7] = v57;
        uint64_t v58 = v84;
        v54[8] = v83;
        v54[9] = v58;
        uint64_t v59 = v44[2];
        BOOL v25 = __OFADD__(v59, 1);
        uint64_t v60 = v59 + 1;
        if (v25) {
          goto LABEL_43;
        }
        v44[2] = v60;
      }
      uint64_t v3 = v74;
      *unint64_t v74 = (uint64_t)v44;
      swift_bridgeObjectRelease();
      sub_2607F6C40(v85);
      uint64_t v11 = v70;
      sub_2607F6C40((uint64_t)v70);
      a1 = v72;
      uint64_t v6 = v71;
      uint64_t v14 = v69;
      uint64_t v13 = v68;
      int64_t v19 = v77;
    }
    else
    {
      sub_2607F6C40((uint64_t)v11);
    }
  }
  int64_t v22 = v19 + 1;
  if (__OFADD__(v19, 1)) {
    goto LABEL_42;
  }
  if (v22 >= v76)
  {
LABEL_40:
    swift_release();
    sub_2607EE12C(v14);
    return swift_bridgeObjectRelease();
  }
  unint64_t v23 = *(void *)(v75 + 8 * v22);
  ++v19;
  if (v23) {
    goto LABEL_28;
  }
  int64_t v19 = v22 + 1;
  OUTLINED_FUNCTION_70();
  if (v24 == v25) {
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_23_1();
  if (v23) {
    goto LABEL_28;
  }
  int64_t v19 = v26 + 2;
  OUTLINED_FUNCTION_70();
  if (v24 == v25) {
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_23_1();
  if (v23) {
    goto LABEL_28;
  }
  int64_t v19 = v27 + 3;
  OUTLINED_FUNCTION_70();
  if (v24 == v25) {
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_23_1();
  if (v23) {
    goto LABEL_28;
  }
  int64_t v19 = v28 + 4;
  OUTLINED_FUNCTION_70();
  if (v24 == v25) {
    goto LABEL_40;
  }
  OUTLINED_FUNCTION_23_1();
  if (v23)
  {
LABEL_28:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_29;
  }
  int64_t v30 = v29 + 5;
  if (v30 >= v76) {
    goto LABEL_40;
  }
  unint64_t v23 = *(void *)(v75 + 8 * v30);
  if (v23)
  {
    int64_t v19 = v30;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v19 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    OUTLINED_FUNCTION_70();
    if (v24 == v25) {
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_23_1();
    int64_t v30 = v31 + 1;
    if (v23) {
      goto LABEL_28;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_26087BC30();
  __break(1u);
  return result;
}

Swift::Void __swiftcall EventReportAccumulator.resetAllValues()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2607F6034(v2);
  swift_bridgeObjectRelease();
  *uint64_t v0 = v3;
  sub_2607EE12C(v1);
  swift_bridgeObjectRelease();
}

uint64_t EventReportAccumulator.removeValues(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_2607F4B3C(a1, &v5);
  sub_2607F6C9C(v5, *((unint64_t *)&v5 + 1), v6, v7, v8, v9, v10, v11, v12, v13);
  sub_2607EE12C(v3);
  return swift_bridgeObjectRelease();
}

uint64_t EventReportAccumulator.removeValues(matching:)(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_2607F648C(v6, a1, a2);
  swift_bridgeObjectRelease();
  *uint64_t v2 = v7;
  sub_2607EE12C(v5);
  return swift_bridgeObjectRelease();
}

uint64_t EventReportAccumulator.flush(to:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v380 = a1;
  uint64_t v410 = *MEMORY[0x263EF8340];
  uint64_t v3 = type metadata accessor for EventReportSenderID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v7 = (char *)&v307 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v307 - v8;
  sub_2607EC404(&__s1);
  uint64_t v10 = *v1;
  uint64_t v11 = 1 << *(unsigned char *)(*v1 + 32);
  int64_t v12 = (unint64_t)(v11 + 63) >> 6;
  unint64_t v369 = v401 >> 62;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v327 = HIDWORD(__s1);
  size_t v344 = HIDWORD(__s1) - (int)__s1;
  uint64_t v14 = v402;
  size_t v368 = BYTE6(v401);
  int64_t v331 = (int)__s1;
  BOOL v15 = __OFSUB__(HIDWORD(__s1), __s1);
  BOOL v343 = v15;
  unint64_t v319 = HIDWORD(v402);
  size_t v342 = HIDWORD(v402) - (int)v402;
  unint64_t v16 = v408;
  BOOL v17 = __OFSUB__(HIDWORD(v402), v402);
  BOOL v341 = v17;
  unint64_t v316 = HIDWORD(v404);
  size_t v339 = HIDWORD(v404) - (int)v404;
  BOOL v18 = __OFSUB__(HIDWORD(v404), v404);
  BOOL v338 = v18;
  unint64_t v313 = HIDWORD(v406);
  uint64_t v337 = HIDWORD(v406) - (int)v406;
  uint64_t v19 = *(void *)(v10 + 64);
  uint64_t v372 = v10 + 64;
  unint64_t v20 = v13 & v19;
  BOOL v21 = __OFSUB__(HIDWORD(v406), v406);
  BOOL v336 = v21;
  unint64_t v310 = HIDWORD(v408);
  size_t v335 = HIDWORD(v408) - (int)v408;
  unint64_t v348 = v401;
  uint64_t v333 = v401 & 0x3FFFFFFFFFFFFFFFLL;
  unint64_t v354 = __s1;
  uint64_t v326 = __s1 >> 32;
  uint64_t v317 = (__s1 >> 32) - (int)__s1;
  unint64_t v362 = v403 >> 62;
  size_t v366 = BYTE6(v403);
  unint64_t v349 = v403;
  uint64_t v332 = v403 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v320 = (int)v402;
  unint64_t v361 = v405 >> 62;
  size_t v365 = BYTE6(v405);
  unint64_t v347 = v405;
  uint64_t v325 = v405 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v315 = (int)v404;
  unint64_t v352 = v404;
  uint64_t v314 = v404 >> 32;
  unint64_t v360 = v407 >> 62;
  uint64_t v364 = BYTE6(v407);
  unint64_t v346 = v407;
  uint64_t v324 = v407 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v312 = (int)v406;
  uint64_t v351 = v406;
  uint64_t v311 = v406 >> 32;
  unint64_t v370 = v409 >> 62;
  BOOL v22 = __OFSUB__(HIDWORD(v408), v408);
  BOOL v334 = v22;
  size_t v363 = BYTE6(v409);
  unint64_t v345 = v409;
  uint64_t v330 = v409 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v309 = (int)v408;
  uint64_t v308 = v408 >> 32;
  uint64_t v318 = v402 >> 32;
  uint64_t v307 = (v402 >> 32) - (int)v402;
  swift_bridgeObjectRetain_n();
  int64_t v23 = 0;
  uint64_t v371 = 0;
  uint64_t v359 = v2;
  uint64_t v358 = v4;
  unint64_t v357 = v9;
  uint64_t v367 = v14;
  uint64_t v24 = (uint64_t)v7;
  unint64_t v350 = v16;
  uint64_t v356 = v10;
  int64_t v355 = v12;
  uint64_t v379 = v7;
  if (!v20) {
    goto LABEL_21;
  }
LABEL_20:
  unint64_t v25 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (unint64_t i = v25 | (v23 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v23 << 6))
  {
    sub_2607F6B78(*(void *)(v10 + 48) + *(void *)(v4 + 72) * i, (uint64_t)v9);
    sub_2607F6BDC((uint64_t)v9, v24);
    uint64_t v30 = *v2;
    if (*(void *)(*v2 + 16))
    {
      unint64_t v31 = sub_2607F3DA0(v24);
      if (v32)
      {
        int64_t v374 = v23;
        uint64_t v33 = (uint64_t *)(*(void *)(v30 + 56) + 80 * v31);
        uint64_t v35 = *v33;
        unint64_t v34 = v33[1];
        uint64_t v36 = v33[2];
        unint64_t v375 = v33[3];
        uint64_t v37 = v33[4];
        unint64_t v38 = v33[5];
        uint64_t v39 = v33[6];
        unint64_t v40 = v33[7];
        uint64_t v41 = v33[8];
        unint64_t v42 = v33[9];
        unint64_t v384 = v34;
        uint64_t v385 = v41;
        unint64_t v43 = v34 >> 62;
        uint64_t v44 = 0;
        switch(v34 >> 62)
        {
          case 1uLL:
            LODWORD(v44) = HIDWORD(v35) - v35;
            if (__OFSUB__(HIDWORD(v35), v35)) {
              goto LABEL_311;
            }
            uint64_t v44 = (int)v44;
            break;
          case 2uLL:
            uint64_t v46 = *(void *)(v35 + 16);
            uint64_t v45 = *(void *)(v35 + 24);
            BOOL v27 = __OFSUB__(v45, v46);
            uint64_t v44 = v45 - v46;
            if (!v27) {
              break;
            }
            goto LABEL_312;
          case 3uLL:
            break;
          default:
            uint64_t v44 = BYTE6(v384);
            break;
        }
        size_t v47 = v368;
        uint64_t v376 = v39;
        unint64_t v381 = v37;
        unint64_t v378 = v42;
        unint64_t v382 = v40;
        unint64_t v383 = v38;
        unint64_t v373 = v20;
        uint64_t v377 = v35;
        switch((int)v369)
        {
          case 1:
            size_t v47 = v344;
            if (v343) {
              goto LABEL_313;
            }
            goto LABEL_47;
          case 2:
            uint64_t v49 = *(void *)(v354 + 16);
            uint64_t v48 = *(void *)(v354 + 24);
            BOOL v27 = __OFSUB__(v48, v49);
            size_t v47 = v48 - v49;
            if (!v27) {
              goto LABEL_47;
            }
            goto LABEL_314;
          case 3:
            if (v44) {
              goto LABEL_57;
            }
            goto LABEL_59;
          default:
LABEL_47:
            if (v44 == v47)
            {
              if (v44 < 1)
              {
LABEL_59:
                unint64_t v70 = v38;
                int64_t v12 = v384;
                sub_2607DCED0(v35, v384);
                unint64_t v71 = v375;
                sub_2607DCED0(v36, v375);
                sub_2607DCED0(v37, v70);
                OUTLINED_FUNCTION_4_5();
                uint64_t v50 = v385;
                OUTLINED_FUNCTION_46();
                sub_2607DCED0(v35, v12);
                sub_2607DCED0(v36, v71);
                unint64_t v72 = v70;
                unint64_t v20 = v71;
                sub_2607DCED0(v37, v72);
                OUTLINED_FUNCTION_4_5();
                OUTLINED_FUNCTION_46();
                OUTLINED_FUNCTION_7_5();
              }
              else
              {
                uint64_t v353 = v36;
                uint64_t v50 = v348;
                unint64_t v51 = v348 >> 40;
                unint64_t v52 = HIDWORD(v348);
                unint64_t v53 = v348 >> 24;
                unint64_t v54 = v348 >> 16;
                unint64_t v55 = v348 >> 8;
                uint64_t v56 = HIBYTE(v354);
                uint64_t v57 = HIWORD(v354);
                uint64_t v58 = v354 >> 40;
                uint64_t v59 = v354 >> 24;
                uint64_t v60 = v354 >> 16;
                uint64_t v61 = v354 >> 8;
                switch((int)v43)
                {
                  case 1:
                    if (v35 >> 32 < (int)v35) {
                      goto LABEL_331;
                    }
                    unint64_t v329 = v348 >> 40;
                    unint64_t v322 = v35 >> 32;
                    OUTLINED_FUNCTION_3_6(v55, v56, v57, v58, v59, v60, v61);
                    unint64_t v42 = v384;
                    uint64_t v323 = (int)v35;
                    int64_t v12 = v38;
                    sub_2607DCED0(v164, v50);
                    sub_2607DCED0(v35, v42);
                    sub_2607DCED0(v353, v375);
                    sub_2607DCED0(v37, v38);
                    uint64_t v165 = v376;
                    sub_2607DCED0(v376, v382);
                    uint64_t v36 = v385;
                    OUTLINED_FUNCTION_13_4(v385);
                    OUTLINED_FUNCTION_90();
                    sub_2607DCED0(v35, v42);
                    OUTLINED_FUNCTION_71();
                    sub_2607DCED0(v381, v12);
                    sub_2607DCED0(v165, v382);
                    OUTLINED_FUNCTION_13_4(v36);
                    OUTLINED_FUNCTION_90();
                    sub_2607DCED0(v35, v42);
                    uint64_t v166 = sub_26087AED0();
                    if (v166)
                    {
                      uint64_t v50 = v166;
                      uint64_t v167 = sub_26087AEF0();
                      if (__OFSUB__(v323, v167)) {
                        goto LABEL_340;
                      }
                      int v168 = (const void *)(v50 + v323 - v167);
                    }
                    else
                    {
                      int v168 = 0;
                    }
                    sub_26087AEE0();
                    unint64_t v20 = v375;
                    if (v369)
                    {
                      uint64_t v36 = v354;
                      if (v369 == 1)
                      {
                        unint64_t v286 = v331;
                        uint64_t v50 = v326;
                        if (v326 < v331) {
                          goto LABEL_350;
                        }
                        OUTLINED_FUNCTION_50();
                        LODWORD(v37) = OUTLINED_FUNCTION_6_5(v286, v50, v42 & 0x3FFFFFFFFFFFFFFFLL, v168);
                        OUTLINED_FUNCTION_51();
                        uint64_t v285 = v36;
                      }
                      else
                      {
                        uint64_t v50 = *(void *)(v354 + 16);
                        uint64_t v37 = *(void *)(v354 + 24);
                        swift_retain();
                        uint64_t v284 = v333;
                        swift_retain();
                        LODWORD(v37) = OUTLINED_FUNCTION_6_5(v50, v37, v284, v168);
                        uint64_t v371 = v50;
                        swift_release();
                        swift_release();
                        uint64_t v285 = v36;
                        unint64_t v286 = v348;
                      }
                      sub_2607DCF28(v285, v286);
                      sub_2607DCF28(v377, v384);
                      OUTLINED_FUNCTION_32();
                    }
                    else
                    {
                      OUTLINED_FUNCTION_0_7();
                      if (!v168) {
                        goto LABEL_367;
                      }
                      int v277 = OUTLINED_FUNCTION_97();
                      OUTLINED_FUNCTION_32();
                      sub_2607DCF28(v377, v384);
                      OUTLINED_FUNCTION_32();
                      LODWORD(v37) = v277 == 0;
                    }
                    OUTLINED_FUNCTION_32();
                    OUTLINED_FUNCTION_55();
                    if (v37) {
                      break;
                    }
                    goto LABEL_58;
                  case 2:
                    OUTLINED_FUNCTION_3_6(v55, v56, v57, v58, v59, v60, v61);
                    unint64_t v329 = v148;
                    unint64_t v42 = v384;
                    unint64_t v322 = v384 & 0x3FFFFFFFFFFFFFFFLL;
                    uint64_t v323 = *(void *)(v35 + 16);
                    uint64_t v321 = *(void *)(v35 + 24);
                    uint64_t v36 = v35;
                    sub_2607DCED0(v149, v50);
                    sub_2607DCED0(v35, v42);
                    unint64_t v150 = v375;
                    sub_2607DCED0(v353, v375);
                    OUTLINED_FUNCTION_108();
                    OUTLINED_FUNCTION_4_5();
                    uint64_t v151 = v385;
                    OUTLINED_FUNCTION_13_4(v385);
                    OUTLINED_FUNCTION_90();
                    sub_2607DCED0(v35, v42);
                    sub_2607DCED0(v353, v150);
                    OUTLINED_FUNCTION_108();
                    sub_2607DCED0(v376, v40);
                    OUTLINED_FUNCTION_13_4(v151);
                    OUTLINED_FUNCTION_90();
                    LODWORD(v37) = v322;
                    swift_retain();
                    swift_retain();
                    uint64_t v152 = sub_26087AED0();
                    if (v152)
                    {
                      uint64_t v50 = v152;
                      uint64_t v153 = sub_26087AEF0();
                      uint64_t v154 = v323;
                      if (__OFSUB__(v323, v153)) {
                        goto LABEL_339;
                      }
                      char v155 = (const void *)(v50 + v323 - v153);
                    }
                    else
                    {
                      char v155 = 0;
                      uint64_t v154 = v323;
                    }
                    uint64_t v245 = v321 - v154;
                    if (__OFSUB__(v321, v154)) {
                      goto LABEL_332;
                    }
                    uint64_t v246 = sub_26087AEE0();
                    if (v246 >= v245) {
                      int v247 = v245;
                    }
                    else {
                      int v247 = v246;
                    }
                    int v248 = v155 + v247;
                    if (v155) {
                      LODWORD(v12) = v248;
                    }
                    else {
                      LODWORD(v12) = 0;
                    }
                    if (v369)
                    {
                      uint64_t v36 = v354;
                      if (v369 == 1)
                      {
                        unint64_t v283 = v331;
                        uint64_t v249 = v326;
                        if (v326 < v331) {
                          goto LABEL_349;
                        }
                        OUTLINED_FUNCTION_68();
                        char v281 = OUTLINED_FUNCTION_6_5(v283, v249, v50, v155);
                        OUTLINED_FUNCTION_51();
                        uint64_t v282 = v36;
                      }
                      else
                      {
                        uint64_t v50 = *(void *)(v354 + 16);
                        swift_retain();
                        uint64_t v278 = v333;
                        swift_retain();
                        uint64_t v279 = OUTLINED_FUNCTION_94();
                        char v281 = OUTLINED_FUNCTION_6_5(v279, v280, v278, v155);
                        uint64_t v371 = v50;
                        swift_release();
                        swift_release();
                        uint64_t v282 = v36;
                        unint64_t v283 = v348;
                      }
                      sub_2607DCF28(v282, v283);
                      swift_release();
                      swift_release();
                    }
                    else
                    {
                      OUTLINED_FUNCTION_0_7();
                      if (!v155) {
                        goto LABEL_366;
                      }
                      uint64_t v50 = OUTLINED_FUNCTION_97();
                      OUTLINED_FUNCTION_32();
                      swift_release();
                      swift_release();
                      char v281 = v50 == 0;
                    }
                    OUTLINED_FUNCTION_32();
                    OUTLINED_FUNCTION_32();
                    OUTLINED_FUNCTION_55();
                    OUTLINED_FUNCTION_52();
                    if (v281) {
                      break;
                    }
                    goto LABEL_58;
                  case 3:
                    OUTLINED_FUNCTION_69();
                    if (!v157) {
                      goto LABEL_236;
                    }
                    if (v157 == 1)
                    {
                      if (v326 < v331) {
                        goto LABEL_343;
                      }
                      uint64_t v158 = v37;
                      uint64_t v159 = v39;
                      uint64_t v160 = v156;
                      sub_2607DCED0(v35, v384);
                      OUTLINED_FUNCTION_16_4();
                      OUTLINED_FUNCTION_46();
                      sub_2607DCED0(v159, v40);
                      unint64_t v42 = v385;
                      OUTLINED_FUNCTION_13_4(v385);
                      uint64_t v161 = v160;
                      unint64_t v162 = v348;
                      sub_2607DCED0(v161, v348);
                      OUTLINED_FUNCTION_106();
                      unint64_t v66 = v12;
                      sub_2607DCED0(v36, v12);
                      sub_2607DCED0(v158, v383);
                      sub_2607DCED0(v159, v40);
                      OUTLINED_FUNCTION_13_4(v42);
                      uint64_t v50 = sub_26087AED0();
                      if (v50)
                      {
                        uint64_t v163 = sub_26087AEF0();
                        unint64_t v42 = v367;
                        LODWORD(v12) = v362;
                        if (__OFSUB__(v331, v163)) {
                          goto LABEL_361;
                        }
                        v50 += v331 - v163;
                      }
                      else
                      {
                        OUTLINED_FUNCTION_7_5();
                      }
                      int64_t v301 = sub_26087AEE0();
                      if (!v50) {
                        goto LABEL_371;
                      }
                      LODWORD(v37) = OUTLINED_FUNCTION_25_0(v301, (uint64_t)v340);
                      uint64_t v299 = v354;
                      unint64_t v300 = v162;
LABEL_307:
                      sub_2607DCF28(v299, v300);
                      unint64_t v20 = v66;
                      if (v37) {
                        goto LABEL_58;
                      }
                    }
                    else
                    {
                      unint64_t v329 = *(void *)(v156 + 16);
                      uint64_t v328 = *(void *)(v156 + 24);
                      uint64_t v263 = OUTLINED_FUNCTION_78();
                      unint64_t v42 = v37;
                      int64_t v12 = v264;
                      sub_2607DCED0(v263, v265);
                      OUTLINED_FUNCTION_58();
                      OUTLINED_FUNCTION_99();
                      OUTLINED_FUNCTION_76();
                      uint64_t v266 = v385;
                      OUTLINED_FUNCTION_13_4(v385);
                      sub_2607DCED0(v12, v348);
                      OUTLINED_FUNCTION_106();
                      unint64_t v259 = v37;
                      sub_2607DCED0(v36, v37);
                      OUTLINED_FUNCTION_99();
                      sub_2607DCED0(v39, v382);
                      OUTLINED_FUNCTION_13_4(v266);
                      swift_retain();
                      OUTLINED_FUNCTION_50();
                      uint64_t v267 = sub_26087AED0();
                      if (v267)
                      {
                        uint64_t v268 = sub_26087AEF0();
                        unint64_t v269 = v329;
                        unint64_t v42 = v367;
                        LODWORD(v12) = v362;
                        if (__OFSUB__(v329, v268)) {
                          goto LABEL_359;
                        }
                        v267 += v329 - v268;
                      }
                      else
                      {
                        OUTLINED_FUNCTION_41_0();
                      }
                      if (__OFSUB__(v328, v269)) {
                        goto LABEL_345;
                      }
                      LODWORD(v37) = v333;
                      int64_t v296 = sub_26087AEE0();
                      if (!v267) {
                        goto LABEL_368;
                      }
LABEL_299:
                      uint64_t v50 = OUTLINED_FUNCTION_80(v296);
                      swift_release();
                      uint64_t v297 = v354;
                      swift_release();
                      sub_2607DCF28(v297, v348);
                      OUTLINED_FUNCTION_57();
                      unint64_t v20 = v259;
                      if (v50) {
                        goto LABEL_58;
                      }
                    }
                    break;
                  default:
                    uint64_t __s1 = v35;
                    LODWORD(v401) = v384;
                    WORD2(v401) = WORD2(v384);
                    if (!v369)
                    {
                      LOBYTE(v156) = v354;
LABEL_236:
                      char __s2 = v156;
                      char v387 = v61;
                      char v388 = v60;
                      char v389 = v59;
                      char v390 = v327;
                      char v391 = v58;
                      char v392 = v57;
                      char v393 = v56;
                      char v394 = v50;
                      char v395 = v55;
                      char v396 = v54;
                      char v397 = v53;
                      char v398 = v52;
                      char v399 = v51;
                      unint64_t v250 = v38;
                      uint64_t v251 = v35;
                      unint64_t v252 = v384;
                      sub_2607DCED0(v35, v384);
                      OUTLINED_FUNCTION_16_4();
                      unint64_t v253 = v250;
                      sub_2607DCED0(v37, v250);
                      OUTLINED_FUNCTION_4_5();
                      uint64_t v50 = v385;
                      OUTLINED_FUNCTION_46();
                      unint64_t v254 = v252;
                      unint64_t v20 = v12;
                      sub_2607DCED0(v251, v254);
                      sub_2607DCED0(v36, v12);
                      sub_2607DCED0(v37, v253);
                      OUTLINED_FUNCTION_4_5();
                      OUTLINED_FUNCTION_46();
                      memcmp(&__s1, &__s2, v368);
                      OUTLINED_FUNCTION_7_5();
                      if (v255) {
                        goto LABEL_58;
                      }
                      break;
                    }
                    int64_t v12 = v354;
                    if (v369 == 1)
                    {
                      if (v326 < v331) {
                        goto LABEL_344;
                      }
                      unint64_t v62 = v38;
                      sub_2607DCED0(v35, v384);
                      OUTLINED_FUNCTION_16_4();
                      uint64_t v63 = v381;
                      sub_2607DCED0(v381, v38);
                      OUTLINED_FUNCTION_4_5();
                      unint64_t v42 = v385;
                      OUTLINED_FUNCTION_13_4(v385);
                      uint64_t v64 = OUTLINED_FUNCTION_45();
                      sub_2607DCED0(v64, v65);
                      OUTLINED_FUNCTION_106();
                      unint64_t v66 = v12;
                      sub_2607DCED0(v36, v12);
                      sub_2607DCED0(v63, v62);
                      OUTLINED_FUNCTION_4_5();
                      OUTLINED_FUNCTION_13_4(v42);
                      uint64_t v50 = sub_26087AED0();
                      if (v50)
                      {
                        uint64_t v67 = sub_26087AEF0();
                        unint64_t v42 = v367;
                        LODWORD(v12) = v362;
                        if (__OFSUB__(v331, v67)) {
                          goto LABEL_360;
                        }
                        v50 += v331 - v67;
                      }
                      else
                      {
                        OUTLINED_FUNCTION_7_5();
                      }
                      int64_t v298 = sub_26087AEE0();
                      if (!v50) {
                        goto LABEL_370;
                      }
                      LODWORD(v37) = OUTLINED_FUNCTION_25_0(v298, (uint64_t)v340);
                      uint64_t v299 = OUTLINED_FUNCTION_45();
                      goto LABEL_307;
                    }
                    unint64_t v329 = *(void *)(v354 + 16);
                    uint64_t v328 = *(void *)(v354 + 24);
                    uint64_t v256 = OUTLINED_FUNCTION_78();
                    sub_2607DCED0(v256, v257);
                    OUTLINED_FUNCTION_58();
                    unint64_t v42 = v381;
                    OUTLINED_FUNCTION_99();
                    OUTLINED_FUNCTION_76();
                    uint64_t v258 = v385;
                    OUTLINED_FUNCTION_13_4(v385);
                    sub_2607DCED0(v12, v348);
                    OUTLINED_FUNCTION_106();
                    unint64_t v259 = v37;
                    sub_2607DCED0(v36, v37);
                    OUTLINED_FUNCTION_99();
                    sub_2607DCED0(v39, v382);
                    OUTLINED_FUNCTION_13_4(v258);
                    swift_retain();
                    OUTLINED_FUNCTION_50();
                    uint64_t v260 = sub_26087AED0();
                    if (v260)
                    {
                      uint64_t v261 = sub_26087AEF0();
                      unint64_t v262 = v329;
                      unint64_t v42 = v367;
                      LODWORD(v12) = v362;
                      if (__OFSUB__(v329, v261)) {
                        goto LABEL_358;
                      }
                      v260 += v329 - v261;
                    }
                    else
                    {
                      OUTLINED_FUNCTION_41_0();
                    }
                    if (__OFSUB__(v328, v262)) {
                      goto LABEL_346;
                    }
                    LODWORD(v37) = v333;
                    int64_t v296 = sub_26087AEE0();
                    if (!v260) {
                      goto LABEL_369;
                    }
                    goto LABEL_299;
                }
              }
            }
            else
            {
LABEL_57:
              int64_t v12 = v384;
              sub_2607DCED0(v35, v384);
              OUTLINED_FUNCTION_52();
              sub_2607DCED0(v68, v20);
              OUTLINED_FUNCTION_108();
              OUTLINED_FUNCTION_4_5();
              uint64_t v50 = v385;
              OUTLINED_FUNCTION_46();
              sub_2607DCED0(v35, v12);
              sub_2607DCED0(v36, v20);
              OUTLINED_FUNCTION_108();
              OUTLINED_FUNCTION_4_5();
              OUTLINED_FUNCTION_46();
              OUTLINED_FUNCTION_7_5();
LABEL_58:
              OUTLINED_FUNCTION_5_5();
              OUTLINED_FUNCTION_22_2();
              v69();
            }
            uint64_t v73 = 0;
            switch(v20 >> 62)
            {
              case 1uLL:
                LODWORD(v73) = HIDWORD(v36) - v36;
                if (__OFSUB__(HIDWORD(v36), v36)) {
                  goto LABEL_315;
                }
                uint64_t v73 = (int)v73;
LABEL_65:
                size_t v76 = v366;
                switch((int)v12)
                {
                  case 1:
                    size_t v76 = v342;
                    if (v341) {
                      goto LABEL_317;
                    }
                    goto LABEL_69;
                  case 2:
                    uint64_t v78 = *(void *)(v42 + 16);
                    uint64_t v77 = *(void *)(v42 + 24);
                    BOOL v27 = __OFSUB__(v77, v78);
                    size_t v76 = v77 - v78;
                    if (!v27) {
                      goto LABEL_69;
                    }
                    goto LABEL_318;
                  case 3:
                    if (v73) {
                      goto LABEL_77;
                    }
                    goto LABEL_78;
                  default:
LABEL_69:
                    if (v73 != v76) {
                      goto LABEL_77;
                    }
                    char v79 = v349;
                    if (v73 < 1) {
                      goto LABEL_78;
                    }
                    break;
                }
                break;
              case 2uLL:
                uint64_t v75 = *(void *)(v36 + 16);
                uint64_t v74 = *(void *)(v36 + 24);
                BOOL v27 = __OFSUB__(v74, v75);
                uint64_t v73 = v74 - v75;
                if (!v27) {
                  goto LABEL_65;
                }
                goto LABEL_316;
              case 3uLL:
                goto LABEL_65;
              default:
                uint64_t v73 = BYTE6(v20);
                goto LABEL_65;
            }
            break;
        }
        unint64_t v80 = v349 >> 40;
        unint64_t v81 = HIBYTE(v42);
        unint64_t v82 = HIWORD(v42);
        unint64_t v83 = v42 >> 40;
        unint64_t v84 = v42 >> 24;
        unint64_t v85 = v42 >> 16;
        unint64_t v86 = v42 >> 8;
        switch(v20 >> 62)
        {
          case 1uLL:
            if (v36 >> 32 < (int)v36) {
              goto LABEL_333;
            }
            sub_2607DCED0(v42, v349);
            OUTLINED_FUNCTION_60();
            OUTLINED_FUNCTION_60();
            sub_2607DCED0(v36, v20);
            if (sub_26087AED0() && __OFSUB__((int)v36, sub_26087AEF0())) {
              goto LABEL_342;
            }
            sub_26087AEE0();
            uint64_t v183 = OUTLINED_FUNCTION_37();
            unint64_t v185 = *(void *)(v184 - 256);
            uint64_t v50 = v371;
            sub_2607F47A8(v183, v186, v185, v187);
            OUTLINED_FUNCTION_100();
            OUTLINED_FUNCTION_8_5();
            if (v50)
            {
              OUTLINED_FUNCTION_100();
              OUTLINED_FUNCTION_100();
              uint64_t v305 = v36;
              unint64_t v306 = v20;
              goto LABEL_380;
            }
            sub_2607DCF28(v36, v20);
            OUTLINED_FUNCTION_100();
            unint64_t v177 = v185;
            char v175 = __s1;
            uint64_t v176 = v42;
LABEL_170:
            sub_2607DCF28(v176, v177);
            if ((v175 & 1) == 0)
            {
LABEL_77:
              OUTLINED_FUNCTION_5_5();
              OUTLINED_FUNCTION_22_2();
              v92();
            }
LABEL_78:
            unint64_t v93 = v383 >> 62;
            uint64_t v94 = 0;
            uint64_t v95 = v381;
            unint64_t v96 = HIDWORD(v381);
            uint64_t v97 = v376;
            int v98 = v361;
            switch(v383 >> 62)
            {
              case 1uLL:
                LODWORD(v94) = HIDWORD(v381) - v381;
                if (__OFSUB__(HIDWORD(v381), v381)) {
                  goto LABEL_319;
                }
                uint64_t v94 = (int)v94;
                break;
              case 2uLL:
                uint64_t v100 = *(void *)(v381 + 16);
                uint64_t v99 = *(void *)(v381 + 24);
                BOOL v27 = __OFSUB__(v99, v100);
                uint64_t v94 = v99 - v100;
                if (!v27) {
                  goto LABEL_83;
                }
                goto LABEL_320;
              case 3uLL:
                goto LABEL_83;
              default:
                uint64_t v94 = BYTE6(v383);
                goto LABEL_83;
            }
            break;
          case 2uLL:
            uint64_t v169 = *(void *)(v36 + 16);
            uint64_t v170 = *(void *)(v36 + 24);
            OUTLINED_FUNCTION_60();
            OUTLINED_FUNCTION_60();
            OUTLINED_FUNCTION_60();
            swift_retain();
            swift_retain();
            if (sub_26087AED0() && __OFSUB__(v169, sub_26087AEF0())) {
              goto LABEL_341;
            }
            if (__OFSUB__(v170, v169)) {
              goto LABEL_334;
            }
            sub_26087AEE0();
            uint64_t v171 = OUTLINED_FUNCTION_37();
            uint64_t v50 = v371;
            sub_2607F47A8(v171, v173, *(void *)(v172 - 256), v174);
            OUTLINED_FUNCTION_47();
            OUTLINED_FUNCTION_8_5();
            if (v50) {
              goto LABEL_372;
            }
            swift_release();
            swift_release();
            char v175 = __s1;
            OUTLINED_FUNCTION_47();
            uint64_t v176 = OUTLINED_FUNCTION_59();
            goto LABEL_170;
          case 3uLL:
            OUTLINED_FUNCTION_69();
            if (!v12) {
              goto LABEL_210;
            }
            if (v12 == 1)
            {
              if (v318 < v320) {
                goto LABEL_348;
              }
              unint64_t v178 = v349;
              sub_2607DCED0(v42, v349);
              uint64_t v50 = sub_26087AED0();
              if (v50)
              {
                uint64_t v179 = sub_26087AEF0();
                if (__OFSUB__(v320, v179)) {
                  goto LABEL_363;
                }
                v50 += v320 - v179;
              }
              int64_t v180 = sub_26087AEE0();
              if (!v50)
              {
                __break(1u);
LABEL_365:
                __break(1u);
LABEL_366:
                __break(1u);
LABEL_367:
                __break(1u);
LABEL_368:
                __break(1u);
LABEL_369:
                __break(1u);
LABEL_370:
                __break(1u);
LABEL_371:
                __break(1u);
LABEL_372:
                OUTLINED_FUNCTION_47();
                OUTLINED_FUNCTION_47();
                swift_release();
LABEL_386:
                swift_release();
                __break(1u);
                JUMPOUT(0x2607F3670);
              }
              LODWORD(v37) = OUTLINED_FUNCTION_25_0(v180, (uint64_t)&v330);
              uint64_t v181 = v42;
              unint64_t v182 = v178;
            }
            else
            {
              uint64_t v273 = *(void *)(v42 + 16);
              uint64_t v274 = *(void *)(v42 + 24);
              sub_2607DCED0(v42, v349);
              swift_retain();
              OUTLINED_FUNCTION_50();
              uint64_t v50 = sub_26087AED0();
              if (v50)
              {
                uint64_t v275 = sub_26087AEF0();
                if (__OFSUB__(v273, v275)) {
                  goto LABEL_362;
                }
                v50 += v273 - v275;
                LODWORD(v37) = v332;
              }
              if (__OFSUB__(v274, v273)) {
                goto LABEL_351;
              }
              int64_t v276 = sub_26087AEE0();
              if (!v50) {
                goto LABEL_365;
              }
              OUTLINED_FUNCTION_80(v276);
              OUTLINED_FUNCTION_82();
              swift_release();
              uint64_t v181 = v42;
              unint64_t v182 = v349;
            }
            sub_2607DCF28(v181, v182);
            if (!v37) {
              goto LABEL_78;
            }
            goto LABEL_77;
          default:
            uint64_t __s1 = v36;
            LOWORD(v401) = v20;
            BYTE2(v401) = BYTE2(v20);
            BYTE3(v401) = BYTE3(v20);
            BYTE4(v401) = BYTE4(v20);
            BYTE5(v401) = BYTE5(v20);
            if (v12)
            {
              unint64_t v87 = v42;
              uint64_t v88 = v36;
              uint64_t v89 = (char *)&__s1 + BYTE6(v20);
              if (v12 == 1)
              {
                uint64_t v90 = v320;
                uint64_t v91 = v318;
                if (v318 < v320) {
                  goto LABEL_347;
                }
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_68();
                LOBYTE(v89) = OUTLINED_FUNCTION_6_5(v90, v91, v50, &__s1);
                OUTLINED_FUNCTION_8_5();
                OUTLINED_FUNCTION_72();
              }
              else
              {
                uint64_t v50 = *(void *)(v87 + 24);
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                swift_retain();
                OUTLINED_FUNCTION_96();
                uint64_t v270 = OUTLINED_FUNCTION_107();
                OUTLINED_FUNCTION_6_5(v270, v271, v36, v272);
                OUTLINED_FUNCTION_8_5();
                if (v50) {
                  goto LABEL_381;
                }
                OUTLINED_FUNCTION_83();
                swift_release();
              }
              OUTLINED_FUNCTION_72();
              OUTLINED_FUNCTION_72();
              uint64_t v36 = v88;
              if ((v89 & 1) == 0) {
                goto LABEL_77;
              }
            }
            else
            {
LABEL_210:
              char __s2 = v42;
              char v387 = v86;
              char v388 = v85;
              char v389 = v84;
              char v390 = v319;
              char v391 = v83;
              char v392 = v82;
              char v393 = v81;
              char v394 = v79;
              int64_t v229 = (const void *)OUTLINED_FUNCTION_10_4(v80);
              if (memcmp(v229, v230, v366)) {
                goto LABEL_77;
              }
            }
            goto LABEL_78;
        }
LABEL_83:
        size_t v101 = v365;
        switch((int)v361)
        {
          case 1:
            size_t v101 = v339;
            if (v338) {
              goto LABEL_321;
            }
            goto LABEL_87;
          case 2:
            OUTLINED_FUNCTION_64();
            if (!v27) {
              goto LABEL_87;
            }
            goto LABEL_322;
          case 3:
            OUTLINED_FUNCTION_17_4();
            if (v111) {
              goto LABEL_96;
            }
            goto LABEL_97;
          default:
LABEL_87:
            if (v94 == v101)
            {
              if (v94 >= 1)
              {
                unint64_t v102 = v352 >> 40;
                unint64_t v103 = v352 >> 24;
                unint64_t v104 = v352 >> 16;
                unint64_t v105 = v352 >> 8;
                switch((int)v93)
                {
                  case 1:
                    if (v95 >> 32 < (int)v95) {
                      goto LABEL_335;
                    }
                    unint64_t v20 = (int)v95;
                    unint64_t v197 = v383;
                    uint64_t v50 = v383 & 0x3FFFFFFFFFFFFFFFLL;
                    uint64_t v97 = v352;
                    OUTLINED_FUNCTION_44();
                    OUTLINED_FUNCTION_15_4();
                    OUTLINED_FUNCTION_15_4();
                    uint64_t v198 = OUTLINED_FUNCTION_59();
                    sub_2607DCED0(v198, v199);
                    OUTLINED_FUNCTION_18_4((int)v95, v95 >> 32, v197 & 0x3FFFFFFFFFFFFFFFLL);
                    OUTLINED_FUNCTION_8_5();
                    if (v50)
                    {
                      OUTLINED_FUNCTION_2_6();
                      OUTLINED_FUNCTION_2_6();
                      uint64_t v305 = OUTLINED_FUNCTION_59();
                      goto LABEL_380;
                    }
                    char v201 = v200;
                    OUTLINED_FUNCTION_47();
                    OUTLINED_FUNCTION_2_6();
                    OUTLINED_FUNCTION_2_6();
                    OUTLINED_FUNCTION_39();
                    if (v201) {
                      goto LABEL_97;
                    }
                    goto LABEL_96;
                  case 2:
                    unint64_t v188 = v383 & 0x3FFFFFFFFFFFFFFFLL;
                    uint64_t v50 = *(void *)(v95 + 16);
                    uint64_t v189 = *(void *)(v95 + 24);
                    uint64_t v97 = v352;
                    OUTLINED_FUNCTION_44();
                    OUTLINED_FUNCTION_15_4();
                    OUTLINED_FUNCTION_15_4();
                    swift_retain();
                    swift_retain();
                    OUTLINED_FUNCTION_18_4(v50, v189, v188);
                    OUTLINED_FUNCTION_8_5();
                    if (v50)
                    {
                      OUTLINED_FUNCTION_2_6();
                      OUTLINED_FUNCTION_2_6();
                      swift_release();
                      goto LABEL_386;
                    }
                    char v191 = v190;
                    swift_release();
                    swift_release();
                    OUTLINED_FUNCTION_2_6();
                    OUTLINED_FUNCTION_2_6();
                    OUTLINED_FUNCTION_39();
                    if (v191) {
                      goto LABEL_97;
                    }
                    goto LABEL_96;
                  case 3:
                    OUTLINED_FUNCTION_69();
                    if (!v192) {
                      goto LABEL_212;
                    }
                    uint64_t v95 = v36;
                    uint64_t v97 = v352;
                    if (v192 == 1)
                    {
                      uint64_t v50 = v315;
                      if (v314 < v315) {
                        goto LABEL_353;
                      }
                      OUTLINED_FUNCTION_4_5();
                      OUTLINED_FUNCTION_4_5();
                      OUTLINED_FUNCTION_50();
                      uint64_t v193 = OUTLINED_FUNCTION_67();
                      LOBYTE(v110) = OUTLINED_FUNCTION_6_5(v193, v194, v195, v196);
                      uint64_t v371 = v50;
                      OUTLINED_FUNCTION_11_4();
                      OUTLINED_FUNCTION_11_4();
                      OUTLINED_FUNCTION_42();
                    }
                    else
                    {
                      uint64_t v110 = *(void *)(v352 + 16);
                      uint64_t v50 = *(void *)(v352 + 24);
                      sub_2607DCED0(v352, v347);
                      OUTLINED_FUNCTION_4_5();
                      swift_retain();
                      OUTLINED_FUNCTION_96();
                      OUTLINED_FUNCTION_6_5(v110, v50, v36, &__s1);
                      OUTLINED_FUNCTION_8_5();
                      if (v50) {
                        goto LABEL_383;
                      }
                      OUTLINED_FUNCTION_83();
                      swift_release();
                      OUTLINED_FUNCTION_11_4();
                      OUTLINED_FUNCTION_11_4();
                      OUTLINED_FUNCTION_38();
                    }
                    goto LABEL_268;
                  default:
                    LOWORD(__s1) = v95;
                    BYTE2(__s1) = BYTE2(v95);
                    BYTE3(__s1) = BYTE3(v95);
                    BYTE4(__s1) = v96;
                    BYTE5(__s1) = BYTE5(v95);
                    BYTE6(__s1) = BYTE6(v95);
                    HIBYTE(__s1) = HIBYTE(v95);
                    LODWORD(v401) = v383;
                    WORD2(v401) = WORD2(v383);
                    if (v98)
                    {
                      uint64_t v353 = v36;
                      uint64_t v97 = v352;
                      if (v98 == 1)
                      {
                        uint64_t v36 = v315;
                        if (v314 < v315) {
                          goto LABEL_352;
                        }
                        OUTLINED_FUNCTION_4_5();
                        OUTLINED_FUNCTION_4_5();
                        OUTLINED_FUNCTION_68();
                        uint64_t v106 = OUTLINED_FUNCTION_66();
                        LOBYTE(v110) = OUTLINED_FUNCTION_6_5(v106, v107, v108, v109);
                        uint64_t v371 = v50;
                        OUTLINED_FUNCTION_11_4();
                        OUTLINED_FUNCTION_11_4();
                        OUTLINED_FUNCTION_42();
                        OUTLINED_FUNCTION_57();
LABEL_268:
                        OUTLINED_FUNCTION_17_4();
                        if ((v110 & 1) == 0) {
                          goto LABEL_96;
                        }
                      }
                      else
                      {
                        uint64_t v287 = *(void *)(v352 + 16);
                        uint64_t v50 = *(void *)(v352 + 24);
                        OUTLINED_FUNCTION_44();
                        OUTLINED_FUNCTION_15_4();
                        swift_retain();
                        uint64_t v288 = v325;
                        swift_retain();
                        OUTLINED_FUNCTION_6_5(v287, v50, v288, &__s1);
                        OUTLINED_FUNCTION_8_5();
                        OUTLINED_FUNCTION_17_4();
                        if (v50) {
                          goto LABEL_376;
                        }
                        OUTLINED_FUNCTION_82();
                        swift_release();
                        OUTLINED_FUNCTION_2_6();
                        OUTLINED_FUNCTION_2_6();
                        OUTLINED_FUNCTION_38();
                        OUTLINED_FUNCTION_57();
                        if ((v287 & 1) == 0) {
                          goto LABEL_96;
                        }
                      }
                    }
                    else
                    {
LABEL_212:
                      OUTLINED_FUNCTION_73(v102, v103, v104, v105);
                      char v390 = v316;
                      char v391 = v231;
                      char v392 = v232;
                      char v393 = v233;
                      char v394 = v347;
                      int v235 = (const void *)OUTLINED_FUNCTION_10_4(v234);
                      memcmp(v235, v236, v365);
                      OUTLINED_FUNCTION_17_4();
                      if (v237) {
                        goto LABEL_96;
                      }
                    }
                    goto LABEL_97;
                }
              }
              OUTLINED_FUNCTION_17_4();
            }
            else
            {
              OUTLINED_FUNCTION_17_4();
LABEL_96:
              OUTLINED_FUNCTION_5_5();
              OUTLINED_FUNCTION_22_2();
              v112();
            }
LABEL_97:
            unint64_t v113 = v382;
            unint64_t v114 = v382 >> 62;
            uint64_t v115 = 0;
            unint64_t v116 = HIDWORD(v97);
            int v117 = v360;
            int v118 = v370;
            switch(v382 >> 62)
            {
              case 1uLL:
                LODWORD(v115) = HIDWORD(v97) - v97;
                if (__OFSUB__(HIDWORD(v97), v97)) {
                  goto LABEL_323;
                }
                uint64_t v115 = (int)v115;
LABEL_102:
                uint64_t v121 = v364;
                switch((int)v360)
                {
                  case 1:
                    uint64_t v121 = v337;
                    if (v336) {
                      goto LABEL_325;
                    }
                    goto LABEL_106;
                  case 2:
                    OUTLINED_FUNCTION_64();
                    if (!v27) {
                      goto LABEL_106;
                    }
                    goto LABEL_326;
                  case 3:
                    if (v115) {
                      goto LABEL_115;
                    }
                    goto LABEL_116;
                  default:
LABEL_106:
                    if (v115 != v121) {
                      goto LABEL_115;
                    }
                    if (v115 < 1) {
                      goto LABEL_116;
                    }
                    break;
                }
                break;
              case 2uLL:
                uint64_t v120 = *(void *)(v97 + 16);
                uint64_t v119 = *(void *)(v97 + 24);
                BOOL v27 = __OFSUB__(v119, v120);
                uint64_t v115 = v119 - v120;
                if (!v27) {
                  goto LABEL_102;
                }
                goto LABEL_324;
              case 3uLL:
                goto LABEL_102;
              default:
                uint64_t v115 = BYTE6(v382);
                goto LABEL_102;
            }
            break;
        }
        switch((int)v114)
        {
          case 1:
            if (v97 >> 32 < (int)v97) {
              goto LABEL_336;
            }
            unint64_t v20 = (int)v97;
            uint64_t v50 = v113 & 0x3FFFFFFFFFFFFFFFLL;
            OUTLINED_FUNCTION_43();
            OUTLINED_FUNCTION_15_4();
            OUTLINED_FUNCTION_15_4();
            sub_2607DCED0(v97, v113);
            OUTLINED_FUNCTION_18_4((int)v97, v97 >> 32, v113 & 0x3FFFFFFFFFFFFFFFLL);
            OUTLINED_FUNCTION_8_5();
            if ((v113 & 0x3FFFFFFFFFFFFFFFLL) != 0)
            {
              OUTLINED_FUNCTION_2_6();
              OUTLINED_FUNCTION_2_6();
              uint64_t v305 = v97;
              unint64_t v306 = v113;
              goto LABEL_380;
            }
            char v213 = v212;
            sub_2607DCF28(v97, v113);
            OUTLINED_FUNCTION_2_6();
            OUTLINED_FUNCTION_2_6();
            OUTLINED_FUNCTION_91();
            uint64_t v95 = v378;
            OUTLINED_FUNCTION_52();
            if (v213) {
              goto LABEL_116;
            }
            goto LABEL_115;
          case 2:
            uint64_t v353 = v36;
            uint64_t v50 = *(void *)(v97 + 16);
            uint64_t v202 = *(void *)(v97 + 24);
            OUTLINED_FUNCTION_43();
            OUTLINED_FUNCTION_15_4();
            OUTLINED_FUNCTION_15_4();
            swift_retain();
            swift_retain();
            OUTLINED_FUNCTION_18_4(v50, v202, v113 & 0x3FFFFFFFFFFFFFFFLL);
            OUTLINED_FUNCTION_8_5();
            if (v50) {
              goto LABEL_376;
            }
            char v204 = v203;
            swift_release();
            swift_release();
            OUTLINED_FUNCTION_2_6();
            OUTLINED_FUNCTION_2_6();
            OUTLINED_FUNCTION_91();
            OUTLINED_FUNCTION_57();
            uint64_t v95 = v378;
            OUTLINED_FUNCTION_52();
            if (v204) {
              goto LABEL_116;
            }
            goto LABEL_115;
          case 3:
            OUTLINED_FUNCTION_69();
            if (!v209)
            {
              if (OUTLINED_FUNCTION_1_7(v205, v206, v207, v208, v210)) {
                goto LABEL_115;
              }
              goto LABEL_116;
            }
            uint64_t v95 = v36;
            uint64_t v97 = v351;
            if (v209 == 1)
            {
              uint64_t v50 = v312;
              if (v311 < v312) {
                goto LABEL_355;
              }
              OUTLINED_FUNCTION_4_5();
              OUTLINED_FUNCTION_4_5();
              OUTLINED_FUNCTION_50();
              uint64_t v122 = OUTLINED_FUNCTION_67();
              goto LABEL_190;
            }
            uint64_t v211 = *(void *)(v351 + 16);
            uint64_t v50 = *(void *)(v351 + 24);
            unint64_t v292 = v346;
            sub_2607DCED0(v351, v346);
            OUTLINED_FUNCTION_4_5();
            swift_retain();
            OUTLINED_FUNCTION_96();
            OUTLINED_FUNCTION_6_5(v211, v50, v36, &__s1);
            OUTLINED_FUNCTION_8_5();
            if (v50)
            {
LABEL_383:
              OUTLINED_FUNCTION_11_4();
              OUTLINED_FUNCTION_11_4();
              goto LABEL_385;
            }
            OUTLINED_FUNCTION_83();
            swift_release();
            OUTLINED_FUNCTION_11_4();
            uint64_t v290 = v97;
            unint64_t v291 = v292;
            goto LABEL_281;
          default:
            LOWORD(__s1) = v97;
            BYTE2(__s1) = BYTE2(v97);
            BYTE3(__s1) = BYTE3(v97);
            BYTE4(__s1) = v116;
            BYTE5(__s1) = BYTE5(v97);
            BYTE6(__s1) = BYTE6(v97);
            HIBYTE(__s1) = HIBYTE(v97);
            LOWORD(v401) = v113;
            BYTE2(v401) = BYTE2(v113);
            BYTE3(v401) = BYTE3(v113);
            BYTE4(v401) = BYTE4(v113);
            BYTE5(v401) = BYTE5(v113);
            if (v117)
            {
              uint64_t v95 = v36;
              uint64_t v97 = v351;
              if (v117 == 1)
              {
                if (v311 < v312) {
                  goto LABEL_354;
                }
                OUTLINED_FUNCTION_4_5();
                OUTLINED_FUNCTION_4_5();
                OUTLINED_FUNCTION_68();
                uint64_t v122 = OUTLINED_FUNCTION_66();
LABEL_190:
                LOBYTE(v211) = OUTLINED_FUNCTION_6_5(v122, v123, v124, v125);
                uint64_t v371 = v50;
                OUTLINED_FUNCTION_11_4();
                OUTLINED_FUNCTION_11_4();
                OUTLINED_FUNCTION_42();
                OUTLINED_FUNCTION_91();
              }
              else
              {
                uint64_t v211 = *(void *)(v351 + 16);
                uint64_t v50 = *(void *)(v351 + 24);
                OUTLINED_FUNCTION_43();
                OUTLINED_FUNCTION_15_4();
                swift_retain();
                uint64_t v289 = v324;
                swift_retain();
                OUTLINED_FUNCTION_6_5(v211, v50, v289, &__s1);
                OUTLINED_FUNCTION_8_5();
                if (v50)
                {
LABEL_376:
                  OUTLINED_FUNCTION_2_6();
                  OUTLINED_FUNCTION_2_6();
LABEL_385:
                  swift_release();
                  goto LABEL_386;
                }
                OUTLINED_FUNCTION_82();
                swift_release();
                OUTLINED_FUNCTION_2_6();
                uint64_t v290 = v97;
                unint64_t v291 = v36;
LABEL_281:
                sub_2607DCF28(v290, v291);
                OUTLINED_FUNCTION_91();
                OUTLINED_FUNCTION_38();
              }
              uint64_t v36 = v95;
              OUTLINED_FUNCTION_17_4();
              if ((v211 & 1) == 0)
              {
LABEL_115:
                OUTLINED_FUNCTION_5_5();
                OUTLINED_FUNCTION_22_2();
                v126();
              }
            }
            else if (OUTLINED_FUNCTION_1_7(SBYTE5(v351), SBYTE3(v351), SBYTE2(v351), SBYTE1(v351), SBYTE5(v346)))
            {
              goto LABEL_115;
            }
LABEL_116:
            unint64_t v127 = (unint64_t)v95 >> 62;
            uint64_t v128 = 0;
            unint64_t v129 = HIDWORD(v385);
            switch((unint64_t)v95 >> 62)
            {
              case 1uLL:
                LODWORD(v128) = HIDWORD(v385) - v385;
                if (__OFSUB__(HIDWORD(v385), v385)) {
                  goto LABEL_327;
                }
                uint64_t v128 = (int)v128;
LABEL_121:
                size_t v132 = v363;
                switch(v118)
                {
                  case 1:
                    size_t v132 = v335;
                    if (v334) {
                      goto LABEL_329;
                    }
                    goto LABEL_125;
                  case 2:
                    OUTLINED_FUNCTION_64();
                    if (!v27) {
                      goto LABEL_125;
                    }
                    goto LABEL_330;
                  case 3:
                    if (v128) {
                      goto LABEL_133;
                    }
                    goto LABEL_134;
                  default:
LABEL_125:
                    if (v128 != v132) {
                      goto LABEL_133;
                    }
                    if (v128 < 1) {
                      goto LABEL_134;
                    }
                    break;
                }
                break;
              case 2uLL:
                uint64_t v131 = *(void *)(v385 + 16);
                uint64_t v130 = *(void *)(v385 + 24);
                BOOL v27 = __OFSUB__(v130, v131);
                uint64_t v128 = v130 - v131;
                if (!v27) {
                  goto LABEL_121;
                }
                goto LABEL_328;
              case 3uLL:
                goto LABEL_121;
              default:
                uint64_t v128 = BYTE6(v95);
                goto LABEL_121;
            }
            uint64_t v97 = v345;
            unint64_t v133 = v350 >> 40;
            unint64_t v134 = v350 >> 24;
            unint64_t v135 = v350 >> 16;
            unint64_t v136 = v350 >> 8;
            switch((int)v127)
            {
              case 1:
                uint64_t v224 = v385 >> 32;
                if (v385 >> 32 < (int)v385) {
                  goto LABEL_337;
                }
                unint64_t v225 = v385;
                uint64_t v226 = v378 & 0x3FFFFFFFFFFFFFFFLL;
                OUTLINED_FUNCTION_20_5();
                OUTLINED_FUNCTION_20_5();
                OUTLINED_FUNCTION_20_5();
                OUTLINED_FUNCTION_17_4();
                sub_2607DCED0(v227, v225);
                OUTLINED_FUNCTION_92((int)v225, v224, v226);
                OUTLINED_FUNCTION_8_5();
                if (v225)
                {
                  OUTLINED_FUNCTION_9_4();
                  OUTLINED_FUNCTION_9_4();
                  uint64_t v305 = v385;
                  unint64_t v306 = v225;
LABEL_380:
                  sub_2607DCF28(v305, v306);
                  __break(1u);
LABEL_381:
                  OUTLINED_FUNCTION_72();
                  OUTLINED_FUNCTION_72();
                  swift_release();
                  goto LABEL_386;
                }
                LOBYTE(v219) = v228;
                uint64_t v222 = v385;
                unint64_t v223 = v225;
LABEL_205:
                sub_2607DCF28(v222, v223);
LABEL_286:
                OUTLINED_FUNCTION_9_4();
                OUTLINED_FUNCTION_9_4();
                OUTLINED_FUNCTION_38();
                if (v219) {
                  goto LABEL_134;
                }
                goto LABEL_133;
              case 2:
                uint64_t v214 = *(void *)(v385 + 16);
                uint64_t v215 = *(void *)(v385 + 24);
                OUTLINED_FUNCTION_20_5();
                OUTLINED_FUNCTION_20_5();
                OUTLINED_FUNCTION_20_5();
                swift_retain();
                swift_retain();
                OUTLINED_FUNCTION_92(v214, v215, v95 & 0x3FFFFFFFFFFFFFFFLL);
                OUTLINED_FUNCTION_8_5();
                if (v214)
                {
                  OUTLINED_FUNCTION_9_4();
                  OUTLINED_FUNCTION_9_4();
                  swift_release();
                  goto LABEL_386;
                }
                char v217 = v216;
                swift_release();
                swift_release();
                OUTLINED_FUNCTION_9_4();
                OUTLINED_FUNCTION_9_4();
                OUTLINED_FUNCTION_38();
                OUTLINED_FUNCTION_17_4();
                if (v217) {
                  goto LABEL_134;
                }
                goto LABEL_133;
              case 3:
                OUTLINED_FUNCTION_69();
                uint64_t v218 = v330;
                if (!v118) {
                  goto LABEL_214;
                }
                if (v118 == 1)
                {
                  uint64_t v219 = v309;
                  uint64_t v220 = v308;
                  if (v308 < v309) {
                    goto LABEL_357;
                  }
                  unint64_t v221 = v350;
                  OUTLINED_FUNCTION_19_4();
                  OUTLINED_FUNCTION_20_5();
                  swift_retain();
                  LOBYTE(v219) = OUTLINED_FUNCTION_6_5(v219, v220, v218, &__s1);
                  uint64_t v371 = v220;
                  uint64_t v222 = v221;
                  unint64_t v223 = v97;
                  goto LABEL_205;
                }
                uint64_t v219 = *(void *)(v350 + 16);
                uint64_t v293 = *(void *)(v350 + 24);
                OUTLINED_FUNCTION_19_4();
                OUTLINED_FUNCTION_20_5();
                swift_retain();
                swift_retain();
                OUTLINED_FUNCTION_6_5(v219, v293, v218, &__s1);
                OUTLINED_FUNCTION_8_5();
                if (v293) {
                  goto LABEL_384;
                }
                OUTLINED_FUNCTION_82();
                swift_release();
                goto LABEL_286;
              default:
                LODWORD(__s1) = v385;
                BYTE4(__s1) = v129;
                *(_WORD *)((char *)&__s1 + 5) = *(_WORD *)((char *)&v385 + 5);
                HIBYTE(__s1) = HIBYTE(v385);
                LOWORD(v401) = v95;
                BYTE2(v401) = BYTE2(v95);
                BYTE3(v401) = BYTE3(v95);
                BYTE4(v401) = BYTE4(v95);
                BYTE5(v401) = BYTE5(v95);
                if (v118)
                {
                  unsigned __int8 v137 = BYTE6(v95);
                  uint64_t v138 = v36;
                  uint64_t v139 = (char *)&__s1 + v137;
                  if (v118 == 1)
                  {
                    uint64_t v140 = v309;
                    uint64_t v141 = v308;
                    if (v308 < v309) {
                      goto LABEL_356;
                    }
                    OUTLINED_FUNCTION_19_4();
                    OUTLINED_FUNCTION_20_5();
                    OUTLINED_FUNCTION_68();
                    LOBYTE(v139) = OUTLINED_FUNCTION_6_5(v140, v141, v50, &__s1);
                    uint64_t v371 = v50;
                    OUTLINED_FUNCTION_9_4();
                  }
                  else
                  {
                    uint64_t v294 = *(void *)(v350 + 16);
                    uint64_t v295 = *(void *)(v350 + 24);
                    OUTLINED_FUNCTION_19_4();
                    OUTLINED_FUNCTION_20_5();
                    swift_retain();
                    OUTLINED_FUNCTION_96();
                    OUTLINED_FUNCTION_6_5(v294, v295, v36, &__s1);
                    OUTLINED_FUNCTION_8_5();
                    if (v294)
                    {
LABEL_384:
                      OUTLINED_FUNCTION_9_4();
                      OUTLINED_FUNCTION_9_4();
                      goto LABEL_385;
                    }
                    OUTLINED_FUNCTION_83();
                    swift_release();
                  }
                  OUTLINED_FUNCTION_9_4();
                  OUTLINED_FUNCTION_9_4();
                  OUTLINED_FUNCTION_38();
                  uint64_t v36 = v138;
                  OUTLINED_FUNCTION_17_4();
                  if ((v139 & 1) == 0)
                  {
LABEL_133:
                    OUTLINED_FUNCTION_5_5();
                    OUTLINED_FUNCTION_22_2();
                    v142();
                  }
                }
                else
                {
LABEL_214:
                  OUTLINED_FUNCTION_73(v133, v134, v135, v136);
                  char v390 = v310;
                  char v391 = v238;
                  char v392 = v239;
                  char v393 = v240;
                  char v394 = v97;
                  uint64_t v242 = (const void *)OUTLINED_FUNCTION_10_4(v241);
                  memcmp(v242, v243, v363);
                  OUTLINED_FUNCTION_38();
                  if (v244) {
                    goto LABEL_133;
                  }
                }
LABEL_134:
                uint64_t v143 = v377;
                unint64_t v144 = v384;
                sub_2607DCF28(v377, v384);
                sub_2607DCF28(v36, v20);
                uint64_t v145 = v381;
                unint64_t v146 = v383;
                sub_2607DCF28(v381, v383);
                unint64_t v147 = v382;
                sub_2607DCF28(v97, v382);
                OUTLINED_FUNCTION_77();
                sub_2607DCF28(v143, v144);
                sub_2607DCF28(v36, v20);
                sub_2607DCF28(v145, v146);
                uint64_t v24 = (uint64_t)v379;
                sub_2607DCF28(v97, v147);
                OUTLINED_FUNCTION_77();
                uint64_t v2 = v359;
                uint64_t v4 = v358;
                unint64_t v9 = v357;
                uint64_t v10 = v356;
                unint64_t v20 = v373;
                int64_t v23 = v374;
                int64_t v12 = v355;
                break;
            }
            break;
        }
      }
    }
    sub_2607F6C40(v24);
    if (v20) {
      goto LABEL_20;
    }
LABEL_21:
    BOOL v27 = __OFADD__(v23++, 1);
    if (v27)
    {
      __break(1u);
LABEL_311:
      __break(1u);
LABEL_312:
      __break(1u);
LABEL_313:
      __break(1u);
LABEL_314:
      __break(1u);
LABEL_315:
      __break(1u);
LABEL_316:
      __break(1u);
LABEL_317:
      __break(1u);
LABEL_318:
      __break(1u);
LABEL_319:
      __break(1u);
LABEL_320:
      __break(1u);
LABEL_321:
      __break(1u);
LABEL_322:
      __break(1u);
LABEL_323:
      __break(1u);
LABEL_324:
      __break(1u);
LABEL_325:
      __break(1u);
LABEL_326:
      __break(1u);
LABEL_327:
      __break(1u);
LABEL_328:
      __break(1u);
LABEL_329:
      __break(1u);
LABEL_330:
      __break(1u);
LABEL_331:
      __break(1u);
LABEL_332:
      __break(1u);
LABEL_333:
      __break(1u);
LABEL_334:
      __break(1u);
LABEL_335:
      __break(1u);
LABEL_336:
      __break(1u);
LABEL_337:
      __break(1u);
      goto LABEL_338;
    }
    if (v23 >= v12) {
      goto LABEL_309;
    }
    unint64_t v28 = *(void *)(v372 + 8 * v23);
    if (!v28) {
      break;
    }
LABEL_35:
    unint64_t v20 = (v28 - 1) & v28;
  }
  if (v23 + 1 >= v12) {
    goto LABEL_309;
  }
  OUTLINED_FUNCTION_24_0();
  if (v28) {
    goto LABEL_34;
  }
  if (v23 + 2 >= v12) {
    goto LABEL_309;
  }
  OUTLINED_FUNCTION_24_0();
  if (v28) {
    goto LABEL_34;
  }
  if (v23 + 3 >= v12) {
    goto LABEL_309;
  }
  OUTLINED_FUNCTION_24_0();
  if (v28) {
    goto LABEL_34;
  }
  if (v23 + 4 >= v12) {
    goto LABEL_309;
  }
  OUTLINED_FUNCTION_24_0();
  if (v28)
  {
LABEL_34:
    int64_t v23 = v29;
    goto LABEL_35;
  }
  if (v23 + 5 < v12)
  {
    OUTLINED_FUNCTION_24_0();
    if (!v28)
    {
      while (1)
      {
        int64_t v23 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          break;
        }
        if (v23 >= v12) {
          goto LABEL_309;
        }
        unint64_t v28 = *(void *)(v372 + 8 * v23);
        ++v29;
        if (v28) {
          goto LABEL_35;
        }
      }
LABEL_338:
      __break(1u);
LABEL_339:
      __break(1u);
LABEL_340:
      __break(1u);
LABEL_341:
      __break(1u);
LABEL_342:
      __break(1u);
LABEL_343:
      __break(1u);
LABEL_344:
      __break(1u);
LABEL_345:
      __break(1u);
LABEL_346:
      __break(1u);
LABEL_347:
      __break(1u);
LABEL_348:
      __break(1u);
LABEL_349:
      __break(1u);
LABEL_350:
      __break(1u);
LABEL_351:
      __break(1u);
LABEL_352:
      __break(1u);
LABEL_353:
      __break(1u);
LABEL_354:
      __break(1u);
LABEL_355:
      __break(1u);
LABEL_356:
      __break(1u);
LABEL_357:
      __break(1u);
LABEL_358:
      __break(1u);
LABEL_359:
      __break(1u);
LABEL_360:
      __break(1u);
LABEL_361:
      __break(1u);
LABEL_362:
      __break(1u);
LABEL_363:
      __break(1u);
    }
    goto LABEL_34;
  }
LABEL_309:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v302 = OUTLINED_FUNCTION_45();
  sub_2607DCF28(v302, v303);
  sub_2607DCF28(v367, v349);
  sub_2607DCF28(v352, v347);
  sub_2607DCF28(v351, v346);
  return sub_2607DCF28(v350, v345);
}

uint64_t sub_2607F3760(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = type metadata accessor for EventReportSenderID();
  uint64_t v45 = *(void *)(v51 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v51);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  unint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  int64_t v12 = (char *)&v42 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  BOOL v15 = (char *)&v42 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v44 = (uint64_t)&v42 - v16;
  sub_2607F5FFC(a1, v53);
  uint64_t v46 = v53[0];
  uint64_t v42 = v53[1];
  int64_t v49 = v53[3];
  unint64_t v17 = v54;
  int64_t v43 = (unint64_t)(v53[2] + 64) >> 6;
  if (!v54) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v50 = (v17 - 1) & v17;
  for (unint64_t i = __clz(__rbit64(v17)) | (v49 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    uint64_t v23 = *(void *)(v45 + 72);
    uint64_t v24 = v44;
    sub_2607F6B78(*(void *)(v46 + 48) + v23 * i, v44);
    sub_2607F6BDC(v24, (uint64_t)v15);
    sub_26087BCA0();
    uint64_t v25 = sub_26087B0F0();
    uint64_t v26 = sub_2607F72FC(&qword_26A8B4750, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v47 = v26;
    uint64_t v48 = v25;
    sub_26087B220();
    uint64_t v27 = *(int *)(v51 + 20);
    sub_26087BCF0();
    uint64_t v28 = sub_26087BD00();
    uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v30 = v28 & ~v29;
    if ((*(void *)(a2 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30))
    {
      uint64_t v31 = ~v29;
      while (1)
      {
        sub_2607F6B78(*(void *)(a2 + 48) + v30 * v23, (uint64_t)v6);
        if ((sub_26087B0B0() & 1) != 0 && *(void *)&v6[*(int *)(v51 + 20)] == *(void *)&v15[v27]) {
          break;
        }
        sub_2607F6C40((uint64_t)v6);
        unint64_t v30 = (v30 + 1) & v31;
        if (((*(void *)(a2 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
          goto LABEL_24;
        }
      }
      sub_2607F6C40((uint64_t)v6);
      goto LABEL_38;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2607F6B78((uint64_t)v15, (uint64_t)v12);
    uint64_t v52 = a2;
    if (*(void *)(a2 + 24) <= *(void *)(a2 + 16)) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_26086ABD8();
    }
LABEL_36:
    a2 = v52;
    *(void *)(v52 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v30;
    sub_2607F6BDC((uint64_t)v12, *(void *)(a2 + 48) + v30 * v23);
    uint64_t v38 = *(void *)(a2 + 16);
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    *(void *)(a2 + 16) = v40;
LABEL_38:
    swift_bridgeObjectRelease();
    sub_2607F6C40((uint64_t)v15);
    unint64_t v17 = v50;
    if (v50) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v19 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      goto LABEL_42;
    }
    if (v19 >= v43) {
      goto LABEL_40;
    }
    unint64_t v20 = *(void *)(v42 + 8 * v19);
    int64_t v21 = v49 + 1;
    if (!v20)
    {
      int64_t v21 = v49 + 2;
      if (v49 + 2 >= v43) {
        goto LABEL_40;
      }
      unint64_t v20 = *(void *)(v42 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v49 + 3;
        if (v49 + 3 >= v43) {
          goto LABEL_40;
        }
        unint64_t v20 = *(void *)(v42 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v49 + 4;
          if (v49 + 4 >= v43) {
            goto LABEL_40;
          }
          unint64_t v20 = *(void *)(v42 + 8 * v21);
          if (!v20)
          {
            int64_t v21 = v49 + 5;
            if (v49 + 5 >= v43) {
              goto LABEL_40;
            }
            unint64_t v20 = *(void *)(v42 + 8 * v21);
            if (!v20)
            {
              int64_t v22 = v49 + 6;
              while (v22 < v43)
              {
                unint64_t v20 = *(void *)(v42 + 8 * v22++);
                if (v20)
                {
                  int64_t v21 = v22 - 1;
                  goto LABEL_18;
                }
              }
LABEL_40:
              swift_release();
              return a2;
            }
          }
        }
      }
    }
LABEL_18:
    int64_t v49 = v21;
    uint64_t v50 = (v20 - 1) & v20;
  }
  if (isUniquelyReferenced_nonNull_native) {
    sub_26086A148();
  }
  else {
    sub_26086B124();
  }
  uint64_t v33 = v52;
  sub_26087BCA0();
  sub_26087B220();
  uint64_t v34 = *(int *)(v51 + 20);
  sub_26087BCF0();
  uint64_t v35 = sub_26087BD00();
  uint64_t v36 = -1 << *(unsigned char *)(v33 + 32);
  unint64_t v30 = v35 & ~v36;
  if (((*(void *)(v33 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
    goto LABEL_36;
  }
  uint64_t v37 = ~v36;
  while (1)
  {
    sub_2607F6B78(*(void *)(v33 + 48) + v30 * v23, (uint64_t)v9);
    if ((sub_26087B0B0() & 1) != 0 && *(void *)&v9[*(int *)(v51 + 20)] == *(void *)&v12[v34]) {
      break;
    }
    sub_2607F6C40((uint64_t)v9);
    unint64_t v30 = (v30 + 1) & v37;
    if (((*(void *)(v33 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
      goto LABEL_36;
    }
  }
LABEL_43:
  sub_2607F6C40((uint64_t)v9);
  uint64_t result = sub_26087BC20();
  __break(1u);
  return result;
}

uint64_t sub_2607F3D18()
{
  return j___s12UniversalHID21HIDVirtualServicePoolC10sendReport_4fromyAA9HIDReportV_AA05EventG8SenderIDVtF();
}

unint64_t sub_2607F3D3C(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_74();
  sub_26087BCC0();
  uint64_t v2 = sub_26087BD00();
  return sub_2607F40DC(a1, v2);
}

unint64_t sub_2607F3DA0(uint64_t a1)
{
  OUTLINED_FUNCTION_74();
  sub_26087B0F0();
  sub_2607F72FC(&qword_26A8B4750, MEMORY[0x263F07508]);
  sub_26087B220();
  type metadata accessor for EventReportSenderID();
  sub_26087BCF0();
  uint64_t v2 = sub_26087BD00();
  return sub_2607F417C(a1, v2);
}

unint64_t sub_2607F3E64()
{
  OUTLINED_FUNCTION_74();
  sub_26087B300();
  sub_26087BD00();
  uint64_t v0 = OUTLINED_FUNCTION_107();
  return sub_2607F42D4(v0, v1, v2);
}

unint64_t sub_2607F3ED0(uint64_t a1)
{
  uint64_t v2 = sub_26087BC90();
  return sub_2607F43B8(a1, v2);
}

unint64_t sub_2607F3F14(unsigned int a1)
{
  OUTLINED_FUNCTION_74();
  sub_26087BCD0();
  sub_26087BCD0();
  uint64_t v2 = sub_26087BD00();
  return sub_2607F4454(a1, v2);
}

unint64_t sub_2607F3F88(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x26121D0C0](*(void *)(v1 + 40), a1, 4);
  return sub_2607F44D4(a1, v3);
}

unint64_t sub_2607F3FD0(uint64_t a1)
{
  sub_26087B0F0();
  sub_2607F72FC(&qword_26A8B4750, MEMORY[0x263F07508]);
  uint64_t v2 = sub_26087B210();
  return sub_2607F4570(a1, v2);
}

unint64_t sub_2607F4068()
{
  OUTLINED_FUNCTION_74();
  sub_26087BCF0();
  sub_26087BCB0();
  sub_26087BD00();
  uint64_t v0 = OUTLINED_FUNCTION_107();
  return sub_2607F4730(v0, v1, v2);
}

unint64_t sub_2607F40DC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2607F417C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    while (1)
    {
      sub_2607F6B78(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8);
      if ((sub_26087B0B0() & 1) != 0 && *(void *)&v8[*(int *)(v5 + 20)] == *(void *)(a1 + *(int *)(v5 + 20))) {
        break;
      }
      sub_2607F6C40((uint64_t)v8);
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        return v10;
      }
    }
    sub_2607F6C40((uint64_t)v8);
  }
  return v10;
}

unint64_t sub_2607F42D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_26087BBE0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_26087BBE0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2607F43B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2607F4454(unsigned int a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    int v6 = (unsigned __int16)a1;
    unsigned int v7 = HIWORD(a1);
    uint64_t v8 = ~v4;
    do
    {
      uint64_t v9 = (unsigned __int16 *)(*(void *)(v2 + 48) + 4 * result);
      int v10 = *v9;
      int v11 = v9[1];
      if (v10 == v6 && v11 == v7) {
        break;
      }
      unint64_t result = (result + 1) & v8;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2607F44D4(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2607F4570(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_26087B0F0();
  uint64_t v5 = *(void *)(v4 - 8);
  v6.n128_f64[0] = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_2607F72FC(&qword_26A8B4758, MEMORY[0x263F07508]);
      char v16 = sub_26087B290();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_2607F4730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v10 == a1 && v9 == a2) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_2607F47A8@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, BOOL *a4@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v6 = v4;
  uint64_t v7 = a3;
  uint64_t v9 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (a2 >> 32 < (int)a2) {
        __break(1u);
      }
      swift_retain();
      char v14 = sub_2607F4A9C((int)a2, a2 >> 32, v7 & 0x3FFFFFFFFFFFFFFFLL, v9);
      if (v6) {
        goto LABEL_16;
      }
      BOOL v10 = v14;
      uint64_t __s1 = sub_2607DCF28(a2, v7);
      break;
    case 2uLL:
      uint64_t v7 = a3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      char v13 = sub_2607F4A9C(v11, v12, v7, v9);
      if (v6) {
        goto LABEL_15;
      }
      BOOL v10 = v13;
      swift_release();
      uint64_t __s1 = swift_release();
      break;
    case 3uLL:
      if (!__s1) {
        goto LABEL_14;
      }
      BOOL v10 = 1;
      break;
    default:
      uint64_t __s2 = a2;
      __int16 v16 = a3;
      char v17 = BYTE2(a3);
      char v18 = BYTE3(a3);
      char v19 = BYTE4(a3);
      char v20 = BYTE5(a3);
      if (!__s1)
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        swift_release();
        swift_release();
        __break(1u);
LABEL_16:
        sub_2607DCF28(a2, v7);
        __break(1u);
        JUMPOUT(0x2607F49C0);
      }
      uint64_t __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
      BOOL v10 = __s1 == 0;
      break;
  }
  *a4 = v10;
  return __s1;
}

uint64_t sub_2607F49D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_26087AED0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_26087AEF0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_26087AEE0();
  sub_2607F47A8(v11, a4, a5, &v13);
  sub_2607DCF28(a4, a5);
  if (!v5) {
    return v13;
  }
  return v12;
}

uint64_t sub_2607F4A9C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result = sub_26087AED0();
  uint64_t v8 = (char *)result;
  if (result)
  {
    uint64_t result = sub_26087AEF0();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  int64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = sub_26087AEE0();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = result;
  }
  return memcmp(a4, v8, v11) == 0;
}

double sub_2607F4B3C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2607F3DA0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4740);
    sub_26087B950();
    uint64_t v8 = *(void *)(v14 + 48);
    uint64_t v9 = type metadata accessor for EventReportSenderID();
    sub_2607F6C40(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v6);
    int64_t v10 = (_OWORD *)(*(void *)(v14 + 56) + 80 * v6);
    long long v11 = v10[1];
    *a2 = *v10;
    a2[1] = v11;
    long long v12 = v10[3];
    a2[2] = v10[2];
    a2[3] = v12;
    a2[4] = v10[4];
    sub_2607F72FC(&qword_26A8B4738, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
    sub_26087B970();
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = xmmword_26087D470;
    a2[1] = 0u;
    a2[2] = 0u;
    a2[3] = 0u;
    a2[4] = 0u;
  }
  return result;
}

double sub_2607F4CD8@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_2607F3E64();
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4768);
    sub_26087B950();
    swift_bridgeObjectRelease();
    sub_2607F7344((_OWORD *)(*(void *)(v8 + 56) + 32 * v4), a1);
    sub_26087B970();
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_2607F4E10(unsigned int a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2607F3F14(a1);
  if ((v4 & 1) == 0) {
    return 3;
  }
  unint64_t v5 = v3;
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4770);
  OUTLINED_FUNCTION_103();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v8 + 56) + v5);
  sub_2607DED54();
  sub_26087B970();
  *uint64_t v2 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2607F4EBC(unsigned int a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2607F3F88(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4760);
  OUTLINED_FUNCTION_103();
  uint64_t v6 = *(void *)(*(void *)(v8 + 56) + 8 * v5);
  sub_26087B140();
  sub_26087B970();
  *uint64_t v2 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2607F4F6C(_OWORD *a1, uint64_t a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_2607F51D8(a1, a2);
  *uint64_t v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2607F4FEC(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_79();
  uint64_t v6 = sub_2607F5358(a1, a2, a3);
  OUTLINED_FUNCTION_29_0((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2607F5064()
{
  OUTLINED_FUNCTION_102();
  uint64_t v0 = (long long *)OUTLINED_FUNCTION_35();
  uint64_t v2 = sub_2607F55B0(v0, v1);
  OUTLINED_FUNCTION_29_0(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2607F50B0(char a1, unsigned int a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_79();
  unint64_t v4 = sub_2607F5824(a1, a2);
  OUTLINED_FUNCTION_29_0(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2607F5118()
{
  OUTLINED_FUNCTION_102();
  uint64_t v0 = OUTLINED_FUNCTION_35();
  unint64_t v2 = sub_2607F592C(v0, v1);
  OUTLINED_FUNCTION_29_0(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2607F5164()
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  uint64_t v1 = OUTLINED_FUNCTION_107();
  uint64_t v3 = sub_2607F5A3C(v1, v2);
  OUTLINED_FUNCTION_29_0(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t *sub_2607F51D8(_OWORD *a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)*v2;
  unint64_t v10 = sub_2607F3DA0(a2);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4740);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v14 = sub_2607F3DA0(a2);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_11:
    double result = (uint64_t *)sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v12 = v14;
LABEL_5:
  uint64_t v16 = *v3;
  if (v13)
  {
    char v17 = (uint64_t *)(v16[7] + 80 * v12);
    return sub_2607F73B4(a1, v17);
  }
  else
  {
    sub_2607F6B78(a2, (uint64_t)v8);
    return (uint64_t *)sub_2607F5C44(v12, (uint64_t)v8, a1, v16);
  }
}

_OWORD *sub_2607F5358(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_2607F3E64();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4768);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_2607F3E64();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    double result = (_OWORD *)sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  char v15 = *v4;
  if (v12)
  {
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_2607F7344(a1, v16);
  }
  else
  {
    sub_2607F5CF4(v11, a2, a3, a1, v15);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

unint64_t sub_2607F5498(uint64_t a1, uint64_t a2)
{
  sub_2607F3ED0(a2);
  OUTLINED_FUNCTION_101();
  if (v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v8 = v5;
  char v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4778);
  unint64_t result = sub_26087B950();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_2607F3ED0(a2);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_11:
    unint64_t result = sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v8 = result;
LABEL_5:
  uint64_t v12 = *v2;
  if (v9)
  {
    uint64_t v13 = *(void *)(v12 + 56) + 56 * v8;
    long long v14 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)a1;
    *(_OWORD *)(v13 + 16) = v14;
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(a1 + 32);
    *(_DWORD *)(v13 + 47) = *(_DWORD *)(a1 + 47);
  }
  else
  {
    return sub_2607F5D60(v8, a2, a1, v12);
  }
  return result;
}

uint64_t sub_2607F55B0(long long *a1, char a2)
{
  uint64_t v3 = (void **)v2;
  char v6 = (void *)*v2;
  unint64_t v7 = sub_2607F3D3C(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B52F0);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v11 = sub_2607F3D3C(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_13:
    uint64_t result = sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v9 = v11;
LABEL_5:
  uint64_t v13 = *v3;
  if (v10)
  {
    uint64_t v14 = v13[7] + 40 * v9;
    __swift_destroy_boxed_opaque_existential_1(v14);
    return sub_2607E2B70(a1, v14);
  }
  else
  {
    return sub_2607F5DAC(v9, a2, a1, v13);
  }
}

uint64_t sub_2607F56DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2607F3DA0(a2);
  OUTLINED_FUNCTION_101();
  if (v10)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v11 = v8;
  char v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4780);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_2607F3DA0(a2);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_10:
    uint64_t result = sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  char v15 = *v2;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t result = swift_release();
    *(void *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_2607F6B78(a2, (uint64_t)v7);
    return sub_2607F5E18(v11, (uint64_t)v7, a1, v15);
  }
  return result;
}

unint64_t sub_2607F5824(char a1, unsigned int a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = (void *)*v2;
  unint64_t v7 = sub_2607F3F14(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4770);
  unint64_t result = sub_26087B950();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_2607F3F14(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_11:
    unint64_t result = sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
LABEL_5:
  unint64_t v13 = *v3;
  if (v10)
  {
    *(unsigned char *)(v13[7] + v9) = a1;
  }
  else
  {
    return sub_2607F5EB8(v9, a2, a1, v13);
  }
  return result;
}

unint64_t sub_2607F592C(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = (void *)*v2;
  unint64_t v7 = sub_2607F3F88(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4760);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v11 = sub_2607F3F88(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_11:
    unint64_t result = sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v9 = v11;
LABEL_5:
  unint64_t v13 = *v3;
  if (v10)
  {
    uint64_t v14 = v13[7];
    unint64_t result = swift_release();
    *(void *)(v14 + 8 * v9) = a1;
  }
  else
  {
    return sub_2607F5EFC(v9, a2, a1, v13);
  }
  return result;
}

uint64_t sub_2607F5A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = sub_26087B0F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = (void *)*v2;
  unint64_t v11 = sub_2607F3FD0(a2);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v13 = v11;
  char v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4748);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v15 = sub_2607F3FD0(a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    uint64_t result = sub_26087BC30();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  char v17 = *v3;
  if (v14)
  {
    uint64_t v18 = v17[7];
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v18 + 8 * v13) = a1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    return sub_2607F5F40(v13, (uint64_t)v9, a1, v17);
  }
  return result;
}

unint64_t sub_2607F5BCC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = OUTLINED_FUNCTION_86(a1, a2, a3, a4);
  *(unsigned char *)(v7 + result) = v6;
  *(void *)(*(void *)(v5 + 56) + 8 * result) = v8;
  uint64_t v9 = *(void *)(v5 + 16);
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v11;
  }
  return result;
}

unint64_t sub_2607F5BFC(unint64_t result, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a5[6] + result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

void *sub_2607F5C44(unint64_t a1, uint64_t a2, const void *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for EventReportSenderID();
  sub_2607F6BDC(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1);
  unint64_t result = memcpy((void *)(a4[7] + 80 * a1), a3, 0x50uLL);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_2607F5CF4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_2607F7344(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_2607F5D60(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = OUTLINED_FUNCTION_86(a1, a2, a3, a4);
  *(void *)(v7 + 8 * result) = v6;
  uint64_t v8 = *(void *)(v5 + 56) + 56 * result;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_DWORD *)(v8 + 47) = *(_DWORD *)(v9 + 47);
  uint64_t v11 = *(void *)(v5 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v13;
  }
  return result;
}

uint64_t sub_2607F5DAC(unint64_t a1, char a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_2607E2B70(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_2607F5E18(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for EventReportSenderID();
  uint64_t result = sub_2607F6BDC(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_2607F5EB8(unint64_t result, int a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_2607F5EFC(unint64_t result, int a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_2607F5F40(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_26087B0F0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_2607F5FFC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_2607F6034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventReportSenderID();
  uint64_t v48 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v57 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4790);
  uint64_t result = sub_26087B9E0();
  uint64_t v5 = (void *)result;
  int64_t v6 = 0;
  uint64_t v49 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v44 = v8;
  int64_t v45 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v46 = result + 64;
  uint64_t v47 = (void *)result;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v50 = (v12 - 1) & v12;
  int64_t v51 = v6;
  for (unint64_t i = __clz(__rbit64(v12)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    unint64_t v18 = *(void *)(v48 + 72) * i;
    sub_2607F6B78(*(void *)(v49 + 48) + v18, v57);
    if (qword_26A8B44C0 != -1) {
      swift_once();
    }
    long long v56 = xmmword_26A8B4820;
    uint64_t v19 = HIDReportDescriptor.reportBitCount(for:)(1u);
    uint64_t v20 = HIDReport.init(bitCount:id:)(v19, 1);
    uint64_t v54 = v21;
    uint64_t v55 = v20;
    if (qword_26A8B44D8 != -1) {
      swift_once();
    }
    long long v56 = xmmword_26A8B4A68;
    uint64_t v22 = HIDReportDescriptor.reportBitCount(for:)(2u);
    uint64_t v23 = HIDReport.init(bitCount:id:)(v22, 2);
    uint64_t v52 = v24;
    uint64_t v53 = v23;
    if (qword_26A8B44C8 != -1) {
      swift_once();
    }
    long long v56 = xmmword_26A8B4870;
    uint64_t v25 = HIDReportDescriptor.reportBitCount(for:)(3u);
    uint64_t v26 = HIDReport.init(bitCount:id:)(v25, 3);
    uint64_t v28 = v27;
    if (qword_26A8B44B0 != -1) {
      swift_once();
    }
    long long v56 = xmmword_26A8B47C0;
    uint64_t v29 = HIDReportDescriptor.reportBitCount(for:)(4u);
    uint64_t v30 = HIDReport.init(bitCount:id:)(v29, 4);
    uint64_t v32 = v31;
    if (qword_26A8B4580 != -1) {
      swift_once();
    }
    long long v56 = xmmword_26A8B57B8;
    uint64_t v33 = HIDReportDescriptor.reportBitCount(for:)(5u);
    uint64_t v34 = HIDReport.init(bitCount:id:)(v33, 5);
    uint64_t v36 = v35;
    uint64_t v5 = v47;
    *(void *)(v46 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = sub_2607F6BDC(v57, v5[6] + v18);
    uint64_t v37 = (uint64_t *)(v5[7] + 80 * i);
    uint64_t v38 = v54;
    *uint64_t v37 = v55;
    v37[1] = v38;
    uint64_t v39 = v52;
    v37[2] = v53;
    v37[3] = v39;
    v37[4] = v26;
    v37[5] = v28;
    v37[6] = v30;
    v37[7] = v32;
    v37[8] = v34;
    v37[9] = v36;
    uint64_t v40 = v5[2];
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v5[2] = v42;
    unint64_t v12 = v50;
    int64_t v6 = v51;
    if (v50) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_34;
    }
    if (v14 >= v45) {
      return (uint64_t)v5;
    }
    unint64_t v15 = *(void *)(v44 + 8 * v14);
    int64_t v16 = v6 + 1;
    if (!v15)
    {
      int64_t v16 = v6 + 2;
      if (v6 + 2 >= v45) {
        return (uint64_t)v5;
      }
      unint64_t v15 = *(void *)(v44 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v6 + 3;
        if (v6 + 3 >= v45) {
          return (uint64_t)v5;
        }
        unint64_t v15 = *(void *)(v44 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v50 = (v15 - 1) & v15;
    int64_t v51 = v16;
  }
  uint64_t v17 = v6 + 4;
  if (v6 + 4 >= v45) {
    return (uint64_t)v5;
  }
  unint64_t v15 = *(void *)(v44 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v45) {
      return (uint64_t)v5;
    }
    unint64_t v15 = *(void *)(v44 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2607F648C(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v9 = (void *)((char *)v14 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_260869EE8(0, v8, v9);
    sub_2607F6610((uint64_t)v9, v8, v6, a2, a3);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    sub_260869EE8(0, v8, v11);
    sub_2607F6610((uint64_t)v11, v8, v6, a2, a3);
    a3 = v12;
    MEMORY[0x26121DB90](v11, -1, -1);
  }
  return a3;
}

void sub_2607F6610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v45 = a2;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v46 = a1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4788);
  MEMORY[0x270FA5388](v51);
  uint64_t v63 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventReportSenderID();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v62 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v55 = a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v47 = 0;
  uint64_t v48 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v49 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      uint64_t v60 = (v13 - 1) & v13;
      int64_t v61 = v9;
      unint64_t v14 = __clz(__rbit64(v13)) | (v9 << 6);
      goto LABEL_20;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v49) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v48 + 8 * v15);
    int64_t v17 = v9 + 1;
    if (!v16)
    {
      int64_t v17 = v9 + 2;
      if (v9 + 2 >= v49) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v48 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v9 + 3;
        if (v9 + 3 >= v49) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v48 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v60 = (v16 - 1) & v16;
    int64_t v61 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_20:
    uint64_t v19 = v55;
    uint64_t v20 = v62;
    sub_2607F6B78(*(void *)(v55 + 48) + *(void *)(v50 + 72) * v14, v62);
    uint64_t v21 = *(void *)(v19 + 56);
    unint64_t v54 = v14;
    uint64_t v22 = (uint64_t *)(v21 + 80 * v14);
    uint64_t v23 = *v22;
    unint64_t v56 = v22[1];
    uint64_t v25 = v22[2];
    unint64_t v24 = v22[3];
    uint64_t v27 = v22[4];
    unint64_t v26 = v22[5];
    uint64_t v29 = v22[6];
    unint64_t v28 = v22[7];
    uint64_t v31 = v22[8];
    unint64_t v30 = v22[9];
    uint64_t v65 = v31;
    uint64_t v64 = v30;
    uint64_t v32 = v20;
    uint64_t v33 = v63;
    sub_2607F6B78(v32, v63);
    uint64_t v34 = (uint64_t *)(v33 + *(int *)(v51 + 48));
    uint64_t v57 = v27;
    uint64_t v58 = v23;
    unint64_t v35 = v56;
    *uint64_t v34 = v23;
    v34[1] = v35;
    v34[2] = v25;
    v34[3] = v24;
    v34[4] = v27;
    v34[5] = v26;
    v34[6] = v29;
    v34[7] = v28;
    v34[8] = v31;
    unint64_t v36 = v64;
    v34[9] = v64;
    sub_2607DCED0(v23, v35);
    uint64_t v37 = v25;
    uint64_t v38 = v25;
    uint64_t v59 = v25;
    unint64_t v39 = v24;
    sub_2607DCED0(v37, v24);
    sub_2607DCED0(v27, v26);
    sub_2607DCED0(v29, v28);
    uint64_t v40 = v65;
    sub_2607DCED0(v65, v36);
    uint64_t v41 = v58;
    sub_2607DCED0(v58, v35);
    sub_2607DCED0(v38, v39);
    uint64_t v42 = v57;
    sub_2607DCED0(v57, v26);
    sub_2607DCED0(v29, v28);
    sub_2607DCED0(v40, v36);
    uint64_t v43 = v63;
    LOBYTE(v36) = v52(v63);
    sub_2607F7354(v43);
    sub_2607DCF28(v41, v35);
    sub_2607DCF28(v59, v39);
    sub_2607DCF28(v42, v26);
    sub_2607DCF28(v29, v28);
    sub_2607DCF28(v65, v64);
    sub_2607F6C40(v62);
    unint64_t v13 = v60;
    int64_t v9 = v61;
    if ((v36 & 1) == 0)
    {
      *(void *)(v46 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
      if (__OFADD__(v47++, 1))
      {
        __break(1u);
LABEL_24:
        sub_26081007C();
        return;
      }
    }
  }
  uint64_t v18 = v9 + 4;
  if (v9 + 4 >= v49) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v48 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v9 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v49) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v48 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_2607F6A24(uint64_t a1, unint64_t a2)
{
  int v2 = 1;
  unsigned __int8 v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)a1;
      if ((int)a1 != a1 >> 32) {
        goto LABEL_15;
      }
      unsigned __int8 v3 = 0;
      return v3 | (v2 << 8);
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      if (v4 != v5)
      {
        if (a2 >> 62 == 2)
        {
          if (v4 >= v5) {
            goto LABEL_25;
          }
          uint64_t v6 = sub_26087AED0();
          if (!v6) {
            goto LABEL_27;
          }
          uint64_t v7 = v6;
          a1 = sub_26087AEF0();
          uint64_t v8 = v4 - a1;
          if (!__OFSUB__(v4, a1)) {
            goto LABEL_22;
          }
          __break(1u);
        }
LABEL_15:
        if (v4 < (int)a1 || v4 >= a1 >> 32)
        {
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
        }
        uint64_t v10 = sub_26087AED0();
        if (v10)
        {
          uint64_t v7 = v10;
          uint64_t v11 = sub_26087AEF0();
          uint64_t v8 = v4 - v11;
          if (!__OFSUB__(v4, v11))
          {
LABEL_22:
            int v2 = 0;
            unsigned __int8 v3 = *(unsigned char *)(v7 + v8);
            return v3 | (v2 << 8);
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x2607F6B68);
      }
      unsigned __int8 v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      int v2 = (a2 & 0xFF000000000000) == 0;
      if ((a2 & 0xFF000000000000) != 0) {
        unsigned __int8 v3 = a1;
      }
      else {
        unsigned __int8 v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_2607F6B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventReportSenderID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2607F6BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventReportSenderID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2607F6C40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventReportSenderID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2607F6C9C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10)
{
  if (a2 >> 60 != 15)
  {
    sub_2607DCF28(result, a2);
    sub_2607DCF28(a3, a4);
    sub_2607DCF28(a5, a6);
    sub_2607DCF28(a7, a8);
    return sub_2607DCF28(a9, a10);
  }
  return result;
}

uint64_t sub_2607F6D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2607E2A1C(a1 + 8, a2);
}

uint64_t dispatch thunk of EventReportDispatcherProtocol.sendReport(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t destroy for EventReportAccumulator(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for EventReportAccumulator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for EventReportAccumulator(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EventReportAccumulator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventReportAccumulator(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventReportAccumulator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventReportAccumulator()
{
  return &type metadata for EventReportAccumulator;
}

uint64_t initializeBufferWithCopyOfBuffer for EventReportAccumulator.Value(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for EventReportAccumulator.Value(uint64_t *a1)
{
  sub_2607DCF28(*a1, a1[1]);
  sub_2607DCF28(a1[2], a1[3]);
  sub_2607DCF28(a1[4], a1[5]);
  sub_2607DCF28(a1[6], a1[7]);
  uint64_t v2 = a1[8];
  unint64_t v3 = a1[9];
  return sub_2607DCF28(v2, v3);
}

uint64_t *initializeWithCopy for EventReportAccumulator.Value(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2607DCED0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_2607DCED0(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_2607DCED0(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  uint64_t v10 = a2[6];
  unint64_t v11 = a2[7];
  sub_2607DCED0(v10, v11);
  a1[6] = v10;
  a1[7] = v11;
  uint64_t v13 = a2[8];
  unint64_t v12 = a2[9];
  sub_2607DCED0(v13, v12);
  a1[8] = v13;
  a1[9] = v12;
  return a1;
}

uint64_t *assignWithCopy for EventReportAccumulator.Value(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2607DCED0(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2607DCF28(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_2607DCED0(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_2607DCF28(v10, v11);
  uint64_t v12 = a2[4];
  unint64_t v13 = a2[5];
  sub_2607DCED0(v12, v13);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_2607DCF28(v14, v15);
  uint64_t v16 = a2[6];
  unint64_t v17 = a2[7];
  sub_2607DCED0(v16, v17);
  uint64_t v18 = a1[6];
  unint64_t v19 = a1[7];
  a1[6] = v16;
  a1[7] = v17;
  sub_2607DCF28(v18, v19);
  uint64_t v21 = a2[8];
  unint64_t v20 = a2[9];
  sub_2607DCED0(v21, v20);
  uint64_t v22 = a1[8];
  unint64_t v23 = a1[9];
  a1[8] = v21;
  a1[9] = v20;
  sub_2607DCF28(v22, v23);
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t *assignWithTake for EventReportAccumulator.Value(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2607DCF28(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_2607DCF28(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_2607DCF28(v8, v9);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  sub_2607DCF28(v10, v11);
  uint64_t v12 = a1[8];
  unint64_t v13 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  sub_2607DCF28(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventReportAccumulator.Value(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 80))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for EventReportAccumulator.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventReportAccumulator.Value()
{
  return &type metadata for EventReportAccumulator.Value;
}

ValueMetadata *type metadata accessor for NullTarget()
{
  return &type metadata for NullTarget;
}

uint64_t sub_2607F72FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_2607F7344(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2607F7354(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_2607F73B4(_OWORD *a1, uint64_t *a2)
{
  return a2;
}

void OUTLINED_FUNCTION_0_7()
{
  *(unsigned char *)(v0 - 176) = *(void *)(v0 - 456);
  *(unsigned char *)(v0 - 175) = *(void *)(v0 - 728);
  *(unsigned char *)(v0 - 174) = *(void *)(v0 - 720);
  *(unsigned char *)(v0 - 173) = *(void *)(v0 - 712);
  *(unsigned char *)(v0 - 172) = *(void *)(v0 - 736);
  *(unsigned char *)(v0 - 171) = *(void *)(v0 - 704);
  *(unsigned char *)(v0 - 170) = *(void *)(v0 - 696);
  *(unsigned char *)(v0 - 169) = *(void *)(v0 - 688);
  *(unsigned char *)(v0 - 168) = *(void *)(v0 - 504);
  *(unsigned char *)(v0 - 167) = *(void *)(v0 - 680);
  *(unsigned char *)(v0 - 166) = *(void *)(v0 - 672);
  *(unsigned char *)(v0 - 165) = *(void *)(v0 - 664);
  *(unsigned char *)(v0 - 164) = *(void *)(v0 - 656);
  *(unsigned char *)(v0 - 163) = *(void *)(v0 - 648);
}

uint64_t OUTLINED_FUNCTION_1_7@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, char a5@<W8>)
{
  *(unsigned char *)(v11 - 198) = *(void *)(v11 - 480);
  *(unsigned char *)(v11 - 197) = a4;
  *(unsigned char *)(v11 - 196) = a3;
  *(unsigned char *)(v11 - 195) = a2;
  *(unsigned char *)(v11 - 194) = *(void *)(v11 - 848);
  *(unsigned char *)(v11 - 193) = a1;
  *(unsigned char *)(v11 - 192) = v10;
  *(unsigned char *)(v11 - 191) = v9;
  *(unsigned char *)(v11 - 190) = *(void *)(v11 - 520);
  *(unsigned char *)(v11 - 189) = v8;
  *(unsigned char *)(v11 - 188) = v7;
  *(unsigned char *)(v11 - 187) = v6;
  *(unsigned char *)(v11 - 186) = v5;
  *(unsigned char *)(v11 - 185) = a5;
  size_t v13 = *(void *)(v11 - 376);
  return memcmp((const void *)(v11 - 176), (const void *)(v11 - 198), v13);
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_6(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v10 - 728) = a7;
  *(void *)(v10 - 720) = a6;
  *(void *)(v10 - 712) = a5;
  *(void *)(v10 - 704) = a4;
  *(void *)(v10 - 696) = a3;
  *(void *)(v10 - 688) = a2;
  *(void *)(v10 - 680) = result;
  *(void *)(v10 - 672) = v9;
  *(void *)(v10 - 664) = v8;
  *(void *)(v10 - 656) = v7;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return sub_2607DCED0(v0, v1);
}

void *OUTLINED_FUNCTION_5_5()
{
  return __swift_project_boxed_opaque_existential_1(*(void **)(v0 - 248), *(void *)(*(void *)(v0 - 248) + 24));
}

uint64_t OUTLINED_FUNCTION_6_5(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  return sub_2607F4A9C(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_8_5()
{
  *(void *)(v1 - 320) = v0;
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v5 - 189) = v4;
  *(unsigned char *)(v5 - 188) = v3;
  *(unsigned char *)(v5 - 187) = v2;
  *(unsigned char *)(v5 - 186) = v1;
  *(unsigned char *)(v5 - 185) = a1;
  return v5 - 176;
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return sub_2607DCF28(v0, v1);
}

void *OUTLINED_FUNCTION_12_4()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_13_4(uint64_t a1)
{
  unint64_t v3 = *(void *)(v1 - 264);
  return sub_2607DCED0(a1, v3);
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  uint64_t v2 = *(void *)(v0 - 464);
  unint64_t v3 = *(void *)(v0 - 288);
  return sub_2607DCED0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_18_4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2607F49D0(a1, a2, a3, v3, v4);
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  unint64_t v3 = *(void *)(v1 - 528);
  return sub_2607DCED0(v0, v3);
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_25_0@<X0>(int64_t a1@<X0>, uint64_t a2@<X8>)
{
  int64_t v5 = *(void *)(a2 - 256);
  if (a1 >= v5) {
    size_t v6 = v5;
  }
  else {
    size_t v6 = a1;
  }
  return memcmp((const void *)(v3 - 176), v2, v6);
}

uint64_t OUTLINED_FUNCTION_26_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return a23;
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_29_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_30()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t OUTLINED_FUNCTION_32()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_33()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_34()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_35()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_36()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_37()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_42()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_43()
{
  unint64_t v3 = *(void *)(v1 - 520);
  return sub_2607DCED0(v0, v3);
}

uint64_t OUTLINED_FUNCTION_44()
{
  unint64_t v3 = *(void *)(v1 - 512);
  return sub_2607DCED0(v0, v3);
}

uint64_t OUTLINED_FUNCTION_45()
{
  return *(void *)(v0 - 456);
}

uint64_t OUTLINED_FUNCTION_46()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_47()
{
  return sub_2607DCF28(v0, v1);
}

void OUTLINED_FUNCTION_48()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_49()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_50()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_51()
{
  *(void *)(v2 - 320) = v0;
  unint64_t v4 = *(void *)(v2 - 504);
  return sub_2607DCF28(v1, v4);
}

uint64_t OUTLINED_FUNCTION_53()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_54()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_56()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_58()
{
  uint64_t v2 = *(void *)(v0 - 464);
  unint64_t v3 = *(void *)(v0 - 288);
  return sub_2607DCED0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_59()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_60()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_61()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_62()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_63(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return static EventReportAccumulator.Value.== infix(_:_:)((void *)(v26 - 168), &a26);
}

uint64_t OUTLINED_FUNCTION_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_67()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_69()
{
  *(void *)(v0 - 170) = 0;
  *(void *)(v0 - 176) = 0;
}

uint64_t OUTLINED_FUNCTION_71()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_72()
{
  return sub_2607DCF28(v1, v0);
}

void OUTLINED_FUNCTION_73(uint64_t a1, char a2, char a3, char a4)
{
  *(unsigned char *)(v5 - 198) = *(void *)(v4 - 256);
  *(unsigned char *)(v5 - 197) = a4;
  *(unsigned char *)(v5 - 196) = a3;
  *(unsigned char *)(v5 - 195) = a2;
}

uint64_t OUTLINED_FUNCTION_74()
{
  return sub_26087BCA0();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_76()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_77()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_78()
{
  return v0;
}

void OUTLINED_FUNCTION_79()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_80(int64_t a1)
{
  if (a1 >= v1) {
    size_t v5 = v1;
  }
  else {
    size_t v5 = a1;
  }
  return memcmp((const void *)(v3 - 176), v2, v5);
}

char *OUTLINED_FUNCTION_81(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  return &a26;
}

uint64_t OUTLINED_FUNCTION_82()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_84()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_85()
{
  return sub_2607DCF28(v1, v0);
}

unint64_t OUTLINED_FUNCTION_86(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_87()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_88()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_89()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_90()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_92(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2607F49D0(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_93()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_94()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_95()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_96()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_97()
{
  size_t v3 = *(void *)(v1 - 344);
  return memcmp(v0, (const void *)(v1 - 176), v3);
}

uint64_t OUTLINED_FUNCTION_98()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_99()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_100()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_102()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_103()
{
  return sub_26087B950();
}

uint64_t OUTLINED_FUNCTION_104()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_105()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_106()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_107()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_108()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t (*HIDReport.subscript.modify(void *a1, uint64_t a2))(uint64_t a1)
{
  OUTLINED_FUNCTION_0_8(a1, a2);
  *(unsigned char *)(v2 + 16) = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_2607F7FA0;
}

uint64_t sub_2607F7FA0(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 16), *(void *)a1);
}

#error "2607F7FE4: call analysis failed (funcsize=16)"

uint64_t sub_2607F8014(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcis_0(*(unsigned __int16 *)(a1 + 16), *(void *)a1);
}

#error "2607F8058: call analysis failed (funcsize=16)"

void sub_2607F8088(uint64_t a1)
{
}

uint64_t (*HIDReport.subscript.modify(void *a1, uint64_t a2))(void *a1)
{
  a1[1] = a2;
  a1[2] = v2;
  *a1 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(a2, *v2, v2[1]);
  return sub_2607F810C;
}

uint64_t sub_2607F810C(void *a1)
{
  return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(*a1, a1[1]);
}

uint64_t OUTLINED_FUNCTION_0_8(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = v2;
  return a2;
}

uint64_t static AppleVendorTopCaseReport.initialReportBitCount.getter()
{
  return 40;
}

uint64_t static AppleVendorTopCaseReport.reportID.getter()
{
  return 4;
}

uint64_t sub_2607F8160()
{
  uint64_t result = sub_2607F8184();
  *(void *)&xmmword_26A8B47C0 = result;
  *((void *)&xmmword_26A8B47C0 + 1) = v1;
  return result;
}

uint64_t sub_2607F8184()
{
  LOBYTE(v60[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v60, 0xFFuLL);
  unint64_t v44 = v1;
  uint64_t v45 = v0;
  LOBYTE(v60[0]) = 18;
  uint64_t v2 = sub_2608155C0((char *)v60, 3uLL);
  unint64_t v4 = v3;
  LOBYTE(v60[0]) = 19;
  uint64_t v5 = sub_2608155C0((char *)v60, 0xC0uLL);
  unint64_t v7 = v6;
  LOBYTE(v60[0]) = 14;
  uint64_t v8 = sub_260815298((char *)v60, 4);
  unint64_t v50 = v9;
  LOBYTE(v60[0]) = 12;
  uint64_t v10 = sub_2608155C0((char *)v60, 8uLL);
  unint64_t v48 = v11;
  uint64_t v49 = v10;
  LOBYTE(v60[0]) = 6;
  uint64_t v12 = sub_260815298((char *)v60, 0);
  unint64_t v46 = v13;
  uint64_t v47 = v12;
  LOBYTE(v60[0]) = 7;
  uint64_t v14 = sub_260815298((char *)v60, 255);
  unint64_t v41 = v15;
  uint64_t v42 = v14;
  LOBYTE(v55[0]) = 0;
  __int16 v59 = 0;
  __int16 v58 = 0;
  __int16 v57 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v55, (unsigned char *)&v59 + 1, &v59, (unsigned char *)&v58 + 1, &v58, (unsigned char *)&v57 + 1, &v57, v60);
  LOBYTE(v55[0]) = 5;
  uint64_t v34 = sub_2608155C0((char *)v55, 0xFF00uLL);
  unint64_t v54 = v16;
  LOBYTE(v55[0]) = 17;
  uint64_t v17 = sub_2608155C0((char *)v55, 0x102uLL);
  unint64_t v52 = v18;
  uint64_t v53 = v17;
  LOBYTE(v55[0]) = 6;
  uint64_t v51 = sub_260815298((char *)v55, 0);
  unint64_t v43 = v19;
  LOBYTE(v55[0]) = 7;
  uint64_t v20 = sub_260815298((char *)v55, 255);
  unint64_t v39 = v21;
  uint64_t v40 = v20;
  LOBYTE(v55[0]) = 12;
  uint64_t v22 = sub_2608155C0((char *)v55, 8uLL);
  unint64_t v37 = v23;
  uint64_t v38 = v22;
  LOBYTE(v55[0]) = 14;
  uint64_t v24 = sub_260815298((char *)v55, 8);
  unint64_t v35 = v25;
  uint64_t v36 = v24;
  __int16 v59 = 1;
  __int16 v58 = 0;
  __int16 v57 = 0;
  char v56 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v59 + 1, &v59, (unsigned char *)&v58 + 1, &v58, (unsigned char *)&v57 + 1, &v57, &v56, v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D530;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 4;
  *(void *)(inited + 96) = &type metadata for UsagePage;
  *(void *)(inited + 104) = &protocol witness table for UsagePage;
  *(void *)(inited + 72) = v45;
  *(void *)(inited + 80) = v44;
  *(void *)(inited + 136) = &type metadata for UsageMinimum;
  *(void *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(void *)(inited + 112) = v2;
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 176) = &type metadata for UsageMaximum;
  *(void *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(void *)(inited + 152) = v5;
  *(void *)(inited + 160) = v7;
  *(void *)(inited + 216) = &type metadata for ReportCount;
  *(void *)(inited + 224) = &protocol witness table for ReportCount;
  *(void *)(inited + 416) = &type metadata for UsagePage;
  *(void *)(inited + 424) = &protocol witness table for UsagePage;
  *(void *)(inited + 456) = &type metadata for Usage;
  *(void *)(inited + 192) = v8;
  *(void *)(inited + 200) = v50;
  *(void *)(inited + 464) = &protocol witness table for Usage;
  *(void *)(inited + 296) = &type metadata for LogicalMinimum;
  *(void *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 496) = &type metadata for LogicalMinimum;
  *(void *)(inited + 504) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 536) = &type metadata for LogicalMaximum;
  *(void *)(inited + 336) = &type metadata for LogicalMaximum;
  *(void *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 544) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 256) = &type metadata for ReportSize;
  *(void *)(inited + 264) = &protocol witness table for ReportSize;
  *(void *)(inited + 232) = v49;
  *(void *)(inited + 240) = v48;
  *(void *)(inited + 272) = v47;
  *(void *)(inited + 280) = v46;
  *(void *)(inited + 312) = v42;
  *(void *)(inited + 320) = v41;
  *(void *)(inited + 576) = &type metadata for ReportSize;
  *(void *)(inited + 584) = &protocol witness table for ReportSize;
  uint64_t v32 = v60[0];
  uint64_t v27 = v60[0];
  unint64_t v33 = v60[1];
  *(void *)(inited + 616) = &type metadata for ReportCount;
  *(void *)(inited + 624) = &protocol witness table for ReportCount;
  *(void *)(inited + 376) = &type metadata for Input;
  *(void *)(inited + 384) = &protocol witness table for Input;
  *(void *)(inited + 352) = v27;
  *(void *)(inited + 360) = v33;
  *(void *)(inited + 392) = v34;
  *(void *)(inited + 400) = v54;
  *(void *)(inited + 432) = v53;
  *(void *)(inited + 440) = v52;
  *(void *)(inited + 472) = v51;
  *(void *)(inited + 480) = v43;
  *(void *)(inited + 512) = v40;
  *(void *)(inited + 520) = v39;
  *(void *)(inited + 552) = v38;
  *(void *)(inited + 560) = v37;
  *(void *)(inited + 592) = v36;
  *(void *)(inited + 600) = v35;
  *(void *)(inited + 656) = &type metadata for Input;
  *(void *)(inited + 664) = &protocol witness table for Input;
  uint64_t v29 = v55[0];
  unint64_t v30 = v55[1];
  *(void *)(inited + 632) = v55[0];
  *(void *)(inited + 640) = v30;
  sub_2607DCED0(v45, v44);
  sub_2607DCED0(v2, v4);
  sub_2607DCED0(v5, v7);
  sub_2607DCED0(v8, v50);
  sub_2607DCED0(v49, v48);
  sub_2607DCED0(v47, v46);
  sub_2607DCED0(v42, v41);
  sub_2607DCED0(v32, v33);
  sub_2607DCED0(v34, v54);
  sub_2607DCED0(v53, v52);
  sub_2607DCED0(v51, v43);
  sub_2607DCED0(v40, v39);
  sub_2607DCED0(v38, v37);
  sub_2607DCED0(v36, v35);
  sub_2607DCED0(v29, v30);
  uint64_t v31 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v29, v30);
  sub_2607DCF28(v36, v35);
  sub_2607DCF28(v38, v37);
  sub_2607DCF28(v40, v39);
  sub_2607DCF28(v51, v43);
  sub_2607DCF28(v53, v52);
  sub_2607DCF28(v34, v54);
  sub_2607DCF28(v32, v33);
  sub_2607DCF28(v42, v41);
  sub_2607DCF28(v47, v46);
  sub_2607DCF28(v49, v48);
  sub_2607DCF28(v8, v50);
  sub_2607DCF28(v5, v7);
  sub_2607DCF28(v2, v4);
  sub_2607DCF28(v45, v44);
  return v31;
}

uint64_t static AppleVendorTopCaseReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44B0 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B47C0;
  *a1 = xmmword_26A8B47C0;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2607F8724()
{
  return 40;
}

unint64_t AppleVendorTopCaseReport.description.getter(uint64_t a1, unint64_t a2)
{
  sub_2607DCED0(a1, a2);
  for (uint64_t i = 0; i < 4; ++i)
  {
    char v5 = sub_2607DB19C(8 * i + 8, a1, a2);
    if ((v5 - 3) < 3u)
    {
      sub_2607DDC34();
      sub_26087B360();
      sub_26087B330();
      sub_26087B330();
      swift_bridgeObjectRelease();
    }
  }
  sub_2607DCF28(a1, a2);
  swift_bridgeObjectRetain();
  sub_26087B330();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ALL;
}

uint64_t AppleVendorTopCaseReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2607DCED0(a1, a2);
}

void AppleVendorTopCaseReport.Iterator.next()()
{
  uint64_t v1 = v0[2];
  if (v1 <= 3)
  {
    uint64_t v2 = *v0;
    unint64_t v3 = v0[1];
    uint64_t v4 = 8 * v1;
    while ((unint64_t)(v1 - 0x1000000000000000) >> 61 == 7)
    {
      if (__OFADD__(v4, 8)) {
        goto LABEL_10;
      }
      unsigned int v5 = (sub_2607DB19C(v4 + 8, v2, v3) - 6);
      v0[2] = ++v1;
      if (v5 <= 0xFC)
      {
        v4 += 8;
        if (v1 != 4) {
          continue;
        }
      }
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

unint64_t sub_2607F8920()
{
  return AppleVendorTopCaseReport.description.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t AppleVendorTopCaseReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t AppleVendorTopCaseReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*AppleVendorTopCaseReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_2607F89B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppleVendorTopCaseReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2607F89DC()
{
  AppleVendorTopCaseReport.Iterator.next()();
  return OUTLINED_FUNCTION_2_0(v0);
}

uint64_t sub_2607F8A04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  AppleVendorTopCaseReport.makeIterator()(v2, v3, a1);
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_2607F8A48()
{
  return j__OUTLINED_FUNCTION_3();
}

uint64_t sub_2607F8A50()
{
  return sub_260835990();
}

uint64_t sub_2607F8A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26083E320(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_2607F8A60()
{
  return sub_26087B3A0();
}

uint64_t AppleVendorTopCaseReport.update(with:)(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_26087B060();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = *v1;
  unint64_t v5 = v1[1];
  uint64_t v6 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)v4;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(v4 + 16);
      break;
    default:
      break;
  }
  uint64_t v7 = v6 + 4;
  if (__OFADD__(v6, 4))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v8 = v6 + 1;
  if (v7 < v6 + 1)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v32 = v6;
  sub_2607DCED0(v4, v5);
  uint64_t v9 = sub_2607F8EFC(v8, v7, v4, v5);
  unint64_t v11 = v10;
  sub_2607DCF28(v4, v5);
  unint64_t v12 = v11 >> 62;
  sub_2607DCED0(v9, v11);
  sub_26087AF90();
  sub_2607DCF28(v9, v11);
  sub_2607F9A2C();
  while (1)
  {
    sub_26087B630();
    int v13 = BYTE1(v33);
    if ((v33 & 0x100) != 0) {
      break;
    }
    if (v33 == a1)
    {
      uint64_t v14 = OUTLINED_FUNCTION_2_7();
      v15(v14);
      goto LABEL_43;
    }
  }
  uint64_t v16 = OUTLINED_FUNCTION_2_7();
  v17(v16);
  uint64_t v18 = 0;
  switch((int)v12)
  {
    case 1:
      uint64_t v18 = (int)v9;
      break;
    case 2:
      uint64_t v18 = *(void *)(v9 + 16);
      break;
    default:
      break;
  }
  uint64_t v31 = v18;
  uint64_t v19 = v18;
  while (2)
  {
    uint64_t v20 = BYTE6(v11);
    switch((int)v12)
    {
      case 0:
        goto LABEL_17;
      case 1:
        uint64_t v20 = v9 >> 32;
        goto LABEL_17;
      case 2:
        uint64_t v20 = *(void *)(v9 + 24);
LABEL_17:
        if (v19 == v20) {
          goto LABEL_42;
        }
        if (v12)
        {
          if (v12 == 1)
          {
            if (v19 < (int)v9 || v19 >= v9 >> 32)
            {
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v22 = sub_26087AED0();
            if (!v22) {
              goto LABEL_57;
            }
            uint64_t v23 = v22;
            uint64_t v24 = sub_26087AEF0();
            uint64_t v25 = v19 - v24;
            if (__OFSUB__(v19, v24)) {
              goto LABEL_49;
            }
          }
          else
          {
            if (v19 < *(void *)(v9 + 16)) {
              goto LABEL_48;
            }
            if (v19 >= *(void *)(v9 + 24)) {
              goto LABEL_50;
            }
            uint64_t v26 = sub_26087AED0();
            if (!v26) {
              goto LABEL_58;
            }
            uint64_t v23 = v26;
            uint64_t v27 = sub_26087AEF0();
            uint64_t v25 = v19 - v27;
            if (__OFSUB__(v19, v27)) {
              goto LABEL_51;
            }
          }
          if (!*(unsigned char *)(v23 + v25)) {
            goto LABEL_38;
          }
LABEL_37:
          ++v19;
          continue;
        }
        if (v19 >= BYTE6(v11)) {
          goto LABEL_47;
        }
        uint64_t v33 = v9;
        __int16 v34 = v11;
        char v35 = BYTE2(v11);
        char v36 = BYTE3(v11);
        char v37 = BYTE4(v11);
        char v38 = BYTE5(v11);
        if (*((unsigned char *)&v33 + v19)) {
          goto LABEL_37;
        }
LABEL_38:
        if (__OFSUB__(v19, v32))
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
        }
        OUTLINED_FUNCTION_2_1();
        if (!v29) {
          goto LABEL_55;
        }
        _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8 * v28);
LABEL_42:
        LOBYTE(a1) = 0;
LABEL_43:
        sub_2607DCF28(v9, v11);
        return a1 | (v13 << 8);
      case 3:
        sub_2607DCF28(v9, v11);
        if (v31) {
          goto LABEL_56;
        }
        LOBYTE(a1) = 0;
        return a1 | (v13 << 8);
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t sub_2607F8EFC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v5 > a2)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v4 <= a2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a2 + 1 < a1)
  {
LABEL_11:
    __break(1u);
    JUMPOUT(0x2607F8F70);
  }
  return sub_26087AFC0();
}

uint64_t AppleVendorTopCaseReport.remove(_:)(unsigned __int8 a1)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  int v27 = a1;
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v4 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)v2;
      break;
    case 2uLL:
      uint64_t v4 = *(void *)(v2 + 16);
      break;
    default:
      break;
  }
  uint64_t v5 = v4 + 4;
  if (__OFADD__(v4, 4))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v6 = v4 + 1;
  if (v5 < v4 + 1)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v26 = v4;
  sub_2607DCED0(v2, v3);
  uint64_t v7 = sub_2607F8EFC(v6, v5, v2, v3);
  unint64_t v9 = v8;
  sub_2607DCF28(v2, v3);
  unint64_t v10 = v9 >> 62;
  uint64_t v11 = 0;
  switch(v9 >> 62)
  {
    case 1uLL:
      uint64_t v11 = (int)v7;
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(v7 + 16);
      break;
    default:
      break;
  }
  uint64_t v25 = v11;
  while (2)
  {
    uint64_t v12 = BYTE6(v9);
    switch((int)v10)
    {
      case 0:
        goto LABEL_13;
      case 1:
        uint64_t v12 = v7 >> 32;
        goto LABEL_13;
      case 2:
        uint64_t v12 = *(void *)(v7 + 24);
LABEL_13:
        int v13 = v11 == v12;
        if (v11 != v12)
        {
          if (v10)
          {
            if (v10 == 1)
            {
              if (v11 < (int)v7 || v11 >= v7 >> 32)
              {
                __break(1u);
LABEL_43:
                __break(1u);
LABEL_44:
                __break(1u);
LABEL_45:
                __break(1u);
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
              uint64_t v15 = sub_26087AED0();
              if (!v15) {
                goto LABEL_53;
              }
              uint64_t v16 = v15;
              uint64_t v17 = sub_26087AEF0();
              uint64_t v18 = v11 - v17;
              if (__OFSUB__(v11, v17)) {
                goto LABEL_45;
              }
            }
            else
            {
              if (v11 < *(void *)(v7 + 16)) {
                goto LABEL_44;
              }
              if (v11 >= *(void *)(v7 + 24)) {
                goto LABEL_46;
              }
              uint64_t v20 = sub_26087AED0();
              if (!v20) {
                goto LABEL_54;
              }
              uint64_t v16 = v20;
              uint64_t v21 = sub_26087AEF0();
              uint64_t v18 = v11 - v21;
              if (__OFSUB__(v11, v21)) {
                goto LABEL_47;
              }
            }
            int v19 = *(unsigned __int8 *)(v16 + v18);
          }
          else
          {
            if (v11 >= BYTE6(v9)) {
              goto LABEL_43;
            }
            uint64_t v28 = v7;
            __int16 v29 = v9;
            char v30 = BYTE2(v9);
            char v31 = BYTE3(v9);
            char v32 = BYTE4(v9);
            char v33 = BYTE5(v9);
            int v19 = *((unsigned __int8 *)&v28 + v11);
          }
          if (v19 == v27)
          {
            if (!__OFSUB__(v11, v26))
            {
              OUTLINED_FUNCTION_2_1();
              if (v23)
              {
                _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(0, 8 * v22);
                goto LABEL_39;
              }
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
            }
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          ++v11;
          continue;
        }
        int v27 = 0;
LABEL_39:
        sub_2607DCF28(v7, v9);
        return v27 | (v13 << 8);
      case 3:
        sub_2607DCF28(v7, v9);
        if (v25) {
          goto LABEL_52;
        }
        int v27 = 0;
        int v13 = 1;
        return v27 | (v13 << 8);
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t sub_2607F931C(char *a1)
{
  return sub_260853618(*a1, *v1, v1[1]);
}

uint64_t sub_2607F9328()
{
  return sub_2607F9370();
}

uint64_t sub_2607F9340(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2607F94E0(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_26082CED4);
}

uint64_t sub_2607F9358()
{
  return sub_2607F9370();
}

uint64_t sub_2607F9370()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = OUTLINED_FUNCTION_1_8();
  v4(v3);
  sub_2607DCF28(v2, v1);
  uint64_t v5 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v5, v6);
}

uint64_t sub_2607F93D4(uint64_t a1, unsigned __int8 *a2)
{
  return sub_260876B0C(a1, *a2);
}

uint64_t sub_2607F93DC(unsigned __int8 *a1)
{
  uint64_t v1 = AppleVendorTopCaseReport.remove(_:)(*a1);
  return OUTLINED_FUNCTION_2_0(v1);
}

uint64_t sub_2607F9408(unsigned __int8 *a1)
{
  uint64_t v1 = AppleVendorTopCaseReport.update(with:)(*a1);
  return OUTLINED_FUNCTION_2_0(v1);
}

uint64_t sub_2607F9434()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  sub_260835D24(v0, v1);
  uint64_t v2 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v2, v3);
}

void sub_2607F9478()
{
}

uint64_t sub_2607F9484()
{
  OUTLINED_FUNCTION_1_8();
  sub_26082D8EC();
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v0, v1);
}

uint64_t sub_2607F94C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2607F94E0(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_260875B60);
}

uint64_t sub_2607F94E0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, uint64_t, unint64_t))
{
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  a4(*a1, a1[1], v5, v6);
  return sub_2607DCF28(v5, v6);
}

void sub_2607F9534()
{
}

uint64_t sub_2607F9544(uint64_t *a1)
{
  return sub_260875F3C(*a1, a1[1], *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_2607F9554()
{
  return sub_26082C91C();
}

uint64_t sub_2607F9564()
{
  return sub_2607E8534();
}

void sub_2607F956C()
{
  sub_2607F9D2C();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_2607F95F0(void *a1)
{
  return sub_26082C9B8(*a1, a1[1]);
}

void sub_2607F95FC(void *a1, void *a2)
{
  static AppleVendorTopCaseReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t AppleVendorTopCaseReport.remoteTimestamp.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x2607F96C4);
      }
      if (v4 >= 13) {
        return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(40, a1, a2);
      }
      else {
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_2607F96D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = AppleVendorTopCaseReport.remoteTimestamp.getter(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_2607F970C()
{
}

void AppleVendorTopCaseReport.remoteTimestamp.setter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)v0[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v5)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x2607F97C4);
      }
      if (v4 >= 13)
      {
        if (v3) {
          uint64_t v2 = 0;
        }
        _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v2, 40);
      }
      return;
  }
}

void (*AppleVendorTopCaseReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *v1;
  char v4 = 1;
  uint64_t v5 = 0;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_10;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v9)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x2607F98A8);
      }
      if (v8 >= 13)
      {
        uint64_t v5 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(40, v6, v7);
        char v4 = 0;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 1;
      }
LABEL_10:
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = v4;
      return sub_2607F98B8;
  }
}

void sub_2607F98B8(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  int v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = (uint64_t *)a1[2];
  if (a2)
  {
    AppleVendorTopCaseReport.remoteTimestamp.setter();
  }
  else
  {
    uint64_t v7 = *v6;
    switch((unint64_t)v6[1] >> 62)
    {
      case 1uLL:
        BOOL v8 = __OFSUB__(HIDWORD(v7), v7);
        uint64_t v9 = (HIDWORD(v7) - v7);
        if (v8) {
          goto LABEL_10;
        }
        goto LABEL_8;
      case 2uLL:
        uint64_t v12 = v7 + 16;
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v12 + 8);
        BOOL v8 = __OFSUB__(v11, v10);
        uint64_t v9 = v11 - v10;
        if (!v8) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        return;
      default:
LABEL_8:
        OUTLINED_FUNCTION_2_1();
        if (!v13)
        {
          __break(1u);
LABEL_10:
          __break(1u);
LABEL_11:
          __break(1u);
        }
        if (v9 >= 13)
        {
          if (v5) {
            uint64_t v4 = 0;
          }
          _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v4, 40);
        }
        break;
    }
  }
}

uint64_t sub_2607F9980()
{
  return AppleVendorTopCaseReport.remoteTimestamp.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_2607F99A0()
{
}

void (*sub_2607F99A8(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = AppleVendorTopCaseReport.remoteTimestamp.getter(*(void *)v1, *(void *)(v1 + 8));
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_2607F99FC;
}

void sub_2607F99FC()
{
}

unint64_t sub_2607F9A2C()
{
  unint64_t result = qword_26A8B47D0;
  if (!qword_26A8B47D0)
  {
    sub_26087B060();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B47D0);
  }
  return result;
}

unint64_t sub_2607F9A80()
{
  unint64_t result = qword_26A8B47D8;
  if (!qword_26A8B47D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B47D8);
  }
  return result;
}

unint64_t sub_2607F9AD0()
{
  unint64_t result = qword_26A8B47E0;
  if (!qword_26A8B47E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B47E0);
  }
  return result;
}

unint64_t sub_2607F9B20()
{
  unint64_t result = qword_26A8B47E8;
  if (!qword_26A8B47E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B47E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorTopCaseReport()
{
  return &type metadata for AppleVendorTopCaseReport;
}

uint64_t *sub_2607F9B88(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2607DCED0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for AppleVendorTopCaseReport.Iterator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_2607DCED0(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_2607DCF28(v6, v7);
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for AppleVendorTopCaseReport.Iterator(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_2607DCF28(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleVendorTopCaseReport.Iterator(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AppleVendorTopCaseReport.Iterator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorTopCaseReport.Iterator()
{
  return &type metadata for AppleVendorTopCaseReport.Iterator;
}

unint64_t sub_2607F9D2C()
{
  unint64_t result = qword_26A8B47F0;
  if (!qword_26A8B47F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B47F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return v0;
}

void TranslationReport.remoteTimestamp.setter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)v0[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v5)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x2607F9E28);
      }
      if (v4 >= 14)
      {
        if (v3) {
          uint64_t v2 = 0;
        }
        _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v2, 48);
      }
      return;
  }
}

uint64_t TranslationReport.phase.setter()
{
  unsigned int v0 = OUTLINED_FUNCTION_1_9();
  uint64_t v1 = OUTLINED_FUNCTION_1_4(v0);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
}

uint64_t TranslationReport.x.setter(double a1)
{
  return sub_2607E260C(16, a1);
}

uint64_t TranslationReport.y.setter(double a1)
{
  return sub_2607E260C(32, a1);
}

double TranslationReport.x.getter(uint64_t a1, uint64_t a2)
{
  return sub_2607DCFD0(16, a1, a2);
}

double TranslationReport.y.getter(uint64_t a1, uint64_t a2)
{
  return sub_2607DCFD0(32, a1, a2);
}

unint64_t TranslationReport.phase.getter(uint64_t a1, unint64_t a2)
{
  return sub_2607DB19C(8, a1, a2) & 0xFFFFFF8F;
}

uint64_t static TranslationReport.initialReportBitCount.getter()
{
  return 48;
}

uint64_t static TranslationReport.reportID.getter()
{
  return 17;
}

uint64_t sub_2607F9ED8()
{
  uint64_t result = sub_2607F9EFC();
  *(void *)&xmmword_26A8B47F8 = result;
  *((void *)&xmmword_26A8B47F8 + 1) = v1;
  return result;
}

uint64_t sub_2607F9EFC()
{
  LOBYTE(v53[0]) = 12;
  uint64_t v42 = sub_2608155C0((char *)v53, 8uLL);
  unint64_t v43 = v0;
  LOBYTE(v53[0]) = 14;
  uint64_t v1 = sub_260815298((char *)v53, 1);
  unint64_t v3 = v2;
  LOBYTE(v48) = 0;
  LOBYTE(v46[0]) = 1;
  __int16 v52 = 0;
  __int16 v51 = 0;
  HIBYTE(v50) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v48, v46, (unsigned char *)&v52 + 1, &v52, (unsigned char *)&v51 + 1, &v51, (unsigned char *)&v50 + 1, v53);
  LOBYTE(v48) = 12;
  uint64_t v4 = sub_2608155C0((char *)&v48, 0x10uLL);
  unint64_t v44 = v5;
  uint64_t v45 = v4;
  LOBYTE(v48) = 14;
  uint64_t v41 = sub_260815298((char *)&v48, 2);
  unint64_t v7 = v6;
  LOBYTE(v46[0]) = 0;
  __int16 v52 = 257;
  __int16 v51 = 0;
  __int16 v50 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v46, (unsigned char *)&v52 + 1, &v52, (unsigned char *)&v51 + 1, &v51, (unsigned char *)&v50 + 1, &v50, &v48);
  LOBYTE(v46[0]) = 5;
  uint64_t v36 = sub_2608155C0((char *)v46, 0xFF00uLL);
  unint64_t v9 = v8;
  unint64_t v27 = v8;
  LOBYTE(v46[0]) = 17;
  uint64_t v10 = sub_2608155C0((char *)v46, 0x102uLL);
  unint64_t v34 = v11;
  uint64_t v35 = v10;
  LOBYTE(v46[0]) = 6;
  uint64_t v23 = sub_260815298((char *)v46, 0);
  unint64_t v33 = v12;
  LOBYTE(v46[0]) = 7;
  uint64_t v31 = sub_260815298((char *)v46, 255);
  unint64_t v32 = v13;
  LOBYTE(v46[0]) = 12;
  uint64_t v14 = sub_2608155C0((char *)v46, 8uLL);
  unint64_t v39 = v15;
  uint64_t v40 = v14;
  LOBYTE(v46[0]) = 14;
  uint64_t v16 = sub_260815298((char *)v46, 8);
  unint64_t v37 = v17;
  uint64_t v38 = v16;
  __int16 v52 = 1;
  __int16 v51 = 0;
  __int16 v50 = 0;
  char v47 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v52 + 1, &v52, (unsigned char *)&v51 + 1, &v51, (unsigned char *)&v50 + 1, &v50, &v47, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D790;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 17;
  *(void *)(inited + 96) = &type metadata for ReportSize;
  *(void *)(inited + 104) = &protocol witness table for ReportSize;
  *(void *)(inited + 72) = v42;
  *(void *)(inited + 80) = v43;
  *(void *)(inited + 136) = &type metadata for ReportCount;
  *(void *)(inited + 144) = &protocol witness table for ReportCount;
  *(void *)(inited + 112) = v1;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 336) = &type metadata for UsagePage;
  *(void *)(inited + 344) = &protocol witness table for UsagePage;
  *(void *)(inited + 376) = &type metadata for Usage;
  *(void *)(inited + 384) = &protocol witness table for Usage;
  *(void *)(inited + 416) = &type metadata for LogicalMinimum;
  *(void *)(inited + 424) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 456) = &type metadata for LogicalMaximum;
  *(void *)(inited + 464) = &protocol witness table for LogicalMaximum;
  unint64_t v20 = v53[1];
  uint64_t v30 = v53[0];
  uint64_t v19 = v53[0];
  *(void *)(inited + 496) = &type metadata for ReportSize;
  *(void *)(inited + 216) = &type metadata for ReportSize;
  *(void *)(inited + 224) = &protocol witness table for ReportSize;
  *(void *)(inited + 504) = &protocol witness table for ReportSize;
  *(void *)(inited + 176) = &type metadata for Input;
  *(void *)(inited + 184) = &protocol witness table for Input;
  *(void *)(inited + 152) = v19;
  *(void *)(inited + 160) = v20;
  *(void *)(inited + 192) = v45;
  *(void *)(inited + 200) = v44;
  *(void *)(inited + 256) = &type metadata for ReportCount;
  *(void *)(inited + 264) = &protocol witness table for ReportCount;
  *(void *)(inited + 232) = v41;
  *(void *)(inited + 240) = v7;
  *(void *)(inited + 536) = &type metadata for ReportCount;
  *(void *)(inited + 544) = &protocol witness table for ReportCount;
  unint64_t v28 = v49;
  unint64_t v21 = v49;
  uint64_t v29 = v48;
  *(void *)(inited + 296) = &type metadata for Input;
  *(void *)(inited + 304) = &protocol witness table for Input;
  *(void *)(inited + 272) = v29;
  *(void *)(inited + 280) = v21;
  *(void *)(inited + 312) = v36;
  *(void *)(inited + 320) = v9;
  *(void *)(inited + 352) = v35;
  *(void *)(inited + 360) = v34;
  *(void *)(inited + 392) = v23;
  *(void *)(inited + 400) = v33;
  *(void *)(inited + 432) = v31;
  *(void *)(inited + 440) = v32;
  *(void *)(inited + 472) = v40;
  *(void *)(inited + 480) = v39;
  *(void *)(inited + 512) = v38;
  *(void *)(inited + 520) = v37;
  *(void *)(inited + 576) = &type metadata for Input;
  *(void *)(inited + 584) = &protocol witness table for Input;
  uint64_t v24 = v46[0];
  unint64_t v25 = v46[1];
  *(void *)(inited + 552) = v46[0];
  *(void *)(inited + 560) = v25;
  sub_2607DCED0(v42, v43);
  sub_2607DCED0(v1, v3);
  sub_2607DCED0(v30, v20);
  sub_2607DCED0(v45, v44);
  sub_2607DCED0(v41, v7);
  sub_2607DCED0(v29, v28);
  sub_2607DCED0(v36, v27);
  sub_2607DCED0(v35, v34);
  sub_2607DCED0(v23, v33);
  sub_2607DCED0(v31, v32);
  sub_2607DCED0(v40, v39);
  sub_2607DCED0(v38, v37);
  sub_2607DCED0(v24, v25);
  uint64_t v26 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v24, v25);
  sub_2607DCF28(v38, v37);
  sub_2607DCF28(v40, v39);
  sub_2607DCF28(v31, v32);
  sub_2607DCF28(v23, v33);
  sub_2607DCF28(v35, v34);
  sub_2607DCF28(v36, v27);
  sub_2607DCF28(v29, v28);
  sub_2607DCF28(v41, v7);
  sub_2607DCF28(v45, v44);
  sub_2607DCF28(v30, v20);
  sub_2607DCF28(v1, v3);
  sub_2607DCF28(v42, v43);
  return v26;
}

uint64_t static TranslationReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44B8 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B47F8;
  *a1 = xmmword_26A8B47F8;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2607FA430()
{
  return 17;
}

uint64_t TranslationReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t TranslationReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*TranslationReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_2607FA4C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TranslationReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2607FA4EC()
{
  return sub_26087586C(*(void *)v0, *(void *)(v0 + 8));
}

unint64_t TranslationReport.flags.getter(uint64_t a1, unint64_t a2)
{
  return sub_2607DB19C(8, a1, a2);
}

unint64_t sub_2607FA504@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = TranslationReport.flags.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t TranslationReport.flags.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

uint64_t (*TranslationReport.flags.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = OUTLINED_FUNCTION_1_9();
  return sub_2607E79F0;
}

unint64_t sub_2607FA584@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = TranslationReport.phase.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t (*TranslationReport.phase.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = OUTLINED_FUNCTION_1_9() & 0x8F;
  return sub_2607FA600;
}

uint64_t sub_2607FA600()
{
  unsigned int v0 = OUTLINED_FUNCTION_1_9();
  uint64_t v1 = OUTLINED_FUNCTION_1_4(v0);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, v2);
}

void sub_2607FA630(uint64_t *a1@<X0>, double *a2@<X8>)
{
  *a2 = TranslationReport.x.getter(*a1, a1[1]);
}

uint64_t (*TranslationReport.x.modify(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 8) = v1;
  *(double *)a1 = sub_2607DCFD0(16, *v1, v1[1]);
  return sub_2607FA6B0;
}

uint64_t sub_2607FA6B0(double *a1)
{
  return sub_2607E260C(16, *a1);
}

void sub_2607FA6DC(uint64_t *a1@<X0>, double *a2@<X8>)
{
  *a2 = TranslationReport.y.getter(*a1, a1[1]);
}

uint64_t (*TranslationReport.y.modify(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 8) = v1;
  *(double *)a1 = sub_2607DCFD0(32, *v1, v1[1]);
  return sub_2607FA75C;
}

uint64_t sub_2607FA75C(double *a1)
{
  return sub_2607E260C(32, *a1);
}

double TranslationReport.delta.getter(uint64_t a1, uint64_t a2)
{
  double v4 = sub_2607DCFD0(16, a1, a2);
  sub_2607DCFD0(32, a1, a2);
  return v4;
}

void sub_2607FA7E4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = TranslationReport.delta.getter(*a1, a1[1]);
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = 0;
}

uint64_t sub_2607FA818(double *a1)
{
  return TranslationReport.delta.setter(*a1, a1[1]);
}

uint64_t TranslationReport.delta.setter(double a1, double a2)
{
  sub_2607E260C(16, a1);
  return sub_2607E260C(32, a2);
}

uint64_t (*TranslationReport.delta.modify(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 24) = v1;
  unint64_t v5 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = v5[1];
  double v6 = sub_2607DCFD0(16, v3, v4);
  double v7 = sub_2607DCFD0(32, v3, v4);
  *(double *)a1 = v6;
  *(double *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = 0;
  return sub_2607FA900;
}

uint64_t sub_2607FA900(double *a1)
{
  double v1 = a1[1];
  sub_2607E260C(16, *a1);
  return sub_2607E260C(32, v1);
}

uint64_t TranslationReport.remoteTimestamp.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x2607FA9F0);
      }
      if (v4 >= 14) {
        return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(48, a1, a2);
      }
      else {
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_2607FAA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = TranslationReport.remoteTimestamp.getter(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_2607FAA38()
{
}

void (*TranslationReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *v1;
  char v4 = 1;
  uint64_t v5 = 0;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_10;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v9)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x2607FAB3CLL);
      }
      if (v8 >= 14)
      {
        uint64_t v5 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(48, v6, v7);
        char v4 = 0;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 1;
      }
LABEL_10:
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = v4;
      return sub_2607FAB4C;
  }
}

void sub_2607FAB4C(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  int v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = (uint64_t *)a1[2];
  if (a2)
  {
    TranslationReport.remoteTimestamp.setter();
  }
  else
  {
    uint64_t v7 = *v6;
    switch((unint64_t)v6[1] >> 62)
    {
      case 1uLL:
        BOOL v8 = __OFSUB__(HIDWORD(v7), v7);
        uint64_t v9 = (HIDWORD(v7) - v7);
        if (v8) {
          goto LABEL_10;
        }
        goto LABEL_8;
      case 2uLL:
        uint64_t v12 = v7 + 16;
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v12 + 8);
        BOOL v8 = __OFSUB__(v11, v10);
        uint64_t v9 = v11 - v10;
        if (!v8) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        return;
      default:
LABEL_8:
        OUTLINED_FUNCTION_2_1();
        if (!v13)
        {
          __break(1u);
LABEL_10:
          __break(1u);
LABEL_11:
          __break(1u);
        }
        if (v9 >= 14)
        {
          if (v5) {
            uint64_t v4 = 0;
          }
          _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v4, 48);
        }
        break;
    }
  }
}

uint64_t sub_2607FAC14()
{
  return TranslationReport.remoteTimestamp.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_2607FAC34()
{
}

void (*sub_2607FAC3C(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = TranslationReport.remoteTimestamp.getter(*(void *)v1, *(void *)(v1 + 8));
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_2607FAC90;
}

void sub_2607FAC90()
{
}

uint64_t sub_2607FACC4(unsigned __int8 *a1)
{
  return TranslationReport.flags.setter(*a1);
}

uint64_t sub_2607FACF0()
{
  return TranslationReport.phase.setter();
}

uint64_t sub_2607FAD1C(double *a1)
{
  return TranslationReport.x.setter(*a1);
}

uint64_t sub_2607FAD48(double *a1)
{
  return TranslationReport.y.setter(*a1);
}

ValueMetadata *type metadata accessor for TranslationReport()
{
  return &type metadata for TranslationReport;
}

unint64_t OUTLINED_FUNCTION_1_9()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  return sub_2607DB19C(8, v2, v3);
}

BOOL static HIDEventType.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t HIDEventType.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*HIDEventType.rawValue.modify())()
{
  return nullsub_1;
}

unint64_t HIDEventType.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = sub_26087B980();
    __break(1u);
  }
  return result;
}

uint64_t static HIDEventType.null.getter()
{
  return 0;
}

uint64_t static HIDEventType.vendorDefined.getter()
{
  return 1;
}

uint64_t static HIDEventType.button.getter()
{
  return 2;
}

uint64_t static HIDEventType.keyboard.getter()
{
  return 3;
}

uint64_t static HIDEventType.translation.getter()
{
  return 4;
}

uint64_t static HIDEventType.rotation.getter()
{
  return 5;
}

uint64_t static HIDEventType.scroll.getter()
{
  return 6;
}

uint64_t static HIDEventType.scale.getter()
{
  return 7;
}

uint64_t static HIDEventType.zoom.getter()
{
  return 8;
}

uint64_t static HIDEventType.velocity.getter()
{
  return 9;
}

uint64_t static HIDEventType.orientation.getter()
{
  return 10;
}

uint64_t static HIDEventType.digitizer.getter()
{
  return 11;
}

uint64_t static HIDEventType.ambientLightSensor.getter()
{
  return 12;
}

uint64_t static HIDEventType.accelerometer.getter()
{
  return 13;
}

uint64_t static HIDEventType.proximity.getter()
{
  return 14;
}

uint64_t static HIDEventType.temperature.getter()
{
  return 15;
}

uint64_t static HIDEventType.navigationSwipe.getter()
{
  return 16;
}

uint64_t static HIDEventType.pointer.getter()
{
  return 17;
}

uint64_t static HIDEventType.progress.getter()
{
  return 18;
}

uint64_t static HIDEventType.multiAxisPointer.getter()
{
  return 19;
}

uint64_t static HIDEventType.gyro.getter()
{
  return 20;
}

uint64_t static HIDEventType.compass.getter()
{
  return 21;
}

uint64_t static HIDEventType.zoomToggle.getter()
{
  return 22;
}

uint64_t static HIDEventType.dockSwipe.getter()
{
  return 23;
}

uint64_t static HIDEventType.symbolicHotKey.getter()
{
  return 24;
}

uint64_t static HIDEventType.power.getter()
{
  return 25;
}

uint64_t static HIDEventType.led.getter()
{
  return 26;
}

uint64_t static HIDEventType.fluidTouchGesture.getter()
{
  return 27;
}

uint64_t static HIDEventType.boundaryScroll.getter()
{
  return 28;
}

uint64_t static HIDEventType.biometric.getter()
{
  return 29;
}

uint64_t static HIDEventType.unicode.getter()
{
  return 30;
}

uint64_t static HIDEventType.atmosphericPressure.getter()
{
  return 31;
}

uint64_t static HIDEventType.force.getter()
{
  return 32;
}

uint64_t static HIDEventType.motionActivity.getter()
{
  return 33;
}

uint64_t static HIDEventType.motionGesture.getter()
{
  return 34;
}

uint64_t static HIDEventType.gameController.getter()
{
  return 35;
}

uint64_t static HIDEventType.humidity.getter()
{
  return 36;
}

uint64_t static HIDEventType.collection.getter()
{
  return 37;
}

uint64_t static HIDEventType.brightness.getter()
{
  return 38;
}

uint64_t static HIDEventType.genericGesture.getter()
{
  return 39;
}

void *static HIDEventType.allCases.getter()
{
  return &unk_270C9E1A8;
}

uint64_t HIDEventType.hash(into:)()
{
  return sub_26087BCE0();
}

uint64_t HIDEventType.hashValue.getter()
{
  return sub_26087BD00();
}

void sub_2607FB034(void *a1@<X8>)
{
  *a1 = &unk_270C9E1A8;
}

BOOL sub_2607FB044(int *a1, int *a2)
{
  return static HIDEventType.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_2607FB050()
{
  return HIDEventType.hashValue.getter();
}

uint64_t sub_2607FB058()
{
  return HIDEventType.hash(into:)();
}

uint64_t sub_2607FB060()
{
  return sub_26087BD00();
}

uint64_t HIDEventType.description.getter(int a1)
{
  uint64_t result = 1819047278;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      return 0x6544726F646E6576;
    case 2:
      return 0x6E6F74747562;
    case 3:
      return 0x6472616F6279656BLL;
    case 4:
      uint64_t v3 = 0x6C736E617274;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 5:
      return 0x6E6F697461746F72;
    case 6:
      return 0x6C6C6F726373;
    case 7:
      uint64_t v4 = 1818321779;
      goto LABEL_37;
    case 8:
      return 1836019578;
    case 9:
      uint64_t v5 = 0x69636F6C6576;
      goto LABEL_42;
    case 10:
      uint64_t v3 = 0x746E6569726FLL;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 11:
      return 0x657A697469676964;
    case 12:
      return 0xD000000000000012;
    case 13:
      return 0x6F72656C65636361;
    case 14:
      return 0x74696D69786F7270;
    case 15:
      return 0x74617265706D6574;
    case 16:
      uint64_t v6 = 0x61676976616ELL;
      goto LABEL_44;
    case 17:
      return 0x7265746E696F70;
    case 18:
      return 0x73736572676F7270;
    case 19:
      return 0xD000000000000010;
    case 20:
      return 1869773159;
    case 21:
      return 0x737361706D6F63;
    case 22:
      return 0x67676F546D6F6F7ALL;
    case 23:
      return 0x706977536B636F64;
    case 24:
      return 0x63696C6F626D7973;
    case 25:
      return 0x7265776F70;
    case 26:
      return 6579564;
    case 27:
      return 0xD000000000000011;
    case 28:
      return 0x797261646E756F62;
    case 29:
      return 0x697274656D6F6962;
    case 30:
      return 0x65646F63696E75;
    case 31:
      return 0xD000000000000013;
    case 32:
      uint64_t v4 = 1668444006;
LABEL_37:
      uint64_t result = v4 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      break;
    case 33:
      uint64_t result = 0x63416E6F69746F6DLL;
      break;
    case 34:
      uint64_t result = 0x65476E6F69746F6DLL;
      break;
    case 35:
      uint64_t result = 0x746E6F43656D6167;
      break;
    case 36:
      uint64_t v5 = 0x6964696D7568;
LABEL_42:
      uint64_t result = v5 & 0xFFFFFFFFFFFFLL | 0x7974000000000000;
      break;
    case 37:
      uint64_t v6 = 0x63656C6C6F63;
LABEL_44:
      uint64_t result = v6 & 0xFFFFFFFFFFFFLL | 0x6974000000000000;
      break;
    case 38:
      uint64_t result = 0x656E746867697262;
      break;
    case 39:
      uint64_t result = 0x47636972656E6567;
      break;
    default:
      uint64_t result = sub_26087BBA0();
      break;
  }
  return result;
}

unint64_t sub_2607FB5E0()
{
  unint64_t result = qword_26A8B4808;
  if (!qword_26A8B4808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4808);
  }
  return result;
}

unint64_t sub_2607FB638()
{
  unint64_t result = qword_26A8B4818;
  if (!qword_26A8B4818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4818);
  }
  return result;
}

uint64_t sub_2607FB684()
{
  return HIDEventType.description.getter(*v0);
}

ValueMetadata *type metadata accessor for HIDEventType()
{
  return &type metadata for HIDEventType;
}

uint64_t static KeyboardReport.initialReportBitCount.getter()
{
  return 248;
}

uint64_t sub_2607FB6AC()
{
  uint64_t result = sub_2607FB6D0();
  *(void *)&xmmword_26A8B4820 = result;
  *((void *)&xmmword_26A8B4820 + 1) = v1;
  return result;
}

uint64_t sub_2607FB6D0()
{
  LOBYTE(v71[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v71, 7uLL);
  unint64_t v46 = v1;
  uint64_t v47 = v0;
  LOBYTE(v71[0]) = 18;
  uint64_t v2 = sub_2608155C0((char *)v71, 1uLL);
  unint64_t v64 = v3;
  LOBYTE(v71[0]) = 19;
  uint64_t v4 = sub_2608155C0((char *)v71, 0xE7uLL);
  unint64_t v55 = v5;
  uint64_t v56 = v4;
  LOBYTE(v71[0]) = 14;
  uint64_t v6 = sub_260815298((char *)v71, 232);
  unint64_t v51 = v7;
  uint64_t v52 = v6;
  LOBYTE(v71[0]) = 12;
  uint64_t v8 = sub_2608155C0((char *)v71, 1uLL);
  unint64_t v53 = v9;
  uint64_t v54 = v8;
  LOBYTE(v71[0]) = 6;
  uint64_t v10 = sub_260815298((char *)v71, 1);
  unint64_t v49 = v11;
  uint64_t v50 = v10;
  LOBYTE(v71[0]) = 7;
  uint64_t v48 = sub_260815298((char *)v71, 231);
  unint64_t v65 = v12;
  LOBYTE(v66) = 0;
  unsigned __int8 v70 = 1;
  memset(v69, 0, sizeof(v69));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v66, &v70, &v69[4], &v69[3], &v69[2], &v69[1], v69, v71);
  LOBYTE(v66) = 3;
  uint64_t v66 = sub_260815298((char *)&v66, 2);
  unint64_t v67 = v13;
  uint64_t v14 = sub_2607FBC9C();
  unint64_t v16 = v15;
  sub_26087B050();
  sub_2607DCF28(v14, v16);
  uint64_t v17 = sub_2607E6724((uint64_t)&unk_270C9DF50);
  unint64_t v19 = v18;
  sub_26087B050();
  sub_2607DCF28(v17, v19);
  unint64_t v62 = v67;
  uint64_t v63 = v66;
  LOBYTE(v66) = 5;
  uint64_t v20 = sub_2608155C0((char *)&v66, 0xFF00uLL);
  unint64_t v60 = v21;
  uint64_t v61 = v20;
  LOBYTE(v66) = 17;
  uint64_t v22 = sub_2608155C0((char *)&v66, 0x102uLL);
  unint64_t v58 = v23;
  uint64_t v59 = v22;
  LOBYTE(v66) = 6;
  uint64_t v57 = sub_260815298((char *)&v66, 0);
  unint64_t v45 = v24;
  LOBYTE(v66) = 7;
  uint64_t v25 = sub_260815298((char *)&v66, 255);
  unint64_t v43 = v26;
  uint64_t v44 = v25;
  LOBYTE(v66) = 12;
  uint64_t v27 = sub_2608155C0((char *)&v66, 8uLL);
  unint64_t v41 = v28;
  uint64_t v42 = v27;
  LOBYTE(v66) = 14;
  uint64_t v29 = sub_260815298((char *)&v66, 8);
  unint64_t v39 = v30;
  uint64_t v40 = v29;
  unsigned __int8 v70 = 0;
  v69[4] = 1;
  *(_WORD *)&v69[2] = 0;
  *(_WORD *)uint64_t v69 = 0;
  char v68 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v70, &v69[4], &v69[3], &v69[2], &v69[1], v69, &v68, &v66);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D900;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 1;
  *(void *)(inited + 96) = &type metadata for UsagePage;
  *(void *)(inited + 104) = &protocol witness table for UsagePage;
  *(void *)(inited + 72) = v47;
  *(void *)(inited + 80) = v46;
  *(void *)(inited + 136) = &type metadata for UsageMinimum;
  *(void *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(void *)(inited + 112) = v2;
  *(void *)(inited + 120) = v64;
  *(void *)(inited + 176) = &type metadata for UsageMaximum;
  *(void *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(void *)(inited + 416) = &type metadata for LogicalCollection;
  *(void *)(inited + 152) = v56;
  *(void *)(inited + 160) = v55;
  *(void *)(inited + 424) = &protocol witness table for LogicalCollection;
  *(void *)(inited + 216) = &type metadata for ReportCount;
  *(void *)(inited + 224) = &protocol witness table for ReportCount;
  *(void *)(inited + 192) = v52;
  *(void *)(inited + 200) = v51;
  *(void *)(inited + 456) = &type metadata for UsagePage;
  *(void *)(inited + 464) = &protocol witness table for UsagePage;
  *(void *)(inited + 496) = &type metadata for Usage;
  *(void *)(inited + 504) = &protocol witness table for Usage;
  *(void *)(inited + 536) = &type metadata for LogicalMinimum;
  *(void *)(inited + 296) = &type metadata for LogicalMinimum;
  *(void *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 544) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 576) = &type metadata for LogicalMaximum;
  *(void *)(inited + 336) = &type metadata for LogicalMaximum;
  *(void *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 584) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 256) = &type metadata for ReportSize;
  *(void *)(inited + 264) = &protocol witness table for ReportSize;
  *(void *)(inited + 232) = v54;
  *(void *)(inited + 240) = v53;
  *(void *)(inited + 272) = v50;
  *(void *)(inited + 280) = v49;
  *(void *)(inited + 312) = v48;
  *(void *)(inited + 320) = v65;
  *(void *)(inited + 616) = &type metadata for ReportSize;
  *(void *)(inited + 624) = &protocol witness table for ReportSize;
  uint64_t v37 = v71[0];
  uint64_t v32 = v71[0];
  unint64_t v38 = v71[1];
  *(void *)(inited + 656) = &type metadata for ReportCount;
  *(void *)(inited + 664) = &protocol witness table for ReportCount;
  *(void *)(inited + 376) = &type metadata for Input;
  *(void *)(inited + 384) = &protocol witness table for Input;
  *(void *)(inited + 352) = v32;
  *(void *)(inited + 360) = v38;
  *(void *)(inited + 392) = v63;
  *(void *)(inited + 400) = v62;
  *(void *)(inited + 432) = v61;
  *(void *)(inited + 440) = v60;
  *(void *)(inited + 472) = v59;
  *(void *)(inited + 480) = v58;
  *(void *)(inited + 512) = v57;
  *(void *)(inited + 520) = v45;
  *(void *)(inited + 552) = v44;
  *(void *)(inited + 560) = v43;
  *(void *)(inited + 592) = v42;
  *(void *)(inited + 600) = v41;
  *(void *)(inited + 632) = v40;
  *(void *)(inited + 640) = v39;
  *(void *)(inited + 696) = &type metadata for Input;
  *(void *)(inited + 704) = &protocol witness table for Input;
  uint64_t v34 = v66;
  unint64_t v35 = v67;
  *(void *)(inited + 672) = v66;
  *(void *)(inited + 680) = v35;
  sub_2607DCED0(v47, v46);
  sub_2607DCED0(v2, v64);
  sub_2607DCED0(v56, v55);
  sub_2607DCED0(v52, v51);
  sub_2607DCED0(v54, v53);
  sub_2607DCED0(v50, v49);
  sub_2607DCED0(v48, v65);
  sub_2607DCED0(v37, v38);
  sub_2607DCED0(v63, v62);
  sub_2607DCED0(v61, v60);
  sub_2607DCED0(v59, v58);
  sub_2607DCED0(v57, v45);
  sub_2607DCED0(v44, v43);
  sub_2607DCED0(v42, v41);
  sub_2607DCED0(v40, v39);
  sub_2607DCED0(v34, v35);
  uint64_t v36 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v34, v35);
  sub_2607DCF28(v40, v39);
  sub_2607DCF28(v42, v41);
  sub_2607DCF28(v44, v43);
  sub_2607DCF28(v57, v45);
  sub_2607DCF28(v59, v58);
  sub_2607DCF28(v61, v60);
  sub_2607DCF28(v63, v62);
  sub_2607DCF28(v37, v38);
  sub_2607DCF28(v48, v65);
  sub_2607DCF28(v50, v49);
  sub_2607DCF28(v54, v53);
  sub_2607DCF28(v52, v51);
  sub_2607DCF28(v56, v55);
  sub_2607DCF28(v2, v64);
  sub_2607DCF28(v47, v46);
  return v36;
}

uint64_t sub_2607FBC9C()
{
  LOBYTE(v30[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v30, 0xFF1AuLL);
  unint64_t v24 = v1;
  uint64_t v25 = v0;
  LOBYTE(v30[0]) = 17;
  uint64_t v2 = sub_2608155C0((char *)v30, 0xE0F1uLL);
  unint64_t v4 = v3;
  LOBYTE(v30[0]) = 18;
  uint64_t v21 = sub_2608155C0((char *)v30, 0);
  unint64_t v6 = v5;
  LOBYTE(v30[0]) = 19;
  uint64_t v7 = sub_2608155C0((char *)v30, 0);
  unint64_t v9 = v8;
  LOBYTE(v30[0]) = 12;
  uint64_t v20 = sub_2608155C0((char *)v30, 8uLL);
  unint64_t v11 = v10;
  LOBYTE(v30[0]) = 14;
  uint64_t v23 = sub_260815298((char *)v30, 1);
  unint64_t v13 = v12;
  unint64_t v19 = v12;
  unsigned __int8 v29 = 1;
  __int16 v28 = 0;
  __int16 v27 = 0;
  __int16 v26 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v29, (unsigned char *)&v28 + 1, &v28, (unsigned char *)&v27 + 1, &v27, (unsigned char *)&v26 + 1, &v26, v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D910;
  *(void *)(inited + 56) = &type metadata for UsagePage;
  *(void *)(inited + 64) = &protocol witness table for UsagePage;
  *(void *)(inited + 32) = v25;
  *(void *)(inited + 40) = v24;
  *(void *)(inited + 96) = &type metadata for Usage;
  *(void *)(inited + 104) = &protocol witness table for Usage;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = v4;
  *(void *)(inited + 136) = &type metadata for UsageMinimum;
  *(void *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(void *)(inited + 112) = v21;
  *(void *)(inited + 120) = v6;
  *(void *)(inited + 176) = &type metadata for UsageMaximum;
  *(void *)(inited + 184) = &protocol witness table for UsageMaximum;
  unint64_t v22 = v9;
  *(void *)(inited + 152) = v7;
  *(void *)(inited + 160) = v9;
  *(void *)(inited + 216) = &type metadata for ReportSize;
  *(void *)(inited + 224) = &protocol witness table for ReportSize;
  *(void *)(inited + 192) = v20;
  *(void *)(inited + 200) = v11;
  *(void *)(inited + 256) = &type metadata for ReportCount;
  *(void *)(inited + 264) = &protocol witness table for ReportCount;
  *(void *)(inited + 232) = v23;
  *(void *)(inited + 240) = v13;
  uint64_t v15 = v30[0];
  unint64_t v16 = v30[1];
  *(void *)(inited + 296) = &type metadata for Input;
  *(void *)(inited + 304) = &protocol witness table for Input;
  *(void *)(inited + 272) = v15;
  *(void *)(inited + 280) = v16;
  sub_2607DCED0(v25, v24);
  sub_2607DCED0(v2, v4);
  sub_2607DCED0(v21, v6);
  sub_2607DCED0(v7, v9);
  sub_2607DCED0(v20, v11);
  sub_2607DCED0(v23, v19);
  sub_2607DCED0(v15, v16);
  uint64_t v17 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v15, v16);
  sub_2607DCF28(v23, v19);
  sub_2607DCF28(v20, v11);
  sub_2607DCF28(v7, v22);
  sub_2607DCF28(v21, v6);
  sub_2607DCF28(v2, v4);
  sub_2607DCF28(v25, v24);
  return v17;
}

uint64_t static KeyboardReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44C0 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B4820;
  *a1 = xmmword_26A8B4820;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_2607FBFE4()
{
  return 248;
}

uint64_t KeyboardFlags.rawValue.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*KeyboardFlags.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t KeyboardReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*KeyboardReport.report.modify())()
{
  return nullsub_1;
}

uint64_t KeyboardReport.init<A>(usages:)(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v28 = v10;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v27 - v12;
  if (qword_26A8B44C0 != -1) {
    goto LABEL_45;
  }
  while (1)
  {
    long long v34 = xmmword_26A8B4820;
    uint64_t v14 = HIDReportDescriptor.reportBitCount(for:)(1u);
    *(void *)&long long v34 = HIDReport.init(bitCount:id:)(v14, 1);
    *((void *)&v34 + 1) = v15;
    unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v29 = a1;
    v16(v8, a1, a2);
    sub_26087B380();
    uint64_t v30 = a2;
    a2 = 1;
    swift_getAssociatedConformanceWitness();
    OUTLINED_FUNCTION_8_6();
    if ((v31 & 0x100) != 0) {
      break;
    }
    unsigned __int8 v17 = v31;
    while (2)
    {
      unint64_t v18 = v17 + 8;
      a1 = v34;
      uint64_t v19 = 0;
      switch(*((void *)&v34 + 1) >> 62)
      {
        case 1:
          uint64_t v19 = (int)v34;
          break;
        case 2:
          uint64_t v19 = *(void *)(v34 + 16);
          break;
        default:
          break;
      }
      BOOL v20 = __OFADD__(v19, v18 >> 3);
      uint64_t v21 = v19 + (v18 >> 3);
      if (!v20)
      {
        unint64_t v8 = (char *)(v18 >> 3);
        switch(*((void *)&v34 + 1) >> 62)
        {
          case 1:
            a2 = (uint64_t)v34 >> 32;
            if (v21 < (int)v34 || v21 >= a2) {
              goto LABEL_35;
            }
            if (!sub_26087AED0())
            {
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
            }
            sub_26087AEF0();
            v8 += (int)a1;
            if ((uint64_t)v8 >= a2) {
              goto LABEL_38;
            }
            uint64_t v23 = sub_26087AED0();
            if (!v23) {
              goto LABEL_48;
            }
            a1 = v23;
            a2 = 1;
            if (__OFSUB__(v8, sub_26087AEF0())) {
              goto LABEL_40;
            }
LABEL_31:
            sub_26087AFD0();
            OUTLINED_FUNCTION_8_6();
            unsigned __int8 v17 = v31;
            if ((v31 & 0x100) != 0) {
              goto LABEL_32;
            }
            continue;
          case 2:
            if (v21 < *(void *)(v34 + 16)) {
              goto LABEL_36;
            }
            if (v21 >= *(void *)(v34 + 24)) {
              goto LABEL_39;
            }
            if (!sub_26087AED0()) {
              goto LABEL_49;
            }
            sub_26087AEF0();
            uint64_t v24 = *(void *)(a1 + 16);
            BOOL v20 = __OFADD__(v24, v8);
            v8 += v24;
            if (v20) {
              goto LABEL_41;
            }
            if ((uint64_t)v8 < v24) {
              goto LABEL_42;
            }
            if ((uint64_t)v8 >= *(void *)(a1 + 24)) {
              goto LABEL_43;
            }
            uint64_t v25 = sub_26087AED0();
            if (!v25) {
              goto LABEL_50;
            }
            a1 = v25;
            if (!__OFSUB__(v8, sub_26087AEF0())) {
              goto LABEL_31;
            }
            goto LABEL_44;
          case 3:
            __break(1u);
            goto LABEL_47;
          default:
            if (v21 >= BYTE14(v34)) {
              goto LABEL_34;
            }
            if ((unint64_t)v8 >= BYTE14(v34)) {
              goto LABEL_37;
            }
            uint64_t v31 = v34;
            int v32 = DWORD2(v34);
            __int16 v33 = WORD6(v34);
            goto LABEL_31;
        }
      }
      break;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once();
  }
LABEL_32:
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, AssociatedTypeWitness);
  return v34;
}

uint64_t KeyboardReport.update(with:)(unsigned __int8 a1)
{
  Swift::Int v2 = a1 + 8;
  HIDReport.offset(for:)(v2);
  char v3 = OUTLINED_FUNCTION_10_5();
  char v4 = sub_26087B080() & v3;
  HIDReport.offset(for:)(v2);
  OUTLINED_FUNCTION_10_5();
  sub_26087B080();
  sub_26087AFD0();
  if (v4) {
    unsigned __int8 v5 = a1;
  }
  else {
    unsigned __int8 v5 = 0;
  }
  return v5 | ((v4 == 0) << 8);
}

uint64_t KeyboardReport.index(for:)(unsigned __int8 a1)
{
  return a1 + 8;
}

uint64_t KeyboardReport.modifiers.getter(uint64_t a1, unint64_t a2)
{
  sub_2607DB19C(232, a1, a2);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = MEMORY[0x263F8EE88];
  char v3 = (uint64_t *)(v2 + 16);
  OUTLINED_FUNCTION_0_9(227);
  OUTLINED_FUNCTION_0_9(224);
  OUTLINED_FUNCTION_0_9(226);
  OUTLINED_FUNCTION_0_9(225);
  OUTLINED_FUNCTION_0_9(231);
  OUTLINED_FUNCTION_0_9(228);
  OUTLINED_FUNCTION_0_9(230);
  OUTLINED_FUNCTION_0_9(229);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  swift_release();
  return v4;
}

uint64_t sub_2607FC6BC(uint64_t result, unsigned __int8 a2, unsigned __int8 a3)
{
  if (((result - a3) & 0xFFFFFF00) != 0)
  {
    __break(1u);
  }
  else if (result - a3) <= 7u && ((a2 >> (result - a3)))
  {
    *(void *)&v6[17] = v3;
    uint64_t v7 = v4;
    uint64_t v5 = result;
    swift_beginAccess();
    sub_260869F04(v6, v5);
    return swift_endAccess();
  }
  return result;
}

unint64_t KeyboardReport.keyboardState.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

unint64_t sub_2607FC750@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = KeyboardReport.keyboardState.getter();
  *a1 = result;
  return result;
}

uint64_t KeyboardReport.keyboardState.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 240);
}

uint64_t (*KeyboardReport.keyboardState.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_2607FC7D8;
}

uint64_t sub_2607FC7D8(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 240);
}

uint64_t sub_2607FC804@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = KeyboardReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t KeyboardReport.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  unint64_t v22 = 0xD000000000000010;
  unint64_t v23 = 0x8000000260884330;
  unint64_t v4 = a2 >> 62;
  sub_2607DCED0(a1, a2);
  unint64_t v5 = -255;
  uint64_t v6 = v4;
  while (1)
  {
    if (v5 > 0xFFFFFFFFFFFFFF00)
    {
      unint64_t v7 = v5 + 264;
      uint64_t v8 = 0;
      switch(v6)
      {
        case 1:
          uint64_t v8 = (int)a1;
          break;
        case 2:
          uint64_t v8 = *(void *)(a1 + 16);
          break;
        default:
          break;
      }
      uint64_t v9 = v8 + (v7 >> 3);
      if (__OFADD__(v8, v7 >> 3))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
      }
      switch(v6)
      {
        case 1:
          if (v9 < (int)a1 || v9 >= a1 >> 32) {
            goto LABEL_31;
          }
          uint64_t v12 = sub_26087AED0();
          if (!v12) {
            goto LABEL_37;
          }
          uint64_t v13 = v12;
          uint64_t v14 = sub_26087AEF0();
          uint64_t v15 = v9 - v14;
          if (!__OFSUB__(v9, v14)) {
            goto LABEL_23;
          }
          goto LABEL_33;
        case 2:
          if (v9 < *(void *)(a1 + 16)) {
            goto LABEL_32;
          }
          if (v9 >= *(void *)(a1 + 24)) {
            goto LABEL_34;
          }
          uint64_t v16 = sub_26087AED0();
          if (!v16) {
            goto LABEL_38;
          }
          uint64_t v13 = v16;
          uint64_t v17 = sub_26087AEF0();
          uint64_t v15 = v9 - v17;
          if (__OFSUB__(v9, v17)) {
            goto LABEL_35;
          }
LABEL_23:
          int v10 = *(unsigned __int8 *)(v13 + v15);
LABEL_24:
          if ((v10 & (1 << (v5 & 7))) != 0)
          {
            uint64_t v20 = v5 + 256;
            sub_2607DDC34();
            uint64_t v20 = sub_26087B360();
            unint64_t v21 = v18;
            sub_26087B330();
            sub_26087B330();
            swift_bridgeObjectRelease();
          }
          break;
        case 3:
          goto LABEL_36;
        default:
          if (v9 >= BYTE6(a2)) {
            goto LABEL_30;
          }
          uint64_t v20 = a1;
          LOWORD(v21) = a2;
          BYTE2(v21) = BYTE2(a2);
          BYTE3(v21) = BYTE3(a2);
          BYTE4(v21) = BYTE4(a2);
          BYTE5(v21) = BYTE5(a2);
          int v10 = *((unsigned __int8 *)&v20 + v9);
          goto LABEL_24;
      }
    }
    if (v5 + 256 > 0xE6) {
      break;
    }
    ++v5;
  }
  sub_2607DCF28(a1, a2);
  uint64_t v20 = v22;
  unint64_t v21 = v23;
  swift_bridgeObjectRetain();
  sub_26087B330();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t KeyboardReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 1;
  return sub_2607DCED0(a1, a2);
}

uint64_t KeyboardReport.Iterator.next()()
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[2];
  int v2 = 1;
  if (v1 <= 231)
  {
    while (v1 < 0 || !(_BYTE)v1)
    {
LABEL_27:
      v0[2] = ++v1;
      if (v1 == 232)
      {
        LOBYTE(v1) = 0;
        int v2 = 1;
        return v1 | (v2 << 8);
      }
    }
    unint64_t v3 = v1 + 8;
    uint64_t v5 = *v0;
    unint64_t v4 = v0[1];
    uint64_t v6 = 0;
    switch(v4 >> 62)
    {
      case 1uLL:
        uint64_t v6 = (int)v5;
        break;
      case 2uLL:
        uint64_t v6 = *(void *)(v5 + 16);
        break;
      default:
        break;
    }
    uint64_t v7 = v6 + (v3 >> 3);
    if (__OFADD__(v6, v3 >> 3))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
    }
    switch(v4 >> 62)
    {
      case 1uLL:
        if (v7 < (int)v5 || v7 >= v5 >> 32) {
          goto LABEL_33;
        }
        uint64_t v10 = sub_26087AED0();
        if (!v10) {
          goto LABEL_39;
        }
        uint64_t v11 = v10;
        uint64_t v12 = sub_26087AEF0();
        uint64_t v13 = v7 - v12;
        if (!__OFSUB__(v7, v12)) {
          goto LABEL_25;
        }
        goto LABEL_35;
      case 2uLL:
        if (v7 < *(void *)(v5 + 16)) {
          goto LABEL_34;
        }
        if (v7 >= *(void *)(v5 + 24)) {
          goto LABEL_36;
        }
        uint64_t v14 = sub_26087AED0();
        if (!v14) {
          goto LABEL_40;
        }
        uint64_t v11 = v14;
        uint64_t v15 = sub_26087AEF0();
        uint64_t v13 = v7 - v15;
        if (__OFSUB__(v7, v15)) {
          goto LABEL_37;
        }
LABEL_25:
        int v8 = *(unsigned __int8 *)(v11 + v13);
LABEL_26:
        if ((v8 & (1 << (v1 & 7))) == 0) {
          goto LABEL_27;
        }
        int v2 = 0;
        v0[2] = v1 + 1;
        break;
      case 3uLL:
        goto LABEL_38;
      default:
        if (v7 >= BYTE6(v4)) {
          goto LABEL_32;
        }
        __int16 v17 = *v0;
        char v18 = BYTE2(v5);
        char v19 = BYTE3(v5);
        char v20 = BYTE4(v5);
        char v21 = BYTE5(v5);
        char v22 = BYTE6(v5);
        char v23 = HIBYTE(v5);
        __int16 v24 = v4;
        char v25 = BYTE2(v4);
        char v26 = BYTE3(v4);
        char v27 = BYTE4(v4);
        char v28 = BYTE5(v4);
        int v8 = *((unsigned __int8 *)&v17 + v7);
        goto LABEL_26;
    }
  }
  else
  {
    LOBYTE(v1) = 0;
  }
  return v1 | (v2 << 8);
}

uint64_t sub_2607FCE04()
{
  return KeyboardReport.description.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_2607FCE0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = KeyboardReport.Iterator.next()();
  *a1 = result;
  a1[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2607FCE3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  KeyboardReport.makeIterator()(v2, v3, a1);
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_2607FCE80()
{
  return sub_2608359C4();
}

uint64_t sub_2607FCE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26083E318(a1, a2, a3, *v3, v3[1]);
}

uint64_t KeyboardReport.remove(_:)(unsigned __int8 a1)
{
  unsigned __int8 v1 = a1;
  Swift::Int v2 = a1 + 8;
  HIDReport.offset(for:)(v2);
  char v3 = OUTLINED_FUNCTION_9_5();
  char v4 = sub_26087B080() & v3;
  if (v4)
  {
    HIDReport.offset(for:)(v2);
    OUTLINED_FUNCTION_9_5();
    sub_26087B080();
    sub_26087AFD0();
  }
  else
  {
    unsigned __int8 v1 = 0;
  }
  return v1 | ((v4 == 0) << 8);
}

uint64_t KeyboardReport.formUnion(_:)(uint64_t a1, unint64_t a2)
{
  return sub_2607FD1BC(a1, a2, (uint64_t)sub_2607FDBB8, (uint64_t)sub_2607FCF9C, (void (*)(void, uint64_t, uint64_t, uint64_t, unint64_t))sub_2607FEDA8);
}

char *sub_2607FCF9C(char *result, char *a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v4 = 0;
    if (a2) {
      goto LABEL_6;
    }
LABEL_8:
    while (!__OFADD__(v4, 1))
    {
      char v6 = *result++;
      char v5 = v6;
      if ((unint64_t)(v4 - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a3 || v4 >= a4 - a3) {
          goto LABEL_16;
        }
        *(unsigned char *)(a3 + v4) |= v5;
      }
      ++v4;
      if (a2)
      {
LABEL_6:
        if (result == a2) {
          return result;
        }
      }
    }
    __break(1u);
LABEL_16:
    uint64_t result = (char *)sub_26087BA10();
    __break(1u);
  }
  else if (a2)
  {
    uint64_t v4 = 0;
    uint64_t result = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t KeyboardReport.formIntersection(_:)(uint64_t a1, unint64_t a2)
{
  return sub_2607FD1BC(a1, a2, (uint64_t)sub_2607FDD04, (uint64_t)sub_2607FD0AC, (void (*)(void, uint64_t, uint64_t, uint64_t, unint64_t))sub_2607FE748);
}

char *sub_2607FD0AC(char *result, char *a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v4 = 0;
    if (a2) {
      goto LABEL_6;
    }
LABEL_8:
    while (!__OFADD__(v4, 1))
    {
      char v6 = *result++;
      char v5 = v6;
      if ((unint64_t)(v4 - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a3 || v4 >= a4 - a3) {
          goto LABEL_16;
        }
        *(unsigned char *)(a3 + v4) &= v5;
      }
      ++v4;
      if (a2)
      {
LABEL_6:
        if (result == a2) {
          return result;
        }
      }
    }
    __break(1u);
LABEL_16:
    uint64_t result = (char *)sub_26087BA10();
    __break(1u);
  }
  else if (a2)
  {
    uint64_t v4 = 0;
    uint64_t result = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t KeyboardReport.formSymmetricDifference(_:)(uint64_t a1, unint64_t a2)
{
  return sub_2607FD1BC(a1, a2, (uint64_t)sub_2607FDE50, (uint64_t)sub_2607FD228, (void (*)(void, uint64_t, uint64_t, uint64_t, unint64_t))sub_2607FEA78);
}

uint64_t sub_2607FD1BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, uint64_t, uint64_t, uint64_t, unint64_t))
{
  sub_2607DCED0(a1, a2);
  return sub_2607FE0AC(v5, a1, a2, a3, a4, a5);
}

char *sub_2607FD228(char *result, char *a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    uint64_t v4 = 0;
    if (a2) {
      goto LABEL_6;
    }
LABEL_8:
    while (!__OFADD__(v4, 1))
    {
      char v6 = *result++;
      char v5 = v6;
      if ((unint64_t)(v4 - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a3 || v4 >= a4 - a3) {
          goto LABEL_16;
        }
        *(unsigned char *)(a3 + v4) ^= v5;
      }
      ++v4;
      if (a2)
      {
LABEL_6:
        if (result == a2) {
          return result;
        }
      }
    }
    __break(1u);
LABEL_16:
    uint64_t result = (char *)sub_26087BA10();
    __break(1u);
  }
  else if (a2)
  {
    uint64_t v4 = 0;
    uint64_t result = 0;
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_2607FD2FC(char *a1)
{
  return sub_260853644(*a1, *v1, v1[1]);
}

uint64_t sub_2607FD308()
{
  return sub_2607FD350();
}

uint64_t sub_2607FD320(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2607FD4D0(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_26082CEEC);
}

uint64_t sub_2607FD338()
{
  return sub_2607FD350();
}

uint64_t sub_2607FD350()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = OUTLINED_FUNCTION_1_8();
  v4(v3);
  sub_2607DCF28(v2, v1);
  uint64_t v5 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v5, v6);
}

uint64_t sub_2607FD3B4(uint64_t a1, unsigned __int8 *a2)
{
  return sub_260876B3C(a1, *a2);
}

uint64_t sub_2607FD3BC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = KeyboardReport.remove(_:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2607FD3F0@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = KeyboardReport.update(with:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2607FD424()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  KeyboardReport.formUnion(_:)(v0, v1);
  uint64_t v2 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_2607FD468(uint64_t a1)
{
  return KeyboardReport.formIntersection(_:)(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_2607FD474()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  KeyboardReport.formSymmetricDifference(_:)(v0, v1);
  uint64_t v2 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_2607FD4B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2607FD4D0(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_260875C84);
}

uint64_t sub_2607FD4D0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, uint64_t, unint64_t))
{
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  a4(*a1, a1[1], v5, v6);
  return sub_2607DCF28(v5, v6);
}

uint64_t sub_2607FD524()
{
  return sub_26082C6CC();
}

uint64_t sub_2607FD534()
{
  return sub_260875FE0();
}

uint64_t sub_2607FD544(uint64_t *a1)
{
  return sub_26082C8A0(*a1, a1[1], *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_2607FD554()
{
  return sub_2607E84A8();
}

void sub_2607FD55C()
{
  sub_2607FE6FC();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_2607FD5E0(uint64_t a1)
{
  return sub_26082CA90(*(void *)a1, *(void *)(a1 + 8));
}

void sub_2607FD5EC(void *a1, void *a2)
{
  static KeyboardReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t KeyboardReport.remoteTimestamp.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x2607FD6B4);
      }
      if (v4 >= 39) {
        return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(248, a1, a2);
      }
      else {
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_2607FD6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = KeyboardReport.remoteTimestamp.getter(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_2607FD6FC()
{
}

void KeyboardReport.remoteTimestamp.setter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)v0[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v5)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x2607FD7B4);
      }
      if (v4 >= 39)
      {
        if (v3) {
          uint64_t v2 = 0;
        }
        _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v2, 248);
      }
      return;
  }
}

void (*KeyboardReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *v1;
  char v4 = 1;
  uint64_t v5 = 0;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_10;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v9)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x2607FD898);
      }
      if (v8 >= 39)
      {
        uint64_t v5 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(248, v6, v7);
        char v4 = 0;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 1;
      }
LABEL_10:
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = v4;
      return sub_2607FD8A8;
  }
}

void sub_2607FD8A8(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  int v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = (uint64_t *)a1[2];
  if (a2)
  {
    KeyboardReport.remoteTimestamp.setter();
  }
  else
  {
    uint64_t v7 = *v6;
    switch((unint64_t)v6[1] >> 62)
    {
      case 1uLL:
        BOOL v8 = __OFSUB__(HIDWORD(v7), v7);
        uint64_t v9 = (HIDWORD(v7) - v7);
        if (v8) {
          goto LABEL_10;
        }
        goto LABEL_8;
      case 2uLL:
        uint64_t v12 = v7 + 16;
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v12 + 8);
        BOOL v8 = __OFSUB__(v11, v10);
        uint64_t v9 = v11 - v10;
        if (!v8) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        return;
      default:
LABEL_8:
        OUTLINED_FUNCTION_2_1();
        if (!v13)
        {
          __break(1u);
LABEL_10:
          __break(1u);
LABEL_11:
          __break(1u);
        }
        if (v9 >= 39)
        {
          if (v5) {
            uint64_t v4 = 0;
          }
          _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v4, 248);
        }
        break;
    }
  }
}

uint64_t sub_2607FD970()
{
  return KeyboardReport.remoteTimestamp.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_2607FD990()
{
}

void (*sub_2607FD998(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = KeyboardReport.remoteTimestamp.getter(*(void *)v1, *(void *)(v1 + 8));
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_2607FD9EC;
}

void sub_2607FD9EC()
{
}

uint64_t sub_2607FDA1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = a1 + 14;
  sub_2607DCED0(a3, a4);
  sub_2607FF0D8(a1, v12, a2, a3, a4, a5, a6);
  return sub_2607DCF28(a3, a4);
}

uint64_t sub_2607FDAC4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2607FDAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result = sub_26087AED0();
  uint64_t v12 = result;
  if (result)
  {
    uint64_t result = sub_26087AEF0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_26087AEE0();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = v12 + v16;
  if (v12) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0;
  }
  return a6(v12, v18, a4, a5);
}

uint64_t sub_2607FDBB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v6 = result;
  __int16 v7 = a2;
  char v8 = BYTE2(a2);
  char v9 = BYTE3(a2);
  char v10 = BYTE4(a2);
  char v11 = BYTE5(a2);
  if (a3)
  {
    for (uint64_t i = 0; a3 != i; ++i)
    {
      if (i == 0x7FFFFFFFFFFFFFFFLL) {
        __break(1u);
      }
      if ((unint64_t)(i - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a4 || i >= a5 - a4)
        {
          uint64_t result = sub_26087BA10();
          __break(1u);
          return result;
        }
        *(unsigned char *)(a4 + i) |= *((unsigned char *)&v6 + i);
      }
    }
  }
  return result;
}

uint64_t sub_2607FDD04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v6 = result;
  __int16 v7 = a2;
  char v8 = BYTE2(a2);
  char v9 = BYTE3(a2);
  char v10 = BYTE4(a2);
  char v11 = BYTE5(a2);
  if (a3)
  {
    for (uint64_t i = 0; a3 != i; ++i)
    {
      if (i == 0x7FFFFFFFFFFFFFFFLL) {
        __break(1u);
      }
      if ((unint64_t)(i - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a4 || i >= a5 - a4)
        {
          uint64_t result = sub_26087BA10();
          __break(1u);
          return result;
        }
        *(unsigned char *)(a4 + i) &= *((unsigned char *)&v6 + i);
      }
    }
  }
  return result;
}

uint64_t sub_2607FDE50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v6 = result;
  __int16 v7 = a2;
  char v8 = BYTE2(a2);
  char v9 = BYTE3(a2);
  char v10 = BYTE4(a2);
  char v11 = BYTE5(a2);
  if (a3)
  {
    for (uint64_t i = 0; a3 != i; ++i)
    {
      if (i == 0x7FFFFFFFFFFFFFFFLL) {
        __break(1u);
      }
      if ((unint64_t)(i - 30) >= 0xFFFFFFFFFFFFFFE3)
      {
        if (!a4 || i >= a5 - a4)
        {
          uint64_t result = sub_26087BA10();
          __break(1u);
          return result;
        }
        *(unsigned char *)(a4 + i) ^= *((unsigned char *)&v6 + i);
      }
    }
  }
  return result;
}

uint64_t sub_2607FDF9C(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  return sub_2607FE0AC(a1, a2, a3, (uint64_t)sub_2607FDE50, (uint64_t)sub_2607FD228, (void (*)(void, uint64_t, uint64_t, uint64_t, unint64_t))sub_2607FEA78);
}

uint64_t sub_2607FE024(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  return sub_2607FE0AC(a1, a2, a3, (uint64_t)sub_2607FDD04, (uint64_t)sub_2607FD0AC, (void (*)(void, uint64_t, uint64_t, uint64_t, unint64_t))sub_2607FE748);
}

uint64_t sub_2607FE0AC(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  sub_2607DCED0(a2, a3);
  OUTLINED_FUNCTION_20_5();
  uint64_t v11 = *a1;
  unint64_t v10 = a1[1];
  switch(v10 >> 62)
  {
    case 1uLL:
      uint64_t v14 = v10 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_26087D920;
      OUTLINED_FUNCTION_20_5();
      OUTLINED_FUNCTION_20_5();
      uint64_t v15 = v11 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v15 < (int)v11) {
        goto LABEL_15;
      }
      if (sub_26087AED0() && __OFSUB__((int)v11, sub_26087AEF0())) {
        goto LABEL_16;
      }
      sub_26087AF00();
      swift_allocObject();
      uint64_t v20 = sub_26087AEB0();
      swift_release();
      uint64_t v14 = v20;
      uint64_t v15 = v11 >> 32;
LABEL_11:
      if (v15 < (int)v11)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      OUTLINED_FUNCTION_20_5();
      a6((int)v11, v15, v14, a2, a3);
      OUTLINED_FUNCTION_9_4();
      OUTLINED_FUNCTION_9_4();
      OUTLINED_FUNCTION_9_4();
      *a1 = v11;
      a1[1] = v14 | 0x4000000000000000;
LABEL_13:
      OUTLINED_FUNCTION_9_4();
      return OUTLINED_FUNCTION_9_4();
    case 2uLL:
      *(void *)&long long v22 = *a1;
      *((void *)&v22 + 1) = v10 & 0x3FFFFFFFFFFFFFFFLL;
      OUTLINED_FUNCTION_20_5();
      OUTLINED_FUNCTION_20_5();
      sub_26087AF50();
      uint64_t v16 = *((void *)&v22 + 1);
      uint64_t v17 = a6;
      uint64_t v18 = *(void *)(v22 + 16);
      uint64_t v19 = *(void *)(v22 + 24);
      OUTLINED_FUNCTION_20_5();
      v17(v18, v19, *((void *)&v22 + 1), a2, a3);
      OUTLINED_FUNCTION_9_4();
      OUTLINED_FUNCTION_9_4();
      OUTLINED_FUNCTION_9_4();
      *a1 = v22;
      a1[1] = v16 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v22 + 7) = 0;
      *(void *)&long long v22 = 0;
      OUTLINED_FUNCTION_20_5();
      OUTLINED_FUNCTION_6_6((uint64_t)&v22, 0);
      OUTLINED_FUNCTION_9_4();
      goto LABEL_13;
    default:
      *(void *)&long long v22 = *a1;
      WORD4(v22) = v10;
      BYTE10(v22) = BYTE2(v10);
      BYTE11(v22) = BYTE3(v10);
      BYTE12(v22) = BYTE4(v10);
      BYTE13(v22) = BYTE5(v10);
      uint64_t v12 = BYTE6(v10);
      BYTE14(v22) = BYTE6(v10);
      OUTLINED_FUNCTION_20_5();
      OUTLINED_FUNCTION_6_6((uint64_t)&v22, v12);
      OUTLINED_FUNCTION_9_4();
      unint64_t v13 = DWORD2(v22) | ((unint64_t)BYTE12(v22) << 32) | ((unint64_t)BYTE13(v22) << 40) | ((unint64_t)BYTE14(v22) << 48);
      *a1 = v22;
      a1[1] = v13;
      goto LABEL_13;
  }
}

uint64_t sub_2607FE3EC(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  return sub_2607FE0AC(a1, a2, a3, (uint64_t)sub_2607FDBB8, (uint64_t)sub_2607FCF9C, (void (*)(void, uint64_t, uint64_t, uint64_t, unint64_t))sub_2607FEDA8);
}

unint64_t sub_2607FE478()
{
  unint64_t result = qword_26A8B4830;
  if (!qword_26A8B4830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4830);
  }
  return result;
}

unint64_t sub_2607FE4C8()
{
  unint64_t result = qword_26A8B4838;
  if (!qword_26A8B4838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4838);
  }
  return result;
}

unint64_t sub_2607FE518()
{
  unint64_t result = qword_26A8B4840;
  if (!qword_26A8B4840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4840);
  }
  return result;
}

unint64_t sub_2607FE568()
{
  unint64_t result = qword_26A8B4848;
  if (!qword_26A8B4848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4848);
  }
  return result;
}

unint64_t sub_2607FE5B8()
{
  unint64_t result = qword_26A8B4850;
  if (!qword_26A8B4850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4850);
  }
  return result;
}

unint64_t sub_2607FE608()
{
  unint64_t result = qword_26A8B4858;
  if (!qword_26A8B4858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4858);
  }
  return result;
}

unint64_t sub_2607FE658()
{
  unint64_t result = qword_26A8B4860;
  if (!qword_26A8B4860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4860);
  }
  return result;
}

uint64_t sub_2607FE6A8(unsigned __int8 *a1)
{
  return KeyboardReport.keyboardState.setter(*a1);
}

void type metadata accessor for KeyboardFlags()
{
}

void type metadata accessor for KeyboardReport()
{
}

void type metadata accessor for KeyboardReport.Iterator()
{
}

unint64_t sub_2607FE6FC()
{
  unint64_t result = qword_26A8B4868;
  if (!qword_26A8B4868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4868);
  }
  return result;
}

uint64_t sub_2607FE748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v11 = sub_26087AED0();
  if (!v11) {
    goto LABEL_26;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_26087AEF0();
  uint64_t v14 = a1 - v13;
  if (__OFSUB__(a1, v13))
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  BOOL v15 = __OFSUB__(a2, a1);
  uint64_t v16 = a2 - a1;
  if (v15) {
    goto LABEL_24;
  }
  uint64_t v17 = sub_26087AEE0();
  if (v17 >= v16) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = v12 + v14;
  uint64_t v20 = v12 + v14 + v18;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4) {
        goto LABEL_25;
      }
      swift_retain();
      sub_2607FDAFC((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, v12 + v14, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2607FD0AC);
      if (v6) {
        goto LABEL_29;
      }
      sub_2607DCF28(a4, a5);
LABEL_21:
      uint64_t result = sub_2607DCF28(a4, a5);
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(a4 + 16);
      uint64_t v23 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      sub_2607FDAFC(v22, v23, a5 & 0x3FFFFFFFFFFFFFFFLL, v19, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2607FD0AC);
      if (v6) {
        goto LABEL_28;
      }
      swift_release();
      swift_release();
      goto LABEL_21;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v25 = a4;
      __int16 v26 = a5;
      char v27 = BYTE2(a5);
      char v28 = BYTE3(a5);
      char v29 = BYTE4(a5);
      char v30 = BYTE5(a5);
      if (!BYTE6(a5)) {
        goto LABEL_17;
      }
      uint64_t v21 = 0;
      do
      {
        if ((unint64_t)(v21 - 30) >= 0xFFFFFFFFFFFFFFE3)
        {
          if (v21 >= v18)
          {
            sub_26087BA10();
            __break(1u);
LABEL_28:
            swift_release();
            swift_release();
            __break(1u);
LABEL_29:
            sub_2607DCF28(a4, a5);
            __break(1u);
            JUMPOUT(0x2607FEA68);
          }
          *(unsigned char *)(v19 + v21) &= *((unsigned char *)&v25 + v21);
        }
        ++v21;
      }
      while (BYTE6(a5) != v21);
LABEL_17:
      uint64_t result = sub_2607DCF28(a4, a5);
      break;
  }
  return result;
}

uint64_t sub_2607FEA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v11 = sub_26087AED0();
  if (!v11) {
    goto LABEL_26;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_26087AEF0();
  uint64_t v14 = a1 - v13;
  if (__OFSUB__(a1, v13))
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  BOOL v15 = __OFSUB__(a2, a1);
  uint64_t v16 = a2 - a1;
  if (v15) {
    goto LABEL_24;
  }
  uint64_t v17 = sub_26087AEE0();
  if (v17 >= v16) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = v12 + v14;
  uint64_t v20 = v12 + v14 + v18;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4) {
        goto LABEL_25;
      }
      swift_retain();
      sub_2607FDAFC((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, v12 + v14, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2607FD228);
      if (v6) {
        goto LABEL_29;
      }
      sub_2607DCF28(a4, a5);
LABEL_21:
      uint64_t result = sub_2607DCF28(a4, a5);
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(a4 + 16);
      uint64_t v23 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      sub_2607FDAFC(v22, v23, a5 & 0x3FFFFFFFFFFFFFFFLL, v19, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2607FD228);
      if (v6) {
        goto LABEL_28;
      }
      swift_release();
      swift_release();
      goto LABEL_21;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v25 = a4;
      __int16 v26 = a5;
      char v27 = BYTE2(a5);
      char v28 = BYTE3(a5);
      char v29 = BYTE4(a5);
      char v30 = BYTE5(a5);
      if (!BYTE6(a5)) {
        goto LABEL_17;
      }
      uint64_t v21 = 0;
      do
      {
        if ((unint64_t)(v21 - 30) >= 0xFFFFFFFFFFFFFFE3)
        {
          if (v21 >= v18)
          {
            sub_26087BA10();
            __break(1u);
LABEL_28:
            swift_release();
            swift_release();
            __break(1u);
LABEL_29:
            sub_2607DCF28(a4, a5);
            __break(1u);
            JUMPOUT(0x2607FED98);
          }
          *(unsigned char *)(v19 + v21) ^= *((unsigned char *)&v25 + v21);
        }
        ++v21;
      }
      while (BYTE6(a5) != v21);
LABEL_17:
      uint64_t result = sub_2607DCF28(a4, a5);
      break;
  }
  return result;
}

uint64_t sub_2607FEDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v11 = sub_26087AED0();
  if (!v11) {
    goto LABEL_26;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_26087AEF0();
  uint64_t v14 = a1 - v13;
  if (__OFSUB__(a1, v13))
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  BOOL v15 = __OFSUB__(a2, a1);
  uint64_t v16 = a2 - a1;
  if (v15) {
    goto LABEL_24;
  }
  uint64_t v17 = sub_26087AEE0();
  if (v17 >= v16) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = v12 + v14;
  uint64_t v20 = v12 + v14 + v18;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4) {
        goto LABEL_25;
      }
      swift_retain();
      sub_2607FDAFC((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, v12 + v14, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2607FCF9C);
      if (v6) {
        goto LABEL_29;
      }
      sub_2607DCF28(a4, a5);
LABEL_21:
      uint64_t result = sub_2607DCF28(a4, a5);
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(a4 + 16);
      uint64_t v23 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      sub_2607FDAFC(v22, v23, a5 & 0x3FFFFFFFFFFFFFFFLL, v19, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2607FCF9C);
      if (v6) {
        goto LABEL_28;
      }
      swift_release();
      swift_release();
      goto LABEL_21;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v25 = a4;
      __int16 v26 = a5;
      char v27 = BYTE2(a5);
      char v28 = BYTE3(a5);
      char v29 = BYTE4(a5);
      char v30 = BYTE5(a5);
      if (!BYTE6(a5)) {
        goto LABEL_17;
      }
      uint64_t v21 = 0;
      do
      {
        if ((unint64_t)(v21 - 30) >= 0xFFFFFFFFFFFFFFE3)
        {
          if (v21 >= v18)
          {
            sub_26087BA10();
            __break(1u);
LABEL_28:
            swift_release();
            swift_release();
            __break(1u);
LABEL_29:
            sub_2607DCF28(a4, a5);
            __break(1u);
            JUMPOUT(0x2607FF0C8);
          }
          *(unsigned char *)(v19 + v21) |= *((unsigned char *)&v25 + v21);
        }
        ++v21;
      }
      while (BYTE6(a5) != v21);
LABEL_17:
      uint64_t result = sub_2607DCF28(a4, a5);
      break;
  }
  return result;
}

uint64_t sub_2607FF0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v8 = a1 + a3;
  }
  else {
    uint64_t v8 = 0;
  }
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4)
      {
        __break(1u);
LABEL_15:
        swift_release();
        swift_release();
        __break(1u);
LABEL_16:
        OUTLINED_FUNCTION_12_5();
        __break(1u);
        JUMPOUT(0x2607FF268);
      }
      swift_retain();
      sub_2607FDAFC((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, a1, v8, a7);
      if (v7) {
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_12_5();
      return OUTLINED_FUNCTION_12_5();
    case 2uLL:
      uint64_t v16 = *(void *)(a4 + 16);
      uint64_t v17 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      sub_2607FDAFC(v16, v17, a5 & 0x3FFFFFFFFFFFFFFFLL, a1, v8, a7);
      if (v7) {
        goto LABEL_15;
      }
      swift_release();
      swift_release();
      return OUTLINED_FUNCTION_12_5();
    case 3uLL:
      uint64_t v15 = 0;
      uint64_t v14 = 0;
      uint64_t v13 = 0;
      goto LABEL_9;
    default:
      uint64_t v13 = BYTE6(a5);
      uint64_t v14 = a5 & 0xFFFFFFFFFFFFLL;
      uint64_t v15 = a4;
LABEL_9:
      a6(v15, v14, v13, a1, v8);
      return OUTLINED_FUNCTION_12_5();
  }
}

uint64_t OUTLINED_FUNCTION_0_9(uint64_t a1)
{
  return sub_2607FC6BC(a1, v1, 0xE0u);
}

uint64_t OUTLINED_FUNCTION_6_6(uint64_t a1, uint64_t a2)
{
  return sub_2607FDA1C(a1, a2, v4, v2, v5, v3);
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  return sub_26087B630();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  return HIDReport.mask(for:)(v0);
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return HIDReport.mask(for:)(v0);
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t sub_2607FF338@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4578 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0xFu);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 15);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF3B8@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4540 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(6u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 6);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF434@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4508 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(7u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 7);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF4B4@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4580 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(5u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 5);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF534@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(2u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF5B0@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44C0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(1u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF62C@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4558 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0x10u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 16);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF6AC@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4520 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(9u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 9);
  DigitizerReport.init(_report:)(result, v4);
  *a1 = result;
  a1[1] = v5;
  return result;
}

uint64_t sub_2607FF730@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44F8 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0xBu);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 11);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF7B0@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44A8 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0xEu);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 14);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF830@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44B8 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0x11u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 17);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF8B0@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4570 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0x12u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 18);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF930@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44A0 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0x14u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 20);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FF9B0@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44D0 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0x13u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 19);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FFA30@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B4500 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0xDu);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 13);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FFAB0@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44F0 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0xCu);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 12);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FFB30@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44B0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(4u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 4);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2607FFBAC@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26A8B44C8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_18_3();
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(3u);
  uint64_t result = HIDReport.init(bitCount:id:)(v2, 3);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t EventReportProtocol<>.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = static EventReportProtocol<>.reportBitCount.getter(a1, a2);
  char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v8 = HIDReport.init(bitCount:id:)(v6, v7);
  char v9 = *(uint64_t (**)(uint64_t))(a3 + 40);
  return v9(v8);
}

void sub_2607FFCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_26080039C(a1, a2, 20, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2607FFCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v14 = v13;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v16)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x2607FFDC0);
      }
      uint64_t v15 = (int)v15;
LABEL_6:
      if (8 * v15 > 15)
      {
        uint64_t v19 = HIDReport.init(bitCount:id:)(8 * v15, v12);
        OUTLINED_FUNCTION_1_10(v19, v20);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v17 = a9;
        unint64_t v18 = a10;
        if (v10)
        {
          *uint64_t v14 = a9;
          v14[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v17 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v17, v18);
      *(_OWORD *)uint64_t v14 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v16) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v15 = BYTE6(v11);
      goto LABEL_6;
  }
}

double sub_2607FFDD0@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v3 = a2;
  uint64_t v4 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x2607FFEE0);
      }
      uint64_t v6 = (int)v6;
      if (8 * v6 <= 103) {
        goto LABEL_9;
      }
LABEL_6:
      uint64_t v10 = HIDReport.init(bitCount:id:)(8 * v6, 7);
      unint64_t v12 = v11;
      unint64_t v15 = v11;
      sub_2607DCED0(v10, v11);
      char v13 = HIDReport.initialize(from:)(v4, v3);
      sub_2607DCF28(v4, v3);
      sub_2607DCF28(v10, v12);
      a1 = v10;
      a2 = v15;
      if (v13)
      {
        *a3 = v10;
        a3[1] = v15;
      }
      else
      {
LABEL_9:
        sub_2607DCF28(a1, a2);
        double result = 0.0;
        *(_OWORD *)a3 = xmmword_26087D470;
      }
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void sub_2607FFEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  char v13 = v12;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v15)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x2607FFFC0);
      }
      uint64_t v14 = (int)v14;
LABEL_6:
      if (8 * v14 > 135)
      {
        uint64_t v18 = HIDReport.init(bitCount:id:)(8 * v14, 5);
        OUTLINED_FUNCTION_1_10(v18, v19);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v16 = a9;
        unint64_t v17 = a10;
        if (v10)
        {
          *char v13 = a9;
          v13[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v16 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v16, v17);
      *(_OWORD *)char v13 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v14 = BYTE6(v11);
      goto LABEL_6;
  }
}

void sub_2607FFFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  char v13 = v12;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v15)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x2608000A0);
      }
      uint64_t v14 = (int)v14;
LABEL_6:
      if (8 * v14 > 71)
      {
        uint64_t v18 = HIDReport.init(bitCount:id:)(8 * v14, 2);
        OUTLINED_FUNCTION_1_10(v18, v19);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v16 = a9;
        unint64_t v17 = a10;
        if (v10)
        {
          *char v13 = a9;
          v13[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v16 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v16, v17);
      *(_OWORD *)char v13 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v14 = BYTE6(v11);
      goto LABEL_6;
  }
}

void sub_2608000B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  char v13 = v12;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v15)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x260800180);
      }
      uint64_t v14 = (int)v14;
LABEL_6:
      if (8 * v14 > 247)
      {
        uint64_t v18 = HIDReport.init(bitCount:id:)(8 * v14, 1);
        OUTLINED_FUNCTION_1_10(v18, v19);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v16 = a9;
        unint64_t v17 = a10;
        if (v10)
        {
          *char v13 = a9;
          v13[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v16 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v16, v17);
      *(_OWORD *)char v13 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v14 = BYTE6(v11);
      goto LABEL_6;
  }
}

void sub_260800190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v14 = v13;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v16)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x260800260);
      }
      uint64_t v15 = (int)v15;
LABEL_6:
      if (8 * v15 > 31)
      {
        uint64_t v19 = HIDReport.init(bitCount:id:)(8 * v15, v12);
        OUTLINED_FUNCTION_1_10(v19, v20);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v17 = a9;
        unint64_t v18 = a10;
        if (v10)
        {
          *uint64_t v14 = a9;
          v14[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v17 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v17, v18);
      *(_OWORD *)uint64_t v14 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v16) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v15 = BYTE6(v11);
      goto LABEL_6;
  }
}

double sub_260800270@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v3 = a2;
  uint64_t v4 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x26080038CLL);
      }
      uint64_t v6 = (int)v6;
      if (8 * v6 <= 319) {
        goto LABEL_9;
      }
LABEL_6:
      uint64_t v10 = HIDReport.init(bitCount:id:)(8 * v6, 9);
      unint64_t v12 = v11;
      sub_2607DCED0(v10, v11);
      DigitizerReport.init(_report:)(v10, v12);
      unint64_t v16 = v13;
      char v14 = HIDReport.initialize(from:)(v4, v3);
      sub_2607DCF28(v4, v3);
      sub_2607DCF28(v10, v12);
      a1 = v10;
      a2 = v16;
      if (v14)
      {
        *a3 = v10;
        a3[1] = v16;
      }
      else
      {
LABEL_9:
        sub_2607DCF28(a1, a2);
        double result = 0.0;
        *(_OWORD *)a3 = xmmword_26087D470;
      }
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void sub_26080039C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  char v14 = v13;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v16)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x26080046CLL);
      }
      uint64_t v15 = (int)v15;
LABEL_6:
      if (8 * v15 > 47)
      {
        uint64_t v19 = HIDReport.init(bitCount:id:)(8 * v15, v12);
        OUTLINED_FUNCTION_1_10(v19, v20);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v17 = a9;
        unint64_t v18 = a10;
        if (v10)
        {
          *char v14 = a9;
          v14[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v17 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v17, v18);
      *(_OWORD *)char v14 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v16) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v15 = BYTE6(v11);
      goto LABEL_6;
  }
}

double sub_26080047C@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v3 = a2;
  uint64_t v4 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x26080058CLL);
      }
      uint64_t v6 = (int)v6;
      if (8 * v6 <= 303) {
        goto LABEL_9;
      }
LABEL_6:
      uint64_t v10 = HIDReport.init(bitCount:id:)(8 * v6, 18);
      unint64_t v12 = v11;
      unint64_t v15 = v11;
      sub_2607DCED0(v10, v11);
      char v13 = HIDReport.initialize(from:)(v4, v3);
      sub_2607DCF28(v4, v3);
      sub_2607DCF28(v10, v12);
      a1 = v10;
      a2 = v15;
      if (v13)
      {
        *a3 = v10;
        a3[1] = v15;
      }
      else
      {
LABEL_9:
        sub_2607DCF28(a1, a2);
        double result = 0.0;
        *(_OWORD *)a3 = xmmword_26087D470;
      }
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void sub_26080059C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  char v14 = v13;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v16)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x26080066CLL);
      }
      uint64_t v15 = (int)v15;
LABEL_6:
      if (8 * v15 > 151)
      {
        uint64_t v19 = HIDReport.init(bitCount:id:)(8 * v15, v12);
        OUTLINED_FUNCTION_1_10(v19, v20);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v17 = a9;
        unint64_t v18 = a10;
        if (v10)
        {
          *char v14 = a9;
          v14[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v17 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v17, v18);
      *(_OWORD *)char v14 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v16) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v15 = BYTE6(v11);
      goto LABEL_6;
  }
}

void sub_26080067C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  char v13 = v12;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v15)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x26080074CLL);
      }
      uint64_t v14 = (int)v14;
LABEL_6:
      if (8 * v14 > 39)
      {
        uint64_t v18 = HIDReport.init(bitCount:id:)(8 * v14, 4);
        OUTLINED_FUNCTION_1_10(v18, v19);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v16 = a9;
        unint64_t v17 = a10;
        if (v10)
        {
          *char v13 = a9;
          v13[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v16 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v16, v17);
      *(_OWORD *)char v13 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v14 = BYTE6(v11);
      goto LABEL_6;
  }
}

void sub_26080075C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  OUTLINED_FUNCTION_12_6();
  char v13 = v12;
  switch(v11 >> 62)
  {
    case 1uLL:
      OUTLINED_FUNCTION_10_6();
      if (v15)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x26080082CLL);
      }
      uint64_t v14 = (int)v14;
LABEL_6:
      if (8 * v14 > 23)
      {
        uint64_t v18 = HIDReport.init(bitCount:id:)(8 * v14, 3);
        OUTLINED_FUNCTION_1_10(v18, v19);
        OUTLINED_FUNCTION_3_7();
        OUTLINED_FUNCTION_2_8();
        OUTLINED_FUNCTION_8_7();
        uint64_t v16 = a9;
        unint64_t v17 = a10;
        if (v10)
        {
          *char v13 = a9;
          v13[1] = a10;
          goto LABEL_11;
        }
      }
      else
      {
LABEL_7:
        uint64_t v16 = OUTLINED_FUNCTION_107();
      }
      sub_2607DCF28(v16, v17);
      *(_OWORD *)char v13 = xmmword_26087D470;
LABEL_11:
      OUTLINED_FUNCTION_14_5();
      return;
    case 2uLL:
      OUTLINED_FUNCTION_9_6();
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v14 = BYTE6(v11);
      goto LABEL_6;
  }
}

void EventReportProtocol<>.init(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_0_0();
  long long v34 = v0;
  uint64_t v35 = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = 8 * sub_26087B040();
  uint64_t v18 = OUTLINED_FUNCTION_25_1();
  if (v17 >= v19(v18))
  {
    uint64_t v33 = v11;
    uint64_t v21 = OUTLINED_FUNCTION_25_1();
    char v23 = v22(v21);
    uint64_t v24 = HIDReport.init(bitCount:id:)(v17, v23);
    unint64_t v26 = v25;
    unint64_t v32 = v7;
    char v27 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v3 + 40);
    sub_2607DCED0(v24, v25);
    v27(v24, v26, v5, v3);
    long long v34 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
    v34(v16, v1, v5);
    char v28 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v3 + 24))(v36, v5, v3);
    unint64_t v29 = v32;
    char v30 = HIDReport.initialize(from:)(v9, v32);
    v28(v36, 0);
    sub_2607DCF28(v9, v29);
    sub_2607DCF28(v24, v26);
    if (v30)
    {
      uint64_t v11 = v33;
      v34((char *)v33, (uint64_t)v16, v5);
      uint64_t v20 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_16_5();
      v31();
      uint64_t v20 = 1;
      uint64_t v11 = v33;
    }
  }
  else
  {
    sub_2607DCF28(v9, v7);
    uint64_t v20 = 1;
  }
  __swift_storeEnumTagSinglePayload(v11, v20, 1, v5);
  OUTLINED_FUNCTION_14_0();
}

void EventReportProtocol<>.description.getter()
{
  OUTLINED_FUNCTION_12_6();
  sub_26087BD50();
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  uint64_t v0 = OUTLINED_FUNCTION_107();
  uint64_t v2 = v1(v0);
  unint64_t v4 = v3;
  HIDReport.description.getter(v2, v3);
  sub_2607DCF28(v2, v4);
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  OUTLINED_FUNCTION_14_5();
}

void sub_260800B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2607FFCF0(a1, a2, 14, a4, a5, a6, a7, a8, vars0, vars8);
}

void EventReportProtocol<>.union(_:)()
{
}

uint64_t EventReportProtocol<>.intersection(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
  return sub_26087B750();
}

void EventReportProtocol<>.symmetricDifference(_:)()
{
}

void sub_260800C10()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_9_0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v17(v10, v0, v6);
  v17(v16, v8, v6);
  v2(v16, v6, v4);
  OUTLINED_FUNCTION_14_0();
}

void EventReportProtocol<>.insert(_:)()
{
  OUTLINED_FUNCTION_11_0();
  v17[0] = v1;
  v17[1] = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_26087B620();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v4 + 16);
  OUTLINED_FUNCTION_22_3();
  v12(v13, v14);
  sub_26087B780();
  __swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  OUTLINED_FUNCTION_22_3();
  v12(v15, v16);
  OUTLINED_FUNCTION_14_0();
}

void EventReportProtocol<>.formUnion(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v29 = v1;
  uint64_t v30 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  v26[0] = v7;
  MEMORY[0x270FA5388](v8);
  char v27 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v10);
  sub_26087B620();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v26 - v12;
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_9_0();
  uint64_t v19 = v18 - v17;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  v26[1] = v20;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v5, v3);
  sub_26087B380();
  uint64_t v28 = v3;
  swift_getAssociatedConformanceWitness();
  sub_26087B630();
  OUTLINED_FUNCTION_4_6((uint64_t)v13);
  if (!v22)
  {
    char v23 = *(void (**)(char *, char *, uint64_t))(v26[0] + 32);
    do
    {
      v23(v27, v13, AssociatedTypeWitness);
      sub_26087B760();
      OUTLINED_FUNCTION_18_5();
      v24();
      sub_26087B630();
      OUTLINED_FUNCTION_4_6((uint64_t)v13);
    }
    while (!v22);
  }
  OUTLINED_FUNCTION_16_5();
  v25();
  OUTLINED_FUNCTION_14_0();
}

void EventReportProtocol<>.formIntersection(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v51 = v1;
  uint64_t v48 = v2;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v49 = v3;
  MEMORY[0x270FA5388](v4);
  unint64_t v46 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v6);
  unint64_t v45 = (char *)&v36 - v7;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v8);
  uint64_t v41 = OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_26_1();
  uint64_t v40 = v11;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v39 = v15;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v36 - v17;
  OUTLINED_FUNCTION_0_0();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_17_5();
  MEMORY[0x270FA5388](v22);
  uint64_t v38 = v20;
  char v23 = *(void (**)(void))(v20 + 16);
  uint64_t v47 = (char *)&v36 - v24;
  OUTLINED_FUNCTION_23_2();
  v23();
  uint64_t v42 = v0;
  OUTLINED_FUNCTION_23_2();
  v23();
  sub_26087B380();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v48 = v18;
  uint64_t v44 = AssociatedConformanceWitness;
  sub_26087B630();
  OUTLINED_FUNCTION_4_6((uint64_t)v14);
  if (!v26)
  {
    uint64_t v43 = *(void *)(v49 + 32);
    v49 += 32;
    char v27 = (void (**)(void))(v49 - 24);
    uint64_t v28 = (void (**)(uint64_t, uint64_t))(v37 + 8);
    do
    {
      OUTLINED_FUNCTION_21_4();
      v29();
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_23_2();
      v30();
      char v31 = sub_26087B760();
      unint64_t v32 = *v27;
      OUTLINED_FUNCTION_18_5();
      v32();
      if (v31)
      {
        uint64_t v33 = v40;
        sub_26087B770();
        (*v28)(v33, v41);
      }
      OUTLINED_FUNCTION_18_5();
      v32();
      sub_26087B630();
      OUTLINED_FUNCTION_4_6((uint64_t)v14);
    }
    while (!v26);
  }
  OUTLINED_FUNCTION_16_5();
  v34();
  OUTLINED_FUNCTION_16_5();
  v35();
  OUTLINED_FUNCTION_14_0();
}

void EventReportProtocol<>.formSymmetricDifference(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v47 = v2;
  uint64_t v48 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v46 = v4;
  MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (char *)&v35 - v8;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v9);
  uint64_t v39 = OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_0_0();
  uint64_t v36 = v10;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_26_1();
  uint64_t v38 = v12;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v35 - v14;
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_9_0();
  uint64_t v17 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v18;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v35 - v20;
  OUTLINED_FUNCTION_23_2();
  v22();
  sub_26087B380();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v44 = v21;
  uint64_t v45 = v17;
  uint64_t v41 = AssociatedConformanceWitness;
  sub_26087B630();
  OUTLINED_FUNCTION_4_6((uint64_t)v15);
  if (!v24)
  {
    uint64_t v40 = *(void *)(v46 + 32);
    v46 += 32;
    unint64_t v25 = (void (**)(char *, uint64_t))(v46 - 24);
    char v26 = (void (**)(uint64_t, uint64_t))(v36 + 8);
    do
    {
      OUTLINED_FUNCTION_21_4();
      v27();
      uint64_t v28 = OUTLINED_FUNCTION_24_1();
      v29(v28);
      uint64_t v30 = v42;
      char v31 = sub_26087B760();
      unint64_t v32 = *v25;
      (*v25)(v30, AssociatedTypeWitness);
      if ((v31 & 1) == 0)
      {
        uint64_t v33 = v38;
        sub_26087B770();
        (*v26)(v33, v39);
      }
      v32(v1, AssociatedTypeWitness);
      sub_26087B630();
      OUTLINED_FUNCTION_4_6((uint64_t)v15);
    }
    while (!v24);
  }
  OUTLINED_FUNCTION_16_5();
  v34();
  OUTLINED_FUNCTION_14_0();
}

void EventReportProtocol<>.init<A>(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v38 = v0;
  v34[1] = v1;
  uint64_t v35 = v3;
  uint64_t v36 = v2;
  uint64_t v40 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  v34[0] = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v37 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v34 - v16;
  sub_26087B620();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v34 - v19;
  OUTLINED_FUNCTION_0_0();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_9_0();
  uint64_t v26 = v25 - v24;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  v34[2] = v27;
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = *(void (**)(uint64_t))(v35 + 32);
  uint64_t v39 = v10;
  uint64_t v38 = v8;
  v29(v8);
  v34[3] = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v36, v6);
  sub_26087B380();
  uint64_t v35 = v6;
  swift_getAssociatedConformanceWitness();
  sub_26087B630();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v34[0] + 32);
    char v31 = (void (**)(char *, uint64_t))(v34[0] + 8);
    do
    {
      v30(v37, v20, AssociatedTypeWitness);
      sub_26087B760();
      (*v31)(v17, AssociatedTypeWitness);
      sub_26087B630();
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, AssociatedTypeWitness) != 1);
  }
  OUTLINED_FUNCTION_16_5();
  v32();
  OUTLINED_FUNCTION_16_5();
  v33();
  OUTLINED_FUNCTION_14_0();
}

void sub_260801B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_26080039C(a1, a2, 17, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t static EventReportProtocol<>.reportBitCount.getter(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = (*(uint64_t (**)(void))(a2 + 24))();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v7, a1, a2);
  uint64_t v5 = HIDReportDescriptor.reportBitCount(for:)(v4);
  sub_2607DCF28(v7[0], v7[1]);
  return v5;
}

void sub_260801BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_26080059C(a1, a2, 19, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_260801BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_26080059C(a1, a2, 12, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_260801C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_26080059C(a1, a2, 11, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_260801C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_26080059C(a1, a2, 13, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_260801C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2607FFCF0(a1, a2, 6, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t dispatch thunk of static EventReportDescriptorProtocol.initialReportBitCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static EventReportDescriptorProtocol.descriptor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static EventReportDescriptorProtocol.reportID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventReportProtocol.report.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventReportProtocol.report.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of EventReportProtocol.report.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EventReportProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventReportProtocol.init(_report:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of EventReportProtocol.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

void sub_260801D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_260800190(a1, a2, 16, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_260801D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_260800190(a1, a2, 15, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t OUTLINED_FUNCTION_1_10(uint64_t a1, unint64_t a2)
{
  return sub_2607DCED0(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return HIDReport.initialize(from:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_6(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  return sub_2607DCF28(v0, v1);
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return sub_26087B620();
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return *(void *)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return v0;
}

uint64_t static AppleVendorKeyboardReport.initialReportBitCount.getter()
{
  return 24;
}

uint64_t static AppleVendorKeyboardReport.reportID.getter()
{
  return 3;
}

uint64_t sub_260801F3C()
{
  uint64_t result = sub_260801F60();
  *(void *)&xmmword_26A8B4870 = result;
  *((void *)&xmmword_26A8B4870 + 1) = v1;
  return result;
}

uint64_t sub_260801F60()
{
  LOBYTE(v60[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v60, 0xFF01uLL);
  unint64_t v43 = v1;
  uint64_t v44 = v0;
  LOBYTE(v60[0]) = 18;
  uint64_t v50 = sub_2608155C0((char *)v60, 1uLL);
  unint64_t v3 = v2;
  LOBYTE(v60[0]) = 19;
  uint64_t v4 = sub_2608155C0((char *)v60, 0x30uLL);
  unint64_t v6 = v5;
  LOBYTE(v60[0]) = 14;
  uint64_t v7 = sub_260815298((char *)v60, 2);
  unint64_t v49 = v8;
  LOBYTE(v60[0]) = 12;
  uint64_t v9 = sub_2608155C0((char *)v60, 8uLL);
  unint64_t v47 = v10;
  uint64_t v48 = v9;
  LOBYTE(v60[0]) = 6;
  uint64_t v11 = sub_260815298((char *)v60, 0);
  unint64_t v45 = v12;
  uint64_t v46 = v11;
  LOBYTE(v60[0]) = 7;
  uint64_t v13 = sub_260815298((char *)v60, 255);
  unint64_t v40 = v14;
  uint64_t v41 = v13;
  LOBYTE(v55[0]) = 0;
  __int16 v59 = 0;
  __int16 v58 = 0;
  __int16 v57 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v55, (unsigned char *)&v59 + 1, &v59, (unsigned char *)&v58 + 1, &v58, (unsigned char *)&v57 + 1, &v57, v60);
  LOBYTE(v55[0]) = 5;
  uint64_t v33 = sub_2608155C0((char *)v55, 0xFF00uLL);
  unint64_t v54 = v15;
  LOBYTE(v55[0]) = 17;
  uint64_t v16 = sub_2608155C0((char *)v55, 0x102uLL);
  unint64_t v52 = v17;
  uint64_t v53 = v16;
  LOBYTE(v55[0]) = 6;
  uint64_t v42 = sub_260815298((char *)v55, 0);
  unint64_t v51 = v18;
  LOBYTE(v55[0]) = 7;
  uint64_t v19 = sub_260815298((char *)v55, 255);
  unint64_t v38 = v20;
  uint64_t v39 = v19;
  LOBYTE(v55[0]) = 12;
  uint64_t v21 = sub_2608155C0((char *)v55, 8uLL);
  unint64_t v36 = v22;
  uint64_t v37 = v21;
  LOBYTE(v55[0]) = 14;
  uint64_t v23 = sub_260815298((char *)v55, 8);
  unint64_t v34 = v24;
  uint64_t v35 = v23;
  __int16 v59 = 1;
  __int16 v58 = 0;
  __int16 v57 = 0;
  char v56 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v59 + 1, &v59, (unsigned char *)&v58 + 1, &v58, (unsigned char *)&v57 + 1, &v57, &v56, v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D530;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 96) = &type metadata for UsagePage;
  *(void *)(inited + 104) = &protocol witness table for UsagePage;
  *(void *)(inited + 72) = v44;
  *(void *)(inited + 80) = v43;
  *(void *)(inited + 136) = &type metadata for UsageMinimum;
  *(void *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(void *)(inited + 112) = v50;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 176) = &type metadata for UsageMaximum;
  *(void *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(void *)(inited + 152) = v4;
  *(void *)(inited + 160) = v6;
  *(void *)(inited + 216) = &type metadata for ReportCount;
  *(void *)(inited + 224) = &protocol witness table for ReportCount;
  *(void *)(inited + 416) = &type metadata for UsagePage;
  *(void *)(inited + 424) = &protocol witness table for UsagePage;
  *(void *)(inited + 456) = &type metadata for Usage;
  *(void *)(inited + 192) = v7;
  *(void *)(inited + 200) = v49;
  *(void *)(inited + 464) = &protocol witness table for Usage;
  *(void *)(inited + 296) = &type metadata for LogicalMinimum;
  *(void *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 496) = &type metadata for LogicalMinimum;
  *(void *)(inited + 504) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 536) = &type metadata for LogicalMaximum;
  *(void *)(inited + 336) = &type metadata for LogicalMaximum;
  *(void *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 544) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 256) = &type metadata for ReportSize;
  *(void *)(inited + 264) = &protocol witness table for ReportSize;
  *(void *)(inited + 232) = v48;
  *(void *)(inited + 240) = v47;
  *(void *)(inited + 272) = v46;
  *(void *)(inited + 280) = v45;
  *(void *)(inited + 312) = v41;
  *(void *)(inited + 320) = v40;
  *(void *)(inited + 576) = &type metadata for ReportSize;
  *(void *)(inited + 584) = &protocol witness table for ReportSize;
  uint64_t v31 = v60[0];
  uint64_t v26 = v60[0];
  unint64_t v32 = v60[1];
  *(void *)(inited + 616) = &type metadata for ReportCount;
  *(void *)(inited + 624) = &protocol witness table for ReportCount;
  *(void *)(inited + 376) = &type metadata for Input;
  *(void *)(inited + 384) = &protocol witness table for Input;
  *(void *)(inited + 352) = v26;
  *(void *)(inited + 360) = v32;
  *(void *)(inited + 392) = v33;
  *(void *)(inited + 400) = v54;
  *(void *)(inited + 432) = v53;
  *(void *)(inited + 440) = v52;
  *(void *)(inited + 472) = v42;
  *(void *)(inited + 480) = v51;
  *(void *)(inited + 512) = v39;
  *(void *)(inited + 520) = v38;
  *(void *)(inited + 552) = v37;
  *(void *)(inited + 560) = v36;
  *(void *)(inited + 592) = v35;
  *(void *)(inited + 600) = v34;
  *(void *)(inited + 656) = &type metadata for Input;
  *(void *)(inited + 664) = &protocol witness table for Input;
  uint64_t v28 = v55[0];
  unint64_t v29 = v55[1];
  *(void *)(inited + 632) = v55[0];
  *(void *)(inited + 640) = v29;
  sub_2607DCED0(v44, v43);
  sub_2607DCED0(v50, v3);
  sub_2607DCED0(v4, v6);
  sub_2607DCED0(v7, v49);
  sub_2607DCED0(v48, v47);
  sub_2607DCED0(v46, v45);
  sub_2607DCED0(v41, v40);
  sub_2607DCED0(v31, v32);
  sub_2607DCED0(v33, v54);
  sub_2607DCED0(v53, v52);
  sub_2607DCED0(v42, v51);
  sub_2607DCED0(v39, v38);
  sub_2607DCED0(v37, v36);
  sub_2607DCED0(v35, v34);
  sub_2607DCED0(v28, v29);
  uint64_t v30 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v28, v29);
  sub_2607DCF28(v35, v34);
  sub_2607DCF28(v37, v36);
  sub_2607DCF28(v39, v38);
  sub_2607DCF28(v42, v51);
  sub_2607DCF28(v53, v52);
  sub_2607DCF28(v33, v54);
  sub_2607DCF28(v31, v32);
  sub_2607DCF28(v41, v40);
  sub_2607DCF28(v46, v45);
  sub_2607DCF28(v48, v47);
  sub_2607DCF28(v7, v49);
  sub_2607DCF28(v4, v6);
  sub_2607DCF28(v50, v3);
  sub_2607DCF28(v44, v43);
  return v30;
}

uint64_t static AppleVendorKeyboardReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44C8 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B4870;
  *a1 = xmmword_26A8B4870;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_26080250C()
{
  return 24;
}

uint64_t sub_260802518()
{
  return 3;
}

uint64_t AppleVendorKeyboardReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t AppleVendorKeyboardReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*AppleVendorKeyboardReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_2608025AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppleVendorKeyboardReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t AppleVendorKeyboardReport.description.getter(uint64_t a1, unint64_t a2)
{
  sub_2607DCED0(a1, a2);
  uint64_t v4 = 8;
  char v5 = 1;
  do
  {
    char v6 = v5;
    unsigned __int8 v7 = sub_2607DB19C(v4, a1, a2);
    if ((v7 - 49) > 0xCFu && v7 <= 0x21u && ((1 << v7) & 0x30003001ELL) != 0)
    {
      sub_2607DDC34();
      sub_26087B360();
      sub_26087B330();
      sub_26087B330();
      swift_bridgeObjectRelease();
    }
    char v5 = 0;
    uint64_t v4 = 16;
  }
  while ((v6 & 1) != 0);
  sub_2607DCF28(a1, a2);
  swift_bridgeObjectRetain();
  sub_26087B330();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

uint64_t AppleVendorKeyboardReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2607DCED0(a1, a2);
}

void AppleVendorKeyboardReport.Iterator.next()()
{
  uint64_t v1 = v0[2];
  if (v1 <= 1)
  {
    uint64_t v2 = *v0;
    unint64_t v3 = v0[1];
    uint64_t v4 = 8 * v1;
    while ((unint64_t)(v1 - 0x1000000000000000) >> 61 == 7)
    {
      if (__OFADD__(v4, 8)) {
        goto LABEL_12;
      }
      unsigned __int8 v5 = sub_2607DB19C(v4 + 8, v2, v3);
      if ((v5 - 49) >= 0xD0u && v5 <= 0x21u && ((1 << v5) & 0x30003001ELL) != 0)
      {
        v0[2] = v1 + 1;
        return;
      }
      v0[2] = ++v1;
      v4 += 8;
      if (v1 == 2) {
        return;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

unint64_t sub_26080281C()
{
  return AppleVendorKeyboardReport.description.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_260802824()
{
  AppleVendorKeyboardReport.Iterator.next()();
  return OUTLINED_FUNCTION_2_0(v0);
}

uint64_t sub_26080284C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  AppleVendorKeyboardReport.makeIterator()(v2, v3, a1);
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_260802890()
{
  return sub_2608359F8();
}

uint64_t sub_260802898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26083E324(a1, a2, a3, *v3, v3[1]);
}

uint64_t AppleVendorKeyboardReport.update(with:)(uint64_t a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_26087B060();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = *v1;
  unint64_t v5 = v1[1];
  uint64_t v6 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)v4;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(v4 + 16);
      break;
    default:
      break;
  }
  uint64_t v7 = v6 + 2;
  if (__OFADD__(v6, 2))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v8 = v6 + 1;
  if (v7 < v6 + 1)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v32 = v6;
  sub_2607DCED0(v4, v5);
  uint64_t v9 = sub_2607F8EFC(v8, v7, v4, v5);
  unint64_t v11 = v10;
  sub_2607DCF28(v4, v5);
  unint64_t v12 = v11 >> 62;
  sub_2607DCED0(v9, v11);
  sub_26087AF90();
  sub_2607DCF28(v9, v11);
  sub_2607F9A2C();
  while (1)
  {
    sub_26087B630();
    int v13 = BYTE1(v33);
    if ((v33 & 0x100) != 0) {
      break;
    }
    if (v33 == a1)
    {
      uint64_t v14 = OUTLINED_FUNCTION_2_7();
      v15(v14);
      goto LABEL_43;
    }
  }
  uint64_t v16 = OUTLINED_FUNCTION_2_7();
  v17(v16);
  uint64_t v18 = 0;
  switch((int)v12)
  {
    case 1:
      uint64_t v18 = (int)v9;
      break;
    case 2:
      uint64_t v18 = *(void *)(v9 + 16);
      break;
    default:
      break;
  }
  uint64_t v31 = v18;
  uint64_t v19 = v18;
  while (2)
  {
    uint64_t v20 = BYTE6(v11);
    switch((int)v12)
    {
      case 0:
        goto LABEL_17;
      case 1:
        uint64_t v20 = v9 >> 32;
        goto LABEL_17;
      case 2:
        uint64_t v20 = *(void *)(v9 + 24);
LABEL_17:
        if (v19 == v20) {
          goto LABEL_42;
        }
        if (v12)
        {
          if (v12 == 1)
          {
            if (v19 < (int)v9 || v19 >= v9 >> 32)
            {
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
              goto LABEL_52;
            }
            uint64_t v22 = sub_26087AED0();
            if (!v22) {
              goto LABEL_57;
            }
            uint64_t v23 = v22;
            uint64_t v24 = sub_26087AEF0();
            uint64_t v25 = v19 - v24;
            if (__OFSUB__(v19, v24)) {
              goto LABEL_49;
            }
          }
          else
          {
            if (v19 < *(void *)(v9 + 16)) {
              goto LABEL_48;
            }
            if (v19 >= *(void *)(v9 + 24)) {
              goto LABEL_50;
            }
            uint64_t v26 = sub_26087AED0();
            if (!v26) {
              goto LABEL_58;
            }
            uint64_t v23 = v26;
            uint64_t v27 = sub_26087AEF0();
            uint64_t v25 = v19 - v27;
            if (__OFSUB__(v19, v27)) {
              goto LABEL_51;
            }
          }
          if (!*(unsigned char *)(v23 + v25)) {
            goto LABEL_38;
          }
LABEL_37:
          ++v19;
          continue;
        }
        if (v19 >= BYTE6(v11)) {
          goto LABEL_47;
        }
        uint64_t v33 = v9;
        __int16 v34 = v11;
        char v35 = BYTE2(v11);
        char v36 = BYTE3(v11);
        char v37 = BYTE4(v11);
        char v38 = BYTE5(v11);
        if (*((unsigned char *)&v33 + v19)) {
          goto LABEL_37;
        }
LABEL_38:
        if (__OFSUB__(v19, v32))
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
        }
        OUTLINED_FUNCTION_2_1();
        if (!v29) {
          goto LABEL_55;
        }
        _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8 * v28);
LABEL_42:
        LOBYTE(a1) = 0;
LABEL_43:
        sub_2607DCF28(v9, v11);
        return a1 | (v13 << 8);
      case 3:
        sub_2607DCF28(v9, v11);
        if (v31) {
          goto LABEL_56;
        }
        LOBYTE(a1) = 0;
        return a1 | (v13 << 8);
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t AppleVendorKeyboardReport.remove(_:)(unsigned __int8 a1)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  int v27 = a1;
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v4 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)v2;
      break;
    case 2uLL:
      uint64_t v4 = *(void *)(v2 + 16);
      break;
    default:
      break;
  }
  uint64_t v5 = v4 + 2;
  if (__OFADD__(v4, 2))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v6 = v4 + 1;
  if (v5 < v4 + 1)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v26 = v4;
  sub_2607DCED0(v2, v3);
  uint64_t v7 = sub_2607F8EFC(v6, v5, v2, v3);
  unint64_t v9 = v8;
  sub_2607DCF28(v2, v3);
  unint64_t v10 = v9 >> 62;
  uint64_t v11 = 0;
  switch(v9 >> 62)
  {
    case 1uLL:
      uint64_t v11 = (int)v7;
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(v7 + 16);
      break;
    default:
      break;
  }
  uint64_t v25 = v11;
  while (2)
  {
    uint64_t v12 = BYTE6(v9);
    switch((int)v10)
    {
      case 0:
        goto LABEL_13;
      case 1:
        uint64_t v12 = v7 >> 32;
        goto LABEL_13;
      case 2:
        uint64_t v12 = *(void *)(v7 + 24);
LABEL_13:
        int v13 = v11 == v12;
        if (v11 != v12)
        {
          if (v10)
          {
            if (v10 == 1)
            {
              if (v11 < (int)v7 || v11 >= v7 >> 32)
              {
                __break(1u);
LABEL_43:
                __break(1u);
LABEL_44:
                __break(1u);
LABEL_45:
                __break(1u);
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
              uint64_t v15 = sub_26087AED0();
              if (!v15) {
                goto LABEL_53;
              }
              uint64_t v16 = v15;
              uint64_t v17 = sub_26087AEF0();
              uint64_t v18 = v11 - v17;
              if (__OFSUB__(v11, v17)) {
                goto LABEL_45;
              }
            }
            else
            {
              if (v11 < *(void *)(v7 + 16)) {
                goto LABEL_44;
              }
              if (v11 >= *(void *)(v7 + 24)) {
                goto LABEL_46;
              }
              uint64_t v20 = sub_26087AED0();
              if (!v20) {
                goto LABEL_54;
              }
              uint64_t v16 = v20;
              uint64_t v21 = sub_26087AEF0();
              uint64_t v18 = v11 - v21;
              if (__OFSUB__(v11, v21)) {
                goto LABEL_47;
              }
            }
            int v19 = *(unsigned __int8 *)(v16 + v18);
          }
          else
          {
            if (v11 >= BYTE6(v9)) {
              goto LABEL_43;
            }
            uint64_t v28 = v7;
            __int16 v29 = v9;
            char v30 = BYTE2(v9);
            char v31 = BYTE3(v9);
            char v32 = BYTE4(v9);
            char v33 = BYTE5(v9);
            int v19 = *((unsigned __int8 *)&v28 + v11);
          }
          if (v19 == v27)
          {
            if (!__OFSUB__(v11, v26))
            {
              OUTLINED_FUNCTION_2_1();
              if (v23)
              {
                _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(0, 8 * v22);
                goto LABEL_39;
              }
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
            }
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          ++v11;
          continue;
        }
        int v27 = 0;
LABEL_39:
        sub_2607DCF28(v7, v9);
        return v27 | (v13 << 8);
      case 3:
        sub_2607DCF28(v7, v9);
        if (v25) {
          goto LABEL_52;
        }
        int v27 = 0;
        int v13 = 1;
        return v27 | (v13 << 8);
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t sub_2608030B0(char *a1)
{
  return sub_260853670(*a1, *v1, v1[1]);
}

uint64_t sub_2608030BC()
{
  return sub_260803104();
}

uint64_t sub_2608030D4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_260803274(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_26082CEBC);
}

uint64_t sub_2608030EC()
{
  return sub_260803104();
}

uint64_t sub_260803104()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = OUTLINED_FUNCTION_1_8();
  v4(v3);
  sub_2607DCF28(v2, v1);
  uint64_t v5 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v5, v6);
}

uint64_t sub_260803168(uint64_t a1, unsigned __int8 *a2)
{
  return sub_260876ADC(a1, *a2);
}

uint64_t sub_260803170(unsigned __int8 *a1)
{
  uint64_t v1 = AppleVendorKeyboardReport.remove(_:)(*a1);
  return OUTLINED_FUNCTION_2_0(v1);
}

uint64_t sub_26080319C(unsigned __int8 *a1)
{
  uint64_t v1 = AppleVendorKeyboardReport.update(with:)(*a1);
  return OUTLINED_FUNCTION_2_0(v1);
}

uint64_t sub_2608031C8()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  sub_260835DDC(v0, v1);
  uint64_t v2 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_26080320C()
{
  return sub_26082D27C();
}

uint64_t sub_260803218()
{
  OUTLINED_FUNCTION_1_8();
  sub_26082D9A8();
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v0, v1);
}

uint64_t sub_26080325C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_260803274(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_260875D04);
}

uint64_t sub_260803274(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, uint64_t, unint64_t))
{
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  a4(*a1, a1[1], v5, v6);
  return sub_2607DCF28(v5, v6);
}

void sub_2608032C8()
{
}

uint64_t sub_2608032D8(uint64_t *a1)
{
  return sub_2608760A4(*a1, a1[1], *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_2608032E8()
{
  return sub_26082C954();
}

uint64_t sub_2608032F8()
{
  return sub_2607E85C0();
}

void sub_260803300()
{
  sub_2608038D8();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_260803384()
{
  return sub_26082C98C();
}

void sub_260803390(void *a1, void *a2)
{
  static AppleVendorKeyboardReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t AppleVendorKeyboardReport.remoteTimestamp.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x260803458);
      }
      if (v4 >= 11) {
        return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(24, a1, a2);
      }
      else {
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_260803468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = AppleVendorKeyboardReport.remoteTimestamp.getter(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_2608034A0()
{
}

void AppleVendorKeyboardReport.remoteTimestamp.setter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)v0[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v5)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x260803558);
      }
      if (v4 >= 11)
      {
        if (v3) {
          uint64_t v2 = 0;
        }
        _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v2, 24);
      }
      return;
  }
}

void (*AppleVendorKeyboardReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *v1;
  char v4 = 1;
  uint64_t v5 = 0;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_10;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v9)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x26080363CLL);
      }
      if (v8 >= 11)
      {
        uint64_t v5 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(24, v6, v7);
        char v4 = 0;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 1;
      }
LABEL_10:
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = v4;
      return sub_26080364C;
  }
}

void sub_26080364C(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  int v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = (uint64_t *)a1[2];
  if (a2)
  {
    AppleVendorKeyboardReport.remoteTimestamp.setter();
  }
  else
  {
    uint64_t v7 = *v6;
    switch((unint64_t)v6[1] >> 62)
    {
      case 1uLL:
        BOOL v8 = __OFSUB__(HIDWORD(v7), v7);
        uint64_t v9 = (HIDWORD(v7) - v7);
        if (v8) {
          goto LABEL_10;
        }
        goto LABEL_8;
      case 2uLL:
        uint64_t v12 = v7 + 16;
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v12 + 8);
        BOOL v8 = __OFSUB__(v11, v10);
        uint64_t v9 = v11 - v10;
        if (!v8) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        return;
      default:
LABEL_8:
        OUTLINED_FUNCTION_2_1();
        if (!v13)
        {
          __break(1u);
LABEL_10:
          __break(1u);
LABEL_11:
          __break(1u);
        }
        if (v9 >= 11)
        {
          if (v5) {
            uint64_t v4 = 0;
          }
          _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v4, 24);
        }
        break;
    }
  }
}

uint64_t sub_260803714()
{
  return AppleVendorKeyboardReport.remoteTimestamp.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_260803734()
{
}

void (*sub_26080373C(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = AppleVendorKeyboardReport.remoteTimestamp.getter(*(void *)v1, *(void *)(v1 + 8));
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_260803790;
}

void sub_260803790()
{
}

unint64_t sub_2608037C4()
{
  unint64_t result = qword_26A8B4880;
  if (!qword_26A8B4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4880);
  }
  return result;
}

unint64_t sub_260803814()
{
  unint64_t result = qword_26A8B4888;
  if (!qword_26A8B4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4888);
  }
  return result;
}

unint64_t sub_260803864()
{
  unint64_t result = qword_26A8B4890;
  if (!qword_26A8B4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4890);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorKeyboardReport()
{
  return &type metadata for AppleVendorKeyboardReport;
}

ValueMetadata *type metadata accessor for AppleVendorKeyboardReport.Iterator()
{
  return &type metadata for AppleVendorKeyboardReport.Iterator;
}

unint64_t sub_2608038D8()
{
  unint64_t result = qword_26A8B4898;
  if (!qword_26A8B4898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4898);
  }
  return result;
}

void HIDVirtualServicePool.sendReport(_:from:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  unint64_t v29 = v5;
  uint64_t v7 = v6;
  sub_26087B160();
  OUTLINED_FUNCTION_0_0();
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = OUTLINED_FUNCTION_9_7();
  uint64_t v14 = OUTLINED_FUNCTION_1_11(v13);
  uint64_t v16 = v15;
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v14);
  int v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(v2 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  sub_2607F6B78(v4, (uint64_t)v19);
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v21 = (v18 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v2;
  sub_2607F6BDC((uint64_t)v19, v22 + v20);
  char v23 = (uint64_t *)(v22 + v21);
  unint64_t v24 = v29;
  *char v23 = v7;
  v23[1] = v24;
  void v34[4] = sub_260804234;
  v34[5] = v22;
  v34[0] = MEMORY[0x263EF8330];
  OUTLINED_FUNCTION_12_7(COERCE_DOUBLE(1107296256));
  v34[2] = sub_2608045D0;
  v34[3] = &block_descriptor;
  uint64_t v25 = _Block_copy(v34);
  swift_retain();
  sub_2607DCED0(v7, v24);
  sub_26087B170();
  uint64_t v33 = MEMORY[0x263F8EE78];
  sub_26080462C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_26080467C();
  sub_26087B7A0();
  uint64_t v26 = OUTLINED_FUNCTION_11_5();
  MEMORY[0x26121C9B0](v26);
  _Block_release(v25);
  OUTLINED_FUNCTION_16_5();
  v27();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v31);
  swift_release();
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_260803BA8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = sub_2608096F4(a2);
  if (v17)
  {
    uint64_t v18 = v17;
    int v19 = (uint64_t *)(v17 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures);
    swift_beginAccess();
    uint64_t v20 = *v19;
    swift_bridgeObjectRetain();
    sub_2607DCED0(a3, a4);
    __int16 v21 = sub_2607F6A24(a3, a4);
    sub_2607DCF28(a3, a4);
    if ((v21 & 0x100) != 0) {
      unsigned __int8 v22 = 0;
    }
    else {
      unsigned __int8 v22 = v21;
    }
    sub_26080737C(v22, v20, (uint64_t)&v47);
    swift_bridgeObjectRelease();
    if (v48)
    {
      sub_2607E2B70(&v47, (uint64_t)&v50);
      uint64_t v23 = v52;
      uint64_t v24 = v53;
      uint64_t v25 = __swift_project_boxed_opaque_existential_1(&v50, v52);
      sub_2608042A4(a3, a4, (uint64_t)v25, a2, v18, v23, v24);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    }
    sub_260807130((uint64_t)&v47, &qword_26A8B48B0);
    sub_260806EA4(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v14);
    uint64_t v29 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v29) == 1)
    {
      swift_release();
      uint64_t v28 = (uint64_t)v14;
      return sub_260807130(v28, (uint64_t *)&unk_26A8B50E0);
    }
    sub_2607DCED0(a3, a4);
    sub_2607DCED0(a3, a4);
    uint64_t v39 = sub_26087B100();
    os_log_type_t v40 = sub_26087B520();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 16777472;
      sub_2607DCED0(a3, a4);
      __int16 v42 = sub_2607F6A24(a3, a4);
      sub_2607DCF28(a3, a4);
      sub_2607DCF28(a3, a4);
      if ((v42 & 0x100) != 0) {
        char v43 = 0;
      }
      else {
        char v43 = v42;
      }
      LOBYTE(v50) = v43;
      sub_26087B650();
      sub_2607DCF28(a3, a4);
      _os_log_impl(&dword_2607D9000, v39, v40, "unexpected report ID: 0x%hhx", v41, 5u);
      MEMORY[0x26121DB90](v41, -1, -1);
      swift_release();
    }
    else
    {
      sub_2607DCF28(a3, a4);
      swift_release();

      sub_2607DCF28(a3, a4);
    }
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v14, v29);
  }
  else
  {
    sub_260806EA4(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v16);
    uint64_t v27 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v27) == 1)
    {
      uint64_t v28 = (uint64_t)v16;
      return sub_260807130(v28, (uint64_t *)&unk_26A8B50E0);
    }
    sub_2607F6B78(a2, (uint64_t)v10);
    uint64_t v30 = sub_26087B100();
    os_log_type_t v31 = sub_26087B520();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(void *)&long long v47 = v46;
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t v44 = v32 + 4;
      unint64_t v45 = v32;
      sub_26087B0A0();
      uint64_t v33 = sub_26081C0F8(8);
      uint64_t v34 = MEMORY[0x26121C730](v33);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v50 = v34;
      unint64_t v51 = v36;
      sub_26087B330();
      uint64_t v49 = *(void *)&v10[*(int *)(v8 + 20)];
      sub_26080707C();
      sub_26087B360();
      sub_26087B330();
      swift_bridgeObjectRelease();
      uint64_t v50 = sub_26080F618(v50, v51, (uint64_t *)&v47);
      sub_26087B650();
      swift_bridgeObjectRelease();
      sub_2607F6C40((uint64_t)v10);
      char v37 = v45;
      _os_log_impl(&dword_2607D9000, v30, v31, "%s: no virtual service; dropping events", v45, 0xCu);
      uint64_t v38 = v46;
      swift_arrayDestroy();
      MEMORY[0x26121DB90](v38, -1, -1);
      MEMORY[0x26121DB90](v37, -1, -1);
    }
    else
    {

      sub_2607F6C40((uint64_t)v10);
    }
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v16, v27);
  }
}

uint64_t sub_260804168()
{
  uint64_t v1 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_1_11(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = v6 | 7;
  unint64_t v8 = (*(void *)(v5 + 64) + ((v6 + 24) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_26087B0F0();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_16_5();
  v9();
  sub_2607DCF28(*(void *)(v0 + v8), *(void *)(v0 + v8 + 8));
  return MEMORY[0x270FA0238](v0, v8 + 16, v7);
}

uint64_t sub_260804234()
{
  uint64_t v1 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_1_11(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v6;
  uint64_t v9 = (uint64_t *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  return sub_260803BA8(v7, v8, v10, v11);
}

uint64_t sub_2608042A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v31 = a3;
  uint64_t v35 = a7;
  uint64_t v36 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = sub_26087B620();
  uint64_t v28 = *(void *)(v30 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v30);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint8_t *)&v27 - v14;
  uint64_t v16 = sub_26087B1A0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  int v19 = (uint64_t *)((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = v7;
  uint64_t v20 = *(void **)(v7 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  *int v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F0E0], v16);
  id v21 = v20;
  LOBYTE(v20) = sub_26087B1B0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    uint64_t v23 = v35;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v25 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 48);
    sub_2607DCED0(a1, a2);
    v25(a1, a2, AssociatedTypeWitness, AssociatedConformanceWitness);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v30);
    }
    else
    {
      uint64_t v26 = v29;
      (*(void (**)(uint8_t *, char *, uint64_t))(v29 + 32))(v15, v13, AssociatedTypeWitness);
      sub_2608054B0(v15, v31, v32, v33, v36, v23);
      return (*(uint64_t (**)(uint8_t *, uint64_t))(v26 + 8))(v15, AssociatedTypeWitness);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2608045D0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_26080462C()
{
  unint64_t result = qword_26A8B52B0;
  if (!qword_26A8B52B0)
  {
    sub_26087B160();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B52B0);
  }
  return result;
}

unint64_t sub_26080467C()
{
  unint64_t result = qword_26A8B52C0;
  if (!qword_26A8B52C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B48A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B52C0);
  }
  return result;
}

void HIDVirtualServicePool.sendReport<A>(_:from:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = v0;
  uint64_t v36 = v2;
  uint64_t v37 = v3;
  uint64_t v5 = v4;
  uint64_t v33 = v7;
  uint64_t v34 = v6;
  uint64_t v38 = sub_26087B160();
  OUTLINED_FUNCTION_0_0();
  uint64_t v41 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_0_0();
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for EventReportSenderID();
  uint64_t v19 = OUTLINED_FUNCTION_1_11(v18);
  uint64_t v21 = v20;
  uint64_t v23 = *(void *)(v22 + 64);
  MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  sub_2607F6B78(v33, (uint64_t)v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, v34, v5);
  unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v26 = (v23 + *(unsigned __int8 *)(v13 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v27 = (char *)swift_allocObject();
  uint64_t v28 = v36;
  *((void *)v27 + 2) = v5;
  *((void *)v27 + 3) = v28;
  *((void *)v27 + 4) = v37;
  *((void *)v27 + 5) = v1;
  sub_2607F6BDC((uint64_t)v24, (uint64_t)&v27[v25]);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v27[v26], v17, v5);
  v43[4] = sub_260805078;
  v43[5] = v27;
  v43[0] = MEMORY[0x263EF8330];
  OUTLINED_FUNCTION_12_7(COERCE_DOUBLE(1107296256));
  v43[2] = sub_2608045D0;
  v43[3] = &block_descriptor_6;
  uint64_t v29 = _Block_copy(v43);
  swift_retain();
  sub_26087B170();
  uint64_t v42 = MEMORY[0x263F8EE78];
  sub_26080462C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_26080467C();
  sub_26087B7A0();
  uint64_t v30 = OUTLINED_FUNCTION_11_5();
  MEMORY[0x26121C9B0](v30);
  _Block_release(v29);
  OUTLINED_FUNCTION_16_5();
  v31();
  OUTLINED_FUNCTION_16_5();
  v32();
  swift_release();
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_2608049D8(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v48 = a3;
  uint64_t v49 = a6;
  uint64_t v10 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = sub_2608096F4(a2);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = (uint64_t *)(v19 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures);
    swift_beginAccess();
    uint64_t v22 = *v21;
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
    swift_bridgeObjectRetain();
    unsigned __int8 v24 = v23(a4, a5);
    sub_26080737C(v24, v22, (uint64_t)&v50);
    swift_bridgeObjectRelease();
    if (v51)
    {
      sub_2607E2B70(&v50, (uint64_t)&v53);
      uint64_t v25 = v55;
      uint64_t v26 = v56;
      uint64_t v27 = __swift_project_boxed_opaque_existential_1(&v53, v55);
      sub_260805134((uint64_t)v48, (uint64_t)v27, a2, v20, v25, a4, v26);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    }
    sub_260807130((uint64_t)&v50, &qword_26A8B48B0);
    sub_260806EA4(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v15);
    uint64_t v31 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v31) == 1)
    {
      swift_release();
      uint64_t v30 = (uint64_t)v15;
      return sub_260807130(v30, (uint64_t *)&unk_26A8B50E0);
    }
    uint64_t v41 = sub_26087B100();
    os_log_type_t v42 = sub_26087B520();
    int v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v49 = (uint64_t)v41;
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      LODWORD(v48) = v43;
      unint64_t v45 = v44;
      *(_DWORD *)uint64_t v44 = 16777472;
      long long v47 = v44 + 4;
      char v46 = v23(a4, a5);
      uint64_t v41 = v49;
      LOBYTE(v53) = v46;
      sub_26087B650();
      _os_log_impl(&dword_2607D9000, v41, (os_log_type_t)v48, "unexpected report ID: 0x%hhx", v45, 5u);
      MEMORY[0x26121DB90](v45, -1, -1);
    }
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v15, v31);
  }
  else
  {
    sub_260806EA4(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v18);
    uint64_t v29 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v29) == 1)
    {
      uint64_t v30 = (uint64_t)v18;
      return sub_260807130(v30, (uint64_t *)&unk_26A8B50E0);
    }
    sub_2607F6B78(a2, (uint64_t)v12);
    uint64_t v32 = sub_26087B100();
    os_log_type_t v33 = sub_26087B520();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(void *)&long long v50 = v49;
      *(_DWORD *)uint64_t v34 = 136315138;
      long long v47 = v34 + 4;
      uint64_t v48 = v34;
      sub_26087B0A0();
      uint64_t v35 = sub_26081C0F8(8);
      uint64_t v36 = MEMORY[0x26121C730](v35);
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v53 = v36;
      unint64_t v54 = v38;
      sub_26087B330();
      uint64_t v52 = *(void *)&v12[*(int *)(v10 + 20)];
      sub_26080707C();
      sub_26087B360();
      sub_26087B330();
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_26080F618(v53, v54, (uint64_t *)&v50);
      sub_26087B650();
      swift_bridgeObjectRelease();
      sub_2607F6C40((uint64_t)v12);
      uint64_t v39 = v48;
      _os_log_impl(&dword_2607D9000, v32, v33, "%s: no virtual service; dropping events", v48, 0xCu);
      uint64_t v40 = v49;
      swift_arrayDestroy();
      MEMORY[0x26121DB90](v40, -1, -1);
      MEMORY[0x26121DB90](v39, -1, -1);
    }
    else
    {

      sub_2607F6C40((uint64_t)v12);
    }
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v18, v29);
  }
}

uint64_t sub_260804F48()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_1_11(v2);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (((v4 + 48) & ~v4) + *(void *)(v5 + 64) + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v4 | v7 | 7;
  swift_release();
  sub_26087B0F0();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_16_5();
  v11();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);
  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_260805078()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_1_11(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v0[5];
  uint64_t v11 = (uint8_t *)v0
      + ((v9 + *(void *)(v8 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  return sub_2608049D8(v10, (uint64_t)v0 + v9, v11, v1, v2, v3);
}

uint64_t sub_260805134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v33 = a2;
  uint64_t v39 = a1;
  uint64_t v36 = a5;
  uint64_t v37 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_26087B620();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v40 = a6;
  uint64_t v13 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint8_t *)&v29 - v18;
  uint64_t v20 = sub_26087B1A0();
  uint64_t v21 = *(void *)(v20 - 8);
  double v22 = MEMORY[0x270FA5388](v20);
  unsigned __int8 v24 = (uint64_t *)((char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = v7;
  uint64_t v25 = *(void **)(v7 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  *unsigned __int8 v24 = v25;
  (*(void (**)(void *, void, uint64_t, double))(v21 + 104))(v24, *MEMORY[0x263F8F0E0], v20, v22);
  id v26 = v25;
  LOBYTE(v25) = sub_26087B1B0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v21 + 8))(v24, v20);
  if (v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v39, v40);
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      uint64_t v28 = v30;
      (*(void (**)(uint8_t *, char *, uint64_t))(v30 + 32))(v19, v12, AssociatedTypeWitness);
      sub_2608054B0(v19, v33, v34, v35, v36, v37);
      return (*(uint64_t (**)(uint8_t *, uint64_t))(v28 + 8))(v19, AssociatedTypeWitness);
    }
    else
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v32);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2608054B0(uint8_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v52 = a3;
  unint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v51 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v59 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v58 = AssociatedTypeWitness;
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = *(void *)(a5 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v14);
  unint64_t v54 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v50 - v20;
  uint64_t v22 = sub_26087B1A0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (uint64_t *)((char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = v6;
  id v26 = *(void **)(v6 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  *uint64_t v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F8F0E0], v22);
  id v27 = v26;
  LOBYTE(v26) = sub_26087B1B0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v29 = *(void *)(a4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
  if (!v29)
  {
    uint64_t v32 = v59;
    sub_260806EA4(v56 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, v59);
    uint64_t v33 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload(v32, 1, v33) == 1) {
      return sub_260807130(v32, (uint64_t *)&unk_26A8B50E0);
    }
    uint64_t v41 = v53;
    sub_2607F6B78(v52, v53);
    os_log_type_t v42 = sub_26087B100();
    os_log_type_t v43 = sub_26087B520();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v65 = v61;
      *(_DWORD *)uint64_t v44 = 136315138;
      unint64_t v60 = v44 + 4;
      sub_26087B0A0();
      uint64_t v45 = sub_26081C0F8(8);
      uint64_t v46 = MEMORY[0x26121C730](v45);
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      uint64_t v63 = v46;
      unint64_t v64 = v48;
      sub_26087B330();
      uint64_t v62 = *(void *)(v41 + *(int *)(v51 + 20));
      sub_26080707C();
      sub_26087B360();
      sub_26087B330();
      swift_bridgeObjectRelease();
      uint64_t v63 = sub_26080F618(v63, v64, &v65);
      uint64_t v32 = v59;
      sub_26087B650();
      swift_bridgeObjectRelease();
      sub_2607F6C40(v41);
      _os_log_impl(&dword_2607D9000, v42, v43, "%s: no active virtual service; dropping events", v44, 0xCu);
      uint64_t v49 = v61;
      swift_arrayDestroy();
      MEMORY[0x26121DB90](v49, -1, -1);
      MEMORY[0x26121DB90](v44, -1, -1);
    }
    else
    {

      sub_2607F6C40(v41);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v30(v21, v61, a5);
  type metadata accessor for ScrollGesture();
  swift_retain();
  if (swift_dynamicCast())
  {
    swift_release();
    uint64_t v31 = v60;
    if (*(unsigned char *)(v29 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_shouldDispatchScrollEvents) != 1) {
      return swift_release();
    }
  }
  else
  {
    uint64_t v31 = v60;
  }
  (*(void (**)(char *, uint8_t *, uint64_t))(v57 + 16))(v16, v31, v58);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v34 = a4;
  uint64_t v36 = v63;
  unint64_t v35 = v64;
  v30(v54, v61, a5);
  type metadata accessor for KeyboardGesture(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    sub_2607DCF28(v36, v35);
LABEL_19:
    uint64_t v40 = (*(uint64_t (**)(uint8_t *, uint64_t))(v55 + 32))(v31, a5);
    goto LABEL_20;
  }
  uint64_t v37 = v63;
  uint64_t v38 = *(void **)(v34 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client);
  if (!v38)
  {
    swift_release();
    goto LABEL_18;
  }
  id v39 = v38;
  uint64_t v40 = sub_260805BDC(v36, v35, v39, v37, v29);
  sub_2607DCF28(v36, v35);

  swift_release();
LABEL_20:
  if (*(void *)(v40 + 16))
  {
    sub_26084B4B8(v40, (void (*)(void **__return_ptr, unsigned char *))sub_260805EDC);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260805BDC(unint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v16 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v8 - 8);
  unsigned __int8 v18 = 0;
  unint64_t v9 = *(NSObject **)(a5 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_queue);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &v18;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_2608071B4;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_2608071CC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_260805F64;
  aBlock[3] = &block_descriptor_24;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = KeyboardGesture.dispatch(keyboardReport:localCapsLockState:)(a1, a2, v18);
    if (v18 != (v14 & 1)) {
      HIDVirtualService.setClientCapsLockEnaged(_:client:)(v14 & 1, v16);
    }
    swift_release();
    return v15;
  }
  return result;
}

uint64_t sub_260805EDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 352))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_260805F34(BOOL *a1)
{
  uint64_t result = BKSHIDServicesIsCapsLockLightOn();
  *a1 = result != 0;
  return result;
}

uint64_t sub_260805F64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

unint64_t sub_260805F8C()
{
  return 0xD000000000000019;
}

void sub_260805FA8()
{
}

Swift::Void __swiftcall HIDVirtualServicePool.resetGestureState()()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = sub_26087B160();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_4_7();
  v13[4] = sub_2608062F0;
  uint64_t v14 = v0;
  v13[0] = MEMORY[0x263EF8330];
  OUTLINED_FUNCTION_12_7(COERCE_DOUBLE(1107296256));
  v13[2] = sub_2608045D0;
  v13[3] = &block_descriptor_9;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  sub_26087B170();
  sub_26080462C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_26080467C();
  OUTLINED_FUNCTION_6_7();
  uint64_t v12 = OUTLINED_FUNCTION_10_7();
  MEMORY[0x26121C9B0](v12);
  _Block_release(v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  swift_release();
  OUTLINED_FUNCTION_14_0();
}

void sub_260806178(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260806EA4(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v4);
  uint64_t v5 = sub_26087B120();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_260807130((uint64_t)v4, (uint64_t *)&unk_26A8B50E0);
  }
  else
  {
    uint64_t v6 = sub_26087B100();
    os_log_type_t v7 = sub_26087B530();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_2607D9000, v6, v7, "Reset gestures for each service", v8, 2u);
      MEMORY[0x26121DB90](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_retain();
  sub_260809778();
}

void sub_2608062F0()
{
  sub_260806178(v0);
}

void sub_2608062F8()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v9 - 8);
  OUTLINED_FUNCTION_4_7();
  if (!v3) {
    goto LABEL_35;
  }
  sub_260806EA4(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, v1);
  uint64_t v10 = sub_26087B120();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v10);
  uint64_t v41 = v3;
  if (EnumTagSinglePayload == 1)
  {
    swift_retain();
    sub_260807130(v1, (uint64_t *)&unk_26A8B50E0);
  }
  else
  {
    sub_2607F6B78(v5, (uint64_t)v8);
    swift_retain();
    uint64_t v12 = sub_26087B100();
    os_log_type_t v13 = sub_26087B530();
    int v14 = v13;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v15 = swift_slowAlloc();
      LODWORD(v40) = v14;
      id v16 = (uint8_t *)v15;
      uint64_t v42 = swift_slowAlloc();
      *(void *)&long long v44 = v42;
      os_log_t v38 = v12;
      id v39 = v16;
      *(_DWORD *)id v16 = 136446210;
      v37[1] = v16 + 12;
      v37[0] = v16 + 4;
      sub_26087B0A0();
      uint64_t v17 = sub_26081C0F8(8);
      uint64_t v18 = MEMORY[0x26121C730](v17);
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v47 = v18;
      *(void *)&long long v48 = v20;
      sub_26087B330();
      uint64_t v43 = *(void *)&v8[*(int *)(v6 + 20)];
      sub_26080707C();
      sub_26087B360();
      sub_26087B330();
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_26080F618(v47, v48, (uint64_t *)&v44);
      uint64_t v3 = v41;
      sub_26087B650();
      swift_bridgeObjectRelease();
      sub_2607F6C40((uint64_t)v8);
      os_log_t v21 = v38;
      uint64_t v22 = v39;
      _os_log_impl(&dword_2607D9000, v38, (os_log_type_t)v40, "%{public}s: Reset Gestures", v39, 0xCu);
      uint64_t v23 = v42;
      swift_arrayDestroy();
      MEMORY[0x26121DB90](v23, -1, -1);
      MEMORY[0x26121DB90](v22, -1, -1);
    }
    else
    {

      sub_2607F6C40((uint64_t)v8);
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v1, v10);
  }
  uint64_t v24 = *(void *)(v3 + 16);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v42 = v24 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v25;
  int64_t v29 = (unint64_t)(v26 + 63) >> 6;
  int64_t v40 = v29 - 1;
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  if (!v28) {
    goto LABEL_13;
  }
LABEL_11:
  unint64_t v31 = __clz(__rbit64(v28));
  v28 &= v28 - 1;
  unint64_t v32 = v31 | (v30 << 6);
  while (2)
  {
    uint64_t v33 = *(void *)(v24 + 56);
    LOBYTE(v44) = *(unsigned char *)(*(void *)(v24 + 48) + v32);
    sub_2607E2A1C(v33 + 40 * v32, (uint64_t)&v44 + 8);
    while (1)
    {
      sub_2608070C8((uint64_t)&v44, (uint64_t)&v47);
      if (!v49)
      {
        swift_release();
        swift_release();
LABEL_35:
        OUTLINED_FUNCTION_14_0();
        return;
      }
      sub_2607E2B70(&v48, (uint64_t)&v44);
      __swift_project_boxed_opaque_existential_1(&v44, *((uint64_t *)&v45 + 1));
      sub_260806F0C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
      if (v28) {
        goto LABEL_11;
      }
LABEL_13:
      int64_t v34 = v30 + 1;
      if (__OFADD__(v30, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v34 < v29)
      {
        unint64_t v35 = *(void *)(v42 + 8 * v34);
        if (v35) {
          goto LABEL_16;
        }
        int64_t v36 = v30 + 2;
        ++v30;
        if (v34 + 1 < v29)
        {
          unint64_t v35 = *(void *)(v42 + 8 * v36);
          if (v35) {
            goto LABEL_19;
          }
          int64_t v30 = v34 + 1;
          if (v34 + 2 < v29)
          {
            unint64_t v35 = *(void *)(v42 + 8 * (v34 + 2));
            if (v35)
            {
              v34 += 2;
              goto LABEL_16;
            }
            int64_t v36 = v34 + 3;
            int64_t v30 = v34 + 2;
            if (v34 + 3 < v29) {
              break;
            }
          }
        }
      }
LABEL_30:
      unint64_t v28 = 0;
      long long v45 = 0u;
      long long v46 = 0u;
      long long v44 = 0u;
    }
    unint64_t v35 = *(void *)(v42 + 8 * v36);
    if (v35)
    {
LABEL_19:
      int64_t v34 = v36;
LABEL_16:
      unint64_t v28 = (v35 - 1) & v35;
      unint64_t v32 = __clz(__rbit64(v35)) + (v34 << 6);
      int64_t v30 = v34;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v34 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v34 >= v29)
    {
      int64_t v30 = v40;
      goto LABEL_30;
    }
    unint64_t v35 = *(void *)(v42 + 8 * v34);
    ++v36;
    if (v35) {
      goto LABEL_16;
    }
  }
LABEL_37:
  __break(1u);
}

void HIDVirtualServicePool.resetGestureState(for:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v4 = v3;
  uint64_t v5 = sub_26087B160();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v23 = OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_9_7();
  uint64_t v13 = OUTLINED_FUNCTION_1_11(v12);
  uint64_t v15 = v14;
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v13);
  v22[1] = *(void *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  sub_2607F6B78(v4, (uint64_t)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v0;
  sub_2607F6BDC((uint64_t)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  v25[4] = sub_260806E40;
  v25[5] = v19;
  v25[0] = MEMORY[0x263EF8330];
  OUTLINED_FUNCTION_12_7(COERCE_DOUBLE(1107296256));
  v25[2] = sub_2608045D0;
  v25[3] = &block_descriptor_15;
  uint64_t v20 = _Block_copy(v25);
  swift_retain();
  sub_26087B170();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_26080462C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_26080467C();
  OUTLINED_FUNCTION_6_7();
  uint64_t v21 = OUTLINED_FUNCTION_10_7();
  MEMORY[0x26121C9B0](v21);
  _Block_release(v20);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v23);
  swift_release();
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_260806A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_2608096F4(a2))
  {
    swift_retain();
    sub_2608062F8();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_260806EA4(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v9);
    uint64_t v11 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11) == 1)
    {
      return sub_260807130((uint64_t)v9, (uint64_t *)&unk_26A8B50E0);
    }
    else
    {
      sub_2607F6B78(a2, (uint64_t)v6);
      uint64_t v12 = sub_26087B100();
      os_log_type_t v13 = sub_26087B520();
      int v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        int v23 = v14;
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v27 = v22;
        *(_DWORD *)uint64_t v15 = 136446210;
        v21[1] = v15 + 4;
        sub_26087B0A0();
        uint64_t v16 = sub_26081C0F8(8);
        uint64_t v17 = MEMORY[0x26121C730](v16);
        unint64_t v19 = v18;
        swift_bridgeObjectRelease();
        uint64_t v25 = v17;
        unint64_t v26 = v19;
        sub_26087B330();
        uint64_t v24 = *(void *)&v6[*(int *)(v4 + 20)];
        sub_26080707C();
        sub_26087B360();
        sub_26087B330();
        swift_bridgeObjectRelease();
        uint64_t v25 = sub_26080F618(v25, v26, &v27);
        sub_26087B650();
        swift_bridgeObjectRelease();
        sub_2607F6C40((uint64_t)v6);
        _os_log_impl(&dword_2607D9000, v12, (os_log_type_t)v23, "%{public}s: Failed to reset gestures", v15, 0xCu);
        uint64_t v20 = v22;
        swift_arrayDestroy();
        MEMORY[0x26121DB90](v20, -1, -1);
        MEMORY[0x26121DB90](v15, -1, -1);
      }
      else
      {

        sub_2607F6C40((uint64_t)v6);
      }
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
    }
  }
}

uint64_t sub_260806D94()
{
  uint64_t v1 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_1_11(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = ((v6 + 24) & ~v6) + *(void *)(v5 + 64);
  uint64_t v8 = v6 | 7;
  swift_release();
  sub_26087B0F0();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_16_5();
  v9();
  return MEMORY[0x270FA0238](v0, v7, v8);
}

uint64_t sub_260806E40()
{
  uint64_t v1 = *(void *)(type metadata accessor for EventReportSenderID() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_260806A18(v2, v3);
}

uint64_t sub_260806EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260806F0C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v3 = (char *)&v6 - v2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_getAssociatedConformanceWitness();
  HIDVirtualServicePool.sendReport<A>(_:from:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
}

unint64_t sub_26080707C()
{
  unint64_t result = qword_26A8B5190;
  if (!qword_26A8B5190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5190);
  }
  return result;
}

uint64_t sub_2608070C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260807130(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_16_5();
  v3();
  return a1;
}

uint64_t sub_26080717C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2608071B4()
{
  return sub_260805F34(*(BOOL **)(v0 + 16));
}

uint64_t sub_2608071BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2608071CC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *sub_2608071F4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_11(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  return sub_26087B190();
}

uint64_t OUTLINED_FUNCTION_6_7()
{
  return sub_26087B7A0();
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  return type metadata accessor for EventReportSenderID();
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  return 0;
}

void OUTLINED_FUNCTION_12_7(double a1)
{
  *(double *)(v1 - 120) = a1;
}

uint64_t sub_260807334(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v3 = sub_2607F3D3C(a1), (v4 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v3);
  }
  else {
    return 0;
  }
}

double sub_26080737C@<D0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_2607F3D3C(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 40 * v5;
    sub_2607E2A1C(v7, a3);
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_2608073E8@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_2607F3E64(), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a1 + 56) + 32 * v4;
    sub_26080964C(v6, (uint64_t)a2);
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_26080744C(unsigned int a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_2607F3F88(a1), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t HIDReportDescriptor.reportBitCount(for:)(unsigned __int8 a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v46 = swift_allocObject();
  *(unsigned char *)(v46 + 16) = 0;
  uint64_t v4 = swift_allocObject();
  sub_260809538();
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v45 = v4;
  *(void *)(v4 + 16) = sub_26087B200();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_26087B200();
  uint64_t v54 = v5;
  sub_2607DCED0(v2, v3);
  swift_beginAccess();
  while (2)
  {
    uint64_t v6 = v2;
    unint64_t v7 = v3 >> 62;
    unint64_t v8 = v3;
    uint64_t v9 = (int)v6;
    switch(v3 >> 62)
    {
      case 1uLL:
        uint64_t v10 = v6 >> 32;
        uint64_t v11 = (int)v6;
        goto LABEL_7;
      case 2uLL:
        uint64_t v11 = *(void *)(v6 + 16);
        uint64_t v10 = *(void *)(v6 + 24);
LABEL_7:
        if (v11 != v10) {
          goto LABEL_8;
        }
        goto LABEL_57;
      case 3uLL:
        goto LABEL_57;
      default:
        if ((v3 & 0xFF000000000000) != 0)
        {
LABEL_8:
          sub_2607DCED0(v6, v3);
          uint64_t v12 = sub_260807DEC(v6, v3);
          unint64_t v14 = v13;
          uint64_t v15 = 0;
          switch(v13 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v12), v12)) {
                goto LABEL_68;
              }
              uint64_t v15 = HIDWORD(v12) - (int)v12;
LABEL_13:
              if (v15 < 0) {
                goto LABEL_61;
              }
LABEL_14:
              uint64_t v47 = v12;
              if (v7)
              {
                if (v7 == 1)
                {
                  sub_2607DCED0(v6, v3);
                  if (v6 >> 32 < (int)v6) {
                    goto LABEL_60;
                  }
                  uint64_t v18 = v6 >> 32;
                  uint64_t v19 = (int)v6;
                  uint64_t v20 = v6 >> 32;
                  uint64_t v21 = (int)v6;
                }
                else
                {
                  uint64_t v19 = *(void *)(v6 + 16);
                  uint64_t v18 = *(void *)(v6 + 24);
                  sub_2607DCED0(v6, v3);
                  if (v18 < v19)
                  {
LABEL_60:
                    __break(1u);
LABEL_61:
                    __break(1u);
LABEL_62:
                    __break(1u);
LABEL_63:
                    __break(1u);
LABEL_64:
                    __break(1u);
LABEL_65:
                    __break(1u);
LABEL_66:
                    __break(1u);
LABEL_67:
                    __break(1u);
LABEL_68:
                    __break(1u);
LABEL_69:
                    OUTLINED_FUNCTION_27();
                    sub_26087B980();
                    __break(1u);
                    JUMPOUT(0x260807A84);
                  }
                  uint64_t v21 = *(void *)(v6 + 16);
                  uint64_t v20 = *(void *)(v6 + 24);
                }
              }
              else
              {
                uint64_t v19 = 0;
                uint64_t v21 = 0;
                uint64_t v18 = BYTE6(v3);
                uint64_t v20 = BYTE6(v3);
              }
              if (v20 < v18 || v18 < v21) {
                goto LABEL_62;
              }
              uint64_t v23 = v18 - v19;
              if (__OFSUB__(v18, v19)) {
                goto LABEL_63;
              }
              if (!v15 || v23 < 0 || v23 >= v15)
              {
                uint64_t v24 = v19 + v15;
                if (__OFADD__(v19, v15)) {
                  goto LABEL_65;
                }
                if (v7)
                {
                  if (v7 == 1)
                  {
                    uint64_t v25 = v6 >> 32;
                  }
                  else
                  {
                    uint64_t v9 = *(void *)(v6 + 16);
                    uint64_t v25 = *(void *)(v6 + 24);
                  }
                }
                else
                {
                  uint64_t v9 = 0;
                  uint64_t v25 = BYTE6(v3);
                }
                if (v25 < v24 || v24 < v9) {
                  goto LABEL_66;
                }
                uint64_t v27 = 0;
                switch((int)v7)
                {
                  case 1:
                    uint64_t v27 = v6 >> 32;
                    break;
                  case 2:
                    uint64_t v27 = *(void *)(v6 + 24);
                    break;
                  case 3:
                    break;
                  default:
                    uint64_t v27 = BYTE6(v3);
                    break;
                }
                uint64_t v28 = v47;
                if (v27 < v24) {
                  goto LABEL_64;
                }
              }
              else
              {
                uint64_t v28 = v47;
              }
              uint64_t v2 = sub_26087AFC0();
              unint64_t v3 = v29;
              sub_2607DCF28(v6, v8);
              sub_2607DCF28(v6, v8);
              uint64_t v52 = &unk_270CA1398;
              uint64_t v53 = &off_270CA13B8;
              *(void *)&long long v51 = v28;
              *((void *)&v51 + 1) = v14;
              sub_2607E2B70(&v51, (uint64_t)v48 + 1);
              uint64_t v30 = v49;
              uint64_t v31 = v50;
              __swift_project_boxed_opaque_existential_1((void *)((char *)v48 + 1), v49);
              unint64_t v32 = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(v31 + 32))(v48, v30, v31);
              switch(LOBYTE(v48[0]))
              {
                case 1:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 0xA:
                case 0xB:
                case 0x11:
                case 0x12:
                case 0x13:
                case 0x14:
                case 0x15:
                case 0x16:
                case 0x17:
                case 0x18:
                case 0x19:
                case 0x1A:
                case 0x1B:
                  break;
                case 0xC:
                  MEMORY[0x270FA5388](v32);
                  OUTLINED_FUNCTION_1_12();
                  unint64_t v35 = (uint64_t (*)(unint64_t))sub_26080958C;
                  goto LABEL_54;
                case 0xD:
                  uint64_t v36 = v49;
                  uint64_t v37 = v50;
                  __swift_project_boxed_opaque_existential_1((void *)((char *)v48 + 1), v49);
                  unint64_t v38 = sub_260808214(v36, v37);
                  if ((v38 & 0x8000000000000000) != 0 || v38 >= 0x100) {
                    goto LABEL_69;
                  }
                  *(unsigned char *)(v46 + 16) = v38;
                  sub_260808AA0(v44, v46, v45);
                  break;
                case 0xE:
                  MEMORY[0x270FA5388](v32);
                  OUTLINED_FUNCTION_1_12();
                  unint64_t v35 = (uint64_t (*)(unint64_t))sub_260809584;
LABEL_54:
                  sub_260808F60(v35, v34, v44, v46, v45);
                  break;
                case 0xF:
                  uint64_t v33 = (uint64_t (*)(unint64_t, uint64_t))sub_26080927C;
                  goto LABEL_56;
                case 0x10:
                  uint64_t v33 = (uint64_t (*)(unint64_t, uint64_t))sub_2608092D8;
LABEL_56:
                  sub_260808CEC(v44, v46, v45, (uint64_t)&v54, v33);
                  break;
                default:
                  sub_260808830(v44, v46, v45);
                  break;
              }
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v48 + 1);
              break;
            case 2uLL:
              uint64_t v17 = *(void *)(v12 + 16);
              uint64_t v16 = *(void *)(v12 + 24);
              uint64_t v15 = v16 - v17;
              if (!__OFSUB__(v16, v17)) {
                goto LABEL_13;
              }
              goto LABEL_67;
            case 3uLL:
              goto LABEL_14;
            default:
              uint64_t v15 = BYTE6(v13);
              goto LABEL_14;
          }
          continue;
        }
LABEL_57:
        sub_2607DCF28(v6, v3);
        swift_beginAccess();
        uint64_t v39 = sub_260807334(a1, *(void *)(v45 + 16));
        char v41 = v40;
        swift_endAccess();
        if (v41) {
          uint64_t v39 = 0;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v39;
    }
  }
}

BOOL sub_260807B24(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v3 = (int)a1;
      uint64_t v2 = a1 >> 32;
      break;
    case 2uLL:
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v2 = *(void *)(a1 + 24);
      break;
    case 3uLL:
      return v3 == v2;
    default:
      uint64_t v3 = 0;
      uint64_t v2 = BYTE6(a2);
      break;
  }
  return v3 == v2;
}

BOOL sub_260807B88(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v2 = 8 * (int)a1;
      uint64_t v3 = a1 >> 32;
      goto LABEL_6;
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_9;
      }
      uint64_t v2 = 8 * v4;
      uint64_t v3 = *(void *)(a1 + 24);
LABEL_6:
      if ((unint64_t)(v3 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_9:
        __break(1u);
        JUMPOUT(0x260807C14);
      }
      return v2 == 8 * v3;
    case 3uLL:
      return v2 == 8 * v3;
    default:
      uint64_t v2 = 0;
      uint64_t v3 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t HIDReportDescriptor.Iterator.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2607DCED0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t HIDReportDescriptor.Iterator.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*HIDReportDescriptor.Iterator.data.modify())()
{
  return nullsub_1;
}

double HIDReportDescriptor.Iterator.next()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)v2;
      uint64_t v11 = v2 >> 32;
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = *(void *)(v2 + 16);
      uint64_t v11 = *(void *)(v2 + 24);
LABEL_6:
      if (v10 == v11) {
        goto LABEL_7;
      }
      goto LABEL_3;
    case 3uLL:
      goto LABEL_7;
    default:
      if ((v3 & 0xFF000000000000) != 0)
      {
LABEL_3:
        sub_2607DCED0(*(void *)v1, *(void *)(v1 + 8));
        uint64_t v5 = sub_260807DEC(v2, v3);
        unint64_t v7 = v6;
        sub_2607DCED0(v2, v3);
        sub_2607DCED0(v5, v7);
        uint64_t v8 = sub_26087B040();
        sub_2607DCF28(v5, v7);
        sub_26080803C(v8, v2, v3, (uint64_t *)&v12);
        sub_2607DCF28(v2, v3);
        double result = *(double *)&v12;
        *(_OWORD *)uint64_t v1 = v12;
        *(void *)(a1 + 24) = &unk_270CA1398;
        *(void *)(a1 + 32) = &off_270CA13B8;
        *(void *)a1 = v5;
        *(void *)(a1 + 8) = v7;
      }
      else
      {
LABEL_7:
        *(void *)(a1 + 32) = 0;
        double result = 0.0;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
      }
      return result;
  }
}

uint64_t sub_260807DEC(uint64_t a1, unint64_t a2)
{
  if (sub_260807B24(a1, a2))
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v4 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      OUTLINED_FUNCTION_0_4();
      OUTLINED_FUNCTION_0_4();
      OUTLINED_FUNCTION_0_4();
      break;
    default:
      break;
  }
  char v5 = sub_26087B080();
  OUTLINED_FUNCTION_0_10();
  switch(v5 & 3)
  {
    case 1:
      OUTLINED_FUNCTION_0_10();
      uint64_t v6 = 2;
      goto LABEL_15;
    case 2:
      switch((int)v4)
      {
        case 1:
        case 2:
          OUTLINED_FUNCTION_0_4();
          break;
        default:
          break;
      }
      unsigned __int8 v7 = sub_26087B080();
      OUTLINED_FUNCTION_0_10();
      HIDReportDescriptor.ItemTag.init(rawValue:)(v7 >> 2);
      if (v11 == 28) {
        goto LABEL_25;
      }
      OUTLINED_FUNCTION_0_10();
      if (v11 >= 0x1Bu)
      {
        if (sub_26087B040() < 2)
        {
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
          JUMPOUT(0x260807FFCLL);
        }
        uint64_t v6 = sub_26087B080() + 4;
      }
      else
      {
        uint64_t v6 = 3;
      }
LABEL_15:
      uint64_t v8 = 0;
      switch((int)v4)
      {
        case 1:
          uint64_t v8 = (int)a1;
          break;
        case 2:
          uint64_t v8 = *(void *)(a1 + 16);
          break;
        default:
          break;
      }
      if (__OFADD__(v8, v6)) {
        goto LABEL_22;
      }
      if (v8 + v6 < v8) {
        goto LABEL_23;
      }
      uint64_t v9 = sub_26087AFC0();
      OUTLINED_FUNCTION_0_10();
      OUTLINED_FUNCTION_0_10();
      return v9;
    case 3:
      OUTLINED_FUNCTION_0_10();
      uint64_t v6 = 5;
      goto LABEL_15;
    default:
      OUTLINED_FUNCTION_0_10();
      uint64_t v6 = 1;
      goto LABEL_15;
  }
}

uint64_t sub_26080803C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x260808198);
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(v5)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_260809378(v10, a1, v9, a2, a3);
  if ((v12 & 1) == 0)
  {
    uint64_t v13 = 0;
    switch((int)v5)
    {
      case 0:
        uint64_t v13 = BYTE6(a3);
        goto LABEL_12;
      case 1:
        uint64_t v13 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v13 = *(void *)(a2 + 24);
        goto LABEL_12;
      case 3:
LABEL_12:
        if (v13 < v11) {
          __break(1u);
        }
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  switch((int)v5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
LABEL_14:
      uint64_t v14 = sub_26087AFC0();
      uint64_t v16 = v15;
      uint64_t result = sub_2607DCF28(a2, a3);
      *a4 = v14;
      a4[1] = v16;
      return result;
    default:
LABEL_16:
      JUMPOUT(0);
  }
}

uint64_t HIDReportDescriptor.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_2607DCED0(v2, v3);
}

uint64_t sub_2608081D8@<X0>(uint64_t *a1@<X8>)
{
  HIDReportDescriptor.makeIterator()(a1);
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_260808204()
{
  return sub_260835AA4();
}

uint64_t sub_26080820C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26083E31C(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_260808214(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  unint64_t v4 = *(uint64_t (**)(void))(a2 + 40);
  uint64_t v5 = v4();
  int v7 = v5;
  switch(v6 >> 62)
  {
    case 1uLL:
      sub_2607DCF28(v5, v6);
      uint64_t v8 = v7;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(v5 + 16);
      sub_2607DCF28(v5, v6);
      break;
    default:
      sub_2607DCF28(v5, v6);
      uint64_t v8 = 0;
      break;
  }
  uint64_t v9 = v8 + 1;
  if (__OFADD__(v8, 1)) {
    goto LABEL_50;
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v12 = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  if (v11 < v9)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
  }
  uint64_t v14 = v12;
  unint64_t v15 = v13;
  uint64_t v16 = sub_26087AFC0();
  unint64_t v18 = v17;
  sub_2607DCF28(v14, v15);
  OUTLINED_FUNCTION_2_10();
  __int16 v19 = sub_260808650(v16, v18);
  sub_2607DCF28(v16, v18);
  if ((v19 & 0x100) == 0)
  {
    unint64_t v20 = v18 >> 62;
    uint64_t v21 = (uint64_t)(__int16)(v19 << 8) >> 15;
    uint64_t v22 = 0;
    uint64_t v41 = BYTE6(v18);
    switch(v18 >> 62)
    {
      case 1uLL:
        OUTLINED_FUNCTION_2_10();
        OUTLINED_FUNCTION_2_10();
        uint64_t v22 = v16 >> 32;
        break;
      case 2uLL:
        uint64_t v22 = *(void *)(v16 + 24);
        OUTLINED_FUNCTION_2_10();
        OUTLINED_FUNCTION_2_10();
        break;
      case 3uLL:
        break;
      default:
        uint64_t v22 = BYTE6(v18);
        break;
    }
    unint64_t v40 = v18 >> 8;
    unint64_t v38 = v18 >> 24;
    unint64_t v39 = v18 >> 16;
    unint64_t v37 = HIDWORD(v18);
    unint64_t v23 = v18;
    unint64_t v24 = v18 >> 40;
    uint64_t v25 = v22;
    while (1)
    {
      uint64_t v26 = (int)v16;
      switch((int)v20)
      {
        case 0:
          if (!v25) {
            goto LABEL_41;
          }
          BOOL v27 = __OFSUB__(v25--, 1);
          if (v27) {
            goto LABEL_43;
          }
          if (v25 >= v41) {
            goto LABEL_44;
          }
          uint64_t v42 = v16;
          char v43 = v23;
          char v44 = v40;
          char v45 = v39;
          char v46 = v38;
          char v47 = v37;
          char v48 = v24;
          uint64_t v28 = *((unsigned __int8 *)&v42 + v25);
          goto LABEL_38;
        case 1:
          goto LABEL_21;
        case 2:
          uint64_t v26 = *(void *)(v16 + 16);
LABEL_21:
          if (v25 == v26)
          {
LABEL_41:
            unint64_t v18 = v23;
            sub_2607DCF28(v16, v23);
            sub_2607DCF28(v16, v23);
            goto LABEL_40;
          }
          BOOL v27 = __OFSUB__(v25--, 1);
          if (v27)
          {
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v20 == 2)
          {
            if (v25 < *(void *)(v16 + 16)) {
              goto LABEL_45;
            }
            if (v25 >= *(void *)(v16 + 24)) {
              goto LABEL_47;
            }
            uint64_t v29 = sub_26087AED0();
            if (!v29) {
              goto LABEL_54;
            }
            uint64_t v30 = v29;
            uint64_t v31 = sub_26087AEF0();
            uint64_t v32 = v25 - v31;
            if (__OFSUB__(v25, v31)) {
              goto LABEL_49;
            }
          }
          else
          {
            if (v25 < (int)v16 || v25 >= v16 >> 32) {
              goto LABEL_46;
            }
            uint64_t v34 = sub_26087AED0();
            if (!v34) {
              goto LABEL_55;
            }
            uint64_t v30 = v34;
            uint64_t v35 = sub_26087AEF0();
            uint64_t v32 = v25 - v35;
            if (__OFSUB__(v25, v35)) {
              goto LABEL_48;
            }
          }
          uint64_t v28 = *(unsigned __int8 *)(v30 + v32);
LABEL_38:
          uint64_t v21 = v28 | (v21 << 8);
          break;
        case 3:
          unint64_t v18 = v23;
          sub_2607DCF28(v16, v23);
          sub_2607DCF28(v16, v23);
          uint64_t v21 = (uint64_t)(__int16)(v19 << 8) >> 15;
          if (!v22) {
            goto LABEL_40;
          }
          goto LABEL_53;
        default:
          JUMPOUT(0);
      }
    }
  }
  uint64_t v21 = 0;
LABEL_40:
  sub_2607DCF28(v16, v18);
  return v21;
}

uint64_t sub_260808650(uint64_t a1, unint64_t a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  int v2 = 1;
  int v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!((a1 ^ (unint64_t)(a1 << 32)) >> 32)) {
        goto LABEL_5;
      }
      goto LABEL_16;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      if (v5 != v4)
      {
        if (a2 >> 62 == 2)
        {
          uint64_t v6 = v4 - 1;
          if (__OFSUB__(v4, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          if (v6 < v5)
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
          }
          if (v6 >= v4) {
            goto LABEL_25;
          }
          uint64_t v7 = sub_26087AED0();
          if (!v7) {
            goto LABEL_27;
          }
          uint64_t v8 = v7;
          a1 = sub_26087AEF0();
          uint64_t v9 = v6 - a1;
          if (!__OFSUB__(v6, a1)) {
            goto LABEL_19;
          }
          __break(1u);
        }
LABEL_16:
        uint64_t v10 = a1 >> 32;
        if (a1 >> 32 <= (int)a1)
        {
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v11 = sub_26087AED0();
        if (v11)
        {
          uint64_t v8 = v11;
          uint64_t v12 = v10 - 1;
          uint64_t v13 = sub_26087AEF0();
          uint64_t v9 = v12 - v13;
          if (!__OFSUB__(v12, v13))
          {
LABEL_19:
            int v2 = 0;
            int v3 = *(unsigned __int8 *)(v8 + v9);
            return v3 | (v2 << 8);
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x260808820);
      }
      int v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      if ((a2 & 0xFF000000000000) != 0)
      {
        int v2 = 0;
        uint64_t v15 = a1;
        __int16 v16 = a2;
        char v17 = BYTE2(a2);
        char v18 = BYTE3(a2);
        char v19 = BYTE4(a2);
        char v20 = BYTE5(a2);
        int v3 = *((unsigned __int8 *)&v15 + BYTE6(a2) - 1);
      }
      else
      {
LABEL_5:
        int v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_260808830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void **)(a1 + 16);
  uint64_t v7 = (unsigned __int8 *)(a2 + 16);
  swift_beginAccess();
  char v8 = *(unsigned char *)(a2 + 16);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  unint64_t v10 = sub_2607F3D3C(v8);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48C8);
  if (sub_26087B950())
  {
    unint64_t v14 = sub_2607F3D3C(v8);
    if ((v13 & 1) != (v15 & 1)) {
      goto LABEL_20;
    }
    unint64_t v12 = v14;
  }
  *uint64_t v6 = v9;
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t)*v6;
  if ((v13 & 1) == 0) {
    sub_2607F5BFC(v12, v8, 0, 0, *v6);
  }
  char v17 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v12);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  uint64_t v20 = v19 * v18;
  if ((unsigned __int128)(v19 * (__int128)v18) >> 64 != (v19 * v18) >> 63) {
    goto LABEL_17;
  }
  uint64_t v21 = (uint64_t *)(a3 + 16);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v22 = *v7;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v21;
  uint64_t v36 = *v21;
  *uint64_t v21 = 0x8000000000000000;
  unint64_t v24 = sub_2607F3D3C(v22);
  if (__OFADD__(*(void *)(v23 + 16), (v25 & 1) == 0))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v26 = v24;
  char v27 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48D0);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_12;
  }
  unint64_t v28 = sub_2607F3D3C(v22);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v26 = v28;
LABEL_12:
    *uint64_t v21 = v36;
    swift_bridgeObjectRelease();
    uint64_t v30 = *v21;
    if ((v27 & 1) == 0) {
      sub_2607F5BCC(v26, v22, 0, *v21);
    }
    uint64_t v31 = *(void *)(v30 + 56);
    uint64_t v32 = *(void *)(v31 + 8 * v26);
    BOOL v33 = __OFADD__(v32, v20);
    uint64_t v34 = v32 + v20;
    if (!v33)
    {
      *(void *)(v31 + 8 * v26) = v34;
      return swift_endAccess();
    }
    goto LABEL_19;
  }
LABEL_20:
  uint64_t result = sub_26087BC30();
  __break(1u);
  return result;
}

uint64_t sub_260808AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void **)(a1 + 16);
  uint64_t v7 = (unsigned __int8 *)(a2 + 16);
  swift_beginAccess();
  char v8 = *(unsigned char *)(a2 + 16);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  unint64_t v10 = sub_2607F3D3C(v8);
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48C8);
  if (sub_26087B950())
  {
    unint64_t v14 = sub_2607F3D3C(v8);
    if ((v13 & 1) != (v15 & 1)) {
      goto LABEL_18;
    }
    unint64_t v12 = v14;
  }
  uint64_t v16 = (uint64_t *)(a3 + 16);
  *uint64_t v6 = v9;
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    sub_2607F5BFC(v12, v8, 0, 0, *v6);
  }
  swift_endAccess();
  swift_beginAccess();
  uint64_t v17 = *v7;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v16;
  uint64_t v31 = *v16;
  *uint64_t v16 = 0x8000000000000000;
  unint64_t v19 = sub_2607F3D3C(v17);
  if (__OFADD__(*(void *)(v18 + 16), (v20 & 1) == 0))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v21 = v19;
  char v22 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48D0);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_11;
  }
  unint64_t v23 = sub_2607F3D3C(v17);
  if ((v22 & 1) == (v24 & 1))
  {
    unint64_t v21 = v23;
LABEL_11:
    *uint64_t v16 = v31;
    swift_bridgeObjectRelease();
    uint64_t v25 = *v16;
    if ((v22 & 1) == 0) {
      sub_2607F5BCC(v21, v17, 0, *v16);
    }
    uint64_t v26 = *(void *)(v25 + 56);
    uint64_t v27 = *(void *)(v26 + 8 * v21);
    BOOL v28 = __OFADD__(v27, 8);
    uint64_t v29 = v27 + 8;
    if (!v28)
    {
      *(void *)(v26 + 8 * v21) = v29;
      return swift_endAccess();
    }
    goto LABEL_17;
  }
LABEL_18:
  uint64_t result = sub_26087BC30();
  __break(1u);
  return result;
}

uint64_t sub_260808CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t, uint64_t))
{
  uint64_t v9 = (void **)(a1 + 16);
  unint64_t v10 = (unsigned __int8 *)(a2 + 16);
  swift_beginAccess();
  char v11 = *(unsigned char *)(a2 + 16);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  unint64_t v12 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  unint64_t v13 = sub_2607F3D3C(v11);
  if (__OFADD__(v12[2], (v14 & 1) == 0))
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v15 = v13;
  char v16 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48C8);
  if (sub_26087B950())
  {
    unint64_t v17 = sub_2607F3D3C(v11);
    if ((v16 & 1) != (v18 & 1)) {
      goto LABEL_18;
    }
    unint64_t v15 = v17;
  }
  unint64_t v19 = (uint64_t *)(a3 + 16);
  *uint64_t v9 = v12;
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t)*v9;
  if ((v16 & 1) == 0) {
    sub_2607F5BFC(v15, v11, 0, 0, *v9);
  }
  uint64_t v21 = a5(*(void *)(v20 + 56) + 16 * v15, a4);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v22 = *v10;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v19;
  uint64_t v37 = *v19;
  *unint64_t v19 = 0x8000000000000000;
  unint64_t v24 = sub_2607F3D3C(v22);
  if (__OFADD__(*(void *)(v23 + 16), (v25 & 1) == 0))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v26 = v24;
  char v27 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48D0);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_11;
  }
  unint64_t v28 = sub_2607F3D3C(v22);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v26 = v28;
LABEL_11:
    *unint64_t v19 = v37;
    swift_bridgeObjectRelease();
    uint64_t v30 = *v19;
    if ((v27 & 1) == 0) {
      sub_2607F5BCC(v26, v22, 0, *v19);
    }
    uint64_t v31 = *(void *)(v30 + 56);
    uint64_t v32 = *(void *)(v31 + 8 * v26);
    BOOL v33 = __OFADD__(v32, v21);
    uint64_t v34 = v32 + v21;
    if (!v33)
    {
      *(void *)(v31 + 8 * v26) = v34;
      return swift_endAccess();
    }
    goto LABEL_17;
  }
LABEL_18:
  uint64_t result = sub_26087BC30();
  __break(1u);
  return result;
}

uint64_t sub_260808F60(uint64_t (*a1)(unint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v8 = (void **)(a3 + 16);
  uint64_t v9 = (unsigned __int8 *)(a4 + 16);
  swift_beginAccess();
  char v10 = *(unsigned char *)(a4 + 16);
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  char v11 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = 0x8000000000000000;
  unint64_t v12 = sub_2607F3D3C(v10);
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v14 = v12;
  char v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48C8);
  if (sub_26087B950())
  {
    unint64_t v16 = sub_2607F3D3C(v10);
    if ((v15 & 1) != (v17 & 1)) {
      goto LABEL_18;
    }
    unint64_t v14 = v16;
  }
  char v18 = (uint64_t *)(a5 + 16);
  *char v8 = v11;
  swift_bridgeObjectRelease();
  uint64_t v19 = (uint64_t)*v8;
  if ((v15 & 1) == 0) {
    sub_2607F5BFC(v14, v10, 0, 0, *v8);
  }
  uint64_t v20 = a1(*(void *)(v19 + 56) + 16 * v14);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v21 = *v9;
  swift_beginAccess();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v18;
  uint64_t v36 = *v18;
  *char v18 = 0x8000000000000000;
  unint64_t v23 = sub_2607F3D3C(v21);
  if (__OFADD__(*(void *)(v22 + 16), (v24 & 1) == 0))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v25 = v23;
  char v26 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48D0);
  if ((sub_26087B950() & 1) == 0) {
    goto LABEL_11;
  }
  unint64_t v27 = sub_2607F3D3C(v21);
  if ((v26 & 1) == (v28 & 1))
  {
    unint64_t v25 = v27;
LABEL_11:
    *char v18 = v36;
    swift_bridgeObjectRelease();
    uint64_t v29 = *v18;
    if ((v26 & 1) == 0) {
      sub_2607F5BCC(v25, v21, 0, *v18);
    }
    uint64_t v30 = *(void *)(v29 + 56);
    uint64_t v31 = *(void *)(v30 + 8 * v25);
    BOOL v32 = __OFADD__(v31, v20);
    uint64_t v33 = v31 + v20;
    if (!v32)
    {
      *(void *)(v30 + 8 * v25) = v33;
      return swift_endAccess();
    }
    goto LABEL_17;
  }
LABEL_18:
  uint64_t result = sub_26087BC30();
  __break(1u);
  return result;
}

uint64_t sub_2608091D4(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  *(void *)(a1 + 8) = sub_260808214(v3, v4);
  return 0;
}

uint64_t sub_260809228(uint64_t *a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  *a1 = sub_260808214(v3, v4);
  return 0;
}

uint64_t sub_26080927C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  sub_2607E271C();
  uint64_t v5 = *(void *)(*a2 + 16);
  sub_2607E2790(v5);
  uint64_t v6 = *a2;
  *(void *)(v6 + 16) = v5 + 1;
  uint64_t v7 = v6 + 16 * v5;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v4;
  *a2 = v6;
  return 0;
}

uint64_t sub_2608092D8(_OWORD *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 16);
  if (v2) {
    long long v3 = *(_OWORD *)(*(void *)a2 + 16 * v2 + 16);
  }
  else {
    long long v3 = 0uLL;
  }
  *a1 = v3;
  return 0;
}

uint64_t sub_260809300(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v8 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v8)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = (int)a3;
      uint64_t v5 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v6 = *(void *)(a3 + 16);
      uint64_t v5 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v6 = 0;
      uint64_t v5 = BYTE6(a4);
      break;
  }
  if (v5 >= result)
  {
    BOOL v8 = __OFSUB__(result, v6);
    BOOL v7 = result - v6 < 0;
  }
  else
  {
    BOOL v8 = 0;
    BOOL v7 = 1;
  }
  if (v7 != v8)
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x260809368);
  }
  return result;
}

uint64_t sub_260809378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = sub_260809400(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2) {
      return 0;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_260809300(a1, a2, a4, a5);
}

uint64_t sub_260809400(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v4 = a3 >> 32;
      uint64_t v5 = (int)a3;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = a3 >> 32;
      uint64_t v8 = (int)a3;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a3 + 16);
      uint64_t v7 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v8 = 0;
      uint64_t v7 = BYTE6(a4);
      break;
  }
  if (v7 < a2 || v8 > a2) {
    goto LABEL_21;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v10)
  {
LABEL_22:
    __break(1u);
    JUMPOUT(0x2608094D0);
  }
  return result;
}

uint64_t sub_2608094F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_260809500()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_260809538()
{
  unint64_t result = qword_26A8B48B8;
  if (!qword_26A8B48B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B48B8);
  }
  return result;
}

uint64_t sub_260809584(uint64_t *a1)
{
  return sub_260809228(a1, *(void **)(v1 + 16));
}

uint64_t sub_26080958C(uint64_t a1)
{
  return sub_2608091D4(a1, *(void **)(v1 + 16));
}

unint64_t sub_260809598()
{
  unint64_t result = qword_26A8B48C0;
  if (!qword_26A8B48C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B48C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDReportDescriptor.Iterator()
{
  return &type metadata for HIDReportDescriptor.Iterator;
}

uint64_t _s5StateVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

uint64_t sub_26080964C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return sub_2607DCED0(v0, v1);
}

uint64_t sub_2608096F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2607F3DA0(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_endAccess();
  return v7;
}

void sub_260809778()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EventReportSenderID();
  uint64_t v3 = OUTLINED_FUNCTION_1_11(v2);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_9_0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4930);
  uint64_t v9 = OUTLINED_FUNCTION_9_8(v8);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v31 - v13;
  char v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v33 = v16 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v34 = (unint64_t)(v18 + 63) >> 6;
  int64_t v32 = v34 - 1;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v20) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v23 = v22 | (v21 << 6);
  while (2)
  {
    sub_2607F6B78(*(void *)(v16 + 48) + *(void *)(v35 + 72) * v23, (uint64_t)v11);
    uint64_t v24 = *(void *)(v16 + 56);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4938);
    *(void *)&v11[*(int *)(v25 + 48)] = *(void *)(v24 + 8 * v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v25);
    swift_retain();
    while (1)
    {
      sub_260812168((uint64_t)v11, (uint64_t)v14, &qword_26A8B4930);
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4938);
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v30) == 1)
      {
        swift_release();
        swift_release();
        OUTLINED_FUNCTION_14_0();
        return;
      }
      sub_2607F6BDC((uint64_t)v14, v7);
      swift_retain();
      sub_2608062F8();
      swift_release();
      swift_release();
      sub_2607F6C40(v7);
      if (v20) {
        goto LABEL_4;
      }
LABEL_6:
      int64_t v26 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v26 < v34)
      {
        unint64_t v27 = *(void *)(v33 + 8 * v26);
        if (v27) {
          goto LABEL_9;
        }
        int64_t v28 = v21 + 2;
        ++v21;
        if (v26 + 1 < v34)
        {
          unint64_t v27 = *(void *)(v33 + 8 * v28);
          if (v27) {
            goto LABEL_12;
          }
          int64_t v21 = v26 + 1;
          if (v26 + 2 < v34)
          {
            unint64_t v27 = *(void *)(v33 + 8 * (v26 + 2));
            if (v27)
            {
              v26 += 2;
              goto LABEL_9;
            }
            int64_t v28 = v26 + 3;
            int64_t v21 = v26 + 2;
            if (v26 + 3 < v34) {
              break;
            }
          }
        }
      }
LABEL_23:
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4938);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v29);
      unint64_t v20 = 0;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    if (v27)
    {
LABEL_12:
      int64_t v26 = v28;
LABEL_9:
      unint64_t v20 = (v27 - 1) & v27;
      unint64_t v23 = __clz(__rbit64(v27)) + (v26 << 6);
      int64_t v21 = v26;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v34)
    {
      int64_t v21 = v32;
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_9;
    }
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_260809AD8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_35;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    int v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    sub_26087BCA0();
    sub_26087BCB0();
    unint64_t result = sub_26087BD00();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t HIDVirtualServicePool.__allocating_init(logger:queue:workloop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  HIDVirtualServicePool.init(logger:queue:workloop:)(a1, a2, a3);
  return v6;
}

uint64_t HIDVirtualServicePool.init(logger:queue:workloop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices;
  type metadata accessor for EventReportSenderID();
  type metadata accessor for HIDVirtualServicePool.VirtualService(0);
  sub_260811BF4(&qword_26A8B4738, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
  *(void *)(v3 + v7) = sub_26087B200();
  uint64_t v8 = OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool__enabledDeviceTypes;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48E8);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 24) = 0;
  *(void *)(v9 + 16) = MEMORY[0x263F8EE88];
  *(void *)(v3 + v8) = v9;
  uint64_t v10 = (void *)(v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  *uint64_t v10 = nullsub_1;
  v10[1] = 0;
  sub_260812168(a1, v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t *)&unk_26A8B50E0);
  *(void *)(v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue) = a2;
  *(void *)(v3 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_workloop) = a3;
  return v3;
}

uint64_t type metadata accessor for HIDVirtualServicePool.VirtualService(uint64_t a1)
{
  return sub_2608116E0(a1, (uint64_t *)&unk_26A8B4920);
}

uint64_t sub_260809E84(void *a1, uint64_t (*a2)(void), uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8 = *(void *)(v4 + *a1);
  swift_beginAccess();
  v10[3] = a2(0);
  v10[4] = a3;
  v10[0] = v8;
  swift_retain();
  sub_26084B384((uint64_t)v10, a4);
  return swift_endAccess();
}

uint64_t sub_260809F1C(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4, unsigned __int8 a5)
{
  *(void *)(v5 + *a2) = a1;
  swift_retain();
  swift_release();
  sub_260809E84(a2, a3, a4, a5);
  return swift_release();
}

void sub_260809FA4()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = v0;
  char v48 = v2;
  uint64_t v4 = v3;
  uint64_t v53 = v5;
  uint64_t v54 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v8 = OUTLINED_FUNCTION_9_8(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_24_2();
  uint64_t v50 = v9;
  uint64_t v51 = sub_26087B550();
  OUTLINED_FUNCTION_10_2();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_24_2();
  uint64_t v46 = v13;
  sub_26087B540();
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_9_0();
  uint64_t v15 = sub_26087B190();
  uint64_t v16 = OUTLINED_FUNCTION_9_8(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_9_0();
  uint64_t v17 = (void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties);
  *uint64_t v17 = 0;
  v17[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service) = 0;
  unint64_t v18 = (void *)(v0
                 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_terminationWasRequestedHandler);
  *unint64_t v18 = nullsub_1;
  v18[1] = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerEnabled) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_keyboardEnabled) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_pointingEnabled) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gamepadEnabled) = 0;
  sub_2607F6B78(v6, v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id);
  sub_260806EA4(v4, v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger);
  sub_26081221C(0, &qword_26A8B4948);
  sub_26087B180();
  *(void *)uint64_t v55 = MEMORY[0x263F8EE78];
  sub_260811BF4(&qword_26A8B4950, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4958);
  sub_2607E9A5C((unint64_t *)&qword_26A8B4960, &qword_26A8B4958);
  sub_26087B7A0();
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v46, *MEMORY[0x263F8F138], v51);
  id v52 = v48;
  *(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_queue) = sub_26087B580();
  v55[0] = 0;
  uint64_t v19 = type metadata accessor for DigitizerGesture();
  swift_allocObject();
  uint64_t v20 = DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(v55, 1, 1);
  uint64_t v21 = OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture;
  *(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture) = v20;
  uint64_t v49 = type metadata accessor for ScrollGesture();
  unint64_t v22 = ScrollGesture.__allocating_init(useRemoteAcceleration:dispatchScrollEvents:)(1, 0);
  uint64_t v47 = OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture;
  *(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture) = v22;
  sub_260806EA4(v54, v50);
  uint64_t v23 = type metadata accessor for PointerGesture();
  swift_allocObject();
  uint64_t v24 = PointerGesture.init(logger:useRemoteAcceleration:)(v50, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4968);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D900;
  *(unsigned char *)(inited + 32) = 19;
  sub_260806EA4(v54, v50);
  uint64_t v26 = type metadata accessor for AbsolutePointerGesture();
  swift_allocObject();
  uint64_t v27 = AbsolutePointerGesture.init(logger:pointerGesture:)(v50, v24);
  *(void *)(inited + 64) = v26;
  *(void *)(inited + 72) = &protocol witness table for AbsolutePointerGesture;
  *(void *)(inited + 40) = v27;
  *(unsigned char *)(inited + 80) = 4;
  type metadata accessor for AppleVendorTopCaseGesture(0);
  OUTLINED_FUNCTION_16_6();
  swift_retain();
  uint64_t v28 = _s12UniversalHID25AppleVendorTopCaseGestureCACycfc_0();
  *(void *)(inited + 112) = v26;
  *(void *)(inited + 120) = sub_260811C3C();
  *(void *)(inited + 88) = v28;
  *(unsigned char *)(inited + 128) = 3;
  type metadata accessor for AppleVendorKeyboardGesture(0);
  OUTLINED_FUNCTION_16_6();
  uint64_t v29 = _s12UniversalHID26AppleVendorKeyboardGestureCACycfc_0();
  *(void *)(inited + 160) = v26;
  *(void *)(inited + 168) = sub_260811D74();
  *(void *)(inited + 136) = v29;
  *(unsigned char *)(inited + 176) = 2;
  type metadata accessor for ConsumerGesture(0);
  OUTLINED_FUNCTION_16_6();
  uint64_t v30 = _s12UniversalHID15ConsumerGestureCACycfc_0();
  *(void *)(inited + 208) = v26;
  *(void *)(inited + 216) = sub_260811EAC();
  *(void *)(inited + 184) = v30;
  *(unsigned char *)(inited + 224) = 9;
  uint64_t v31 = *(void *)(v1 + v21);
  *(void *)(inited + 256) = v19;
  *(void *)(inited + 264) = &protocol witness table for DigitizerGesture;
  *(void *)(inited + 232) = v31;
  *(unsigned char *)(inited + 272) = 18;
  type metadata accessor for GameControllerGesture();
  uint64_t v32 = OUTLINED_FUNCTION_17_6();
  *(void *)(inited + 304) = v19;
  *(void *)(inited + 312) = &protocol witness table for GameControllerGesture;
  *(void *)(inited + 280) = v32;
  *(unsigned char *)(inited + 320) = 20;
  type metadata accessor for GenericGestureGesture();
  uint64_t v33 = OUTLINED_FUNCTION_17_6();
  *(void *)(inited + 352) = v19;
  *(void *)(inited + 360) = &protocol witness table for GenericGestureGesture;
  *(void *)(inited + 328) = v33;
  *(unsigned char *)(inited + 368) = 1;
  uint64_t v34 = type metadata accessor for KeyboardGesture(0);
  sub_260806EA4(v54, v50);
  swift_retain();
  uint64_t v35 = KeyboardGesture.__allocating_init(logger:)(v50);
  *(void *)(inited + 400) = v34;
  *(void *)(inited + 408) = sub_260812030();
  *(void *)(inited + 376) = v35;
  *(unsigned char *)(inited + 416) = 5;
  *(void *)(inited + 448) = v23;
  *(void *)(inited + 456) = &protocol witness table for PointerGesture;
  *(void *)(inited + 424) = v24;
  *(unsigned char *)(inited + 464) = 7;
  uint64_t v36 = *(void *)(v1 + v47);
  *(void *)(inited + 496) = v49;
  *(void *)(inited + 504) = &protocol witness table for ScrollGesture;
  *(void *)(inited + 472) = v36;
  *(unsigned char *)(inited + 512) = 11;
  uint64_t v37 = type metadata accessor for DockSwipeGesture();
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = 0;
  *(void *)(inited + 544) = v37;
  *(void *)(inited + 552) = &protocol witness table for DockSwipeGesture;
  *(void *)(inited + 520) = v38;
  *(unsigned char *)(inited + 560) = 13;
  type metadata accessor for NavigationSwipeGesture();
  uint64_t v39 = OUTLINED_FUNCTION_5_6();
  *(unsigned char *)(v39 + 16) = 0;
  *(void *)(inited + 592) = v37;
  *(void *)(inited + 600) = &protocol witness table for NavigationSwipeGesture;
  *(void *)(inited + 568) = v39;
  *(unsigned char *)(inited + 608) = 17;
  type metadata accessor for TranslationGesture();
  uint64_t v40 = OUTLINED_FUNCTION_5_6();
  *(unsigned char *)(v40 + 16) = 0;
  *(void *)(inited + 640) = v37;
  *(void *)(inited + 648) = &protocol witness table for TranslationGesture;
  *(void *)(inited + 616) = v40;
  *(unsigned char *)(inited + 656) = 12;
  type metadata accessor for FluidTouchGesture();
  uint64_t v41 = OUTLINED_FUNCTION_5_6();
  *(unsigned char *)(v41 + 16) = 0;
  *(void *)(inited + 688) = v37;
  *(void *)(inited + 696) = &protocol witness table for FluidTouchGesture;
  *(void *)(inited + 664) = v41;
  *(unsigned char *)(inited + 704) = 15;
  type metadata accessor for ScaleGesture();
  uint64_t v42 = OUTLINED_FUNCTION_5_6();
  *(unsigned char *)(v42 + 16) = 0;
  *(void *)(inited + 736) = v37;
  *(void *)(inited + 744) = &protocol witness table for ScaleGesture;
  *(void *)(inited + 712) = v42;
  *(unsigned char *)(inited + 752) = 16;
  type metadata accessor for RotationGesture();
  uint64_t v43 = OUTLINED_FUNCTION_5_6();
  *(unsigned char *)(v43 + 16) = 0;
  *(void *)(inited + 784) = v37;
  *(void *)(inited + 792) = &protocol witness table for RotationGesture;
  *(void *)(inited + 760) = v43;
  *(unsigned char *)(inited + 800) = 14;
  type metadata accessor for ZoomToggleGesture();
  uint64_t v44 = OUTLINED_FUNCTION_17_6();
  *(void *)(inited + 832) = v37;
  *(void *)(inited + 840) = &protocol witness table for ZoomToggleGesture;
  *(void *)(inited + 808) = v44;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B5170);
  sub_260809538();
  uint64_t v45 = sub_26087B200();
  swift_release();

  sub_2608121C8(v54, (uint64_t *)&unk_26A8B50E0);
  sub_2607F6C40(v53);
  *(void *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures) = v45;
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_26080A734()
{
  sub_2607F6C40(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id);
  sub_2608121C8(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t *)&unk_26A8B50E0);

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_26080A7FC()
{
  return sub_26080F5A0((void (*)(void))sub_26080A734);
}

uint64_t sub_26080A818()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_26087B160();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26087B190();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t result = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
  if (v14)
  {
    uint64_t v35 = v6;
    *(void *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service) = 0;
    sub_260806EA4(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v13);
    uint64_t v15 = sub_26087B120();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
    uint64_t v34 = v7;
    if (EnumTagSinglePayload == 1)
    {
      sub_2608121C8((uint64_t)v13, (uint64_t *)&unk_26A8B50E0);
    }
    else
    {
      swift_retain_n();
      swift_retain_n();
      uint64_t v17 = sub_26087B100();
      os_log_type_t v18 = sub_26087B530();
      int v33 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v32 = v3;
        uint64_t v20 = v19;
        uint64_t v31 = swift_slowAlloc();
        aBlock[0] = v31;
        *(_DWORD *)uint64_t v20 = 136446466;
        os_log_t v30 = v17;
        uint64_t v21 = EventReportSenderID.description.getter();
        uint64_t v36 = sub_26080F618(v21, v22, aBlock);
        v29[2] = aBlock;
        sub_26087B650();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2082;
        v29[1] = v20 + 14;
        swift_retain();
        uint64_t v23 = HIDVirtualService.description.getter();
        unint64_t v25 = v24;
        swift_release();
        uint64_t v36 = sub_26080F618(v23, v25, aBlock);
        sub_26087B650();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v17 = v30;
        _os_log_impl(&dword_2607D9000, v30, (os_log_type_t)v33, "%{public}s: Canceling Service: %{public}s", (uint8_t *)v20, 0x16u);
        uint64_t v26 = v31;
        swift_arrayDestroy();
        MEMORY[0x26121DB90](v26, -1, -1);
        uint64_t v27 = v20;
        uint64_t v3 = v32;
        MEMORY[0x26121DB90](v27, -1, -1);
      }
      else
      {
        swift_release_n();
        swift_release_n();
      }

      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
    }
    aBlock[4] = (uint64_t)j___s12UniversalHID17HIDVirtualServiceC6cancelyyF;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2608045D0;
    aBlock[3] = (uint64_t)&block_descriptor_24_0;
    uint64_t v28 = _Block_copy(aBlock);
    swift_retain();
    sub_26087B170();
    uint64_t v36 = MEMORY[0x263F8EE78];
    sub_260811BF4((unint64_t *)&qword_26A8B52B0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
    sub_2607E9A5C((unint64_t *)&qword_26A8B52C0, &qword_26A8B48A0);
    sub_26087B7A0();
    MEMORY[0x26121C9B0](0, v9, v5, v28);
    _Block_release(v28);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
    return swift_release();
  }
  return result;
}

void sub_26080AD64(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v8 = OUTLINED_FUNCTION_9_8(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_26_1();
  uint64_t v74 = v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v70 - v11;
  uint64_t v80 = 0xD000000000000015;
  unint64_t v81 = 0x80000002608843D0;
  uint64_t v13 = sub_26087BC00();
  id v76 = a2;
  id v14 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, v13);
  swift_unknownObjectRelease();
  if (v14)
  {
    sub_26087B730();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v78 = 0u;
    long long v79 = 0u;
  }
  sub_260812168((uint64_t)&v78, (uint64_t)&v80, &qword_26A8B4998);
  if (v82)
  {
    if (OUTLINED_FUNCTION_26_2())
    {
      int v15 = v77;
      goto LABEL_9;
    }
  }
  else
  {
    sub_2608121C8((uint64_t)&v80, &qword_26A8B4998);
  }
  int v15 = 0;
LABEL_9:
  uint64_t v75 = a1;
  id v16 = v76;
  int v17 = HIDServiceProperties.primaryUsagePair.getter();
  BOOL v73 = v17 != 262157;
  uint64_t v80 = 0xD000000000000014;
  unint64_t v81 = 0x8000000260884620;
  id v18 = objc_msgSend(v16, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
  swift_unknownObjectRelease();
  if (v18)
  {
    sub_26087B730();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v78 = 0u;
    long long v79 = 0u;
  }
  sub_260812168((uint64_t)&v78, (uint64_t)&v80, &qword_26A8B4998);
  if (!v82)
  {
    sub_2608121C8((uint64_t)&v80, &qword_26A8B4998);
    goto LABEL_16;
  }
  if ((OUTLINED_FUNCTION_26_2() & 1) == 0)
  {
LABEL_16:
    int v19 = 0;
    goto LABEL_17;
  }
  int v19 = v77;
LABEL_17:
  uint64_t v20 = *(void *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture);
  if (v15 != *(unsigned __int8 *)(v20 + 17) || (((v17 == 262157) ^ *(unsigned __int8 *)(v20 + 18)) & 1) == 0)
  {
    LOBYTE(v80) = 0;
    type metadata accessor for DigitizerGesture();
    swift_allocObject();
    uint64_t v21 = DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)((char *)&v80, v15, v73);
    sub_260809F1C(v21, &OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerGesture, (uint64_t (*)(void))type metadata accessor for DigitizerGesture, (uint64_t)&protocol witness table for DigitizerGesture, 9u);
    sub_260806EA4(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v12);
    uint64_t v22 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v22) == 1)
    {
      sub_2608121C8((uint64_t)v12, (uint64_t *)&unk_26A8B50E0);
    }
    else
    {
      swift_retain_n();
      uint64_t v23 = sub_26087B100();
      os_log_type_t v24 = sub_26087B530();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        int v72 = v19;
        uint64_t v26 = v25;
        unint64_t v71 = (void *)swift_slowAlloc();
        uint64_t v80 = (uint64_t)v71;
        *(_DWORD *)uint64_t v26 = 136446722;
        uint64_t v27 = EventReportSenderID.description.getter();
        uint64_t v29 = sub_26080F618(v27, v28, &v80);
        OUTLINED_FUNCTION_21_5(v29);
        sub_26087B650();
        OUTLINED_FUNCTION_27_1();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 1026;
        OUTLINED_FUNCTION_20_6();
        *(_WORD *)(v26 + 18) = 1026;
        LODWORD(v78) = v73;
        sub_26087B650();
        _os_log_impl(&dword_2607D9000, v23, v24, "%{public}s: Updated Digitizer Gesture: RA '%{BOOL,public}d', PE '%{BOOL,public}d'", (uint8_t *)v26, 0x18u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_22_4();
        int v19 = v72;
        OUTLINED_FUNCTION_22_4();
      }
      else
      {
        OUTLINED_FUNCTION_27_1();
      }

      OUTLINED_FUNCTION_5_0();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v22);
    }
  }
  uint64_t v31 = *(void *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture);
  if (v15 != *(unsigned __int8 *)(v31 + 17) || v19 != *(unsigned __int8 *)(v31 + 18))
  {
    type metadata accessor for ScrollGesture();
    uint64_t v32 = ScrollGesture.__allocating_init(useRemoteAcceleration:dispatchScrollEvents:)(v15, v19);
    sub_260809F1C((uint64_t)v32, &OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_scrollGesture, (uint64_t (*)(void))type metadata accessor for ScrollGesture, (uint64_t)&protocol witness table for ScrollGesture, 7u);
    uint64_t v33 = v74;
    sub_260806EA4(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, v74);
    uint64_t v34 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload(v33, 1, v34) == 1)
    {
      sub_2608121C8(v33, (uint64_t *)&unk_26A8B50E0);
    }
    else
    {
      int v72 = v19;
      swift_retain_n();
      uint64_t v35 = sub_26087B100();
      os_log_type_t v36 = sub_26087B530();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136446722;
        uint64_t v38 = EventReportSenderID.description.getter();
        uint64_t v40 = sub_26080F618(v38, v39, &v80);
        OUTLINED_FUNCTION_21_5(v40);
        sub_26087B650();
        OUTLINED_FUNCTION_27_1();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 12) = 1026;
        OUTLINED_FUNCTION_20_6();
        *(_WORD *)(v37 + 18) = 1026;
        LODWORD(v78) = v72;
        sub_26087B650();
        _os_log_impl(&dword_2607D9000, v35, v36, "%{public}s: Updated Scroll Gesture: RA '%{BOOL,public}d', SE '%{BOOL,public}d'", (uint8_t *)v37, 0x18u);
        swift_arrayDestroy();
        uint64_t v33 = v74;
        OUTLINED_FUNCTION_22_4();
        OUTLINED_FUNCTION_22_4();
      }
      else
      {
        OUTLINED_FUNCTION_27_1();
      }

      OUTLINED_FUNCTION_5_0();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v33, v34);
    }
  }
  id v42 = v76;
  uint64_t v43 = sub_26085457C(v42);

  uint64_t v44 = sub_260854474(v43);
  id v45 = HIDServiceProperties.init(serviceID:properties:)(v75, v44);
  if (!v3)
  {
    id v47 = v45;
    char v48 = v46;
    uint64_t v49 = (id *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties);
    swift_beginAccess();
    id v50 = v49[1];
    if (v50 && *v49 == v47)
    {
      sub_26081221C(0, &qword_26A8B49A8);
      id v51 = v48;
      id v52 = v50;
      char v53 = sub_26087B600();

      if (v53)
      {
LABEL_58:

        return;
      }
      id v50 = v49[1];
    }
    *uint64_t v49 = v47;
    v49[1] = v48;
    id v54 = v48;

    *(void *)&long long v78 = 0xD000000000000010;
    *((void *)&v78 + 1) = 0x8000000260884640;
    id v55 = objc_msgSend(v54, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
    swift_unknownObjectRelease();
    if (v55)
    {
      sub_26087B730();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v78 = 0u;
      long long v79 = 0u;
    }
    sub_260812168((uint64_t)&v78, (uint64_t)&v80, &qword_26A8B4998);
    if (v82)
    {
      sub_26081221C(0, &qword_26A8B49A0);
      if (swift_dynamicCast())
      {
        uint64_t v63 = v83;
        sub_2608547C8((uint64_t)v83, v56, v57, v58, v59, v60, v61, v62, v70, v71);
        uint64_t v65 = v64;

LABEL_46:
        if (sub_2608536A0(0x5000Du, v65)) {
          char v66 = 1;
        }
        else {
          char v66 = sub_2608536A0(0x4000Du, v65);
        }
        char v67 = sub_2608536A0(0x60001u, v65);
        char v68 = sub_2608536A0(0x20001u, v65);
        char v69 = sub_2608536A0(0x50001u, v65);
        swift_bridgeObjectRelease();
        if ((v66 & 1) != *(unsigned char *)(v4
                                   + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage))
          *(unsigned char *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) = v66 & 1;
        if ((v67 & 1) != *(unsigned char *)(v4
                                   + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage))
          *(unsigned char *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) = v67 & 1;
        if ((v68 & 1) != *(unsigned char *)(v4
                                   + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage))
          *(unsigned char *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) = v68 & 1;
        if ((v69 & 1) != *(unsigned char *)(v4
                                   + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage))
          *(unsigned char *)(v4 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) = v69 & 1;
        sub_26080B708();
        sub_26080B8C8();
        sub_26080B994();
        goto LABEL_58;
      }
    }
    else
    {
      sub_2608121C8((uint64_t)&v80, &qword_26A8B4998);
    }
    uint64_t v65 = MEMORY[0x263F8EE78];
    goto LABEL_46;
  }
}

uint64_t sub_26080B708()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 8);
  if (v2)
  {
    *(void *)&v11[0] = 0xD000000000000014;
    *((void *)&v11[0] + 1) = 0x80000002608846E0;
    id v3 = objc_msgSend(v2, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
    swift_unknownObjectRelease();
    if (v3)
    {
      sub_26087B730();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v11, 0, sizeof(v11));
    }
    sub_260812168((uint64_t)v11, (uint64_t)v12, &qword_26A8B4998);
    if (v13)
    {
      if (swift_dynamicCast())
      {
        swift_endAccess();
        if (v10 >= 3) {
          char v4 = 2;
        }
        else {
          char v4 = v10;
        }
        goto LABEL_12;
      }
    }
    else
    {
      sub_2608121C8((uint64_t)v12, &qword_26A8B4998);
    }
  }
  swift_endAccess();
  char v4 = 2;
LABEL_12:
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gestures);
  swift_beginAccess();
  uint64_t v6 = sub_26084B990(*v5);
  if (!v6) {
    return swift_endAccess();
  }
  uint64_t v7 = v6;
  swift_endAccess();
  uint64_t v8 = (char *)(v7 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMode);
  swift_beginAccess();
  *uint64_t v8 = v4;
  return swift_release();
}

uint64_t sub_26080B8C8()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerEnabled) == 1
    && (*(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) & 1) != 0
    || *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_pointingEnabled) == 1
    && (*(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) & 1) != 0
    || *(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_keyboardEnabled) == 1
    && (*(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) & 1) != 0)
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
    goto LABEL_8;
  }
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gamepadEnabled) & 1) == 0)
  {
    if (!*(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service)) {
      return result;
    }
    return sub_26080A818();
  }
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) != 1)
  {
    if (!v1) {
      return result;
    }
    return sub_26080A818();
  }
LABEL_8:
  if (!v1) {
    return sub_26080C068();
  }
  return result;
}

uint64_t sub_26080B994()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t result = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client);
  if (v6)
  {
    uint64_t v7 = v0 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties;
    uint64_t result = swift_beginAccess();
    uint64_t v8 = *(void **)(v7 + 8);
    if (v8)
    {
      uint64_t v42 = 0xD000000000000014;
      unint64_t v43 = 0x8000000260884660;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
      swift_unknownObjectRelease();
      if (v11)
      {
        sub_26087B730();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v40 = 0u;
        long long v41 = 0u;
      }
      sub_260812168((uint64_t)&v40, (uint64_t)&v42, &qword_26A8B4998);
      if (v44)
      {
        int v12 = swift_dynamicCast();
        if (v12) {
          uint64_t v13 = v39;
        }
        else {
          uint64_t v13 = 0;
        }
        char v14 = v12 ^ 1;
      }
      else
      {
        sub_2608121C8((uint64_t)&v42, &qword_26A8B4998);
        uint64_t v13 = 0;
        char v14 = 1;
      }
      sub_260867CE0(v13, v14);
      uint64_t v42 = 0xD00000000000001ALL;
      unint64_t v43 = 0x8000000260884680;
      id v15 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
      swift_unknownObjectRelease();
      if (v15)
      {
        sub_26087B730();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v40 = 0u;
        long long v41 = 0u;
      }
      sub_260812168((uint64_t)&v40, (uint64_t)&v42, &qword_26A8B4998);
      if (v44)
      {
        int v16 = swift_dynamicCast();
        if (v16) {
          uint64_t v17 = v39;
        }
        else {
          uint64_t v17 = 0;
        }
        char v18 = v16 ^ 1;
      }
      else
      {
        sub_2608121C8((uint64_t)&v42, &qword_26A8B4998);
        uint64_t v17 = 0;
        char v18 = 1;
      }
      sub_260867CE0(v17, v18);
      uint64_t v42 = 0xD000000000000017;
      unint64_t v43 = 0x80000002608846A0;
      id v19 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
      swift_unknownObjectRelease();
      if (v19)
      {
        sub_26087B730();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v40 = 0u;
        long long v41 = 0u;
      }
      sub_260812168((uint64_t)&v40, (uint64_t)&v42, &qword_26A8B4998);
      if (v44)
      {
        int v20 = swift_dynamicCast();
        if (v20) {
          uint64_t v21 = v39;
        }
        else {
          uint64_t v21 = 0;
        }
        char v22 = v20 ^ 1;
      }
      else
      {
        sub_2608121C8((uint64_t)&v42, &qword_26A8B4998);
        uint64_t v21 = 0;
        char v22 = 1;
      }
      sub_260867CE0(v21, v22);
      uint64_t v42 = 0xD00000000000001DLL;
      unint64_t v43 = 0x80000002608846C0;
      id v23 = objc_msgSend(v10, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
      swift_unknownObjectRelease();
      if (v23)
      {
        sub_26087B730();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v40 = 0u;
        long long v41 = 0u;
      }
      sub_260812168((uint64_t)&v40, (uint64_t)&v42, &qword_26A8B4998);
      if (v44)
      {
        int v24 = swift_dynamicCast();
        if (v24) {
          uint64_t v25 = v39;
        }
        else {
          uint64_t v25 = 0;
        }
        char v26 = v24 ^ 1;
      }
      else
      {
        sub_2608121C8((uint64_t)&v42, &qword_26A8B4998);
        uint64_t v25 = 0;
        char v26 = 1;
      }
      sub_260867CE0(v25, v26);
      sub_260806EA4(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v5);
      uint64_t v27 = sub_26087B120();
      if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v27) == 1)
      {

        return sub_2608121C8((uint64_t)v5, (uint64_t *)&unk_26A8B50E0);
      }
      else
      {
        id v28 = v9;
        swift_retain_n();
        id v29 = v28;
        uint64_t v30 = sub_26087B100();
        os_log_type_t v31 = sub_26087B530();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = swift_slowAlloc();
          uint64_t v38 = swift_slowAlloc();
          uint64_t v42 = v38;
          *(_DWORD *)uint64_t v32 = 136446466;
          uint64_t v33 = EventReportSenderID.description.getter();
          *(void *)&long long v40 = sub_26080F618(v33, v34, &v42);
          sub_26087B650();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v32 + 12) = 2082;
          *(void *)&long long v40 = objc_msgSend(v29, sel_serviceID);
          sub_26080707C();
          uint64_t v35 = sub_26087B360();
          *(void *)&long long v40 = sub_26080F618(v35, v36, &v42);
          sub_26087B650();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2607D9000, v30, v31, "%{public}s: Updated Client: %{public}s", (uint8_t *)v32, 0x16u);
          uint64_t v37 = v38;
          swift_arrayDestroy();
          MEMORY[0x26121DB90](v37, -1, -1);
          MEMORY[0x26121DB90](v32, -1, -1);
        }
        else
        {
          swift_release_n();
        }
        return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v5, v27);
      }
    }
  }
  return result;
}

uint64_t sub_26080C068()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v8 = &v30[-v7];
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasDigitizerUsage) & 1) != 0
    || (*(unsigned char *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasPointingUsage) & 1) != 0
    || (*(unsigned char *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasKeyboardUsage) & 1) != 0
    || *(unsigned char *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_hasGamepadUsage) == 1)
  {
    uint64_t v9 = OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service;
    if (!*(void *)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service))
    {
      uint64_t v10 = v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_properties;
      uint64_t result = swift_beginAccess();
      id v11 = *(void **)(v10 + 8);
      if (v11)
      {
        uint64_t v32 = v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger;
        sub_260806EA4(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_logger, (uint64_t)v8);
        int v12 = *(void **)(v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_queue);
        swift_beginAccess();
        type metadata accessor for HIDVirtualService(0);
        swift_allocObject();
        id v13 = v11;
        id v14 = v12;
        swift_bridgeObjectRetain();
        sub_26084CC44();
        uint64_t v16 = v15;
        *(void *)(v1 + v9) = v15;
        swift_retain();
        swift_release();
        uint64_t v17 = swift_allocObject();
        swift_weakInit();
        char v18 = (uint64_t (**)())(v16 + OBJC_IVAR____TtC12UniversalHID17HIDVirtualService_terminationWasRequestedHandler);
        *char v18 = sub_260811A64;
        v18[1] = (uint64_t (*)())v17;
        swift_release();
        HIDVirtualService.activate()();
        sub_260806EA4(v32, (uint64_t)v5);
        uint64_t v19 = sub_26087B120();
        if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v19) == 1)
        {
          swift_release();

          return sub_2608121C8((uint64_t)v5, (uint64_t *)&unk_26A8B50E0);
        }
        else
        {
          swift_retain_n();
          swift_retain_n();
          int v20 = sub_26087B100();
          os_log_type_t v21 = sub_26087B530();
          int v22 = v21;
          if (os_log_type_enabled(v20, v21))
          {
            uint64_t v23 = swift_slowAlloc();
            uint64_t v32 = swift_slowAlloc();
            uint64_t v34 = v32;
            *(_DWORD *)uint64_t v23 = 136446466;
            int v31 = v22;
            uint64_t v24 = EventReportSenderID.description.getter();
            uint64_t v33 = sub_26080F618(v24, v25, &v34);
            sub_26087B650();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v23 + 12) = 2082;
            swift_retain();
            uint64_t v26 = HIDVirtualService.description.getter();
            unint64_t v28 = v27;
            swift_release();
            uint64_t v33 = sub_26080F618(v26, v28, &v34);
            sub_26087B650();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_2607D9000, v20, (os_log_type_t)v31, "%{public}s: Activated Service: %{public}s", (uint8_t *)v23, 0x16u);
            uint64_t v29 = v32;
            swift_arrayDestroy();
            MEMORY[0x26121DB90](v29, -1, -1);
            MEMORY[0x26121DB90](v23, -1, -1);
            swift_release();
          }
          else
          {
            swift_release_n();
            swift_release_n();
          }

          return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v19 - 8) + 8))(v5, v19);
        }
      }
    }
  }
  return result;
}

uint64_t sub_26080C4DC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void (**)(uint64_t))(result
                                        + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_terminationWasRequestedHandler);
    swift_retain();
    uint64_t v2 = swift_release();
    v1(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_26080C560()
{
  return sub_26080A814();
}

uint64_t sub_26080C584@<X0>(uint64_t a1@<X8>)
{
  return sub_2607F6B78(*v1 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id, a1);
}

uint64_t sub_26080C59C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t HIDVirtualServicePool.enabledDeviceTypes.getter()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool__enabledDeviceTypes);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_26080CB74(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_26080C658()
{
}

void HIDVirtualServicePool.enabledDeviceTypes.setter()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v5 = OUTLINED_FUNCTION_9_8(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_19_6();
  uint64_t v6 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool__enabledDeviceTypes);
  uint64_t v7 = (uint64_t *)&v6[4];
  uint64_t v8 = v6 + 6;
  os_unfair_lock_lock(v6 + 6);
  sub_26080F5FC(v7, (char *)v39);
  os_unfair_lock_unlock(v8);
  if (LOBYTE(v39[0]) == 1)
  {
    sub_260806EA4(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, v1);
    uint64_t v9 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload(v1, 1, v9) == 1)
    {
      swift_bridgeObjectRelease();
      sub_2608121C8(v1, (uint64_t *)&unk_26A8B50E0);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_26087B100();
      os_log_type_t v11 = sub_26087B530();
      if (os_log_type_enabled(v10, v11))
      {
        os_log_type_t v35 = v11;
        uint64_t v37 = v10;
        int v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        v39[0] = v34;
        unint64_t v36 = v12;
        *(_DWORD *)int v12 = 136446210;
        uint64_t v13 = *(void *)(v3 + 16);
        uint64_t v14 = MEMORY[0x263F8EE78];
        if (v13)
        {
          uint64_t v32 = v9;
          uint64_t v33 = v1;
          uint64_t v38 = MEMORY[0x263F8EE78];
          sub_2607E9890(0, v13, 0);
          uint64_t v14 = v38;
          int64_t v15 = sub_2608113B8(v3);
          int v17 = v16;
          char v19 = v18 & 1;
          do
          {
            if (v15 < 0 || v15 >= 1 << *(unsigned char *)(v3 + 32))
            {
              __break(1u);
LABEL_28:
              __break(1u);
LABEL_29:
              __break(1u);
              swift_bridgeObjectRelease();
              swift_release();
              __break(1u);
              JUMPOUT(0x26080CB5CLL);
            }
            if (((*(void *)(v3 + 56 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
              goto LABEL_28;
            }
            if (*(_DWORD *)(v3 + 36) != v17) {
              goto LABEL_29;
            }
            unint64_t v20 = 0xE600000000000000;
            uint64_t v21 = 0x65746F6D6552;
            switch(*(unsigned char *)(*(void *)(v3 + 48) + v15))
            {
              case 1:
                unint64_t v20 = 0xE900000000000072;
                uint64_t v21 = 0x657A697469676944;
                break;
              case 2:
                unint64_t v20 = 0xE700000000000000;
                uint64_t v21 = 0x646170656D6147;
                break;
              case 3:
                unint64_t v20 = 0xE800000000000000;
                uint64_t v21 = 0x6472616F6279654BLL;
                break;
              case 4:
                unint64_t v20 = 0xE500000000000000;
                uint64_t v21 = 0x6573756F4DLL;
                break;
              case 5:
                unint64_t v20 = 0xE800000000000000;
                uint64_t v21 = 0x6461706B63617254;
                break;
              default:
                break;
            }
            uint64_t v38 = v14;
            unint64_t v23 = *(void *)(v14 + 16);
            unint64_t v22 = *(void *)(v14 + 24);
            if (v23 >= v22 >> 1)
            {
              sub_2607E9890(v22 > 1, v23 + 1, 1);
              uint64_t v14 = v38;
            }
            *(void *)(v14 + 16) = v23 + 1;
            uint64_t v24 = v14 + 16 * v23;
            *(void *)(v24 + 32) = v21;
            *(void *)(v24 + 40) = v20;
            int64_t v25 = sub_2608112D4(v15, v17, v19 & 1, v3);
            int64_t v15 = v25;
            int v17 = v26;
            char v19 = v27 & 1;
            --v13;
          }
          while (v13);
          sub_260811438(v25, v26, v27 & 1);
          uint64_t v1 = v33;
          uint64_t v9 = v32;
        }
        uint64_t v38 = v14;
        swift_bridgeObjectRetain();
        sub_26081088C(&v38);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4668);
        sub_2607E9A5C((unint64_t *)&qword_26A8B4670, &qword_26A8B4668);
        uint64_t v28 = sub_26087B230();
        unint64_t v30 = v29;
        swift_release();
        uint64_t v38 = sub_26080F618(v28, v30, v39);
        sub_26087B650();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v10 = v37;
        _os_log_impl(&dword_2607D9000, v37, v35, "Enabled Device Types: %{public}s", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x26121DB90](v34, -1, -1);
        MEMORY[0x26121DB90](v36, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      OUTLINED_FUNCTION_5_0();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v1, v9);
    }
    sub_26080CC0C();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_26080CB74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_26080CB94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t result = sub_260809AD8(a2, *a1);
  if (result)
  {
    char v7 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    *a1 = a2;
    uint64_t result = swift_bridgeObjectRetain();
    char v7 = 1;
  }
  *a3 = v7;
  return result;
}

uint64_t sub_26080CC0C()
{
  uint64_t v1 = sub_26087B160();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_26087B190();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  aBlock[4] = sub_260812258;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2608045D0;
  aBlock[3] = &block_descriptor_42;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_26087B170();
  v11[1] = MEMORY[0x263F8EE78];
  sub_260811BF4((unint64_t *)&qword_26A8B52B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_2607E9A5C((unint64_t *)&qword_26A8B52C0, &qword_26A8B48A0);
  sub_26087B7A0();
  MEMORY[0x26121C9B0](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void (*HIDVirtualServicePool.enabledDeviceTypes.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = HIDVirtualServicePool.enabledDeviceTypes.getter();
  return sub_26080CF00;
}

void sub_26080CF00(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    HIDVirtualServicePool.enabledDeviceTypes.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    HIDVirtualServicePool.enabledDeviceTypes.setter();
  }
}

uint64_t sub_26080CF58@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_260811A24;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return swift_retain();
}

uint64_t sub_26080CFE4(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = (uint64_t (**)(uint64_t))(*a2
                                        + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  swift_beginAccess();
  *uint64_t v6 = sub_260811A1C;
  v6[1] = (uint64_t (*)(uint64_t))v5;
  swift_retain();
  return swift_release();
}

uint64_t HIDVirtualServicePool.terminationWasRequestedHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t HIDVirtualServicePool.terminationWasRequestedHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t (*HIDVirtualServicePool.terminationWasRequestedHandler.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_26080D198()
{
  uint64_t v0 = HIDVirtualServicePool.enabledDeviceTypes.getter();
  sub_26084BD20(0, v0);
  if (v1)
  {
    char v2 = 1;
  }
  else
  {
    sub_26084BD20(1u, v0);
    char v2 = v3;
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_26080D1F0()
{
  uint64_t v0 = HIDVirtualServicePool.enabledDeviceTypes.getter();
  char v1 = sub_2608111D0((uint64_t)&unk_270C9E2F0, v0);
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

void sub_26080D238()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v68 = v0;
  unint64_t v3 = v2;
  uint64_t v76 = v4;
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v8 = OUTLINED_FUNCTION_9_8(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_26_1();
  uint64_t v65 = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_23_3();
  uint64_t v64 = v11;
  uint64_t v12 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_10_2();
  uint64_t v69 = v13;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v67 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_23_3();
  uint64_t v74 = v17;
  uint64_t v63 = v18;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_23_3();
  uint64_t v78 = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4708);
  OUTLINED_FUNCTION_10_2();
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_19_6();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_26087B9C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v75 = v12;
  uint64_t v60 = v6;
  if (v25)
  {
    uint64_t v80 = MEMORY[0x263F8EE78];
    sub_2607E9BE8(0, v25 & ~(v25 >> 63), 0);
    if (v25 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v27 = 0;
    uint64_t v26 = v80;
    unint64_t v28 = v3;
    unint64_t v29 = v3 & 0xC000000000000001;
    do
    {
      if (v29)
      {
        uint64_t v30 = MEMORY[0x26121CC50](v27, v28);
      }
      else
      {
        uint64_t v30 = *(void *)(v28 + 8 * v27 + 32);
        swift_retain();
      }
      uint64_t v31 = *(int *)(v21 + 48);
      sub_2607F6B78(v30 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id, v1);
      *(void *)(v1 + v31) = v30;
      uint64_t v80 = v26;
      unint64_t v33 = *(void *)(v26 + 16);
      unint64_t v32 = *(void *)(v26 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_2607E9BE8(v32 > 1, v33 + 1, 1);
        uint64_t v26 = v80;
      }
      ++v27;
      *(void *)(v26 + 16) = v33 + 1;
      sub_260812168(v1, v26+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v33, &qword_26A8B4708);
    }
    while (v25 != v27);
    uint64_t v6 = v60;
  }
  uint64_t v34 = sub_260854494(v26);
  uint64_t v35 = *(void *)(v6 + 16);
  if (v35)
  {
    uint64_t v73 = v68 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger;
    uint64_t v62 = OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_workloop;
    unint64_t v36 = (uint64_t *)(v68 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
    swift_bridgeObjectRetain();
    uint64_t v61 = v36;
    swift_beginAccess();
    uint64_t v72 = sub_26087B0F0();
    uint64_t v37 = *(void *)(v72 - 8);
    uint64_t v38 = (void **)(v6 + 40);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
    uint64_t v70 = v37 + 16;
    unint64_t v71 = v39;
    do
    {
      uint64_t v77 = v35;
      uint64_t v41 = (uint64_t)*(v38 - 1);
      long long v40 = *v38;
      uint64_t v42 = v78;
      v71(v78, v76, v72);
      *(void *)(v42 + *(int *)(v75 + 20)) = v41;
      id v43 = v40;
      swift_bridgeObjectRetain();
      unint64_t v44 = sub_2607F3DA0(v42);
      LOBYTE(v42) = v45;
      swift_bridgeObjectRelease();
      if (v42)
      {
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v79 = v34;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4780);
        sub_26087B950();
        uint64_t v34 = v79;
        sub_2607F6C40(*(void *)(v79 + 48) + *(void *)(v69 + 72) * v44);
        uint64_t v46 = *(void *)(*(void *)(v34 + 56) + 8 * v44);
        type metadata accessor for HIDVirtualServicePool.VirtualService(0);
        sub_260811BF4(&qword_26A8B4738, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
        sub_26087B970();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v46 = 0;
      }
      uint64_t v47 = v74;
      sub_2607F6B78(v78, v74);
      if (!v46)
      {
        sub_2607F6B78(v47, v67);
        sub_260806EA4(v73, v64);
        char v48 = *(void **)(v68 + v62);
        type metadata accessor for HIDVirtualServicePool.VirtualService(0);
        uint64_t v46 = swift_allocObject();
        id v49 = v48;
        sub_260809FA4();
      }
      sub_2607F6C40(v47);
      sub_26080AD64(v41, v43);
      uint64_t v50 = swift_allocObject();
      swift_weakInit();
      id v66 = v43;
      uint64_t v51 = v78;
      uint64_t v52 = v67;
      sub_2607F6B78(v78, v67);
      unint64_t v53 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v50;
      sub_2607F6BDC(v52, v54 + v53);
      id v55 = (uint64_t (**)())(v46
                           + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_terminationWasRequestedHandler);
      *id v55 = sub_260811B48;
      v55[1] = (uint64_t (*)())v54;
      swift_release();
      sub_2607F6B78(v46 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_id, v52);
      uint64_t v56 = *v61;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v79 = v56;
      sub_2607F56DC(v46, v52);
      uint64_t v57 = v79;
      swift_bridgeObjectRelease();
      sub_2607F6C40(v52);
      sub_26080C59C(v57);
      swift_release();

      sub_2607F6C40(v51);
      v38 += 2;
      uint64_t v35 = v77 - 1;
    }
    while (v77 != 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v58 = swift_bridgeObjectRetain();
  sub_2608406D0(v58);
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_26080D9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for EventReportSenderID();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    sub_260806EA4(result + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v8);
    uint64_t v11 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11) == 1)
    {
      sub_2608121C8((uint64_t)v8, (uint64_t *)&unk_26A8B50E0);
    }
    else
    {
      sub_2607F6B78(a2, (uint64_t)v5);
      uint64_t v12 = sub_26087B100();
      os_log_type_t v13 = sub_26087B530();
      int v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        int v27 = v14;
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v29 = v26;
        *(_DWORD *)uint64_t v15 = 136446210;
        v24[2] = v15 + 12;
        uint64_t v25 = v15;
        v24[1] = v15 + 4;
        sub_26087B0A0();
        uint64_t v16 = sub_26081C0F8(8);
        uint64_t v17 = MEMORY[0x26121C730](v16);
        unint64_t v19 = v18;
        swift_bridgeObjectRelease();
        uint64_t v30 = v17;
        unint64_t v31 = v19;
        sub_26087B330();
        uint64_t v28 = *(void *)&v5[*(int *)(v3 + 20)];
        sub_26080707C();
        sub_26087B360();
        sub_26087B330();
        swift_bridgeObjectRelease();
        uint64_t v30 = sub_26080F618(v30, v31, &v29);
        sub_26087B650();
        swift_bridgeObjectRelease();
        sub_2607F6C40((uint64_t)v5);
        uint64_t v20 = v25;
        _os_log_impl(&dword_2607D9000, v12, (os_log_type_t)v27, "%{public}s: Termination Requested", v25, 0xCu);
        uint64_t v21 = v26;
        swift_arrayDestroy();
        MEMORY[0x26121DB90](v21, -1, -1);
        MEMORY[0x26121DB90](v20, -1, -1);
      }
      else
      {

        sub_2607F6C40((uint64_t)v5);
      }
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
    }
    uint64_t v22 = (void (**)(uint64_t))(v10
                                        + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_terminationWasRequestedHandler);
    swift_beginAccess();
    uint64_t v23 = *v22;
    swift_retain();
    v23(a2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_26080DD1C()
{
  uint64_t v2 = sub_26087BBB0();
  sub_26087B330();
  sub_26087B0A0();
  uint64_t v0 = sub_26081C0F8(8);
  MEMORY[0x26121C730](v0);
  swift_bridgeObjectRelease();
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  return v2;
}

uint64_t HIDVirtualServicePool.updateInputDevices(inputDevices:for:useRemoteAcceleration:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2607E9C08(0, v1, 0);
    uint64_t v3 = (id *)(a1 + 40);
    do
    {
      uint64_t v4 = (uint64_t)*(v3 - 1);
      id v5 = *v3;
      uint64_t v6 = (void *)sub_26087B450();
      objc_msgSend(v5, sel___swift_setObject_forKeyedSubscript_, v6, sub_26087BC00());

      swift_unknownObjectRelease();
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_2607E9C08(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v5;
      v3 += 2;
      --v1;
    }
    while (v1);
  }
  HIDVirtualServicePool.updateInputDevices(inputDevices:for:)();
  return swift_bridgeObjectRelease();
}

void HIDVirtualServicePool.updateInputDevices(inputDevices:for:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  v22[0] = v4;
  sub_26087B160();
  OUTLINED_FUNCTION_10_2();
  v22[4] = v5;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_10_2();
  void v22[2] = v8;
  v22[3] = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_10_2();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v14);
  v22[1] = *(void *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(void *)(v16 + ((v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22[0];
  v23[4] = sub_2608114F4;
  v23[5] = v16;
  v23[0] = MEMORY[0x263EF8330];
  v23[1] = 1107296256;
  v23[2] = sub_2608045D0;
  v23[3] = &block_descriptor_0;
  uint64_t v17 = _Block_copy(v23);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_26087B170();
  v22[5] = MEMORY[0x263F8EE78];
  sub_260811BF4((unint64_t *)&qword_26A8B52B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_2607E9A5C((unint64_t *)&qword_26A8B52C0, &qword_26A8B48A0);
  sub_26087B7A0();
  uint64_t v18 = OUTLINED_FUNCTION_25_2();
  MEMORY[0x26121C9B0](v18);
  _Block_release(v17);
  uint64_t v19 = OUTLINED_FUNCTION_11_6();
  v20(v19);
  OUTLINED_FUNCTION_16_5();
  v21();
  swift_release();
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_26080E214(uint64_t a1, uint64_t a2)
{
  sub_26080E320(a2);
  sub_26080D238();
  unint64_t v3 = v2;
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    return sub_26080E3CC();
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_26087B9C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_9;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        MEMORY[0x26121CC50](i, v3);
      }
      else {
        swift_retain();
      }
      sub_26080A818();
      swift_release();
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_26080E320(uint64_t a1)
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  unint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v7[2] = a1;
  v7[3] = &v8;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_26080FC68((uint64_t)sub_260811A6C, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  sub_26080C59C(v5);
  return v8;
}

uint64_t sub_26080E3CC()
{
  char v1 = sub_26080D198();
  uint64_t v2 = HIDVirtualServicePool.enabledDeviceTypes.getter();
  sub_26084BD20(3u, v2);
  char v4 = v3;
  swift_bridgeObjectRelease();
  BOOL v5 = sub_26080D1F0();
  uint64_t v6 = HIDVirtualServicePool.enabledDeviceTypes.getter();
  sub_26084BD20(2u, v6);
  char v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v10 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  char v16 = v1 & 1;
  char v17 = v4 & 1;
  BOOL v18 = v5;
  char v19 = v8 & 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    uint64_t v27 = *(void *)(*(void *)(v10 + 56) + 8 * i);
    *(unsigned char *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_digitizerEnabled) = v16;
    swift_retain();
    sub_26080B8C8();
    *(unsigned char *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_keyboardEnabled) = v17;
    sub_26080B8C8();
    *(unsigned char *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_pointingEnabled) = v18;
    sub_26080B8C8();
    *(unsigned char *)(v27 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_gamepadEnabled) = v19;
    sub_26080B8C8();
    uint64_t result = swift_release();
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v15) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v11 + 8 * v24);
    ++v21;
    if (!v25)
    {
      int64_t v21 = v24 + 1;
      if (v24 + 1 >= v15) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v11 + 8 * v21);
      if (!v25)
      {
        int64_t v21 = v24 + 2;
        if (v24 + 2 >= v15) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v11 + 8 * v21);
        if (!v25)
        {
          int64_t v21 = v24 + 3;
          if (v24 + 3 >= v15) {
            return swift_release();
          }
          unint64_t v25 = *(void *)(v11 + 8 * v21);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v15) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v11 + 8 * v26);
  if (v25)
  {
    int64_t v21 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v21 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v21 >= v15) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v11 + 8 * v21);
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL sub_26080E600(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  int64_t v24 = a4;
  uint64_t v6 = sub_26087B0F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4938);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = *a2;
  sub_2607F6B78(a1, (uint64_t)&v23 - v14);
  uint64_t v17 = *(int *)(v10 + 48);
  *(void *)&v15[v17] = v16;
  sub_2607F6B78((uint64_t)v15, (uint64_t)v13);
  *(void *)&v13[v17] = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  swift_retain_n();
  sub_2607F6C40((uint64_t)v13);
  sub_260811BF4(&qword_26A8B4758, MEMORY[0x263F07508]);
  char v18 = sub_26087B290();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v18)
  {
    uint64_t v19 = *(int *)(v10 + 48);
    uint64_t v20 = sub_2607F6B78((uint64_t)v15, (uint64_t)v13);
    *(void *)&v13[v19] = v16;
    int64_t v21 = v24;
    MEMORY[0x26121C810](v20);
    sub_2607E27F0(*(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10));
    sub_26087B430();
    sub_26087B400();
    sub_2608121C8((uint64_t)v15, &qword_26A8B4938);
    sub_2607F6C40((uint64_t)v13);
  }
  else
  {
    sub_2608121C8((uint64_t)v15, &qword_26A8B4938);
    swift_release();
  }
  return (v18 & 1) == 0;
}

void HIDVirtualServicePool.removeInputDevices(for:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v4 = v3;
  sub_26087B160();
  OUTLINED_FUNCTION_10_2();
  v21[4] = v5;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_10_2();
  void v21[2] = v8;
  v21[3] = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_10_2();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v14);
  v21[1] = *(void *)(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v0;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v22[4] = sub_26081160C;
  v22[5] = v16;
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 1107296256;
  void v22[2] = sub_2608045D0;
  v22[3] = &block_descriptor_6_0;
  uint64_t v17 = _Block_copy(v22);
  swift_retain();
  sub_26087B170();
  v21[5] = MEMORY[0x263F8EE78];
  sub_260811BF4((unint64_t *)&qword_26A8B52B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_2607E9A5C((unint64_t *)&qword_26A8B52C0, &qword_26A8B48A0);
  OUTLINED_FUNCTION_8_8();
  sub_26087B7A0();
  MEMORY[0x26121C9B0](0, v2, v1, v17);
  _Block_release(v17);
  uint64_t v18 = OUTLINED_FUNCTION_11_6();
  v19(v18);
  OUTLINED_FUNCTION_16_5();
  v20();
  swift_release();
  OUTLINED_FUNCTION_14_0();
}

char *sub_26080EB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26087B0F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260806EA4(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t)v10);
  uint64_t v11 = sub_26087B120();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_2608121C8((uint64_t)v10, (uint64_t *)&unk_26A8B50E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    uint64_t v12 = sub_26087B100();
    os_log_type_t v13 = sub_26087B530();
    int v14 = v13;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v37 = a2;
      uint64_t v15 = swift_slowAlloc();
      int v35 = v14;
      uint64_t v16 = (uint8_t *)v15;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v40 = v36;
      uint64_t v38 = a1;
      *(_DWORD *)uint64_t v16 = 136446210;
      unint64_t v33 = v16 + 4;
      uint64_t v34 = v16;
      sub_26087B0A0();
      uint64_t v17 = sub_26081C0F8(8);
      uint64_t v18 = MEMORY[0x26121C730](v17);
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = v18;
      a2 = v37;
      uint64_t v39 = sub_26080F618(v21, v20, &v40);
      sub_26087B650();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      unint64_t v22 = v34;
      _os_log_impl(&dword_2607D9000, v12, (os_log_type_t)v35, "Device %{public}s: Remove Input Devices", v34, 0xCu);
      uint64_t v23 = v36;
      swift_arrayDestroy();
      MEMORY[0x26121DB90](v23, -1, -1);
      MEMORY[0x26121DB90](v22, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  unint64_t v24 = sub_26080E320(a2);
  unint64_t v25 = v24;
  if (!(v24 >> 62))
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26) {
      goto LABEL_9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return (char *)sub_26080E3CC();
  }
  uint64_t v26 = sub_26087B9C0();
  if (!v26) {
    goto LABEL_19;
  }
LABEL_9:
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2607E9C58(0, v26 & ~(v26 >> 63), 0);
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = 0;
    uint64_t v29 = v40;
    do
    {
      if ((v25 & 0xC000000000000001) != 0) {
        MEMORY[0x26121CC50](v28, v25);
      }
      else {
        swift_retain();
      }
      sub_26080A818();
      swift_release();
      uint64_t v40 = v29;
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      unint64_t v32 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_2607E9C58((char *)(v30 > 1), v31 + 1, 1);
        uint64_t v29 = v40;
      }
      ++v28;
      *(void *)(v29 + 16) = v32;
    }
    while (v26 != v28);
    swift_bridgeObjectRelease();
    swift_release();
    return (char *)sub_26080E3CC();
  }
  __break(1u);
  return result;
}

void HIDVirtualServicePool.addServiceClient(_:)()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = sub_26087B160();
  OUTLINED_FUNCTION_10_2();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_10_2();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  int v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)(v2 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_queue);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  *(void *)(v15 + 24) = v4;
  v20[4] = sub_260811678;
  v20[5] = v15;
  v20[0] = MEMORY[0x263EF8330];
  v20[1] = 1107296256;
  v20[2] = sub_2608045D0;
  v20[3] = &block_descriptor_12;
  uint64_t v16 = _Block_copy(v20);
  swift_retain();
  id v17 = v4;
  sub_26087B170();
  v19[1] = MEMORY[0x263F8EE78];
  sub_260811BF4((unint64_t *)&qword_26A8B52B0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B48A0);
  sub_2607E9A5C((unint64_t *)&qword_26A8B52C0, &qword_26A8B48A0);
  OUTLINED_FUNCTION_8_8();
  sub_26087B7A0();
  uint64_t v18 = OUTLINED_FUNCTION_25_2();
  MEMORY[0x26121C9B0](v18);
  _Block_release(v16);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
  swift_release();
  OUTLINED_FUNCTION_14_0();
}

uint64_t sub_26080F1A0(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4930);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_virtualServices);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v36 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  int64_t v35 = v16 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v15) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v20 = v19 | (v18 << 6);
  while (2)
  {
    uint64_t v21 = *(void *)(v11 + 48);
    uint64_t v22 = type metadata accessor for EventReportSenderID();
    sub_2607F6B78(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, (uint64_t)v6);
    uint64_t v23 = *(void *)(v11 + 56);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4938);
    *(void *)&v6[*(int *)(v24 + 48)] = *(void *)(v23 + 8 * v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v24);
    swift_retain();
    while (1)
    {
      sub_260812168((uint64_t)v6, (uint64_t)v9, &qword_26A8B4930);
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4938);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v29) == 1) {
        return swift_release();
      }
      uint64_t v30 = *(void *)&v9[*(int *)(v29 + 48)];
      uint64_t v31 = *(void *)(v30 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_service);
      if (v31)
      {
        swift_beginAccess();
        id v32 = *(id *)(v31 + 48);
        if (v32 == objc_msgSend(a2, sel_serviceID))
        {
          swift_release();
          unint64_t v33 = *(void **)(v30 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client);
          *(void *)(v30 + OBJC_IVAR____TtCC12UniversalHID21HIDVirtualServicePool14VirtualService_client) = a2;

          id v34 = a2;
          swift_release();
          return sub_2607F6C40((uint64_t)v9);
        }
      }
      swift_release();
      uint64_t result = sub_2607F6C40((uint64_t)v9);
      if (v15) {
        goto LABEL_4;
      }
LABEL_6:
      int64_t v25 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v25 < v16)
      {
        unint64_t v26 = *(void *)(v36 + 8 * v25);
        if (v26) {
          goto LABEL_9;
        }
        int64_t v27 = v18 + 2;
        ++v18;
        if (v25 + 1 < v16)
        {
          unint64_t v26 = *(void *)(v36 + 8 * v27);
          if (v26) {
            goto LABEL_12;
          }
          int64_t v18 = v25 + 1;
          if (v25 + 2 < v16)
          {
            unint64_t v26 = *(void *)(v36 + 8 * (v25 + 2));
            if (v26)
            {
              v25 += 2;
              goto LABEL_9;
            }
            int64_t v27 = v25 + 3;
            int64_t v18 = v25 + 2;
            if (v25 + 3 < v16) {
              break;
            }
          }
        }
      }
LABEL_23:
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4938);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v28);
      unint64_t v15 = 0;
    }
    unint64_t v26 = *(void *)(v36 + 8 * v27);
    if (v26)
    {
LABEL_12:
      int64_t v25 = v27;
LABEL_9:
      unint64_t v15 = (v26 - 1) & v26;
      unint64_t v20 = __clz(__rbit64(v26)) + (v25 << 6);
      int64_t v18 = v25;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v16)
    {
      int64_t v18 = v35;
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v36 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_9;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t HIDVirtualServicePool.deinit()
{
  sub_2608121C8(v0 + OBJC_IVAR____TtC12UniversalHID21HIDVirtualServicePool_logger, (uint64_t *)&unk_26A8B50E0);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t HIDVirtualServicePool.__deallocating_deinit()
{
  return sub_26080F5A0((void (*)(void))HIDVirtualServicePool.deinit);
}

uint64_t sub_26080F5A0(void (*a1)(void))
{
  a1();
  uint64_t v2 = *(unsigned int *)(*(void *)v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v1 + 52);
  return MEMORY[0x270FA0228](v1, v2, v3);
}

uint64_t sub_26080F5FC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_26080CB94(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_26080F618(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_26080F6EC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_26080964C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_26080964C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_26080F6EC(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_26080F844((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_26087B660();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_26080F91C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_26087B850();
    if (!v8)
    {
      uint64_t result = sub_26087B980();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_26080F844(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_26087BA10();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_26080F91C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_26080F9B4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_26080FB90(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_26080FB90((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_26080F9B4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_26087B350();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_26080FB28(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_26087B800();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_26087BA10();
  __break(1u);
LABEL_14:
  uint64_t result = sub_26087B980();
  __break(1u);
  return result;
}

void *sub_26080FB28(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49B0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_26080FB90(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_2607E8DDC(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2607E95FC(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_26080FC68(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (uint64_t (*)(char *, uint64_t *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    int64_t v9 = (void *)((char *)v13 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_260869EE8(0, v8, v9);
    uint64_t v10 = sub_26080FDEC(v9, v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    size_t v11 = (unint64_t *)swift_slowAlloc();
    sub_260869EE8(0, v8, v11);
    a2 = sub_26080FDEC(v11, v8, a3, v6);
    MEMORY[0x26121DB90](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_26080FDEC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, uint64_t *))
{
  uint64_t v28 = a4;
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v6 = type metadata accessor for EventReportSenderID();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  int64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v24 = 0;
  uint64_t v25 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    sub_2607F6B78(*(void *)(a3 + 48) + *(void *)(v27 + 72) * v16, (uint64_t)v9);
    uint64_t v29 = *(void *)(*(void *)(a3 + 56) + 8 * v16);
    swift_retain();
    char v20 = v28(v9, &v29);
    swift_release();
    uint64_t result = sub_2607F6C40((uint64_t)v9);
    if (v4) {
      return result;
    }
    if (v20)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v24++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v26) {
    return sub_2608104DC(v23, v22, v24, (void *)a3);
  }
  unint64_t v18 = *(void *)(v25 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v26) {
    return sub_2608104DC(v23, v22, v24, (void *)a3);
  }
  unint64_t v18 = *(void *)(v25 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v26) {
    return sub_2608104DC(v23, v22, v24, (void *)a3);
  }
  unint64_t v18 = *(void *)(v25 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v26) {
    return sub_2608104DC(v23, v22, v24, (void *)a3);
  }
  unint64_t v18 = *(void *)(v25 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v26) {
      return sub_2608104DC(v23, v22, v24, (void *)a3);
    }
    unint64_t v18 = *(void *)(v25 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_26081007C()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v43 = v4;
  uint64_t v42 = v5;
  type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_10_2();
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_26_1();
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_23_3();
  uint64_t v45 = v10;
  if (!v3) {
    goto LABEL_39;
  }
  if (v1[2] == v3)
  {
    swift_retain();
LABEL_39:
    OUTLINED_FUNCTION_14_0();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4790);
  uint64_t v55 = sub_26087BA00();
  if (v43 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *v42;
  }
  uint64_t v12 = 0;
  uint64_t v13 = v55 + 64;
  unint64_t v44 = v1;
  while (1)
  {
    uint64_t v53 = v3;
    if (v11)
    {
      uint64_t v47 = (v11 - 1) & v11;
      uint64_t v48 = v12;
      unint64_t v14 = __clz(__rbit64(v11)) | (v12 << 6);
      goto LABEL_28;
    }
    uint64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_42;
    }
    if (v15 >= v43) {
      goto LABEL_39;
    }
    unint64_t v16 = v42[v15];
    uint64_t v17 = v12 + 1;
    if (!v16)
    {
      OUTLINED_FUNCTION_15_5();
      if (v18 == v19) {
        goto LABEL_39;
      }
      OUTLINED_FUNCTION_14_6();
      if (!v16)
      {
        OUTLINED_FUNCTION_15_5();
        if (v18 == v19) {
          goto LABEL_39;
        }
        OUTLINED_FUNCTION_14_6();
        if (!v16) {
          break;
        }
      }
    }
LABEL_27:
    uint64_t v47 = (v16 - 1) & v16;
    uint64_t v48 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_28:
    uint64_t v49 = *(void *)(v46 + 72);
    sub_2607F6B78(v1[6] + v49 * v14, v45);
    uint64_t v23 = (uint64_t *)(v1[7] + 80 * v14);
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    uint64_t v26 = v23[2];
    unint64_t v27 = v23[3];
    uint64_t v28 = v23[4];
    unint64_t v29 = v23[5];
    uint64_t v30 = v23[8];
    unint64_t v51 = v23[7];
    uint64_t v52 = v23[6];
    unint64_t v31 = v23[9];
    sub_2607F6BDC(v45, v54);
    sub_26087BCA0();
    unint64_t v50 = v24;
    sub_2607DCED0(v25, v24);
    sub_2607DCED0(v26, v27);
    sub_2607DCED0(v28, v29);
    sub_2607DCED0(v52, v51);
    sub_2607DCED0(v30, v31);
    sub_26087B0F0();
    sub_260811BF4(&qword_26A8B4750, MEMORY[0x263F07508]);
    sub_26087B220();
    sub_26087BCF0();
    uint64_t v32 = sub_26087BD00();
    uint64_t v33 = -1 << *(unsigned char *)(v55 + 32);
    unint64_t v34 = v32 & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v13 + 8 * (v34 >> 6))) == 0)
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v33) >> 6;
      while (++v35 != v38 || (v37 & 1) == 0)
      {
        BOOL v39 = v35 == v38;
        if (v35 == v38) {
          unint64_t v35 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v13 + 8 * v35);
        if (v40 != -1)
        {
          unint64_t v36 = __clz(__rbit64(~v40)) + (v35 << 6);
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    unint64_t v36 = __clz(__rbit64((-1 << v34) & ~*(void *)(v13 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
    *(void *)(v13 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    sub_2607F6BDC(v54, *(void *)(v55 + 48) + v36 * v49);
    uint64_t v41 = (uint64_t *)(*(void *)(v55 + 56) + 80 * v36);
    *uint64_t v41 = v25;
    v41[1] = v50;
    v41[2] = v26;
    v41[3] = v27;
    v41[4] = v28;
    v41[5] = v29;
    v41[6] = v52;
    v41[7] = v51;
    v41[8] = v30;
    v41[9] = v31;
    ++*(void *)(v55 + 16);
    uint64_t v3 = v53 - 1;
    if (__OFSUB__(v53, 1)) {
      goto LABEL_41;
    }
    uint64_t v1 = v44;
    unint64_t v11 = v47;
    uint64_t v12 = v48;
    if (v53 == 1) {
      goto LABEL_39;
    }
  }
  uint64_t v21 = v20 + 3;
  if (v21 >= v43) {
    goto LABEL_39;
  }
  unint64_t v16 = v42[v21];
  if (v16)
  {
    uint64_t v17 = v21;
    goto LABEL_27;
  }
  while (!__OFADD__(v21, 1))
  {
    OUTLINED_FUNCTION_15_5();
    if (v18 == v19) {
      goto LABEL_39;
    }
    OUTLINED_FUNCTION_14_6();
    uint64_t v21 = v22 + 1;
    if (v16) {
      goto LABEL_27;
    }
  }
LABEL_43:
  __break(1u);
}

uint64_t sub_2608104DC(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for EventReportSenderID();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v39 = (uint64_t)&v36 - v12;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4940);
  uint64_t result = sub_26087BA00();
  uint64_t v14 = result;
  unint64_t v36 = a1;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = *a1;
  }
  uint64_t v16 = 0;
  uint64_t v17 = result + 64;
  unint64_t v38 = a4;
  while (1)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      uint64_t v42 = v16;
      unint64_t v19 = v18 | (v16 << 6);
    }
    else
    {
      uint64_t v20 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_40;
      }
      if (v20 >= v37) {
        return v14;
      }
      unint64_t v21 = v36[v20];
      uint64_t v22 = v16 + 1;
      if (!v21)
      {
        uint64_t v22 = v16 + 2;
        if (v16 + 2 >= v37) {
          return v14;
        }
        unint64_t v21 = v36[v22];
        if (!v21)
        {
          uint64_t v22 = v16 + 3;
          if (v16 + 3 >= v37) {
            return v14;
          }
          unint64_t v21 = v36[v22];
          if (!v21)
          {
            uint64_t v23 = v16 + 4;
            if (v16 + 4 >= v37) {
              return v14;
            }
            unint64_t v21 = v36[v23];
            if (!v21)
            {
              while (1)
              {
                uint64_t v22 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v22 >= v37) {
                  return v14;
                }
                unint64_t v21 = v36[v22];
                ++v23;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v22 = v16 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v15 = (v21 - 1) & v21;
      uint64_t v42 = v22;
      unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    uint64_t v24 = v39;
    uint64_t v25 = *(void *)(v40 + 72);
    sub_2607F6B78(a4[6] + v25 * v19, v39);
    uint64_t v26 = *(void *)(a4[7] + 8 * v19);
    sub_2607F6BDC(v24, (uint64_t)v11);
    sub_26087BCA0();
    sub_26087B0F0();
    sub_260811BF4(&qword_26A8B4750, MEMORY[0x263F07508]);
    swift_retain();
    sub_26087B220();
    sub_26087BCF0();
    uint64_t result = sub_26087BD00();
    uint64_t v27 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) == 0) {
      break;
    }
    unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v17 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t result = sub_2607F6BDC((uint64_t)v11, *(void *)(v14 + 48) + v30 * v25);
    *(void *)(*(void *)(v14 + 56) + 8 * v30) = v26;
    ++*(void *)(v14 + 16);
    if (__OFSUB__(a3--, 1)) {
      goto LABEL_39;
    }
    a4 = v38;
    uint64_t v16 = v42;
    if (!a3) {
      return v14;
    }
  }
  char v31 = 0;
  unint64_t v32 = (unint64_t)(63 - v27) >> 6;
  while (++v29 != v32 || (v31 & 1) == 0)
  {
    BOOL v33 = v29 == v32;
    if (v29 == v32) {
      unint64_t v29 = 0;
    }
    v31 |= v33;
    uint64_t v34 = *(void *)(v17 + 8 * v29);
    if (v34 != -1)
    {
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_26081088C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_26082AAB0(v2);
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_2608108F8(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_2608108F8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26087BB90();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_260810F60(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = sub_2607E267C(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  unint64_t v93 = a1;
  if (v3 <= 0)
  {
    uint64_t v98 = MEMORY[0x263F8EE78];
    unint64_t v31 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)(v98 + 32 + 16 * v86);
      uint64_t v89 = *(void *)(v98 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_260811028((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)(v98 + 32 + 16 * (v31 - 1))), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_26082AA88(v98);
        uint64_t v87 = result;
      }
      if (v86 >= *(void *)(v87 + 16)) {
        goto LABEL_140;
      }
      uint64_t v90 = (void *)(v87 + 32 + 16 * v86);
      *uint64_t v90 = v88;
      v90[1] = v89;
      unint64_t v91 = *(void *)(v87 + 16);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v87 + 32 + 16 * (v31 - 1)), (const void *)(v87 + 32 + 16 * v31), 16 * (v91 - v31));
      uint64_t v98 = v87;
      *(void *)(v87 + 16) = v91 - 1;
      unint64_t v31 = v91 - 1;
      uint64_t v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  uint64_t v98 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_26087BBE0();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        uint64_t v19 = v15 + 1;
        uint64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_26087BBE0();
    int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    uint64_t v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      uint64_t v27 = v3;
    }
    else {
      uint64_t v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      uint64_t v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      uint64_t v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        uint64_t v82 = v9;
        unint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = sub_26087BBE0();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)unint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      uint64_t v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_26082A990(0, *(void *)(v28 + 16) + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_26082A990((char *)(v29 > 1), v30 + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    *(void *)(v28 + 16) = v31;
    uint64_t v32 = v28 + 32;
    BOOL v33 = (uint64_t *)(v28 + 32 + 16 * v30);
    *BOOL v33 = v9;
    v33[1] = v7;
    uint64_t v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    uint64_t v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v28 + 32);
        uint64_t v64 = *(void *)(v28 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *(void *)(v28 + 32);
      uint64_t v35 = *(void *)(v28 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    uint64_t v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    uint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = (uint64_t *)(v32 + 16 * v73);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)(v32 + 16 * v34);
    uint64_t v77 = v76[1];
    uint64_t result = sub_260811028((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *(void *)(v98 + 16)) {
      goto LABEL_125;
    }
    *uint64_t v74 = v75;
    *(void *)(v32 + 16 * v73 + 8) = v77;
    unint64_t v78 = *(void *)(v98 + 16);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    uint64_t v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v76 + 2, 16 * (v78 - 1 - v34));
    *(void *)(v98 + 16) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_260810F60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_26087BBE0();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_260811028(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_2607E89B8(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    unint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (sub_26087BBE0() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_2607E89B8(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_26087BBE0() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_2607E89B8(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

uint64_t sub_2608111D0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  uint64_t v6 = a2 + 56;
  while (1)
  {
    if (*(void *)(a2 + 16))
    {
      int v7 = *(unsigned __int8 *)(v5 + v4);
      sub_26087BCA0();
      sub_26087BCB0();
      uint64_t v8 = sub_26087BD00();
      uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v10 = v8 & ~v9;
      if ((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10)) {
        break;
      }
    }
LABEL_11:
    if (++v4 == v2) {
      return 1;
    }
  }
  uint64_t v11 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != v7)
  {
    uint64_t v12 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      if (*(unsigned __int8 *)(v11 + v10) == v7) {
        return 0;
      }
    }
    goto LABEL_11;
  }
  return 0;
}

int64_t sub_2608112D4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2608113B8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_260811438(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_260811444()
{
  sub_26087B0F0();
  OUTLINED_FUNCTION_10_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 24) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v8 = OUTLINED_FUNCTION_13_5();
  v9(v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v7, v6);
}

uint64_t sub_2608114F4()
{
  uint64_t v1 = sub_26087B0F0();
  OUTLINED_FUNCTION_1_11(v1);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return sub_26080E214(v3, v4);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_260811578()
{
  sub_26087B0F0();
  OUTLINED_FUNCTION_10_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 24) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_release();
  uint64_t v8 = OUTLINED_FUNCTION_13_5();
  v9(v8);
  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_26081160C()
{
  return sub_260811B74(MEMORY[0x263F07508], (uint64_t (*)(uint64_t, uint64_t))sub_26080EB2C);
}

uint64_t sub_260811638()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_260811678()
{
  return sub_26080F1A0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_260811680@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HIDVirtualServicePool.enabledDeviceTypes.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2608116B8()
{
  return type metadata accessor for HIDVirtualServicePool(0);
}

uint64_t type metadata accessor for HIDVirtualServicePool(uint64_t a1)
{
  return sub_2608116E0(a1, (uint64_t *)&unk_26A8B48F0);
}

uint64_t sub_2608116E0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_260811714()
{
  sub_260811808();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for HIDVirtualServicePool(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HIDVirtualServicePool);
}

uint64_t dispatch thunk of HIDVirtualServicePool.__allocating_init(logger:queue:workloop:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_260811808()
{
  if (!qword_26A8B51B0)
  {
    sub_26087B120();
    unint64_t v0 = sub_26087B620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A8B51B0);
    }
  }
}

uint64_t sub_260811860()
{
  return type metadata accessor for HIDVirtualServicePool.VirtualService(0);
}

void sub_260811868()
{
  type metadata accessor for EventReportSenderID();
  if (v0 <= 0x3F)
  {
    sub_260811808();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_260811998()
{
  return sub_260811BF4(&qword_26A8B4738, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
}

uint64_t sub_2608119E4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_260811A1C(uint64_t a1)
{
  return sub_2608688CC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_260811A24(uint64_t a1)
{
  return sub_2608688A4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_260811A2C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260811A64()
{
  return sub_26080C4DC();
}

BOOL sub_260811A6C(uint64_t a1, uint64_t *a2)
{
  return sub_26080E600(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_260811A8C()
{
  return sub_26080DD1C();
}

uint64_t sub_260811A94()
{
  uint64_t v1 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_1_11(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = ((v6 + 24) & ~v6) + *(void *)(v5 + 64);
  uint64_t v8 = v6 | 7;
  swift_release();
  sub_26087B0F0();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_16_5();
  v9();
  return MEMORY[0x270FA0238](v0, v7, v8);
}

uint64_t sub_260811B48()
{
  return sub_260811B74((uint64_t (*)(void))type metadata accessor for EventReportSenderID, sub_26080D9A0);
}

uint64_t sub_260811B74(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5);
}

uint64_t sub_260811BF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_260811C3C()
{
  unint64_t result = qword_26A8B50F0;
  if (!qword_26A8B50F0)
  {
    type metadata accessor for AppleVendorTopCaseGesture(255);
    sub_2607F9D2C();
    sub_260811CDC();
    sub_260811D28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B50F0);
  }
  return result;
}

unint64_t sub_260811CDC()
{
  unint64_t result = qword_26A8B5100;
  if (!qword_26A8B5100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5100);
  }
  return result;
}

unint64_t sub_260811D28()
{
  unint64_t result = qword_26A8B4970;
  if (!qword_26A8B4970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4970);
  }
  return result;
}

unint64_t sub_260811D74()
{
  unint64_t result = qword_26A8B5110;
  if (!qword_26A8B5110)
  {
    type metadata accessor for AppleVendorKeyboardGesture(255);
    sub_2608038D8();
    sub_260811E14();
    sub_260811E60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5110);
  }
  return result;
}

unint64_t sub_260811E14()
{
  unint64_t result = qword_26A8B5120;
  if (!qword_26A8B5120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5120);
  }
  return result;
}

unint64_t sub_260811E60()
{
  unint64_t result = qword_26A8B4978;
  if (!qword_26A8B4978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4978);
  }
  return result;
}

unint64_t sub_260811EAC()
{
  unint64_t result = qword_26A8B5130;
  if (!qword_26A8B5130)
  {
    type metadata accessor for ConsumerGesture(255);
    sub_260811F4C();
    sub_260811F98();
    sub_260811FE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5130);
  }
  return result;
}

unint64_t sub_260811F4C()
{
  unint64_t result = qword_26A8B4980;
  if (!qword_26A8B4980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4980);
  }
  return result;
}

unint64_t sub_260811F98()
{
  unint64_t result = qword_26A8B5140;
  if (!qword_26A8B5140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5140);
  }
  return result;
}

unint64_t sub_260811FE4()
{
  unint64_t result = qword_26A8B4988;
  if (!qword_26A8B4988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4988);
  }
  return result;
}

unint64_t sub_260812030()
{
  unint64_t result = qword_26A8B5150;
  if (!qword_26A8B5150)
  {
    type metadata accessor for KeyboardGesture(255);
    sub_2607FE6FC();
    sub_2608120D0();
    sub_26081211C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5150);
  }
  return result;
}

unint64_t sub_2608120D0()
{
  unint64_t result = qword_26A8B5160;
  if (!qword_26A8B5160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5160);
  }
  return result;
}

unint64_t sub_26081211C()
{
  unint64_t result = qword_26A8B4990;
  if (!qword_26A8B4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4990);
  }
  return result;
}

uint64_t sub_260812168(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_5_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_2608121C8(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_16_5();
  v3();
  return a1;
}

uint64_t sub_26081221C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  return v0 - 136;
}

uint64_t OUTLINED_FUNCTION_9_8(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_10_8()
{
  return sub_26087B0F0();
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return v0 + v1;
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_20_6()
{
  *(_DWORD *)(v1 - 144) = v0;
  return sub_26087B650();
}

uint64_t OUTLINED_FUNCTION_21_5(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

void OUTLINED_FUNCTION_22_4()
{
  JUMPOUT(0x26121DB90);
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return swift_release_n();
}

uint64_t ReportID.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_26087B3B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t UsagePage.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_260812864(a1, a2, a3, 5, a4);
}

uint64_t Usage.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_260812864(a1, a2, a3, 17, a4);
}

uint64_t LogicalMinimum.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 6, sub_260815298, a2);
}

uint64_t LogicalMaximum.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 7, sub_260815298, a2);
}

uint64_t ReportSize.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 12, (uint64_t (*)(char *, uint64_t))sub_2608155C0, a2);
}

uint64_t ReportCount.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 14, sub_260815298, a2);
}

uint64_t Input.init(_:_:_:_:_:_:_:_:)@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X2>, unsigned char *a4@<X3>, unsigned char *a5@<X4>, unsigned char *a6@<X5>, unsigned char *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v9 = 2;
  if (!*a2) {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | *a1;
  uint64_t v11 = 4;
  if (!*a3) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = 8;
  if (!*a4) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = v10 | v11 | v12;
  uint64_t v14 = 16;
  if (!*a5) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = 32;
  if (!*a6) {
    uint64_t v15 = 0;
  }
  uint64_t v16 = v14 | v15;
  uint64_t v17 = 64;
  if (!*a7) {
    uint64_t v17 = 0;
  }
  char v20 = 0;
  uint64_t result = sub_260815298(&v20, v13 | v16 | v17);
  *a8 = result;
  a8[1] = v19;
  return result;
}

uint64_t static HIDReportDescriptor.Builder.buildBlock(_:)(uint64_t a1)
{
  long long v20 = xmmword_26087D920;
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2607E2A1C(v2, (uint64_t)v19);
      sub_2607E2A1C((uint64_t)v19, (uint64_t)&v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49C0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49C8);
      if (swift_dynamicCast())
      {
        sub_2607E2B70(v12, (uint64_t)v16);
        uint64_t v3 = v17;
        uint64_t v4 = v18;
        __swift_project_boxed_opaque_existential_1(v16, v17);
        uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
        unint64_t v7 = v6;
        sub_26087B050();
        sub_2607DCF28(v5, v7);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        uint64_t v8 = v16;
      }
      else
      {
        uint64_t v13 = 0;
        memset(v12, 0, sizeof(v12));
        sub_260816464((uint64_t)v12);
        sub_2607E2A1C((uint64_t)v19, (uint64_t)v16);
        if (!swift_dynamicCast())
        {
          uint64_t result = sub_26087B990();
          __break(1u);
          return result;
        }
        uint64_t v9 = v14;
        unint64_t v10 = v15;
        sub_2607DCED0(v14, v15);
        sub_26087B050();
        sub_2607DCF28(v9, v10);
        sub_2607DCF28(v9, v10);
        uint64_t v8 = v19;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return v20;
      }
    }
  }
  return 0;
}

uint64_t ApplicationCollection.init(content:)@<X0>(uint64_t *a1@<X8>)
{
  return sub_260815ABC(sub_260815978, a1);
}

uint64_t HIDReportDescriptor.init(content:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t UsageMinimum.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_260812864(a1, a2, a3, 18, a4);
}

uint64_t UsageMaximum.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_260812864(a1, a2, a3, 19, a4);
}

uint64_t sub_260812864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v44 = a4;
  uint64_t v43 = *(void *)(*((void *)a3 + 3) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)v39 - v9;
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_21_6();
  uint64_t v47 = v16;
  OUTLINED_FUNCTION_19_0();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  long long v20 = (char *)v39 - v19;
  MEMORY[0x270FA5388](v18);
  BOOL v22 = (char *)v39 - v21;
  BOOL v23 = *(void (**)(void))(v11 + 16);
  uint64_t v45 = a1;
  OUTLINED_FUNCTION_13_6();
  v23();
  char v24 = sub_26087B700();
  unint64_t v46 = a5;
  if (v24)
  {
    uint64_t v40 = a3;
    swift_getAssociatedConformanceWitness();
    sub_26087BBF0();
    a5 = v46;
    sub_26087BBC0();
    OUTLINED_FUNCTION_19_7();
    char v25 = sub_26087B260();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, a2);
    if ((v25 & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (sub_26087B6F0() < 64)
  {
LABEL_14:
    unint64_t v33 = sub_26087B6E0();
    unint64_t v34 = *(void (**)(char *, uint64_t))(v11 + 8);
    v34(v22, a2);
    char v48 = v44;
    uint64_t v35 = sub_2608155C0(&v48, v33);
    uint64_t v37 = v36;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v34)(v45, a2);
    *a5 = v35;
    a5[1] = v37;
    return result;
  }
  uint64_t v40 = v15;
  OUTLINED_FUNCTION_13_6();
  v23();
  uint64_t v49 = -1;
  char v26 = sub_26087B700();
  uint64_t v27 = sub_26087B6F0();
  if ((v26 & 1) == 0)
  {
    if (v27 < 65)
    {
      sub_26087B6E0();
      uint64_t v28 = *(void (**)(void))(v11 + 8);
      goto LABEL_13;
    }
LABEL_10:
    sub_260815B34();
    sub_26087B670();
    OUTLINED_FUNCTION_19_7();
    char v32 = sub_26087B250();
    uint64_t v28 = *(void (**)(void))(v11 + 8);
    ((void (*)(char *, uint64_t))v28)(v20, a2);
    if (v32) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (v27 > 64) {
    goto LABEL_10;
  }
  swift_getAssociatedConformanceWitness();
  v39[1] = v23;
  sub_26087BBF0();
  sub_26087BBC0();
  OUTLINED_FUNCTION_19_7();
  LODWORD(v43) = sub_26087B240();
  uint64_t v28 = *(void (**)(void))(v11 + 8);
  OUTLINED_FUNCTION_16_7();
  v28();
  unint64_t v29 = v49;
  OUTLINED_FUNCTION_13_6();
  v30();
  if ((v43 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_7();
    v28();
    goto LABEL_13;
  }
  unint64_t v31 = sub_26087B6E0();
  OUTLINED_FUNCTION_16_7();
  v28();
  if (v29 >= v31)
  {
LABEL_13:
    ((void (*)(uint64_t, uint64_t))v28)(v47, a2);
    a5 = v46;
    goto LABEL_14;
  }
LABEL_16:
  OUTLINED_FUNCTION_27();
  uint64_t result = sub_26087B980();
  __break(1u);
  return result;
}

uint64_t LogicalCollection.init(content:)@<X0>(uint64_t *a1@<X8>)
{
  return sub_260815ABC(sub_2608159DC, a1);
}

uint64_t sub_260812D9C(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260812E48(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260812EF4(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260812FA0(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_26081304C(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_2608130F8(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_2608131A4(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260813250(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_2608132FC(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_2608133A8(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260813454(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260813500(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_2608135AC(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260813658(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260813704(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_2608137B0(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_26081385C(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260813908(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_2608139B4(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  char v4 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  return qword_26087EE48[v4 & 3];
}

uint64_t sub_260813A60(unsigned __int8 a1)
{
  char v9 = 13;
  uint64_t v1 = a1;
  uint64_t v2 = sub_260815298(&v9, a1);
  unint64_t v4 = v3;
  char v8 = 13;
  uint64_t v5 = sub_260815298(&v8, v1);
  sub_2607DCF28(v5, v6);
  LOBYTE(v1) = sub_26087B080();
  sub_2607DCF28(v2, v4);
  return qword_26087EE48[v1 & 3];
}

uint64_t HIDReportDescriptorItemProtocol.bSize.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void (**)(void))(a2 + 40);
  v4();
  uint64_t v5 = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  sub_2607DCF28(v5, v6);
  char v7 = sub_26087B080();
  OUTLINED_FUNCTION_93();
  return qword_26087EE48[v7 & 3];
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260813C48@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260813D0CLL);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260813D1C@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260813DE0);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260813DF0@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260813EB4);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260813EC4@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260813F88);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260813F98@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x26081405CLL);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_26081406C@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814130);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814140@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814204);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814214@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x2608142D8);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608142E8@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x2608143ACLL);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608143BC@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814480);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814490@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814554);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814564@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814628);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814638@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x2608146FCLL);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_26081470C@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x2608147D0);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608147E0@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x2608148A4);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608148B4@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814978);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814988@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814A4CLL);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814A5C@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814B20);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814B30@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814BF4);
  }
  *a3 = byte_26087EE68[v8];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814C04@<W0>(unsigned __int8 a1@<W0>, unsigned char *a2@<X8>)
{
  result.value = sub_260814D64(a1, &v4).value;
  *a2 = byte_26087EE68[v4];
  return result;
}

void *HIDReportDescriptorItemProtocol.bType.getter@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  UniversalHID::HIDReportDescriptor::ItemTag_optional result = (*(void *(**)(uint64_t *__return_ptr))(a1 + 32))(&v4);
  *a2 = byte_26087EE68[(char)v4];
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814C9C@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_2607DCED0(a1, a2);
      break;
    default:
      break;
  }
  unsigned __int8 v6 = sub_26087B080();
  sub_2607DCF28(a1, a2);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v6 >> 2).value;
  if (v8 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814D54);
  }
  *a3 = v8;
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260814D64@<W0>(unsigned __int8 a1@<W0>, unsigned char *a2@<X8>)
{
  char v11 = 13;
  uint64_t v3 = a1;
  uint64_t v4 = sub_260815298(&v11, a1);
  unint64_t v6 = v5;
  char v10 = 13;
  uint64_t v7 = sub_260815298(&v10, v3);
  sub_2607DCF28(v7, v8);
  LOBYTE(v3) = sub_26087B080();
  sub_2607DCF28(v4, v6);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v3 >> 2).value;
  if (v12 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814E60);
  }
  *a2 = v12;
  return result;
}

UniversalHID::HIDReportDescriptor::ItemTag_optional HIDReportDescriptorItemProtocol.bTag.getter@<W0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  unint64_t v6 = *(uint64_t (**)(void))(a2 + 40);
  uint64_t v7 = v6();
  unint64_t v9 = v8;
  uint64_t v10 = ((uint64_t (*)(uint64_t, uint64_t))v6)(a1, a2);
  sub_2607DCF28(v10, v11);
  unsigned __int8 v12 = sub_26087B080();
  sub_2607DCF28(v7, v9);
  result.value = HIDReportDescriptor.ItemTag.init(rawValue:)(v12 >> 2).value;
  if (v14 == 28)
  {
    __break(1u);
    JUMPOUT(0x260814F7CLL);
  }
  *a3 = v14;
  return result;
}

uint64_t HIDReportDescriptor.init(bytes:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2607E6724(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

UniversalHID::HIDReportDescriptor::ItemType_optional __swiftcall HIDReportDescriptor.ItemType.init(rawValue:)(Swift::UInt8 rawValue)
{
  OUTLINED_FUNCTION_10_9(v1);
  return result;
}

uint64_t HIDReportDescriptor.ItemType.rawValue.getter()
{
  return *v0;
}

UniversalHID::HIDReportDescriptor::ItemType_optional sub_260814FD0(Swift::UInt8 *a1)
{
  return HIDReportDescriptor.ItemType.init(rawValue:)(*a1);
}

uint64_t sub_260814FD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDReportDescriptor.ItemType.rawValue.getter();
  *a1 = result;
  return result;
}

void HIDReportDescriptor.ItemTag.bType.getter(unsigned char *a1@<X8>)
{
}

uint64_t HIDReportDescriptor.ItemTag.rawValue.getter()
{
  return byte_26087EE84[*v0];
}

UniversalHID::HIDReportDescriptor::ItemTag_optional __swiftcall HIDReportDescriptor.ItemTag.init(rawValue:)(Swift::UInt8 rawValue)
{
  OUTLINED_FUNCTION_10_9(v1);
  return result;
}

BOOL sub_260815238(char *a1, char *a2)
{
  return sub_260865178(*a1, *a2);
}

uint64_t sub_260815244()
{
  return sub_26085310C();
}

uint64_t sub_26081524C()
{
  return sub_260853394();
}

uint64_t sub_260815254()
{
  return sub_2608534EC();
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_26081525C(Swift::UInt8 *a1)
{
  return HIDReportDescriptor.ItemTag.init(rawValue:)(*a1);
}

uint64_t sub_260815264@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDReportDescriptor.ItemTag.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_260815298(char *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2 != (int)a2)
  {
    __break(1u);
    JUMPOUT(0x260815550);
  }
  char v3 = byte_26087EEA0[*a1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49B0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_26087C870;
  *(unsigned char *)(v4 + 32) = v3;
  uint64_t v8 = sub_2607E6724(v4);
  uint64_t v5 = v2 >> 8;
  if (v2 >> 8 != v2 >> 7)
  {
    if (v2 >> 15 == v2 >> 16)
    {
      sub_260816EB0(v2);
      OUTLINED_FUNCTION_8_9();
      v2 >>= 8;
      switch(v6)
      {
        case 3:
          break;
        default:
          LOBYTE(v2) = v5;
          break;
      }
    }
    else
    {
      sub_260816EB0(v2);
      OUTLINED_FUNCTION_8_9();
      sub_260816EB0(SBYTE1(v2));
      OUTLINED_FUNCTION_8_9();
      sub_260816EB0(SBYTE2(v2));
      OUTLINED_FUNCTION_8_9();
      uint64_t v2 = (unint64_t)v2 >> 24;
    }
  }
  sub_260816EB0(v2);
  sub_26087B080();
  sub_26087AFD0();
  return v8;
}

uint64_t sub_2608155C0(char *a1, unint64_t a2)
{
  if (HIDWORD(a2))
  {
    __break(1u);
    JUMPOUT(0x260815864);
  }
  unint64_t v2 = a2;
  char v3 = byte_26087EEA0[*a1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49B0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_26087C870;
  *(unsigned char *)(v4 + 32) = v3;
  uint64_t v6 = sub_2607E6724(v4);
  if (v2 > 0xFF)
  {
    sub_260816EB0(v2);
    OUTLINED_FUNCTION_8_9();
    if (v2 >> 16)
    {
      sub_260816EB0(SBYTE1(v2));
      OUTLINED_FUNCTION_8_9();
      sub_260816EB0(SBYTE2(v2));
      OUTLINED_FUNCTION_8_9();
      v2 >>= 24;
    }
    else
    {
      v2 >>= 8;
    }
  }
  sub_260816EB0(v2);
  sub_26087B080();
  sub_26087AFD0();
  return v6;
}

uint64_t sub_2608158D4()
{
  return sub_260813500(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608158DC@<W0>(unsigned char *a1@<X8>)
{
  return sub_260813C48(*(void *)v1, *(void *)(v1 + 8), a1);
}

UniversalHID::Input::Bit0_optional __swiftcall Input.Bit0.init(rawValue:)(Swift::UInt8 rawValue)
{
  OUTLINED_FUNCTION_10_9(v1);
  return result;
}

uint64_t Input.Bit0.rawValue.getter()
{
  return *v0;
}

uint64_t sub_260815908()
{
  return sub_260853158(*v0);
}

uint64_t sub_260815910()
{
  return sub_26085330C();
}

uint64_t sub_260815918(uint64_t a1)
{
  return sub_26085359C(a1, *v1);
}

UniversalHID::Input::Bit0_optional sub_260815920(Swift::UInt8 *a1)
{
  return Input.Bit0.init(rawValue:)(*a1);
}

uint64_t sub_260815928@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = Input.Bit0.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_260815950(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_260866458(*a1, *a2);
}

uint64_t sub_26081595C(uint64_t a1)
{
  return sub_260863684(a1, *v1);
}

uint64_t sub_260815964()
{
  return sub_26081385C(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_26081596C@<W0>(unsigned char *a1@<X8>)
{
  return sub_260813D1C(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_260815978()
{
  OUTLINED_FUNCTION_6_8();
  uint64_t v3 = sub_260815298(v1, 1);
  v0();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_93();
  sub_2607E6724((uint64_t)&unk_270C9E108);
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_93();
  return v3;
}

uint64_t sub_2608159DC()
{
  OUTLINED_FUNCTION_6_8();
  uint64_t v3 = sub_260815298(v1, 2);
  v0();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_93();
  sub_2607E6724((uint64_t)&unk_270C9E268);
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_93();
  return v3;
}

uint64_t sub_260815A40()
{
  OUTLINED_FUNCTION_6_8();
  uint64_t v3 = sub_260815298(v1, 0);
  v0();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_93();
  sub_2607E6724((uint64_t)&unk_270C9E318);
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_93();
  return v3;
}

uint64_t PhysicalCollection.init(content:)@<X0>(uint64_t *a1@<X8>)
{
  return sub_260815ABC(sub_260815A40, a1);
}

uint64_t sub_260815ABC@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_260815AE8()
{
  return sub_260813454(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260815AF0@<W0>(unsigned char *a1@<X8>)
{
  return sub_260813DF0(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_260815AF8()
{
  return sub_2608135AC(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260815B00@<W0>(unsigned char *a1@<X8>)
{
  return sub_260813EC4(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_260815B08()
{
  return sub_2608133A8(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260815B10@<W0>(unsigned char *a1@<X8>)
{
  return sub_260813F98(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t UsagePage.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 5, (uint64_t (*)(char *, uint64_t))sub_2608155C0, a2);
}

unint64_t sub_260815B34()
{
  unint64_t result = qword_26A8B49B8;
  if (!qword_26A8B49B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B49B8);
  }
  return result;
}

uint64_t sub_260815B80()
{
  return sub_2608139B4(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260815B88@<W0>(unsigned char *a1@<X8>)
{
  return sub_26081406C(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t LogicalMinimum.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_260815BB0(a1, a2, a3, 6, a4);
}

uint64_t sub_260815B98()
{
  return sub_2608131A4(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260815BA0@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814140(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t LogicalMaximum.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_260815BB0(a1, a2, a3, 7, a4);
}

uint64_t sub_260815BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v67 = a4;
  uint64_t v69 = a5;
  int64_t v63 = *(void *)(*(void *)(a3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  BOOL v62 = (char *)&v59 - v7;
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_21_6();
  uint64_t v64 = v13;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_21_6();
  uint64_t v66 = v15;
  OUTLINED_FUNCTION_19_0();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v59 - v18;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_21_6();
  uint64_t v65 = v20;
  OUTLINED_FUNCTION_19_0();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  char v24 = (char *)&v59 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v59 - v26;
  MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)&v59 - v28;
  unint64_t v30 = *(void (**)(void))(v9 + 16);
  uint64_t v68 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v30)((char *)&v59 - v28, a1, a2);
  LOBYTE(a1) = OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_3_9();
  v30();
  uint64_t v70 = v9;
  if ((a1 & 1) == 0)
  {
    unint64_t v33 = *(uint64_t (**)(void))(v9 + 8);
    char v38 = v27;
    uint64_t v39 = a2;
    goto LABEL_7;
  }
  uint64_t v31 = OUTLINED_FUNCTION_11_7();
  uint64_t v32 = v9 + 8;
  unint64_t v33 = *(uint64_t (**)(void))(v9 + 8);
  unint64_t v34 = v27;
  uint64_t v35 = v32;
  ((void (*)(char *, uint64_t))v33)(v34, a2);
  if (v31 <= 64) {
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_3_9();
  v30();
  int64_t v72 = 0x8000000000000000;
  if (OUTLINED_FUNCTION_19_2())
  {
    if (OUTLINED_FUNCTION_11_7() < 64)
    {
      uint64_t v36 = OUTLINED_FUNCTION_18_6();
      OUTLINED_FUNCTION_1_13();
      uint64_t result = v33();
      goto LABEL_29;
    }
    sub_2607DDC34();
    uint64_t v59 = v35;
LABEL_24:
    OUTLINED_FUNCTION_15_6();
    char v55 = OUTLINED_FUNCTION_12_8();
    uint64_t v56 = OUTLINED_FUNCTION_14_7();
    ((void (*)(uint64_t))v33)(v56);
    OUTLINED_FUNCTION_1_13();
    uint64_t result = v33();
    if (v55) {
      goto LABEL_36;
    }
LABEL_8:
    uint64_t v40 = OUTLINED_FUNCTION_11_7();
    OUTLINED_FUNCTION_3_9();
    v30();
    if (v40 < 65)
    {
      uint64_t v41 = OUTLINED_FUNCTION_11_7();
      uint64_t v42 = OUTLINED_FUNCTION_7_7();
      ((void (*)(uint64_t))v33)(v42);
      if (v41 != 64 || (OUTLINED_FUNCTION_19_2() & 1) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t))v33)(v19, a2);
    }
    uint64_t v43 = v66;
    OUTLINED_FUNCTION_3_9();
    v30();
    int64_t v72 = 0x7FFFFFFFFFFFFFFFLL;
    char v44 = OUTLINED_FUNCTION_19_2();
    uint64_t v45 = OUTLINED_FUNCTION_11_7();
    if (v44)
    {
      if (v45 > 64)
      {
        sub_2607DDC34();
        OUTLINED_FUNCTION_15_6();
        uint64_t v46 = sub_26087B250();
        OUTLINED_FUNCTION_1_13();
        v33();
LABEL_18:
        OUTLINED_FUNCTION_1_13();
        v33();
        if ((v46 & 1) == 0) {
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_35;
      }
    }
    else if (v45 > 63)
    {
      uint64_t v71 = 0x7FFFFFFFFFFFFFFFLL;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32))(v65, v43, a2);
      sub_2607DDC34();
      OUTLINED_FUNCTION_15_6();
      OUTLINED_FUNCTION_19_7();
      uint64_t v46 = sub_26087B250();
      OUTLINED_FUNCTION_1_13();
      v33();
      goto LABEL_18;
    }
    OUTLINED_FUNCTION_18_6();
    uint64_t v47 = OUTLINED_FUNCTION_7_7();
    ((void (*)(uint64_t))v33)(v47);
LABEL_19:
    uint64_t v48 = OUTLINED_FUNCTION_18_6();
    ((void (*)(char *, uint64_t))v33)(v29, a2);
    LOBYTE(v72) = v67;
    uint64_t v49 = sub_260815298((char *)&v72, v48);
    uint64_t v51 = v50;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v33)(v68, a2);
    uint64_t v52 = v69;
    *uint64_t v69 = v49;
    v52[1] = v51;
    return result;
  }
  uint64_t v59 = v35;
  char v53 = OUTLINED_FUNCTION_19_2();
  uint64_t v54 = OUTLINED_FUNCTION_11_7();
  if ((v53 & 1) == 0)
  {
    if (v54 < 64)
    {
      uint64_t v36 = OUTLINED_FUNCTION_18_6();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v24, a2);
LABEL_29:
      if (v36 < v72) {
        goto LABEL_36;
      }
      goto LABEL_8;
    }
    char v38 = v24;
    uint64_t v39 = a2;
LABEL_7:
    ((void (*)(char *, uint64_t))v33)(v38, v39);
    goto LABEL_8;
  }
  if (v54 > 64)
  {
    sub_2607DDC34();
    goto LABEL_24;
  }
  swift_getAssociatedConformanceWitness();
  sub_26087BBF0();
  sub_26087BBC0();
  LODWORD(v63) = OUTLINED_FUNCTION_12_8();
  uint64_t v57 = OUTLINED_FUNCTION_14_7();
  ((void (*)(uint64_t))v33)(v57);
  uint64_t v46 = (uint64_t)v61;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v61, v24, a2);
  if ((v63 & 1) == 0)
  {
    int64_t v63 = v72;
    uint64_t v58 = OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_1_13();
    uint64_t result = v33();
    if (v58 < v63) {
      goto LABEL_36;
    }
    goto LABEL_8;
  }
LABEL_35:
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v33)(v46, a2);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2608161E8()
{
  return sub_2608130F8(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608161F0@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814214(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t PhysicalMinimum.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 8, sub_260815298, a2);
}

uint64_t sub_260816214()
{
  return sub_2608132FC(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_26081621C@<W0>(unsigned char *a1@<X8>)
{
  return sub_2608142E8(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t PhysicalMaximum.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 9, sub_260815298, a2);
}

uint64_t sub_260816240()
{
  return sub_260813250(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260816248@<W0>(unsigned char *a1@<X8>)
{
  return sub_2608143BC(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t UnitExponent.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 10, sub_260815298, a2);
}

uint64_t sub_26081626C()
{
  return sub_260812EF4(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260816274@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814490(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t Unit.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 11, sub_260815298, a2);
}

uint64_t sub_260816298()
{
  return sub_2608137B0(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608162A0@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814564(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t ReportID.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ReportID.rawValue.modify())()
{
  return nullsub_1;
}

void sub_2608162D4(unsigned char *a1@<X8>)
{
}

uint64_t ReportID.data.getter(unsigned __int8 a1)
{
  char v2 = 13;
  return sub_260815298(&v2, a1);
}

uint64_t sub_260816310()
{
  return sub_260813A60(*v0);
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260816318@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814C04(*v1, a1);
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260816320@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814D64(*v1, a1);
}

uint64_t sub_260816328()
{
  return ReportID.data.getter(*v0);
}

uint64_t ReportCount.init(_:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    char v4 = 14;
    uint64_t result = sub_260815298(&v4, result);
    *a2 = result;
    a2[1] = v3;
  }
  return result;
}

uint64_t sub_260816378()
{
  return sub_260812E48(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260816380@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814638(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t Push.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_2608163B0((uint64_t)&unk_270C9E340, a1);
}

uint64_t sub_260816394()
{
  return sub_260813704(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_26081639C@<W0>(unsigned char *a1@<X8>)
{
  return sub_26081470C(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t Pop.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_2608163B0((uint64_t)&unk_270C9E368, a1);
}

uint64_t sub_2608163B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2607E6724(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2608163D8()
{
  return sub_260813658(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608163E0@<W0>(unsigned char *a1@<X8>)
{
  return sub_2608147E0(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t ReportSize.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2607DCED0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t sub_26081641C()
{
  return sub_260812D9C(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_260816424@<W0>(unsigned char *a1@<X8>)
{
  return sub_2608148B4(*(void *)v1, *(void *)(v1 + 8), a1);
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_26081642C@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814C9C(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t Usage.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 17, (uint64_t (*)(char *, uint64_t))sub_2608155C0, a2);
}

uint64_t sub_260816464(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2608164C4()
{
  return sub_260813908(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608164CC@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814988(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t UsageMinimum.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 18, (uint64_t (*)(char *, uint64_t))sub_2608155C0, a2);
}

uint64_t sub_2608164F0()
{
  return sub_26081304C(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608164F8@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814A5C(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t UsageMaximum.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_26081651C(a1, 19, (uint64_t (*)(char *, uint64_t))sub_2608155C0, a2);
}

uint64_t sub_26081651C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t (*a3)(char *, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  char v7 = a2;
  uint64_t result = a3(&v7, a1);
  *a4 = result;
  a4[1] = v6;
  return result;
}

unint64_t sub_260816564()
{
  unint64_t result = qword_26A8B49D8;
  if (!qword_26A8B49D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B49D8);
  }
  return result;
}

unint64_t sub_2608165B4()
{
  unint64_t result = qword_26A8B49E0;
  if (!qword_26A8B49E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B49E0);
  }
  return result;
}

unint64_t sub_260816604()
{
  unint64_t result = qword_26A8B49E8;
  if (!qword_26A8B49E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B49E8);
  }
  return result;
}

unint64_t sub_260816654()
{
  unint64_t result = qword_26A8B49F0;
  if (!qword_26A8B49F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B49F0);
  }
  return result;
}

unint64_t sub_2608166A4()
{
  unint64_t result = qword_26A8B49F8;
  if (!qword_26A8B49F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B49F8);
  }
  return result;
}

unint64_t sub_2608166F4()
{
  unint64_t result = qword_26A8B4A00;
  if (!qword_26A8B4A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A00);
  }
  return result;
}

unint64_t sub_260816744()
{
  unint64_t result = qword_26A8B4A08;
  if (!qword_26A8B4A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A08);
  }
  return result;
}

unint64_t sub_260816794()
{
  unint64_t result = qword_26A8B4A10;
  if (!qword_26A8B4A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A10);
  }
  return result;
}

unint64_t sub_2608167E4()
{
  unint64_t result = qword_26A8B4A18;
  if (!qword_26A8B4A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A18);
  }
  return result;
}

unint64_t sub_260816834()
{
  unint64_t result = qword_26A8B4A20;
  if (!qword_26A8B4A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A20);
  }
  return result;
}

unint64_t sub_260816884()
{
  unint64_t result = qword_26A8B4A28;
  if (!qword_26A8B4A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A28);
  }
  return result;
}

uint64_t sub_2608168D0()
{
  return sub_260812FA0(*(void *)v0, *(void *)(v0 + 8));
}

UniversalHID::HIDReportDescriptor::ItemTag_optional sub_2608168D8@<W0>(unsigned char *a1@<X8>)
{
  return sub_260814B30(*(void *)v1, *(void *)(v1 + 8), a1);
}

void type metadata accessor for HIDReportDescriptor()
{
}

uint64_t getEnumTagSinglePayload for ScrollGesture.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HIDReportDescriptor.ItemType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260816A4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for HIDReportDescriptor.ItemType()
{
}

uint64_t getEnumTagSinglePayload for HIDReportDescriptor.ItemTag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE5)
  {
    if (a2 + 27 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 27) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 28;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v5 = v6 - 28;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HIDReportDescriptor.ItemTag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260816BD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

void type metadata accessor for HIDReportDescriptor.ItemTag()
{
}

uint64_t dispatch thunk of HIDReportDescriptorItemProtocol.bSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDReportDescriptorItemProtocol.bType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDReportDescriptorItemProtocol.bTag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDReportDescriptorItemProtocol.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void type metadata accessor for Input()
{
}

void type metadata accessor for Input.Bit0()
{
}

void type metadata accessor for Input.Bit1()
{
}

void type metadata accessor for Input.Bit2()
{
}

void type metadata accessor for Input.Bit3()
{
}

void type metadata accessor for Input.Bit4()
{
}

void type metadata accessor for Input.Bit5()
{
}

void type metadata accessor for Input.Bit6()
{
}

unsigned char *_s12UniversalHID5InputV4Bit0Owst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260816D8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Input.Bit8()
{
}

void type metadata accessor for PhysicalCollection()
{
}

void type metadata accessor for ApplicationCollection()
{
}

void type metadata accessor for LogicalCollection()
{
}

void type metadata accessor for UsagePage()
{
}

void type metadata accessor for LogicalMinimum()
{
}

void type metadata accessor for LogicalMaximum()
{
}

void type metadata accessor for PhysicalMinimum()
{
}

void type metadata accessor for PhysicalMaximum()
{
}

void type metadata accessor for UnitExponent()
{
}

void type metadata accessor for Unit()
{
}

void type metadata accessor for ReportID()
{
}

void type metadata accessor for ReportCount()
{
}

void type metadata accessor for Push()
{
}

void type metadata accessor for Pop()
{
}

void type metadata accessor for ReportSize()
{
}

void type metadata accessor for Usage()
{
}

void type metadata accessor for UsageMinimum()
{
}

void type metadata accessor for UsageMaximum()
{
}

void type metadata accessor for HIDReportDescriptor.Builder()
{
}

void type metadata accessor for HIDReportDescriptor.Item()
{
}

uint64_t sub_260816EB0(char a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4A30);
  unint64_t v5 = sub_260816F60();
  LOBYTE(v3[0]) = a1;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  sub_26087AFB0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

unint64_t sub_260816F60()
{
  unint64_t result = qword_26A8B4A38;
  if (!qword_26A8B4A38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A38);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return sub_26087B050();
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return v0;
}

void OUTLINED_FUNCTION_10_9(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return sub_26087B6F0();
}

uint64_t OUTLINED_FUNCTION_12_8()
{
  return sub_26087B250();
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  return sub_26087B670();
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  return sub_26087B6E0();
}

uint64_t static AbsolutePointerReport.initialReportBitCount.getter()
{
  return 152;
}

uint64_t static AbsolutePointerReport.reportID.getter()
{
  return 19;
}

uint64_t sub_2608171B0()
{
  uint64_t result = sub_2608171D4();
  *(void *)&xmmword_26A8B4A40 = result;
  *((void *)&xmmword_26A8B4A40 + 1) = v1;
  return result;
}

uint64_t sub_2608171D4()
{
  LOBYTE(v15) = 17;
  uint64_t v0 = sub_2608155C0((char *)&v15, 1uLL);
  unint64_t v2 = v1;
  LOBYTE(v15) = 3;
  uint64_t v15 = sub_260815298((char *)&v15, 0);
  unint64_t v16 = v3;
  uint64_t v4 = sub_260817334();
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = sub_2607E6724((uint64_t)&unk_270C9E0E0);
  unint64_t v9 = v8;
  sub_26087B050();
  sub_2607DCF28(v7, v9);
  uint64_t v10 = v15;
  unint64_t v11 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087EEC0;
  *(void *)(inited + 56) = &type metadata for Usage;
  *(void *)(inited + 64) = &protocol witness table for Usage;
  *(void *)(inited + 32) = v0;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 96) = &type metadata for PhysicalCollection;
  *(void *)(inited + 104) = &protocol witness table for PhysicalCollection;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  sub_2607DCED0(v0, v2);
  sub_2607DCED0(v10, v11);
  uint64_t v13 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v10, v11);
  sub_2607DCF28(v0, v2);
  return v13;
}

uint64_t sub_260817334()
{
  LOBYTE(v81[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v81, 1uLL);
  unint64_t v56 = v1;
  uint64_t v57 = v0;
  LOBYTE(v81[0]) = 17;
  uint64_t v2 = sub_2608155C0((char *)v81, 0x30uLL);
  unint64_t v70 = v3;
  uint64_t v71 = v2;
  LOBYTE(v81[0]) = 17;
  uint64_t v41 = sub_2608155C0((char *)v81, 0x31uLL);
  unint64_t v69 = v4;
  LOBYTE(v81[0]) = 6;
  uint64_t v40 = sub_260815298((char *)v81, 0);
  unint64_t v68 = v5;
  LOBYTE(v81[0]) = 7;
  uint64_t v37 = sub_260815298((char *)v81, 0xFFFFLL);
  unint64_t v67 = v6;
  LOBYTE(v81[0]) = 12;
  uint64_t v7 = sub_2608155C0((char *)v81, 0x20uLL);
  unint64_t v60 = v8;
  uint64_t v61 = v7;
  LOBYTE(v81[0]) = 14;
  uint64_t v9 = sub_260815298((char *)v81, 2);
  unint64_t v58 = v10;
  uint64_t v59 = v9;
  LOBYTE(v79[0]) = 0;
  LOBYTE(v77[0]) = 1;
  LOBYTE(v75[0]) = 0;
  *(_WORD *)&v80[3] = 0;
  *(_WORD *)&v80[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v79, v77, v75, &v80[4], &v80[3], &v80[2], &v80[1], v81);
  LOBYTE(v79[0]) = 12;
  uint64_t v11 = sub_2608155C0((char *)v79, 8uLL);
  unint64_t v54 = v12;
  uint64_t v55 = v11;
  LOBYTE(v79[0]) = 14;
  uint64_t v74 = sub_260815298((char *)v79, 1);
  unint64_t v53 = v13;
  LOBYTE(v77[0]) = 0;
  LOBYTE(v75[0]) = 1;
  v80[4] = 1;
  *(_WORD *)&v80[2] = 0;
  *(_WORD *)uint64_t v80 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v77, v75, &v80[4], &v80[3], &v80[2], &v80[1], v80, v79);
  LOBYTE(v77[0]) = 12;
  uint64_t v73 = sub_2608155C0((char *)v77, 8uLL);
  unint64_t v45 = v14;
  LOBYTE(v77[0]) = 14;
  uint64_t v72 = sub_260815298((char *)v77, 1);
  unint64_t v44 = v15;
  LOBYTE(v75[0]) = 0;
  *(_WORD *)&v80[3] = 257;
  *(_WORD *)&v80[1] = 0;
  v80[0] = 0;
  char v78 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v75, &v80[4], &v80[3], &v80[2], &v80[1], v80, &v78, v77);
  LOBYTE(v75[0]) = 5;
  uint64_t v16 = sub_2608155C0((char *)v75, 0xFF00uLL);
  unint64_t v65 = v17;
  uint64_t v66 = v16;
  LOBYTE(v75[0]) = 17;
  uint64_t v18 = sub_2608155C0((char *)v75, 0x102uLL);
  unint64_t v63 = v19;
  uint64_t v64 = v18;
  LOBYTE(v75[0]) = 6;
  uint64_t v62 = sub_260815298((char *)v75, 0);
  unint64_t v52 = v20;
  LOBYTE(v75[0]) = 7;
  uint64_t v21 = sub_260815298((char *)v75, 255);
  unint64_t v50 = v22;
  uint64_t v51 = v21;
  LOBYTE(v75[0]) = 12;
  uint64_t v23 = sub_2608155C0((char *)v75, 8uLL);
  unint64_t v48 = v24;
  uint64_t v49 = v23;
  LOBYTE(v75[0]) = 14;
  uint64_t v25 = sub_260815298((char *)v75, 8);
  unint64_t v46 = v26;
  uint64_t v47 = v25;
  *(_WORD *)&v80[3] = 1;
  *(_WORD *)&v80[1] = 0;
  v80[0] = 0;
  char v78 = 0;
  char v76 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v80[4], &v80[3], &v80[2], &v80[1], v80, &v78, &v76, v75);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087EED0;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 19;
  *(void *)(inited + 96) = &type metadata for UsagePage;
  *(void *)(inited + 104) = &protocol witness table for UsagePage;
  *(void *)(inited + 72) = v57;
  *(void *)(inited + 80) = v56;
  *(void *)(inited + 136) = &type metadata for Usage;
  *(void *)(inited + 144) = &protocol witness table for Usage;
  *(void *)(inited + 112) = v71;
  *(void *)(inited + 120) = v70;
  *(void *)(inited + 176) = &type metadata for Usage;
  *(void *)(inited + 184) = &protocol witness table for Usage;
  *(void *)(inited + 152) = v41;
  *(void *)(inited + 160) = v69;
  *(void *)(inited + 216) = &type metadata for LogicalMinimum;
  *(void *)(inited + 224) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 192) = v40;
  *(void *)(inited + 200) = v68;
  *(void *)(inited + 256) = &type metadata for LogicalMaximum;
  *(void *)(inited + 264) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 232) = v37;
  *(void *)(inited + 240) = v67;
  *(void *)(inited + 656) = &type metadata for UsagePage;
  *(void *)(inited + 664) = &protocol witness table for UsagePage;
  *(void *)(inited + 296) = &type metadata for ReportSize;
  *(void *)(inited + 304) = &protocol witness table for ReportSize;
  *(void *)(inited + 696) = &type metadata for Usage;
  *(void *)(inited + 272) = v61;
  *(void *)(inited + 280) = v60;
  *(void *)(inited + 704) = &protocol witness table for Usage;
  *(void *)(inited + 336) = &type metadata for ReportCount;
  *(void *)(inited + 344) = &protocol witness table for ReportCount;
  *(void *)(inited + 312) = v59;
  *(void *)(inited + 320) = v58;
  *(void *)(inited + 736) = &type metadata for LogicalMinimum;
  *(void *)(inited + 744) = &protocol witness table for LogicalMinimum;
  uint64_t v42 = v81[0];
  uint64_t v28 = v81[0];
  unint64_t v43 = v81[1];
  *(void *)(inited + 776) = &type metadata for LogicalMaximum;
  *(void *)(inited + 784) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 376) = &type metadata for Input;
  *(void *)(inited + 384) = &protocol witness table for Input;
  *(void *)(inited + 352) = v28;
  *(void *)(inited + 360) = v43;
  *(void *)(inited + 416) = &type metadata for ReportSize;
  *(void *)(inited + 424) = &protocol witness table for ReportSize;
  *(void *)(inited + 392) = v55;
  *(void *)(inited + 400) = v54;
  *(void *)(inited + 456) = &type metadata for ReportCount;
  *(void *)(inited + 464) = &protocol witness table for ReportCount;
  *(void *)(inited + 432) = v74;
  *(void *)(inited + 440) = v53;
  *(void *)(inited + 536) = &type metadata for ReportSize;
  *(void *)(inited + 544) = &protocol witness table for ReportSize;
  *(void *)(inited + 816) = &type metadata for ReportSize;
  *(void *)(inited + 824) = &protocol witness table for ReportSize;
  uint64_t v38 = v79[0];
  uint64_t v29 = v79[0];
  unint64_t v39 = v79[1];
  *(void *)(inited + 496) = &type metadata for Input;
  *(void *)(inited + 504) = &protocol witness table for Input;
  *(void *)(inited + 472) = v29;
  *(void *)(inited + 480) = v39;
  *(void *)(inited + 512) = v73;
  *(void *)(inited + 520) = v45;
  *(void *)(inited + 576) = &type metadata for ReportCount;
  *(void *)(inited + 584) = &protocol witness table for ReportCount;
  *(void *)(inited + 552) = v72;
  *(void *)(inited + 560) = v44;
  *(void *)(inited + 856) = &type metadata for ReportCount;
  *(void *)(inited + 864) = &protocol witness table for ReportCount;
  uint64_t v35 = v77[0];
  uint64_t v30 = v77[0];
  unint64_t v36 = v77[1];
  *(void *)(inited + 616) = &type metadata for Input;
  *(void *)(inited + 624) = &protocol witness table for Input;
  *(void *)(inited + 592) = v30;
  *(void *)(inited + 600) = v36;
  *(void *)(inited + 632) = v66;
  *(void *)(inited + 640) = v65;
  *(void *)(inited + 672) = v64;
  *(void *)(inited + 680) = v63;
  *(void *)(inited + 712) = v62;
  *(void *)(inited + 720) = v52;
  *(void *)(inited + 752) = v51;
  *(void *)(inited + 760) = v50;
  *(void *)(inited + 792) = v49;
  *(void *)(inited + 800) = v48;
  *(void *)(inited + 832) = v47;
  *(void *)(inited + 840) = v46;
  *(void *)(inited + 896) = &type metadata for Input;
  *(void *)(inited + 904) = &protocol witness table for Input;
  uint64_t v32 = v75[0];
  unint64_t v33 = v75[1];
  *(void *)(inited + 872) = v75[0];
  *(void *)(inited + 880) = v33;
  sub_2607DCED0(v57, v56);
  sub_2607DCED0(v71, v70);
  sub_2607DCED0(v41, v69);
  sub_2607DCED0(v40, v68);
  sub_2607DCED0(v37, v67);
  sub_2607DCED0(v61, v60);
  sub_2607DCED0(v59, v58);
  sub_2607DCED0(v42, v43);
  sub_2607DCED0(v55, v54);
  sub_2607DCED0(v74, v53);
  sub_2607DCED0(v38, v39);
  sub_2607DCED0(v73, v45);
  sub_2607DCED0(v72, v44);
  sub_2607DCED0(v35, v36);
  sub_2607DCED0(v66, v65);
  sub_2607DCED0(v64, v63);
  sub_2607DCED0(v62, v52);
  sub_2607DCED0(v51, v50);
  sub_2607DCED0(v49, v48);
  sub_2607DCED0(v47, v46);
  sub_2607DCED0(v32, v33);
  uint64_t v34 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v32, v33);
  sub_2607DCF28(v47, v46);
  sub_2607DCF28(v49, v48);
  sub_2607DCF28(v51, v50);
  sub_2607DCF28(v62, v52);
  sub_2607DCF28(v64, v63);
  sub_2607DCF28(v66, v65);
  sub_2607DCF28(v35, v36);
  sub_2607DCF28(v72, v44);
  sub_2607DCF28(v73, v45);
  sub_2607DCF28(v38, v39);
  sub_2607DCF28(v74, v53);
  sub_2607DCF28(v55, v54);
  sub_2607DCF28(v42, v43);
  sub_2607DCF28(v59, v58);
  sub_2607DCF28(v61, v60);
  sub_2607DCF28(v37, v67);
  sub_2607DCF28(v40, v68);
  sub_2607DCF28(v41, v69);
  sub_2607DCF28(v71, v70);
  sub_2607DCF28(v57, v56);
  return v34;
}

uint64_t static AbsolutePointerReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44D0 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B4A40;
  *a1 = xmmword_26A8B4A40;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return 152;
}

uint64_t sub_260817A90()
{
  return 19;
}

uint64_t AbsolutePointerReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t AbsolutePointerReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*AbsolutePointerReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_260817B24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AbsolutePointerReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_260817B4C()
{
  return sub_260875884(*(void *)v0, *(void *)(v0 + 8));
}

#error "260817B6C: call analysis failed (funcsize=10)"

void sub_260817B7C(void *a1@<X0>, double *a2@<X8>)
{
  *a2 = AbsolutePointerReport.x.getter(*a1, a1[1]);
}

void AbsolutePointerReport.x.setter(double a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0) {
    unint64_t v1 = 0;
  }
  else {
    unint64_t v1 = v1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 8);
}

#error "260817BF8: call analysis failed (funcsize=17)"

void sub_260817C28(double *a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(*a1);
  if ((v1 & 0x100000000) != 0) {
    unint64_t v1 = 0;
  }
  else {
    unint64_t v1 = v1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 8);
}

#error "260817C78: call analysis failed (funcsize=10)"

void sub_260817C88(void *a1@<X0>, double *a2@<X8>)
{
  *a2 = AbsolutePointerReport.y.getter(*a1, a1[1]);
}

void AbsolutePointerReport.y.setter(double a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0) {
    unint64_t v1 = 0;
  }
  else {
    unint64_t v1 = v1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 40);
}

#error "260817D04: call analysis failed (funcsize=17)"

void sub_260817D34(double *a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(*a1);
  if ((v1 & 0x100000000) != 0) {
    unint64_t v1 = 0;
  }
  else {
    unint64_t v1 = v1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 40);
}

unint64_t AbsolutePointerReport.buttonMask.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

unint64_t sub_260817D7C@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = AbsolutePointerReport.buttonMask.getter();
  *a1 = result;
  return result;
}

uint64_t AbsolutePointerReport.buttonMask.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 72);
}

uint64_t (*AbsolutePointerReport.buttonMask.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_260817E04;
}

uint64_t sub_260817E04(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 72);
}

unint64_t AbsolutePointerReport.modifierMask.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

unint64_t sub_260817E40@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = AbsolutePointerReport.modifierMask.getter();
  *a1 = result;
  return result;
}

uint64_t AbsolutePointerReport.modifierMask.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 80);
}

uint64_t (*AbsolutePointerReport.modifierMask.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_260817EC8;
}

uint64_t sub_260817EC8(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 80);
}

#error "260817F1C: call analysis failed (funcsize=27)"

uint64_t AbsolutePointerReport.modifiers.getter()
{
  unsigned __int8 v0 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return KeyboardModifierMask.keyboardUsages()(v0);
}

uint64_t sub_260817F94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AbsolutePointerReport.modifiers.getter();
  *a1 = result;
  return result;
}

uint64_t sub_260817FC4()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return AbsolutePointerReport.modifiers.setter(v0);
}

uint64_t AbsolutePointerReport.modifiers.setter(uint64_t a1)
{
  uint64_t v1 = KeyboardModifierMask.init(usages:)(a1);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, 80);
}

uint64_t (*AbsolutePointerReport.modifiers.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_0_11(a1);
  unsigned __int8 v2 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *uint64_t v1 = KeyboardModifierMask.keyboardUsages()(v2);
  return sub_260818068;
}

uint64_t sub_260818068(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = KeyboardModifierMask.init(usages:)(v2);
    _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v3, 80);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = KeyboardModifierMask.init(usages:)(*a1);
    return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v5, 80);
  }
}

void sub_2608180D4(void *a1, void *a2)
{
  static AbsolutePointerReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t AbsolutePointerReport.remoteTimestamp.getter(uint64_t a1, uint64_t a2)
{
  return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(88, a1, a2);
}

uint64_t sub_260818110@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = AbsolutePointerReport.remoteTimestamp.getter(*a1, a1[1]);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_260818144(uint64_t a1)
{
  return AbsolutePointerReport.remoteTimestamp.setter(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t AbsolutePointerReport.remoteTimestamp.setter(uint64_t a1, char a2)
{
  if (a2) {
    a1 = 0;
  }
  return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(a1, 88);
}

uint64_t (*AbsolutePointerReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(88, *v1, v1[1]);
  *(unsigned char *)(a1 + 8) = 0;
  return sub_2608181D8;
}

uint64_t sub_2608181D8(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 8)) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = *a1;
  }
  return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v1, 88);
}

uint64_t sub_260818210()
{
  return AbsolutePointerReport.remoteTimestamp.getter(*v0, v0[1]);
}

uint64_t sub_260818230(uint64_t a1, char a2)
{
  return AbsolutePointerReport.remoteTimestamp.setter(a1, a2 & 1);
}

uint64_t (*sub_260818238(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = AbsolutePointerReport.remoteTimestamp.getter(*v1, v1[1]);
  *(unsigned char *)(a1 + 8) = 0;
  return sub_260818288;
}

uint64_t sub_260818288(uint64_t a1)
{
  return AbsolutePointerReport.remoteTimestamp.setter(*(void *)a1, *(unsigned char *)(a1 + 8));
}

void sub_2608182BC(double *a1)
{
}

void sub_2608182E8(double *a1)
{
}

uint64_t sub_260818314(unsigned __int8 *a1)
{
  return AbsolutePointerReport.buttonMask.setter(*a1);
}

uint64_t sub_260818340(unsigned __int8 *a1)
{
  return AbsolutePointerReport.modifierMask.setter(*a1);
}

ValueMetadata *type metadata accessor for AbsolutePointerReport()
{
  return &type metadata for AbsolutePointerReport;
}

uint64_t OUTLINED_FUNCTION_0_11(uint64_t result)
{
  *(void *)(result + 8) = v1;
  return result;
}

double OUTLINED_FUNCTION_1_14(int a1)
{
  double result = (double)a1 * 0.0000152587891;
  *uint64_t v1 = result;
  return result;
}

double OUTLINED_FUNCTION_2_12(int a1)
{
  return (double)a1 * 0.0000152587891;
}

UniversalHID::HIDPoint __swiftcall HIDPoint.init()()
{
  double v0 = 0.0;
  double v1 = 0.0;
  double v2 = 0.0;
  result.z = v2;
  result.y = v1;
  result.x = v0;
  return result;
}

void HIDPoint.x.setter(double a1)
{
  *double v1 = a1;
}

uint64_t (*HIDPoint.x.modify())()
{
  return nullsub_1;
}

double HIDPoint.y.getter(double a1, double a2)
{
  return a2;
}

void HIDPoint.y.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDPoint.y.modify())()
{
  return nullsub_1;
}

double HIDPoint.z.getter(double a1, double a2, double a3)
{
  return a3;
}

void HIDPoint.z.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*HIDPoint.z.modify())()
{
  return nullsub_1;
}

BOOL static HIDPoint.== infix(_:_:)(__n128 a1, double a2, double a3, __n128 a4, double a5, double a6)
{
  uint64_t v6 = 0;
  a1.n128_f64[1] = a2;
  a4.n128_f64[1] = a5;
LABEL_2:
  v11[0] = a1;
  v11[1] = *(unint64_t *)&a3;
  uint64_t v7 = 8 * (v6 & 3);
  double v8 = *(double *)((char *)v11 + v7);
  v10[0] = a4;
  v10[1] = *(unint64_t *)&a6;
  BOOL result = v8 == *(double *)((char *)v10 + v7);
  while (v6 != 2)
  {
    ++v6;
    if (result) {
      goto LABEL_2;
    }
    BOOL result = 0;
  }
  return result;
}

BOOL sub_2608184F4(uint64_t a1, uint64_t a2, __n128 a3, double a4, double a5, __n128 a6)
{
  a3.n128_u64[0] = *(void *)a1;
  a6.n128_u64[0] = *(void *)a2;
  return static HIDPoint.== infix(_:_:)(a3, *(double *)(a1 + 8), *(double *)(a1 + 16), a6, *(double *)(a2 + 8), *(double *)(a2 + 16));
}

uint64_t HIDPoint.hash(into:)()
{
  return sub_260818518();
}

uint64_t sub_260818518()
{
  return sub_26087BCF0();
}

uint64_t HIDPoint.hashValue.getter()
{
  return sub_26087BD00();
}

uint64_t sub_2608185D8()
{
  return HIDPoint.hashValue.getter();
}

uint64_t sub_2608185E4()
{
  return HIDPoint.hash(into:)();
}

uint64_t sub_2608185F0()
{
  return sub_26087BD00();
}

uint64_t static HIDPoint.+= infix(_:_:)(double *a1, double a2, double a3, double a4)
{
  double v4 = *a1 + a2;
  double v5 = a1[1] + a3;
  double v6 = a1[2] + a4;
  *a1 = v4;
  a1[1] = v5;
  return OUTLINED_FUNCTION_0_12((uint64_t)a1, v4, v5, v6);
}

uint64_t static HIDPoint.-= infix(_:_:)(double *a1, double a2, double a3, double a4)
{
  double v4 = *a1 - a2;
  double v5 = a1[1] - a3;
  double v6 = a1[2] - a4;
  *a1 = v4;
  a1[1] = v5;
  return OUTLINED_FUNCTION_0_12((uint64_t)a1, v4, v5, v6);
}

uint64_t static HIDPoint.*= infix(_:_:)(float64x2_t *a1, float64x2_t a2, double a3, double a4)
{
  double v4 = a1[1].f64[0] * a4;
  a2.f64[1] = a3;
  float64x2_t v5 = vmulq_f64(*a1, a2);
  *a1 = v5;
  return OUTLINED_FUNCTION_0_12((uint64_t)a1, v5.f64[0], a3, v4);
}

uint64_t static HIDPoint./= infix(_:_:)(float64x2_t *a1, float64x2_t a2, double a3, double a4)
{
  double v4 = a1[1].f64[0] / a4;
  a2.f64[1] = a3;
  float64x2_t v5 = vdivq_f64(*a1, a2);
  *a1 = v5;
  return OUTLINED_FUNCTION_0_12((uint64_t)a1, v5.f64[0], a3, v4);
}

float64x2_t static HIDPoint./= infix(_:_:)(float64x2_t *a1, double a2)
{
  float64_t v2 = a1[1].f64[0] / a2;
  float64x2_t result = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0));
  *a1 = result;
  a1[1].f64[0] = v2;
  return result;
}

float64_t static HIDPoint./= infix(_:_:)(float64x2_t *a1, uint64_t a2)
{
  float64_t result = a1[1].f64[0] / (double)a2;
  *a1 = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)a2), 0));
  a1[1].f64[0] = result;
  return result;
}

double static HIDPoint.+ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 + a4;
}

double static HIDPoint.- infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 - a4;
}

double static HIDPoint.* infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 * a4;
}

{
  return a1 * a4;
}

double static HIDPoint./ infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a1 / a4;
}

uint64_t HIDPoint.description.getter()
{
  return sub_26087BC10();
}

unint64_t sub_260818798()
{
  unint64_t result = qword_26A8B4A58;
  if (!qword_26A8B4A58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4A50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A58);
  }
  return result;
}

unint64_t sub_2608187F0()
{
  unint64_t result = qword_26A8B4A60;
  if (!qword_26A8B4A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A60);
  }
  return result;
}

uint64_t sub_26081883C()
{
  return HIDPoint.description.getter();
}

uint64_t getEnumTagSinglePayload for HIDPoint(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HIDPoint(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HIDPoint()
{
  return &type metadata for HIDPoint;
}

uint64_t OUTLINED_FUNCTION_0_12(uint64_t result, double a2, double a3, double a4)
{
  *(double *)(result + 16) = a4;
  return result;
}

uint64_t dispatch thunk of HIDServiceProtocol.properties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDServiceProtocol.serviceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDServiceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDServiceProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t static ConsumerReport.initialReportBitCount.getter()
{
  return 72;
}

uint64_t static ConsumerReport.reportID.getter()
{
  return 2;
}

uint64_t sub_260818910()
{
  uint64_t result = sub_260818934();
  *(void *)&xmmword_26A8B4A68 = result;
  *((void *)&xmmword_26A8B4A68 + 1) = v1;
  return result;
}

uint64_t sub_260818934()
{
  LOBYTE(v59[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v59, 0xCuLL);
  unint64_t v42 = v1;
  uint64_t v43 = v0;
  LOBYTE(v59[0]) = 18;
  uint64_t v49 = sub_2608155C0((char *)v59, 1uLL);
  unint64_t v3 = v2;
  LOBYTE(v59[0]) = 19;
  uint64_t v4 = sub_2608155C0((char *)v59, 0x514uLL);
  unint64_t v6 = v5;
  LOBYTE(v59[0]) = 14;
  uint64_t v7 = sub_260815298((char *)v59, 4);
  unint64_t v47 = v8;
  LOBYTE(v59[0]) = 12;
  uint64_t v48 = sub_2608155C0((char *)v59, 0x10uLL);
  unint64_t v46 = v9;
  LOBYTE(v59[0]) = 6;
  uint64_t v10 = sub_260815298((char *)v59, 1);
  unint64_t v44 = v11;
  uint64_t v45 = v10;
  LOBYTE(v59[0]) = 7;
  uint64_t v12 = sub_260815298((char *)v59, 1300);
  unint64_t v39 = v13;
  uint64_t v40 = v12;
  LOBYTE(v54[0]) = 0;
  __int16 v58 = 0;
  __int16 v57 = 0;
  __int16 v56 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v54, (unsigned char *)&v58 + 1, &v58, (unsigned char *)&v57 + 1, &v57, (unsigned char *)&v56 + 1, &v56, v59);
  LOBYTE(v54[0]) = 5;
  uint64_t v32 = sub_2608155C0((char *)v54, 0xFF00uLL);
  unint64_t v53 = v14;
  LOBYTE(v54[0]) = 17;
  uint64_t v15 = sub_2608155C0((char *)v54, 0x102uLL);
  unint64_t v51 = v16;
  uint64_t v52 = v15;
  LOBYTE(v54[0]) = 6;
  uint64_t v41 = sub_260815298((char *)v54, 0);
  unint64_t v50 = v17;
  LOBYTE(v54[0]) = 7;
  uint64_t v18 = sub_260815298((char *)v54, 255);
  unint64_t v37 = v19;
  uint64_t v38 = v18;
  LOBYTE(v54[0]) = 12;
  uint64_t v20 = sub_2608155C0((char *)v54, 8uLL);
  unint64_t v35 = v21;
  uint64_t v36 = v20;
  LOBYTE(v54[0]) = 14;
  uint64_t v22 = sub_260815298((char *)v54, 8);
  unint64_t v33 = v23;
  uint64_t v34 = v22;
  __int16 v58 = 1;
  __int16 v57 = 0;
  __int16 v56 = 0;
  char v55 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v58 + 1, &v58, (unsigned char *)&v57 + 1, &v57, (unsigned char *)&v56 + 1, &v56, &v55, v54);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D530;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 96) = &type metadata for UsagePage;
  *(void *)(inited + 104) = &protocol witness table for UsagePage;
  *(void *)(inited + 72) = v43;
  *(void *)(inited + 80) = v42;
  *(void *)(inited + 136) = &type metadata for UsageMinimum;
  *(void *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(void *)(inited + 112) = v49;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 176) = &type metadata for UsageMaximum;
  *(void *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(void *)(inited + 152) = v4;
  *(void *)(inited + 160) = v6;
  *(void *)(inited + 216) = &type metadata for ReportCount;
  *(void *)(inited + 224) = &protocol witness table for ReportCount;
  *(void *)(inited + 416) = &type metadata for UsagePage;
  *(void *)(inited + 424) = &protocol witness table for UsagePage;
  *(void *)(inited + 456) = &type metadata for Usage;
  *(void *)(inited + 192) = v7;
  *(void *)(inited + 200) = v47;
  *(void *)(inited + 464) = &protocol witness table for Usage;
  *(void *)(inited + 296) = &type metadata for LogicalMinimum;
  *(void *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 496) = &type metadata for LogicalMinimum;
  *(void *)(inited + 504) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 536) = &type metadata for LogicalMaximum;
  *(void *)(inited + 336) = &type metadata for LogicalMaximum;
  *(void *)(inited + 344) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 544) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 256) = &type metadata for ReportSize;
  *(void *)(inited + 264) = &protocol witness table for ReportSize;
  *(void *)(inited + 232) = v48;
  *(void *)(inited + 240) = v46;
  *(void *)(inited + 272) = v45;
  *(void *)(inited + 280) = v44;
  *(void *)(inited + 312) = v40;
  *(void *)(inited + 320) = v39;
  *(void *)(inited + 576) = &type metadata for ReportSize;
  *(void *)(inited + 584) = &protocol witness table for ReportSize;
  uint64_t v30 = v59[0];
  uint64_t v25 = v59[0];
  unint64_t v31 = v59[1];
  *(void *)(inited + 616) = &type metadata for ReportCount;
  *(void *)(inited + 624) = &protocol witness table for ReportCount;
  *(void *)(inited + 376) = &type metadata for Input;
  *(void *)(inited + 384) = &protocol witness table for Input;
  *(void *)(inited + 352) = v25;
  *(void *)(inited + 360) = v31;
  *(void *)(inited + 392) = v32;
  *(void *)(inited + 400) = v53;
  *(void *)(inited + 432) = v52;
  *(void *)(inited + 440) = v51;
  *(void *)(inited + 472) = v41;
  *(void *)(inited + 480) = v50;
  *(void *)(inited + 512) = v38;
  *(void *)(inited + 520) = v37;
  *(void *)(inited + 552) = v36;
  *(void *)(inited + 560) = v35;
  *(void *)(inited + 592) = v34;
  *(void *)(inited + 600) = v33;
  *(void *)(inited + 656) = &type metadata for Input;
  *(void *)(inited + 664) = &protocol witness table for Input;
  uint64_t v27 = v54[0];
  unint64_t v28 = v54[1];
  *(void *)(inited + 632) = v54[0];
  *(void *)(inited + 640) = v28;
  sub_2607DCED0(v43, v42);
  sub_2607DCED0(v49, v3);
  sub_2607DCED0(v4, v6);
  sub_2607DCED0(v7, v47);
  sub_2607DCED0(v48, v46);
  sub_2607DCED0(v45, v44);
  sub_2607DCED0(v40, v39);
  sub_2607DCED0(v30, v31);
  sub_2607DCED0(v32, v53);
  sub_2607DCED0(v52, v51);
  sub_2607DCED0(v41, v50);
  sub_2607DCED0(v38, v37);
  sub_2607DCED0(v36, v35);
  sub_2607DCED0(v34, v33);
  sub_2607DCED0(v27, v28);
  uint64_t v29 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v27, v28);
  sub_2607DCF28(v34, v33);
  sub_2607DCF28(v36, v35);
  sub_2607DCF28(v38, v37);
  sub_2607DCF28(v41, v50);
  sub_2607DCF28(v52, v51);
  sub_2607DCF28(v32, v53);
  sub_2607DCF28(v30, v31);
  sub_2607DCF28(v40, v39);
  sub_2607DCF28(v45, v44);
  sub_2607DCF28(v48, v46);
  sub_2607DCF28(v7, v47);
  sub_2607DCF28(v4, v6);
  sub_2607DCF28(v49, v3);
  sub_2607DCF28(v43, v42);
  return v29;
}

uint64_t static ConsumerReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B44D8 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B4A68;
  *a1 = xmmword_26A8B4A68;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t sub_260818EEC()
{
  return 72;
}

#error "260818F60: call analysis failed (funcsize=74)"

uint64_t ConsumerReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2607DCED0(a1, a2);
}

#error "260819090: call analysis failed (funcsize=46)"

uint64_t sub_2608190EC()
{
  return ConsumerReport.description.getter(*v0, v0[1]);
}

uint64_t ConsumerReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t ConsumerReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ConsumerReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_260819180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ConsumerReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2608191A8()
{
  uint64_t v0 = ConsumerReport.Iterator.next()();
  return OUTLINED_FUNCTION_2_13(v0);
}

uint64_t sub_2608191D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  ConsumerReport.makeIterator()(v2, v3, a1);
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_260819214()
{
  return sub_260835A70();
}

uint64_t sub_26081921C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26083E314(a1, a2, a3, *v3, v3[1]);
}

#error "26081926C: call analysis failed (funcsize=49)"

#error "260819324: call analysis failed (funcsize=39)"

uint64_t sub_260819384(__int16 *a1)
{
  return sub_2608536EC(*a1, *v1, v1[1]);
}

uint64_t sub_260819390()
{
  return sub_2608193D8();
}

uint64_t sub_2608193A8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_260819548(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_26082CF04);
}

uint64_t sub_2608193C0()
{
  return sub_2608193D8();
}

uint64_t sub_2608193D8()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = OUTLINED_FUNCTION_1_8();
  v4(v3);
  sub_2607DCF28(v2, v1);
  uint64_t v5 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v5, v6);
}

uint64_t sub_26081943C(uint64_t a1, unsigned __int16 *a2)
{
  return sub_260876B6C(a1, *a2);
}

uint64_t sub_260819444(unsigned __int16 *a1)
{
  uint64_t v1 = ConsumerReport.remove(_:)(*a1);
  return OUTLINED_FUNCTION_2_13(v1);
}

uint64_t sub_260819470(unsigned __int16 *a1)
{
  uint64_t v1 = ConsumerReport.update(with:)(*a1);
  return OUTLINED_FUNCTION_2_13(v1);
}

uint64_t sub_26081949C()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  sub_260835EA8(v0);
  uint64_t v1 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v1, v2);
}

uint64_t sub_2608194E0(void *a1)
{
  return sub_26082D814(*a1, a1[1]);
}

uint64_t sub_2608194EC()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  sub_26082DF18(v0);
  uint64_t v1 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v1, v2);
}

uint64_t sub_260819530(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_260819548(a1, a2, a3, (void (*)(void, void, uint64_t, unint64_t))sub_260875E20);
}

uint64_t sub_260819548(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, uint64_t, unint64_t))
{
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  a4(*a1, a1[1], v5, v6);
  return sub_2607DCF28(v5, v6);
}

void sub_26081959C()
{
}

uint64_t sub_2608195AC(uint64_t *a1)
{
  return sub_260876148(*a1, a1[1], *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_2608195BC()
{
  return sub_26082C868();
}

uint64_t sub_2608195CC()
{
  return sub_2607E841C();
}

void sub_2608195D4()
{
  sub_260811F4C();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_260819658(void *a1)
{
  return sub_26082CB00(*a1, a1[1]);
}

void sub_260819664(void *a1, void *a2)
{
  static ConsumerReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t ConsumerReport.remoteTimestamp.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x26081972CLL);
      }
      if (v4 >= 17) {
        return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(72, a1, a2);
      }
      else {
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_26081973C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = ConsumerReport.remoteTimestamp.getter(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_260819774()
{
}

void ConsumerReport.remoteTimestamp.setter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)v0[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v5)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x26081982CLL);
      }
      if (v4 >= 17)
      {
        if (v3) {
          uint64_t v2 = 0;
        }
        _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v2, 72);
      }
      return;
  }
}

void (*ConsumerReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *v1;
  char v4 = 1;
  uint64_t v5 = 0;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_10;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v9)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x260819910);
      }
      if (v8 >= 17)
      {
        uint64_t v5 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(72, v6, v7);
        char v4 = 0;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 1;
      }
LABEL_10:
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = v4;
      return sub_260819920;
  }
}

void sub_260819920(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  int v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = (uint64_t *)a1[2];
  if (a2)
  {
    ConsumerReport.remoteTimestamp.setter();
  }
  else
  {
    uint64_t v7 = *v6;
    switch((unint64_t)v6[1] >> 62)
    {
      case 1uLL:
        BOOL v8 = __OFSUB__(HIDWORD(v7), v7);
        uint64_t v9 = (HIDWORD(v7) - v7);
        if (v8) {
          goto LABEL_10;
        }
        goto LABEL_8;
      case 2uLL:
        uint64_t v12 = v7 + 16;
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v12 + 8);
        BOOL v8 = __OFSUB__(v11, v10);
        uint64_t v9 = v11 - v10;
        if (!v8) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        return;
      default:
LABEL_8:
        OUTLINED_FUNCTION_2_1();
        if (!v13)
        {
          __break(1u);
LABEL_10:
          __break(1u);
LABEL_11:
          __break(1u);
        }
        if (v9 >= 17)
        {
          if (v5) {
            uint64_t v4 = 0;
          }
          _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v4, 72);
        }
        break;
    }
  }
}

uint64_t sub_2608199E8()
{
  return ConsumerReport.remoteTimestamp.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_260819A08()
{
}

void (*sub_260819A10(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = ConsumerReport.remoteTimestamp.getter(*(void *)v1, *(void *)(v1 + 8));
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_260819A64;
}

void sub_260819A64()
{
}

unint64_t sub_260819A98()
{
  unint64_t result = qword_26A8B4A78;
  if (!qword_26A8B4A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A78);
  }
  return result;
}

unint64_t sub_260819AE8()
{
  unint64_t result = qword_26A8B4A80;
  if (!qword_26A8B4A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A80);
  }
  return result;
}

unint64_t sub_260819B38()
{
  unint64_t result = qword_26A8B4A88;
  if (!qword_26A8B4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4A88);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConsumerReport()
{
  return &type metadata for ConsumerReport;
}

ValueMetadata *type metadata accessor for ConsumerReport.Iterator()
{
  return &type metadata for ConsumerReport.Iterator;
}

uint64_t OUTLINED_FUNCTION_2_13(uint64_t result)
{
  *(_WORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t static AppleVendorKeyboardUsage.usagePage.getter()
{
  return 65281;
}

uint64_t static AppleVendorKeyboardUsage.usageMinimum.getter()
{
  return 1;
}

uint64_t static AppleVendorKeyboardUsage.usageMaximum.getter()
{
  return 48;
}

uint64_t AppleVendorKeyboardUsage.init(rawValue:)(unsigned __int8 a1)
{
  int v1 = a1;
  if (a1 - 49 >= 0xFFFFFFD0 && a1 <= 0x21u && ((1 << a1) & 0x30003001ELL) != 0)
  {
    int v2 = 0;
  }
  else
  {
    int v1 = 0;
    int v2 = 1;
  }
  return v1 | (v2 << 8);
}

uint64_t sub_260819C2C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = AppleVendorKeyboardUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t static AppleVendorKeyboardUsage.spotlight.getter()
{
  return 1;
}

uint64_t static AppleVendorKeyboardUsage.dashboard.getter()
{
  return 2;
}

uint64_t static AppleVendorKeyboardUsage.function.getter()
{
  return 3;
}

uint64_t static AppleVendorKeyboardUsage.launchpad.getter()
{
  return 4;
}

uint64_t static AppleVendorKeyboardUsage.reserved.getter()
{
  return 10;
}

uint64_t static AppleVendorKeyboardUsage.capsLockDelayEnable.getter()
{
  return 11;
}

uint64_t static AppleVendorKeyboardUsage.powerState.getter()
{
  return 12;
}

uint64_t static AppleVendorKeyboardUsage.exposeAll.getter()
{
  return 16;
}

uint64_t static AppleVendorKeyboardUsage.exposeDesktop.getter()
{
  return 17;
}

uint64_t static AppleVendorKeyboardUsage.brightnessUp.getter()
{
  return 32;
}

uint64_t static AppleVendorKeyboardUsage.brightnessDown.getter()
{
  return 33;
}

uint64_t static AppleVendorKeyboardUsage.capsLockState.getter()
{
  return 34;
}

uint64_t static AppleVendorKeyboardUsage.language.getter()
{
  return 48;
}

uint64_t static AppleVendorKeyboardUsage.willReset.getter()
{
  return 64;
}

uint64_t static AppleVendorKeyboardUsage.reset.getter()
{
  return 65;
}

uint64_t static AppleVendorKeyboardUsage.willFactoryReset.getter()
{
  return 66;
}

uint64_t static AppleVendorKeyboardUsage.accessibilityToggle.getter()
{
  return 67;
}

void sub_260819CE8()
{
}

uint64_t static AppleVendorKeyboardUsage.longPress.getter()
{
  if (qword_26A8B44E0 != -1) {
    swift_once();
  }
  return byte_26A8B4A90;
}

uint64_t static AppleVendorKeyboardUsage.allCases.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4A98);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_26087F290;
  *(_OWORD *)(v0 + 32) = xmmword_26087F2A0;
  *(unsigned char *)(v0 + 48) = 67;
  if (qword_26A8B44E0 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 49) = byte_26A8B4A90;
  return v0;
}

unint64_t sub_260819E20(uint64_t a1)
{
  unint64_t result = sub_260819E48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_260819E48()
{
  unint64_t result = qword_26A8B4AA0;
  if (!qword_26A8B4AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4AA0);
  }
  return result;
}

unint64_t sub_260819E98()
{
  unint64_t result = qword_26A8B4AA8;
  if (!qword_26A8B4AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4AA8);
  }
  return result;
}

unint64_t sub_260819EE8()
{
  unint64_t result = qword_26A8B4AB0;
  if (!qword_26A8B4AB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4AB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4AB0);
  }
  return result;
}

uint64_t sub_260819F3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static AppleVendorKeyboardUsage.allCases.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for AppleVendorKeyboardUsage()
{
  return &type metadata for AppleVendorKeyboardUsage;
}

uint64_t static ConsumerUsage.usagePage.getter()
{
  return 12;
}

uint64_t static ConsumerUsage.usageMinimum.getter()
{
  return 1;
}

uint64_t static ConsumerUsage.usageMaximum.getter()
{
  return 1300;
}

uint64_t ConsumerUsage.init(rawValue:)(unsigned __int16 a1)
{
  int v1 = a1;
  if (a1 - 1301 < 0xFFFFFAEC) {
    int v1 = 0;
  }
  return v1 | ((a1 - 1301 < 0xFFFFFAEC) << 16);
}

unint64_t sub_260819FB4(uint64_t a1)
{
  unint64_t result = sub_260819FDC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_260819FDC()
{
  unint64_t result = qword_26A8B4AC0;
  if (!qword_26A8B4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4AC0);
  }
  return result;
}

uint64_t sub_26081A028@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = ConsumerUsage.init(rawValue:)(*a1);
  *(_WORD *)a2 = result;
  *(unsigned char *)(a2 + 2) = BYTE2(result) & 1;
  return result;
}

void sub_26081A05C(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_26081A06C()
{
  unint64_t result = qword_26A8B4AC8;
  if (!qword_26A8B4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4AC8);
  }
  return result;
}

uint64_t sub_26081A0B8()
{
  return sub_260853194(*v0);
}

uint64_t sub_26081A0C0()
{
  return sub_2608533F0();
}

uint64_t sub_26081A0C8(uint64_t a1)
{
  return sub_260853418(a1, *v1);
}

BOOL sub_26081A0D0(__int16 *a1, __int16 *a2)
{
  return sub_260862CB8(*a1, *a2);
}

uint64_t sub_26081A0DC()
{
  return 1300;
}

ValueMetadata *type metadata accessor for ConsumerUsage()
{
  return &type metadata for ConsumerUsage;
}

uint64_t PointerGesture.__allocating_init(logger:useRemoteAcceleration:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  PointerGesture.init(logger:useRemoteAcceleration:)(a1, a2);
  return v4;
}

UniversalHID::PointerButtonMode __swiftcall PointerButtonMode.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3) {
    char v2 = 2;
  }
  else {
    char v2 = rawValue;
  }
  *int v1 = v2;
  return (char)rawValue;
}

uint64_t PointerButtonMode.rawValue.getter()
{
  return *v0;
}

uint64_t sub_26081A160()
{
  return sub_260853198();
}

uint64_t sub_26081A168()
{
  return _s12UniversalHID13HIDDeviceTypeO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_26081A170()
{
  return sub_2608534A8();
}

uint64_t sub_26081A178(Swift::Int *a1)
{
  return PointerButtonMode.init(rawValue:)(*a1);
}

uint64_t sub_26081A180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PointerButtonMode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t static PointerEvent.dispatch(report:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_26087C870;
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  uint64_t v1 = mach_absolute_time();
  uint64_t v2 = OUTLINED_FUNCTION_3_10(v1);
  *(void *)(v0 + 56) = &type metadata for PointerEvent;
  *(void *)(v0 + 64) = &protocol witness table for PointerEvent;
  *(void *)(v0 + 32) = v2;
  return v0;
}

uint64_t PointerGesture.buttonMode.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_5_7();
  *a1 = *v1;
  return result;
}

uint64_t PointerGesture.buttonMode.setter(char *a1)
{
  char v2 = *a1;
  char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMode);
  uint64_t result = swift_beginAccess();
  *char v3 = v2;
  return result;
}

uint64_t (*PointerGesture.buttonMode.modify())()
{
  return j__swift_endAccess;
}

uint64_t PointerGesture.useRemoteAcceleration.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_useRemoteAcceleration);
}

uint64_t PointerGesture.buttonMask.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMask;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t PointerGesture.init(logger:useRemoteAcceleration:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMode) = 2;
  *(void *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMask) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_keyboardModifiers) = 0;
  sub_26081AFDC(a1, v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_useRemoteAcceleration) = a2;
  return v2;
}

unint64_t sub_26081A404(unint64_t a1)
{
  OUTLINED_FUNCTION_5_7();
  if (!*v1) {
    return a1 & 0xFFFFFFFFFFFFFFFCLL | (a1 >> 1) & 1;
  }
  if (*v1 == 1) {
    return a1 & 0xFFFFFFFFFFFFFFFCLL | (a1 >> 1) & 1 | (2 * (a1 & 1));
  }
  return a1;
}

#error "26081A5F4: call analysis failed (funcsize=178)"

uint64_t sub_26081A748(void *a1, unsigned __int8 a2, int a3)
{
  uint64_t v74 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v71 - v10;
  unint64_t v12 = sub_26081A404(a2);
  uint64_t v71 = OBJC_IVAR____TtC12UniversalHID14PointerGesture_keyboardModifiers;
  unint64_t v72 = v12;
  int v13 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_keyboardModifiers);
  unsigned __int8 v14 = a3 & ~(_BYTE)v13;
  int v73 = a3;
  int v15 = v13 & ~a3;
  uint64_t v76 = v3;
  if (v14)
  {
    sub_260806EA4(v3 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger, (uint64_t)v11);
    uint64_t v16 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v16) == 1)
    {
      sub_26081B044((uint64_t)v11);
    }
    else
    {
      unint64_t v17 = sub_26087B100();
      os_log_type_t v18 = sub_26087B510();
      if (os_log_type_enabled(v17, v18))
      {
        unint64_t v19 = (_DWORD *)swift_slowAlloc();
        *unint64_t v19 = 16777472;
        LOBYTE(v77) = v14;
        sub_26087B650();
        OUTLINED_FUNCTION_10_10(&dword_2607D9000, v20, v21, "modifiers down: %hhx");
        MEMORY[0x26121DB90](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v11, v16);
    }
    uint64_t v3 = v76;
  }
  if ((_BYTE)v15)
  {
    sub_260806EA4(v3 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger, (uint64_t)v9);
    uint64_t v22 = sub_26087B120();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v22) == 1)
    {
      sub_26081B044((uint64_t)v9);
    }
    else
    {
      unint64_t v23 = sub_26087B100();
      os_log_type_t v24 = sub_26087B510();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (_DWORD *)swift_slowAlloc();
        *uint64_t v25 = 16777472;
        LOBYTE(v77) = v15;
        sub_26087B650();
        OUTLINED_FUNCTION_10_10(&dword_2607D9000, v26, v27, "modifiers up: %hhx");
        MEMORY[0x26121DB90](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v9, v22);
    }
  }
  int v75 = v15;
  uint64_t v28 = KeyboardModifierMask.keyboardUsages()(v14);
  int64_t v29 = 0;
  uint64_t v30 = v28 + 56;
  uint64_t v31 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  uint64_t v33 = v32 & *(void *)(v28 + 56);
  uint64_t v34 = MEMORY[0x263F8EE78];
  int64_t v35 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v36 = 40;
  if (!v33) {
    goto LABEL_18;
  }
LABEL_17:
  OUTLINED_FUNCTION_4_8();
  while (1)
  {
    mach_absolute_time();
    OUTLINED_FUNCTION_11_8();
    id v39 = (id)IOHIDEventCreateKeyboardEvent();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_1_15();
      uint64_t v34 = v40;
    }
    if (*(void *)(v34 + 16) >= *(void *)(v34 + 24) >> 1)
    {
      OUTLINED_FUNCTION_7_8();
      uint64_t v34 = v41;
    }
    uint64_t v79 = &protocol witness table for KeyboardEvent;
    char v78 = &type metadata for KeyboardEvent;
    *(void *)&long long v77 = v39;
    OUTLINED_FUNCTION_12_10();

    if (v33) {
      goto LABEL_17;
    }
LABEL_18:
    int64_t v37 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      OUTLINED_FUNCTION_1_15();
      uint64_t v34 = v69;
      goto LABEL_75;
    }
    if (v37 >= v35) {
      goto LABEL_38;
    }
    ++v29;
    if (!*(void *)(v30 + 8 * v37))
    {
      int64_t v29 = v37 + 1;
      if (v37 + 1 >= v35) {
        goto LABEL_38;
      }
      if (!*(void *)(v30 + 8 * v29))
      {
        int64_t v29 = v37 + 2;
        if (v37 + 2 >= v35) {
          goto LABEL_38;
        }
        if (!*(void *)(v30 + 8 * v29)) {
          break;
        }
      }
    }
LABEL_31:
    OUTLINED_FUNCTION_8_10();
  }
  int64_t v38 = v37 + 3;
  if (v38 < v35)
  {
    if (!*(void *)(v30 + 8 * v38))
    {
      while (1)
      {
        int64_t v29 = v38 + 1;
        if (__OFADD__(v38, 1)) {
          goto LABEL_80;
        }
        if (v29 >= v35) {
          goto LABEL_38;
        }
        ++v38;
        if (*(void *)(v30 + 8 * v29)) {
          goto LABEL_31;
        }
      }
    }
    int64_t v29 = v38;
    goto LABEL_31;
  }
LABEL_38:
  swift_release();
  uint64_t v42 = KeyboardModifierMask.keyboardUsages()(v75);
  int64_t v43 = 0;
  uint64_t v44 = 1 << *(unsigned char *)(v42 + 32);
  uint64_t v45 = -1;
  if (v44 < 64) {
    uint64_t v45 = ~(-1 << v44);
  }
  uint64_t v46 = v42 + 56;
  uint64_t v47 = v45 & *(void *)(v42 + 56);
  int64_t v48 = (unint64_t)(v44 + 63) >> 6;
  uint64_t v36 = 40;
  if (!v47) {
    goto LABEL_42;
  }
LABEL_41:
  OUTLINED_FUNCTION_4_8();
  while (1)
  {
    mach_absolute_time();
    OUTLINED_FUNCTION_11_8();
    id v51 = (id)IOHIDEventCreateKeyboardEvent();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_1_15();
      uint64_t v34 = v52;
    }
    if (*(void *)(v34 + 16) >= *(void *)(v34 + 24) >> 1)
    {
      OUTLINED_FUNCTION_7_8();
      uint64_t v34 = v53;
    }
    uint64_t v79 = &protocol witness table for KeyboardEvent;
    char v78 = &type metadata for KeyboardEvent;
    *(void *)&long long v77 = v51;
    OUTLINED_FUNCTION_12_10();

    if (v47) {
      goto LABEL_41;
    }
LABEL_42:
    int64_t v49 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      goto LABEL_79;
    }
    if (v49 >= v48) {
      break;
    }
    ++v43;
    if (!*(void *)(v46 + 8 * v49))
    {
      int64_t v43 = v49 + 1;
      if (v49 + 1 >= v48) {
        break;
      }
      if (!*(void *)(v46 + 8 * v43))
      {
        int64_t v43 = v49 + 2;
        if (v49 + 2 >= v48) {
          break;
        }
        if (!*(void *)(v46 + 8 * v43))
        {
          int64_t v50 = v49 + 3;
          if (v50 >= v48) {
            break;
          }
          if (!*(void *)(v46 + 8 * v50))
          {
            while (1)
            {
              int64_t v43 = v50 + 1;
              if (__OFADD__(v50, 1)) {
                goto LABEL_81;
              }
              if (v43 >= v48) {
                goto LABEL_62;
              }
              ++v50;
              if (*(void *)(v46 + 8 * v43)) {
                goto LABEL_55;
              }
            }
          }
          int64_t v43 = v50;
        }
      }
    }
LABEL_55:
    OUTLINED_FUNCTION_8_10();
  }
LABEL_62:
  swift_release();
  uint64_t v54 = v76;
  char v55 = (unint64_t *)(v76 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_buttonMask);
  swift_beginAccess();
  unint64_t v56 = *v55;
  unint64_t v57 = v72;
  unint64_t v58 = v72 & ~*v55;
  uint64_t v59 = v74;
  if (v58)
  {
    unint64_t v60 = v72 & ~*v55;
    do
    {
      if (v60)
      {
        if (HIDWORD(v58))
        {
          uint64_t result = sub_26087B980();
          __break(1u);
          return result;
        }
        mach_absolute_time();
        ButtonEventWithPressure = (void *)IOHIDEventCreateButtonEventWithPressure();
        IOHIDEventSetIntegerValue();
        OUTLINED_FUNCTION_6_9();
      }
      BOOL v62 = v60 > 1;
      v60 >>= 1;
    }
    while (v62);
  }
  unint64_t v63 = v56 & ~v57;
  if (v63)
  {
    do
    {
      if (v63)
      {
        mach_absolute_time();
        uint64_t v64 = (void *)IOHIDEventCreateButtonEventWithPressure();
        OUTLINED_FUNCTION_6_9();
      }
      BOOL v62 = v63 > 1;
      v63 >>= 1;
    }
    while (v62);
  }
  if (*(unsigned char *)(v54 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_useRemoteAcceleration) == 1)
  {
    uint64_t v65 = mach_absolute_time();
    uint64_t v66 = (void *)PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v65, 0, 0);
    OUTLINED_FUNCTION_6_9();
  }
  IOHIDEventSetIntegerValue();
  *char v55 = v57;
  *(unsigned char *)(v54 + v71) = v73;
  uint64_t v36 = v59;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_82;
  }
LABEL_75:
  unint64_t v67 = *(void *)(v34 + 16);
  if (v67 >= *(void *)(v34 + 24) >> 1)
  {
    sub_260822518();
    uint64_t v34 = v70;
  }
  char v78 = &type metadata for PointerEvent;
  uint64_t v79 = &protocol witness table for PointerEvent;
  *(void *)&long long v77 = v36;
  *(void *)(v34 + 16) = v67 + 1;
  sub_2607E2B70(&v77, v34 + 40 * v67 + 32);
  return v34;
}

uint64_t PointerGesture.deinit()
{
  sub_26081B044(v0 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger);
  return v0;
}

uint64_t PointerGesture.__deallocating_deinit()
{
  sub_26081B044(v0 + OBJC_IVAR____TtC12UniversalHID14PointerGesture_logger);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_26081AFB0(void *a1)
{
  return PointerGesture.dispatch(report:)(*a1, a1[1]);
}

uint64_t sub_26081AFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_26081B044(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_26081B0A8()
{
  unint64_t result = qword_26A8B4AE0;
  if (!qword_26A8B4AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4AE0);
  }
  return result;
}

_UNKNOWN **sub_26081B0F4()
{
  return &protocol witness table for PointerReport;
}

_UNKNOWN **sub_26081B100()
{
  return &protocol witness table for PointerReport;
}

uint64_t getEnumTagSinglePayload for PointerButtonMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PointerButtonMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26081B260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PointerButtonMode()
{
  return &type metadata for PointerButtonMode;
}

uint64_t sub_26081B298()
{
  return type metadata accessor for PointerGesture();
}

uint64_t type metadata accessor for PointerGesture()
{
  uint64_t result = qword_26A8B4AE8;
  if (!qword_26A8B4AE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_26081B2E8()
{
  sub_260811808();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PointerGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PointerGesture);
}

uint64_t dispatch thunk of PointerGesture.__allocating_init(logger:useRemoteAcceleration:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t OUTLINED_FUNCTION_0_13()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

void OUTLINED_FUNCTION_1_15()
{
  sub_260822518();
}

double OUTLINED_FUNCTION_2_14(int a1)
{
  return fabs((double)a1 * 0.0000152587891);
}

uint64_t OUTLINED_FUNCTION_3_10(uint64_t a1)
{
  return PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return IOHIDEventAppendEvent();
}

void OUTLINED_FUNCTION_7_8()
{
  sub_260822518();
}

void OUTLINED_FUNCTION_9_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(a1, v58, v57, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51,
    a52,
    a53,
    a54,
    a55,
    a56,
    a57);
}

void OUTLINED_FUNCTION_10_10(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 5u);
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  *(void *)(v1 + 16) = v2;
  return sub_2607E2B70((long long *)(v4 - 152), v1 + v3 * v0 + 32);
}

uint64_t EventReportSenderID.init(deviceID:serviceID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_26087B0F0();
  OUTLINED_FUNCTION_2_15();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a3, a1);
  uint64_t result = type metadata accessor for EventReportSenderID();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for EventReportSenderID()
{
  uint64_t result = qword_26A8B4B28;
  if (!qword_26A8B4B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EventReportSenderID.deviceID.getter@<X0>(uint64_t a1@<X8>)
{
  sub_26087B0F0();
  OUTLINED_FUNCTION_2_15();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t EventReportSenderID.deviceID.setter(uint64_t a1)
{
  sub_26087B0F0();
  OUTLINED_FUNCTION_2_15();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40);
  return v5(v1, a1, v3);
}

uint64_t (*EventReportSenderID.deviceID.modify())()
{
  return nullsub_1;
}

uint64_t EventReportSenderID.serviceID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventReportSenderID() + 20));
}

uint64_t EventReportSenderID.serviceID.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventReportSenderID();
  *(void *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*EventReportSenderID.serviceID.modify())()
{
  return nullsub_1;
}

uint64_t EventReportSenderID.hash(into:)()
{
  return sub_26087BCF0();
}

BOOL static EventReportSenderID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_26087B0B0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for EventReportSenderID();
  return *(void *)(a1 + *(int *)(v4 + 20)) == *(void *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_26081B874(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656369766564 && a2 == 0xE800000000000000;
  if (v2 || (sub_26087BBE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_26087BBE0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_26081B970(char a1)
{
  if (a1) {
    return 0x4965636976726573;
  }
  else {
    return 0x4449656369766564;
  }
}

uint64_t sub_26081B9AC()
{
  return sub_26081B970(*v0);
}

uint64_t sub_26081B9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26081B874(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26081B9DC(uint64_t a1)
{
  unint64_t v2 = sub_26081BBD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26081BA18(uint64_t a1)
{
  unint64_t v2 = sub_26081BBD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EventReportSenderID.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4AF8);
  OUTLINED_FUNCTION_10_2();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_9_0();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26081BBD8();
  sub_26087BD20();
  sub_26087B0F0();
  sub_26081C200(&qword_26A8B4B08, MEMORY[0x263F07508]);
  sub_26087BB60();
  if (!v1)
  {
    type metadata accessor for EventReportSenderID();
    sub_26087BB80();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_26081BBD8()
{
  unint64_t result = qword_26A8B4B00;
  if (!qword_26A8B4B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4B00);
  }
  return result;
}

uint64_t EventReportSenderID.hashValue.getter()
{
  return sub_26087BD00();
}

uint64_t EventReportSenderID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_26087B0F0();
  OUTLINED_FUNCTION_10_2();
  uint64_t v20 = v5;
  uint64_t v21 = v4;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_9_0();
  uint64_t v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4B10);
  OUTLINED_FUNCTION_10_2();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_9_0();
  uint64_t v10 = type metadata accessor for EventReportSenderID();
  OUTLINED_FUNCTION_2_15();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_9_0();
  uint64_t v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_26081BBD8();
  sub_26087BD10();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_26081C200(&qword_26A8B4B18, MEMORY[0x263F07508]);
  sub_26087BAB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v14, v8, v21);
  uint64_t v15 = sub_26087BAD0();
  uint64_t v16 = OUTLINED_FUNCTION_3_11();
  v17(v16);
  *(void *)(v14 + *(int *)(v10 + 20)) = v15;
  sub_2607F6B78(v14, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2607F6C40(v14);
}

uint64_t sub_26081BF58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventReportSenderID.init(from:)(a1, a2);
}

uint64_t sub_26081BF70(void *a1)
{
  return EventReportSenderID.encode(to:)(a1);
}

uint64_t sub_26081BF90()
{
  return sub_26087BD00();
}

uint64_t EventReportSenderID.description.getter()
{
  sub_26087B0A0();
  uint64_t v0 = sub_26081C0F8(8);
  uint64_t v1 = MEMORY[0x26121C730](v0);
  swift_bridgeObjectRelease();
  sub_26087B330();
  type metadata accessor for EventReportSenderID();
  sub_26080707C();
  sub_26087B360();
  sub_26087B330();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_26081C0F8(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_26087B320();
    uint64_t v1 = sub_26087B370();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_26081C1B8()
{
  return sub_26081C200(&qword_26A8B4B20, (void (*)(uint64_t))type metadata accessor for EventReportSenderID);
}

uint64_t sub_26081C200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EventReportSenderID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_26087B0F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for EventReportSenderID(uint64_t a1)
{
  uint64_t v2 = sub_26087B0F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26087B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26087B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26087B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_26087B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_26081C580);
}

uint64_t sub_26081C580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26087B0F0();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EventReportSenderID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_26081C5DC);
}

uint64_t sub_26081C5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_26087B0F0();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_26081C628()
{
  uint64_t result = sub_26087B0F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EventReportSenderID.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26081C78CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventReportSenderID.CodingKeys()
{
  return &type metadata for EventReportSenderID.CodingKeys;
}

unint64_t sub_26081C7C8()
{
  unint64_t result = qword_26A8B4B38;
  if (!qword_26A8B4B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4B38);
  }
  return result;
}

unint64_t sub_26081C818()
{
  unint64_t result = qword_26A8B4B40;
  if (!qword_26A8B4B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4B40);
  }
  return result;
}

unint64_t sub_26081C868()
{
  unint64_t result = qword_26A8B4B48;
  if (!qword_26A8B4B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4B48);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return v0;
}

uint64_t ScaleGesture.__allocating_init(platform:)(unsigned char *a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  return result;
}

uint64_t static ScaleEvent.dispatch(report:platform:)(uint64_t a1, unint64_t a2, char *a3)
{
  char v5 = *a3;
  type metadata accessor for ScaleGesture();
  *(unsigned char *)(swift_initStackObject() + 16) = v5;
  return ScaleGesture.dispatch(report:)(a1, a2);
}

uint64_t ScaleGesture.dispatch(report:)(uint64_t a1, unint64_t a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  sub_2607DCFD0(16, a1, a2);
  sub_2607DB19C(8, a1, a2);
  mach_absolute_time();
  ScaleEvent = (void *)IOHIDEventCreateScaleEvent();
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_15;
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if ((unint64_t)(v6 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      if (v6 >= 12)
      {
        uint64_t v10 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(32, a1, a2);
        if (v10)
        {
          uint64_t v24 = v10;
          uint64_t v11 = sub_2607E67C8((uint64_t)&v24, (uint64_t)&v25);
          unint64_t v13 = v12;
          sub_2607DCED0(v11, v12);
          uint64_t v14 = mach_absolute_time();
          uint64_t v15 = sub_2607E64B4(v14, 16973568, 0, v11, v13, 0);
          IOHIDEventAppendEvent();

          sub_2607DCF28(v11, v13);
        }
      }
LABEL_10:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_26087C870;
      int v17 = *(unsigned __int8 *)(v2 + 16);
      id v18 = ScaleEvent;
      uint64_t v19 = mach_absolute_time();
      if (v17 == 1)
      {
        uint64_t v20 = DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v19, 3, 0, 0, 0, 0);
        uint64_t v21 = &protocol witness table for DigitizerEvent;
        uint64_t v22 = &type metadata for DigitizerEvent;
      }
      else
      {
        uint64_t v20 = PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v19, 0, 0);
        uint64_t v21 = &protocol witness table for PointerEvent;
        uint64_t v22 = &type metadata for PointerEvent;
      }
      IOHIDEventAppendEvent();

      *(void *)(v16 + 56) = v22;
      *(void *)(v16 + 64) = v21;
      *(void *)(v16 + 32) = v20;

      return v16;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_16;
    case 3uLL:
      goto LABEL_10;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void ScaleGesture.platform.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t ScaleGesture.init(platform:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 16) = *a1;
  return v1;
}

uint64_t type metadata accessor for ScaleGesture()
{
  return self;
}

uint64_t ScaleGesture.deinit()
{
  return v0;
}

uint64_t ScaleGesture.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 17, 7);
}

uint64_t sub_26081CC60(uint64_t a1)
{
  return ScaleGesture.dispatch(report:)(*(void *)a1, *(void *)(a1 + 8));
}

_UNKNOWN **sub_26081CC8C()
{
  return &protocol witness table for ScaleReport;
}

_UNKNOWN **sub_26081CC98()
{
  return &protocol witness table for ScaleReport;
}

uint64_t method lookup function for ScaleGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScaleGesture);
}

uint64_t dispatch thunk of ScaleGesture.__allocating_init(platform:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t HIDReport.subscript.getter@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0_0();
  uint64_t v71 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v70 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v69 = (char *)&v52 - v14;
  uint64_t v68 = *(void *)(v15 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  if (OUTLINED_FUNCTION_3_12() < 8) {
    goto LABEL_42;
  }
  swift_getAssociatedConformanceWitness();
  sub_26087BBF0();
  uint64_t v67 = a5;
  sub_26087BBC0();
  int v17 = (void (*)(char *, uint64_t))(a3 >> 62);
  unint64_t v72 = a2;
  uint64_t v73 = (int)a2;
  uint64_t v18 = a1 & 7;
  unint64_t v66 = a3;
  if ((a1 & 7) == 0)
  {
LABEL_14:
    uint64_t v32 = OUTLINED_FUNCTION_3_12();
    uint64_t v62 = BYTE6(a3);
    uint64_t v63 = (uint64_t)a2 >> 32;
    uint64_t v33 = a3 & 0x3FFFFFFFFFFFFFFFLL;
    unint64_t v61 = a2 >> 8;
    ++v71;
    unint64_t v58 = a2 >> 24;
    unint64_t v59 = a2 >> 16;
    unint64_t v56 = a2 >> 40;
    unint64_t v57 = HIDWORD(a2);
    unint64_t v55 = HIWORD(a2);
    unint64_t v54 = HIBYTE(a2);
    unint64_t v53 = a3 >> 8;
    unint64_t v52 = a3 >> 16;
    unint64_t v34 = v17;
    int64_t v35 = v69;
    while (2)
    {
      BOOL v36 = __OFSUB__(v32, 8);
      v32 -= 8;
      if (v36) {
        goto LABEL_43;
      }
      uint64_t v37 = 0;
      uint64_t v38 = v73;
      switch(v34)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          uint64_t v38 = *(void *)(v72 + 16);
LABEL_23:
          if ((unint64_t)(v38 - 0x1000000000000000) >> 61 == 7)
          {
            uint64_t v37 = 8 * v38;
LABEL_17:
            uint64_t v39 = a1 + v32;
            if (!__OFADD__(a1, v32))
            {
              BOOL v36 = __OFADD__(v37, v39);
              uint64_t v40 = v37 + v39;
              if (!v36)
              {
                uint64_t v41 = v40 >> 3;
                unint64_t v64 = v34;
                uint64_t v65 = v33;
                uint64_t v60 = a1;
                switch(v34)
                {
                  case 1uLL:
                    if (v41 < v73 || v41 >= v63) {
                      goto LABEL_51;
                    }
                    uint64_t v48 = sub_26087AED0();
                    if (!v48) {
                      goto LABEL_56;
                    }
                    uint64_t v44 = v48;
                    uint64_t v49 = sub_26087AEF0();
                    uint64_t v46 = v41 - v49;
                    if (!__OFSUB__(v41, v49)) {
                      goto LABEL_38;
                    }
                    goto LABEL_53;
                  case 2uLL:
                    if (v41 < *(void *)(v72 + 16)) {
                      goto LABEL_50;
                    }
                    if (v41 >= *(void *)(v72 + 24)) {
                      goto LABEL_52;
                    }
                    uint64_t v43 = sub_26087AED0();
                    if (!v43) {
                      goto LABEL_57;
                    }
                    uint64_t v44 = v43;
                    uint64_t v45 = sub_26087AEF0();
                    uint64_t v46 = v41 - v45;
                    if (__OFSUB__(v41, v45)) {
                      goto LABEL_54;
                    }
LABEL_38:
                    char v42 = *(unsigned char *)(v44 + v46);
LABEL_39:
                    LOBYTE(v74) = v42;
                    sub_26081D8D8();
                    int64_t v50 = v70;
                    sub_26087B720();
                    uint64_t v74 = v32;
                    sub_2607DDC34();
                    sub_26087B6B0();
                    id v51 = *v71;
                    (*v71)(v50, a4);
                    sub_26087B6C0();
                    uint64_t result = v51(v35, a4);
                    a1 = v60;
                    unint64_t v34 = v64;
                    uint64_t v33 = v65;
                    if (v32 <= 0) {
                      return result;
                    }
                    continue;
                  case 3uLL:
                    goto LABEL_55;
                  default:
                    if (v41 >= v62) {
                      goto LABEL_49;
                    }
                    LOBYTE(v74) = v73;
                    BYTE1(v74) = v61;
                    BYTE2(v74) = v59;
                    BYTE3(v74) = v58;
                    BYTE4(v74) = v57;
                    BYTE5(v74) = v56;
                    BYTE6(v74) = v55;
                    HIBYTE(v74) = v54;
                    char v75 = v66;
                    char v76 = v53;
                    char v77 = v52;
                    __int16 v78 = *(_WORD *)((char *)&v66 + 3);
                    char v79 = BYTE5(v66);
                    char v42 = *((unsigned char *)&v74 + v41);
                    goto LABEL_39;
                }
              }
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
            }
LABEL_47:
            __break(1u);
            goto LABEL_48;
          }
          __break(1u);
          break;
        default:
          goto LABEL_17;
      }
      break;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  a3 = 8 - v18;
  uint64_t result = OUTLINED_FUNCTION_3_12();
  uint64_t v20 = 0;
  int v21 = 255 << v18;
  LODWORD(v65) = a1 & 7;
  unint64_t v64 = 0xFFuLL >> a3;
  ++v71;
  unint64_t v22 = v17;
  unint64_t v23 = (void (**)(char *, uint64_t))v71;
  while (2)
  {
    uint64_t v24 = 0;
    a2 = v72;
    uint64_t v25 = v73;
    switch(v22)
    {
      case 1uLL:
        goto LABEL_11;
      case 2uLL:
        uint64_t v25 = *(void *)(v72 + 16);
LABEL_11:
        if ((unint64_t)(v25 - 0x1000000000000000) >> 61 != 7)
        {
          __break(1u);
          goto LABEL_14;
        }
        uint64_t v24 = 8 * v25;
LABEL_5:
        if (__OFADD__(a1, v20)) {
          goto LABEL_44;
        }
        if (__OFADD__(v24, a1 + v20)) {
          goto LABEL_45;
        }
        unint64_t v61 = v22;
        uint64_t v63 = result;
        char v26 = sub_26087B080();
        LODWORD(v62) = v21;
        int v27 = (v26 & v21) >> v65;
        unint64_t v28 = a3;
        LOBYTE(v74) = ((sub_26087B080() & v64) << a3) | v27;
        sub_26081D8D8();
        int64_t v29 = v70;
        sub_26087B720();
        uint64_t v74 = v20;
        sub_2607DDC34();
        uint64_t v30 = v69;
        sub_26087B6B0();
        int v17 = *v23;
        (*v23)(v29, a4);
        sub_26087B6C0();
        v17(v30, a4);
        uint64_t v31 = v20 + 8;
        if (__OFADD__(v20, 8)) {
          goto LABEL_46;
        }
        v20 += 8;
        uint64_t result = v63;
        a3 = v28;
        int v21 = v62;
        unint64_t v22 = v61;
        if (v31 < v63) {
          continue;
        }
        return result;
      default:
        goto LABEL_5;
    }
  }
}

uint64_t HIDReport.subscript.setter(uint64_t a1, char **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a1;
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_26087B910() < 8)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      while (1)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        uint64_t v23 = 8 * v15;
LABEL_6:
        v36[1] = v16;
        uint64_t v24 = OUTLINED_FUNCTION_4_9();
        uint64_t v15 = (uint64_t)v41 + v24;
        uint64_t v25 = v37;
        if (__OFADD__(v41, v24)) {
          break;
        }
        BOOL v19 = __OFADD__(v23, v15);
        v15 += v23;
        if (v19) {
          goto LABEL_41;
        }
        v36[0] = v15 >> 3;
        sub_26087B080();
        uint64_t v26 = OUTLINED_FUNCTION_4_9();
        uint64_t v15 = v26 - v25;
        if (__OFSUB__(v26, v25)) {
          goto LABEL_42;
        }
        uint64_t v44 = v26 - v25;
        OUTLINED_FUNCTION_1_16();
        OUTLINED_FUNCTION_7_9();
        sub_26087B6A0();
        OUTLINED_FUNCTION_5_8();
        sub_26087B6E0();
        uint64_t v27 = OUTLINED_FUNCTION_2_16();
        ((void (*)(uint64_t))v11)(v27);
        sub_26087AFD0();
        if (v6 < 9) {
          return ((uint64_t (*)(uint64_t, uint64_t))v11)(v43, a4);
        }
        uint64_t v28 = v6 - 8;
        uint64_t v6 = v39;
        while (1)
        {
          uint64_t v15 = 0;
          unint64_t v16 = (unint64_t)v41;
          switch(v5[1] >> 62)
          {
            case 1uLL:
            case 2uLL:
              OUTLINED_FUNCTION_6_10();
              if (!v32) {
                goto LABEL_34;
              }
              v15 *= 8;
              break;
            default:
              break;
          }
          unint64_t v29 = v16 + v28;
          if (__OFADD__(v16, v28)) {
            break;
          }
          BOOL v19 = __OFADD__(v15, v29);
          v15 += v29;
          if (v19) {
            goto LABEL_44;
          }
          uint64_t v44 = v28 - v25;
          OUTLINED_FUNCTION_1_16();
          OUTLINED_FUNCTION_7_9();
          sub_26087B6A0();
          OUTLINED_FUNCTION_5_8();
          sub_26087B6E0();
          uint64_t v30 = OUTLINED_FUNCTION_2_16();
          ((void (*)(uint64_t))v11)(v30);
          sub_26087AFD0();
          unint64_t v31 = v28 + 8;
          v28 -= 8;
          if (v31 <= 0x10) {
            return ((uint64_t (*)(uint64_t, uint64_t))v11)(v43, a4);
          }
        }
      }
    }
  }
  uint64_t v6 = OUTLINED_FUNCTION_4_9();
  uint64_t v17 = a2 & 7;
  if ((a2 & 7) != 0)
  {
    uint64_t v18 = 0;
    switch(v5[1] >> 62)
    {
      case 1uLL:
      case 2uLL:
        goto LABEL_29;
      default:
        goto LABEL_4;
    }
  }
  uint64_t v41 = (char **)(v11 + 8);
  uint64_t v15 = (unint64_t)(v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v42 = v15;
  while (2)
  {
    BOOL v19 = __OFSUB__(v6, 8);
    v6 -= 8;
    if (v19) {
      goto LABEL_36;
    }
    unint64_t v16 = v5[1];
    uint64_t v15 = 0;
    switch(v16 >> 62)
    {
      case 1uLL:
      case 2uLL:
        OUTLINED_FUNCTION_6_10();
        if (v32)
        {
          uint64_t v15 = 8 * v34;
          goto LABEL_22;
        }
        __break(1u);
LABEL_29:
        OUTLINED_FUNCTION_6_10();
        if (v32)
        {
LABEL_4:
          BOOL v19 = __OFADD__(a2, 8 * v18);
          uint64_t v15 = (uint64_t)&a2[v18];
          if (v19) {
            goto LABEL_39;
          }
          uint64_t v41 = a2;
          sub_26087B080();
          uint64_t v37 = v17;
          uint64_t v44 = v17;
          uint64_t v20 = *(void *)(a5 + 8);
          sub_2607DDC34();
          OUTLINED_FUNCTION_1_16();
          uint64_t v38 = v21;
          OUTLINED_FUNCTION_7_9();
          sub_26087B6B0();
          OUTLINED_FUNCTION_5_8();
          uint64_t v39 = v20;
          sub_26087B6E0();
          unint64_t v22 = (unint64_t)(v11 + 8);
          uint64_t v11 = (char *)*((void *)v11 + 1);
          uint64_t v42 = v22 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          unint64_t v40 = v22;
          ((void (*)(char *, uint64_t))v11)(v14, a4);
          sub_26087AFD0();
          unint64_t v16 = *v5;
          uint64_t v23 = 0;
          switch(v5[1] >> 62)
          {
            case 1uLL:
            case 2uLL:
              OUTLINED_FUNCTION_6_10();
              if (v32) {
                goto LABEL_45;
              }
              __break(1u);
LABEL_34:
              __break(1u);
              goto LABEL_35;
            default:
              goto LABEL_6;
          }
          goto LABEL_6;
        }
        __break(1u);
        break;
      default:
LABEL_22:
        uint64_t v33 = (char *)a2 + v6;
        if (__OFADD__(a2, v6)) {
          goto LABEL_37;
        }
        BOOL v19 = __OFADD__(v15, v33);
        v15 += (uint64_t)v33;
        if (v19) {
          goto LABEL_38;
        }
        uint64_t v17 = (uint64_t)a2;
        uint64_t v44 = v6;
        sub_2607DDC34();
        OUTLINED_FUNCTION_1_16();
        OUTLINED_FUNCTION_7_9();
        sub_26087B6A0();
        OUTLINED_FUNCTION_5_8();
        sub_26087B6E0();
        uint64_t v11 = *v41;
        ((void (*)(char *, uint64_t))*v41)(v14, a4);
        sub_26087AFD0();
        if (v6 > 0) {
          continue;
        }
        break;
    }
    return ((uint64_t (*)(void, void))v11)(v43, a4);
  }
}

unint64_t sub_26081D8D8()
{
  unint64_t result = qword_26A8B4B50;
  if (!qword_26A8B4B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4B50);
  }
  return result;
}

void (*HIDReport.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(uint64_t *a1, char a2, uint64_t a3)
{
  uint64_t v13 = malloc(0x48uLL);
  *a1 = v13;
  v13[4] = a6;
  void v13[5] = v6;
  void v13[2] = a4;
  v13[3] = a5;
  *uint64_t v13 = a2;
  v13[1] = a3;
  OUTLINED_FUNCTION_0_0();
  *(void *)(v14 + 48) = v15;
  size_t v17 = *(void *)(v16 + 64);
  v13[7] = malloc(v17);
  uint64_t v18 = malloc(v17);
  v13[8] = v18;
  HIDReport.subscript.getter(a2, *v6, v6[1], a4, (uint64_t)v18);
  return sub_26081D9FC;
}

void sub_26081D9FC(uint64_t *a1, char a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  unsigned int v4 = *(void **)(*a1 + 56);
  char v5 = *(void **)(*a1 + 64);
  if (a2)
  {
    uint64_t v6 = *(void *)(v3 + 48);
    uint64_t v8 = *(void *)(v3 + 16);
    uint64_t v7 = *(void *)(v3 + 24);
    BOOL v9 = *(char ***)v3;
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*a1 + 56), v5, v8);
    HIDReport.subscript.setter((uint64_t)v4, v9, v10, v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v5, v8);
  }
  else
  {
    HIDReport.subscript.setter(*(void *)(*a1 + 64), *(char ***)v3, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
  }
  free(v5);
  free(v4);
  free((void *)v3);
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return sub_26087B910();
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return sub_26087B910();
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  return v0;
}

uint64_t FluidTouchGestureReportProtocol.swipeMask.getter()
{
  OUTLINED_FUNCTION_0_14();
  v2();
  OUTLINED_FUNCTION_11_9();
  unsigned __int8 v3 = sub_2607DB19C(16, v0, v1);
  OUTLINED_FUNCTION_12_5();
  return v3;
}

uint64_t FluidTouchGestureReportProtocol.gestureMotion.getter(uint64_t a1, uint64_t a2)
{
  return sub_26081DBB4(a1, a2, 24);
}

uint64_t FluidTouchGestureReportProtocol.flavor.getter(uint64_t a1, uint64_t a2)
{
  return sub_26081DBB4(a1, a2, 32);
}

uint64_t sub_26081DBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_14();
  uint64_t v5 = v4();
  unint64_t v7 = v6;
  LOBYTE(a3) = sub_2607DB19C(a3, v5, v6);
  sub_2607DCF28(v5, v7);
  return a3;
}

double FluidTouchGestureReportProtocol.delta.getter(uint64_t a1, uint64_t a2)
{
  return sub_26081DCD0(a1, a2, FluidTouchGestureReportProtocol.x.getter, (void (*)(uint64_t, uint64_t))FluidTouchGestureReportProtocol.y.getter);
}

double FluidTouchGestureReportProtocol.progress.getter()
{
  OUTLINED_FUNCTION_0_14();
  v2();
  OUTLINED_FUNCTION_11_9();
  double v3 = sub_2607DCFD0(40, v0, v1);
  OUTLINED_FUNCTION_12_5();
  return v3;
}

unint64_t FluidTouchGestureReportProtocol.phase.getter()
{
  return FluidTouchGestureReportProtocol.flags.getter() & 0xFFFFFF8F;
}

double FluidTouchGestureReportProtocol.velocity.getter(uint64_t a1, uint64_t a2)
{
  return sub_26081DCD0(a1, a2, (double (*)(void))FluidTouchGestureReportProtocol.velocityX.getter, (void (*)(uint64_t, uint64_t))FluidTouchGestureReportProtocol.velocityY.getter);
}

double sub_26081DCD0(uint64_t a1, uint64_t a2, double (*a3)(void), void (*a4)(uint64_t, uint64_t))
{
  double v7 = a3();
  a4(a1, a2);
  return v7;
}

uint64_t FluidTouchGestureReportProtocol.phase.setter(int a1)
{
  uint64_t v1 = a1 & 0xFFFFFF8F | (16 * ((FluidTouchGestureReportProtocol.flags.getter() >> 4) & 7));
  return FluidTouchGestureReportProtocol.flags.setter(v1);
}

uint64_t FluidTouchGestureReportProtocol.delta.setter(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_26081DEE0(a1, a2, (void (*)(void))FluidTouchGestureReportProtocol.x.setter, (uint64_t (*)(uint64_t, uint64_t, __n128))FluidTouchGestureReportProtocol.y.setter, a3, a4);
}

uint64_t FluidTouchGestureReportProtocol.swipeMask.setter(unsigned int a1)
{
  if (a1 >= 0xFF) {
    uint64_t v1 = 255;
  }
  else {
    uint64_t v1 = a1;
  }
  OUTLINED_FUNCTION_9_10();
  double v3 = (uint64_t (*)(uint64_t *))v2();
  uint64_t v4 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, 16);
  uint64_t v12 = OUTLINED_FUNCTION_7_10(v4, v5, v6, v7, v8, v9, v10, v11, v14);
  return v3(v12);
}

uint64_t FluidTouchGestureReportProtocol.flavor.setter(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_26081DE30(a1, a2, a3, 32);
}

uint64_t FluidTouchGestureReportProtocol.progress.setter(uint64_t a1, uint64_t a2, double a3)
{
  return sub_26081F4BC(a1, a2, 40, a3);
}

uint64_t FluidTouchGestureReportProtocol.gestureMotion.setter(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_26081DE30(a1, a2, a3, 24);
}

uint64_t sub_26081DE30(unsigned __int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 >= 0xFFu) {
    uint64_t v5 = 255;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v6 = (uint64_t (*)(uint64_t *))(*(uint64_t (**)(uint64_t *))(*(void *)(a3 + 8) + 24))(v17);
  uint64_t v7 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v5, a4);
  uint64_t v15 = OUTLINED_FUNCTION_8_11(v7, v8, v9, v10, v11, v12, v13, v14, v17[0]);
  return v6(v15);
}

uint64_t FluidTouchGestureReportProtocol.velocity.setter(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_26081DEE0(a1, a2, (void (*)(void))FluidTouchGestureReportProtocol.velocityX.setter, (uint64_t (*)(uint64_t, uint64_t, __n128))FluidTouchGestureReportProtocol.velocityY.setter, a3, a4);
}

uint64_t sub_26081DEE0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, __n128), double a5, double a6)
{
  a3();
  v9.n128_f64[0] = a6;
  return a4(a1, a2, v9);
}

uint64_t sub_26081DF50()
{
  uint64_t result = sub_26081DF74();
  qword_26A8C03C8 = result;
  unk_26A8C03D0 = v1;
  return result;
}

uint64_t sub_26081DF74()
{
  LOBYTE(v87) = 12;
  uint64_t v0 = sub_2608155C0((char *)&v87, 8uLL);
  unint64_t v61 = v1;
  uint64_t v62 = v0;
  LOBYTE(v87) = 14;
  uint64_t v2 = sub_260815298((char *)&v87, 1);
  unint64_t v56 = v3;
  uint64_t v57 = v2;
  LOBYTE(v84) = 0;
  LOBYTE(v81) = 1;
  LOBYTE(v78) = 0;
  LOBYTE(v76[0]) = 0;
  LOBYTE(v74[0]) = 0;
  LOBYTE(v72[0]) = 0;
  HIBYTE(v86) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v84, &v81, &v78, v76, v74, v72, (unsigned char *)&v86 + 1, &v87);
  LOBYTE(v84) = 12;
  uint64_t v4 = sub_2608155C0((char *)&v84, 8uLL);
  unint64_t v6 = v5;
  unint64_t v43 = v5;
  LOBYTE(v84) = 14;
  uint64_t v60 = sub_260815298((char *)&v84, 1);
  unint64_t v8 = v7;
  unint64_t v42 = v7;
  LOBYTE(v81) = 0;
  LOBYTE(v78) = 1;
  LOBYTE(v76[0]) = 0;
  LOBYTE(v74[0]) = 0;
  LOBYTE(v72[0]) = 0;
  __int16 v86 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v81, &v78, v76, v74, v72, (unsigned char *)&v86 + 1, &v86, &v84);
  LOBYTE(v81) = 12;
  uint64_t v55 = sub_2608155C0((char *)&v81, 8uLL);
  unint64_t v71 = v9;
  LOBYTE(v81) = 14;
  uint64_t v38 = sub_260815298((char *)&v81, 1);
  unint64_t v54 = v10;
  LOBYTE(v78) = 0;
  LOBYTE(v76[0]) = 1;
  LOBYTE(v74[0]) = 0;
  LOBYTE(v72[0]) = 0;
  __int16 v86 = 0;
  char v83 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v78, v76, v74, v72, (unsigned char *)&v86 + 1, &v86, &v83, &v81);
  LOBYTE(v78) = 12;
  uint64_t v36 = sub_2608155C0((char *)&v78, 8uLL);
  unint64_t v70 = v11;
  LOBYTE(v78) = 14;
  uint64_t v48 = sub_260815298((char *)&v78, 1);
  unint64_t v69 = v12;
  LOBYTE(v76[0]) = 0;
  LOBYTE(v74[0]) = 1;
  LOBYTE(v72[0]) = 0;
  __int16 v86 = 0;
  char v83 = 0;
  char v80 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v76, v74, v72, (unsigned char *)&v86 + 1, &v86, &v83, &v80, &v78);
  LOBYTE(v76[0]) = 12;
  uint64_t v13 = sub_2608155C0((char *)v76, 0x10uLL);
  unint64_t v67 = v14;
  uint64_t v68 = v13;
  LOBYTE(v76[0]) = 14;
  uint64_t v15 = sub_260815298((char *)v76, 1);
  unint64_t v65 = v16;
  uint64_t v66 = v15;
  LOBYTE(v74[0]) = 0;
  LOBYTE(v72[0]) = 1;
  __int16 v86 = 0;
  char v83 = 0;
  char v80 = 0;
  char v77 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v74, v72, (unsigned char *)&v86 + 1, &v86, &v83, &v80, &v77, v76);
  LOBYTE(v74[0]) = 12;
  uint64_t v17 = sub_2608155C0((char *)v74, 0x20uLL);
  unint64_t v63 = v18;
  uint64_t v64 = v17;
  LOBYTE(v74[0]) = 14;
  uint64_t v53 = sub_260815298((char *)v74, 2);
  unint64_t v51 = v19;
  LOBYTE(v72[0]) = 0;
  __int16 v86 = 256;
  char v83 = 0;
  char v80 = 0;
  char v77 = 0;
  char v75 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v72, (unsigned char *)&v86 + 1, &v86, &v83, &v80, &v77, &v75, v74);
  LOBYTE(v72[0]) = 12;
  uint64_t v40 = sub_2608155C0((char *)v72, 0x10uLL);
  unint64_t v41 = v20;
  LOBYTE(v72[0]) = 14;
  uint64_t v37 = sub_260815298((char *)v72, 2);
  unint64_t v49 = v21;
  __int16 v86 = 1;
  char v83 = 0;
  char v80 = 0;
  char v77 = 0;
  char v75 = 0;
  char v73 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v86 + 1, &v86, &v83, &v80, &v77, &v75, &v73, v72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_26087F860;
  *(void *)(v22 + 56) = &type metadata for ReportSize;
  *(void *)(v22 + 64) = &protocol witness table for ReportSize;
  *(void *)(v22 + 32) = v62;
  *(void *)(v22 + 40) = v61;
  *(void *)(v22 + 96) = &type metadata for ReportCount;
  *(void *)(v22 + 104) = &protocol witness table for ReportCount;
  *(void *)(v22 + 72) = v57;
  *(void *)(v22 + 80) = v56;
  unint64_t v58 = v88;
  unint64_t v23 = v88;
  uint64_t v59 = v87;
  *(void *)(v22 + 136) = &type metadata for Input;
  *(void *)(v22 + 144) = &protocol witness table for Input;
  *(void *)(v22 + 112) = v59;
  *(void *)(v22 + 120) = v23;
  *(void *)(v22 + 176) = &type metadata for ReportSize;
  *(void *)(v22 + 184) = &protocol witness table for ReportSize;
  *(void *)(v22 + 152) = v4;
  *(void *)(v22 + 160) = v6;
  *(void *)(v22 + 216) = &type metadata for ReportCount;
  *(void *)(v22 + 224) = &protocol witness table for ReportCount;
  *(void *)(v22 + 192) = v60;
  *(void *)(v22 + 200) = v8;
  uint64_t v50 = v84;
  uint64_t v24 = v84;
  unint64_t v52 = v85;
  unint64_t v25 = v85;
  *(void *)(v22 + 256) = &type metadata for Input;
  *(void *)(v22 + 264) = &protocol witness table for Input;
  *(void *)(v22 + 232) = v24;
  *(void *)(v22 + 240) = v25;
  *(void *)(v22 + 296) = &type metadata for ReportSize;
  *(void *)(v22 + 304) = &protocol witness table for ReportSize;
  *(void *)(v22 + 272) = v55;
  *(void *)(v22 + 280) = v71;
  *(void *)(v22 + 336) = &type metadata for ReportCount;
  *(void *)(v22 + 344) = &protocol witness table for ReportCount;
  *(void *)(v22 + 312) = v38;
  *(void *)(v22 + 320) = v54;
  unint64_t v46 = v82;
  unint64_t v26 = v82;
  uint64_t v47 = v81;
  *(void *)(v22 + 376) = &type metadata for Input;
  *(void *)(v22 + 384) = &protocol witness table for Input;
  *(void *)(v22 + 352) = v47;
  *(void *)(v22 + 360) = v26;
  *(void *)(v22 + 416) = &type metadata for ReportSize;
  *(void *)(v22 + 424) = &protocol witness table for ReportSize;
  *(void *)(v22 + 392) = v36;
  *(void *)(v22 + 400) = v70;
  *(void *)(v22 + 456) = &type metadata for ReportCount;
  *(void *)(v22 + 464) = &protocol witness table for ReportCount;
  *(void *)(v22 + 432) = v48;
  *(void *)(v22 + 440) = v69;
  unint64_t v44 = v79;
  unint64_t v27 = v79;
  uint64_t v45 = v78;
  *(void *)(v22 + 496) = &type metadata for Input;
  *(void *)(v22 + 504) = &protocol witness table for Input;
  *(void *)(v22 + 472) = v45;
  *(void *)(v22 + 480) = v27;
  *(void *)(v22 + 536) = &type metadata for ReportSize;
  *(void *)(v22 + 544) = &protocol witness table for ReportSize;
  *(void *)(v22 + 512) = v68;
  *(void *)(v22 + 520) = v67;
  *(void *)(v22 + 576) = &type metadata for ReportCount;
  *(void *)(v22 + 584) = &protocol witness table for ReportCount;
  *(void *)(v22 + 552) = v66;
  *(void *)(v22 + 560) = v65;
  *(void *)(v22 + 656) = &type metadata for ReportSize;
  *(void *)(v22 + 664) = &protocol witness table for ReportSize;
  *(void *)(v22 + 776) = &type metadata for ReportSize;
  *(void *)(v22 + 784) = &protocol witness table for ReportSize;
  unint64_t v29 = v76[1];
  uint64_t v39 = v76[0];
  uint64_t v28 = v76[0];
  *(void *)(v22 + 616) = &type metadata for Input;
  *(void *)(v22 + 624) = &protocol witness table for Input;
  *(void *)(v22 + 592) = v28;
  *(void *)(v22 + 600) = v29;
  *(void *)(v22 + 632) = v64;
  *(void *)(v22 + 640) = v63;
  *(void *)(v22 + 696) = &type metadata for ReportCount;
  *(void *)(v22 + 704) = &protocol witness table for ReportCount;
  *(void *)(v22 + 672) = v53;
  *(void *)(v22 + 680) = v51;
  *(void *)(v22 + 816) = &type metadata for ReportCount;
  *(void *)(v22 + 824) = &protocol witness table for ReportCount;
  uint64_t v30 = v74[0];
  unint64_t v32 = v74[1];
  *(void *)(v22 + 736) = &type metadata for Input;
  *(void *)(v22 + 744) = &protocol witness table for Input;
  *(void *)(v22 + 712) = v30;
  *(void *)(v22 + 720) = v32;
  *(void *)(v22 + 752) = v40;
  *(void *)(v22 + 760) = v41;
  *(void *)(v22 + 792) = v37;
  *(void *)(v22 + 800) = v49;
  *(void *)(v22 + 856) = &type metadata for Input;
  *(void *)(v22 + 864) = &protocol witness table for Input;
  uint64_t v33 = v72[0];
  unint64_t v34 = v72[1];
  *(void *)(v22 + 832) = v72[0];
  *(void *)(v22 + 840) = v34;
  sub_2607DCED0(v62, v61);
  sub_2607DCED0(v57, v56);
  sub_2607DCED0(v59, v58);
  sub_2607DCED0(v4, v43);
  sub_2607DCED0(v60, v42);
  sub_2607DCED0(v50, v52);
  sub_2607DCED0(v55, v71);
  sub_2607DCED0(v38, v54);
  sub_2607DCED0(v47, v46);
  sub_2607DCED0(v36, v70);
  sub_2607DCED0(v48, v69);
  sub_2607DCED0(v45, v44);
  sub_2607DCED0(v68, v67);
  sub_2607DCED0(v66, v65);
  sub_2607DCED0(v39, v29);
  sub_2607DCED0(v64, v63);
  sub_2607DCED0(v53, v51);
  sub_2607DCED0(v30, v32);
  sub_2607DCED0(v40, v41);
  sub_2607DCED0(v37, v49);
  sub_2607DCED0(v33, v34);
  uint64_t v35 = static HIDReportDescriptor.Builder.buildBlock(_:)(v22);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v33, v34);
  sub_2607DCF28(v37, v49);
  sub_2607DCF28(v40, v41);
  sub_2607DCF28(v30, v32);
  sub_2607DCF28(v53, v51);
  sub_2607DCF28(v64, v63);
  sub_2607DCF28(v39, v29);
  sub_2607DCF28(v66, v65);
  sub_2607DCF28(v68, v67);
  sub_2607DCF28(v45, v44);
  sub_2607DCF28(v48, v69);
  sub_2607DCF28(v36, v70);
  sub_2607DCF28(v47, v46);
  sub_2607DCF28(v38, v54);
  sub_2607DCF28(v55, v71);
  sub_2607DCF28(v50, v52);
  sub_2607DCF28(v60, v42);
  sub_2607DCF28(v4, v43);
  sub_2607DCF28(v59, v58);
  sub_2607DCF28(v57, v56);
  sub_2607DCF28(v62, v61);
  return v35;
}

uint64_t static FluidTouchGestureReport.reportID.getter()
{
  return 12;
}

uint64_t sub_26081E6BC()
{
  uint64_t result = sub_26081E894(12);
  *(void *)&xmmword_26A8B4B58 = result;
  *((void *)&xmmword_26A8B4B58 + 1) = v1;
  return result;
}

uint64_t static FluidTouchGestureReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_26081E9B0(&qword_26A8B44F0, (uint64_t *)&xmmword_26A8B4B58, (unint64_t *)&xmmword_26A8B4B58 + 1, a1);
}

uint64_t (*FluidTouchGestureReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_26081E734()
{
  return sub_26087589C(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t static DockSwipeReport.reportID.getter()
{
  return 11;
}

uint64_t sub_26081E748()
{
  uint64_t result = sub_26081E894(11);
  *(void *)&xmmword_26A8B4B68 = result;
  *((void *)&xmmword_26A8B4B68 + 1) = v1;
  return result;
}

uint64_t static DockSwipeReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_26081E9B0(&qword_26A8B44F8, (uint64_t *)&xmmword_26A8B4B68, (unint64_t *)&xmmword_26A8B4B68 + 1, a1);
}

uint64_t sub_26081E79C()
{
  return 11;
}

uint64_t DockSwipeReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t DockSwipeReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*DockSwipeReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_26081E830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DockSwipeReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_26081E858()
{
  return sub_2608758B4(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t static NavigationSwipeReport.reportID.getter()
{
  return 13;
}

uint64_t sub_26081E86C()
{
  uint64_t result = sub_26081E894(13);
  *(void *)&xmmword_26A8B4B78 = result;
  *((void *)&xmmword_26A8B4B78 + 1) = v1;
  return result;
}

uint64_t sub_26081E894(char a1)
{
  if (qword_26A8B44E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26A8C03C8;
  unint64_t v3 = unk_26A8C03D0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087EEC0;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = a1;
  *(void *)(inited + 96) = &type metadata for HIDReportDescriptor;
  *(void *)(inited + 104) = &protocol witness table for HIDReportDescriptor;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = v3;
  sub_2607DCED0(v2, v3);
  uint64_t v5 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  return v5;
}

uint64_t static NavigationSwipeReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_26081E9B0(&qword_26A8B4500, (uint64_t *)&xmmword_26A8B4B78, (unint64_t *)&xmmword_26A8B4B78 + 1, a1);
}

uint64_t sub_26081E9B0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = *a2;
  unint64_t v8 = *a3;
  *a4 = *a2;
  a4[1] = v8;
  return sub_2607DCED0(v7, v8);
}

uint64_t sub_26081EA18()
{
  return 13;
}

uint64_t (*NavigationSwipeReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_26081EA40()
{
  return sub_2608758CC(*(void *)v0, *(void *)(v0 + 8));
}

unint64_t FluidTouchGestureReportProtocol.flags.getter()
{
  OUTLINED_FUNCTION_0_14();
  v2();
  OUTLINED_FUNCTION_11_9();
  unint64_t v3 = sub_2607DB19C(8, v0, v1);
  OUTLINED_FUNCTION_12_5();
  return v3;
}

unint64_t sub_26081EA94@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = FluidTouchGestureReportProtocol.flags.getter();
  *a1 = result;
  return result;
}

uint64_t sub_26081EAC8(unsigned __int8 *a1)
{
  return FluidTouchGestureReportProtocol.flags.setter(*a1);
}

uint64_t FluidTouchGestureReportProtocol.flags.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_9_10();
  unint64_t v3 = (uint64_t (*)(uint64_t *))v2();
  uint64_t v4 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
  unint64_t v12 = OUTLINED_FUNCTION_7_10(v4, v5, v6, v7, v8, v9, v10, v11, v14);
  return v3(v12);
}

uint64_t (*FluidTouchGestureReportProtocol.flags.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(unsigned char *)(v3 + 24) = FluidTouchGestureReportProtocol.flags.getter();
  return sub_26081EB90;
}

uint64_t sub_26081EB90(uint64_t a1)
{
  return FluidTouchGestureReportProtocol.flags.setter(*(unsigned __int8 *)(a1 + 24));
}

unint64_t sub_26081EBBC@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = FluidTouchGestureReportProtocol.phase.getter();
  *a1 = result;
  return result;
}

uint64_t sub_26081EBF0(unsigned __int8 *a1)
{
  return FluidTouchGestureReportProtocol.phase.setter(*a1);
}

uint64_t (*FluidTouchGestureReportProtocol.phase.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(unsigned char *)(v3 + 24) = FluidTouchGestureReportProtocol.phase.getter();
  return sub_26081EC64;
}

uint64_t sub_26081EC64(uint64_t a1)
{
  return FluidTouchGestureReportProtocol.phase.setter(*(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_26081EC90@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = FluidTouchGestureReportProtocol.swipeMask.getter();
  *a1 = result;
  return result;
}

uint64_t sub_26081ECC4(unsigned int *a1)
{
  return FluidTouchGestureReportProtocol.swipeMask.setter(*a1);
}

uint64_t (*FluidTouchGestureReportProtocol.swipeMask.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(_DWORD *)(v3 + 24) = FluidTouchGestureReportProtocol.swipeMask.getter();
  return sub_26081ED38;
}

uint64_t sub_26081ED38(uint64_t a1)
{
  return FluidTouchGestureReportProtocol.swipeMask.setter(*(_DWORD *)(a1 + 24));
}

uint64_t sub_26081ED64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _WORD *a3@<X8>)
{
  uint64_t result = FluidTouchGestureReportProtocol.gestureMotion.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_26081ED98(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.gestureMotion.setter(*a1, *(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t (*FluidTouchGestureReportProtocol.gestureMotion.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(_WORD *)(v3 + 24) = FluidTouchGestureReportProtocol.gestureMotion.getter(v4, v5);
  return sub_26081EE0C;
}

uint64_t sub_26081EE0C(uint64_t a1)
{
  return FluidTouchGestureReportProtocol.gestureMotion.setter(*(_WORD *)(a1 + 24), *(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_26081EE38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _WORD *a3@<X8>)
{
  uint64_t result = FluidTouchGestureReportProtocol.flavor.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_26081EE6C(unsigned __int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.flavor.setter(*a1, *(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t (*FluidTouchGestureReportProtocol.flavor.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(_WORD *)(v3 + 24) = FluidTouchGestureReportProtocol.flavor.getter(v4, v5);
  return sub_26081EEE0;
}

uint64_t sub_26081EEE0(uint64_t a1)
{
  return FluidTouchGestureReportProtocol.flavor.setter(*(_WORD *)(a1 + 24), *(void *)a1, *(void *)(a1 + 8));
}

void sub_26081EF0C(double *a1@<X8>)
{
  *a1 = FluidTouchGestureReportProtocol.progress.getter();
}

uint64_t sub_26081EF40(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.progress.setter(*(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t (*FluidTouchGestureReportProtocol.progress.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_4_10(a1, a2, a3);
  *uint64_t v3 = FluidTouchGestureReportProtocol.progress.getter();
  return sub_26081EFB8;
}

uint64_t sub_26081EFB8(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_9(a1);
  return FluidTouchGestureReportProtocol.progress.setter(v1, v2, v3);
}

#error "26081F008: call analysis failed (funcsize=19)"

void sub_26081F028(uint64_t a1@<X1>, uint64_t a2@<X2>, double *a3@<X8>)
{
  *a3 = FluidTouchGestureReportProtocol.velocityX.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
}

uint64_t sub_26081F05C(double *a1)
{
  return FluidTouchGestureReportProtocol.velocityX.setter(*a1);
}

uint64_t FluidTouchGestureReportProtocol.velocityX.setter(double a1)
{
  HIDFixed.init(doubleValue:)(a1);
  OUTLINED_FUNCTION_6_11();
  double v3 = (uint64_t (*)(uint64_t *))v2();
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 56);
  unint64_t v12 = OUTLINED_FUNCTION_8_11(v4, v5, v6, v7, v8, v9, v10, v11, v14);
  return v3(v12);
}

uint64_t (*FluidTouchGestureReportProtocol.velocityX.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_4_10(a1, a2, a3);
  *double v3 = FluidTouchGestureReportProtocol.velocityX.getter(v4, v5);
  return sub_26081F138;
}

uint64_t sub_26081F138(uint64_t a1)
{
  OUTLINED_FUNCTION_5_9(a1);
  return FluidTouchGestureReportProtocol.velocityX.setter(v1);
}

#error "26081F188: call analysis failed (funcsize=19)"

void sub_26081F1A8(uint64_t a1@<X1>, uint64_t a2@<X2>, double *a3@<X8>)
{
  *a3 = FluidTouchGestureReportProtocol.velocityY.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
}

uint64_t sub_26081F1DC(double *a1)
{
  return FluidTouchGestureReportProtocol.velocityY.setter(*a1);
}

uint64_t FluidTouchGestureReportProtocol.velocityY.setter(double a1)
{
  HIDFixed.init(doubleValue:)(a1);
  OUTLINED_FUNCTION_6_11();
  double v3 = (uint64_t (*)(uint64_t *))v2();
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 88);
  unint64_t v12 = OUTLINED_FUNCTION_8_11(v4, v5, v6, v7, v8, v9, v10, v11, v14);
  return v3(v12);
}

uint64_t (*FluidTouchGestureReportProtocol.velocityY.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v4 = OUTLINED_FUNCTION_4_10(a1, a2, a3);
  *double v3 = FluidTouchGestureReportProtocol.velocityY.getter(v4, v5);
  return sub_26081F2B8;
}

uint64_t sub_26081F2B8(uint64_t a1)
{
  OUTLINED_FUNCTION_5_9(a1);
  return FluidTouchGestureReportProtocol.velocityY.setter(v1);
}

double FluidTouchGestureReportProtocol.x.getter()
{
  OUTLINED_FUNCTION_0_14();
  v2();
  OUTLINED_FUNCTION_11_9();
  double v3 = sub_2607DCFD0(120, v0, v1);
  OUTLINED_FUNCTION_12_5();
  return v3;
}

void sub_26081F328(double *a1@<X8>)
{
  *a1 = FluidTouchGestureReportProtocol.x.getter();
}

uint64_t sub_26081F35C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.x.setter(*(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t FluidTouchGestureReportProtocol.x.setter(uint64_t a1, uint64_t a2, double a3)
{
  return sub_26081F4BC(a1, a2, 120, a3);
}

uint64_t (*FluidTouchGestureReportProtocol.x.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_4_10(a1, a2, a3);
  *double v3 = FluidTouchGestureReportProtocol.x.getter();
  return sub_26081F3DC;
}

uint64_t sub_26081F3DC(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_9(a1);
  return FluidTouchGestureReportProtocol.x.setter(v1, v2, v3);
}

double FluidTouchGestureReportProtocol.y.getter()
{
  OUTLINED_FUNCTION_0_14();
  v2();
  OUTLINED_FUNCTION_11_9();
  double v3 = sub_2607DCFD0(136, v0, v1);
  OUTLINED_FUNCTION_12_5();
  return v3;
}

void sub_26081F44C(double *a1@<X8>)
{
  *a1 = FluidTouchGestureReportProtocol.y.getter();
}

uint64_t sub_26081F480(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FluidTouchGestureReportProtocol.y.setter(*(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8), *a1);
}

uint64_t FluidTouchGestureReportProtocol.y.setter(uint64_t a1, uint64_t a2, double a3)
{
  return sub_26081F4BC(a1, a2, 136, a3);
}

uint64_t sub_26081F4BC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if ((~*(void *)&a4 & 0x7FF0000000000000) != 0) {
    double v5 = a4;
  }
  else {
    double v5 = 0.0;
  }
  uint64_t v6 = (uint64_t (*)(uint64_t *))(*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(a2 + 8) + 24))(v17, a1);
  uint64_t v7 = sub_2607E260C(a3, v5);
  uint64_t v15 = OUTLINED_FUNCTION_7_10(v7, v8, v9, v10, v11, v12, v13, v14, v17[0]);
  return v6(v15);
}

uint64_t (*FluidTouchGestureReportProtocol.y.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_4_10(a1, a2, a3);
  *double v3 = FluidTouchGestureReportProtocol.y.getter();
  return sub_26081F590;
}

uint64_t sub_26081F590(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_9(a1);
  return FluidTouchGestureReportProtocol.y.setter(v1, v2, v3);
}

void (*FluidTouchGestureReportProtocol.velocity.modify())(double **a1, uint64_t a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_16_8();
  uint64_t v2 = OUTLINED_FUNCTION_13_7(v1);
  *(double *)uint64_t v0 = FluidTouchGestureReportProtocol.velocity.getter(v2, v3);
  *(void *)(v0 + 8) = v4;
  *(void *)(v0 + 16) = 0;
  return sub_26081F610;
}

void sub_26081F610(double **a1, uint64_t a2)
{
}

void sub_26081F628(uint64_t a1@<X1>, uint64_t a2@<X2>, double (*a3)(void, void)@<X3>, uint64_t a4@<X8>)
{
  *(double *)a4 = a3(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *(void *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = 0;
}

uint64_t sub_26081F664(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, double, double))
{
  return a5(*(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8), *a1, a1[1]);
}

void (*FluidTouchGestureReportProtocol.delta.modify())(double **a1, uint64_t a2)
{
  uint64_t v1 = OUTLINED_FUNCTION_16_8();
  uint64_t v2 = OUTLINED_FUNCTION_13_7(v1);
  *(double *)uint64_t v0 = FluidTouchGestureReportProtocol.delta.getter(v2, v3);
  *(void *)(v0 + 8) = v4;
  *(void *)(v0 + 16) = 0;
  return sub_26081F6F8;
}

void sub_26081F6F8(double **a1, uint64_t a2)
{
}

void sub_26081F710(double **a1, uint64_t a2, void (*a3)(void, void, double, double))
{
  uint64_t v3 = *a1;
  a3(*((void *)*a1 + 3), *((void *)*a1 + 4), *v3, v3[1]);
  free(v3);
}

void sub_26081F7F8(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
}

uint64_t sub_26081F824(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_26081F664(a1, a2, a3, a4, FluidTouchGestureReportProtocol.velocity.setter);
}

void sub_26081F858(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
}

uint64_t sub_26081F884(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_26081F664(a1, a2, a3, a4, FluidTouchGestureReportProtocol.delta.setter);
}

void type metadata accessor for FluidTouchGestureReport()
{
}

void type metadata accessor for DockSwipeReport()
{
}

void type metadata accessor for NavigationSwipeReport()
{
}

__n128 OUTLINED_FUNCTION_1_17(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_17()
{
  return 16;
}

uint64_t OUTLINED_FUNCTION_3_13(void *a1, uint64_t a2, uint64_t a3)
{
  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_10(void *a1, uint64_t a2, uint64_t a3)
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_5_9(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t *OUTLINED_FUNCTION_7_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t *OUTLINED_FUNCTION_8_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t OUTLINED_FUNCTION_13_7(void *a1)
{
  *uint64_t v4 = a1;
  a1[4] = v1;
  a1[5] = v2;
  a1[3] = v3;
  return v3;
}

double OUTLINED_FUNCTION_15_7()
{
  return (double)v0 * 0.0000152587891;
}

void *OUTLINED_FUNCTION_16_8()
{
  return malloc(0x30uLL);
}

uint64_t KeyboardGesture.dispatch(keyboardReport:localCapsLockState:)(unint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v88 = *MEMORY[0x263EF8340];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v67 - v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v67 - v15;
  uint64_t v83 = MEMORY[0x263F8EE78];
  v82[16] = a3;
  unint64_t v86 = a1;
  unint64_t v87 = a2;
  if (*(unsigned char *)(v4 + 32) == 1)
  {
    sub_2607DCED0(a1, a2);
    if (((((_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0() & 1) == 0) ^ a3) & 1) == 0)
    {
      OUTLINED_FUNCTION_15_8();
      sub_260806EA4(v4 + qword_26A8B4B88, (uint64_t)v16);
      uint64_t v17 = sub_26087B120();
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
      {
        sub_26081B044((uint64_t)v16);
      }
      else
      {
        unint64_t v21 = sub_26087B100();
        os_log_type_t v22 = sub_26087B530();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          OUTLINED_FUNCTION_0_15((float *)v23, 1.5047e-36);
          *(_WORD *)(v23 + 8) = 1024;
          OUTLINED_FUNCTION_16_9(v11 & 1);
          _os_log_impl(&dword_2607D9000, v21, v22, "Caps Lock resync: %{BOOL}d -> %{BOOL}d", (uint8_t *)v23, 0xEu);
          MEMORY[0x26121DB90](v23, -1, -1);
        }

        OUTLINED_FUNCTION_5_0();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v17);
      }
    }
    OUTLINED_FUNCTION_26_3();
    MEMORY[0x270FA5388](v25);
    OUTLINED_FUNCTION_25_3((uint64_t)&v67);
    char v26 = sub_260823738((uint64_t (*)(uint64_t *))sub_26082424C, (uint64_t)(&v67 - 4), a1, a2);
    OUTLINED_FUNCTION_40();
    if (v26)
    {
      HIDReport.offset(for:)(65);
      if ((sub_26087B080() & 2) != 0)
      {
        HIDReport.offset(for:)(65);
        sub_26087B080();
        sub_26087AFD0();
      }
    }
  }
  else
  {
    sub_2607DCED0(a1, a2);
    if (((((_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0() & 1) == 0) ^ a3) & 1) == 0)
    {
      unint64_t v70 = v11;
      int v71 = a3;
      OUTLINED_FUNCTION_26_3();
      MEMORY[0x270FA5388](v18);
      OUTLINED_FUNCTION_25_3((uint64_t)&v67);
      char v19 = sub_260823738((uint64_t (*)(uint64_t *))sub_260823E94, (uint64_t)(&v67 - 4), a1, a2);
      OUTLINED_FUNCTION_40();
      if (v19)
      {
        OUTLINED_FUNCTION_15_8();
        sub_260806EA4(v4 + qword_26A8B4B88, (uint64_t)v14);
        uint64_t v20 = sub_26087B120();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v20) == 1)
        {
          sub_26081B044((uint64_t)v14);
        }
        else
        {
          unint64_t v49 = sub_26087B100();
          os_log_type_t v50 = sub_26087B530();
          if (os_log_type_enabled(v49, v50))
          {
            uint64_t v51 = swift_slowAlloc();
            OUTLINED_FUNCTION_0_15((float *)v51, 1.5047e-36);
            *(_WORD *)(v51 + 8) = 1024;
            OUTLINED_FUNCTION_16_9(v11 & 1);
            _os_log_impl(&dword_2607D9000, v49, v50, "Caps Lock pressed, toggle state: %{BOOL}d -> %{BOOL}d", (uint8_t *)v51, 0xEu);
            MEMORY[0x26121DB90](v51, -1, -1);
          }

          OUTLINED_FUNCTION_5_0();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v20);
        }
      }
      else
      {
        uint64_t v68 = v4;
        sub_2607DCED0(a1, a2);
        uint64_t v69 = 0;
        uint64_t v80 = (uint64_t)a1 >> 32;
        uint64_t v81 = (int)a1;
        unint64_t v78 = a1 >> 8;
        uint64_t v79 = BYTE6(a2);
        unint64_t v76 = a1 >> 24;
        unint64_t v77 = a1 >> 16;
        unint64_t v74 = a1 >> 40;
        unint64_t v75 = HIDWORD(a1);
        unint64_t v73 = HIWORD(a1);
        unint64_t v72 = HIBYTE(a1);
        uint64_t v27 = 1;
        while (2)
        {
          while ((unint64_t)(v27 - 232) <= 0xFFFFFFFFFFFFFF18)
          {
LABEL_39:
            BOOL v32 = v27++ <= 230;
            if (!v32) {
              goto LABEL_45;
            }
          }
          unint64_t v28 = v27 + 8;
          uint64_t v29 = 0;
          switch(a2 >> 62)
          {
            case 1uLL:
              uint64_t v29 = v81;
              break;
            case 2uLL:
              uint64_t v29 = *(void *)(a1 + 16);
              break;
            default:
              break;
          }
          uint64_t v30 = v29 + (v28 >> 3);
          if (!__OFADD__(v29, v28 >> 3))
          {
            switch(a2 >> 62)
            {
              case 1uLL:
                BOOL v32 = v30 >= v81 && v30 < v80;
                if (!v32) {
                  goto LABEL_64;
                }
                uint64_t v33 = sub_26087AED0();
                if (!v33)
                {
LABEL_72:
                  __break(1u);
LABEL_73:
                  __break(1u);
                  JUMPOUT(0x260820494);
                }
                uint64_t v34 = v33;
                uint64_t v35 = sub_26087AEF0();
                uint64_t v36 = v30 - v35;
                if (!__OFSUB__(v30, v35)) {
                  goto LABEL_37;
                }
                goto LABEL_66;
              case 2uLL:
                if (v30 < *(void *)(a1 + 16)) {
                  goto LABEL_65;
                }
                if (v30 >= *(void *)(a1 + 24)) {
                  goto LABEL_67;
                }
                uint64_t v37 = sub_26087AED0();
                if (!v37) {
                  goto LABEL_73;
                }
                uint64_t v34 = v37;
                uint64_t v38 = sub_26087AEF0();
                uint64_t v36 = v30 - v38;
                if (__OFSUB__(v30, v38)) {
                  goto LABEL_68;
                }
LABEL_37:
                int v31 = *(unsigned __int8 *)(v34 + v36);
LABEL_38:
                if ((v31 & (1 << (v27 & 7))) == 0) {
                  goto LABEL_39;
                }
                uint64_t v39 = sub_260820978(&v84);
                uint64_t v40 = v84;
                unint64_t v41 = v85;
                v82[0] = v27;
                MEMORY[0x270FA5388](v39);
                *(&v67 - 2) = (uint64_t)v82;
                char v42 = sub_260823738((uint64_t (*)(uint64_t *))sub_26082424C, (uint64_t)(&v67 - 4), v40, v41);
                sub_2607DCF28(v40, v41);
                if (v42)
                {
                  OUTLINED_FUNCTION_40();
                  goto LABEL_60;
                }
                if (__OFADD__(v69++, 1)) {
                  __break(1u);
                }
                if ((unint64_t)v27++ < 0xE7) {
                  continue;
                }
LABEL_45:
                OUTLINED_FUNCTION_40();
                uint64_t v45 = v68;
                uint64_t v46 = (uint64_t)v70;
                if (!v69) {
                  goto LABEL_60;
                }
                OUTLINED_FUNCTION_15_8();
                sub_260806EA4(v45 + qword_26A8B4B88, v46);
                uint64_t v47 = sub_26087B120();
                if (__swift_getEnumTagSinglePayload(v46, 1, v47) == 1)
                {
                  sub_26081B044(v46);
                  uint64_t v48 = MEMORY[0x263F8EE78];
                }
                else
                {
                  uint64_t v53 = sub_26087B100();
                  os_log_type_t v54 = sub_26087B530();
                  if (os_log_type_enabled(v53, v54))
                  {
                    uint64_t v55 = swift_slowAlloc();
                    OUTLINED_FUNCTION_0_15((float *)v55, 1.5047e-36);
                    *(_WORD *)(v55 + 8) = 1024;
                    OUTLINED_FUNCTION_16_9(v27 & 1);
                    _os_log_impl(&dword_2607D9000, v53, v54, "Caps Lock resync: %{BOOL}d -> %{BOOL}d", (uint8_t *)v55, 0xEu);
                    MEMORY[0x26121DB90](v55, -1, -1);
                  }

                  OUTLINED_FUNCTION_5_0();
                  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v46, v47);
                  uint64_t v48 = v83;
                }
                mach_absolute_time();
                OUTLINED_FUNCTION_24_3();
                IOHIDEventCreateKeyboardEvent();
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  goto LABEL_55;
                }
                goto LABEL_69;
              case 3uLL:
                __break(1u);
                goto LABEL_72;
              default:
                if (v30 >= v79) {
                  goto LABEL_63;
                }
                LOBYTE(v84) = v81;
                BYTE1(v84) = v78;
                BYTE2(v84) = v77;
                BYTE3(v84) = v76;
                BYTE4(v84) = v75;
                BYTE5(v84) = v74;
                BYTE6(v84) = v73;
                HIBYTE(v84) = v72;
                LOWORD(v85) = a2;
                BYTE2(v85) = BYTE2(a2);
                BYTE3(v85) = BYTE3(a2);
                BYTE4(v85) = BYTE4(a2);
                BYTE5(v85) = BYTE5(a2);
                int v31 = *((unsigned __int8 *)&v84 + v30);
                goto LABEL_38;
            }
          }
          break;
        }
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        sub_260822518();
        uint64_t v48 = v64;
LABEL_55:
        if (*(void *)(v48 + 16) >= *(void *)(v48 + 24) >> 1)
        {
          OUTLINED_FUNCTION_7_8();
          uint64_t v48 = v65;
        }
        OUTLINED_FUNCTION_9_11();
        mach_absolute_time();
        OUTLINED_FUNCTION_24_3();
        IOHIDEventCreateKeyboardEvent();
        if (*(void *)(v48 + 16) >= *(void *)(v48 + 24) >> 1)
        {
          OUTLINED_FUNCTION_7_8();
          uint64_t v48 = v66;
        }
        OUTLINED_FUNCTION_9_11();
        uint64_t v83 = v48;
      }
    }
  }
LABEL_60:
  uint64_t v57 = v86;
  unint64_t v58 = v87;
  sub_260820978(&v84);
  uint64_t v59 = v84;
  unint64_t v60 = v85;
  sub_2607DCED0(v57, v58);
  uint64_t v61 = sub_260820C24(v57, v58, v59, v60);
  sub_2607DCF28(v59, v60);
  sub_2607DCF28(v57, v58);
  sub_26084C044(v61);
  uint64_t v62 = v83;
  sub_2607DCED0(v57, v58);
  swift_bridgeObjectRetain();
  sub_26082219C(v57, v58, v62);
  sub_2607DCF28(v57, v58);
  swift_bridgeObjectRelease();
  sub_2607DCED0(v57, v58);
  sub_260820A58(v57, v58);
  sub_2607DCF28(v57, v58);
  swift_beginAccess();
  return v62;
}

uint64_t AppleVendorTopCaseGesture.__allocating_init()()
{
  return _s12UniversalHID25AppleVendorTopCaseGestureCACycfc_0();
}

uint64_t AppleVendorKeyboardGesture.__allocating_init()()
{
  return _s12UniversalHID26AppleVendorKeyboardGestureCACycfc_0();
}

uint64_t ConsumerGesture.__allocating_init()()
{
  return _s12UniversalHID15ConsumerGestureCACycfc_0();
}

uint64_t KeyboardGesture.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = 0;
  sub_260806EA4(a1, (uint64_t)v4);
  swift_allocObject();
  uint64_t v5 = KeyboardGesture.init(platform:logger:)(&v8, (uint64_t)v4);
  sub_26081B044(a1);
  return v5;
}

uint64_t _s12UniversalHID25AppleVendorTopCaseGestureCACycfc_0()
{
  if (qword_26A8B44B0 != -1) {
    swift_once();
  }
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(4u);
  *(void *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 4);
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t _s12UniversalHID26AppleVendorKeyboardGestureCACycfc_0()
{
  if (qword_26A8B44C8 != -1) {
    swift_once();
  }
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(3u);
  *(void *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 3);
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t _s12UniversalHID15ConsumerGestureCACycfc_0()
{
  if (qword_26A8B44D8 != -1) {
    swift_once();
  }
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(2u);
  *(void *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 2);
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_260820774()
{
  if (qword_26A8B44C0 != -1) {
    swift_once();
  }
  uint64_t v1 = HIDReportDescriptor.reportBitCount(for:)(1u);
  *(void *)(v0 + 16) = HIDReport.init(bitCount:id:)(v1, 1);
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t GenericKeyboardGesture.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(uint64_t))(*(void *)(v6 + 88) + 32))(v2);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v1 + *(void *)(*(void *)v1 + 96), v5, v2);
  return v1;
}

uint64_t GenericKeyboardGesture.deinit()
{
  OUTLINED_FUNCTION_5_0();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t sub_260820978@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v1 + 24);
  *a1 = v3;
  a1[1] = v4;
  return sub_2607DCED0(v3, v4);
}

uint64_t sub_2608209C0@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v4 = v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  OUTLINED_FUNCTION_22_5();
  OUTLINED_FUNCTION_5_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t sub_260820A58(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  unint64_t v6 = *(void *)(v2 + 24);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_2607DCF28(v5, v6);
}

uint64_t sub_260820AAC(uint64_t a1)
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v4 = v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  OUTLINED_FUNCTION_22_5();
  OUTLINED_FUNCTION_5_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t ConsumerGesture.deinit()
{
  sub_2607DCF28(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return v0;
}

uint64_t _s12UniversalHID26AppleVendorKeyboardGestureCfD_0()
{
  sub_2607DCF28(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t GenericKeyboardGesture.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  GenericKeyboardGesture.init()();
  return v0;
}

uint64_t GenericKeyboardGesture.__deallocating_deinit()
{
  GenericKeyboardGesture.deinit();
  OUTLINED_FUNCTION_7_11();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x270FA0228](v0, v2, v3);
}

uint64_t sub_260820C24(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v16 = a3;
  unint64_t v17 = a4;
  sub_2607DCED0(a3, a4);
  sub_2607DCED0(a3, a4);
  sub_2607DCED0(a1, a2);
  sub_2607FDF9C(&v16, a1, a2);
  uint64_t v18 = a3;
  unint64_t v19 = a4;
  sub_2607FE024(&v18, v16, v17);
  uint64_t v8 = v18;
  unint64_t v9 = v19;
  uint64_t v10 = sub_2608211AC(v18, v19);
  sub_2607DCF28(v8, v9);
  uint64_t v16 = a1;
  unint64_t v17 = a2;
  sub_2607DCED0(a1, a2);
  sub_2607DCED0(a3, a4);
  sub_2607DCED0(a1, a2);
  sub_2607FDF9C(&v16, a3, a4);
  uint64_t v18 = a1;
  unint64_t v19 = a2;
  sub_2607FE024(&v18, v16, v17);
  uint64_t v11 = v18;
  unint64_t v12 = v19;
  uint64_t v13 = sub_2608214F8(v18, v19);
  sub_2607DCF28(v11, v12);
  uint64_t v18 = v10;
  sub_26084BF20(v13);
  uint64_t v14 = sub_26082DFF4(v18);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_260820D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a8;
  uint64_t v36 = a7;
  uint64_t v35 = a6;
  uint64_t v34 = a5;
  uint64_t v33 = a4;
  uint64_t v31 = a2;
  uint64_t v26 = a1;
  uint64_t v37 = a11;
  uint64_t v30 = *v11;
  uint64_t v13 = *(void *)(a3 - 8);
  uint64_t v28 = a10;
  uint64_t v14 = MEMORY[0x270FA5388](a1);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v29 = *(void (**)(char *))(v13 + 16);
  v29(v16);
  sub_26087B740();
  uint64_t v27 = *(void *)(v30 + 80);
  uint64_t v50 = v27;
  uint64_t v51 = a3;
  uint64_t v52 = v33;
  uint64_t v53 = v34;
  uint64_t v54 = v35;
  uint64_t v55 = v36;
  uint64_t v19 = v32;
  uint64_t v56 = v32;
  uint64_t v57 = a9;
  uint64_t v58 = a10;
  uint64_t v59 = v37;
  uint64_t v30 = sub_260821844((void (*)(char *, char *))sub_260824178, (uint64_t)v49, a3, (uint64_t)&type metadata for KeyboardEvent, MEMORY[0x263F8E628], v32, MEMORY[0x263F8E658], v20);
  unint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v18, a3);
  ((void (*)(char *, uint64_t, uint64_t))v29)(v16, v26, a3);
  sub_26087B740();
  uint64_t v39 = v27;
  uint64_t v40 = a3;
  uint64_t v41 = v33;
  uint64_t v42 = v34;
  uint64_t v43 = v35;
  uint64_t v44 = v36;
  uint64_t v45 = v19;
  uint64_t v46 = a9;
  uint64_t v47 = v28;
  uint64_t v48 = v37;
  uint64_t v23 = sub_260821844((void (*)(char *, char *))sub_2608241A4, (uint64_t)v38, a3, (uint64_t)&type metadata for KeyboardEvent, MEMORY[0x263F8E628], v19, MEMORY[0x263F8E658], v22);
  v21(v18, a3);
  uint64_t v60 = v30;
  sub_26084BF20(v23);
  uint64_t v24 = sub_26082DFF4(v60);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_2608210E4@<X0>(uint64_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5(AssociatedTypeWitness, a4);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(AssociatedTypeWitness, a4);
  mach_absolute_time();
  uint64_t result = IOHIDEventCreateKeyboardEvent();
  *a1 = result;
  return result;
}

uint64_t sub_2608211AC(uint64_t a1, unint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_26087B890();
  sub_2607DCED0(a1, a2);
  for (unint64_t i = -255; ; ++i)
  {
    if (i > 0xFFFFFFFFFFFFFF00)
    {
      unint64_t v5 = i + 264;
      uint64_t v6 = 0;
      switch(a2 >> 62)
      {
        case 1uLL:
          uint64_t v6 = (int)a1;
          break;
        case 2uLL:
          uint64_t v6 = *(void *)(a1 + 16);
          break;
        default:
          break;
      }
      uint64_t v7 = v6 + (v5 >> 3);
      if (__OFADD__(v6, v5 >> 3))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
      }
      switch(a2 >> 62)
      {
        case 1uLL:
          if (v7 < (int)a1 || v7 >= a1 >> 32) {
            goto LABEL_31;
          }
          uint64_t v10 = sub_26087AED0();
          if (!v10) {
            goto LABEL_37;
          }
          uint64_t v11 = v10;
          uint64_t v12 = sub_26087AEF0();
          uint64_t v13 = v7 - v12;
          if (!__OFSUB__(v7, v12)) {
            goto LABEL_23;
          }
          goto LABEL_33;
        case 2uLL:
          if (v7 < *(void *)(a1 + 16)) {
            goto LABEL_32;
          }
          if (v7 >= *(void *)(a1 + 24)) {
            goto LABEL_34;
          }
          uint64_t v14 = sub_26087AED0();
          if (!v14) {
            goto LABEL_38;
          }
          uint64_t v11 = v14;
          uint64_t v15 = sub_26087AEF0();
          uint64_t v13 = v7 - v15;
          if (__OFSUB__(v7, v15)) {
            goto LABEL_35;
          }
LABEL_23:
          int v8 = *(unsigned __int8 *)(v11 + v13);
LABEL_24:
          if ((v8 & (1 << (i & 7))) != 0)
          {
            mach_absolute_time();
            IOHIDEventCreateKeyboardEvent();
            sub_26087B860();
            sub_26087B8A0();
            sub_26087B8B0();
            sub_26087B870();
          }
          break;
        case 3uLL:
          goto LABEL_36;
        default:
          if (v7 >= BYTE6(a2)) {
            goto LABEL_30;
          }
          uint64_t v17 = a1;
          __int16 v18 = a2;
          char v19 = BYTE2(a2);
          char v20 = BYTE3(a2);
          char v21 = BYTE4(a2);
          char v22 = BYTE5(a2);
          int v8 = *((unsigned __int8 *)&v17 + v7);
          goto LABEL_24;
      }
    }
    if (i + 256 > 0xE6) {
      break;
    }
  }
  sub_2607DCF28(a1, a2);
  return v23;
}

uint64_t sub_2608214F8(uint64_t a1, unint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_26087B890();
  sub_2607DCED0(a1, a2);
  for (unint64_t i = -255; ; ++i)
  {
    if (i > 0xFFFFFFFFFFFFFF00)
    {
      unint64_t v5 = i + 264;
      uint64_t v6 = 0;
      switch(a2 >> 62)
      {
        case 1uLL:
          uint64_t v6 = (int)a1;
          break;
        case 2uLL:
          uint64_t v6 = *(void *)(a1 + 16);
          break;
        default:
          break;
      }
      uint64_t v7 = v6 + (v5 >> 3);
      if (__OFADD__(v6, v5 >> 3))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
      }
      switch(a2 >> 62)
      {
        case 1uLL:
          if (v7 < (int)a1 || v7 >= a1 >> 32) {
            goto LABEL_31;
          }
          uint64_t v10 = sub_26087AED0();
          if (!v10) {
            goto LABEL_37;
          }
          uint64_t v11 = v10;
          uint64_t v12 = sub_26087AEF0();
          uint64_t v13 = v7 - v12;
          if (!__OFSUB__(v7, v12)) {
            goto LABEL_23;
          }
          goto LABEL_33;
        case 2uLL:
          if (v7 < *(void *)(a1 + 16)) {
            goto LABEL_32;
          }
          if (v7 >= *(void *)(a1 + 24)) {
            goto LABEL_34;
          }
          uint64_t v14 = sub_26087AED0();
          if (!v14) {
            goto LABEL_38;
          }
          uint64_t v11 = v14;
          uint64_t v15 = sub_26087AEF0();
          uint64_t v13 = v7 - v15;
          if (__OFSUB__(v7, v15)) {
            goto LABEL_35;
          }
LABEL_23:
          int v8 = *(unsigned __int8 *)(v11 + v13);
LABEL_24:
          if ((v8 & (1 << (i & 7))) != 0)
          {
            mach_absolute_time();
            IOHIDEventCreateKeyboardEvent();
            sub_26087B860();
            sub_26087B8A0();
            sub_26087B8B0();
            sub_26087B870();
          }
          break;
        case 3uLL:
          goto LABEL_36;
        default:
          if (v7 >= BYTE6(a2)) {
            goto LABEL_30;
          }
          uint64_t v17 = a1;
          __int16 v18 = a2;
          char v19 = BYTE2(a2);
          char v20 = BYTE3(a2);
          char v21 = BYTE4(a2);
          char v22 = BYTE5(a2);
          int v8 = *((unsigned __int8 *)&v17 + v7);
          goto LABEL_24;
      }
    }
    if (i + 256 > 0xE6) {
      break;
    }
  }
  sub_2607DCF28(a1, a2);
  return v23;
}

uint64_t sub_260821844(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v56 = a4;
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)v40 - v17;
  uint64_t v18 = sub_26087B620();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  v40[1] = (char *)v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v50 = (char *)v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v59 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v30 = (char *)v40 - v29;
  uint64_t v31 = sub_26087B390();
  uint64_t v60 = sub_26087B8D0();
  uint64_t v56 = sub_26087B8E0();
  sub_26087B880();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v50, v48, v52);
  uint64_t result = sub_26087B380();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_26087B630();
      uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v33)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v33)(v23, AssociatedTypeWitness);
      sub_26087B8C0();
      if (!--v31)
      {
        uint64_t v34 = v54;
        uint64_t v35 = (uint64_t)v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v34 = v54;
  uint64_t v35 = (uint64_t)v51;
LABEL_9:
  sub_26087B630();
  if (__swift_getEnumTagSinglePayload(v35, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v36 = (uint64_t)v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v36, v46);
    return v60;
  }
  else
  {
    uint64_t v37 = *(char **)(v34 + 32);
    uint64_t v54 = v34 + 32;
    uint64_t v55 = v37;
    uint64_t v38 = (void (**)(char *, uint64_t))(v34 + 8);
    uint64_t v39 = v41;
    uint64_t v36 = (uint64_t)v51;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v55)(v39, v36, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_26087B8C0();
      sub_26087B630();
      if (__swift_getEnumTagSinglePayload(v36, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_260821F1C@<X0>(uint64_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5(AssociatedTypeWitness, a4);
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(AssociatedTypeWitness, a4);
  mach_absolute_time();
  uint64_t result = IOHIDEventCreateKeyboardEvent();
  *a1 = result;
  return result;
}

uint64_t GenericKeyboardGesture<>.dispatch(report:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v11 = *(void *)(*(void *)v6 + 80);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - v16;
  sub_2608209C0((uint64_t)&v25 - v16);
  uint64_t v24 = a3;
  uint64_t v18 = a3;
  uint64_t v19 = v27;
  uint64_t v20 = sub_260820D78(a1, (uint64_t)v17, v11, a2, v18, v26, v27, a2, v24, a6, a6);
  uint64_t v28 = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4B90);
  unint64_t v22 = sub_260823EB4();
  Sequence<>.addRemoteTimestamp<A>(from:)(a1, v21, v11, v22, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v11);
  sub_260820AAC((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v20;
}

uint64_t sub_26082219C(uint64_t result, unint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(result) - result;
      if (__OFSUB__(HIDWORD(result), result)) {
        goto LABEL_16;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      if (v4 >= 39)
      {
        uint64_t result = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(248, result, a2);
        if (result)
        {
          uint64_t v13 = result;
          uint64_t v8 = sub_2607E67C8((uint64_t)&v13, (uint64_t)&v14);
          unint64_t v10 = v9;
          uint64_t v11 = *(void *)(a3 + 16);
          if (v11)
          {
            uint64_t v12 = (void *)(a3 + 32);
            swift_bridgeObjectRetain();
            do
            {
              __swift_project_boxed_opaque_existential_1(v12, v12[3]);
              HIDEventProtocol.addRemoteTimestampChildEvent(_:)();
              v12 += 5;
              --v11;
            }
            while (v11);
            swift_bridgeObjectRelease();
          }
          return sub_2607DCF28(v8, v10);
        }
      }
      return result;
    case 2uLL:
      uint64_t v6 = *(void *)(result + 16);
      uint64_t v5 = *(void *)(result + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_17;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_26082231C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return GenericKeyboardGesture<>.dispatch(report:)(a1, *(void *)(a3 - 8), *(void *)(a3 - 16), *(void *)(a3 - 24), *(void *)(a3 - 32), *(void *)(a3 - 40));
}

void KeyboardGesture.platform.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t KeyboardGesture.__allocating_init(platform:logger:)(unsigned char *a1, uint64_t a2)
{
  return KeyboardGesture.init(platform:logger:)(a1, a2);
}

uint64_t KeyboardGesture.init(platform:logger:)(unsigned char *a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 32) = *a1;
  sub_260806EA4(a2, v2 + qword_26A8B4B88);
  uint64_t v4 = sub_260820774();
  sub_26081B044(a2);
  return v4;
}

void KeyboardGesture.__allocating_init()()
{
}

void KeyboardGesture.init()()
{
}

uint64_t sub_260822458()
{
  return sub_26081B044(v0 + qword_26A8B4B88);
}

uint64_t KeyboardGesture.deinit()
{
  sub_2607DCF28(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_26081B044(v0 + qword_26A8B4B88);
  return v0;
}

uint64_t KeyboardGesture.__deallocating_deinit()
{
  sub_2607DCF28(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_26081B044(v0 + qword_26A8B4B88);
  OUTLINED_FUNCTION_7_11();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);
  return MEMORY[0x270FA0228](v0, v2, v3);
}

void sub_2608224E4(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_260822518()
{
  OUTLINED_FUNCTION_20_4();
  if (v2)
  {
    OUTLINED_FUNCTION_10_3();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_3();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_8_12(v5);
  }
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_12_11();
    sub_2607E8A70(v6);
    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_5_10();
    sub_260822B40(v7, v8, v9, v10);
  }
}

void sub_2608225BC()
{
  OUTLINED_FUNCTION_20_4();
  if (v3)
  {
    OUTLINED_FUNCTION_10_3();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_16_3();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4C68);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    uint64_t v8 = OUTLINED_FUNCTION_12_11();
    sub_2607E8AD8(v8);
    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_5_10();
    sub_260822C60(v9, v10, v11, v12);
  }
}

void sub_26082266C(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_2608226A0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_10_3();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_16_3();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v16 = (void *)swift_allocObject();
    size_t v17 = _swift_stdlib_malloc_size(v16);
    uint64_t v16[2] = v14;
    void v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v18 = v16 + 4;
  if (a1)
  {
    a7(a4 + 32, v14, v18);
    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

void sub_260822788()
{
  OUTLINED_FUNCTION_20_4();
  if (v2)
  {
    OUTLINED_FUNCTION_10_3();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_3();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4C70);
    char v5 = (void *)OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_8_12(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)OUTLINED_FUNCTION_12_11();
    sub_2607E8C40(v6, v7, v8);
    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_5_10();
    sub_260822E44(v9, v10, v11, v12);
  }
}

void sub_26082282C()
{
  OUTLINED_FUNCTION_20_4();
  if (v3)
  {
    OUTLINED_FUNCTION_10_3();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_16_3();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B46C0);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 4);
  }
  if (v0)
  {
    uint64_t v8 = (char *)OUTLINED_FUNCTION_12_11();
    sub_2607E8A14(v8, v9, v10);
    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_5_10();
    sub_260822F64(v11, v12, v13, v14);
  }
}

void sub_2608228E8()
{
  OUTLINED_FUNCTION_20_4();
  if (v2)
  {
    OUTLINED_FUNCTION_10_3();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_3();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4C60);
    char v5 = (void *)OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_8_12(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)OUTLINED_FUNCTION_12_11();
    sub_2607E8E6C(v6, v7, v8);
    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_5_10();
    sub_260823058(v9, v10, v11, v12);
  }
}

void sub_26082298C()
{
  OUTLINED_FUNCTION_20_4();
  if (v3)
  {
    OUTLINED_FUNCTION_10_3();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_16_3();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_3();
    }
  }
  OUTLINED_FUNCTION_12_3();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B46E0);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 8);
  }
  if (v0)
  {
    uint64_t v8 = (char *)OUTLINED_FUNCTION_12_11();
    sub_2607E8BE0(v8, v9, v10);
    OUTLINED_FUNCTION_10_11();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_5_10();
    sub_260823154(v11, v12, v13, v14);
  }
}

uint64_t sub_260822A48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_26087BA10();
  __break(1u);
  return result;
}

uint64_t sub_260822B40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8B50C0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_26087BA10();
  __break(1u);
  return result;
}

char *sub_260822C60(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_26087BA10();
  __break(1u);
  return result;
}

char *sub_260822D50(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_26087BA10();
  __break(1u);
  return result;
}

uint64_t sub_260822E44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4C78);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_26087BA10();
  __break(1u);
  return result;
}

char *sub_260822F64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    unint64_t v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_26087BA10();
  __break(1u);
  return result;
}

char *sub_260823058(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 144 * a1 + 32);
    uint64_t v6 = 9 * v4;
    size_t v7 = &__dst[16 * v6];
    if (v5 >= v7 || &v5[16 * v6] <= __dst)
    {
      memcpy(__dst, v5, 16 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)sub_26087BA10();
  __break(1u);
  return result;
}

char *sub_260823154(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    uint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_26087BA10();
  __break(1u);
  return result;
}

uint64_t sub_260823248(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = OUTLINED_FUNCTION_3_14(a1, a2, a3, a4);
  uint64_t v9 = 0;
  for (unint64_t i = 0; (i - 0x1000000000000000) >> 61 == 7; ++i)
  {
    uint64_t result = v9 + 8;
    if (__OFADD__(v9, 8)) {
      goto LABEL_16;
    }
    uint64_t result = sub_2607DB19C(result, v6, v5);
    if ((result - 3) >= 3u)
    {
      if (i > 2)
      {
LABEL_11:
        OUTLINED_FUNCTION_6_12();
        char v11 = 0;
        return OUTLINED_FUNCTION_21_7(v11);
      }
    }
    else
    {
      OUTLINED_FUNCTION_20_7();
      uint64_t result = v7();
      if (v4)
      {
        OUTLINED_FUNCTION_6_12();
        return OUTLINED_FUNCTION_21_7(v11);
      }
      if (result)
      {
        OUTLINED_FUNCTION_6_12();
        char v11 = 1;
        return OUTLINED_FUNCTION_21_7(v11);
      }
      if (i >= 3) {
        goto LABEL_11;
      }
    }
    v9 += 8;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_26082332C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  unint64_t v7 = a4 >> 62;
  sub_2607DCED0(a3, a4);
  uint64_t v27 = BYTE6(a4);
  unint64_t v8 = -255;
  unint64_t v26 = a4 >> 8;
  unint64_t v28 = a4;
  unint64_t v24 = a4 >> 24;
  unint64_t v25 = a4 >> 16;
  while (1)
  {
    if (v8 > 0xFFFFFFFFFFFFFF00)
    {
      unint64_t v9 = v8 + 264;
      uint64_t v10 = 0;
      switch((int)v7)
      {
        case 1:
          uint64_t v10 = (int)a3;
          break;
        case 2:
          uint64_t v10 = *(void *)(a3 + 16);
          break;
        default:
          break;
      }
      uint64_t v11 = v10 + (v9 >> 3);
      if (__OFADD__(v10, v9 >> 3))
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
      }
      switch((int)v7)
      {
        case 1:
          if (v11 < (int)a3 || v11 >= a3 >> 32) {
            goto LABEL_35;
          }
          uint64_t v14 = sub_26087AED0();
          if (!v14) {
            goto LABEL_41;
          }
          uint64_t v15 = v14;
          uint64_t v16 = sub_26087AEF0();
          uint64_t v17 = v11 - v16;
          if (!__OFSUB__(v11, v16)) {
            goto LABEL_23;
          }
          goto LABEL_37;
        case 2:
          if (v11 < *(void *)(a3 + 16)) {
            goto LABEL_36;
          }
          if (v11 >= *(void *)(a3 + 24)) {
            goto LABEL_38;
          }
          uint64_t v18 = sub_26087AED0();
          if (!v18) {
            goto LABEL_42;
          }
          uint64_t v15 = v18;
          uint64_t v19 = sub_26087AEF0();
          uint64_t v17 = v11 - v19;
          if (__OFSUB__(v11, v19)) {
            goto LABEL_39;
          }
LABEL_23:
          int v12 = *(unsigned __int8 *)(v15 + v17);
LABEL_24:
          if ((v12 & (1 << (v8 & 7))) == 0) {
            break;
          }
          LOBYTE(v29) = v8;
          OUTLINED_FUNCTION_20_7();
          char v21 = v20();
          if (v4)
          {
            sub_2607DCF28(a3, v28);
            return OUTLINED_FUNCTION_21_7(v22);
          }
          if (v21)
          {
            sub_2607DCF28(a3, v28);
            char v22 = 1;
            return OUTLINED_FUNCTION_21_7(v22);
          }
          break;
        case 3:
          goto LABEL_40;
        default:
          if (v11 >= v27) {
            goto LABEL_34;
          }
          uint64_t v29 = a3;
          char v30 = v28;
          char v31 = v26;
          char v32 = v25;
          char v33 = v24;
          __int16 v34 = WORD2(v28);
          int v12 = *((unsigned __int8 *)&v29 + v11);
          goto LABEL_24;
      }
    }
    if (v8 + 256 > 0xE6) {
      break;
    }
    ++v8;
  }
  sub_2607DCF28(a3, v28);
  char v22 = 0;
  return OUTLINED_FUNCTION_21_7(v22);
}

uint64_t sub_260823648(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  OUTLINED_FUNCTION_3_14(a1, a2, a3, a4);
  uint64_t v8 = 0;
  while (1)
  {
    while (1)
    {
      unsigned __int8 v9 = sub_2607DB19C(8 * v8 + 8, v6, v5);
      if ((v9 - 49) > 0xCFu && v9 <= 0x21u && ((1 << v9) & 0x30003001ELL) != 0) {
        break;
      }
      BOOL v10 = v8 < 1;
      uint64_t v8 = 1;
      if (!v10) {
        goto LABEL_12;
      }
    }
    OUTLINED_FUNCTION_20_7();
    char v12 = v7();
    if (v4)
    {
      OUTLINED_FUNCTION_6_12();
      return OUTLINED_FUNCTION_21_7(v13);
    }
    if (v12) {
      break;
    }
    BOOL v10 = v8++ < 1;
    if (!v10)
    {
LABEL_12:
      OUTLINED_FUNCTION_6_12();
      char v13 = 0;
      return OUTLINED_FUNCTION_21_7(v13);
    }
  }
  OUTLINED_FUNCTION_6_12();
  char v13 = 1;
  return OUTLINED_FUNCTION_21_7(v13);
}

uint64_t sub_260823738(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  unint64_t v7 = a4 >> 62;
  sub_2607DCED0(a3, a4);
  uint64_t v8 = 1;
  do
  {
    while ((unint64_t)v8 < 0x100 && v8)
    {
      unint64_t v9 = v8 + 8;
      uint64_t v10 = 0;
      switch((int)v7)
      {
        case 1:
          uint64_t v10 = (int)a3;
          break;
        case 2:
          uint64_t v10 = *(void *)(a3 + 16);
          break;
        default:
          break;
      }
      uint64_t v11 = v10 + (v9 >> 3);
      if (__OFADD__(v10, v9 >> 3)) {
        goto LABEL_38;
      }
      switch((int)v7)
      {
        case 1:
          BOOL v13 = v11 >= (int)a3 && v11 < a3 >> 32;
          if (!v13) {
            goto LABEL_40;
          }
          uint64_t v14 = sub_26087AED0();
          if (!v14) {
            goto LABEL_46;
          }
          uint64_t v15 = v14;
          uint64_t v16 = sub_26087AEF0();
          uint64_t v17 = v11 - v16;
          if (!__OFSUB__(v11, v16)) {
            goto LABEL_24;
          }
          goto LABEL_42;
        case 2:
          if (v11 < *(void *)(a3 + 16)) {
            goto LABEL_41;
          }
          if (v11 >= *(void *)(a3 + 24)) {
            goto LABEL_43;
          }
          uint64_t v18 = sub_26087AED0();
          if (!v18) {
            goto LABEL_47;
          }
          uint64_t v15 = v18;
          uint64_t v19 = sub_26087AEF0();
          uint64_t v17 = v11 - v19;
          if (__OFSUB__(v11, v19)) {
            goto LABEL_44;
          }
LABEL_24:
          int v12 = *(unsigned __int8 *)(v15 + v17);
LABEL_25:
          if ((v12 & (1 << (v8 & 7))) == 0) {
            goto LABEL_31;
          }
          LOBYTE(v25) = v8;
          char v20 = a1(&v25);
          if (v4)
          {
            sub_2607DCF28(a3, a4);
            return v22 & 1;
          }
          if (v20)
          {
            sub_2607DCF28(a3, a4);
            char v22 = 1;
            return v22 & 1;
          }
          BOOL v13 = (unint64_t)v8++ > 0xE6;
          if (v13) {
            goto LABEL_33;
          }
          break;
        case 3:
          goto LABEL_45;
        default:
          if (v11 >= BYTE6(a4)) {
            goto LABEL_39;
          }
          uint64_t v25 = a3;
          __int16 v26 = a4;
          char v27 = BYTE2(a4);
          char v28 = BYTE3(a4);
          char v29 = BYTE4(a4);
          char v30 = BYTE5(a4);
          int v12 = *((unsigned __int8 *)&v25 + v11);
          goto LABEL_25;
      }
    }
LABEL_31:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
    }
  }
  while (v8 < 232);
LABEL_33:
  sub_2607DCF28(a3, a4);
  char v22 = 0;
  return v22 & 1;
}

#error "260823AB8: call analysis failed (funcsize=55)"

uint64_t sub_260823B44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  unint64_t v7 = a4 >> 62;
  sub_2607DCED0(a3, a4);
  uint64_t v8 = 0;
  uint64_t v28 = BYTE6(a4);
  unint64_t v27 = a4 >> 8;
  unint64_t v25 = a4 >> 24;
  unint64_t v26 = a4 >> 16;
  unint64_t v29 = a4;
  unint64_t v23 = a4 >> 40;
  unint64_t v24 = HIDWORD(a4);
  while (2)
  {
    uint64_t v9 = 0;
    switch((int)v7)
    {
      case 1:
        uint64_t v9 = (int)a3;
        break;
      case 2:
        uint64_t v9 = *(void *)(a3 + 16);
        break;
      default:
        break;
    }
    uint64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
    }
    switch((int)v7)
    {
      case 1:
        BOOL v12 = v10 >= (int)a3 && v10 < a3 >> 32;
        if (!v12) {
          goto LABEL_35;
        }
        uint64_t v13 = sub_26087AED0();
        if (!v13) {
          goto LABEL_41;
        }
        uint64_t v14 = v13;
        uint64_t v15 = sub_26087AEF0();
        uint64_t v16 = v10 - v15;
        if (!__OFSUB__(v10, v15)) {
          goto LABEL_22;
        }
        goto LABEL_37;
      case 2:
        if (v10 < *(void *)(a3 + 16)) {
          goto LABEL_36;
        }
        if (v10 >= *(void *)(a3 + 24)) {
          goto LABEL_38;
        }
        uint64_t v17 = sub_26087AED0();
        if (!v17) {
          goto LABEL_42;
        }
        uint64_t v14 = v17;
        uint64_t v18 = sub_26087AEF0();
        uint64_t v16 = v10 - v18;
        if (__OFSUB__(v10, v18)) {
          goto LABEL_39;
        }
LABEL_22:
        int v11 = *(unsigned __int8 *)(v14 + v16);
LABEL_23:
        if ((v11 & (1 << (v8 & 7))) != 0)
        {
          LOBYTE(v30) = v8;
          OUTLINED_FUNCTION_20_7();
          char v20 = v19();
          if (v4)
          {
            sub_2607DCF28(a3, v29);
            return OUTLINED_FUNCTION_21_7(v21);
          }
          if (v20)
          {
            sub_2607DCF28(a3, v29);
            char v21 = 1;
            return OUTLINED_FUNCTION_21_7(v21);
          }
          BOOL v12 = v8++ <= 1;
          if (!v12) {
            goto LABEL_29;
          }
          continue;
        }
        if (++v8 < 3) {
          continue;
        }
LABEL_29:
        sub_2607DCF28(a3, v29);
        char v21 = 0;
        return OUTLINED_FUNCTION_21_7(v21);
      case 3:
        goto LABEL_40;
      default:
        if (v10 >= v28) {
          goto LABEL_34;
        }
        uint64_t v30 = a3;
        char v31 = v29;
        char v32 = v27;
        char v33 = v26;
        char v34 = v25;
        char v35 = v24;
        char v36 = v23;
        int v11 = *((unsigned __int8 *)&v30 + v10);
        goto LABEL_23;
    }
  }
}

BOOL sub_260823E70(char *a1, char *a2)
{
  return sub_26083AF14(*a1, *a2);
}

BOOL sub_260823E94(char *a1)
{
  return sub_260823E70(a1, *(char **)(v1 + 16));
}

unint64_t sub_260823EB4()
{
  unint64_t result = qword_26A8B4B98;
  if (!qword_26A8B4B98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4B90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4B98);
  }
  return result;
}

uint64_t sub_260823F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 24);
}

uint64_t sub_260823F10(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t type metadata accessor for AppleVendorKeyboardGesture(uint64_t a1)
{
  return sub_2608116E0(a1, (uint64_t *)&unk_26A8B4BA0);
}

uint64_t type metadata accessor for AppleVendorTopCaseGesture(uint64_t a1)
{
  return sub_2608116E0(a1, (uint64_t *)&unk_26A8B4BB0);
}

uint64_t type metadata accessor for ConsumerGesture(uint64_t a1)
{
  return sub_2608116E0(a1, qword_26A8B4BC0);
}

uint64_t sub_260823F7C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_260823FB8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for GenericKeyboardGesture()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for GenericKeyboardGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenericKeyboardGesture);
}

uint64_t dispatch thunk of GenericKeyboardGesture.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for KeyboardGesture(uint64_t a1)
{
  return sub_2608116E0(a1, (uint64_t *)&unk_26A8B4C50);
}

void sub_2608240B0()
{
  sub_260811808();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for KeyboardGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for KeyboardGesture);
}

uint64_t dispatch thunk of KeyboardGesture.__allocating_init(platform:logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_260824178(uint64_t a1, uint64_t a2)
{
  return sub_2608241D0(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_2608210E4);
}

uint64_t sub_2608241A4(uint64_t a1, uint64_t a2)
{
  return sub_2608241D0(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_260821F1C);
}

uint64_t sub_2608241D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[10], v3[11], a2);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

BOOL sub_26082424C(char *a1)
{
  return sub_260823E94(a1);
}

uint64_t OUTLINED_FUNCTION_0_15(float *a1, float a2)
{
  *a1 = a2;
  *(_DWORD *)(v3 - 152) = v2 & 1;
  return sub_26087B650();
}

uint64_t OUTLINED_FUNCTION_3_14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_2607DCED0(a3, a4);
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return sub_2607DCF28(v1, v0);
}

size_t OUTLINED_FUNCTION_8_12(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  *(void *)(v6 - 128) = v0;
  *(void *)(v6 - 120) = v4;
  *(void *)(v6 - 152) = v2;
  *(void *)(v1 + 16) = v3;
  return sub_2607E2B70((long long *)(v6 - 152), v1 + 40 * v5 + 32);
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  return v0 + 32;
}

void OUTLINED_FUNCTION_15_8()
{
  *(unsigned char *)(v1 - 161) = (v0 ^ 1) & 1;
}

uint64_t OUTLINED_FUNCTION_16_9@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v1 - 152) = a1;
  return sub_26087B650();
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_18_7()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_21_7@<X0>(char a1@<W8>)
{
  return a1 & 1;
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_25_3@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 16) = v3 - 152;
  return sub_2607DCED0(v2, v1);
}

void OUTLINED_FUNCTION_26_3()
{
  *(unsigned char *)(v0 - 152) = 57;
}

uint64_t sub_260824454@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_12:
        __break(1u);
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if (v6 == 16)
      {
        sub_260824618();
        sub_26087AEA0();
        sub_26087B0C0();
        sub_2607DCF28(a1, a2);
        uint64_t v10 = sub_26087B0F0();
        return __swift_storeEnumTagSinglePayload(a3, 0, 1, v10);
      }
      else
      {
LABEL_8:
        sub_2607DCF28(a1, a2);
        uint64_t v12 = sub_26087B0F0();
        return __swift_storeEnumTagSinglePayload(a3, 1, 1, v12);
      }
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_260824618()
{
  unint64_t result = qword_26A8B4C88;
  if (!qword_26A8B4C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4C88);
  }
  return result;
}

uint64_t PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2;
  if (HIDWORD(a2) || HIDWORD(a3))
  {
    uint64_t v6 = sub_26087B980();
    __break(1u);
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = 0;
  }
  return MEMORY[0x270EF42A8](v6, v5, v4);
}

uint64_t PointerEvent.buttonMask.setter()
{
  return OUTLINED_FUNCTION_4_11();
}

uint64_t static PointerEvent.eventType.getter()
{
  return 17;
}

uint64_t PointerEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t (*PointerEvent.x.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_26082476C;
}

uint64_t sub_26082476C()
{
  return OUTLINED_FUNCTION_5_11();
}

uint64_t PointerEvent.y.getter()
{
  return OUTLINED_FUNCTION_6_13();
}

uint64_t PointerEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_16();
}

uint64_t (*PointerEvent.y.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_9_12(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2608247D4;
}

uint64_t sub_2608247D4()
{
  return OUTLINED_FUNCTION_0_16();
}

uint64_t PointerEvent.z.getter()
{
  return OUTLINED_FUNCTION_6_13();
}

uint64_t PointerEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_16();
}

uint64_t (*PointerEvent.z.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_260824844;
}

uint64_t sub_260824844()
{
  return OUTLINED_FUNCTION_0_16();
}

uint64_t PointerEvent.buttonMask.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t (*PointerEvent.buttonMask.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_10_12(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_2608248AC;
}

uint64_t sub_2608248AC()
{
  return OUTLINED_FUNCTION_4_11();
}

uint64_t PointerEvent.buttonClickCount.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t PointerEvent.buttonClickCount.setter()
{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t (*PointerEvent.buttonClickCount.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_260824914;
}

uint64_t sub_260824914()
{
  return OUTLINED_FUNCTION_7_12();
}

uint64_t PointerEvent.buttonNumber.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t PointerEvent.buttonNumber.setter()
{
  return OUTLINED_FUNCTION_2_18();
}

uint64_t (*PointerEvent.buttonNumber.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_9_12(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_260824980;
}

uint64_t sub_260824980()
{
  return OUTLINED_FUNCTION_2_18();
}

uint64_t PointerEvent.buttonPressure.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t (*PointerEvent.buttonPressure.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_10_12(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2608249E4;
}

uint64_t sub_2608249E4()
{
  return OUTLINED_FUNCTION_3_15();
}

uint64_t sub_2608249F4(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = PointerEvent.x.getter();
  *unint64_t v1 = v3;
  return result;
}

uint64_t sub_260824A1C(double *a1, void *a2)
{
  return PointerEvent.x.setter(*a2, *a1);
}

uint64_t sub_260824A28(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = PointerEvent.y.getter();
  *unint64_t v1 = v3;
  return result;
}

uint64_t sub_260824A50()
{
  return PointerEvent.y.setter();
}

uint64_t sub_260824A5C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = PointerEvent.z.getter();
  *unint64_t v1 = v3;
  return result;
}

uint64_t sub_260824A84()
{
  return PointerEvent.z.setter();
}

uint64_t sub_260824A90(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = PointerEvent.buttonMask.getter();
  *unint64_t v1 = result;
  return result;
}

uint64_t sub_260824AB8()
{
  return PointerEvent.buttonMask.setter();
}

uint64_t sub_260824AC4(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = PointerEvent.buttonClickCount.getter();
  *unint64_t v1 = result;
  return result;
}

uint64_t sub_260824AEC()
{
  return PointerEvent.buttonClickCount.setter();
}

uint64_t sub_260824AF8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = PointerEvent.buttonNumber.getter();
  *unint64_t v1 = result;
  return result;
}

uint64_t sub_260824B20()
{
  return PointerEvent.buttonNumber.setter();
}

uint64_t sub_260824B2C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = PointerEvent.buttonPressure.getter();
  *unint64_t v1 = v3;
  return result;
}

uint64_t sub_260824B54(double *a1, void *a2)
{
  return PointerEvent.buttonPressure.setter(*a2, *a1);
}

ValueMetadata *type metadata accessor for PointerEvent()
{
  return &type metadata for PointerEvent;
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_18()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_9_12(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_10_12(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return a2;
}

uint64_t KeyboardEvent.init(timestamp:usage:down:flags:)()
{
  return IOHIDEventCreateKeyboardEvent();
}

uint64_t static KeyboardEvent.eventType.getter()
{
  return 3;
}

BOOL KeyboardEvent.down.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t KeyboardEvent.down.setter()
{
  return OUTLINED_FUNCTION_0_17();
}

uint64_t (*KeyboardEvent.down.modify(void *a1, uint64_t a2))()
{
  *a1 = a2;
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  OUTLINED_FUNCTION_2_19(IntegerValue);
  return sub_260824C94;
}

uint64_t sub_260824C94()
{
  return OUTLINED_FUNCTION_0_17();
}

uint64_t KeyboardEvent.pressCount.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t KeyboardEvent.pressCount.setter()
{
  return OUTLINED_FUNCTION_0_17();
}

uint64_t (*KeyboardEvent.pressCount.modify(uint64_t *a1, uint64_t a2))()
{
  a1[1] = a2;
  *a1 = IOHIDEventGetIntegerValue();
  return sub_260824D18;
}

uint64_t sub_260824D18()
{
  return OUTLINED_FUNCTION_0_17();
}

BOOL KeyboardEvent.repeat.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t KeyboardEvent.repeat.setter()
{
  return OUTLINED_FUNCTION_1_18();
}

uint64_t (*KeyboardEvent.repeat.modify(void *a1, uint64_t a2))()
{
  *a1 = a2;
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  OUTLINED_FUNCTION_2_19(IntegerValue);
  return sub_260824DA4;
}

uint64_t sub_260824DA4()
{
  return OUTLINED_FUNCTION_1_18();
}

uint64_t KeyboardEvent.usage.getter(void *a1)
{
  id v1 = a1;
  unsigned __int16 IntegerValue = IOHIDEventGetIntegerValue();
  unsigned __int16 v3 = IOHIDEventGetIntegerValue();

  return IntegerValue | (v3 << 16);
}

BOOL sub_260824E0C()
{
  return KeyboardEvent.repeat.getter();
}

uint64_t sub_260824E14()
{
  return KeyboardEvent.repeat.setter();
}

uint64_t (*sub_260824E1C(uint64_t a1))()
{
  *(void *)a1 = *v1;
  *(unsigned char *)(a1 + 8) = KeyboardEvent.repeat.getter();
  return sub_260824E6C;
}

uint64_t sub_260824E6C()
{
  return KeyboardEvent.repeat.setter();
}

BOOL sub_260824E78@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = KeyboardEvent.down.getter();
  *a1 = result;
  return result;
}

uint64_t sub_260824EA8()
{
  return KeyboardEvent.down.setter();
}

uint64_t sub_260824EB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = KeyboardEvent.pressCount.getter();
  *a1 = result;
  return result;
}

uint64_t sub_260824EE0()
{
  return KeyboardEvent.pressCount.setter();
}

BOOL sub_260824EEC@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = KeyboardEvent.repeat.getter();
  *a1 = result;
  return result;
}

uint64_t sub_260824F1C()
{
  return KeyboardEvent.repeat.setter();
}

ValueMetadata *type metadata accessor for KeyboardEvent()
{
  return &type metadata for KeyboardEvent;
}

uint64_t OUTLINED_FUNCTION_0_17()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_2_19(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result != 0;
  return result;
}

uint64_t HIDEventFlags.init(phase:)(int a1)
{
  return (a1 & 0xFFFFFF8F) << 24;
}

uint64_t HIDEventFlags.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*HIDEventFlags.rawValue.modify())()
{
  return nullsub_1;
}

void *static HIDEventFlags.allCases.getter()
{
  return &unk_270C9E390;
}

unint64_t HIDEventFlags.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_27();
    BOOL result = sub_26087B980();
    __break(1u);
  }
  return result;
}

uint64_t static HIDEventFlags.absolute.getter()
{
  return 1;
}

uint64_t static HIDEventFlags.accelerated.getter()
{
  return 0x10000;
}

uint64_t static HIDEventFlags.builtin.getter()
{
  return 16;
}

uint64_t static HIDEventFlags.centerOrigin.getter()
{
  return 8;
}

uint64_t static HIDEventFlags.collection.getter()
{
  return 2;
}

uint64_t static HIDEventFlags.ignore.getter()
{
  return 4026531840;
}

uint64_t static HIDEventFlags.interpolated.getter()
{
  return 32;
}

uint64_t static HIDEventFlags.injected.getter()
{
  return 64;
}

uint64_t static HIDEventFlags.pixelUnits.getter()
{
  return 4;
}

uint64_t static HIDEventFlags.zero.getter()
{
  return 0x800000;
}

void sub_260825088(_DWORD *a1@<X8>)
{
}

void sub_260825090(void *a1@<X8>)
{
  *a1 = &unk_270C9E390;
}

uint64_t sub_2608250A0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_5();
  *a1 = result;
  return result;
}

uint64_t sub_2608250C8(unsigned int *a1)
{
  return sub_2608310B0(*a1, *v1);
}

uint64_t sub_2608250D4@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_39_2(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_260825104@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_36_0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_260825134@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_35_0(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_260825164(_DWORD *a1, int *a2)
{
  return sub_26082C584(a1, *a2);
}

uint64_t sub_26082516C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_260875A54(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_2608251A0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_260875AE8(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

void sub_2608251D4(int *a1)
{
}

void sub_2608251DC(int *a1)
{
}

void sub_2608251E4(int *a1)
{
}

uint64_t sub_2608251EC@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_260875E18(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_26082521C(int *a1)
{
  return sub_26082C698(*a1, *v1);
}

BOOL sub_260825228(int *a1)
{
  return sub_2608761EC(*a1, *v1);
}

BOOL sub_260825234(int *a1)
{
  return sub_26082C84C(*a1, *v1);
}

BOOL sub_260825240()
{
  return sub_2607E8404(*v0);
}

void sub_260825248(int *a1)
{
}

_DWORD *sub_260825250@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_260825260(_DWORD *a1@<X8>)
{
}

BOOL sub_260825268(int *a1, int *a2)
{
  return sub_260865154(*a1, *a2);
}

uint64_t sub_260825274@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_260875684();
  *a1 = result;
  return result;
}

uint64_t HIDEventFlags.momentumMask.getter()
{
  return 7;
}

uint64_t HIDEventFlags.momentumShift.getter()
{
  return 28;
}

uint64_t HIDEventFlags.momentumLowerMask.getter()
{
  return 24;
}

uint64_t HIDEventFlags.momentumLowerShift.getter()
{
  return 6;
}

uint64_t HIDEventFlags.phaseMask.getter()
{
  return 143;
}

uint64_t HIDEventFlags.phaseShift.getter()
{
  return 24;
}

uint64_t HIDEventFlags.init(momentum:)(char a1)
{
  return ((a1 & 0x18) << 6) | ((a1 & 7) << 28);
}

uint64_t HIDEventFlags.momentum.setter(uint64_t result)
{
  *uint64_t v1 = *v1 & 0x8FFFF9FF | ((result & 7) << 28) | ((((result & 0x18) >> 3) & 3) << 9);
  return result;
}

uint64_t HIDEventFlags.phase.setter(uint64_t result)
{
  *uint64_t v1 = *v1 & 0x70FFFFFF | ((result & 0xFFFFFF8F) << 24);
  return result;
}

uint64_t HIDEventFlags.momentum.getter(unsigned int a1)
{
  return (a1 >> 6) & 0x18 | (a1 >> 28) & 7;
}

uint64_t (*HIDEventFlags.momentum.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = (*v1 >> 6) & 0x18 | (*v1 >> 28) & 7;
  return sub_260825370;
}

uint64_t sub_260825370(uint64_t a1)
{
  return HIDEventFlags.momentum.setter(*(unsigned __int8 *)(a1 + 8));
}

uint64_t HIDEventFlags.phase.getter(unsigned int a1)
{
  return HIBYTE(a1) & 0xFFFFFF8F;
}

void (*HIDEventFlags.phase.modify(uint64_t a1))(_DWORD **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 3) & 0x8F;
  return sub_2608253D4;
}

void sub_2608253D4(_DWORD **a1)
{
}

uint64_t HIDEventFlags.description.getter(int a1)
{
  uint64_t v1 = qword_270C9E3A0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (qword_270C9E3A0)
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
    uint64_t v5 = &dword_270C9E3B0;
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & a1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_2607E9908();
        }
        unint64_t v8 = *(void *)(v4 + 16);
        if (v8 >= *(void *)(v4 + 24) >> 1) {
          sub_2607E9908();
        }
        *(void *)(v4 + 16) = v8 + 1;
        *(_DWORD *)(v4 + 4 * v8 + 32) = v6;
      }
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v4 + 16);
  if (v9)
  {
    uint64_t v25 = v2;
    sub_2607E9890(0, v9, 0);
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8E950];
    do
    {
      unsigned int v12 = *(_DWORD *)(v4 + 4 * v10 + 32);
      if (v12)
      {
        unint64_t v17 = 0xE800000000000000;
        uint64_t v18 = 0x6574756C6F736261;
      }
      else if ((v12 & 0x10000) != 0)
      {
        unint64_t v17 = 0xEB00000000646574;
        uint64_t v18 = 0x6172656C65636361;
      }
      else if ((v12 & 0x10) != 0)
      {
        unint64_t v17 = 0xE700000000000000;
        uint64_t v18 = 0x6E69746C697562;
      }
      else if ((v12 & 8) != 0)
      {
        unint64_t v17 = 0xEC0000006E696769;
        uint64_t v18 = 0x724F7265746E6563;
      }
      else if ((v12 & 2) != 0)
      {
        uint64_t v18 = 0x697463656C6C6F63;
        unint64_t v17 = 0xEA00000000006E6FLL;
      }
      else if (v12 >> 28)
      {
        unint64_t v17 = 0xE600000000000000;
        uint64_t v18 = 0x65726F6E6769;
      }
      else if ((v12 & 0x20) != 0)
      {
        unint64_t v17 = 0xEC00000064657461;
        uint64_t v18 = 0x6C6F707265746E69;
      }
      else if ((v12 & 4) != 0)
      {
        unint64_t v17 = 0xEA00000000007374;
        uint64_t v18 = 0x696E556C65786970;
      }
      else if ((v12 & 0x800000) != 0)
      {
        unint64_t v17 = 0xE400000000000000;
        uint64_t v18 = 1869768058;
      }
      else
      {
        uint64_t v13 = v11;
        int v14 = (v12 >> 6) & 0x18 | (v12 >> 28);
        if (v14)
        {
          uint64_t v15 = HIDScrollMomentum.description.getter(v14);
        }
        else
        {
          if ((HIBYTE(v12) & 0xFFFFFF8F) == 0)
          {
            uint64_t v18 = sub_26087BBA0();
            uint64_t v11 = v13;
            unint64_t v17 = v22;
            goto LABEL_37;
          }
          uint64_t v15 = HIDEventPhase.description.getter(HIBYTE(v12) & 0x8F);
        }
        uint64_t v18 = v15;
        unint64_t v17 = v16;
        uint64_t v11 = v13;
      }
LABEL_37:
      unint64_t v20 = *(void *)(v25 + 16);
      unint64_t v19 = *(void *)(v25 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2607E9890(v19 > 1, v20 + 1, 1);
        uint64_t v11 = MEMORY[0x263F8E950];
      }
      ++v10;
      *(void *)(v25 + 16) = v20 + 1;
      uint64_t v21 = v25 + 16 * v20;
      *(void *)(v21 + 32) = v18;
      *(void *)(v21 + 40) = v17;
    }
    while (v9 != v10);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4668);
  sub_2607E9A5C((unint64_t *)&qword_26A8B4670, &qword_26A8B4668);
  uint64_t v23 = sub_26087B230();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_260825798()
{
  return HIDEventFlags.description.getter(*v0);
}

unint64_t sub_2608257A4()
{
  unint64_t result = qword_26A8B4C90;
  if (!qword_26A8B4C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4C90);
  }
  return result;
}

unint64_t sub_2608257F4()
{
  unint64_t result = qword_26A8B4C98;
  if (!qword_26A8B4C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4C98);
  }
  return result;
}

uint64_t sub_260825840()
{
  return sub_2607E9A5C(&qword_26A8B4CA0, &qword_26A8B4CA8);
}

unint64_t sub_260825880()
{
  unint64_t result = qword_26A8B4CB0;
  if (!qword_26A8B4CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4CB0);
  }
  return result;
}

unint64_t sub_2608258D0()
{
  unint64_t result = qword_26A8B4CB8;
  if (!qword_26A8B4CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4CB8);
  }
  return result;
}

uint64_t sub_26082591C@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = HIDEventFlags.momentum.getter(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_260825948(unsigned __int8 *a1)
{
  return HIDEventFlags.momentum.setter(*a1);
}

uint64_t sub_260825970@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = HIDEventFlags.phase.getter(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_26082599C(unsigned __int8 *a1)
{
  return HIDEventFlags.phase.setter(*a1);
}

ValueMetadata *type metadata accessor for HIDEventFlags()
{
  return &type metadata for HIDEventFlags;
}

void OUTLINED_FUNCTION_0_18(_DWORD *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_2608259DC()
{
  return IOHIDEventGetScrollMomentum();
}

uint64_t ScrollCollection.init()()
{
  if (qword_26A8B4510 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26A8B4CD0;
  return HIDReport.init(bitCount:id:)(v0, 0);
}

uint64_t ScrollCollection.phase.setter()
{
  unsigned int v1 = sub_2607DB19C(0, *(void *)v0, *(void *)(v0 + 8));
  uint64_t v2 = OUTLINED_FUNCTION_8_13(v1);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, v3);
}

uint64_t static ScrollReport.initialReportBitCount.getter()
{
  return 104;
}

uint64_t static ScrollReport.reportID.getter()
{
  return 7;
}

uint64_t sub_260825AA4()
{
  uint64_t result = sub_260825AC8();
  *(void *)&xmmword_26A8B4CC0 = result;
  *((void *)&xmmword_26A8B4CC0 + 1) = v1;
  return result;
}

uint64_t sub_260825AC8()
{
  LOBYTE(v12) = 3;
  uint64_t v12 = sub_260815298((char *)&v12, 1);
  unint64_t v13 = v0;
  uint64_t v1 = sub_260825BD4();
  unint64_t v3 = v2;
  sub_26087B050();
  sub_2607DCF28(v1, v3);
  uint64_t v4 = sub_2607E6724((uint64_t)&unk_270C9DFF0);
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = v12;
  unint64_t v8 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087C870;
  *(void *)(inited + 56) = &type metadata for ApplicationCollection;
  *(void *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  sub_2607DCED0(v7, v8);
  uint64_t v10 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v7, v8);
  return v10;
}

uint64_t sub_260825BD4()
{
  if (qword_26A8B4518 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26A8B4CD8;
  unint64_t v0 = qword_26A8B4CE0;
  LOBYTE(v36[0]) = 5;
  sub_2607DCED0(qword_26A8B4CD8, qword_26A8B4CE0);
  uint64_t v24 = v1;
  unint64_t v25 = v0;
  unint64_t v2 = v0;
  sub_2607DCED0(v1, v0);
  uint64_t v3 = sub_2608155C0((char *)v36, 0xFF00uLL);
  unint64_t v29 = v4;
  uint64_t v30 = v3;
  LOBYTE(v36[0]) = 17;
  uint64_t v5 = sub_2608155C0((char *)v36, 0x102uLL);
  unint64_t v27 = v6;
  uint64_t v28 = v5;
  LOBYTE(v36[0]) = 6;
  uint64_t v7 = sub_260815298((char *)v36, 0);
  unint64_t v9 = v8;
  LOBYTE(v36[0]) = 7;
  uint64_t v23 = sub_260815298((char *)v36, 255);
  unint64_t v11 = v10;
  LOBYTE(v36[0]) = 12;
  uint64_t v22 = sub_2608155C0((char *)v36, 8uLL);
  unint64_t v13 = v12;
  LOBYTE(v36[0]) = 14;
  uint64_t v26 = sub_260815298((char *)v36, 8);
  unint64_t v15 = v14;
  unint64_t v21 = v14;
  unsigned __int8 v35 = 0;
  char v34 = 1;
  __int16 v33 = 0;
  __int16 v32 = 0;
  char v31 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v35, &v34, (unsigned char *)&v33 + 1, &v33, (unsigned char *)&v32 + 1, &v32, &v31, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087FDC0;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 7;
  *(void *)(inited + 96) = &type metadata for HIDReportDescriptor;
  *(void *)(inited + 104) = &protocol witness table for HIDReportDescriptor;
  *(void *)(inited + 72) = v1;
  *(void *)(inited + 80) = v2;
  *(void *)(inited + 136) = &type metadata for UsagePage;
  *(void *)(inited + 144) = &protocol witness table for UsagePage;
  *(void *)(inited + 112) = v30;
  *(void *)(inited + 120) = v29;
  *(void *)(inited + 176) = &type metadata for Usage;
  *(void *)(inited + 184) = &protocol witness table for Usage;
  *(void *)(inited + 152) = v28;
  *(void *)(inited + 160) = v27;
  *(void *)(inited + 216) = &type metadata for LogicalMinimum;
  *(void *)(inited + 224) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 192) = v7;
  *(void *)(inited + 200) = v9;
  *(void *)(inited + 256) = &type metadata for LogicalMaximum;
  *(void *)(inited + 264) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 232) = v23;
  *(void *)(inited + 240) = v11;
  *(void *)(inited + 296) = &type metadata for ReportSize;
  *(void *)(inited + 304) = &protocol witness table for ReportSize;
  *(void *)(inited + 272) = v22;
  *(void *)(inited + 280) = v13;
  *(void *)(inited + 336) = &type metadata for ReportCount;
  *(void *)(inited + 344) = &protocol witness table for ReportCount;
  *(void *)(inited + 312) = v26;
  *(void *)(inited + 320) = v15;
  uint64_t v18 = v36[0];
  unint64_t v17 = v36[1];
  *(void *)(inited + 376) = &type metadata for Input;
  *(void *)(inited + 384) = &protocol witness table for Input;
  *(void *)(inited + 352) = v18;
  *(void *)(inited + 360) = v17;
  sub_2607DCED0(v30, v29);
  sub_2607DCED0(v28, v27);
  sub_2607DCED0(v7, v9);
  sub_2607DCED0(v23, v11);
  sub_2607DCED0(v22, v13);
  sub_2607DCED0(v26, v21);
  sub_2607DCED0(v18, v17);
  uint64_t v19 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  sub_2607DCF28(v24, v25);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v18, v17);
  sub_2607DCF28(v26, v21);
  sub_2607DCF28(v22, v13);
  sub_2607DCF28(v23, v11);
  sub_2607DCF28(v7, v9);
  sub_2607DCF28(v28, v27);
  sub_2607DCF28(v30, v29);
  return v19;
}

uint64_t static ScrollReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_26081E9B0(&qword_26A8B4508, (uint64_t *)&xmmword_26A8B4CC0, (unint64_t *)&xmmword_26A8B4CC0 + 1, a1);
}

uint64_t sub_260825F6C()
{
  return 104;
}

uint64_t sub_260825F78()
{
  if (qword_26A8B4518 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26A8B4CD8;
  unint64_t v1 = qword_26A8B4CE0;
  sub_2607DCED0(qword_26A8B4CD8, qword_26A8B4CE0);
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0);
  uint64_t result = sub_2607DCF28(v0, v1);
  qword_26A8B4CD0 = v2;
  return result;
}

uint64_t static ScrollCollection.bitCount.getter()
{
  if (qword_26A8B4510 != -1) {
    swift_once();
  }
  return qword_26A8B4CD0;
}

uint64_t sub_260826060()
{
  uint64_t result = sub_260826084();
  qword_26A8B4CD8 = result;
  unk_26A8B4CE0 = v1;
  return result;
}

uint64_t sub_260826084()
{
  LOBYTE(v12) = 3;
  uint64_t v12 = sub_260815298((char *)&v12, 2);
  unint64_t v13 = v0;
  uint64_t v1 = sub_260826190();
  unint64_t v3 = v2;
  sub_26087B050();
  sub_2607DCF28(v1, v3);
  uint64_t v4 = sub_2607E6724((uint64_t)&unk_270C9DFC8);
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = v12;
  unint64_t v8 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087C870;
  *(void *)(inited + 56) = &type metadata for LogicalCollection;
  *(void *)(inited + 64) = &protocol witness table for LogicalCollection;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  sub_2607DCED0(v7, v8);
  uint64_t v10 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v7, v8);
  return v10;
}

uint64_t sub_260826190()
{
  LOBYTE(v55[0]) = 12;
  uint64_t v0 = sub_2608155C0((char *)v55, 8uLL);
  unint64_t v42 = v1;
  uint64_t v43 = v0;
  LOBYTE(v55[0]) = 14;
  uint64_t v2 = sub_260815298((char *)v55, 2);
  unint64_t v4 = v3;
  LOBYTE(v52[0]) = 0;
  LOBYTE(v50[0]) = 1;
  __int16 v54 = 0;
  HIWORD(v53) = 0;
  BYTE1(v53) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v52, v50, (unsigned char *)&v54 + 1, &v54, (unsigned char *)&v53 + 3, (unsigned char *)&v53 + 2, (unsigned char *)&v53 + 1, v55);
  LOBYTE(v52[0]) = 5;
  uint64_t v5 = sub_2608155C0((char *)v52, 1uLL);
  unint64_t v45 = v6;
  uint64_t v46 = v5;
  LOBYTE(v52[0]) = 17;
  uint64_t v7 = sub_2608155C0((char *)v52, 0x30uLL);
  unint64_t v9 = v8;
  LOBYTE(v52[0]) = 17;
  uint64_t v10 = sub_2608155C0((char *)v52, 0x31uLL);
  unint64_t v12 = v11;
  LOBYTE(v52[0]) = 6;
  uint64_t v13 = sub_260815298((char *)v52, -127);
  unint64_t v40 = v14;
  uint64_t v41 = v13;
  LOBYTE(v52[0]) = 7;
  uint64_t v32 = sub_260815298((char *)v52, 127);
  unint64_t v35 = v15;
  LOBYTE(v52[0]) = 12;
  uint64_t v16 = sub_2608155C0((char *)v52, 8uLL);
  unint64_t v48 = v17;
  uint64_t v49 = v16;
  LOBYTE(v52[0]) = 14;
  uint64_t v44 = sub_260815298((char *)v52, 2);
  unint64_t v47 = v18;
  LOBYTE(v50[0]) = 0;
  __int16 v54 = 257;
  int v53 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v50, (unsigned char *)&v54 + 1, &v54, (unsigned char *)&v53 + 3, (unsigned char *)&v53 + 2, (unsigned char *)&v53 + 1, &v53, v52);
  LOBYTE(v50[0]) = 12;
  uint64_t v19 = sub_2608155C0((char *)v50, 0x20uLL);
  unint64_t v38 = v20;
  uint64_t v39 = v19;
  LOBYTE(v50[0]) = 14;
  uint64_t v21 = sub_260815298((char *)v50, 2);
  unint64_t v36 = v22;
  uint64_t v37 = v21;
  __int16 v54 = 1;
  int v53 = 0x1000000;
  char v51 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)&v54 + 1, &v54, (unsigned char *)&v53 + 3, (unsigned char *)&v53 + 2, (unsigned char *)&v53 + 1, &v53, &v51, v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087D790;
  *(void *)(inited + 56) = &type metadata for ReportSize;
  *(void *)(inited + 64) = &protocol witness table for ReportSize;
  *(void *)(inited + 32) = v43;
  *(void *)(inited + 40) = v42;
  *(void *)(inited + 96) = &type metadata for ReportCount;
  *(void *)(inited + 104) = &protocol witness table for ReportCount;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = v4;
  *(void *)(inited + 176) = &type metadata for UsagePage;
  *(void *)(inited + 184) = &protocol witness table for UsagePage;
  *(void *)(inited + 216) = &type metadata for Usage;
  *(void *)(inited + 224) = &protocol witness table for Usage;
  *(void *)(inited + 256) = &type metadata for Usage;
  *(void *)(inited + 264) = &protocol witness table for Usage;
  *(void *)(inited + 296) = &type metadata for LogicalMinimum;
  *(void *)(inited + 304) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 336) = &type metadata for LogicalMaximum;
  *(void *)(inited + 344) = &protocol witness table for LogicalMaximum;
  uint64_t v33 = v55[0];
  uint64_t v24 = v55[0];
  unint64_t v34 = v55[1];
  *(void *)(inited + 496) = &type metadata for ReportSize;
  *(void *)(inited + 376) = &type metadata for ReportSize;
  *(void *)(inited + 384) = &protocol witness table for ReportSize;
  *(void *)(inited + 504) = &protocol witness table for ReportSize;
  *(void *)(inited + 136) = &type metadata for Input;
  *(void *)(inited + 144) = &protocol witness table for Input;
  *(void *)(inited + 112) = v24;
  *(void *)(inited + 120) = v34;
  *(void *)(inited + 152) = v46;
  *(void *)(inited + 160) = v45;
  *(void *)(inited + 192) = v7;
  *(void *)(inited + 200) = v9;
  *(void *)(inited + 232) = v10;
  *(void *)(inited + 240) = v12;
  *(void *)(inited + 272) = v41;
  *(void *)(inited + 280) = v40;
  *(void *)(inited + 312) = v32;
  *(void *)(inited + 320) = v35;
  *(void *)(inited + 352) = v49;
  *(void *)(inited + 360) = v48;
  *(void *)(inited + 416) = &type metadata for ReportCount;
  *(void *)(inited + 424) = &protocol witness table for ReportCount;
  *(void *)(inited + 392) = v44;
  *(void *)(inited + 400) = v47;
  *(void *)(inited + 536) = &type metadata for ReportCount;
  *(void *)(inited + 544) = &protocol witness table for ReportCount;
  uint64_t v27 = v52[0];
  uint64_t v25 = v52[0];
  unint64_t v28 = v52[1];
  *(void *)(inited + 456) = &type metadata for Input;
  *(void *)(inited + 464) = &protocol witness table for Input;
  *(void *)(inited + 432) = v25;
  *(void *)(inited + 440) = v28;
  *(void *)(inited + 472) = v39;
  *(void *)(inited + 480) = v38;
  *(void *)(inited + 512) = v37;
  *(void *)(inited + 520) = v36;
  *(void *)(inited + 576) = &type metadata for Input;
  *(void *)(inited + 584) = &protocol witness table for Input;
  uint64_t v29 = v50[0];
  unint64_t v30 = v50[1];
  *(void *)(inited + 552) = v50[0];
  *(void *)(inited + 560) = v30;
  sub_2607DCED0(v43, v42);
  sub_2607DCED0(v2, v4);
  sub_2607DCED0(v33, v34);
  sub_2607DCED0(v46, v45);
  sub_2607DCED0(v7, v9);
  sub_2607DCED0(v10, v12);
  sub_2607DCED0(v41, v40);
  sub_2607DCED0(v32, v35);
  sub_2607DCED0(v49, v48);
  sub_2607DCED0(v44, v47);
  sub_2607DCED0(v27, v28);
  sub_2607DCED0(v39, v38);
  sub_2607DCED0(v37, v36);
  sub_2607DCED0(v29, v30);
  uint64_t v31 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v29, v30);
  sub_2607DCF28(v37, v36);
  sub_2607DCF28(v39, v38);
  sub_2607DCF28(v27, v28);
  sub_2607DCF28(v44, v47);
  sub_2607DCF28(v49, v48);
  sub_2607DCF28(v32, v35);
  sub_2607DCF28(v41, v40);
  sub_2607DCF28(v10, v12);
  sub_2607DCF28(v7, v9);
  sub_2607DCF28(v46, v45);
  sub_2607DCF28(v33, v34);
  sub_2607DCF28(v2, v4);
  sub_2607DCF28(v43, v42);
  return v31;
}

uint64_t static ScrollCollection.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_26081E9B0(&qword_26A8B4518, &qword_26A8B4CD8, &qword_26A8B4CE0, a1);
}

uint64_t ScrollReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t ScrollReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ScrollReport.report.modify())()
{
  return nullsub_1;
}

uint64_t sub_260826714@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ScrollReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_26082673C()
{
  return sub_2608758E4(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t (*ScrollCollection.report.modify())()
{
  return nullsub_1;
}

unint64_t ScrollCollection.flags.getter(uint64_t a1, unint64_t a2)
{
  return sub_2607DB19C(0, a1, a2);
}

unint64_t sub_260826774@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = ScrollCollection.flags.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t ScrollCollection.flags.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 0);
}

uint64_t (*ScrollCollection.flags.modify(uint64_t **a1))(uint64_t a1)
{
  *(unsigned char *)(v1 + 8) = OUTLINED_FUNCTION_6_14(a1);
  return sub_2608267EC;
}

uint64_t sub_2608267EC(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*(unsigned __int8 *)(a1 + 8), 0);
}

unint64_t ScrollCollection.phase.getter(uint64_t a1, unint64_t a2)
{
  return sub_2607DB19C(0, a1, a2) & 0xFFFFFF8F;
}

unint64_t sub_260826840@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = ScrollCollection.phase.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t (*ScrollCollection.phase.modify(uint64_t **a1))(uint64_t **a1)
{
  *(unsigned char *)(v1 + 8) = OUTLINED_FUNCTION_6_14(a1) & 0x8F;
  return sub_2608268B4;
}

uint64_t sub_2608268B4(uint64_t **a1)
{
  unsigned int v1 = sub_2607DB19C(0, **a1, (*a1)[1]);
  uint64_t v2 = OUTLINED_FUNCTION_8_13(v1);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, v3);
}

unint64_t ScrollCollection.momentum.getter(uint64_t a1, unint64_t a2)
{
  return sub_2607DB19C(8, a1, a2);
}

unint64_t sub_2608268FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = ScrollCollection.momentum.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t ScrollCollection.momentum.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

uint64_t (*ScrollCollection.momentum.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_2607DB19C(8, *(void *)v1, *(void *)(v1 + 8));
  return sub_2607E79F0;
}

uint64_t ScrollCollection.x.getter()
{
  return (char)_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t sub_2608269AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ScrollCollection.x.getter();
  *a1 = result;
  return result;
}

uint64_t ScrollCollection.x.setter(uint64_t a1)
{
  uint64_t v1 = 127;
  if (a1 < 127) {
    uint64_t v1 = a1;
  }
  if (v1 <= -128) {
    uint64_t v2 = -128;
  }
  else {
    uint64_t v2 = v1;
  }
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, 16);
}

uint64_t (*ScrollCollection.x.modify(uint64_t a1))()
{
  OUTLINED_FUNCTION_0_11(a1);
  *uint64_t v1 = (char)_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_260826A48;
}

uint64_t sub_260826A48()
{
  OUTLINED_FUNCTION_7_13();
  if (v2 == v3) {
    uint64_t v0 = v1;
  }
  if (v0 <= -128) {
    uint64_t v4 = -128;
  }
  else {
    uint64_t v4 = v0;
  }
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v4, 16);
}

uint64_t ScrollCollection.y.getter()
{
  return (char)_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t sub_260826AAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ScrollCollection.y.getter();
  *a1 = result;
  return result;
}

uint64_t ScrollCollection.y.setter(uint64_t a1)
{
  uint64_t v1 = 127;
  if (a1 < 127) {
    uint64_t v1 = a1;
  }
  if (v1 <= -128) {
    uint64_t v2 = -128;
  }
  else {
    uint64_t v2 = v1;
  }
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v2, 24);
}

uint64_t (*ScrollCollection.y.modify(uint64_t a1))()
{
  OUTLINED_FUNCTION_0_11(a1);
  *uint64_t v1 = (char)_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_260826B48;
}

uint64_t sub_260826B48()
{
  OUTLINED_FUNCTION_7_13();
  if (v2 == v3) {
    uint64_t v0 = v1;
  }
  if (v0 <= -128) {
    uint64_t v4 = -128;
  }
  else {
    uint64_t v4 = v0;
  }
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v4, 24);
}

#error "260826B9C: call analysis failed (funcsize=10)"

void sub_260826BAC(void *a1@<X0>, double *a2@<X8>)
{
  *a2 = ScrollCollection.accelX.getter(*a1, a1[1]);
}

void ScrollCollection.accelX.setter(double a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0) {
    unint64_t v1 = 0;
  }
  else {
    unint64_t v1 = v1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 32);
}

#error "260826C28: call analysis failed (funcsize=17)"

void sub_260826C58(double *a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(*a1);
  OUTLINED_FUNCTION_3_16(v1);
}

#error "260826C9C: call analysis failed (funcsize=10)"

void sub_260826CAC(void *a1@<X0>, double *a2@<X8>)
{
  *a2 = ScrollCollection.accelY.getter(*a1, a1[1]);
}

void ScrollCollection.accelY.setter(double a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(a1);
  if ((v1 & 0x100000000) != 0) {
    unint64_t v1 = 0;
  }
  else {
    unint64_t v1 = v1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 64);
}

#error "260826D28: call analysis failed (funcsize=17)"

void sub_260826D58(double *a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(*a1);
  if ((v1 & 0x100000000) != 0) {
    unint64_t v1 = 0;
  }
  else {
    unint64_t v1 = v1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v1, 64);
}

uint64_t ScrollCollection.init(scrollEvent:)(void *a1)
{
  if (qword_26A8B4510 != -1) {
LABEL_51:
  }
    swift_once();
  char v3 = (uint64_t *)HIDReport.init(bitCount:id:)(qword_26A8B4CD0, 0);
  unint64_t v5 = v4;
  unint64_t v42 = v3;
  unint64_t v43 = v4;
  IOHIDEventGetScrollMomentum();
  uint64_t v6 = 0;
  switch(v5 >> 62)
  {
    case 1uLL:
    case 2uLL:
      OUTLINED_FUNCTION_2_1();
      if (v22) {
        goto LABEL_59;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v23 = (int)v3;
LABEL_19:
      if ((unint64_t)(v23 - 0x1000000000000000) >> 61 == 7)
      {
LABEL_5:
        sub_26087AFD0();
        IOHIDEventGetFloatValue();
        double v1 = v8;
        IOHIDEventGetFloatValue();
        double v10 = v9;
        IOHIDEventGetFloatValue();
        char v3 = (uint64_t *)&v42;
        ScrollCollection.delta.setter(v1, v10);
        uint64_t v11 = sub_26082E4E0((uint64_t)a1);
        if (v11)
        {
          unint64_t v5 = v11;
          IOHIDEventGetFloatValue();
          double v13 = v12;
          IOHIDEventGetFloatValue();
          double v1 = v14;
          IOHIDEventGetFloatValue();
          HIDFixed.init(doubleValue:)(v13);
          uint64_t v15 = 56;
          while (1)
          {
            OUTLINED_FUNCTION_9_13();
            uint64_t v16 = 0;
            switch(v17)
            {
              case 1:
              case 2:
                OUTLINED_FUNCTION_6_10();
                if (!v22) {
                  goto LABEL_16;
                }
                uint64_t v16 = 8 * v21;
                break;
              default:
                break;
            }
            BOOL v18 = __OFADD__(v16, v15);
            uint64_t v19 = v16 + v15;
            if (v18) {
              break;
            }
            char v3 = (uint64_t *)&v42;
            sub_26087AFD0();
            unint64_t v20 = v15 - 24;
            v15 -= 8;
            if (v20 <= 8)
            {
LABEL_32:
              HIDFixed.init(doubleValue:)(v1);
              uint64_t v30 = 88;
              while (1)
              {
                OUTLINED_FUNCTION_9_13();
                uint64_t v31 = 0;
                switch(v32)
                {
                  case 1:
                  case 2:
                    OUTLINED_FUNCTION_6_10();
                    if (!v22)
                    {
                      __break(1u);
                      goto LABEL_40;
                    }
                    uint64_t v31 = 8 * v34;
                    break;
                  default:
                    break;
                }
                BOOL v18 = __OFADD__(v31, v30);
                uint64_t v19 = v31 + v30;
                if (v18) {
                  goto LABEL_57;
                }
                sub_26087AFD0();
                unint64_t v33 = v30 - 56;
                v30 -= 8;
                if (v33 <= 8) {
                  goto LABEL_53;
                }
              }
            }
          }
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          uint64_t v6 = 8 * v19;
          goto LABEL_3;
        }
      }
      else
      {
        __break(1u);
      }
      unint64_t v24 = HIDFixed.init(doubleValue:)(0.0);
      if ((v24 & 0x100000000) != 0) {
        unint64_t v5 = 0;
      }
      else {
        unint64_t v5 = v24;
      }
      uint64_t v25 = 56;
      do
      {
        OUTLINED_FUNCTION_9_13();
        uint64_t v26 = 0;
        switch(v27)
        {
          case 1:
          case 2:
            OUTLINED_FUNCTION_6_10();
            if (!v22)
            {
              __break(1u);
              goto LABEL_32;
            }
            uint64_t v26 = 8 * v29;
            break;
          default:
            break;
        }
        BOOL v18 = __OFADD__(v26, v25);
        uint64_t v19 = v26 + v25;
        if (v18) {
          goto LABEL_56;
        }
        sub_26087AFD0();
        unint64_t v28 = v25 - 24;
        v25 -= 8;
      }
      while (v28 > 8);
LABEL_40:
      unint64_t v35 = HIDFixed.init(doubleValue:)(0.0);
      if ((v35 & 0x100000000) != 0) {
        unint64_t v5 = 0;
      }
      else {
        unint64_t v5 = v35;
      }
      uint64_t v36 = 88;
      do
      {
        OUTLINED_FUNCTION_9_13();
        uint64_t v37 = 0;
        switch(v38)
        {
          case 1:
          case 2:
            OUTLINED_FUNCTION_6_10();
            if (!v22)
            {
              __break(1u);
              goto LABEL_51;
            }
            uint64_t v37 = 8 * v40;
            break;
          default:
            break;
        }
        BOOL v18 = __OFADD__(v37, v36);
        uint64_t v19 = v37 + v36;
        if (v18) {
          goto LABEL_58;
        }
        sub_26087AFD0();
        unint64_t v39 = v36 - 56;
        v36 -= 8;
      }
      while (v39 > 8);
LABEL_54:

      return (uint64_t)v42;
    default:
LABEL_3:
      if (!__OFADD__(v6, 8))
      {
        sub_26087AFD0();
        IOHIDEventGetPhase();
        char v3 = v42;
        unint64_t v7 = v43;
        sub_2607DB19C(0, (uint64_t)v42, v43);
        switch(v7 >> 62)
        {
          case 1uLL:
            goto LABEL_17;
          case 2uLL:
            uint64_t v23 = v3[2];
            goto LABEL_19;
          default:
            goto LABEL_5;
        }
      }
      __break(1u);
LABEL_53:

      goto LABEL_54;
  }
}

void ScrollCollection.delta.setter(double a1, double a2)
{
  double v2 = round(a1);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_7_13();
  if (v6 == v7) {
    uint64_t v4 = v5;
  }
  if (v4 <= -128) {
    uint64_t v8 = -128;
  }
  else {
    uint64_t v8 = v4;
  }
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v8, 16);
  double v9 = round(a2);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0) {
    goto LABEL_23;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_7_13();
  if (v6 == v7) {
    uint64_t v10 = v11;
  }
  if (v10 <= -128) {
    uint64_t v12 = -128;
  }
  else {
    uint64_t v12 = v10;
  }
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v12, 24);
}

void ScrollCollection.accelDelta.setter(double a1, double a2)
{
  unint64_t v3 = HIDFixed.init(doubleValue:)(a1);
  OUTLINED_FUNCTION_3_16(v3);
  unint64_t v4 = HIDFixed.init(doubleValue:)(a2);
  if ((v4 & 0x100000000) != 0) {
    unint64_t v4 = 0;
  }
  else {
    unint64_t v4 = v4;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v4, 64);
}

uint64_t ScrollReport.scrollCollectionRange.getter()
{
  if (qword_26A8B4510 != -1) {
    uint64_t result = swift_once();
  }
  if ((qword_26A8B4CD0 & 0x8000000000000000) == 0) {
    return OUTLINED_FUNCTION_4_12();
  }
  __break(1u);
  return result;
}

uint64_t ScrollReport.scrollCollection.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = sub_2607DCED0(a1, a2);
  if (qword_26A8B4510 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_26A8B4CD0 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_4_12();
    uint64_t v5 = sub_26087AFC0();
    unint64_t v7 = v6;
    sub_2607DCF28(a1, a2);
    return sub_2607E6884(v5, v7);
  }
  return result;
}

uint64_t sub_260827478@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ScrollReport.scrollCollection.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2608274A8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_2607DCED0(*a1, v2);
  return ScrollReport.scrollCollection.setter(v1, v2);
}

uint64_t ScrollReport.scrollCollection.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  unint64_t v6 = v2[1];
  *(void *)&long long v8 = *v2;
  *((void *)&v8 + 1) = v6;
  uint64_t result = sub_2607DCED0(*v2, v6);
  if (qword_26A8B4510 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_26A8B4CD0 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2607DCED0(a1, a2);
    sub_2608345EC(a1, a2);
    sub_2607DCF28(a1, a2);
    sub_2607DCF28(a1, a2);
    uint64_t result = sub_2607DCF28(v5, v6);
    *(_OWORD *)unint64_t v2 = v8;
  }
  return result;
}

uint64_t (*ScrollReport.scrollCollection.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t result = (uint64_t (*)(uint64_t *, char))sub_2607DCED0(*v1, v3);
  if (qword_26A8B4510 != -1) {
    uint64_t result = (uint64_t (*)(uint64_t *, char))swift_once();
  }
  if (qword_26A8B4CD0 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_4_12();
    uint64_t v6 = sub_26087AFC0();
    unint64_t v8 = v7;
    sub_2607DCF28(v4, v3);
    *a1 = sub_2607E6884(v6, v8);
    a1[1] = v9;
    return sub_2608276AC;
  }
  return result;
}

uint64_t sub_2608276AC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if ((a2 & 1) == 0) {
    return ScrollReport.scrollCollection.setter(*a1, v3);
  }
  sub_2607DCED0(*a1, v3);
  ScrollReport.scrollCollection.setter(v2, v3);
  return sub_2607DCF28(v2, v3);
}

uint64_t ScrollReport.init(scrollEvent:)(void *a1)
{
  if (qword_26A8B4508 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(7u);
  uint64_t v3 = HIDReport.init(bitCount:id:)(v2, 7);
  unint64_t v5 = v4;
  id v6 = a1;
  uint64_t v7 = ScrollCollection.init(scrollEvent:)(v6);
  unint64_t v9 = v8;
  uint64_t result = sub_2607DCED0(v3, v5);
  if (qword_26A8B4510 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_26A8B4CD0 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2607DCED0(v7, v9);
    sub_2608345EC(v7, v9);
    sub_2607DCF28(v7, v9);
    sub_2607DCF28(v7, v9);
    sub_2607DCF28(v3, v5);

    return v3;
  }
  return result;
}

double ScrollCollection.delta.getter()
{
  double v0 = (double)(char)_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return v0;
}

void sub_2608278E0(double *a1)
{
}

void (*ScrollCollection.delta.modify(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 24) = v1;
  double v3 = (double)(char)_s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  char v4 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  *(double *)a1 = v3;
  *(double *)(a1 + 8) = (double)v4;
  *(void *)(a1 + 16) = 0;
  return sub_260827994;
}

void sub_260827994(double *a1)
{
}

#error "2608279E4: call analysis failed (funcsize=27)"

void sub_260827A28(void *a1@<X0>, double (*a2)(void, void)@<X3>, uint64_t a3@<X8>)
{
  *(double *)a3 = a2(*a1, a1[1]);
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = 0;
}

void sub_260827A60(double *a1)
{
}

#error "260827AB8: call analysis failed (funcsize=36)"

void sub_260827B1C(double *a1)
{
  double v1 = a1[1];
  unint64_t v2 = HIDFixed.init(doubleValue:)(*a1);
  OUTLINED_FUNCTION_3_16(v2);
  unint64_t v3 = HIDFixed.init(doubleValue:)(v1);
  if ((v3 & 0x100000000) != 0) {
    unint64_t v3 = 0;
  }
  else {
    unint64_t v3 = v3;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(v3, 64);
}

uint64_t ScrollReport.remoteTimestamp.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x260827C18);
      }
      if (v4 >= 21) {
        return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(104, a1, a2);
      }
      else {
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_260827C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = ScrollReport.remoteTimestamp.getter(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_260827C60()
{
}

void ScrollReport.remoteTimestamp.setter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)v0[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v5)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x260827D18);
      }
      if (v4 >= 21)
      {
        if (v3) {
          uint64_t v2 = 0;
        }
        _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v2, 104);
      }
      return;
  }
}

void (*ScrollReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *v1;
  char v4 = 1;
  uint64_t v5 = 0;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_10;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v9)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x260827DFCLL);
      }
      if (v8 >= 21)
      {
        uint64_t v5 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(104, v6, v7);
        char v4 = 0;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 1;
      }
LABEL_10:
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = v4;
      return sub_260827E0C;
  }
}

void sub_260827E0C(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  int v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = (uint64_t *)a1[2];
  if (a2)
  {
    ScrollReport.remoteTimestamp.setter();
  }
  else
  {
    uint64_t v7 = *v6;
    switch((unint64_t)v6[1] >> 62)
    {
      case 1uLL:
        BOOL v8 = __OFSUB__(HIDWORD(v7), v7);
        uint64_t v9 = (HIDWORD(v7) - v7);
        if (v8) {
          goto LABEL_10;
        }
        goto LABEL_8;
      case 2uLL:
        uint64_t v12 = v7 + 16;
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v12 + 8);
        BOOL v8 = __OFSUB__(v11, v10);
        uint64_t v9 = v11 - v10;
        if (!v8) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        return;
      default:
LABEL_8:
        OUTLINED_FUNCTION_2_1();
        if (!v13)
        {
          __break(1u);
LABEL_10:
          __break(1u);
LABEL_11:
          __break(1u);
        }
        if (v9 >= 21)
        {
          if (v5) {
            uint64_t v4 = 0;
          }
          _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v4, 104);
        }
        break;
    }
  }
}

uint64_t sub_260827ED4()
{
  return ScrollReport.remoteTimestamp.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_260827EF4()
{
}

void (*sub_260827EFC(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = ScrollReport.remoteTimestamp.getter(*(void *)v1, *(void *)(v1 + 8));
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_260827F50;
}

void sub_260827F50()
{
}

uint64_t sub_260827F84(unsigned __int8 *a1)
{
  return ScrollCollection.flags.setter(*a1);
}

uint64_t sub_260827FB0()
{
  return ScrollCollection.phase.setter();
}

uint64_t sub_260827FDC(unsigned __int8 *a1)
{
  return ScrollCollection.momentum.setter(*a1);
}

uint64_t sub_260828008(uint64_t *a1)
{
  return ScrollCollection.x.setter(*a1);
}

uint64_t sub_260828034(uint64_t *a1)
{
  return ScrollCollection.y.setter(*a1);
}

void sub_260828060(double *a1)
{
}

void sub_26082808C(double *a1)
{
}

void sub_2608280BC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2608280EC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

ValueMetadata *type metadata accessor for ScrollReport()
{
  return &type metadata for ScrollReport;
}

ValueMetadata *type metadata accessor for ScrollCollection()
{
  return &type metadata for ScrollCollection;
}

void OUTLINED_FUNCTION_3_16(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0) {
    a1 = 0;
  }
  else {
    a1 = a1;
  }
  _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcis_0(a1, 32);
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return 1;
}

unint64_t OUTLINED_FUNCTION_6_14(uint64_t **a1)
{
  *a1 = v1;
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  return sub_2607DB19C(0, v3, v4);
}

uint64_t OUTLINED_FUNCTION_8_13(unsigned int a1)
{
  return v1 & 0xFFFFFF8F | (16 * ((a1 >> 4) & 7));
}

uint64_t static AppleVendorTopCaseUsage.usagePage.getter()
{
  return 255;
}

uint64_t static AppleVendorTopCaseUsage.usageMinimum.getter()
{
  return 3;
}

uint64_t static AppleVendorTopCaseUsage.usageMaximum.getter()
{
  return 192;
}

uint64_t AppleVendorTopCaseUsage.init(rawValue:)(unsigned __int8 a1)
{
  int v1 = a1;
  if (a1 - 6 < 0xFFFFFFFD) {
    int v1 = 0;
  }
  return v1 | ((a1 - 6 < 0xFFFFFFFD) << 8);
}

uint64_t sub_26082820C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = AppleVendorTopCaseUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_260828240()
{
  return 192;
}

uint64_t static AppleVendorTopCaseUsage.fnKey.getter()
{
  return 3;
}

uint64_t static AppleVendorTopCaseUsage.brightnessUp.getter()
{
  return 4;
}

uint64_t static AppleVendorTopCaseUsage.brightnessDown.getter()
{
  return 5;
}

uint64_t static AppleVendorTopCaseUsage.videoMirror.getter()
{
  return 6;
}

uint64_t static AppleVendorTopCaseUsage.illuminationToggle.getter()
{
  return 7;
}

uint64_t static AppleVendorTopCaseUsage.illuminationUp.getter()
{
  return 8;
}

uint64_t static AppleVendorTopCaseUsage.illuminationDown.getter()
{
  return 9;
}

uint64_t static AppleVendorTopCaseUsage.clamshellLatched.getter()
{
  return 10;
}

void *static AppleVendorTopCaseUsage.allCases.getter()
{
  return &unk_270C9E400;
}

unint64_t sub_260828294(uint64_t a1)
{
  unint64_t result = sub_2608282BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2608282BC()
{
  unint64_t result = qword_26A8B4CE8;
  if (!qword_26A8B4CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4CE8);
  }
  return result;
}

unint64_t sub_26082830C()
{
  unint64_t result = qword_26A8B4CF0;
  if (!qword_26A8B4CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4CF0);
  }
  return result;
}

unint64_t sub_26082835C()
{
  unint64_t result = qword_26A8B4CF8;
  if (!qword_26A8B4CF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4D00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4CF8);
  }
  return result;
}

void sub_2608283B0(void *a1@<X8>)
{
  *a1 = &unk_270C9E400;
}

ValueMetadata *type metadata accessor for AppleVendorTopCaseUsage()
{
  return &type metadata for AppleVendorTopCaseUsage;
}

uint64_t static HIDGameControllerType.extended.getter()
{
  return 1;
}

unint64_t HIDGameControllerType.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_27();
    unint64_t result = sub_26087B980();
    __break(1u);
  }
  return result;
}

uint64_t HIDGameControllerType.rawValue.setter(uint64_t result)
{
  *int v1 = result;
  return result;
}

uint64_t (*HIDGameControllerType.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t static HIDGameControllerType.standard.getter()
{
  return 0;
}

void *static HIDGameControllerType.allCases.getter()
{
  return &unk_270C9E428;
}

BOOL static HIDGameControllerType.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t HIDGameControllerType.hash(into:)()
{
  return sub_26087BCE0();
}

uint64_t HIDGameControllerType.hashValue.getter()
{
  return sub_26087BD00();
}

void sub_26082852C(void *a1@<X8>)
{
  *a1 = &unk_270C9E428;
}

BOOL sub_26082853C(int *a1, int *a2)
{
  return static HIDGameControllerType.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_260828548()
{
  return HIDGameControllerType.hashValue.getter();
}

uint64_t sub_260828550()
{
  return HIDGameControllerType.hash(into:)();
}

unint64_t sub_26082855C()
{
  unint64_t result = qword_26A8B4D08;
  if (!qword_26A8B4D08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D08);
  }
  return result;
}

unint64_t sub_2608285B4()
{
  unint64_t result = qword_26A8B4D18;
  if (!qword_26A8B4D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D18);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDGameControllerType()
{
  return &type metadata for HIDGameControllerType;
}

uint64_t DigitizerGesture.__allocating_init(platform:useRemoteAcceleration:dispatchPointerEvents:)(char *a1, char a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(a1, a2, a3);
  return v6;
}

void DigitizerGesture.platform.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t DigitizerGesture.useRemoteAcceleration.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t DigitizerGesture.dispatchPointerEvents.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t DigitizerGesture.emitFluidGestureEvents.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t DigitizerGesture.emitFluidGestureEvents.setter()
{
  uint64_t result = OUTLINED_FUNCTION_0_19();
  *(unsigned char *)(v1 + 19) = v0;
  return result;
}

uint64_t (*DigitizerGesture.emitFluidGestureEvents.modify())()
{
  return j__swift_endAccess;
}

uint64_t DigitizerGesture.enableFluidGestureEventsMode(_:)()
{
  OUTLINED_FUNCTION_0_19();
  *(unsigned char *)(v1 + 19) = v0;
  return MEMORY[0x263F8EE78];
}

uint64_t DigitizerGesture.__allocating_init(platform:useRemoteAcceleration:)(char *a1, char a2)
{
  char v3 = *a1 != 1;
  char v6 = *a1;
  uint64_t v4 = swift_allocObject();
  DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(&v6, a2, v3);
  return v4;
}

uint64_t DigitizerGesture.init(platform:useRemoteAcceleration:dispatchPointerEvents:)(char *a1, char a2, char a3)
{
  char v6 = *a1;
  *(unsigned char *)(v3 + 19) = 0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v7 = sub_26087B200();
  uint64_t v8 = mach_absolute_time();
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = v7;
  *(void *)(v3 + 64) = v8;
  *(unsigned char *)(v3 + 16) = v6;
  *(unsigned char *)(v3 + 17) = a2;
  *(unsigned char *)(v3 + 18) = a3;
  return v3;
}

uint64_t DigitizerGesture.dispatch(report:)(unint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(v2 + 18) == 1) {
    uint64_t v3 = sub_2608288AC(a1, a2);
  }
  else {
    uint64_t v3 = sub_260828A14(a1, a2);
  }
  uint64_t v7 = v6;
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = v5;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2608288AC(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = mach_absolute_time();
  uint64_t v5 = (void *)PointerEvent.init(time:point:buttonMask:oldButtonMask:flags:)(v4, 0, 0);
  uint64_t v6 = sub_260828A14(a1, a2);
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    uint64_t v17 = v6;
    uint64_t v10 = v7 + 32;
    do
    {
      sub_2607E2A1C(v10, (uint64_t)v18);
      uint64_t v11 = v19;
      uint64_t v12 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      id v13 = v5;
      double v14 = (void *)HIDEventProtocol.bridgedValue.getter(v11, v12);
      IOHIDEventAppendEvent();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v8 = v17;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_26087C870;
  *(void *)(v15 + 56) = &type metadata for PointerEvent;
  *(void *)(v15 + 64) = &protocol witness table for PointerEvent;
  *(void *)(v15 + 32) = v5;
  return v8;
}

uint64_t sub_260828A14(unint64_t a1, unint64_t a2)
{
  uint64_t v125 = *MEMORY[0x263EF8340];
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[7];
  uint64_t v7 = v2[8];
  swift_bridgeObjectRetain();
  sub_2607DCED0(a1, a2);
  uint64_t v84 = a1;
  uint64_t v8 = sub_2608295AC(v5, v6, v7, a1, a2);
  uint64_t v10 = v9;
  uint64_t v99 = v11;
  uint64_t v103 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_260840628(v10);
  swift_bridgeObjectRelease();
  *(void *)&long long v105 = v12;
  sub_26082A17C((uint64_t *)&v105);
  unint64_t v86 = a2;
  swift_bridgeObjectRelease();
  id v13 = (void *)v105;
  uint64_t v14 = *(void *)(v105 + 16);
  uint64_t v97 = v10;
  if (v14)
  {
    unint64_t v15 = 0;
    LODWORD(v16) = 0;
    LODWORD(v17) = 0;
    LODWORD(v18) = 0;
    double v19 = 0.0;
    double v20 = 0.0;
    uint64_t v88 = v105 + 32;
    uint64_t v90 = (void *)(v14 - 1);
    double v21 = 0.0;
    uint64_t v93 = v105;
    uint64_t v95 = v8;
    do
    {
      if (*(void *)(v10 + 16) && (unint64_t v22 = sub_2607F3ED0(*(void *)(v88 + 8 * v15)), (v23 & 1) != 0))
      {
        uint64_t v24 = *(void *)(v10 + 56) + 56 * v22;
        if ((*(void *)v24 & 0x8000000000000000) != 0
          || HIDWORD(*(void *)v24)
          || (unint64_t v25 = *(void *)(v24 + 8), (v25 & 0x8000000000000000) != 0)
          || HIDWORD(v25))
        {
          sub_26087B980();
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x260829324);
        }
        uint64_t v26 = *(unsigned int *)(v24 + 16);
        double v27 = *(double *)(v24 + 24);
        double v28 = *(double *)(v24 + 32);
        double v29 = *(double *)(v24 + 40);
        int v30 = *(unsigned __int8 *)(v24 + 48);
        a1 = *(unsigned __int8 *)(v24 + 49);
      }
      else
      {
        uint64_t v26 = 0;
        int v30 = 0;
        a1 = 0;
        double v27 = 0.0;
        double v28 = 0.0;
        double v29 = 0.0;
      }
      DigitizerFingerEvent = (void *)IOHIDEventCreateDigitizerFingerEvent();
      if (v8) {
        IOHIDEventSetIntegerValue();
      }
      id v32 = DigitizerFingerEvent;
      MEMORY[0x26121C810]();
      if (*(void *)(v103 + 16) >= *(void *)(v103 + 24) >> 1) {
        sub_26087B410();
      }
      double v19 = v19 + v27;
      double v20 = v20 + v28;
      double v21 = v21 + v29;
      sub_26087B430();
      sub_26087B400();

      unint64_t v16 = v26 | v16;
      uint64_t v18 = v18 | a1;
      uint64_t v17 = v17 | v30;
      if (v90 == (void *)v15)
      {
        uint64_t v8 = v95;
        id v13 = (void *)v93;
        goto LABEL_20;
      }
      ++v15;
      id v13 = (void *)v93;
      uint64_t v8 = v95;
      uint64_t v10 = v97;
    }
    while (v15 < *(void *)(v93 + 16));
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    swift_once();
LABEL_35:
    unint64_t v33 = (unsigned char *)v82;
    if (__OFADD__(v17, qword_26A8B4CD0 >> 3))
    {
      __break(1u);
    }
    else if (v17 + (qword_26A8B4CD0 >> 3) >= v17)
    {
      uint64_t v45 = sub_26087AFC0();
      unint64_t v47 = v46;
      sub_2607DCF28(v18, v16);
      uint64_t v48 = sub_2607E6884(v45, v47);
      id v13 = (void *)v49;
      if ((sub_2607DB19C(0, v48, v49) & 0x8F) == 0)
      {

LABEL_51:
        sub_2607DCF28(v48, (unint64_t)v13);
        return v8;
      }
      swift_beginAccess();
      if (*(unsigned char *)(v82 + 19) == 1 && sub_2607DB19C(0, v48, (unint64_t)v13))
      {
        uint64_t v50 = sub_260829C90(v27, v28, v29, v99, v48, (unint64_t)v13);
        uint64_t v51 = *(void *)(v50 + 16);
        if (v51)
        {
          unint64_t v91 = v13;
          uint64_t v52 = v50 + 32;
          do
          {
            sub_2607E2A1C(v52, (uint64_t)&v105);
            int v53 = v107;
            __int16 v54 = v108;
            __swift_project_boxed_opaque_existential_1(&v105, (uint64_t)v107);
            id v55 = (id)v26;
            uint64_t v56 = (void *)HIDEventProtocol.bridgedValue.getter(v53, v54);
            IOHIDEventAppendEvent();

            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
            v52 += 40;
            --v51;
          }
          while (v51);

          swift_bridgeObjectRelease();
          id v13 = v91;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        goto LABEL_51;
      }
      _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
      _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
      ScrollEvent = (void *)IOHIDEventCreateScrollEvent();
      if (*(unsigned char *)(v82 + 17) == 1)
      {
        _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(32, v48, (uint64_t)v13, v57, v58, v59, v60, v61, v76, v78, v80, v82, v84, v86, v88, (char)v90, v93, v95, v97,
          v99,
          v101,
          v103,
          v105,
          *((uint64_t *)&v105 + 1),
          v106,
          (uint64_t)v107,
          (uint64_t)v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138);
        double v64 = (double)v63 * 0.0000152587891;
        _s12UniversalHID9HIDReportV_2ass5Int32VSi_AFmtcig_0(64, v48, (uint64_t)v13, v65, v66, v67, v68, v69, v77, v79, v81, v83, v85, v87, v89, v92, v94, v96, v98,
          v100,
          v102,
          v104,
          v105,
          *((uint64_t *)&v105 + 1),
          v106,
          (uint64_t)v107,
          (uint64_t)v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          v135,
          v136,
          v137,
          v138);
        if (v64 != 0.0 || (double)v70 * 0.0000152587891 != 0.0)
        {
          IOHIDEventGetEventFlags();
          int v71 = (void *)IOHIDEventCreateScrollEvent();
          IOHIDEventAppendEvent();
        }
      }
      id v72 = ScrollEvent;
      sub_2607DB19C(0, v48, (unint64_t)v13);
      IOHIDEventSetPhase();

      if (v33[16] == 1)
      {
        unint64_t v33 = v72;
        IOHIDEventAppendEvent();
        sub_2607DCF28(v48, (unint64_t)v13);

LABEL_54:
        return v8;
      }
      uint64_t v93 = v48;
      uint64_t v17 = *(void *)(v15 + 16);
      unint64_t v73 = *(void *)(v15 + 24);
      a1 = v17 + 1;
      unint64_t v33 = v72;
      if (v17 < v73 >> 1)
      {
LABEL_53:
        uint64_t v107 = &type metadata for ScrollEvent;
        uint64_t v108 = &protocol witness table for ScrollEvent;
        *(void *)&long long v105 = v33;
        *(void *)(v15 + 16) = a1;
        sub_2607E2B70(&v105, v15 + 40 * v17 + 32);

        sub_2607DCF28(v93, (unint64_t)v13);
        goto LABEL_54;
      }
LABEL_63:
      sub_260822518();
      unint64_t v15 = (unint64_t)v75;
      goto LABEL_53;
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v17 = 0;
  LODWORD(v16) = 0;
  double v21 = 0.0;
  double v20 = 0.0;
  double v19 = 0.0;
LABEL_20:
  swift_release();
  unint64_t v33 = (unsigned char *)v103;
  uint64_t v34 = *(void *)(v103 + 16);
  if (v34)
  {
    unint64_t v15 = v86 >> 62;
    double v27 = v19 / (double)v34;
    double v28 = v20 / (double)v34;
    double v29 = v21 / (double)v34;
    LODWORD(v76) = 0;
    uint64_t v26 = DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(v99, 3, v16 & 0xFFFFFDFF, v8, 0x400018uLL, 1uLL);
    uint64_t v18 = v84;
    unint64_t v16 = v86;
    switch(v86 >> 62)
    {
      case 1uLL:
        LODWORD(v35) = HIDWORD(v84) - v84;
        if (__OFSUB__(HIDWORD(v84), v84)) {
          goto LABEL_61;
        }
        uint64_t v35 = (int)v35;
        goto LABEL_27;
      case 2uLL:
        uint64_t v37 = *(void *)(v84 + 16);
        uint64_t v36 = *(void *)(v84 + 24);
        BOOL v38 = __OFSUB__(v36, v37);
        uint64_t v35 = v36 - v37;
        if (v38) {
          goto LABEL_62;
        }
        goto LABEL_27;
      case 3uLL:
        goto LABEL_31;
      default:
        uint64_t v35 = BYTE6(v86);
LABEL_27:
        if ((unint64_t)(v35 - 0x1000000000000000) >> 61 != 7) {
          goto LABEL_57;
        }
        if (v35 >= 53)
        {
          uint64_t v39 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(360, v84, v86);
          if (v39)
          {
            *(void *)&long long v105 = v39;
            uint64_t v40 = sub_2607E67C8((uint64_t)&v105, (uint64_t)&v105 + 8);
            a1 = v41;
            sub_2607DCED0(v40, v41);
            uint64_t v42 = mach_absolute_time();
            id v13 = sub_2607E64B4(v42, 16973568, 0, v40, a1, 0);
            IOHIDEventAppendEvent();

            sub_2607DCF28(v40, a1);
          }
        }
LABEL_31:
        uint64_t v43 = *(void *)(v103 + 16);
        if (v43)
        {
          uint64_t v44 = v103 + 32;
          do
          {
            v44 += 8;
            IOHIDEventAppendEvent();
            --v43;
          }
          while (v43);
        }
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
        unint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_26087C870;
        *(void *)(v15 + 56) = &type metadata for DigitizerEvent;
        *(void *)(v15 + 64) = &protocol witness table for DigitizerEvent;
        *(void *)(v15 + 32) = v26;
        sub_2607DCED0(v84, v86);
        uint64_t v26 = (uint64_t)(id)v26;
        uint64_t v17 = DigitizerReport.contactRange(forIndex:)(5, v84, v86);
        if (qword_26A8B4510 == -1) {
          goto LABEL_35;
        }
        goto LABEL_58;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_260829334()
{
  return *(void *)v0;
}

uint64_t sub_26082933C()
{
  sub_26087B7F0();
  swift_bridgeObjectRelease();
  sub_26087BBA0();
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  sub_26087BBA0();
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  DigitizerEventMask.description.getter(*(_DWORD *)(v0 + 16));
  sub_26087B330();
  swift_bridgeObjectRelease();
  sub_26087B330();
  return 0x3A7865646E69;
}

uint64_t sub_26082951C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_260829334();
  *a1 = result;
  return result;
}

uint64_t sub_260829568()
{
  return sub_26082933C();
}

uint64_t sub_2608295AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = sub_26087B200();
  uint64_t v87 = mach_absolute_time();
  uint64_t v10 = a1 + 1;
  do
  {
    uint64_t v11 = v10;
    uint64_t v10 = 1;
  }
  while (!v11);
  uint64_t v85 = v11;
  unsigned __int8 v12 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  if (v12)
  {
    uint64_t v13 = v12;
    sub_2607DCED0(a4, a5);
    uint64_t v14 = sub_260831638(0, v13, a4, a5);
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v115 = v9;
  uint64_t v83 = 0;
  unint64_t v93 = a5;
  uint64_t v95 = a2;
  uint64_t v15 = v14[2];
  uint64_t v89 = (uint64_t)v14;
  uint64_t v91 = a4;
  if (!v15)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    int64_t v52 = 0;
    uint64_t v53 = v95;
    uint64_t v54 = v95 + 64;
    uint64_t v55 = 1 << *(unsigned char *)(v95 + 32);
    uint64_t v56 = -1;
    if (v55 < 64) {
      uint64_t v56 = ~(-1 << v55);
    }
    unint64_t v57 = v56 & *(void *)(v95 + 64);
    int64_t v109 = (unint64_t)(v55 + 63) >> 6;
    uint64_t v58 = (void *)v115;
    while (1)
    {
      while (1)
      {
        if (v57)
        {
          unint64_t v59 = __clz(__rbit64(v57));
          v57 &= v57 - 1;
          unint64_t v60 = v59 | (v52 << 6);
        }
        else
        {
          BOOL v61 = __OFADD__(v52++, 1);
          if (v61) {
            goto LABEL_74;
          }
          if (v52 >= v109)
          {
LABEL_72:
            sub_2607DCF28(v91, v93);
            swift_release();
            return v85;
          }
          unint64_t v62 = *(void *)(v54 + 8 * v52);
          if (!v62)
          {
            int64_t v63 = v52 + 1;
            if (v52 + 1 >= v109) {
              goto LABEL_72;
            }
            unint64_t v62 = *(void *)(v54 + 8 * v63);
            if (!v62)
            {
              int64_t v63 = v52 + 2;
              if (v52 + 2 >= v109) {
                goto LABEL_72;
              }
              unint64_t v62 = *(void *)(v54 + 8 * v63);
              if (!v62)
              {
                int64_t v63 = v52 + 3;
                if (v52 + 3 >= v109) {
                  goto LABEL_72;
                }
                unint64_t v62 = *(void *)(v54 + 8 * v63);
                if (!v62)
                {
                  while (1)
                  {
                    int64_t v52 = v63 + 1;
                    if (__OFADD__(v63, 1)) {
                      goto LABEL_75;
                    }
                    if (v52 >= v109) {
                      goto LABEL_72;
                    }
                    unint64_t v62 = *(void *)(v54 + 8 * v52);
                    ++v63;
                    if (v62) {
                      goto LABEL_39;
                    }
                  }
                }
              }
            }
            int64_t v52 = v63;
          }
LABEL_39:
          unint64_t v57 = (v62 - 1) & v62;
          unint64_t v60 = __clz(__rbit64(v62)) + (v52 << 6);
        }
        uint64_t v64 = *(void *)(*(void *)(v53 + 48) + 8 * v60);
        uint64_t v65 = *(void *)(v53 + 56) + 56 * v60;
        uint64_t v66 = *(void *)v65;
        uint64_t v67 = *(void *)(v65 + 8);
        long long v112 = *(_OWORD *)(v65 + 24);
        uint64_t v117 = *(void *)(v65 + 40);
        int v68 = *(unsigned __int8 *)(v65 + 48);
        int v69 = *(unsigned __int8 *)(v65 + 49);
        if (!v58[2]) {
          break;
        }
        sub_2607F3ED0(v64);
        if (v70 & 1) == 0 && ((v69 | v68)) {
          goto LABEL_45;
        }
      }
      if ((v69 | v68) == 1)
      {
LABEL_45:
        uint64_t v71 = 0;
        while (1)
        {
          char v72 = 1;
          if (v71 == 2) {
            break;
          }
          while (1)
          {
            ++v71;
            if (v72) {
              break;
            }
            if (v71 == 2)
            {
              if (v68) {
                int v68 = 5;
              }
              else {
                int v68 = 4;
              }
              if (v69) {
                goto LABEL_57;
              }
              goto LABEL_58;
            }
            char v72 = 0;
          }
        }
        if (v69) {
LABEL_57:
        }
          v68 |= 2u;
LABEL_58:
        swift_isUniquelyReferenced_nonNull_native();
        unint64_t v73 = sub_2607F3ED0(v64);
        char v106 = v74;
        if (__OFADD__(v58[2], (v74 & 1) == 0)) {
          goto LABEL_76;
        }
        unint64_t v75 = v73;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4778);
        uint64_t v53 = v95;
        uint64_t v54 = v95 + 64;
        if (sub_26087B950())
        {
          unint64_t v76 = sub_2607F3ED0(v64);
          if ((v106 & 1) != (v77 & 1)) {
            goto LABEL_78;
          }
          unint64_t v75 = v76;
        }
        if (v106)
        {
          uint64_t v78 = v58[7] + 56 * v75;
          *(void *)uint64_t v78 = v66;
          *(void *)(v78 + 8) = v67;
          *(_DWORD *)(v78 + 16) = v68;
          *(_OWORD *)(v78 + 24) = v112;
          *(void *)(v78 + 40) = v117;
          *(_WORD *)(v78 + 48) = 0;
          *(unsigned char *)(v78 + 50) = 0;
        }
        else
        {
          v58[(v75 >> 6) + 8] |= 1 << v75;
          *(void *)(v58[6] + 8 * v75) = v64;
          uint64_t v79 = v58[7] + 56 * v75;
          *(void *)uint64_t v79 = v66;
          *(void *)(v79 + 8) = v67;
          *(_DWORD *)(v79 + 16) = v68;
          *(_OWORD *)(v79 + 24) = v112;
          *(void *)(v79 + 40) = v117;
          *(_WORD *)(v79 + 48) = 0;
          *(unsigned char *)(v79 + 50) = 0;
          uint64_t v80 = v58[2];
          BOOL v61 = __OFADD__(v80, 1);
          uint64_t v81 = v80 + 1;
          if (v61) {
            goto LABEL_77;
          }
          v58[2] = v81;
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v16 = 0;
  uint64_t v17 = v14 + 5;
  while (v16 != 0x7FFFFFFFFFFFFEC0)
  {
    uint64_t v19 = *(v17 - 1);
    unint64_t v18 = *v17;
    BOOL v20 = sub_260831898(v16 + 320, a4, a5);
    sub_2607DCED0(v19, v18);
    if (v20) {
      unint64_t v99 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
    }
    else {
      unint64_t v99 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0() & 0x1F;
    }
    sub_2607DCED0(v19, v18);
    unint64_t v21 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0() & 0x1F;
    _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(8, v19, v18, v22, v23, v24, v25, v26, v83, v85, v87, v89, v91, v93, v95, v97, v99, v102, v104,
      v107,
      v110,
      v113,
      v115,
      v118,
      v120,
      v122,
      v124,
      v126,
      v128,
      SBYTE2(v128),
      SBYTE3(v128),
      SBYTE4(v128),
      SBYTE5(v128),
      SBYTE6(v128),
      SHIBYTE(v128),
      v136,
      SBYTE1(v136),
      SBYTE2(v136),
      SBYTE3(v136),
      SBYTE4(v136),
      SBYTE5(v136),
      SBYTE6(v136),
      SHIBYTE(v136),
      v145,
      v147,
      v149,
      v150,
      v151,
      *(uint64_t *)&v152,
      *(uint64_t *)&v153,
      v154,
      v155,
      v156,
      v157,
      v158,
      v159,
      v160);
    HIDWORD(v98) = v27;
    _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcig_0(24, v19, v18, v28, v29, v30, v31, v32, v84, v86, v88, v90, v92, v94, v96, v98, v100, v103, v105,
      v108,
      v111,
      v114,
      v116,
      v119,
      v121,
      v123,
      v125,
      v127,
      v129,
      v130,
      v131,
      v132,
      v133,
      v134,
      v135,
      v137,
      v138,
      v139,
      v140,
      v141,
      v142,
      v143,
      v144,
      v146,
      v148,
      v149,
      v150,
      v151,
      *(uint64_t *)&v152,
      *(uint64_t *)&v153,
      v154,
      v155,
      v156,
      v157,
      v158,
      v159,
      v160);
    unsigned __int16 v34 = v33;
    BOOL v35 = HIDReport.subscript.getter(7, v19, v18);
    BOOL v36 = HIDReport.subscript.getter(6, v19, v18);
    LODWORD(v102) = HIDReport.subscript.getter(5, v19, v18);
    sub_2607DCF28(v19, v18);
    uint64_t v39 = *(void *)(v95 + 16);
    unint64_t v40 = 0;
    uint64_t v107 = v21;
    uint64_t v110 = v15;
    HIDWORD(v104) = v35;
    if (!v39) {
      goto LABEL_16;
    }
    unint64_t v41 = sub_2607F3ED0(v21);
    if ((v42 & 1) == 0)
    {
      uint64_t v39 = 0;
LABEL_16:
      unsigned __int8 v46 = 0;
      unsigned __int8 v47 = 0;
      double v44 = 0.0;
      double v45 = 0.0;
      goto LABEL_17;
    }
    uint64_t v43 = *(void *)(v95 + 56) + 56 * v41;
    uint64_t v39 = *(void *)(v43 + 8);
    unint64_t v40 = *(void *)(v43 + 24);
    double v44 = *(double *)(v43 + 32);
    double v45 = *(double *)(v43 + 40);
    unsigned __int8 v46 = *(unsigned char *)(v43 + 48);
    unsigned __int8 v47 = *(unsigned char *)(v43 + 49);
LABEL_17:
    v17 += 2;
    BOOL v48 = v39 != v101;
    v37.n128_f64[0] = (double)WORD2(v97) / 65535.0;
    v38.n128_u64[0] = v40;
    BOOL v49 = static HIDPoint.== infix(_:_:)(v37, (double)v34 / 65535.0, 0.0, v38, v44, v45);
    int v50 = (32 * v48) | 4;
    if (v49) {
      int v50 = 32 * v48;
    }
    unsigned int v51 = v50 & 0xFFFFFFFE | (BYTE4(v104) ^ v46) & 1;
    uint64_t v149 = v107;
    uint64_t v150 = v101;
    if ((v36 ^ v47)) {
      v51 |= 2u;
    }
    if (v102) {
      v51 |= 0x200u;
    }
    LODWORD(v151) = v51;
    double v152 = (double)WORD2(v97) / 65535.0;
    double v153 = (double)v34 / 65535.0;
    uint64_t v154 = 0;
    LOBYTE(v155) = BYTE4(v104) & 1;
    BYTE1(v155) = v36;
    BYTE2(v155) = v102 & 1;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v147 = v115;
    sub_2607F5498((uint64_t)&v149, v107);
    swift_bridgeObjectRelease();
    sub_2607DCF28(v19, v18);
    v16 += 8;
    --v15;
    a4 = v91;
    a5 = v93;
    if (v110 == 1) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  uint64_t result = sub_26087BC30();
  __break(1u);
  return result;
}

uint64_t sub_260829C64()
{
  return sub_26087B1F0();
}

uint64_t sub_260829C84()
{
  return sub_260829C64();
}

uint64_t sub_260829C90(double a1, double a2, double a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  char v10 = sub_2607DB19C(0, a5, a6);
  if ((v10 & 0x8F) == 0) {
    return MEMORY[0x263F8EE78];
  }
  char v11 = v10;
  if (v10)
  {
    v6[3] = a1;
    v6[4] = a2;
    double v12 = a1;
    v6[5] = a3;
  }
  else
  {
    double v12 = v6[3];
  }
  static HIDPoint.- infix(_:_:)(a1, a2, a3, v12);
  uint64_t FluidTouchGestureEvent = IOHIDEventCreateFluidTouchGestureEvent();
  IOHIDEventSetIntegerValue();
  if ((v11 & 0xC) != 0)
  {
    v6[3] = 0.0;
    v6[4] = 0.0;
    v6[5] = 0.0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_26087C870;
  *(void *)(result + 56) = &type metadata for FluidTouchGestureEvent;
  *(void *)(result + 64) = &protocol witness table for FluidTouchGestureEvent;
  *(void *)(result + 32) = FluidTouchGestureEvent;
  return result;
}

uint64_t DigitizerGesture.description.getter()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_26087B1F0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DigitizerGesture.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DigitizerGesture.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 72, 7);
}

uint64_t sub_260829E7C()
{
  return DigitizerGesture.description.getter();
}

uint64_t sub_260829EA0(unint64_t *a1)
{
  return DigitizerGesture.dispatch(report:)(*a1, a1[1]);
}

_UNKNOWN **sub_260829ECC()
{
  return &protocol witness table for DigitizerReport;
}

_UNKNOWN **sub_260829ED8()
{
  return &protocol witness table for DigitizerReport;
}

uint64_t type metadata accessor for DigitizerGesture()
{
  return self;
}

uint64_t method lookup function for DigitizerGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DigitizerGesture);
}

uint64_t dispatch thunk of DigitizerGesture.__allocating_init(platform:useRemoteAcceleration:dispatchPointerEvents:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t destroy for DigitizerGesture.State()
{
  return swift_bridgeObjectRelease();
}

void *_s12UniversalHID16DigitizerGestureC5StateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DigitizerGesture.State(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for DigitizerGesture.State(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitizerGesture.State(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitizerGesture.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitizerGesture.State()
{
  return &type metadata for DigitizerGesture.State;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DigitizerGesture.State.Contact(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 51))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitizerGesture.State.Contact(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 51) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitizerGesture.State.Contact()
{
  return &type metadata for DigitizerGesture.State.Contact;
}

uint64_t sub_26082A170()
{
  return MEMORY[0x263F8D6D8];
}

uint64_t sub_26082A17C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_26082AA9C();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_26082A1E8(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_26082A1E8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_26087BB90();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_26082A7BC(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_2607E2688(v3 / 2);
  uint64_t v83 = a1;
  uint64_t v84 = result;
  uint64_t v88 = v6;
  uint64_t v86 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    unint64_t v26 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_90:
    if (v26 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v86 >= -1)
      {
        *(void *)(v84 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v76 = *v83;
    while (1)
    {
      unint64_t v77 = v26 - 2;
      if (v26 < 2) {
        break;
      }
      if (!v76) {
        goto LABEL_133;
      }
      uint64_t v78 = *(void *)(v9 + 32 + 16 * v77);
      uint64_t v79 = *(void *)(v9 + 32 + 16 * (v26 - 1) + 8);
      uint64_t result = sub_26082A814((char *)(v76 + 8 * v78), (char *)(v76 + 8 * *(void *)(v9 + 32 + 16 * (v26 - 1))), v76 + 8 * v79, v88);
      if (v1) {
        goto LABEL_86;
      }
      if (v79 < v78) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_26082AA88(v9);
        uint64_t v9 = result;
      }
      if (v77 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v80 = (void *)(v9 + 32 + 16 * v77);
      *uint64_t v80 = v78;
      v80[1] = v79;
      unint64_t v81 = *(void *)(v9 + 16);
      if (v26 > v81) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v26 - 1)), (const void *)(v9 + 32 + 16 * v26), 16 * (v81 - v26));
      *(void *)(v9 + 16) = v81 - 1;
      unint64_t v26 = v81 - 1;
      if (v81 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v82 = *a1 - 8;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v85 = v5;
  uint64_t v87 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 8 * v7);
      uint64_t v12 = *(void *)(v8 + 8 * v10);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v13 = v11;
        while (1)
        {
          uint64_t v14 = *(void *)(v8 + 8 * v7);
          if (v11 < v12 == v14 >= v13) {
            break;
          }
          ++v7;
          uint64_t v13 = v14;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v15 = v7 - 1;
          uint64_t v16 = v10;
          do
          {
            if (v16 != v15)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v17 = *(void *)(v8 + 8 * v16);
              *(void *)(v8 + 8 * v16) = *(void *)(v8 + 8 * v15);
              *(void *)(v8 + 8 * v15) = v17;
            }
            BOOL v57 = ++v16 < v15--;
          }
          while (v57);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v18 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v18 >= v3) {
          uint64_t v18 = v3;
        }
        if (v18 < v10) {
          goto LABEL_128;
        }
        if (v7 != v18)
        {
          uint64_t v19 = (uint64_t *)(v82 + 8 * v7);
          do
          {
            uint64_t v20 = *(void *)(v8 + 8 * v7);
            uint64_t v21 = v10;
            uint64_t v22 = v19;
            do
            {
              uint64_t v23 = *v22;
              if (v20 >= *v22) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              *uint64_t v22 = v20;
              v22[1] = v23;
              --v22;
              ++v21;
            }
            while (v7 != v21);
            ++v7;
            ++v19;
          }
          while (v7 != v18);
          uint64_t v7 = v18;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_26082A990(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v25 = *(void *)(v9 + 16);
    unint64_t v24 = *(void *)(v9 + 24);
    unint64_t v26 = v25 + 1;
    uint64_t v8 = v87;
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)sub_26082A990((char *)(v24 > 1), v25 + 1, 1, (char *)v9);
      uint64_t v8 = v87;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v26;
    uint64_t v27 = v9 + 32;
    uint64_t v28 = (uint64_t *)(v9 + 32 + 16 * v25);
    *uint64_t v28 = v10;
    v28[1] = v7;
    if (v25) {
      break;
    }
    unint64_t v26 = 1;
LABEL_81:
    uint64_t v5 = v85;
    uint64_t v3 = v86;
    if (v7 >= v86) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v29 = v26 - 1;
    if (v26 >= 4)
    {
      unint64_t v34 = v27 + 16 * v26;
      uint64_t v35 = *(void *)(v34 - 64);
      uint64_t v36 = *(void *)(v34 - 56);
      BOOL v40 = __OFSUB__(v36, v35);
      uint64_t v37 = v36 - v35;
      if (v40) {
        goto LABEL_107;
      }
      uint64_t v39 = *(void *)(v34 - 48);
      uint64_t v38 = *(void *)(v34 - 40);
      BOOL v40 = __OFSUB__(v38, v39);
      uint64_t v32 = v38 - v39;
      char v33 = v40;
      if (v40) {
        goto LABEL_108;
      }
      unint64_t v41 = v26 - 2;
      char v42 = (uint64_t *)(v27 + 16 * (v26 - 2));
      uint64_t v44 = *v42;
      uint64_t v43 = v42[1];
      BOOL v40 = __OFSUB__(v43, v44);
      uint64_t v45 = v43 - v44;
      if (v40) {
        goto LABEL_109;
      }
      BOOL v40 = __OFADD__(v32, v45);
      uint64_t v46 = v32 + v45;
      if (v40) {
        goto LABEL_111;
      }
      if (v46 >= v37)
      {
        uint64_t v64 = (uint64_t *)(v27 + 16 * v29);
        uint64_t v66 = *v64;
        uint64_t v65 = v64[1];
        BOOL v40 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v40) {
          goto LABEL_117;
        }
        BOOL v57 = v32 < v67;
        goto LABEL_70;
      }
    }
    else
    {
      if (v26 != 3)
      {
        uint64_t v58 = *(void *)(v9 + 32);
        uint64_t v59 = *(void *)(v9 + 40);
        BOOL v40 = __OFSUB__(v59, v58);
        uint64_t v51 = v59 - v58;
        char v52 = v40;
        goto LABEL_64;
      }
      uint64_t v31 = *(void *)(v9 + 32);
      uint64_t v30 = *(void *)(v9 + 40);
      BOOL v40 = __OFSUB__(v30, v31);
      uint64_t v32 = v30 - v31;
      char v33 = v40;
    }
    if (v33) {
      goto LABEL_110;
    }
    unint64_t v41 = v26 - 2;
    unsigned __int8 v47 = (uint64_t *)(v27 + 16 * (v26 - 2));
    uint64_t v49 = *v47;
    uint64_t v48 = v47[1];
    BOOL v50 = __OFSUB__(v48, v49);
    uint64_t v51 = v48 - v49;
    char v52 = v50;
    if (v50) {
      goto LABEL_112;
    }
    uint64_t v53 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    BOOL v40 = __OFSUB__(v54, v55);
    uint64_t v56 = v54 - v55;
    if (v40) {
      goto LABEL_114;
    }
    if (__OFADD__(v51, v56)) {
      goto LABEL_116;
    }
    if (v51 + v56 >= v32)
    {
      BOOL v57 = v32 < v56;
LABEL_70:
      if (v57) {
        unint64_t v29 = v41;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v52) {
      goto LABEL_113;
    }
    unint64_t v60 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v62 = *v60;
    uint64_t v61 = v60[1];
    BOOL v40 = __OFSUB__(v61, v62);
    uint64_t v63 = v61 - v62;
    if (v40) {
      goto LABEL_115;
    }
    if (v63 < v51) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v68 = v9;
    unint64_t v69 = v29 - 1;
    if (v29 - 1 >= v26)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    char v70 = (uint64_t *)(v27 + 16 * v69);
    uint64_t v71 = *v70;
    uint64_t v72 = v27;
    unint64_t v73 = (void *)(v27 + 16 * v29);
    uint64_t v74 = v73[1];
    uint64_t result = sub_26082A814((char *)(v8 + 8 * *v70), (char *)(v8 + 8 * *v73), v8 + 8 * v74, v88);
    if (v1) {
      break;
    }
    if (v74 < v71) {
      goto LABEL_104;
    }
    if (v29 > *(void *)(v68 + 16)) {
      goto LABEL_105;
    }
    *char v70 = v71;
    *(void *)(v72 + 16 * v69 + 8) = v74;
    unint64_t v75 = *(void *)(v68 + 16);
    if (v29 >= v75) {
      goto LABEL_106;
    }
    uint64_t v9 = v68;
    unint64_t v26 = v75 - 1;
    uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v29));
    uint64_t v27 = v72;
    *(void *)(v68 + 16) = v75 - 1;
    uint64_t v8 = v87;
    if (v75 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v86 < -1) {
    goto LABEL_125;
  }
  *(void *)(v84 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_26082A7BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 8 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (uint64_t *)v5;
      do
      {
        uint64_t v9 = *v8;
        if (v6 >= *v8) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *uint64_t v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_26082A814(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_2607E8BE0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v12 = &v4[8 * v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_39;
    }
    uint64_t v18 = (char *)(a3 - 8);
    while (1)
    {
      uint64_t v19 = v18 + 8;
      uint64_t v20 = *((void *)v6 - 1);
      if (*((void *)v12 - 1) >= v20)
      {
        BOOL v22 = v19 != v12 || v18 >= v12;
        uint64_t v20 = *((void *)v12 - 1);
        v12 -= 8;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= v6;
        v6 -= 8;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *(void *)uint64_t v18 = v20;
LABEL_35:
      v18 -= 8;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_2607E8BE0(a1, (a2 - a1) / 8, a4);
  uint64_t v12 = &v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v14 = *(void *)v6;
      if (*(void *)v6 < *(void *)v4) {
        break;
      }
      uint64_t v14 = *(void *)v4;
      BOOL v15 = v7 == v4;
      v4 += 8;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 8;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    BOOL v15 = v7 == v6;
    v6 += 8;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    *(void *)uint64_t v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_2607E8BE0(v4, (v12 - v4) / 8, v6);
  return 1;
}

char *sub_26082A990(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4D20);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_26082AA88(uint64_t a1)
{
  return sub_26082A990(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_26082AA9C()
{
}

void sub_26082AAB0(uint64_t a1)
{
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return swift_beginAccess();
}

void HIDEventProtocol.append(_:)()
{
}

uint64_t _HIDEventImpl.init(wrappedValue:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  uint64_t v6 = OUTLINED_FUNCTION_39_0();
  int v8 = v7(v6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (v8 == result)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    OUTLINED_FUNCTION_16_10();
    uint64_t v11 = v10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v11, a2, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HIDEventProtocol.phase.getter()
{
  OUTLINED_FUNCTION_14_8();
  uint64_t v1 = (void *)v0();
  int Phase = IOHIDEventGetPhase();

  return Phase & 0xFFFFFF8F;
}

uint64_t HIDEventProtocol.first<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  _OWORD v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  HIDEventProtocol.first(where:)((uint64_t (*)(uint64_t *))sub_26082F81C, (uint64_t)v11, a1, a3, (uint64_t *)&v12);
  if (v13)
  {
    sub_2607E2B70(&v12, (uint64_t)v14);
    sub_2607E2A1C((uint64_t)v14, (uint64_t)&v12);
    OUTLINED_FUNCTION_45_0();
    v7();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v8 = a5;
    uint64_t v9 = 0;
  }
  else
  {
    sub_2607E2B10((uint64_t)&v12);
    uint64_t v8 = a5;
    uint64_t v9 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v8, v9, 1, a2);
}

uint64_t sub_26082AD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E11C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082AD30(void *a1)
{
  id v1 = objc_msgSend(a1, sel_children);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = v1;
  sub_2607E2AD0();
  unint64_t v3 = sub_26087B3F0();

  uint64_t v4 = sub_26082E13C(v3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2607EA59C, (uint64_t (*)(uint64_t, unint64_t))sub_2607E2840);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t HIDEventProtocol.children.getter()
{
  OUTLINED_FUNCTION_14_8();
  id v1 = (void *)v0();
  id v2 = objc_msgSend(v1, sel_children);

  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  sub_2607E2AD0();
  unint64_t v3 = sub_26087B3F0();

  uint64_t v4 = sub_26082E13C(v3, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2607EA59C, (uint64_t (*)(uint64_t, unint64_t))sub_2607E2840);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_26082AE80()
{
  return sub_26082AE88();
}

uint64_t sub_26082AE88()
{
  return 0x800000000;
}

uint64_t sub_26082AE90()
{
  return 0x20000;
}

uint64_t sub_26082AE98()
{
  return 8;
}

uint64_t sub_26082AEA0()
{
  return 0x800000;
}

uint64_t sub_26082AEA8()
{
  return 32;
}

uint64_t sub_26082AEB0()
{
  return 64;
}

uint64_t sub_26082AEB8()
{
  return 512;
}

uint64_t sub_26082AEC0()
{
  return 128;
}

uint64_t sub_26082AEC8()
{
  return 2048;
}

uint64_t sub_26082AED0()
{
  return 0x8000000000;
}

uint64_t sub_26082AED8()
{
  return 0x400000;
}

uint64_t sub_26082AEE0()
{
  return 0x8000000;
}

uint64_t sub_26082AEE8()
{
  return 0x10000;
}

uint64_t HIDEventProtocol.eventMask.getter(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = (*(uint64_t (**)(void))(a2 + 24))();
  HIDEventType.maskValue.getter(v2);
  return HIDEventType.maskValue.getter(v2);
}

uint64_t sub_26082AF3C()
{
  return sub_2607E3B98();
}

uint64_t sub_26082AF44()
{
  return 6;
}

uint64_t sub_26082AF4C()
{
  return 5;
}

uint64_t sub_26082AF54()
{
  return 23;
}

uint64_t sub_26082AF5C()
{
  return 22;
}

uint64_t sub_26082AF64()
{
  return 39;
}

uint64_t sub_26082AF6C()
{
  return 27;
}

uint64_t _HIDEventImpl.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t HIDEventProtocol.flags.getter()
{
  OUTLINED_FUNCTION_14_8();
  id v1 = (void *)v0();
  uint64_t EventFlags = IOHIDEventGetEventFlags();

  return EventFlags;
}

uint64_t sub_26082AFE4()
{
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.flags.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_12_12(a1, a2);
  id v4 = (id)v3(v2);
  IOHIDEventSetEventFlags();
}

uint64_t (*sub_26082B044(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_20_8(v1);
  return sub_260831080;
}

void (*HIDEventProtocol.flags.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(_DWORD *)(v3 + 24) = HIDEventProtocol.flags.getter();
  return sub_26082B0C4;
}

void sub_26082B0C4(uint64_t a1)
{
}

BOOL sub_26082B0F0()
{
  return IOHIDEventIsAbsolute() != 0;
}

BOOL HIDEventProtocol.absolute.getter(uint64_t a1, uint64_t a2)
{
  return sub_26082BB40(a1, a2, MEMORY[0x263F0EBF0]);
}

uint64_t sub_26082B128()
{
  OUTLINED_FUNCTION_24_4();
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.absolute.setter()
{
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_27_2();
  HIDEventProtocol.flags.setter(v0, v1);
}

uint64_t (*sub_26082B1A4(void *a1))()
{
  char v1 = OUTLINED_FUNCTION_4_13(a1) != 0;
  OUTLINED_FUNCTION_1_19(v1);
  return sub_260831084;
}

void (*HIDEventProtocol.absolute.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_3_13(a1, a2, a3);
  BOOL v5 = HIDEventProtocol.absolute.getter(v3, v4);
  OUTLINED_FUNCTION_32_0(v5);
  return sub_26082B22C;
}

void sub_26082B22C(uint64_t a1)
{
}

uint64_t sub_26082B250()
{
  return (IOHIDEventGetEventFlags() >> 16) & 1;
}

uint64_t HIDEventProtocol.accelerated.getter()
{
  OUTLINED_FUNCTION_18_8();
  return (v0() >> 16) & 1;
}

uint64_t sub_26082B28C()
{
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_40_0();
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.accelerated.setter()
{
  int v0 = OUTLINED_FUNCTION_13_8() & 0xFFFEFFFF;
  uint64_t v1 = OUTLINED_FUNCTION_25_4(v0);
  HIDEventProtocol.flags.setter(v1, v2);
}

uint64_t (*sub_26082B31C(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19(BYTE2(v1) & 1);
  return sub_260831088;
}

void (*HIDEventProtocol.accelerated.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_2_20(a1, a2, a3);
  uint64_t v5 = v4(v3);
  OUTLINED_FUNCTION_32_0(BYTE2(v5) & 1);
  return sub_26082B3A0;
}

void sub_26082B3A0(uint64_t a1)
{
}

uint64_t sub_26082B3C4()
{
  return (IOHIDEventGetEventFlags() >> 4) & 1;
}

uint64_t HIDEventProtocol.builtin.getter()
{
  OUTLINED_FUNCTION_18_8();
  return (v0() >> 4) & 1;
}

uint64_t sub_26082B400()
{
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_40_0();
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.builtin.setter()
{
  int v0 = OUTLINED_FUNCTION_13_8() & 0xFFFFFFEF;
  uint64_t v1 = OUTLINED_FUNCTION_25_4(v0);
  HIDEventProtocol.flags.setter(v1, v2);
}

uint64_t (*sub_26082B490(void *a1))()
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 0x10) != 0);
  return sub_26083108C;
}

void (*HIDEventProtocol.builtin.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_2_20(a1, a2, a3);
  char v5 = v4(v3);
  OUTLINED_FUNCTION_32_0((v5 & 0x10) != 0);
  return sub_26082B514;
}

void sub_26082B514(uint64_t a1)
{
}

uint64_t sub_26082B538()
{
  return (IOHIDEventGetEventFlags() >> 3) & 1;
}

uint64_t HIDEventProtocol.centerOrigin.getter()
{
  OUTLINED_FUNCTION_18_8();
  return (v0() >> 3) & 1;
}

uint64_t sub_26082B574()
{
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_40_0();
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.centerOrigin.setter()
{
  int v0 = OUTLINED_FUNCTION_13_8() & 0xFFFFFFF7;
  uint64_t v1 = OUTLINED_FUNCTION_25_4(v0);
  HIDEventProtocol.flags.setter(v1, v2);
}

uint64_t (*sub_26082B604(void *a1))()
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 8) != 0);
  return sub_260831090;
}

void (*HIDEventProtocol.centerOrigin.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_2_20(a1, a2, a3);
  char v5 = v4(v3);
  OUTLINED_FUNCTION_32_0((v5 & 8) != 0);
  return sub_26082B688;
}

void sub_26082B688(uint64_t a1)
{
}

uint64_t sub_26082B6AC()
{
  return (IOHIDEventGetEventFlags() >> 1) & 1;
}

uint64_t HIDEventProtocol.collection.getter()
{
  OUTLINED_FUNCTION_18_8();
  return (v0() >> 1) & 1;
}

uint64_t sub_26082B6E8()
{
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_40_0();
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.collection.setter()
{
  int v0 = OUTLINED_FUNCTION_13_8() & 0xFFFFFFFD;
  uint64_t v1 = OUTLINED_FUNCTION_25_4(v0);
  HIDEventProtocol.flags.setter(v1, v2);
}

uint64_t (*sub_26082B778(void *a1))()
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 2) != 0);
  return sub_260831094;
}

void (*HIDEventProtocol.collection.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_2_20(a1, a2, a3);
  char v5 = v4(v3);
  OUTLINED_FUNCTION_32_0((v5 & 2) != 0);
  return sub_26082B7FC;
}

void sub_26082B7FC(uint64_t a1)
{
}

uint64_t sub_26082B820()
{
  return (IOHIDEventGetEventFlags() >> 5) & 1;
}

uint64_t HIDEventProtocol.interpolated.getter()
{
  OUTLINED_FUNCTION_18_8();
  return (v0() >> 5) & 1;
}

uint64_t sub_26082B85C()
{
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_40_0();
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.interpolated.setter()
{
  int v0 = OUTLINED_FUNCTION_13_8() & 0xFFFFFFDF;
  uint64_t v1 = OUTLINED_FUNCTION_25_4(v0);
  HIDEventProtocol.flags.setter(v1, v2);
}

uint64_t (*sub_26082B8EC(void *a1))()
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 0x20) != 0);
  return sub_260831098;
}

void (*HIDEventProtocol.interpolated.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_2_20(a1, a2, a3);
  char v5 = v4(v3);
  OUTLINED_FUNCTION_32_0((v5 & 0x20) != 0);
  return sub_26082B970;
}

void sub_26082B970(uint64_t a1)
{
}

uint64_t sub_26082B994()
{
  return (IOHIDEventGetEventFlags() >> 2) & 1;
}

uint64_t HIDEventProtocol.pixelUnits.getter()
{
  OUTLINED_FUNCTION_18_8();
  return (v0() >> 2) & 1;
}

uint64_t sub_26082B9D0()
{
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_40_0();
  return IOHIDEventSetEventFlags();
}

void HIDEventProtocol.pixelUnits.setter()
{
  int v0 = OUTLINED_FUNCTION_13_8() & 0xFFFFFFFB;
  uint64_t v1 = OUTLINED_FUNCTION_25_4(v0);
  HIDEventProtocol.flags.setter(v1, v2);
}

uint64_t (*sub_26082BA60(void *a1))()
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 4) != 0);
  return sub_26083109C;
}

void (*HIDEventProtocol.pixelUnits.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_2_20(a1, a2, a3);
  char v5 = v4(v3);
  OUTLINED_FUNCTION_32_0((v5 & 4) != 0);
  return sub_26082BAE4;
}

void sub_26082BAE4(uint64_t a1)
{
}

BOOL sub_26082BB08()
{
  return IOHIDEventIsRepeat() != 0;
}

BOOL HIDEventProtocol.repeat.getter(uint64_t a1, uint64_t a2)
{
  return sub_26082BB40(a1, a2, MEMORY[0x263F0EBF8]);
}

BOOL sub_26082BB40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  OUTLINED_FUNCTION_14_8();
  char v5 = (void *)v4();
  LODWORD(a3) = a3();

  return a3 != 0;
}

uint64_t sub_26082BB84(uint64_t result)
{
  if (result) {
    return IOHIDEventSetRepeat();
  }
  return result;
}

void HIDEventProtocol.repeat.setter(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_12_12(a1, a2);
    id v4 = (id)v3(v2);
    IOHIDEventSetRepeat();
  }
}

uint64_t (*sub_26082BBE4(void *a1))()
{
  char v1 = OUTLINED_FUNCTION_8_14(a1) != 0;
  OUTLINED_FUNCTION_1_19(v1);
  return sub_26083107C;
}

void (*HIDEventProtocol.repeat.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3 = OUTLINED_FUNCTION_3_13(a1, a2, a3);
  BOOL v5 = HIDEventProtocol.repeat.getter(v3, v4);
  OUTLINED_FUNCTION_32_0(v5);
  return sub_26082BC6C;
}

void sub_26082BC6C(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9(a1);
  HIDEventProtocol.repeat.setter(v1, v2);
}

double sub_26082BC90()
{
  if (!(id)IOHIDEventGetParent()) {
    return OUTLINED_FUNCTION_29_1();
  }
  type metadata accessor for IOHIDEvent(0);
  OUTLINED_FUNCTION_69_0(v0, (uint64_t)&protocol witness table for IOHIDEventRef);
  return result;
}

double HIDEventProtocol.parent.getter()
{
  OUTLINED_FUNCTION_14_8();
  uint64_t v1 = (void *)v0();
  id v2 = (id)IOHIDEventGetParent();

  if (!v2) {
    return OUTLINED_FUNCTION_29_1();
  }
  type metadata accessor for IOHIDEvent(0);
  OUTLINED_FUNCTION_69_0(v3, (uint64_t)&protocol witness table for IOHIDEventRef);
  return result;
}

uint64_t sub_26082BD48()
{
  return sub_2607E2B8C(*v0);
}

uint64_t sub_26082BD50()
{
  return IOHIDEventSetPhase();
}

void HIDEventProtocol.phase.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_12_12(a1, a2);
  id v4 = (id)v3(v2);
  IOHIDEventSetPhase();
}

uint64_t (*sub_26082BDB0())()
{
  uint64_t v1 = OUTLINED_FUNCTION_22_6();
  uint64_t v2 = OUTLINED_FUNCTION_7_14((uint64_t)v1);
  *(void *)(v0 + 32) = sub_26082BE00(v2, v3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082BE00(uint64_t a1, uint64_t a2))()
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = IOHIDEventGetPhase() & 0x8F;
  return sub_260831078;
}

uint64_t (*sub_26082BE50(uint64_t a1, uint64_t a2))()
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = IOHIDEventGetPhase() & 0x8F;
  return sub_26082BEA0;
}

uint64_t sub_26082BEA0()
{
  return IOHIDEventSetPhase();
}

void (*HIDEventProtocol.phase.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(unsigned char *)(v3 + 24) = HIDEventProtocol.phase.getter();
  return sub_26082BEF4;
}

void sub_26082BEF4(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9(a1);
  HIDEventProtocol.phase.setter(v1, v2);
}

uint64_t sub_26082BF18()
{
  return sub_260828150(*v0);
}

uint64_t HIDEventProtocol.momentum.getter()
{
  OUTLINED_FUNCTION_14_8();
  uint64_t v1 = (void *)v0();
  uint64_t ScrollMomentum = IOHIDEventGetScrollMomentum();

  return ScrollMomentum;
}

uint64_t sub_26082BF58()
{
  return IOHIDEventSetScrollMomentum();
}

void HIDEventProtocol.momentum.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_12_12(a1, a2);
  id v4 = (id)v3(v2);
  IOHIDEventSetScrollMomentum();
}

uint64_t (*sub_26082BFB8(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_17(a1);
  OUTLINED_FUNCTION_21_8(v1);
  return sub_2608310A0;
}

void (*HIDEventProtocol.momentum.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  OUTLINED_FUNCTION_3_13(a1, a2, a3);
  *(unsigned char *)(v3 + 24) = HIDEventProtocol.momentum.getter();
  return sub_26082C038;
}

void sub_26082C038(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_15_9(a1);
  HIDEventProtocol.momentum.setter(v1, v2);
}

uint64_t HIDEventProtocol.sender.getter()
{
  OUTLINED_FUNCTION_14_8();
  uint64_t v1 = (void *)v0();
  uint64_t SenderID = IOHIDEventGetSenderID();

  return SenderID;
}

uint64_t sub_26082C098()
{
  return IOHIDEventSetSenderID();
}

void HIDEventProtocol.sender.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t (*sub_26082C0C0(uint64_t a1))()
{
  *uint64_t v1 = OUTLINED_FUNCTION_5_12(a1);
  return sub_2608310A8;
}

void (*HIDEventProtocol.sender.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  OUTLINED_FUNCTION_4_10(a1, a2, a3);
  *uint64_t v3 = HIDEventProtocol.sender.getter();
  return sub_26082C144;
}

void sub_26082C144(uint64_t *a1)
{
}

uint64_t HIDEventProtocol.time.getter()
{
  OUTLINED_FUNCTION_14_8();
  uint64_t v1 = (void *)v0();
  uint64_t TimeStamp = IOHIDEventGetTimeStamp();

  return TimeStamp;
}

uint64_t sub_26082C1A8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270EF43F8](a2, a1);
}

void HIDEventProtocol.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_26082C1D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  uint64_t v6 = OUTLINED_FUNCTION_12_12(a1, a2);
  id v8 = (id)v7(v6);
  a4(v8, a1);
}

uint64_t (*sub_26082C230(uint64_t a1))(void *)
{
  *uint64_t v1 = OUTLINED_FUNCTION_6_15(a1);
  return sub_2608310A4;
}

void (*HIDEventProtocol.time.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  OUTLINED_FUNCTION_4_10(a1, a2, a3);
  *uint64_t v3 = HIDEventProtocol.time.getter();
  return sub_26082C2B4;
}

void sub_26082C2B4(uint64_t *a1)
{
}

void sub_26082C2DC()
{
  OUTLINED_FUNCTION_56_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 352);
  id v7 = v3;
  uint64_t v8 = OUTLINED_FUNCTION_94();
  uint64_t v11 = v6(v8);
  v1(v7, v11, 0);

  OUTLINED_FUNCTION_53_0();
}

void HIDEventProtocol.remove(_:)()
{
}

void sub_26082C38C()
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v1 = v0;
  uint64_t v3 = (void *)v2;
  uint64_t v5 = OUTLINED_FUNCTION_12_12(v2, v4);
  id v7 = (void *)v6(v5);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  OUTLINED_FUNCTION_16_10();
  v8();
  uint64_t v9 = OUTLINED_FUNCTION_63_0();
  v1(v9);

  OUTLINED_FUNCTION_14_5();
}

double sub_26082C41C()
{
  if (!(id)IOHIDEventGetEventWithOptions()) {
    return OUTLINED_FUNCTION_29_1();
  }
  type metadata accessor for IOHIDEvent(0);
  OUTLINED_FUNCTION_69_0(v0, (uint64_t)&protocol witness table for IOHIDEventRef);
  return result;
}

double HIDEventProtocol.first(_:options:)()
{
  OUTLINED_FUNCTION_16_10();
  uint64_t v1 = (void *)v0();
  id v2 = (id)IOHIDEventGetEventWithOptions();

  if (!v2) {
    return OUTLINED_FUNCTION_29_1();
  }
  type metadata accessor for IOHIDEvent(0);
  OUTLINED_FUNCTION_69_0(v3, (uint64_t)&protocol witness table for IOHIDEventRef);
  return result;
}

uint64_t HIDEventProtocol.addRemoteTimestamp<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_26082E34C(a1, a2, a3, a4, a5, (uint64_t (*)(void))HIDEventProtocol.addRemoteTimestamp(_:));
}

uint64_t sub_26082C528@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_26082C534(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_26082C540@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

uint64_t sub_26082C54C(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_26082C554(unsigned __int8 *a1, unsigned __int8 a2)
{
  int v3 = (*v2 & a2);
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

BOOL sub_26082C584(_DWORD *a1, int a2)
{
  int v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

void sub_26082C5B0(uint64_t a1)
{
  OUTLINED_FUNCTION_51_0(*v1 | a1);
}

void sub_26082C5BC(int a1)
{
  OUTLINED_FUNCTION_28_1(*v1 | a1);
}

void sub_26082C5C8(char a1)
{
  OUTLINED_FUNCTION_50_0(*v1 | a1);
}

void sub_26082C5D4(uint64_t a1)
{
  OUTLINED_FUNCTION_51_0(*v1 & a1);
}

void sub_26082C5E0(int a1)
{
  OUTLINED_FUNCTION_28_1(*v1 & a1);
}

void sub_26082C5EC(char a1)
{
  OUTLINED_FUNCTION_50_0(*v1 & a1);
}

void sub_26082C5F8(uint64_t a1)
{
  OUTLINED_FUNCTION_51_0(*v1 ^ a1);
}

void sub_26082C604(int a1)
{
  OUTLINED_FUNCTION_28_1(*v1 ^ a1);
}

void sub_26082C610(char a1)
{
  OUTLINED_FUNCTION_50_0(*v1 ^ a1);
}

void sub_26082C61C()
{
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_38_0();
  uint64_t v6 = v2;
  unint64_t v7 = v3;
  OUTLINED_FUNCTION_42_0(v4, v5, v2, v3);
  sub_26082D364(v1, v0);
  OUTLINED_FUNCTION_7_0();
  MEMORY[0x26121C450]();
  sub_2607DCF28(v6, v7);
  OUTLINED_FUNCTION_14_5();
}

BOOL sub_26082C68C(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_26082C698(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_26082C6A4(char a1, unsigned __int8 a2)
{
  return (a2 & ~a1) == 0;
}

void sub_26082C6B4()
{
}

uint64_t sub_26082C6CC()
{
  OUTLINED_FUNCTION_66_0();
  sub_2607DCED0(v2, v3);
  sub_2607DCED0(v1, v0);
  OUTLINED_FUNCTION_7_0();
  sub_2607FE024(v4, v5, v6);
  uint64_t v7 = OUTLINED_FUNCTION_94();
  char v8 = MEMORY[0x26121C450](v7);
  OUTLINED_FUNCTION_65();
  return v8 & 1;
}

void sub_26082C740()
{
}

void sub_26082C758()
{
}

void sub_26082C770()
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = v4;
  unint64_t v11 = v2;
  OUTLINED_FUNCTION_42_0(v8, v6, v4, v2);
  v1(v9, v7);
  MEMORY[0x26121C450](v10, v11, v5, v3);
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_14_5();
}

void sub_26082C7EC()
{
  OUTLINED_FUNCTION_12_6();
  OUTLINED_FUNCTION_38_0();
  sub_2607DCED0(v0, v1);
  uint64_t v2 = OUTLINED_FUNCTION_31_0();
  sub_26082D364(v2, v3);
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_14_5();
}

BOOL sub_26082C840(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_26082C84C(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_26082C858(unsigned __int8 a1, char a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_26082C868()
{
  OUTLINED_FUNCTION_37_0();
  return v0 & 1;
}

uint64_t sub_26082C8A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v9[0] = a1;
  v9[1] = a2;
  OUTLINED_FUNCTION_42_0(a1, a2, a3, a4);
  sub_2607DCED0(a1, a2);
  sub_2607FE024(v9, a3, a4);
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_48_0();
  return 0;
}

uint64_t sub_26082C91C()
{
  OUTLINED_FUNCTION_37_0();
  return v0 & 1;
}

uint64_t sub_26082C954()
{
  OUTLINED_FUNCTION_37_0();
  return v0 & 1;
}

uint64_t sub_26082C98C()
{
  return sub_26082CC34();
}

#error "26082CA58: call analysis failed (funcsize=54)"

uint64_t sub_26082CA90(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v9 = *v2;
  sub_2607DCED0(a1, a2);
  sub_2607DCED0(v3, v4);
  OUTLINED_FUNCTION_27_2();
  sub_2607FDF9C(v5, v6, v7);
  return sub_2607FE024(v2, v9, v4);
}

#error "26082CB4C: call analysis failed (funcsize=57)"

void sub_26082CBE4(int a1)
{
  OUTLINED_FUNCTION_28_1(*v1 & ~a1);
}

void sub_26082CBF0(char a1)
{
  OUTLINED_FUNCTION_50_0(*v1 & ~a1);
}

void sub_26082CBFC(uint64_t a1)
{
  OUTLINED_FUNCTION_51_0(*v1 & ~a1);
}

uint64_t sub_26082CC08()
{
  return sub_26082CC34();
}

uint64_t sub_26082CC34()
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v13 = *v0;
  unint64_t v14 = v0[1];
  sub_2607DCED0(*v0, v14);
  v4(v8, v6);
  v2(v13, v14);
  OUTLINED_FUNCTION_14_5();
  return sub_2607DCF28(v9, v10);
}

uint64_t sub_26082CCC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083A7B8(a1);
  *a2 = result;
  return result;
}

uint64_t _HIDEventImpl.init(event:)()
{
  OUTLINED_FUNCTION_68_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  uint64_t v8 = OUTLINED_FUNCTION_39_0();
  int v10 = v9(v8);
  if (v10 == (*(unsigned int (**)(uint64_t, uint64_t))(v1 + 16))(v3, v1))
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    OUTLINED_FUNCTION_16_10();
    uint64_t v12 = v11();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 40))(v12, v3, v1);
    __swift_storeEnumTagSinglePayload(v7, 0, 1, v3);
    OUTLINED_FUNCTION_52_0();
    return __swift_destroy_boxed_opaque_existential_1(v13);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    OUTLINED_FUNCTION_52_0();
    return __swift_storeEnumTagSinglePayload(v16, v17, v18, v19);
  }
}

uint64_t sub_26082CE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E1168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082CE48()
{
  return sub_2607DE59C();
}

uint64_t sub_26082CE50()
{
  return OUTLINED_FUNCTION_20_0();
}

uint64_t sub_26082CE58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083A804(a1);
  *a2 = result;
  return result;
}

uint64_t sub_26082CE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E110C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082CEA8()
{
  return sub_2607EB490();
}

uint64_t sub_26082CEB0()
{
  return sub_2607EBBA4();
}

uint64_t sub_26082CEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_26082D160(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_26082D27C, a5);
}

uint64_t sub_26082CED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_26082D160(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_26082D1B0, a5);
}

void sub_26082CEEC()
{
}

uint64_t sub_26082CF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_26082D160(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_26082D814, a5);
}

uint64_t sub_26082CF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_26082D160(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_26082D364, a5);
}

uint64_t sub_26082CF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_26082D160(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_26082D9A8, a5);
}

void sub_26082CF4C()
{
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_41_1(v2, v3, v4);
  sub_2607DCED0(v1, v0);
  uint64_t v5 = 0;
  for (unint64_t i = 0; ; ++i)
  {
    OUTLINED_FUNCTION_59_0();
    if (!v7)
    {
      __break(1u);
LABEL_15:
      __break(1u);
      return;
    }
    if (__OFADD__(v5, 8)) {
      goto LABEL_15;
    }
    sub_2607DB19C(v5 + 8, v1, v0);
    OUTLINED_FUNCTION_33_0();
    if (!v7) {
      break;
    }
    if (i > 2) {
      goto LABEL_12;
    }
LABEL_11:
    v5 += 8;
  }
  unsigned __int8 v9 = v8;
  if ((AppleVendorTopCaseReport.update(with:)(v8) & 0x100) == 0) {
    AppleVendorTopCaseReport.remove(_:)(v9);
  }
  if (i < 3) {
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_52_0();
  sub_2607DCF28(v10, v11);
}

void sub_26082D00C()
{
}

void sub_26082D024()
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v11 = v10;
  *uint64_t v10 = v4;
  v10[1] = v2;
  sub_2607DCED0(v8, v6);
  sub_2607DCED0(v5, v3);
  v1(v11, v9, v7);
  OUTLINED_FUNCTION_14_5();
}

#error "26082D0D8: call analysis failed (funcsize=45)"

uint64_t sub_26082D148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_26082D160(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_26082DA80, a5);
}

uint64_t sub_26082D160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  *a6 = a3;
  a6[1] = a4;
  OUTLINED_FUNCTION_42_0(a1, a2, a3, a4);
  return a5(a1, a2);
}

void sub_26082D1B0()
{
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_47_0(v2, v3);
  sub_2607DCED0(v0, v1);
  uint64_t v4 = 0;
  for (unint64_t i = 0; ; ++i)
  {
    OUTLINED_FUNCTION_59_0();
    if (!v6)
    {
      __break(1u);
LABEL_15:
      __break(1u);
      return;
    }
    if (__OFADD__(v4, 8)) {
      goto LABEL_15;
    }
    sub_2607DB19C(v4 + 8, v0, v1);
    OUTLINED_FUNCTION_33_0();
    if (!v6) {
      break;
    }
    if (i > 2) {
      goto LABEL_12;
    }
LABEL_11:
    v4 += 8;
  }
  unsigned __int8 v8 = v7;
  if ((AppleVendorTopCaseReport.update(with:)(v7) & 0x100) != 0) {
    AppleVendorTopCaseReport.remove(_:)(v8);
  }
  if (i < 3) {
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_53_0();
  sub_2607DCF28(v9, v10);
}

uint64_t sub_26082D27C()
{
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_47_0(v2, v3);
  sub_2607DCED0(v0, v1);
  uint64_t v4 = 0;
  do
  {
    while (1)
    {
      unint64_t v5 = sub_2607DB19C(8 * v4 + 8, v0, v1);
      if ((v5 - 49) > 0xCFu)
      {
        unsigned __int8 v7 = v5;
        if (v5 <= 0x21u && ((1 << v5) & 0x30003001ELL) != 0) {
          break;
        }
      }
      BOOL v6 = v4 < 1;
      uint64_t v4 = 1;
      if (!v6) {
        goto LABEL_12;
      }
    }
    if ((AppleVendorKeyboardReport.update(with:)(v5) & 0x100) != 0) {
      AppleVendorKeyboardReport.remove(_:)(v7);
    }
    BOOL v6 = v4++ < 1;
  }
  while (v6);
LABEL_12:
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_53_0();
  return sub_2607DCF28(v9, v10);
}

uint64_t sub_26082D364(uint64_t a1, unint64_t a2)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  uint64_t v54 = a1;
  unint64_t v55 = a2;
  unint64_t v5 = *v2;
  unint64_t v4 = v2[1];
  sub_2607DCED0(a1, a2);
  sub_2607DCED0(v5, v4);
  uint64_t v6 = 0;
  uint64_t v52 = (int)v5;
  uint64_t v47 = BYTE6(v4);
  uint64_t v48 = (uint64_t)v5 >> 32;
  unint64_t v45 = v5 >> 16;
  unint64_t v46 = v5 >> 8;
  unint64_t v43 = HIDWORD(v5);
  unint64_t v44 = v5 >> 24;
  unint64_t v41 = HIWORD(v5);
  unint64_t v42 = v5 >> 40;
  unint64_t v39 = v4 >> 8;
  unint64_t v40 = HIBYTE(v5);
  unint64_t v37 = v4 >> 24;
  unint64_t v38 = v4 >> 16;
  unint64_t v49 = v4;
  unint64_t v35 = v4 >> 40;
  unint64_t v36 = HIDWORD(v4);
  unint64_t v7 = v4 >> 62;
  unint64_t v51 = v5;
  while (2)
  {
    uint64_t v8 = 0;
    uint64_t v9 = v6;
    switch(v7)
    {
      case 1uLL:
        uint64_t v8 = v52;
        break;
      case 2uLL:
        uint64_t v8 = *(void *)(v5 + 16);
        break;
      default:
        break;
    }
    uint64_t v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
    }
    int v11 = 1 << (v6 & 7);
    switch(v7)
    {
      case 1uLL:
        if (v10 < v52 || v10 >= v48) {
          goto LABEL_53;
        }
        uint64_t v14 = sub_26087AED0();
        if (!v14) {
          goto LABEL_61;
        }
        uint64_t v15 = v14;
        uint64_t v16 = sub_26087AEF0();
        uint64_t v17 = v10 - v16;
        if (!__OFSUB__(v10, v16)) {
          goto LABEL_22;
        }
        goto LABEL_55;
      case 2uLL:
        if (v10 < *(void *)(v5 + 16)) {
          goto LABEL_54;
        }
        if (v10 >= *(void *)(v5 + 24)) {
          goto LABEL_56;
        }
        uint64_t v18 = sub_26087AED0();
        if (!v18) {
          goto LABEL_62;
        }
        uint64_t v15 = v18;
        uint64_t v19 = sub_26087AEF0();
        uint64_t v17 = v10 - v19;
        if (__OFSUB__(v10, v19)) {
          goto LABEL_57;
        }
LABEL_22:
        int v12 = *(unsigned __int8 *)(v15 + v17);
LABEL_23:
        if ((v12 & v11) == 0)
        {
          uint64_t v6 = v9 + 1;
          if (v9 + 1 > 2) {
            goto LABEL_46;
          }
          continue;
        }
        uint64_t v6 = v9 + 1;
        uint64_t v20 = v54;
        OUTLINED_FUNCTION_62_0();
        switch(v22)
        {
          case 1:
            unint64_t v21 = v5;
            break;
          case 2:
            unint64_t v21 = *(void *)(v20 + 16);
            break;
          default:
            break;
        }
        if (__OFADD__(v21, 1)) {
          goto LABEL_50;
        }
        char v23 = OUTLINED_FUNCTION_23_4();
        char v24 = OUTLINED_FUNCTION_30_0();
        unint64_t v25 = 0;
        switch(v3)
        {
          case 1:
            unint64_t v25 = v5;
            break;
          case 2:
            unint64_t v25 = *(void *)(v20 + 16);
            break;
          default:
            break;
        }
        int v3 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          goto LABEL_51;
        }
        uint64_t v26 = (v24 & v23);
        OUTLINED_FUNCTION_23_4();
        OUTLINED_FUNCTION_30_0();
        sub_26087AFD0();
        if (!v26)
        {
          uint64_t v27 = *v50;
          OUTLINED_FUNCTION_62_0();
          switch(v29)
          {
            case 1:
              uint64_t v28 = v26;
              break;
            case 2:
              uint64_t v28 = *(void *)(v27 + 16);
              break;
            default:
              break;
          }
          if (__OFADD__(v28, 1)) {
            goto LABEL_58;
          }
          unsigned __int8 v30 = OUTLINED_FUNCTION_23_4();
          if ((OUTLINED_FUNCTION_30_0() & v30) != 0)
          {
            uint64_t v31 = 0;
            switch(v3)
            {
              case 1:
                uint64_t v31 = v26;
                break;
              case 2:
                uint64_t v31 = *(void *)(v27 + 16);
                break;
              default:
                break;
            }
            int v3 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_59;
            }
            OUTLINED_FUNCTION_23_4();
            OUTLINED_FUNCTION_30_0();
            sub_26087AFD0();
          }
        }
        unint64_t v5 = v51;
        if (v9 <= 1) {
          continue;
        }
LABEL_46:
        sub_2607DCF28(v5, v49);
        uint64_t v32 = v54;
        unint64_t v33 = v55;
        return sub_2607DCF28(v32, v33);
      case 3uLL:
        goto LABEL_60;
      default:
        if (v10 >= v47) {
          goto LABEL_52;
        }
        v53[0] = v52;
        v53[1] = v46;
        v53[2] = v45;
        uint64_t v53[3] = v44;
        void v53[4] = v43;
        v53[5] = v42;
        v53[6] = v41;
        v53[7] = v40;
        v53[8] = v49;
        v53[9] = v39;
        v53[10] = v38;
        v53[11] = v37;
        v53[12] = v36;
        v53[13] = v35;
        int v12 = v53[v10];
        goto LABEL_23;
    }
  }
}

#error "26082D864: call analysis failed (funcsize=54)"

void sub_26082D8EC()
{
  OUTLINED_FUNCTION_68_0();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2607DCED0(v2, v0);
  uint64_t v4 = 0;
  for (unint64_t i = 0; ; ++i)
  {
    OUTLINED_FUNCTION_59_0();
    if (!v6)
    {
      __break(1u);
LABEL_15:
      __break(1u);
      return;
    }
    if (__OFADD__(v4, 8)) {
      goto LABEL_15;
    }
    sub_2607DB19C(v4 + 8, v3, v1);
    OUTLINED_FUNCTION_33_0();
    if (!v6) {
      break;
    }
    if (i > 2) {
      goto LABEL_12;
    }
LABEL_11:
    v4 += 8;
  }
  unsigned __int8 v8 = v7;
  if ((AppleVendorTopCaseReport.update(with:)(v7) & 0x100) == 0) {
    AppleVendorTopCaseReport.remove(_:)(v8);
  }
  if (i < 3) {
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_52_0();
  sub_2607DCF28(v9, v10);
}

uint64_t sub_26082D9A8()
{
  OUTLINED_FUNCTION_68_0();
  unint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_2607DCED0(v2, v0);
  uint64_t v4 = 0;
  do
  {
    while (1)
    {
      unint64_t v5 = sub_2607DB19C(8 * v4 + 8, v3, v1);
      if ((v5 - 49) > 0xCFu)
      {
        unsigned __int8 v7 = v5;
        if (v5 <= 0x21u && ((1 << v5) & 0x30003001ELL) != 0) {
          break;
        }
      }
      BOOL v6 = v4 < 1;
      uint64_t v4 = 1;
      if (!v6) {
        goto LABEL_12;
      }
    }
    if ((AppleVendorKeyboardReport.update(with:)(v5) & 0x100) == 0) {
      AppleVendorKeyboardReport.remove(_:)(v7);
    }
    BOOL v6 = v4++ < 1;
  }
  while (v6);
LABEL_12:
  OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_52_0();
  return sub_2607DCF28(v9, v10);
}

uint64_t sub_26082DA80(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v6 = a1;
  uint64_t v53 = *MEMORY[0x263EF8340];
  unint64_t v7 = a2 >> 62;
  sub_2607DCED0(a1, a2);
  uint64_t v8 = 0;
  uint64_t v51 = (int)v6;
  uint64_t v9 = a2 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v45 = BYTE6(a2);
  uint64_t v46 = (uint64_t)v6 >> 32;
  unint64_t v43 = v6 >> 16;
  unint64_t v44 = v6 >> 8;
  unint64_t v41 = HIDWORD(v6);
  unint64_t v42 = v6 >> 24;
  unint64_t v39 = HIWORD(v6);
  unint64_t v40 = v6 >> 40;
  unint64_t v37 = a2 >> 8;
  unint64_t v38 = HIBYTE(v6);
  unint64_t v35 = a2 >> 24;
  unint64_t v36 = a2 >> 16;
  unint64_t v47 = a2;
  unint64_t v33 = a2 >> 40;
  unint64_t v34 = HIDWORD(a2);
  uint64_t v10 = v7;
  unint64_t v50 = v6;
  uint64_t v48 = v7;
  uint64_t v49 = a2 & 0x3FFFFFFFFFFFFFFFLL;
  while (2)
  {
    uint64_t v11 = 0;
    uint64_t v12 = v8;
    switch(v10)
    {
      case 1:
        uint64_t v11 = v51;
        break;
      case 2:
        uint64_t v11 = *(void *)(v6 + 16);
        break;
      default:
        break;
    }
    uint64_t v13 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
    }
    switch(v10)
    {
      case 1:
        if (v13 < v51 || v13 >= v46) {
          goto LABEL_54;
        }
        uint64_t v16 = sub_26087AED0();
        if (!v16) {
          goto LABEL_61;
        }
        uint64_t v17 = v16;
        uint64_t v18 = sub_26087AEF0();
        uint64_t v19 = v13 - v18;
        if (!__OFSUB__(v13, v18)) {
          goto LABEL_22;
        }
        goto LABEL_56;
      case 2:
        if (v13 < *(void *)(v6 + 16)) {
          goto LABEL_55;
        }
        if (v13 >= *(void *)(v6 + 24)) {
          goto LABEL_57;
        }
        uint64_t v20 = sub_26087AED0();
        if (!v20) {
          goto LABEL_62;
        }
        uint64_t v17 = v20;
        uint64_t v21 = sub_26087AEF0();
        uint64_t v19 = v13 - v21;
        if (__OFSUB__(v13, v21)) {
          goto LABEL_58;
        }
LABEL_22:
        int v14 = *(unsigned __int8 *)(v17 + v19);
LABEL_23:
        if ((v14 & (1 << (v12 & 7))) == 0)
        {
          uint64_t v8 = v12 + 1;
          if (v12 + 1 > 2) {
            goto LABEL_46;
          }
          continue;
        }
        uint64_t v8 = v12 + 1;
        OUTLINED_FUNCTION_55_0();
        switch(v23)
        {
          case 1:
            unint64_t v22 = v6;
            break;
          case 2:
            unint64_t v22 = *(void *)(v9 + 16);
            break;
          default:
            break;
        }
        if (__OFADD__(v22, 1)) {
          goto LABEL_50;
        }
        char v24 = OUTLINED_FUNCTION_23_4();
        char v25 = OUTLINED_FUNCTION_30_0();
        unint64_t v26 = 0;
        switch(v3)
        {
          case 1:
            unint64_t v26 = v6;
            break;
          case 2:
            unint64_t v26 = *(void *)(v9 + 16);
            break;
          default:
            break;
        }
        int v3 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_51;
        }
        uint64_t v27 = (v25 & v24);
        OUTLINED_FUNCTION_23_4();
        OUTLINED_FUNCTION_30_0();
        sub_26087AFD0();
        if (v27)
        {
          OUTLINED_FUNCTION_55_0();
          switch(v29)
          {
            case 1:
              uint64_t v28 = v27;
              break;
            case 2:
              uint64_t v28 = *(void *)(v4 + 16);
              break;
            default:
              break;
          }
          if (__OFADD__(v28, 1)) {
            goto LABEL_52;
          }
          unsigned __int8 v30 = OUTLINED_FUNCTION_23_4();
          if ((OUTLINED_FUNCTION_30_0() & v30) != 0)
          {
            uint64_t v31 = 0;
            switch(v3)
            {
              case 1:
                uint64_t v31 = v27;
                break;
              case 2:
                uint64_t v31 = *(void *)(v4 + 16);
                break;
              default:
                break;
            }
            int v3 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_59;
            }
            OUTLINED_FUNCTION_23_4();
            OUTLINED_FUNCTION_30_0();
            sub_26087AFD0();
          }
        }
        unint64_t v6 = v50;
        uint64_t v10 = v48;
        uint64_t v9 = v49;
        if (v12 <= 1) {
          continue;
        }
LABEL_46:
        return sub_2607DCF28(v6, v47);
      case 3:
        goto LABEL_60;
      default:
        if (v13 >= v45) {
          goto LABEL_53;
        }
        v52[0] = v51;
        v52[1] = v44;
        uint64_t v52[2] = v43;
        v52[3] = v42;
        v52[4] = v41;
        v52[5] = v40;
        v52[6] = v39;
        v52[7] = v38;
        v52[8] = v47;
        v52[9] = v37;
        v52[10] = v36;
        v52[11] = v35;
        v52[12] = v34;
        v52[13] = v33;
        int v14 = v52[v13];
        goto LABEL_23;
    }
  }
}

#error "26082DF58: call analysis failed (funcsize=44)"

uint64_t sub_26082DFC8(unint64_t a1)
{
  return sub_26082E13C(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2607EA59C, (uint64_t (*)(uint64_t, unint64_t))sub_2607E2840);
}

uint64_t sub_26082DFF4(uint64_t a1)
{
  return sub_26082E01C(a1, (uint64_t)&type metadata for KeyboardEvent, (uint64_t)&protocol witness table for KeyboardEvent);
}

uint64_t sub_26082E008(uint64_t a1)
{
  return sub_26082E01C(a1, (uint64_t)&type metadata for ScrollEvent, (uint64_t)&protocol witness table for ScrollEvent);
}

uint64_t sub_26082E01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2607E9B78();
    uint64_t v4 = v17;
    uint64_t v8 = (void **)(a1 + 32);
    do
    {
      uint64_t v9 = *v8;
      uint64_t v17 = v4;
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v11 = *(void *)(v4 + 24);
      id v12 = v9;
      if (v10 >= v11 >> 1)
      {
        sub_2607E9B78();
        uint64_t v4 = v17;
      }
      uint64_t v15 = a2;
      uint64_t v16 = a3;
      *(void *)&long long v14 = v12;
      *(void *)(v4 + 16) = v10 + 1;
      sub_2607E2B70(&v14, v4 + 40 * v10 + 32);
      ++v8;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_26082E110(unint64_t a1)
{
  return sub_26082E13C(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2607E9B78, MEMORY[0x263F8DC78]);
}

uint64_t sub_26082E13C(unint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_26087B9C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t result = a2(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = 0;
    uint64_t v6 = v23;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)a3(v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      id v10 = v9;
      unint64_t v11 = sub_2607E2AD0();
      unint64_t v21 = v11;
      unint64_t v22 = &protocol witness table for HIDEvent;
      v20[0] = v10;
      uint64_t v23 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        a2(v12 > 1, v13 + 1, 1);
        uint64_t v14 = v21;
      }
      else
      {
        uint64_t v14 = v11;
      }
      ++v8;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v14);
      OUTLINED_FUNCTION_0_0();
      MEMORY[0x270FA5388](v15);
      OUTLINED_FUNCTION_9_0();
      (*(void (**)(uint64_t))(v18 + 16))(v17 - v16);
      sub_260830DA0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      uint64_t v6 = v23;
    }
    while (v5 != v8);
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t Sequence<>.addRemoteTimestamp<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_26082E34C(a1, a2, a3, a4, a5, (uint64_t (*)(void))Sequence<>.addRemoteTimestamp(_:));
}

uint64_t sub_26082E34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  if ((v7 & 1) == 0)
  {
    OUTLINED_FUNCTION_7_0();
    return a6();
  }
  return result;
}

uint64_t sub_26082E3DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083A850(a1);
  *a2 = result;
  return result;
}

uint64_t sub_26082E404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0E88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082E42C()
{
  return sub_26082AE90();
}

uint64_t sub_26082E434()
{
  return sub_2607FA430();
}

void sub_26082E43C(void *a1)
{
}

uint64_t sub_26082E480@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083A89C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_26082E4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0EE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082E4D0()
{
  return sub_26082AE98();
}

uint64_t sub_26082E4D8()
{
  return sub_260802518();
}

uint64_t sub_26082E4E0(uint64_t a1)
{
  return sub_26082E548(a1, (void (*)(long long *__return_ptr))sub_26082F22C, (uint64_t)&type metadata for ScrollEvent, (uint64_t (*)(long long *))sub_2607E0E2C);
}

uint64_t sub_26082E514(uint64_t a1)
{
  return sub_26082E548(a1, (void (*)(long long *__return_ptr))sub_26082F40C, (uint64_t)&type metadata for PointerEvent, (uint64_t (*)(long long *))sub_2607E0E88);
}

uint64_t sub_26082E548(uint64_t a1, void (*a2)(long long *__return_ptr), uint64_t a3, uint64_t (*a4)(long long *))
{
  a2(&v7);
  if (v8)
  {
    sub_2607E2B70(&v7, (uint64_t)v9);
    sub_2607E2A1C((uint64_t)v9, (uint64_t)&v7);
    uint64_t v5 = a4(&v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    sub_2607E2B10((uint64_t)&v7);
    return 0;
  }
  return v5;
}

uint64_t HIDEventProtocol.first<A>(_:where:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  void v13[2] = a3;
  v13[3] = a4;
  v13[4] = a5;
  void v13[5] = a6;
  v13[6] = a1;
  v13[7] = a2;
  HIDEventProtocol.first(where:)(sub_2608307F8, (uint64_t)v13, a3, a5, (uint64_t *)&v14);
  if (v15)
  {
    sub_2607E2B70(&v14, (uint64_t)v16);
    sub_2607E2A1C((uint64_t)v16, (uint64_t)&v14);
    OUTLINED_FUNCTION_45_0();
    v9();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t v10 = a7;
    uint64_t v11 = 0;
  }
  else
  {
    sub_2607E2B10((uint64_t)&v14);
    uint64_t v10 = a7;
    uint64_t v11 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v10, v11, 1, a4);
}

uint64_t (*sub_26082E6AC(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.flags.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082E724(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.absolute.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082E79C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.accelerated.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082E814(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.builtin.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082E88C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.centerOrigin.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082E904(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.collection.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082E97C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.interpolated.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082E9F4(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.pixelUnits.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082EA6C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.repeat.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082EAE8(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.phase.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082EB60(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.momentum.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082EBD8(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.sender.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t (*sub_26082EC50(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HIDEventProtocol.time.modify(v6, a2, a3);
  return sub_26082BDFC;
}

uint64_t sub_26082ECCC()
{
  uint64_t v1 = *v0;
  IOHIDEventRef.__bridgedValue.getter();
  return v1;
}

uint64_t sub_26082ECF8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.flags.getter();
  *a1 = result;
  return result;
}

void sub_26082ED2C(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

BOOL sub_26082ED5C@<W0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  BOOL result = HIDEventProtocol.absolute.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

void sub_26082ED94()
{
}

uint64_t sub_26082EDC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.accelerated.getter();
  *a1 = result & 1;
  return result;
}

void sub_26082EDFC()
{
}

uint64_t sub_26082EE2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.builtin.getter();
  *a1 = result & 1;
  return result;
}

void sub_26082EE64()
{
}

uint64_t sub_26082EE94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.centerOrigin.getter();
  *a1 = result & 1;
  return result;
}

void sub_26082EECC()
{
}

uint64_t sub_26082EEFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.collection.getter();
  *a1 = result & 1;
  return result;
}

void sub_26082EF34()
{
}

uint64_t sub_26082EF64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.interpolated.getter();
  *a1 = result & 1;
  return result;
}

void sub_26082EF9C()
{
}

uint64_t sub_26082EFCC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.pixelUnits.getter();
  *a1 = result & 1;
  return result;
}

void sub_26082F004()
{
}

BOOL sub_26082F034@<W0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  BOOL result = HIDEventProtocol.repeat.getter(*(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

void sub_26082F06C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_26082F09C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.phase.getter();
  *a1 = result;
  return result;
}

void sub_26082F0D0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_26082F100@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.momentum.getter();
  *a1 = result;
  return result;
}

void sub_26082F134(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_26082F164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.sender.getter();
  *a1 = result;
  return result;
}

void sub_26082F198(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_26082F1C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HIDEventProtocol.time.getter();
  *a1 = result;
  return result;
}

void sub_26082F1FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_26082F22C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v13 = a1;
  char v3 = sub_260830F94(v13, (uint64_t)&type metadata for ScrollEvent, (uint64_t)&protocol witness table for ScrollEvent);

  if (v3)
  {
    *(void *)(a2 + 24) = &type metadata for ScrollEvent;
    *(void *)(a2 + 32) = &protocol witness table for ScrollEvent;
    *(void *)a2 = v13;
    return v13;
  }
  else
  {
    id v5 = objc_msgSend(v13, sel_children);
    if (v5)
    {
      uint64_t v6 = v5;
      sub_2607E2AD0();
      unint64_t v7 = sub_26087B3F0();

      uint64_t v8 = sub_26082E13C(v7, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2607EA59C, (uint64_t (*)(uint64_t, unint64_t))sub_2607E2840);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = MEMORY[0x263F8EE78];
    }
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = v8 + 32;
      while (1)
      {
        sub_2607E2A1C(v10, (uint64_t)v17);
        uint64_t v11 = v18;
        uint64_t v12 = v19;
        __swift_project_boxed_opaque_existential_1(v17, v18);
        HIDEventProtocol.first(where:)(sub_26082F828, 0, v11, v12, (uint64_t *)&v14);
        if (v15) {
          break;
        }
        sub_2607E2B10((uint64_t)&v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        v10 += 40;
        if (!--v9) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      sub_2607E2B70(&v14, (uint64_t)v16);
      sub_2607E2B70(v16, a2);
      return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
    else
    {
LABEL_12:
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return result;
}

id sub_26082F40C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v13 = a1;
  char v3 = sub_260830F94(v13, (uint64_t)&type metadata for PointerEvent, (uint64_t)&protocol witness table for PointerEvent);

  if (v3)
  {
    *(void *)(a2 + 24) = &type metadata for PointerEvent;
    *(void *)(a2 + 32) = &protocol witness table for PointerEvent;
    *(void *)a2 = v13;
    return v13;
  }
  else
  {
    id v5 = objc_msgSend(v13, sel_children);
    if (v5)
    {
      uint64_t v6 = v5;
      sub_2607E2AD0();
      unint64_t v7 = sub_26087B3F0();

      uint64_t v8 = sub_26082E13C(v7, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_2607EA59C, (uint64_t (*)(uint64_t, unint64_t))sub_2607E2840);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = MEMORY[0x263F8EE78];
    }
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = v8 + 32;
      while (1)
      {
        sub_2607E2A1C(v10, (uint64_t)v17);
        uint64_t v11 = v18;
        uint64_t v12 = v19;
        __swift_project_boxed_opaque_existential_1(v17, v18);
        HIDEventProtocol.first(where:)(sub_26082F8E4, 0, v11, v12, (uint64_t *)&v14);
        if (v15) {
          break;
        }
        sub_2607E2B10((uint64_t)&v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        v10 += 40;
        if (!--v9) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      sub_2607E2B70(&v14, (uint64_t)v16);
      sub_2607E2B70(v16, a2);
      return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
    else
    {
LABEL_12:
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return result;
}

void HIDEventProtocol.first(where:)(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  id v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16);
  v13(boxed_opaque_existential_1, v5, a3);
  char v14 = a1(v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (v14)
  {
    a5[3] = a3;
    a5[4] = a4;
    uint64_t v15 = __swift_allocate_boxed_opaque_existential_1(a5);
    v13(v15, v6, a3);
  }
  else
  {
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = v16 + 32;
      while (1)
      {
        sub_2607E2A1C(v18, (uint64_t)v24);
        uint64_t v19 = v25;
        uint64_t v20 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        HIDEventProtocol.first(where:)(&v21, a1, a2, v19, v20);
        if (v22) {
          break;
        }
        sub_2607E2B10((uint64_t)&v21);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        v18 += 40;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      sub_2607E2B70(&v21, (uint64_t)v23);
      sub_2607E2B70(v23, (uint64_t)a5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    }
    else
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_1();
    }
  }
}

BOOL sub_26082F790(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  return v7 == (*(unsigned int (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
}

BOOL sub_26082F81C(void *a1)
{
  return sub_26082F790(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_26082F828(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v9);
  if (v4 == 6)
  {
    uint64_t v5 = v10;
    uint64_t v6 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
  }
  else
  {
    char v7 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_26082F8E4(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v9);
  if (v4 == 17)
  {
    uint64_t v5 = v10;
    uint64_t v6 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 80))(v5, v6);
  }
  else
  {
    char v7 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v7 & 1;
}

uint64_t sub_26082F9A0(void *a1, uint64_t (*a2)(unsigned char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a5, a7);
  sub_2607E2A1C((uint64_t)a1, (uint64_t)v16);
  if (v11 == v13) {
    char v14 = a2(v16);
  }
  else {
    char v14 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v14 & 1;
}

uint64_t IOHIDEventRef.eventType.getter()
{
  return IOHIDEventGetType();
}

uint64_t sub_26082FA94()
{
  return IOHIDEventRef.eventType.getter();
}

uint64_t sub_26082FAB8()
{
  uint64_t v1 = *v0;
  IOHIDEventRef.wrappedValue.getter();
  return v1;
}

uint64_t UInt32.stringValue.getter()
{
  id v0 = (id)IOHIDEventTypeGetName();
  uint64_t v1 = sub_26087B2B0();

  return v1;
}

Swift::Void __swiftcall HIDEventProtocol.addRemoteTimestamp(_:)(Swift::UInt64 a1)
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v9 = v1;
  uint64_t v10 = v3;
  v8[0] = *MEMORY[0x263EF8340];
  if (v2)
  {
    uint64_t v7 = v2;
    uint64_t v4 = sub_2607E67C8((uint64_t)&v7, (uint64_t)v8);
    unint64_t v6 = v5;
    HIDEventProtocol.addRemoteTimestampChildEvent(_:)();
    sub_2607DCF28(v4, v6);
  }
  OUTLINED_FUNCTION_14_5();
}

uint64_t HIDEventProtocol.addRemoteTimestampChildEvent(_:)()
{
  OUTLINED_FUNCTION_38_0();
  sub_2607DCED0(v2, v3);
  uint64_t v4 = mach_absolute_time();
  v7[3] = &type metadata for VendorDefinedEvent;
  v7[4] = &protocol witness table for VendorDefinedEvent;
  v7[0] = sub_2607E64B4(v4, 16973568, 0, v1, v0, 0);
  OUTLINED_FUNCTION_27_2();
  v5();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t Sequence<>.addRemoteTimestamp(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_9_0();
  uint64_t v10 = v9 - v8;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t result = MEMORY[0x270FA5388](v11);
  if (a1)
  {
    uint64_t v18 = a1;
    uint64_t v13 = sub_2607E67C8((uint64_t)&v18, (uint64_t)v19);
    unint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v2, a2);
    sub_26087B380();
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_26087B630();
      if (!v21) {
        break;
      }
      sub_2607E2B70(&v20, (uint64_t)v19);
      __swift_project_boxed_opaque_existential_1(v19, v19[3]);
      HIDEventProtocol.addRemoteTimestampChildEvent(_:)();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    uint64_t v16 = OUTLINED_FUNCTION_31_0();
    v17(v16);
    return sub_2607DCF28(v13, v15);
  }
  return result;
}

uint64_t sub_26082FE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E1054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082FEA0()
{
  return sub_26082AEA0();
}

uint64_t sub_26082FEA8()
{
  return sub_26082AF54();
}

uint64_t sub_26082FEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0DD0(a1, a2);
  *a3 = result;
  return result;
}

void sub_26082FED8()
{
}

uint64_t sub_26082FF08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083A98C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_26082FF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0F40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082FF58()
{
  return sub_26082AEA8();
}

uint64_t sub_26082FF60()
{
  return sub_26082AF4C();
}

uint64_t sub_26082FF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0E2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082FF90()
{
  return sub_26082AEB0();
}

uint64_t sub_26082FF98()
{
  return sub_26082AF44();
}

uint64_t sub_26082FFA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083A9D8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_26082FFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26082FFF0()
{
  return sub_26082AEB8();
}

uint64_t sub_26082FFF8()
{
  return sub_2607DD594();
}

uint64_t sub_260830000@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083AA24(a1);
  *a2 = result;
  return result;
}

uint64_t sub_260830028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0D74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260830050()
{
  return sub_26082AD30(*v0);
}

uint64_t sub_26083006C()
{
  return sub_26082AEC0();
}

uint64_t sub_260830074()
{
  return sub_2607DD5A4();
}

uint64_t sub_26083007C()
{
  return j__IOHIDEventGetEventFlags(*v0);
}

uint64_t sub_260830084()
{
  return sub_26082AFE4();
}

uint64_t (*sub_26083008C(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_20_8(v1);
  return sub_2608300C8;
}

uint64_t sub_2608300C8()
{
  return IOHIDEventSetEventFlags();
}

BOOL sub_2608300D8()
{
  return sub_26082B0F0();
}

uint64_t sub_2608300E0()
{
  return sub_26082B128();
}

uint64_t (*sub_2608300FC(void *a1))(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_4_13(a1) != 0;
  OUTLINED_FUNCTION_1_19(v1);
  return sub_260830140;
}

uint64_t sub_260830140(uint64_t a1)
{
  return sub_26082B128();
}

uint64_t sub_26083015C()
{
  return sub_26082B250();
}

uint64_t sub_260830164()
{
  return sub_26082B28C();
}

uint64_t (*sub_260830180(void *a1))(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19(BYTE2(v1) & 1);
  return sub_2608301C0;
}

uint64_t sub_2608301C0(uint64_t a1)
{
  return sub_26082B28C();
}

uint64_t sub_2608301DC()
{
  return sub_26082B3C4();
}

uint64_t sub_2608301E4()
{
  return sub_26082B400();
}

uint64_t (*sub_260830200(void *a1))(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 0x10) != 0);
  return sub_260830240;
}

uint64_t sub_260830240(uint64_t a1)
{
  return sub_26082B400();
}

uint64_t sub_26083025C()
{
  return sub_26082B538();
}

uint64_t sub_260830264()
{
  return sub_26082B574();
}

uint64_t (*sub_260830280(void *a1))(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 8) != 0);
  return sub_2608302C0;
}

uint64_t sub_2608302C0(uint64_t a1)
{
  return sub_26082B574();
}

uint64_t sub_2608302DC()
{
  return sub_26082B6AC();
}

uint64_t sub_2608302E4()
{
  return sub_26082B6E8();
}

uint64_t (*sub_260830300(void *a1))(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 2) != 0);
  return sub_260830340;
}

uint64_t sub_260830340(uint64_t a1)
{
  return sub_26082B6E8();
}

uint64_t sub_26083035C()
{
  return sub_26082B820();
}

uint64_t sub_260830364()
{
  return sub_26082B85C();
}

uint64_t (*sub_260830380(void *a1))(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 0x20) != 0);
  return sub_2608303C0;
}

uint64_t sub_2608303C0(uint64_t a1)
{
  return sub_26082B85C();
}

uint64_t sub_2608303DC()
{
  return sub_26082B994();
}

uint64_t sub_2608303E4()
{
  return sub_26082B9D0();
}

uint64_t (*sub_260830400(void *a1))(uint64_t a1)
{
  char v1 = OUTLINED_FUNCTION_0_20(a1);
  OUTLINED_FUNCTION_1_19((v1 & 4) != 0);
  return sub_260830440;
}

uint64_t sub_260830440(uint64_t a1)
{
  return sub_26082B9D0();
}

BOOL sub_26083045C()
{
  return sub_26082BB08();
}

uint64_t sub_260830464(uint64_t result)
{
  return sub_26082BB84(result);
}

uint64_t (*sub_26083046C(void *a1))(uint64_t result)
{
  char v1 = OUTLINED_FUNCTION_8_14(a1) != 0;
  OUTLINED_FUNCTION_1_19(v1);
  return sub_2608304B0;
}

uint64_t sub_2608304B0(uint64_t result)
{
  if (*(unsigned char *)(result + 8) == 1) {
    return IOHIDEventSetRepeat();
  }
  return result;
}

double sub_2608304C8()
{
  return sub_26082BC90();
}

uint64_t sub_2608304E4()
{
  return sub_2607E1624();
}

uint64_t sub_2608304EC()
{
  return sub_26082BD50();
}

uint64_t (*sub_2608304F4())()
{
  char v1 = OUTLINED_FUNCTION_22_6();
  uint64_t v2 = OUTLINED_FUNCTION_7_14((uint64_t)v1);
  *(void *)(v0 + 32) = sub_26082BE50(v2, v3);
  return sub_26082BDFC;
}

uint64_t sub_260830540()
{
  return sub_2608259DC();
}

uint64_t sub_260830548()
{
  return sub_26082BF58();
}

uint64_t (*sub_260830550(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_3_17(a1);
  OUTLINED_FUNCTION_21_8(v1);
  return sub_26083058C;
}

uint64_t sub_26083058C()
{
  return IOHIDEventSetScrollMomentum();
}

uint64_t sub_26083059C()
{
  return j__IOHIDEventGetSenderID(*v0);
}

uint64_t sub_2608305A4()
{
  return sub_26082C098();
}

uint64_t (*sub_2608305AC(uint64_t a1))()
{
  *uint64_t v1 = OUTLINED_FUNCTION_5_12(a1);
  return sub_2608305EC;
}

uint64_t sub_2608305EC()
{
  return IOHIDEventSetSenderID();
}

uint64_t sub_2608305F8()
{
  return j__IOHIDEventGetTimeStamp(*v0);
}

uint64_t sub_260830600(uint64_t a1)
{
  return sub_26082C1A8(a1, *v1);
}

uint64_t (*sub_260830608(uint64_t a1))(void *a1)
{
  *uint64_t v1 = OUTLINED_FUNCTION_6_15(a1);
  return sub_260830648;
}

uint64_t sub_260830648(void *a1)
{
  return MEMORY[0x270EF43F8](a1[1], *a1);
}

void sub_260830654()
{
}

double sub_260830684()
{
  return sub_26082C41C();
}

uint64_t sub_2608306A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083AA70(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2608306C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E0FF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2608306F0()
{
  return sub_26082AEC8();
}

uint64_t sub_2608306F8()
{
  return sub_26081E79C();
}

uint64_t sub_260830700@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083AABC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_260830728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E1220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260830750()
{
  return sub_26082AED0();
}

uint64_t sub_260830758()
{
  return sub_26082AF64();
}

uint64_t sub_260830760@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_26083AB08(a1);
  *a2 = result;
  return result;
}

uint64_t sub_260830788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E10B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2608307B0()
{
  return sub_26082AED8();
}

uint64_t sub_2608307B8()
{
  return sub_26082AF5C();
}

uint64_t sub_2608307C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E12D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2608307E8()
{
  return sub_26082AEE0();
}

uint64_t sub_2608307F0()
{
  return sub_26082AF6C();
}

uint64_t sub_2608307F8(void *a1)
{
  return sub_26082F9A0(a1, *(uint64_t (**)(unsigned char *))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t dispatch thunk of HIDEventProtocol.children.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDEventProtocol.eventMask.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDEventProtocol.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of HIDEventProtocol.parent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of HIDEventProtocol.append(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

uint64_t dispatch thunk of HIDEventProtocol.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of HIDEventProtocol.first(_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 376))();
}

uint64_t dispatch thunk of static _HIDEventImpl.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(_wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_260830D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2607E127C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260830D50()
{
  return sub_26082AEE8();
}

void sub_260830D58(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_260830DA0()
{
  OUTLINED_FUNCTION_66_0();
  uint64_t v8 = v2;
  uint64_t v9 = v3;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v7);
  OUTLINED_FUNCTION_27_2();
  v4();
  uint64_t v5 = *v0;
  *(void *)(v5 + 16) = v1 + 1;
  return sub_2607E2B70(&v7, v5 + 40 * v1 + 32);
}

void sub_260830E28()
{
  OUTLINED_FUNCTION_12_6();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 352);
  id v3 = v2;
  uint64_t v4 = OUTLINED_FUNCTION_31_0();
  v1(v4);
  OUTLINED_FUNCTION_63_0();
  IOHIDEventAppendEvent();

  OUTLINED_FUNCTION_14_5();
}

uint64_t sub_260830EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_9_0();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t))(v6 + 32))(v9 - v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3) == 17)
  {
    OUTLINED_FUNCTION_16_10();
    uint64_t v12 = v11();
  }
  else
  {
    uint64_t v12 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, a2);
  return v12;
}

uint64_t sub_260830F94(void *a1, uint64_t a2, uint64_t a3)
{
  void v8[3] = a2;
  v8[4] = a3;
  v8[0] = a1;
  sub_2607E2A1C((uint64_t)v8, (uint64_t)v7);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  id v4 = a1;
  uint64_t v5 = (IOHIDEventGetEventFlags() >> 16) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_20(void *a1)
{
  *a1 = *v1;
  return IOHIDEventGetEventFlags();
}

void OUTLINED_FUNCTION_1_19(char a1@<W8>)
{
  *(unsigned char *)(v1 + 8) = a1;
}

uint64_t OUTLINED_FUNCTION_2_20(void *a1, uint64_t a2, uint64_t a3)
{
  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_17(void *a1)
{
  *a1 = *v1;
  return IOHIDEventGetScrollMomentum();
}

uint64_t OUTLINED_FUNCTION_4_13(void *a1)
{
  *a1 = *v1;
  return IOHIDEventIsAbsolute();
}

uint64_t OUTLINED_FUNCTION_5_12(uint64_t a1)
{
  *(void *)(a1 + 8) = *v1;
  return IOHIDEventGetSenderID();
}

uint64_t OUTLINED_FUNCTION_6_15(uint64_t a1)
{
  *(void *)(a1 + 8) = *v1;
  return IOHIDEventGetTimeStamp();
}

uint64_t OUTLINED_FUNCTION_7_14(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_14(void *a1)
{
  *a1 = *v1;
  return IOHIDEventIsRepeat();
}

uint64_t OUTLINED_FUNCTION_12_12(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  return HIDEventProtocol.flags.getter();
}

uint64_t OUTLINED_FUNCTION_15_9(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t OUTLINED_FUNCTION_19_8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t OUTLINED_FUNCTION_20_8(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_8(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

void *OUTLINED_FUNCTION_22_6()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return HIDReport.mask(for:)(v0);
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return IOHIDEventGetEventFlags();
}

uint64_t OUTLINED_FUNCTION_25_4@<X0>(int a1@<W8>)
{
  return a1 | v1;
}

id OUTLINED_FUNCTION_26_4()
{
  return v0;
}

void OUTLINED_FUNCTION_28_1(int a1@<W8>)
{
  *unsigned int v1 = a1;
}

double OUTLINED_FUNCTION_29_1()
{
  *(void *)(v0 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return sub_26087B080();
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return v0;
}

void OUTLINED_FUNCTION_32_0(char a1@<W8>)
{
  *(unsigned char *)(v1 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_34_0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_35_0(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

uint64_t OUTLINED_FUNCTION_36_0(unsigned int a1, int a2)
{
  return a2 & a1;
}

void OUTLINED_FUNCTION_37_0()
{
  sub_26082C770();
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_1@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_2607DCED0(a1, a2);
}

uint64_t OUTLINED_FUNCTION_42_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_2607DCED0(a3, a4);
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  return sub_2607DCED0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_47_0(uint64_t a1, unint64_t a2)
{
  return sub_2607DCED0(a1, a2);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return sub_2607DCF28(v0, v1);
}

void OUTLINED_FUNCTION_50_0(char a1@<W8>)
{
  *unint64_t v1 = a1;
}

void OUTLINED_FUNCTION_51_0(uint64_t a1@<X8>)
{
  *unint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_58_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_65()
{
  return sub_2607DCF28(v0, v1);
}

void OUTLINED_FUNCTION_67_0()
{
  JUMPOUT(0x26121C450);
}

uint64_t OUTLINED_FUNCTION_69_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v2[3] = result;
  v2[4] = a2;
  *uint64_t v2 = v3;
  return result;
}

void *sub_260831638(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = a3;
  if (!v9)
  {
    sub_2607DCF28(a3, a4);
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v5 = a2;
  uint64_t v7 = a1;
  uint64_t v27 = (void *)MEMORY[0x263F8EE78];
  uint64_t v8 = v9 & ~(v9 >> 63);
  uint64_t v4 = &v27;
  sub_2607E9B98(0, v8, 0);
  if (v9 < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = v27;
  if (qword_26A8B4528 != -1) {
    goto LABEL_32;
  }
  while (v5 < v7)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_once();
  }
  do
  {
    if (!v8)
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v10 = qword_26A8B4D38 >> 3;
    uint64_t v11 = 0;
    switch(a4 >> 62)
    {
      case 1uLL:
        uint64_t v11 = (int)v6;
        break;
      case 2uLL:
        uint64_t v11 = *(void *)(v6 + 16);
        break;
      default:
        break;
    }
    BOOL v12 = __OFADD__(v11, 3);
    uint64_t v13 = v11 + 3;
    if (v12) {
      goto LABEL_23;
    }
    uint64_t v14 = v7 * v10;
    if ((unsigned __int128)(v7 * (__int128)v10) >> 64 != (v7 * v10) >> 63) {
      goto LABEL_24;
    }
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_25;
    }
    if (__OFADD__(v15, v10)) {
      goto LABEL_26;
    }
    if (v15 + v10 < v15) {
      goto LABEL_27;
    }
    sub_2607DCED0(v6, a4);
    uint64_t v16 = sub_26087AFC0();
    unint64_t v18 = v17;
    sub_2607DCF28(v6, a4);
    uint64_t v19 = sub_2607E6884(v16, v18);
    uint64_t v21 = v20;
    uint64_t v27 = v4;
    unint64_t v23 = v4[2];
    unint64_t v22 = v4[3];
    if (v23 >= v22 >> 1)
    {
      sub_2607E9B98(v22 > 1, v23 + 1, 1);
      uint64_t v4 = v27;
    }
    v4[2] = v23 + 1;
    char v24 = &v4[2 * v23];
    v24[4] = v19;
    v24[5] = v21;
    if (v5 == v7) {
      goto LABEL_28;
    }
    ++v7;
    --v8;
  }
  while (v5 != v7);
  sub_2607DCF28(v6, a4);
  return v4;
}

BOOL sub_260831898(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_5;
      }
      goto LABEL_10;
    case 2uLL:
      if (!__OFSUB__(*(void *)(a2 + 24), *(void *)(a2 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_7;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v4)
      {
        __break(1u);
LABEL_9:
        __break(1u);
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x26083191CLL);
      }
LABEL_7:
      if (__OFADD__(a1, 8)) {
        goto LABEL_9;
      }
      return a1 + 8 <= 8 * v3;
  }
}

uint64_t DigitizerReport.scrollCollection.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  unint64_t v6 = v2[1];
  *(void *)&long long v15 = v5;
  *((void *)&v15 + 1) = v6;
  sub_2607DCED0(v5, v6);
  uint64_t result = DigitizerReport.contactRange(forIndex:)(5, v5, v6);
  uint64_t v8 = result;
  if (qword_26A8B4510 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v9 = v8 + (qword_26A8B4CD0 >> 3);
  if (__OFADD__(v8, qword_26A8B4CD0 >> 3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v9 < v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >> 60 != 15)
  {
    sub_2607DCED0(a1, a2);
    sub_2608345EC(a1, a2);
    sub_2608347D4(a1, a2);
    sub_2608347D4(a1, a2);
    goto LABEL_9;
  }
  uint64_t result = qword_26A8B4CD0 >> 3;
  if (!__OFSUB__(v9, v8))
  {
    uint64_t v13 = MEMORY[0x26121C470](result);
    unint64_t v14 = v10;
    sub_260841EB0(&v13, 0);
    uint64_t v11 = v13;
    unint64_t v12 = v14;
    sub_2608345EC(v13, v14);
    sub_2607DCF28(v11, v12);
LABEL_9:
    uint64_t result = sub_2607DCF28(v5, v6);
    *(_OWORD *)uint64_t v2 = v15;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t DigitizerContact.index.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0() & 0x1F;
}

#error "260831AD8: call analysis failed (funcsize=23)"

BOOL DigitizerContact.range.getter(uint64_t a1, unint64_t a2)
{
  return HIDReport.subscript.getter(7, a1, a2);
}

BOOL DigitizerContact.touch.getter(uint64_t a1, unint64_t a2)
{
  return HIDReport.subscript.getter(6, a1, a2);
}

BOOL DigitizerContact.resting.getter(uint64_t a1, unint64_t a2)
{
  return HIDReport.subscript.getter(5, a1, a2);
}

void *DigitizerReport.contacts.getter()
{
  OUTLINED_FUNCTION_6_16();
  unsigned __int8 v2 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = v2;
  sub_2607DCED0(v1, v0);
  return sub_260831638(0, v3, v1, v0);
}

Swift::UInt8_optional __swiftcall DigitizerReport.contactIdentity(atIndex:)(Swift::Int atIndex)
{
  BOOL v3 = __OFADD__(8 * atIndex, 320);
  Swift::Int v4 = 8 * atIndex + 320;
  if (v3)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    JUMPOUT(0x260831C8CLL);
  }
  uint64_t v5 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_6;
      }
      goto LABEL_17;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_9;
    default:
LABEL_6:
      OUTLINED_FUNCTION_2_1();
      if (!v7) {
        goto LABEL_15;
      }
      uint64_t v5 = 8 * v6;
LABEL_9:
      uint64_t v8 = v4 + 8;
      if (__OFADD__(v4, 8)) {
        goto LABEL_16;
      }
      if (v5 >= v8) {
        unsigned __int8 v9 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
      }
      else {
        unsigned __int8 v9 = 0;
      }
      return (Swift::UInt8_optional)(v9 | ((v5 < v8) << 8));
  }
}

uint64_t DigitizerReport.scrollCollection.getter(uint64_t a1, unint64_t a2)
{
  sub_2607DCED0(a1, a2);
  uint64_t result = DigitizerReport.contactRange(forIndex:)(5, a1, a2);
  uint64_t v6 = result;
  if (qword_26A8B4510 != -1) {
    uint64_t result = swift_once();
  }
  if (__OFADD__(v6, qword_26A8B4CD0 >> 3))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v6 + (qword_26A8B4CD0 >> 3) < v6)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_26087AFC0();
  OUTLINED_FUNCTION_10_13();
  return sub_2607E6884(v6, v2);
}

uint64_t static DigitizerReport.initialReportBitCount.getter()
{
  return 320;
}

uint64_t static DigitizerReport.reportID.getter()
{
  return 9;
}

uint64_t sub_260831D6C()
{
  uint64_t result = sub_260831D90();
  *(void *)&xmmword_26A8B4D28 = result;
  *((void *)&xmmword_26A8B4D28 + 1) = v1;
  return result;
}

uint64_t sub_260831D90()
{
  LOBYTE(v12) = 3;
  uint64_t v12 = sub_260815298((char *)&v12, 1);
  unint64_t v13 = v0;
  uint64_t v1 = sub_260831E9C();
  unint64_t v3 = v2;
  sub_26087B050();
  sub_2607DCF28(v1, v3);
  uint64_t v4 = sub_2607E6724((uint64_t)&unk_270C9E068);
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = v12;
  unint64_t v8 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087C870;
  *(void *)(inited + 56) = &type metadata for ApplicationCollection;
  *(void *)(inited + 64) = &protocol witness table for ApplicationCollection;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  sub_2607DCED0(v7, v8);
  uint64_t v10 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v7, v8);
  return v10;
}

uint64_t sub_260831E9C()
{
  LOBYTE(v98[0]) = 5;
  uint64_t v65 = sub_2608155C0((char *)v98, 0xDuLL);
  unint64_t v63 = v0;
  LOBYTE(v98[0]) = 17;
  uint64_t v64 = sub_2608155C0((char *)v98, 0x54uLL);
  unint64_t v91 = v1;
  LOBYTE(v98[0]) = 7;
  uint64_t v2 = sub_260815298((char *)v98, 5);
  unint64_t v89 = v3;
  uint64_t v90 = v2;
  LOBYTE(v98[0]) = 12;
  uint64_t v4 = sub_2608155C0((char *)v98, 8uLL);
  unint64_t v87 = v5;
  uint64_t v88 = v4;
  LOBYTE(v98[0]) = 14;
  uint64_t v6 = sub_260815298((char *)v98, 1);
  unint64_t v85 = v7;
  uint64_t v86 = v6;
  LOBYTE(v96[0]) = 0;
  LOBYTE(v94[0]) = 1;
  LOBYTE(v92[0]) = 0;
  *(_WORD *)&v97[3] = 0;
  *(_WORD *)&v97[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v96, v94, v92, &v97[4], &v97[3], &v97[2], &v97[1], v98);
  LOBYTE(v96[0]) = 17;
  uint64_t v8 = sub_2608155C0((char *)v96, 0x55uLL);
  unint64_t v83 = v9;
  uint64_t v84 = v8;
  LOBYTE(v96[0]) = 7;
  uint64_t v10 = sub_260815298((char *)v96, 5);
  unint64_t v81 = v11;
  uint64_t v82 = v10;
  LOBYTE(v96[0]) = 12;
  uint64_t v12 = sub_2608155C0((char *)v96, 8uLL);
  unint64_t v79 = v13;
  uint64_t v80 = v12;
  LOBYTE(v96[0]) = 14;
  uint64_t v14 = sub_260815298((char *)v96, 1);
  unint64_t v77 = v15;
  uint64_t v78 = v14;
  LOBYTE(v94[0]) = 0;
  LOBYTE(v92[0]) = 1;
  memset(v97, 0, sizeof(v97));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v94, v92, &v97[4], &v97[3], &v97[2], &v97[1], v97, v96);
  LOBYTE(v94[0]) = 17;
  uint64_t v16 = sub_2608155C0((char *)v94, 0x22uLL);
  unint64_t v75 = v17;
  uint64_t v76 = v16;
  if (qword_26A8B4530 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_26A8B4D40;
  unint64_t v18 = *(void *)algn_26A8B4D48;
  sub_2607DCED0(qword_26A8B4D40, *(unint64_t *)algn_26A8B4D48);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  sub_2607DCED0(v19, v18);
  if (qword_26A8B4518 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_26A8B4CD8;
  unint64_t v21 = qword_26A8B4CE0;
  LOBYTE(v94[0]) = 5;
  sub_2607DCED0(qword_26A8B4CD8, qword_26A8B4CE0);
  sub_2607DCED0(v20, v21);
  uint64_t v61 = sub_2608155C0((char *)v94, 0xFF1AuLL);
  unint64_t v62 = v22;
  LOBYTE(v94[0]) = 17;
  uint64_t v23 = sub_2608155C0((char *)v94, 0xE0F4uLL);
  unint64_t v60 = v24;
  LOBYTE(v94[0]) = 12;
  uint64_t v25 = sub_2608155C0((char *)v94, 8uLL);
  unint64_t v55 = v26;
  uint64_t v56 = v25;
  LOBYTE(v94[0]) = 14;
  uint64_t v74 = sub_260815298((char *)v94, 5);
  unint64_t v66 = v27;
  LOBYTE(v92[0]) = 0;
  v97[4] = 1;
  *(_WORD *)&v97[2] = 0;
  *(_WORD *)uint64_t v97 = 0;
  char v95 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v92, &v97[4], &v97[3], &v97[2], &v97[1], v97, &v95, v94);
  LOBYTE(v92[0]) = 5;
  uint64_t v28 = sub_2608155C0((char *)v92, 0xFF00uLL);
  unint64_t v72 = v29;
  uint64_t v73 = v28;
  LOBYTE(v92[0]) = 17;
  uint64_t v30 = sub_2608155C0((char *)v92, 0x102uLL);
  unint64_t v70 = v31;
  uint64_t v71 = v30;
  LOBYTE(v92[0]) = 6;
  uint64_t v32 = sub_260815298((char *)v92, 0);
  unint64_t v68 = v33;
  uint64_t v69 = v32;
  LOBYTE(v92[0]) = 7;
  uint64_t v67 = sub_260815298((char *)v92, 255);
  unint64_t v59 = v34;
  LOBYTE(v92[0]) = 12;
  uint64_t v35 = sub_2608155C0((char *)v92, 8uLL);
  unint64_t v57 = v36;
  uint64_t v58 = v35;
  LOBYTE(v92[0]) = 14;
  uint64_t v37 = sub_260815298((char *)v92, 8);
  unint64_t v53 = v38;
  uint64_t v54 = v37;
  *(_WORD *)&v97[3] = 1;
  *(_WORD *)&v97[1] = 0;
  v97[0] = 0;
  char v95 = 0;
  char v93 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v97[4], &v97[3], &v97[2], &v97[1], v97, &v95, &v93, v92);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_260880210;
  *(void *)(v39 + 56) = &type metadata for ReportID;
  *(void *)(v39 + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(v39 + 32) = 9;
  *(void *)(v39 + 96) = &type metadata for UsagePage;
  *(void *)(v39 + 104) = &protocol witness table for UsagePage;
  *(void *)(v39 + 72) = v65;
  *(void *)(v39 + 80) = v63;
  *(void *)(v39 + 136) = &type metadata for Usage;
  *(void *)(v39 + 144) = &protocol witness table for Usage;
  *(void *)(v39 + 112) = v64;
  *(void *)(v39 + 120) = v91;
  *(void *)(v39 + 176) = &type metadata for LogicalMaximum;
  *(void *)(v39 + 184) = &protocol witness table for LogicalMaximum;
  *(void *)(v39 + 152) = v90;
  *(void *)(v39 + 160) = v89;
  *(void *)(v39 + 576) = &type metadata for HIDReportDescriptor;
  *(void *)(v39 + 616) = &type metadata for HIDReportDescriptor;
  *(void *)(v39 + 656) = &type metadata for HIDReportDescriptor;
  *(void *)(v39 + 696) = &type metadata for HIDReportDescriptor;
  *(void *)(v39 + 736) = &type metadata for HIDReportDescriptor;
  *(void *)(v39 + 776) = &type metadata for HIDReportDescriptor;
  *(void *)(v39 + 584) = &protocol witness table for HIDReportDescriptor;
  *(void *)(v39 + 624) = &protocol witness table for HIDReportDescriptor;
  *(void *)(v39 + 664) = &protocol witness table for HIDReportDescriptor;
  *(void *)(v39 + 704) = &protocol witness table for HIDReportDescriptor;
  *(void *)(v39 + 744) = &protocol witness table for HIDReportDescriptor;
  *(void *)(v39 + 784) = &protocol witness table for HIDReportDescriptor;
  *(void *)(v39 + 216) = &type metadata for ReportSize;
  *(void *)(v39 + 224) = &protocol witness table for ReportSize;
  *(void *)(v39 + 192) = v88;
  *(void *)(v39 + 200) = v87;
  *(void *)(v39 + 816) = &type metadata for UsagePage;
  *(void *)(v39 + 1016) = &type metadata for UsagePage;
  *(void *)(v39 + 824) = &protocol witness table for UsagePage;
  *(void *)(v39 + 1024) = &protocol witness table for UsagePage;
  *(void *)(v39 + 256) = &type metadata for ReportCount;
  *(void *)(v39 + 264) = &protocol witness table for ReportCount;
  *(void *)(v39 + 232) = v86;
  *(void *)(v39 + 240) = v85;
  *(void *)(v39 + 336) = &type metadata for Usage;
  *(void *)(v39 + 344) = &protocol witness table for Usage;
  *(void *)(v39 + 536) = &type metadata for Usage;
  *(void *)(v39 + 544) = &protocol witness table for Usage;
  *(void *)(v39 + 856) = &type metadata for Usage;
  *(void *)(v39 + 864) = &protocol witness table for Usage;
  *(void *)(v39 + 1056) = &type metadata for Usage;
  *(void *)(v39 + 1064) = &protocol witness table for Usage;
  *(void *)(v39 + 1096) = &type metadata for LogicalMinimum;
  *(void *)(v39 + 1104) = &protocol witness table for LogicalMinimum;
  uint64_t v51 = v98[0];
  uint64_t v40 = v98[0];
  unint64_t v52 = v98[1];
  *(void *)(v39 + 1136) = &type metadata for LogicalMaximum;
  *(void *)(v39 + 376) = &type metadata for LogicalMaximum;
  *(void *)(v39 + 384) = &protocol witness table for LogicalMaximum;
  *(void *)(v39 + 1144) = &protocol witness table for LogicalMaximum;
  *(void *)(v39 + 296) = &type metadata for Input;
  *(void *)(v39 + 304) = &protocol witness table for Input;
  *(void *)(v39 + 272) = v40;
  *(void *)(v39 + 280) = v52;
  *(void *)(v39 + 312) = v84;
  *(void *)(v39 + 320) = v83;
  *(void *)(v39 + 352) = v82;
  *(void *)(v39 + 360) = v81;
  *(void *)(v39 + 416) = &type metadata for ReportSize;
  *(void *)(v39 + 424) = &protocol witness table for ReportSize;
  *(void *)(v39 + 392) = v80;
  *(void *)(v39 + 400) = v79;
  *(void *)(v39 + 456) = &type metadata for ReportCount;
  *(void *)(v39 + 464) = &protocol witness table for ReportCount;
  *(void *)(v39 + 432) = v78;
  *(void *)(v39 + 440) = v77;
  *(void *)(v39 + 896) = &type metadata for ReportSize;
  *(void *)(v39 + 904) = &protocol witness table for ReportSize;
  *(void *)(v39 + 1176) = &type metadata for ReportSize;
  *(void *)(v39 + 1184) = &protocol witness table for ReportSize;
  uint64_t v49 = v96[0];
  uint64_t v41 = v96[0];
  unint64_t v50 = v96[1];
  *(void *)(v39 + 496) = &type metadata for Input;
  *(void *)(v39 + 504) = &protocol witness table for Input;
  *(void *)(v39 + 472) = v41;
  *(void *)(v39 + 480) = v50;
  *(void *)(v39 + 512) = v76;
  *(void *)(v39 + 520) = v75;
  *(void *)(v39 + 552) = v19;
  *(void *)(v39 + 560) = v18;
  *(void *)(v39 + 592) = v19;
  *(void *)(v39 + 600) = v18;
  *(void *)(v39 + 632) = v19;
  *(void *)(v39 + 640) = v18;
  *(void *)(v39 + 672) = v19;
  *(void *)(v39 + 680) = v18;
  *(void *)(v39 + 712) = v19;
  *(void *)(v39 + 720) = v18;
  *(void *)(v39 + 752) = v20;
  *(void *)(v39 + 760) = v21;
  *(void *)(v39 + 792) = v61;
  *(void *)(v39 + 800) = v62;
  *(void *)(v39 + 832) = v23;
  *(void *)(v39 + 840) = v60;
  *(void *)(v39 + 872) = v56;
  *(void *)(v39 + 880) = v55;
  *(void *)(v39 + 936) = &type metadata for ReportCount;
  *(void *)(v39 + 944) = &protocol witness table for ReportCount;
  *(void *)(v39 + 912) = v74;
  *(void *)(v39 + 920) = v66;
  *(void *)(v39 + 1216) = &type metadata for ReportCount;
  *(void *)(v39 + 1224) = &protocol witness table for ReportCount;
  uint64_t v47 = v94[0];
  uint64_t v42 = v94[0];
  unint64_t v48 = v94[1];
  *(void *)(v39 + 976) = &type metadata for Input;
  *(void *)(v39 + 984) = &protocol witness table for Input;
  *(void *)(v39 + 952) = v42;
  *(void *)(v39 + 960) = v48;
  *(void *)(v39 + 992) = v73;
  *(void *)(v39 + 1000) = v72;
  *(void *)(v39 + 1032) = v71;
  *(void *)(v39 + 1040) = v70;
  *(void *)(v39 + 1072) = v69;
  *(void *)(v39 + 1080) = v68;
  *(void *)(v39 + 1112) = v67;
  *(void *)(v39 + 1120) = v59;
  *(void *)(v39 + 1152) = v58;
  *(void *)(v39 + 1160) = v57;
  *(void *)(v39 + 1192) = v54;
  *(void *)(v39 + 1200) = v53;
  *(void *)(v39 + 1256) = &type metadata for Input;
  *(void *)(v39 + 1264) = &protocol witness table for Input;
  uint64_t v44 = v92[0];
  unint64_t v45 = v92[1];
  *(void *)(v39 + 1232) = v92[0];
  *(void *)(v39 + 1240) = v45;
  sub_2607DCED0(v65, v63);
  sub_2607DCED0(v64, v91);
  sub_2607DCED0(v90, v89);
  sub_2607DCED0(v88, v87);
  sub_2607DCED0(v86, v85);
  sub_2607DCED0(v51, v52);
  sub_2607DCED0(v84, v83);
  sub_2607DCED0(v82, v81);
  sub_2607DCED0(v80, v79);
  sub_2607DCED0(v78, v77);
  sub_2607DCED0(v49, v50);
  sub_2607DCED0(v76, v75);
  sub_2607DCED0(v61, v62);
  sub_2607DCED0(v23, v60);
  sub_2607DCED0(v56, v55);
  sub_2607DCED0(v74, v66);
  sub_2607DCED0(v47, v48);
  sub_2607DCED0(v73, v72);
  sub_2607DCED0(v71, v70);
  sub_2607DCED0(v69, v68);
  sub_2607DCED0(v67, v59);
  sub_2607DCED0(v58, v57);
  sub_2607DCED0(v54, v53);
  sub_2607DCED0(v44, v45);
  uint64_t v46 = static HIDReportDescriptor.Builder.buildBlock(_:)(v39);
  sub_2607DCF28(v20, v21);
  sub_2607DCF28(v19, v18);
  sub_2607DCF28(v19, v18);
  sub_2607DCF28(v19, v18);
  sub_2607DCF28(v19, v18);
  sub_2607DCF28(v19, v18);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v44, v45);
  sub_2607DCF28(v54, v53);
  sub_2607DCF28(v58, v57);
  sub_2607DCF28(v67, v59);
  sub_2607DCF28(v69, v68);
  sub_2607DCF28(v71, v70);
  sub_2607DCF28(v73, v72);
  sub_2607DCF28(v47, v48);
  sub_2607DCF28(v74, v66);
  sub_2607DCF28(v56, v55);
  sub_2607DCF28(v23, v60);
  sub_2607DCF28(v61, v62);
  sub_2607DCF28(v76, v75);
  sub_2607DCF28(v49, v50);
  sub_2607DCF28(v78, v77);
  sub_2607DCF28(v80, v79);
  sub_2607DCF28(v82, v81);
  sub_2607DCF28(v84, v83);
  sub_2607DCF28(v51, v52);
  sub_2607DCF28(v86, v85);
  sub_2607DCF28(v88, v87);
  sub_2607DCF28(v90, v89);
  sub_2607DCF28(v64, v91);
  sub_2607DCF28(v65, v63);
  return v46;
}

uint64_t static DigitizerReport.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_26081E9B0(&qword_26A8B4520, (uint64_t *)&xmmword_26A8B4D28, (unint64_t *)&xmmword_26A8B4D28 + 1, a1);
}

uint64_t sub_260832848()
{
  return 320;
}

uint64_t sub_260832854()
{
  if (qword_26A8B4530 != -1) {
    swift_once();
  }
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  sub_2607DCED0(v0, v1);
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(0);
  uint64_t v3 = OUTLINED_FUNCTION_1_8();
  uint64_t result = sub_2607DCF28(v3, v4);
  qword_26A8B4D38 = v2;
  return result;
}

uint64_t static DigitizerContact.bitCount.getter()
{
  if (qword_26A8B4528 != -1) {
    swift_once();
  }
  return qword_26A8B4D38;
}

uint64_t sub_260832934()
{
  uint64_t result = sub_260832958();
  qword_26A8B4D40 = result;
  *(void *)algn_26A8B4D48 = v1;
  return result;
}

uint64_t sub_260832958()
{
  LOBYTE(v12) = 3;
  uint64_t v12 = sub_260815298((char *)&v12, 2);
  unint64_t v13 = v0;
  uint64_t v1 = sub_260832A64();
  unint64_t v3 = v2;
  sub_26087B050();
  sub_2607DCF28(v1, v3);
  uint64_t v4 = sub_2607E6724((uint64_t)&unk_270C9E040);
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = v12;
  unint64_t v8 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087C870;
  *(void *)(inited + 56) = &type metadata for LogicalCollection;
  *(void *)(inited + 64) = &protocol witness table for LogicalCollection;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  sub_2607DCED0(v7, v8);
  uint64_t v10 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v7, v8);
  return v10;
}

uint64_t sub_260832A64()
{
  LOBYTE(v108[0]) = 5;
  uint64_t v0 = sub_2608155C0((char *)v108, 0xDuLL);
  unint64_t v66 = v1;
  uint64_t v67 = v0;
  LOBYTE(v108[0]) = 17;
  uint64_t v2 = sub_2608155C0((char *)v108, 0x51uLL);
  unint64_t v85 = v3;
  uint64_t v86 = v2;
  LOBYTE(v108[0]) = 6;
  uint64_t v54 = sub_260815298((char *)v108, 0);
  unint64_t v84 = v4;
  LOBYTE(v108[0]) = 7;
  uint64_t v53 = sub_260815298((char *)v108, 4);
  unint64_t v6 = v5;
  LOBYTE(v108[0]) = 12;
  uint64_t v7 = sub_2608155C0((char *)v108, 5uLL);
  unint64_t v75 = v8;
  uint64_t v76 = v7;
  LOBYTE(v108[0]) = 14;
  uint64_t v9 = sub_260815298((char *)v108, 1);
  unint64_t v73 = v10;
  uint64_t v74 = v9;
  LOBYTE(v106[0]) = 0;
  LOBYTE(v104[0]) = 1;
  LOBYTE(v102[0]) = 0;
  *(_WORD *)&v107[3] = 0;
  *(_WORD *)&v107[1] = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v106, v104, v102, &v107[4], &v107[3], &v107[2], &v107[1], v108);
  LOBYTE(v106[0]) = 5;
  uint64_t v11 = sub_2608155C0((char *)v106, 0xFF1AuLL);
  unint64_t v71 = v12;
  uint64_t v72 = v11;
  LOBYTE(v106[0]) = 17;
  uint64_t v13 = sub_2608155C0((char *)v106, 0xE0F2uLL);
  unint64_t v69 = v14;
  uint64_t v70 = v13;
  LOBYTE(v106[0]) = 12;
  uint64_t v68 = sub_2608155C0((char *)v106, 1uLL);
  unint64_t v101 = v15;
  LOBYTE(v106[0]) = 14;
  uint64_t v16 = sub_260815298((char *)v106, 1);
  unint64_t v99 = v17;
  uint64_t v100 = v16;
  LOBYTE(v104[0]) = 0;
  LOBYTE(v102[0]) = 1;
  memset(v107, 0, sizeof(v107));
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v104, v102, &v107[4], &v107[3], &v107[2], &v107[1], v107, v106);
  LOBYTE(v104[0]) = 17;
  uint64_t v18 = sub_2608155C0((char *)v104, 0x33uLL);
  unint64_t v97 = v19;
  uint64_t v98 = v18;
  LOBYTE(v104[0]) = 17;
  uint64_t v20 = sub_2608155C0((char *)v104, 0x32uLL);
  unint64_t v95 = v21;
  uint64_t v96 = v20;
  LOBYTE(v104[0]) = 6;
  uint64_t v22 = sub_260815298((char *)v104, 0);
  unint64_t v93 = v23;
  uint64_t v94 = v22;
  LOBYTE(v104[0]) = 7;
  uint64_t v24 = sub_260815298((char *)v104, 1);
  unint64_t v91 = v25;
  uint64_t v92 = v24;
  LOBYTE(v104[0]) = 12;
  uint64_t v26 = sub_2608155C0((char *)v104, 1uLL);
  unint64_t v89 = v27;
  uint64_t v90 = v26;
  LOBYTE(v104[0]) = 14;
  uint64_t v28 = sub_260815298((char *)v104, 2);
  unint64_t v87 = v29;
  uint64_t v88 = v28;
  LOBYTE(v102[0]) = 0;
  v107[4] = 1;
  *(_WORD *)&v107[2] = 0;
  *(_WORD *)uint64_t v107 = 0;
  char v105 = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v102, &v107[4], &v107[3], &v107[2], &v107[1], v107, &v105, v104);
  LOBYTE(v102[0]) = 5;
  uint64_t v30 = sub_2608155C0((char *)v102, 1uLL);
  unint64_t v82 = v31;
  uint64_t v83 = v30;
  LOBYTE(v102[0]) = 17;
  uint64_t v32 = sub_2608155C0((char *)v102, 0x30uLL);
  unint64_t v80 = v33;
  uint64_t v81 = v32;
  LOBYTE(v102[0]) = 17;
  uint64_t v34 = sub_2608155C0((char *)v102, 0x31uLL);
  unint64_t v78 = v35;
  uint64_t v79 = v34;
  LOBYTE(v102[0]) = 6;
  uint64_t v65 = sub_260815298((char *)v102, 0);
  unint64_t v77 = v36;
  LOBYTE(v102[0]) = 7;
  uint64_t v37 = sub_260815298((char *)v102, 0xFFFFLL);
  unint64_t v63 = v38;
  uint64_t v64 = v37;
  LOBYTE(v102[0]) = 12;
  uint64_t v39 = sub_2608155C0((char *)v102, 0x10uLL);
  unint64_t v61 = v40;
  uint64_t v62 = v39;
  LOBYTE(v102[0]) = 14;
  uint64_t v41 = sub_260815298((char *)v102, 2);
  unint64_t v59 = v42;
  uint64_t v60 = v41;
  *(_WORD *)&v107[3] = 1;
  *(_WORD *)&v107[1] = 0;
  v107[0] = 0;
  char v105 = 0;
  char v103 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v107[4], &v107[3], &v107[2], &v107[1], v107, &v105, &v103, v102);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_260880220;
  *(void *)(v43 + 56) = &type metadata for UsagePage;
  *(void *)(v43 + 64) = &protocol witness table for UsagePage;
  *(void *)(v43 + 32) = v67;
  *(void *)(v43 + 40) = v66;
  *(void *)(v43 + 96) = &type metadata for Usage;
  *(void *)(v43 + 104) = &protocol witness table for Usage;
  *(void *)(v43 + 72) = v86;
  *(void *)(v43 + 80) = v85;
  *(void *)(v43 + 136) = &type metadata for LogicalMinimum;
  *(void *)(v43 + 144) = &protocol witness table for LogicalMinimum;
  *(void *)(v43 + 112) = v54;
  *(void *)(v43 + 120) = v84;
  *(void *)(v43 + 176) = &type metadata for LogicalMaximum;
  *(void *)(v43 + 184) = &protocol witness table for LogicalMaximum;
  *(void *)(v43 + 152) = v53;
  *(void *)(v43 + 160) = v6;
  *(void *)(v43 + 816) = &type metadata for UsagePage;
  *(void *)(v43 + 336) = &type metadata for UsagePage;
  *(void *)(v43 + 344) = &protocol witness table for UsagePage;
  *(void *)(v43 + 824) = &protocol witness table for UsagePage;
  *(void *)(v43 + 216) = &type metadata for ReportSize;
  *(void *)(v43 + 224) = &protocol witness table for ReportSize;
  *(void *)(v43 + 192) = v76;
  *(void *)(v43 + 200) = v75;
  *(void *)(v43 + 536) = &type metadata for Usage;
  *(void *)(v43 + 576) = &type metadata for Usage;
  *(void *)(v43 + 856) = &type metadata for Usage;
  *(void *)(v43 + 896) = &type metadata for Usage;
  *(void *)(v43 + 376) = &type metadata for Usage;
  *(void *)(v43 + 384) = &protocol witness table for Usage;
  *(void *)(v43 + 544) = &protocol witness table for Usage;
  *(void *)(v43 + 584) = &protocol witness table for Usage;
  *(void *)(v43 + 864) = &protocol witness table for Usage;
  *(void *)(v43 + 904) = &protocol witness table for Usage;
  *(void *)(v43 + 256) = &type metadata for ReportCount;
  *(void *)(v43 + 264) = &protocol witness table for ReportCount;
  *(void *)(v43 + 232) = v74;
  *(void *)(v43 + 240) = v73;
  *(void *)(v43 + 616) = &type metadata for LogicalMinimum;
  *(void *)(v43 + 624) = &protocol witness table for LogicalMinimum;
  *(void *)(v43 + 936) = &type metadata for LogicalMinimum;
  *(void *)(v43 + 944) = &protocol witness table for LogicalMinimum;
  uint64_t v57 = v108[0];
  uint64_t v44 = v108[0];
  unint64_t v58 = v108[1];
  *(void *)(v43 + 656) = &type metadata for LogicalMaximum;
  *(void *)(v43 + 976) = &type metadata for LogicalMaximum;
  *(void *)(v43 + 664) = &protocol witness table for LogicalMaximum;
  *(void *)(v43 + 984) = &protocol witness table for LogicalMaximum;
  *(void *)(v43 + 296) = &type metadata for Input;
  *(void *)(v43 + 304) = &protocol witness table for Input;
  *(void *)(v43 + 272) = v44;
  *(void *)(v43 + 280) = v58;
  *(void *)(v43 + 312) = v72;
  *(void *)(v43 + 320) = v71;
  *(void *)(v43 + 352) = v70;
  *(void *)(v43 + 360) = v69;
  *(void *)(v43 + 416) = &type metadata for ReportSize;
  *(void *)(v43 + 424) = &protocol witness table for ReportSize;
  *(void *)(v43 + 392) = v68;
  *(void *)(v43 + 400) = v101;
  *(void *)(v43 + 456) = &type metadata for ReportCount;
  *(void *)(v43 + 464) = &protocol witness table for ReportCount;
  *(void *)(v43 + 432) = v100;
  *(void *)(v43 + 440) = v99;
  *(void *)(v43 + 696) = &type metadata for ReportSize;
  *(void *)(v43 + 704) = &protocol witness table for ReportSize;
  *(void *)(v43 + 1016) = &type metadata for ReportSize;
  *(void *)(v43 + 1024) = &protocol witness table for ReportSize;
  uint64_t v55 = v106[0];
  uint64_t v45 = v106[0];
  unint64_t v56 = v106[1];
  *(void *)(v43 + 496) = &type metadata for Input;
  *(void *)(v43 + 504) = &protocol witness table for Input;
  *(void *)(v43 + 472) = v45;
  *(void *)(v43 + 480) = v56;
  *(void *)(v43 + 512) = v98;
  *(void *)(v43 + 520) = v97;
  *(void *)(v43 + 552) = v96;
  *(void *)(v43 + 560) = v95;
  *(void *)(v43 + 592) = v94;
  *(void *)(v43 + 600) = v93;
  *(void *)(v43 + 632) = v92;
  *(void *)(v43 + 640) = v91;
  *(void *)(v43 + 672) = v90;
  *(void *)(v43 + 680) = v89;
  *(void *)(v43 + 736) = &type metadata for ReportCount;
  *(void *)(v43 + 744) = &protocol witness table for ReportCount;
  *(void *)(v43 + 712) = v88;
  *(void *)(v43 + 720) = v87;
  *(void *)(v43 + 1056) = &type metadata for ReportCount;
  *(void *)(v43 + 1064) = &protocol witness table for ReportCount;
  uint64_t v51 = v104[0];
  uint64_t v46 = v104[0];
  unint64_t v52 = v104[1];
  *(void *)(v43 + 776) = &type metadata for Input;
  *(void *)(v43 + 784) = &protocol witness table for Input;
  *(void *)(v43 + 752) = v46;
  *(void *)(v43 + 760) = v52;
  *(void *)(v43 + 792) = v83;
  *(void *)(v43 + 800) = v82;
  *(void *)(v43 + 832) = v81;
  *(void *)(v43 + 840) = v80;
  *(void *)(v43 + 872) = v79;
  *(void *)(v43 + 880) = v78;
  *(void *)(v43 + 912) = v65;
  *(void *)(v43 + 920) = v77;
  *(void *)(v43 + 952) = v64;
  *(void *)(v43 + 960) = v63;
  *(void *)(v43 + 992) = v62;
  *(void *)(v43 + 1000) = v61;
  *(void *)(v43 + 1032) = v60;
  *(void *)(v43 + 1040) = v59;
  *(void *)(v43 + 1096) = &type metadata for Input;
  *(void *)(v43 + 1104) = &protocol witness table for Input;
  uint64_t v48 = v102[0];
  unint64_t v49 = v102[1];
  *(void *)(v43 + 1072) = v102[0];
  *(void *)(v43 + 1080) = v49;
  sub_2607DCED0(v67, v66);
  sub_2607DCED0(v86, v85);
  sub_2607DCED0(v54, v84);
  sub_2607DCED0(v53, v6);
  sub_2607DCED0(v76, v75);
  sub_2607DCED0(v74, v73);
  sub_2607DCED0(v57, v58);
  sub_2607DCED0(v72, v71);
  sub_2607DCED0(v70, v69);
  sub_2607DCED0(v68, v101);
  sub_2607DCED0(v100, v99);
  sub_2607DCED0(v55, v56);
  sub_2607DCED0(v98, v97);
  sub_2607DCED0(v96, v95);
  sub_2607DCED0(v94, v93);
  sub_2607DCED0(v92, v91);
  sub_2607DCED0(v90, v89);
  sub_2607DCED0(v88, v87);
  sub_2607DCED0(v51, v52);
  sub_2607DCED0(v83, v82);
  sub_2607DCED0(v81, v80);
  sub_2607DCED0(v79, v78);
  sub_2607DCED0(v65, v77);
  sub_2607DCED0(v64, v63);
  sub_2607DCED0(v62, v61);
  sub_2607DCED0(v60, v59);
  sub_2607DCED0(v48, v49);
  uint64_t v50 = static HIDReportDescriptor.Builder.buildBlock(_:)(v43);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v48, v49);
  sub_2607DCF28(v60, v59);
  sub_2607DCF28(v62, v61);
  sub_2607DCF28(v64, v63);
  sub_2607DCF28(v65, v77);
  sub_2607DCF28(v79, v78);
  sub_2607DCF28(v81, v80);
  sub_2607DCF28(v83, v82);
  sub_2607DCF28(v51, v52);
  sub_2607DCF28(v88, v87);
  sub_2607DCF28(v90, v89);
  sub_2607DCF28(v92, v91);
  sub_2607DCF28(v94, v93);
  sub_2607DCF28(v96, v95);
  sub_2607DCF28(v98, v97);
  sub_2607DCF28(v55, v56);
  sub_2607DCF28(v100, v99);
  sub_2607DCF28(v68, v101);
  sub_2607DCF28(v70, v69);
  sub_2607DCF28(v72, v71);
  sub_2607DCF28(v57, v58);
  sub_2607DCF28(v74, v73);
  sub_2607DCF28(v76, v75);
  sub_2607DCF28(v53, v6);
  sub_2607DCF28(v54, v84);
  sub_2607DCF28(v86, v85);
  sub_2607DCF28(v67, v66);
  return v50;
}

uint64_t static DigitizerContact.descriptor.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_26081E9B0(&qword_26A8B4530, &qword_26A8B4D40, (unint64_t *)algn_26A8B4D48, a1);
}

uint64_t DigitizerReport.report.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t DigitizerReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*DigitizerReport.report.modify())()
{
  return nullsub_1;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DigitizerReport.init(_report:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      OUTLINED_FUNCTION_2_1();
      if (v5) {
        goto LABEL_7;
      }
      __break(1u);
      goto LABEL_6;
    default:
      while (1)
      {
        BOOL v3 = __OFADD__(v2, 16);
        uint64_t v4 = v2 + 16;
        if (!v3) {
          break;
        }
LABEL_6:
        __break(1u);
LABEL_7:
        uint64_t v2 = 8 * v4;
      }
      sub_26087AFD0();
      return;
  }
}

uint64_t DigitizerReport.contactCountMaximum.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 16);
}

uint64_t sub_2608333C8@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  DigitizerReport.init(_report:)(result, a2);
  *a3 = result;
  a3[1] = v4;
  return result;
}

uint64_t sub_2608333F0()
{
  return sub_2608758F4(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t DigitizerContact.init()()
{
  if (qword_26A8B4528 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26A8B4D38;
  return HIDReport.init(bitCount:id:)(v0, 0);
}

uint64_t (*DigitizerContact.report.modify())()
{
  return nullsub_1;
}

unint64_t sub_26083347C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DigitizerContact.index.getter();
  *a1 = result;
  return result;
}

uint64_t DigitizerContact.index.setter(unint64_t a1)
{
  int v2 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  if ((a1 & 0x8000000000000000) != 0 || a1 >= 0x100)
  {
    OUTLINED_FUNCTION_27();
    uint64_t result = sub_26087B980();
    __break(1u);
  }
  else
  {
    unint64_t v3 = v2 & 0xFFFFFFE0 | a1 & 0x1F;
    return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v3, 0);
  }
  return result;
}

uint64_t (*DigitizerContact.index.modify(uint64_t a1))(unint64_t *a1)
{
  OUTLINED_FUNCTION_0_11(a1);
  *unint64_t v1 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0() & 0x1F;
  return sub_2608335BC;
}

uint64_t sub_2608335BC(unint64_t *a1)
{
  return DigitizerContact.index.setter(*a1);
}

BOOL sub_2608335E0@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = DigitizerContact.touch.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t DigitizerContact.touch.setter(uint64_t a1)
{
  return HIDReport.subscript.setter(a1, 6);
}

uint64_t (*DigitizerContact.touch.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_1_20(a1);
  BOOL v3 = HIDReport.subscript.getter(6, v1, v2);
  OUTLINED_FUNCTION_4_14(v3);
  return sub_260833660;
}

uint64_t sub_260833660(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_8_15(a1);
  return HIDReport.subscript.setter(v1, 6);
}

BOOL sub_260833688@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = DigitizerContact.range.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t DigitizerContact.range.setter(uint64_t a1)
{
  return HIDReport.subscript.setter(a1, 7);
}

uint64_t (*DigitizerContact.range.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_1_20(a1);
  BOOL v3 = HIDReport.subscript.getter(7, v1, v2);
  OUTLINED_FUNCTION_4_14(v3);
  return sub_260833708;
}

uint64_t sub_260833708(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_8_15(a1);
  return HIDReport.subscript.setter(v1, 7);
}

BOOL sub_260833730@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = DigitizerContact.resting.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t DigitizerContact.resting.setter(uint64_t a1)
{
  return HIDReport.subscript.setter(a1, 5);
}

uint64_t (*DigitizerContact.resting.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_1_20(a1);
  BOOL v3 = HIDReport.subscript.getter(5, v1, v2);
  OUTLINED_FUNCTION_4_14(v3);
  return sub_2608337B0;
}

uint64_t sub_2608337B0(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_8_15(a1);
  return HIDReport.subscript.setter(v1, 5);
}

#error "2608337F0: call analysis failed (funcsize=13)"

void sub_26083380C(void *a1@<X0>, double *a2@<X8>)
{
  *a2 = DigitizerContact.x.getter(*a1, a1[1]);
}

#error "260833848: call analysis failed (funcsize=11)"

#error "260833880: call analysis failed (funcsize=21)"

#error "2608338D8: call analysis failed (funcsize=12)"

#error "260833908: call analysis failed (funcsize=13)"

void sub_260833924(void *a1@<X0>, double *a2@<X8>)
{
  *a2 = DigitizerContact.y.getter(*a1, a1[1]);
}

#error "260833960: call analysis failed (funcsize=11)"

#error "260833998: call analysis failed (funcsize=21)"

#error "2608339F0: call analysis failed (funcsize=12)"

unint64_t DigitizerReport.contactCount.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

uint64_t DigitizerReport.contact(atIndex:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = DigitizerReport.contactRange(forIndex:)(a1, a2, a3);
  unint64_t v7 = v6;
  sub_2607DCED0(a2, a3);
  sub_26087AFC0();
  OUTLINED_FUNCTION_10_13();
  return sub_2607E6884(v5, v7);
}

unint64_t sub_260833A8C@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = DigitizerReport.contactCount.getter();
  *a1 = result;
  return result;
}

uint64_t DigitizerReport.contactCount.setter(uint64_t a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1, 8);
}

uint64_t (*DigitizerReport.contactCount.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_1_20(a1);
  *(unsigned char *)(v1 + 8) = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_260833B0C;
}

uint64_t sub_260833B0C(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_8_15(a1);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, 8);
}

unint64_t DigitizerReport.contactCountMaximum.getter()
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
}

unint64_t sub_260833B44@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = DigitizerReport.contactCountMaximum.getter();
  *a1 = result;
  return result;
}

uint64_t (*DigitizerReport.contactCountMaximum.modify(void *a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_1_20(a1);
  *(unsigned char *)(v1 + 8) = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  return sub_260833BBC;
}

uint64_t sub_260833BBC(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_8_15(a1);
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v1, 16);
}

uint64_t DigitizerReport.contactRange(forIndex:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_26A8B4528 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_26A8B4D38 >> 3;
  uint64_t v7 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a2;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  BOOL v8 = __OFADD__(v7, 3);
  uint64_t v9 = v7 + 3;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = a1 * v6;
  if ((unsigned __int128)(a1 * (__int128)v6) >> 64 != (a1 * v6) >> 63)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t result = v9 + v10;
  if (__OFADD__(v9, v10))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (__OFADD__(result, v6))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result + v6 < result)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x260833CC8);
  }
  return result;
}

double DigitizerReport.setContact(_:atIndex:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  double v6 = *(double *)v3;
  unint64_t v7 = v3[1];
  DigitizerReport.contactRange(forIndex:)(a3, *v3, v7);
  *(double *)&long long v9 = v6;
  *((void *)&v9 + 1) = v7;
  sub_2607DCED0(*(uint64_t *)&v6, v7);
  sub_2607DCED0(a1, a2);
  sub_2608345EC(a1, a2);
  sub_2607DCF28(a1, a2);
  sub_2607DCF28(*(uint64_t *)&v6, v7);
  double result = v6;
  *(_OWORD *)BOOL v3 = v9;
  return result;
}

uint64_t DigitizerReport.scrollCollectionRange.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = DigitizerReport.contactRange(forIndex:)(5, a1, a2);
  uint64_t v3 = result;
  if (qword_26A8B4510 != -1) {
    uint64_t result = swift_once();
  }
  if (__OFADD__(v3, qword_26A8B4CD0 >> 3))
  {
    __break(1u);
  }
  else if (v3 + (qword_26A8B4CD0 >> 3) >= v3)
  {
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_260833E14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DigitizerReport.scrollCollection.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_260833E44(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_2608347E8(*a1, v2);
  return DigitizerReport.scrollCollection.setter(v1, v2);
}

uint64_t (*DigitizerReport.scrollCollection.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = (uint64_t)v1;
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  sub_2607DCED0(*v1, v3);
  uint64_t result = (uint64_t (*)(uint64_t *, char))DigitizerReport.contactRange(forIndex:)(5, v4, v3);
  double v6 = result;
  if (qword_26A8B4510 != -1) {
    uint64_t result = (uint64_t (*)(uint64_t *, char))swift_once();
  }
  if (__OFADD__(v6, qword_26A8B4CD0 >> 3))
  {
    __break(1u);
  }
  else if ((uint64_t)v6 + (qword_26A8B4CD0 >> 3) >= (uint64_t)v6)
  {
    uint64_t v7 = sub_26087AFC0();
    unint64_t v9 = v8;
    sub_2607DCF28(v4, v3);
    *a1 = sub_2607E6884(v7, v9);
    a1[1] = v10;
    return sub_260833F80;
  }
  __break(1u);
  return result;
}

uint64_t sub_260833F80(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if ((a2 & 1) == 0) {
    return DigitizerReport.scrollCollection.setter(*a1, v3);
  }
  uint64_t v4 = OUTLINED_FUNCTION_1_8();
  sub_2608347E8(v4, v5);
  DigitizerReport.scrollCollection.setter(v2, v3);
  uint64_t v6 = OUTLINED_FUNCTION_1_8();
  return sub_2608347D4(v6, v7);
}

void sub_260833FF4(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = DigitizerContact.point.getter(*a1, a1[1]);
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = 0;
}

uint64_t sub_260834028(double *a1)
{
  return DigitizerContact.point.setter(*a1, a1[1]);
}

#error "260834064: call analysis failed (funcsize=18)"

uint64_t (*DigitizerContact.point.modify(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 24) = v1;
  *(double *)a1 = DigitizerContact.point.getter(*v1, v1[1]);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  return sub_2608340E8;
}

uint64_t sub_2608340E8(double *a1)
{
  return DigitizerContact.point.setter(*a1, a1[1]);
}

Swift::Int __swiftcall DigitizerReport.contactIdentityOffset(forIndex:)(Swift::Int forIndex)
{
  BOOL v1 = __OFADD__(8 * forIndex, 320);
  Swift::Int result = 8 * forIndex + 320;
  if (v1) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall DigitizerReport.setContactIdentity(_:atIndex:)(Swift::UInt8 _, Swift::Int atIndex)
{
  BOOL v3 = __OFADD__(8 * atIndex, 320);
  Swift::Int v4 = 8 * atIndex + 320;
  if (v3)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    JUMPOUT(0x2608341C4);
  }
  uint64_t v5 = *v2;
  uint64_t v6 = 0;
  switch((unint64_t)v2[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v5), v5)) {
        goto LABEL_6;
      }
      goto LABEL_15;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v5 + 24), *(void *)(v5 + 16))) {
        goto LABEL_6;
      }
      goto LABEL_16;
    case 3uLL:
      goto LABEL_9;
    default:
LABEL_6:
      OUTLINED_FUNCTION_2_1();
      if (!v8) {
        goto LABEL_13;
      }
      uint64_t v6 = 8 * v7;
LABEL_9:
      if (__OFADD__(v4, 8)) {
        goto LABEL_14;
      }
      if (v6 >= v4 + 8) {
        _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(_, v4);
      }
      return;
  }
}

uint64_t DigitizerReport.remoteTimestamp.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x260834284);
      }
      if (v4 >= 53) {
        return _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(360, a1, a2);
      }
      else {
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return result;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_260834294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = DigitizerReport.remoteTimestamp.getter(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_2608342CC()
{
}

void DigitizerReport.remoteTimestamp.setter()
{
  uint64_t v1 = *v0;
  switch((unint64_t)v0[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v1), v1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v1 + 24), *(void *)(v1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v5)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x260834384);
      }
      if (v4 >= 53)
      {
        if (v3) {
          uint64_t v2 = 0;
        }
        _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v2, 360);
      }
      return;
  }
}

void (*DigitizerReport.remoteTimestamp.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *v1;
  char v4 = 1;
  uint64_t v5 = 0;
  switch((unint64_t)v1[1] >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v3), v3)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(v3 + 24), *(void *)(v3 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_10;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v9)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x260834468);
      }
      if (v8 >= 53)
      {
        uint64_t v5 = _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcig_0(360, v6, v7);
        char v4 = 0;
      }
      else
      {
        uint64_t v5 = 0;
        char v4 = 1;
      }
LABEL_10:
      *(void *)a1 = v5;
      *(unsigned char *)(a1 + 8) = v4;
      return sub_260834478;
  }
}

void sub_260834478(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  int v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = (uint64_t *)a1[2];
  if (a2)
  {
    DigitizerReport.remoteTimestamp.setter();
  }
  else
  {
    uint64_t v7 = *v6;
    switch((unint64_t)v6[1] >> 62)
    {
      case 1uLL:
        BOOL v8 = __OFSUB__(HIDWORD(v7), v7);
        uint64_t v9 = (HIDWORD(v7) - v7);
        if (v8) {
          goto LABEL_10;
        }
        goto LABEL_8;
      case 2uLL:
        uint64_t v12 = v7 + 16;
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v12 + 8);
        BOOL v8 = __OFSUB__(v11, v10);
        uint64_t v9 = v11 - v10;
        if (!v8) {
          goto LABEL_8;
        }
        goto LABEL_11;
      case 3uLL:
        return;
      default:
LABEL_8:
        OUTLINED_FUNCTION_2_1();
        if (!v13)
        {
          __break(1u);
LABEL_10:
          __break(1u);
LABEL_11:
          __break(1u);
        }
        if (v9 >= 53)
        {
          if (v5) {
            uint64_t v4 = 0;
          }
          _s12UniversalHID9HIDReportV_2ass5Int64VSi_AFmtcis_0(v4, 360);
        }
        break;
    }
  }
}

uint64_t sub_260834540()
{
  return DigitizerReport.remoteTimestamp.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_260834560()
{
}

void (*sub_260834568(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = DigitizerReport.remoteTimestamp.getter(*(void *)v1, *(void *)(v1 + 8));
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_2608345BC;
}

void sub_2608345BC()
{
}

uint64_t sub_2608345EC(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      OUTLINED_FUNCTION_11_10((int)a1, a1 >> 32);
      uint64_t result = sub_2607DCF28(a1, a2);
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_11_10(v5, v6);
      swift_release();
      uint64_t result = swift_release();
      break;
    default:
      uint64_t result = sub_26087AFB0();
      break;
  }
  return result;
}

uint64_t sub_2608347D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2607DCF28(a1, a2);
  }
  return a1;
}

uint64_t sub_2608347E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2607DCED0(a1, a2);
  }
  return a1;
}

uint64_t sub_260834800(unint64_t *a1)
{
  return DigitizerContact.index.setter(*a1);
}

uint64_t sub_26083482C(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_13(a1);
  return DigitizerContact.touch.setter(v1);
}

uint64_t sub_260834854(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_13(a1);
  return DigitizerContact.range.setter(v1);
}

uint64_t sub_26083487C(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_13(a1);
  return DigitizerContact.resting.setter(v1);
}

uint64_t sub_2608348A4(double *a1)
{
  return DigitizerContact.x.setter(*a1);
}

uint64_t sub_2608348D0(double *a1)
{
  return DigitizerContact.y.setter(*a1);
}

uint64_t sub_2608348FC(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_13(a1);
  return DigitizerReport.contactCount.setter(v1);
}

uint64_t sub_260834924(unsigned __int8 *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_5_13(a1);
  return DigitizerReport.contactCountMaximum.setter(v1);
}

ValueMetadata *type metadata accessor for DigitizerReport()
{
  return &type metadata for DigitizerReport;
}

ValueMetadata *type metadata accessor for DigitizerContact()
{
  return &type metadata for DigitizerContact;
}

uint64_t sub_260834980(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_26087AED0();
  if (!result || (uint64_t result = sub_26087AEF0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_26087AEE0();
      return sub_26087AFB0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *OUTLINED_FUNCTION_1_20(void *result)
{
  *uint64_t result = v1;
  return result;
}

double OUTLINED_FUNCTION_2_21(unsigned __int16 a1)
{
  return (double)a1;
}

void OUTLINED_FUNCTION_3_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_2607E4E08(0, 0xFFFFLL, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t OUTLINED_FUNCTION_4_14(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_13(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  return 8;
}

uint64_t OUTLINED_FUNCTION_8_15(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_10_13()
{
  return sub_2607DCF28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_10(uint64_t a1, uint64_t a2)
{
  return sub_260834980(a1, a2);
}

uint64_t static KeyboardUsage.usagePage.getter()
{
  return 7;
}

uint64_t static KeyboardUsage.usageMinimum.getter()
{
  return 1;
}

uint64_t static KeyboardUsage.usageMaximum.getter()
{
  return 231;
}

uint64_t KeyboardUsage.init(rawValue:)(unsigned __int8 a1)
{
  unsigned int v1 = (a1 + 24);
  BOOL v2 = v1 >= 0x19;
  int v3 = v1 < 0x19;
  if (v2) {
    unsigned __int8 v4 = a1;
  }
  else {
    unsigned __int8 v4 = 0;
  }
  return v4 | (v3 << 8);
}

uint64_t sub_260834B28@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = KeyboardUsage.init(rawValue:)(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_260834B5C()
{
  return 231;
}

uint64_t static KeyboardUsage.backtick.getter()
{
  return 53;
}

uint64_t static KeyboardUsage.delete.getter()
{
  return 42;
}

uint64_t static KeyboardUsage.escape.getter()
{
  return 41;
}

uint64_t static KeyboardUsage.capsLock.getter()
{
  return 57;
}

uint64_t static KeyboardUsage.leftCommand.getter()
{
  return 227;
}

uint64_t static KeyboardUsage.leftControl.getter()
{
  return 224;
}

uint64_t static KeyboardUsage.leftOption.getter()
{
  return 226;
}

uint64_t static KeyboardUsage.leftShift.getter()
{
  return 225;
}

uint64_t static KeyboardUsage.rightCommand.getter()
{
  return 231;
}

uint64_t static KeyboardUsage.rightControl.getter()
{
  return 228;
}

uint64_t static KeyboardUsage.rightOption.getter()
{
  return 230;
}

uint64_t static KeyboardUsage.rightShift.getter()
{
  return 229;
}

void sub_260834BC4()
{
  off_26A8B4D50 = &unk_270C9E480;
}

uint64_t static KeyboardUsage.modifiers.getter()
{
  if (qword_26A8B4538 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

BOOL KeyboardUsage.isModifier.getter(char a1)
{
  return (a1 & 0xF8) == 224;
}

unint64_t sub_260834C44(uint64_t a1)
{
  unint64_t result = sub_260834C6C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_260834C6C()
{
  unint64_t result = qword_26A8B4D58;
  if (!qword_26A8B4D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D58);
  }
  return result;
}

unint64_t sub_260834CBC()
{
  unint64_t result = qword_26A8B4D60;
  if (!qword_26A8B4D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D60);
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardUsage()
{
  return &type metadata for KeyboardUsage;
}

id HIDUserDevice.bridgedValue.getter()
{
  return v0;
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HIDUserDevice.serviceID()()
{
  kern_return_t RegistryEntryID;
  kern_return_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8[2];

  v8[1] = *MEMORY[0x263EF8340];
  v8[0] = 0;
  RegistryEntryID = IORegistryEntryGetRegistryEntryID((io_registry_entry_t)objc_msgSend(v0, sel_service), v8);
  if (!RegistryEntryID) {
    return v8[0];
  }
  BOOL v2 = RegistryEntryID;
  int v3 = sub_26087B2B0();
  uint64_t v5 = v4;
  uint64_t v6 = objc_allocWithZone(MEMORY[0x263F087E8]);
  sub_260835708(v3, v5, v2, 0);
  return swift_willThrow();
}

id HIDUserDevice.handleReport(_:)(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2;
  v8[1] = *(id *)MEMORY[0x263EF8340];
  sub_2607DCED0(a1, a2);
  uint64_t v5 = (void *)sub_26087AFF0();
  sub_2607DCF28(a1, v3);
  v8[0] = 0;
  LODWORD(v3) = objc_msgSend(v2, sel_handleReport_error_, v5, v8);

  if (v3) {
    return v8[0];
  }
  id v7 = v8[0];
  sub_26087AF20();

  return (id)swift_willThrow();
}

id HIDUserDevice.handleReport(_:timestamp:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  sub_2607DCED0(a1, a2);
  id v7 = (void *)sub_26087AFF0();
  sub_2607DCF28(a1, a2);
  v10[0] = 0;
  LODWORD(a3) = objc_msgSend(v3, sel_handleReport_withTimestamp_error_, v7, a3, v10);

  if (a3) {
    return v10[0];
  }
  id v9 = v10[0];
  sub_26087AF20();

  return (id)swift_willThrow();
}

id sub_260834FCC@<X0>(void *a1@<X8>)
{
  id result = sub_260834FF4();
  *a1 = result;
  return result;
}

id sub_260834FF4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unsigned int v1 = (void *)sub_26087B1D0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithProperties_, v1);

  return v2;
}

id sub_26083507C()
{
  return sub_2608350A0();
}

id sub_2608350A0()
{
  return objc_msgSend(v0, sel_service);
}

Swift::UInt64 sub_2608350B0()
{
  return HIDUserDevice.serviceID()();
}

id sub_2608350D4()
{
  return sub_2608350F8();
}

id sub_2608350F8()
{
  return objc_msgSend(v0, sel_activate);
}

id sub_260835108()
{
  return sub_26083512C();
}

id sub_26083512C()
{
  return objc_msgSend(v0, sel_cancel);
}

double sub_26083513C@<D0>(_OWORD *a1@<X8>)
{
  return sub_260835160(a1);
}

double sub_260835160@<D0>(_OWORD *a1@<X8>)
{
  unint64_t v3 = (void *)sub_26087B2A0();
  id v4 = objc_msgSend(v1, sel_propertyForKey_, v3);

  if (v4)
  {
    sub_26087B730();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

unint64_t sub_2608351F0(uint64_t a1)
{
  return (unint64_t)sub_260835218(a1) & 1;
}

id sub_260835218(uint64_t a1)
{
  sub_260835910(a1, (uint64_t)v11);
  uint64_t v2 = v12;
  if (v12)
  {
    unint64_t v3 = __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v4 = *(void *)(v2 - 8);
    MEMORY[0x270FA5388](v3);
    uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    uint64_t v7 = sub_26087BBD0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v7 = 0;
  }
  BOOL v8 = (void *)sub_26087B2A0();
  id v9 = objc_msgSend(v1, sel_setProperty_forKey_, v7, v8);
  swift_unknownObjectRelease();

  return v9;
}

uint64_t sub_260835380(uint64_t a1, uint64_t a2)
{
  return sub_2608353A4(a1, a2);
}

uint64_t sub_2608353A4(uint64_t a1, uint64_t a2)
{
  v5[4] = a1;
  _OWORD v5[5] = a2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_2608045D0;
  v5[3] = &block_descriptor_6_1;
  unint64_t v3 = _Block_copy(v5);
  swift_retain();
  objc_msgSend(v2, sel_setCancelHandler_, v3);
  _Block_release(v3);
  return swift_release();
}

id sub_260835454(uint64_t a1)
{
  return sub_260835478(a1);
}

id sub_260835478(uint64_t a1)
{
  return objc_msgSend(v1, sel_setDispatchQueue_, a1);
}

uint64_t sub_26083548C(uint64_t a1, uint64_t a2)
{
  return sub_2608354B0(a1, a2);
}

uint64_t sub_2608354B0(uint64_t a1, uint64_t a2)
{
  v5[4] = a1;
  _OWORD v5[5] = a2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_260835560;
  v5[3] = &block_descriptor_3;
  unint64_t v3 = _Block_copy(v5);
  swift_retain();
  objc_msgSend(v2, sel_setGetReportHandler_, v3);
  _Block_release(v3);
  return swift_release();
}

uint64_t sub_260835560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_260835644(a1, a2, a3, a4, a5);
}

uint64_t sub_260835568(uint64_t a1, uint64_t a2)
{
  return sub_26083558C(a1, a2);
}

uint64_t sub_26083558C(uint64_t a1, uint64_t a2)
{
  v5[4] = a1;
  _OWORD v5[5] = a2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_26083563C;
  v5[3] = &block_descriptor_1;
  unint64_t v3 = _Block_copy(v5);
  swift_retain();
  objc_msgSend(v2, sel_setSetReportHandler_, v3);
  _Block_release(v3);
  return swift_release();
}

uint64_t sub_26083563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_260835644(a1, a2, a3, a4, a5);
}

uint64_t sub_260835644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v10 = v9(a2, a3, a4, a5);
  swift_release();
  return v10;
}

id sub_2608356C0(uint64_t a1, unint64_t a2)
{
  return HIDUserDevice.handleReport(_:)(a1, a2);
}

id sub_2608356E4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return HIDUserDevice.handleReport(_:timestamp:)(a1, a2, a3);
}

id sub_260835708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_26087B2A0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    BOOL v8 = (void *)sub_26087B1D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v8 = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.init(properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.service.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.serviceID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.property(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setProperty(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setCancelHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setDispatchQueue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setGetReportHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.setSetReportHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.handleReport(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of HIDUserDeviceProtocol.handleReport(_:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_260835910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260835990()
{
  OUTLINED_FUNCTION_18_2();
  sub_26083772C(v1, v2);
  OUTLINED_FUNCTION_0_21();
  return v0;
}

uint64_t sub_2608359C4()
{
  OUTLINED_FUNCTION_18_2();
  sub_2608378E0(v1, v2);
  OUTLINED_FUNCTION_0_21();
  return v0;
}

uint64_t sub_2608359F8()
{
  OUTLINED_FUNCTION_18_2();
  sub_260837C90(v1, v2);
  OUTLINED_FUNCTION_0_21();
  return v0;
}

void *sub_260835A2C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_260837E48(a1, a2);
  sub_2607DCF28(a1, a2);
  return v4;
}

uint64_t sub_260835A70()
{
  OUTLINED_FUNCTION_18_2();
  sub_260838210();
  OUTLINED_FUNCTION_0_21();
  return v0;
}

uint64_t sub_260835AA4()
{
  OUTLINED_FUNCTION_18_2();
  sub_2608383F4(v1, v2);
  OUTLINED_FUNCTION_0_21();
  return v0;
}

uint64_t sub_260835AD8@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  OUTLINED_FUNCTION_41_1(a1, a2, a3);
  uint64_t result = sub_2607DCED0(v4, v3);
  uint64_t v6 = 0;
  for (unint64_t i = 0; ; ++i)
  {
    if ((i - 0x1000000000000000) >> 61 != 7)
    {
      __break(1u);
LABEL_13:
      __break(1u);
      return result;
    }
    uint64_t result = v6 + 8;
    if (__OFADD__(v6, 8)) {
      goto LABEL_13;
    }
    uint64_t result = sub_2607DB19C(result, v4, v3);
    if ((result - 3) >= 3u) {
      break;
    }
    uint64_t result = AppleVendorTopCaseReport.update(with:)(result);
    if (i >= 3) {
      goto LABEL_9;
    }
LABEL_8:
    v6 += 8;
  }
  if (i <= 2) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v8 = OUTLINED_FUNCTION_31_0();
  return sub_2607DCF28(v8, v9);
}

uint64_t sub_260835B94@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a3;
  a5[1] = a4;
  sub_2607DCED0(a1, a2);
  sub_2607DCED0(a3, a4);
  return sub_2607FE3EC(a5, a1, a2);
}

uint64_t sub_260835C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_260835CCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_260835DDC, a5);
}

#error "260835C68: call analysis failed (funcsize=44)"

uint64_t sub_260835CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t (*a5)(uint64_t, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  *a6 = a3;
  a6[1] = a4;
  sub_2607DCED0(a3, a4);
  return a5(a1, a2);
}

uint64_t sub_260835D24(uint64_t a1, unint64_t a2)
{
  uint64_t result = sub_2607DCED0(a1, a2);
  uint64_t v5 = 0;
  for (unint64_t i = 0; ; ++i)
  {
    if ((i - 0x1000000000000000) >> 61 != 7)
    {
      __break(1u);
LABEL_13:
      __break(1u);
      return result;
    }
    uint64_t result = v5 + 8;
    if (__OFADD__(v5, 8)) {
      goto LABEL_13;
    }
    uint64_t result = sub_2607DB19C(result, a1, a2);
    if ((result - 3) >= 3u) {
      break;
    }
    uint64_t result = AppleVendorTopCaseReport.update(with:)(result);
    if (i >= 3) {
      goto LABEL_9;
    }
LABEL_8:
    v5 += 8;
  }
  if (i <= 2) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v7 = OUTLINED_FUNCTION_31_0();
  return sub_2607DCF28(v7, v8);
}

uint64_t sub_260835DDC(uint64_t a1, unint64_t a2)
{
  sub_2607DCED0(a1, a2);
  uint64_t v4 = 0;
  do
  {
    while (1)
    {
      unint64_t v5 = sub_2607DB19C(8 * v4 + 8, a1, a2);
      if ((v5 - 49) > 0xCFu && v5 <= 0x21u && ((1 << v5) & 0x30003001ELL) != 0) {
        break;
      }
      BOOL v6 = v4 < 1;
      uint64_t v4 = 1;
      if (!v6) {
        goto LABEL_10;
      }
    }
    AppleVendorKeyboardReport.update(with:)(v5);
    BOOL v6 = v4++ < 1;
  }
  while (v6);
LABEL_10:
  uint64_t v8 = OUTLINED_FUNCTION_31_0();
  return sub_2607DCF28(v8, v9);
}

#error "260835EF0: call analysis failed (funcsize=43)"

uint64_t sub_260835F54(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v39 = *MEMORY[0x263EF8340];
  unint64_t v7 = a2 >> 62;
  sub_2607DCED0(a1, a2);
  uint64_t v6 = 0;
  uint64_t v29 = BYTE6(a2);
  unint64_t v28 = a2 >> 8;
  unint64_t v26 = a2 >> 24;
  unint64_t v27 = a2 >> 16;
  unint64_t v24 = a2 >> 40;
  unint64_t v25 = HIDWORD(a2);
  unint64_t v7 = v7;
  unint64_t v30 = a2;
  unint64_t v31 = v7;
  while (2)
  {
    uint64_t v8 = 0;
    switch(v7)
    {
      case 1uLL:
        uint64_t v8 = (int)a1;
        break;
      case 2uLL:
        uint64_t v8 = *(void *)(a1 + 16);
        break;
      default:
        break;
    }
    uint64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
    }
    switch(v7)
    {
      case 1uLL:
        BOOL v11 = v9 >= (int)a1 && v9 < a1 >> 32;
        if (!v11) {
          goto LABEL_42;
        }
        uint64_t v12 = sub_26087AED0();
        if (!v12) {
          goto LABEL_48;
        }
        uint64_t v13 = v12;
        uint64_t v14 = sub_26087AEF0();
        uint64_t v15 = v9 - v14;
        if (!__OFSUB__(v9, v14)) {
          goto LABEL_22;
        }
        goto LABEL_44;
      case 2uLL:
        if (v9 < *(void *)(a1 + 16)) {
          goto LABEL_43;
        }
        if (v9 >= *(void *)(a1 + 24)) {
          goto LABEL_45;
        }
        uint64_t v16 = sub_26087AED0();
        if (!v16) {
          goto LABEL_49;
        }
        uint64_t v13 = v16;
        uint64_t v17 = sub_26087AEF0();
        uint64_t v15 = v9 - v17;
        if (__OFSUB__(v9, v17)) {
          goto LABEL_46;
        }
LABEL_22:
        int v10 = *(unsigned __int8 *)(v13 + v15);
LABEL_23:
        if ((v10 & (1 << (v6 & 7))) == 0)
        {
          if (++v6 > 2) {
            goto LABEL_35;
          }
          continue;
        }
        uint64_t v18 = *v3;
        unint64_t v19 = v3;
        uint64_t v20 = v3[1] >> 62;
        uint64_t v21 = 0;
        switch(v20)
        {
          case 1:
            uint64_t v21 = (int)v18;
            break;
          case 2:
            uint64_t v21 = *(void *)(v18 + 16);
            break;
          default:
            break;
        }
        if (__OFADD__(v21, 1)) {
          goto LABEL_39;
        }
        HIDReport.mask(for:)(v6 + 8);
        sub_26087B080();
        uint64_t v22 = 0;
        switch((int)v20)
        {
          case 1:
            uint64_t v22 = (int)v18;
            break;
          case 2:
            uint64_t v22 = *(void *)(v18 + 16);
            break;
          default:
            break;
        }
        if (__OFADD__(v22, 1)) {
          goto LABEL_40;
        }
        HIDReport.mask(for:)(v6 + 8);
        sub_26087B080();
        unint64_t v3 = v19;
        sub_26087AFD0();
        BOOL v11 = v6++ <= 1;
        unint64_t v7 = v31;
        if (v11) {
          continue;
        }
LABEL_35:
        return sub_2607DCF28(a1, v30);
      case 3uLL:
        goto LABEL_47;
      default:
        if (v9 >= v29) {
          goto LABEL_41;
        }
        uint64_t v32 = a1;
        char v33 = v30;
        char v34 = v28;
        char v35 = v27;
        char v36 = v26;
        char v37 = v25;
        char v38 = v24;
        int v10 = *((unsigned __int8 *)&v32 + v9);
        goto LABEL_23;
    }
  }
}

uint64_t static ButtonReport.initialReportBitCount.getter()
{
  return 16;
}

uint64_t static ButtonReport.reportID.getter()
{
  return 6;
}

uint64_t sub_260836354()
{
  uint64_t result = sub_260836378();
  *(void *)&xmmword_26A8B4D68 = result;
  *((void *)&xmmword_26A8B4D68 + 1) = v1;
  return result;
}

uint64_t sub_260836378()
{
  LOBYTE(v15) = 17;
  uint64_t v0 = sub_2608155C0((char *)&v15, 1uLL);
  unint64_t v2 = v1;
  LOBYTE(v15) = 3;
  uint64_t v15 = sub_260815298((char *)&v15, 0);
  unint64_t v16 = v3;
  uint64_t v4 = sub_2608364D8();
  unint64_t v6 = v5;
  sub_26087B050();
  sub_2607DCF28(v4, v6);
  uint64_t v7 = sub_2607E6724((uint64_t)&unk_270C9DF78);
  unint64_t v9 = v8;
  sub_26087B050();
  sub_2607DCF28(v7, v9);
  uint64_t v10 = v15;
  unint64_t v11 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087EEC0;
  *(void *)(inited + 56) = &type metadata for Usage;
  *(void *)(inited + 64) = &protocol witness table for Usage;
  *(void *)(inited + 32) = v0;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 96) = &type metadata for PhysicalCollection;
  *(void *)(inited + 104) = &protocol witness table for PhysicalCollection;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  sub_2607DCED0(v0, v2);
  sub_2607DCED0(v10, v11);
  uint64_t v13 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v10, v11);
  sub_2607DCF28(v0, v2);
  return v13;
}

uint64_t sub_2608364D8()
{
  LOBYTE(v47) = 5;
  uint64_t v0 = sub_2608155C0((char *)&v47, 9uLL);
  unint64_t v37 = v1;
  uint64_t v38 = v0;
  LOBYTE(v47) = 18;
  uint64_t v2 = sub_2608155C0((char *)&v47, 0);
  unint64_t v36 = v3;
  LOBYTE(v47) = 19;
  uint64_t v4 = sub_2608155C0((char *)&v47, 2uLL);
  unint64_t v6 = v5;
  LOBYTE(v47) = 6;
  uint64_t v7 = sub_260815298((char *)&v47, 0);
  unint64_t v9 = v8;
  unint64_t v31 = v8;
  LOBYTE(v47) = 7;
  uint64_t v33 = sub_260815298((char *)&v47, 1);
  unint64_t v11 = v10;
  unint64_t v30 = v10;
  LOBYTE(v47) = 14;
  uint64_t v32 = sub_260815298((char *)&v47, 3);
  unint64_t v41 = v12;
  LOBYTE(v47) = 12;
  uint64_t v13 = sub_2608155C0((char *)&v47, 1uLL);
  unint64_t v39 = v14;
  uint64_t v40 = v13;
  LOBYTE(v42[0]) = 0;
  unsigned __int8 v46 = 1;
  __int16 v45 = 0;
  __int16 v44 = 0;
  HIBYTE(v43) = 0;
  Input.init(_:_:_:_:_:_:_:_:)((unsigned __int8 *)v42, &v46, (unsigned char *)&v45 + 1, &v45, (unsigned char *)&v44 + 1, &v44, (unsigned char *)&v43 + 1, &v47);
  LOBYTE(v42[0]) = 14;
  uint64_t v15 = sub_260815298((char *)v42, 1);
  unint64_t v34 = v16;
  uint64_t v35 = v15;
  LOBYTE(v42[0]) = 12;
  uint64_t v17 = sub_2608155C0((char *)v42, 5uLL);
  unint64_t v27 = v18;
  uint64_t v28 = v17;
  unint64_t v19 = v18;
  unsigned __int8 v46 = 1;
  __int16 v45 = 0;
  __int16 v44 = 0;
  __int16 v43 = 0;
  Input.init(_:_:_:_:_:_:_:_:)(&v46, (unsigned char *)&v45 + 1, &v45, (unsigned char *)&v44 + 1, &v44, (unsigned char *)&v43 + 1, &v43, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260880410;
  *(void *)(inited + 56) = &type metadata for ReportID;
  *(void *)(inited + 64) = &protocol witness table for ReportID;
  *(unsigned char *)(inited + 32) = 6;
  *(void *)(inited + 96) = &type metadata for UsagePage;
  *(void *)(inited + 104) = &protocol witness table for UsagePage;
  *(void *)(inited + 72) = v38;
  *(void *)(inited + 80) = v37;
  *(void *)(inited + 136) = &type metadata for UsageMinimum;
  *(void *)(inited + 144) = &protocol witness table for UsageMinimum;
  *(void *)(inited + 112) = v2;
  *(void *)(inited + 120) = v36;
  *(void *)(inited + 176) = &type metadata for UsageMaximum;
  *(void *)(inited + 184) = &protocol witness table for UsageMaximum;
  *(void *)(inited + 152) = v4;
  *(void *)(inited + 160) = v6;
  *(void *)(inited + 216) = &type metadata for LogicalMinimum;
  *(void *)(inited + 224) = &protocol witness table for LogicalMinimum;
  *(void *)(inited + 192) = v7;
  *(void *)(inited + 200) = v9;
  *(void *)(inited + 256) = &type metadata for LogicalMaximum;
  *(void *)(inited + 264) = &protocol witness table for LogicalMaximum;
  *(void *)(inited + 232) = v33;
  *(void *)(inited + 240) = v11;
  *(void *)(inited + 296) = &type metadata for ReportCount;
  *(void *)(inited + 304) = &protocol witness table for ReportCount;
  *(void *)(inited + 272) = v32;
  *(void *)(inited + 280) = v41;
  *(void *)(inited + 336) = &type metadata for ReportSize;
  *(void *)(inited + 344) = &protocol witness table for ReportSize;
  *(void *)(inited + 312) = v40;
  *(void *)(inited + 320) = v39;
  unint64_t v25 = v48;
  unint64_t v21 = v48;
  uint64_t v26 = v47;
  *(void *)(inited + 376) = &type metadata for Input;
  *(void *)(inited + 384) = &protocol witness table for Input;
  *(void *)(inited + 352) = v26;
  *(void *)(inited + 360) = v21;
  *(void *)(inited + 416) = &type metadata for ReportCount;
  *(void *)(inited + 424) = &protocol witness table for ReportCount;
  *(void *)(inited + 392) = v35;
  *(void *)(inited + 400) = v34;
  *(void *)(inited + 456) = &type metadata for ReportSize;
  *(void *)(inited + 464) = &protocol witness table for ReportSize;
  *(void *)(inited + 432) = v17;
  *(void *)(inited + 440) = v19;
  uint64_t v23 = v42[0];
  unint64_t v22 = v42[1];
  *(void *)(inited + 496) = &type metadata for Input;
  *(void *)(inited + 504) = &protocol witness table for Input;
  *(void *)(inited + 472) = v23;
  *(void *)(inited + 480) = v22;
  sub_2607DCED0(v38, v37);
  sub_2607DCED0(v2, v36);
  sub_2607DCED0(v4, v6);
  sub_2607DCED0(v7, v31);
  sub_2607DCED0(v33, v30);
  sub_2607DCED0(v32, v41);
  sub_2607DCED0(v40, v39);
  sub_2607DCED0(v26, v25);
  sub_2607DCED0(v35, v34);
  sub_2607DCED0(v28, v27);
  sub_2607DCED0(v23, v22);
  uint64_t v29 = static HIDReportDescriptor.Builder.buildBlock(_:)(inited);
  swift_setDeallocating();
  sub_2608374F8();
  sub_2607DCF28(v23, v22);
  sub_2607DCF28(v28, v27);
  sub_2607DCF28(v35, v34);
  sub_2607DCF28(v26, v25);
  sub_2607DCF28(v40, v39);
  sub_2607DCF28(v32, v41);
  sub_2607DCF28(v33, v30);
  sub_2607DCF28(v7, v31);
  sub_2607DCF28(v4, v6);
  sub_2607DCF28(v2, v36);
  sub_2607DCF28(v38, v37);
  return v29;
}

uint64_t static ButtonReport.descriptor.getter@<X0>(_OWORD *a1@<X8>)
{
  if (qword_26A8B4540 != -1) {
    swift_once();
  }
  long long v2 = xmmword_26A8B4D68;
  *a1 = xmmword_26A8B4D68;
  return sub_2607DCED0(v2, *((unint64_t *)&v2 + 1));
}

uint64_t ButtonReport.report.getter()
{
  OUTLINED_FUNCTION_18_2();
  sub_2607DCED0(v1, v2);
  return v0;
}

uint64_t ButtonReport.report.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ButtonReport.report.modify())()
{
  return nullsub_1;
}

uint64_t ButtonReport.init(_:)()
{
  if (qword_26A8B4540 != -1) {
    goto LABEL_9;
  }
  while (1)
  {
    uint64_t v0 = HIDReportDescriptor.reportBitCount(for:)(6u);
    uint64_t v1 = HIDReport.init(bitCount:id:)(v0, 6);
    uint64_t v7 = v1;
    uint64_t v3 = 0;
    switch(v2 >> 62)
    {
      case 1uLL:
        uint64_t v5 = (int)v1;
        goto LABEL_7;
      case 2uLL:
        uint64_t v5 = *(void *)(v1 + 16);
LABEL_7:
        if ((unint64_t)(v5 - 0x1000000000000000) >> 61 == 7) {
          goto LABEL_11;
        }
        __break(1u);
        break;
      default:
        while (1)
        {
          BOOL v4 = __OFADD__(v3, 8);
          uint64_t v5 = v3 + 8;
          if (!v4) {
            break;
          }
          __break(1u);
LABEL_11:
          uint64_t v3 = 8 * v5;
        }
        sub_26087AFD0();
        return v7;
    }
LABEL_9:
    swift_once();
  }
}

uint64_t ButtonReport.buttons.setter(char a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(a1 & 7, 8);
}

uint64_t ButtonReport.init(_:)(unsigned __int8 a1)
{
  if (qword_26A8B4540 != -1) {
    swift_once();
  }
  uint64_t v2 = HIDReportDescriptor.reportBitCount(for:)(6u);
  uint64_t v5 = HIDReport.init(bitCount:id:)(v2, 6);
  Swift::Int v3 = a1 + 8;
  HIDReport.offset(for:)(v3);
  OUTLINED_FUNCTION_9_14();
  sub_26087B080();
  HIDReport.offset(for:)(v3);
  OUTLINED_FUNCTION_9_14();
  sub_26087B080();
  sub_26087AFD0();
  return v5;
}

uint64_t ButtonReport.update(with:)(unsigned __int8 a1)
{
  Swift::Int v2 = a1 + 8;
  HIDReport.offset(for:)(v2);
  char v3 = OUTLINED_FUNCTION_10_5();
  char v4 = sub_26087B080() & v3;
  HIDReport.offset(for:)(v2);
  OUTLINED_FUNCTION_10_5();
  sub_26087B080();
  sub_26087AFD0();
  if (v4) {
    unsigned __int8 v5 = a1;
  }
  else {
    unsigned __int8 v5 = 0;
  }
  return v5 | ((v4 == 0) << 8);
}

uint64_t ButtonReport.index(for:)(unsigned __int8 a1)
{
  return a1 + 8;
}

uint64_t sub_260836CCC()
{
  uint64_t v0 = OUTLINED_FUNCTION_75();
  sub_2607DCED0(v0, v1);
  return OUTLINED_FUNCTION_75();
}

uint64_t sub_260836CF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ButtonReport.init(_report:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_260836D20()
{
  return sub_26087590C(*(void *)v0, *(void *)(v0 + 8));
}

unint64_t ButtonReport.buttons.getter(uint64_t a1, unint64_t a2)
{
  return sub_2607DB19C(8, a1, a2) & 7;
}

unint64_t sub_260836D50@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = ButtonReport.buttons.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t (*ButtonReport.buttons.modify(unint64_t *a1))(unsigned char *a1)
{
  a1[1] = v1;
  *a1 = sub_2607DB19C(8, *(void *)v1, *(void *)(v1 + 8)) & 7;
  return sub_260836DD4;
}

uint64_t sub_260836DD4(unsigned char *a1)
{
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(*a1 & 7, 8);
}

void sub_260836E08(void *a1, void *a2)
{
  static ButtonReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t ButtonReport.makeIterator()@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  return sub_2607DCED0(a1, a2);
}

uint64_t ButtonReport.Iterator.next()()
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[2];
  int v2 = 1;
  if (v1 <= 2)
  {
    while (v1 < 0)
    {
LABEL_26:
      v0[2] = ++v1;
      if (v1 == 3)
      {
        LOBYTE(v1) = 0;
        int v2 = 1;
        return v1 | (v2 << 8);
      }
    }
    uint64_t v4 = *v0;
    unint64_t v3 = v0[1];
    uint64_t v5 = 0;
    switch(v3 >> 62)
    {
      case 1uLL:
        uint64_t v5 = (int)v4;
        break;
      case 2uLL:
        uint64_t v5 = *(void *)(v4 + 16);
        break;
      default:
        break;
    }
    uint64_t v6 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
    }
    switch(v3 >> 62)
    {
      case 1uLL:
        if (v6 < (int)v4 || v6 >= v4 >> 32) {
          goto LABEL_32;
        }
        uint64_t v9 = sub_26087AED0();
        if (!v9) {
          goto LABEL_38;
        }
        uint64_t v10 = v9;
        uint64_t v11 = sub_26087AEF0();
        uint64_t v12 = v6 - v11;
        if (!__OFSUB__(v6, v11)) {
          goto LABEL_24;
        }
        goto LABEL_34;
      case 2uLL:
        if (v6 < *(void *)(v4 + 16)) {
          goto LABEL_33;
        }
        if (v6 >= *(void *)(v4 + 24)) {
          goto LABEL_35;
        }
        uint64_t v13 = sub_26087AED0();
        if (!v13) {
          goto LABEL_39;
        }
        uint64_t v10 = v13;
        uint64_t v14 = sub_26087AEF0();
        uint64_t v12 = v6 - v14;
        if (__OFSUB__(v6, v14)) {
          goto LABEL_36;
        }
LABEL_24:
        int v7 = *(unsigned __int8 *)(v10 + v12);
LABEL_25:
        if ((v7 & (1 << (v1 & 7))) == 0) {
          goto LABEL_26;
        }
        int v2 = 0;
        v0[2] = v1 + 1;
        break;
      case 3uLL:
        goto LABEL_37;
      default:
        if (v6 >= BYTE6(v3)) {
          goto LABEL_31;
        }
        __int16 v16 = *v0;
        char v17 = BYTE2(v4);
        char v18 = BYTE3(v4);
        char v19 = BYTE4(v4);
        char v20 = BYTE5(v4);
        char v21 = BYTE6(v4);
        char v22 = HIBYTE(v4);
        __int16 v23 = v3;
        char v24 = BYTE2(v3);
        char v25 = BYTE3(v3);
        char v26 = BYTE4(v3);
        char v27 = BYTE5(v3);
        int v7 = *((unsigned __int8 *)&v16 + v6);
        goto LABEL_25;
    }
  }
  else
  {
    LOBYTE(v1) = 0;
  }
  return v1 | (v2 << 8);
}

uint64_t sub_260837088()
{
  uint64_t v0 = ButtonReport.Iterator.next()();
  return OUTLINED_FUNCTION_2_0(v0);
}

uint64_t sub_2608370B0()
{
  uint64_t v0 = OUTLINED_FUNCTION_75();
  ButtonReport.makeIterator()(v0, v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_75();
  return sub_2607DCF28(v3, v4);
}

uint64_t sub_2608370EC()
{
  return OUTLINED_FUNCTION_3();
}

void *sub_2608370F4()
{
  return sub_260835A2C(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_2608370FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26083E310(a1, a2, a3, *v3, v3[1]);
}

uint64_t ButtonReport.remove(_:)(unsigned __int8 a1)
{
  unsigned __int8 v1 = a1;
  Swift::Int v2 = a1 + 8;
  HIDReport.offset(for:)(v2);
  char v3 = OUTLINED_FUNCTION_9_5();
  char v4 = sub_26087B080() & v3;
  if (v4)
  {
    HIDReport.offset(for:)(v2);
    OUTLINED_FUNCTION_9_5();
    sub_26087B080();
    sub_26087AFD0();
  }
  else
  {
    unsigned __int8 v1 = 0;
  }
  return v1 | ((v4 == 0) << 8);
}

uint64_t sub_2608371D0(char *a1)
{
  return sub_260853748(*a1, *v1, v1[1]);
}

uint64_t sub_2608371DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v6 = *v2;
  unint64_t v5 = v2[1];
  sub_260835CCC(*a1, v4, v6, v5, (uint64_t (*)(uint64_t, uint64_t))sub_260835F54, a2);
  sub_2607DCF28(v6, v5);
  return sub_2607DCF28(v3, v4);
}

uint64_t sub_260837254(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2608373DC(a1, a2, a3, (void (*)(void, void, void, void))sub_26082CF1C);
}

uint64_t sub_26083726C()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  uint64_t v3 = OUTLINED_FUNCTION_1_8();
  sub_26082D148(v3, v4, v2, v1, v5);
  sub_2607DCF28(v2, v1);
  uint64_t v6 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v6, v7);
}

uint64_t sub_2608372C8(uint64_t a1, unsigned __int8 *a2)
{
  return sub_260876BA0(a1, *a2);
}

uint64_t sub_2608372D0(unsigned __int8 *a1)
{
  uint64_t v1 = ButtonReport.remove(_:)(*a1);
  return OUTLINED_FUNCTION_2_0(v1);
}

uint64_t sub_2608372FC(unsigned __int8 *a1)
{
  uint64_t v1 = ButtonReport.update(with:)(*a1);
  return OUTLINED_FUNCTION_2_0(v1);
}

uint64_t sub_260837328(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_260835F54(*a1, v2);
  return sub_2607DCF28(v1, v2);
}

uint64_t sub_260837374(uint64_t a1)
{
  return sub_26082D364(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_260837380()
{
  uint64_t v0 = OUTLINED_FUNCTION_1_8();
  sub_26082DA80(v0, v1);
  uint64_t v2 = OUTLINED_FUNCTION_1_8();
  return sub_2607DCF28(v2, v3);
}

uint64_t sub_2608373C4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2608373DC(a1, a2, a3, (void (*)(void, void, void, void))sub_260875D30);
}

uint64_t sub_2608373DC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void, void))
{
  a4(*a1, a1[1], *v4, v4[1]);
  uint64_t v5 = OUTLINED_FUNCTION_75();
  return sub_2607DCF28(v5, v6);
}

void sub_26083742C()
{
}

uint64_t sub_26083743C(uint64_t *a1)
{
  return sub_2608761F8(*a1, a1[1], *(void *)v1, *(void *)(v1 + 8));
}

void sub_26083744C()
{
}

uint64_t sub_26083745C()
{
  return sub_2607E836C();
}

void sub_260837464()
{
  sub_2608376E0();
  EventReportProtocol<>.init<A>(_:)();
}

uint64_t sub_2608374E8()
{
  return sub_26082CC08();
}

uint64_t sub_2608374F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B49C0);
  OUTLINED_FUNCTION_1_8();
  swift_arrayDestroy();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

unint64_t sub_26083755C()
{
  unint64_t result = qword_26A8B4D78;
  if (!qword_26A8B4D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D78);
  }
  return result;
}

unint64_t sub_2608375AC()
{
  unint64_t result = qword_26A8B4D80;
  if (!qword_26A8B4D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D80);
  }
  return result;
}

unint64_t sub_2608375FC()
{
  unint64_t result = qword_26A8B4D88;
  if (!qword_26A8B4D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D88);
  }
  return result;
}

uint64_t sub_26083764C(void *a1)
{
  return ButtonReport.buttons.setter(*a1);
}

ValueMetadata *type metadata accessor for ButtonReport()
{
  return &type metadata for ButtonReport;
}

uint64_t *sub_260837688()
{
  OUTLINED_FUNCTION_18_2();
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  sub_2607DCED0(*v2, v4);
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = *(void *)(v0 + 16);
  return v1;
}

ValueMetadata *type metadata accessor for ButtonReport.Iterator()
{
  return &type metadata for ButtonReport.Iterator;
}

unint64_t sub_2608376E0()
{
  unint64_t result = qword_26A8B4D90;
  if (!qword_26A8B4D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4D90);
  }
  return result;
}

uint64_t sub_26083772C(uint64_t a1, unint64_t a2)
{
  uint64_t result = sub_2607DCED0(a1, a2);
  uint64_t v5 = 0;
  size_t v6 = 0;
  unint64_t v7 = (void *)MEMORY[0x263F8EE78];
  unint64_t v8 = (unsigned char *)(MEMORY[0x263F8EE78] + 32);
  while (2)
  {
    uint64_t v9 = 8 * v5;
    while (1)
    {
      if ((unint64_t)(v5 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      uint64_t result = v9 + 8;
      if (__OFADD__(v9, 8)) {
        goto LABEL_29;
      }
      uint64_t result = sub_2607DB19C(result, a1, a2);
      uint64_t v10 = v5 + 1;
      if ((result - 3) < 3u) {
        break;
      }
      v9 += 8;
      ++v5;
      if (v10 - 1 >= 3) {
        goto LABEL_24;
      }
    }
    char v11 = result;
    if (v6) {
      goto LABEL_22;
    }
    unint64_t v12 = v7[3];
    if ((uint64_t)((v12 >> 1) + 0x4000000000000000) >= 0)
    {
      int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1) {
        uint64_t v14 = 1;
      }
      else {
        uint64_t v14 = v13;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DB0);
      uint64_t v15 = (void *)swift_allocObject();
      size_t v16 = 2 * _swift_stdlib_malloc_size(v15) - 64;
      void v15[2] = v14;
      v15[3] = v16;
      unint64_t v17 = (unint64_t)(v15 + 4);
      unint64_t v18 = v7[3];
      if (v7[2])
      {
        if (v15 != v7 || v17 >= (unint64_t)v7 + (v18 >> 1) + 32)
        {
          size_t v25 = v16;
          memmove(v15 + 4, v7 + 4, v18 >> 1);
          size_t v16 = v25;
        }
        uint64_t v7[2] = 0;
      }
      unint64_t v8 = (unsigned char *)(v17 + (v18 >> 1));
      size_t v6 = (v16 >> 1) - (v18 >> 1);
      uint64_t result = swift_release();
      unint64_t v7 = v15;
LABEL_22:
      BOOL v20 = __OFSUB__(v6--, 1);
      if (!v20)
      {
        *v8++ = v11;
        if (v5++ < 3) {
          continue;
        }
LABEL_24:
        uint64_t result = sub_2607DCF28(a1, a2);
        unint64_t v22 = v7[3];
        if (v22 < 2) {
          return (uint64_t)v7;
        }
        unint64_t v23 = v22 >> 1;
        BOOL v20 = __OFSUB__(v23, v6);
        unint64_t v24 = v23 - v6;
        if (!v20)
        {
          uint64_t v7[2] = v24;
          return (uint64_t)v7;
        }
        goto LABEL_31;
      }
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
    }
    break;
  }
  __break(1u);
  return result;
}

void *sub_2608378E0(uint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  unint64_t v4 = a2 >> 62;
  sub_2607DCED0(a1, a2);
  size_t v36 = 0;
  uint64_t v35 = (void *)MEMORY[0x263F8EE78];
  unint64_t v34 = (unsigned char *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v5 = 1;
  uint64_t v6 = v4;
  do
  {
    if ((unint64_t)(v5 - 256) > 0xFFFFFFFFFFFFFF00)
    {
      unint64_t v7 = v5 + 8;
      uint64_t v8 = 0;
      switch(v6)
      {
        case 1:
          uint64_t v8 = (int)a1;
          break;
        case 2:
          uint64_t v8 = *(void *)(a1 + 16);
          break;
        default:
          break;
      }
      uint64_t v9 = v8 + (v7 >> 3);
      if (__OFADD__(v8, v7 >> 3))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      switch(v6)
      {
        case 1:
          BOOL v11 = v9 >= (int)a1 && v9 < a1 >> 32;
          if (!v11) {
            goto LABEL_49;
          }
          uint64_t v12 = sub_26087AED0();
          if (!v12) {
            goto LABEL_58;
          }
          uint64_t v13 = v12;
          uint64_t v14 = sub_26087AEF0();
          uint64_t v15 = v9 - v14;
          if (!__OFSUB__(v9, v14)) {
            goto LABEL_23;
          }
          goto LABEL_51;
        case 2:
          if (v9 < *(void *)(a1 + 16)) {
            goto LABEL_50;
          }
          if (v9 >= *(void *)(a1 + 24)) {
            goto LABEL_52;
          }
          uint64_t v16 = sub_26087AED0();
          if (!v16) {
            goto LABEL_59;
          }
          uint64_t v13 = v16;
          uint64_t v17 = sub_26087AEF0();
          uint64_t v15 = v9 - v17;
          if (__OFSUB__(v9, v17)) {
            goto LABEL_53;
          }
LABEL_23:
          int v10 = *(unsigned __int8 *)(v13 + v15);
LABEL_24:
          if ((v10 & (1 << (v5 & 7))) == 0) {
            break;
          }
          size_t v18 = v36;
          if (v36) {
            goto LABEL_41;
          }
          unint64_t v19 = v35[3];
          if ((uint64_t)((v19 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_56;
          }
          int64_t v20 = v19 & 0xFFFFFFFFFFFFFFFELL;
          if (v20 <= 1) {
            uint64_t v21 = 1;
          }
          else {
            uint64_t v21 = v20;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4C68);
          unint64_t v22 = (void *)swift_allocObject();
          size_t v23 = 2 * _swift_stdlib_malloc_size(v22) - 64;
          void v22[2] = v21;
          v22[3] = v23;
          unint64_t v24 = (unint64_t)(v22 + 4);
          unint64_t v25 = v35[3];
          if (v35[2])
          {
            if (v22 != v35 || v24 >= (unint64_t)v35 + (v25 >> 1) + 32)
            {
              size_t v37 = v23;
              memmove(v22 + 4, v35 + 4, v25 >> 1);
              unint64_t v24 = (unint64_t)(v22 + 4);
              size_t v23 = v37;
            }
            v35[2] = 0;
          }
          unint64_t v34 = (unsigned char *)(v24 + (v25 >> 1));
          size_t v27 = (v23 >> 1) - (v25 >> 1);
          swift_release();
          size_t v18 = v27;
          uint64_t v35 = v22;
LABEL_41:
          BOOL v28 = __OFSUB__(v18, 1);
          size_t v29 = v18 - 1;
          if (v28) {
            goto LABEL_55;
          }
          size_t v36 = v29;
          *v34++ = v5;
          break;
        case 3:
          goto LABEL_57;
        default:
          if (v9 >= BYTE6(a2)) {
            goto LABEL_48;
          }
          uint64_t v38 = a1;
          __int16 v39 = a2;
          char v40 = BYTE2(a2);
          char v41 = BYTE3(a2);
          char v42 = BYTE4(a2);
          char v43 = BYTE5(a2);
          int v10 = *((unsigned __int8 *)&v38 + v9);
          goto LABEL_24;
      }
    }
    BOOL v11 = v5++ <= 230;
  }
  while (v11);
  sub_2607DCF28(a1, a2);
  uint64_t result = v35;
  unint64_t v31 = v35[3];
  if (v31 >= 2)
  {
    unint64_t v32 = v31 >> 1;
    BOOL v28 = __OFSUB__(v32, v36);
    unint64_t v33 = v32 - v36;
    if (v28)
    {
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
    }
    v35[2] = v33;
  }
  return result;
}

unint64_t sub_260837C90(uint64_t a1, unint64_t a2)
{
  sub_2607DCED0(a1, a2);
  uint64_t v4 = 0;
  size_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  unint64_t v7 = (unsigned char *)(MEMORY[0x263F8EE78] + 32);
  do
  {
    while (1)
    {
      unint64_t result = sub_2607DB19C(8 * v4 + 8, a1, a2);
      if ((result - 49) > 0xCFu)
      {
        char v9 = result;
        if (result <= 0x21u && ((1 << result) & 0x30003001ELL) != 0) {
          break;
        }
      }
      BOOL v11 = v4 < 1;
      uint64_t v4 = 1;
      if (!v11) {
        goto LABEL_26;
      }
    }
    if (!v5)
    {
      unint64_t v12 = v6[3];
      if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_31;
      }
      int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if (v13 <= 1) {
        uint64_t v14 = 1;
      }
      else {
        uint64_t v14 = v13;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4A98);
      uint64_t v15 = (void *)swift_allocObject();
      size_t v16 = 2 * _swift_stdlib_malloc_size(v15) - 64;
      void v15[2] = v14;
      v15[3] = v16;
      unint64_t v17 = (unint64_t)(v15 + 4);
      unint64_t v18 = v6[3];
      if (v6[2])
      {
        if (v15 != v6 || v17 >= (unint64_t)v6 + (v18 >> 1) + 32) {
          memmove(v15 + 4, v6 + 4, v18 >> 1);
        }
        uint64_t v6[2] = 0;
      }
      unint64_t v7 = (unsigned char *)(v17 + (v18 >> 1));
      size_t v5 = (v16 >> 1) - (v18 >> 1);
      unint64_t result = swift_release();
      uint64_t v6 = v15;
    }
    BOOL v20 = __OFSUB__(v5--, 1);
    if (v20)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    *v7++ = v9;
    BOOL v11 = v4++ < 1;
  }
  while (v11);
LABEL_26:
  unint64_t result = sub_2607DCF28(a1, a2);
  unint64_t v21 = v6[3];
  if (v21 < 2) {
    return (unint64_t)v6;
  }
  unint64_t v22 = v21 >> 1;
  BOOL v20 = __OFSUB__(v22, v5);
  unint64_t v23 = v22 - v5;
  if (!v20)
  {
    uint64_t v6[2] = v23;
    return (unint64_t)v6;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_260837E48(uint64_t a1, unint64_t a2)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  unint64_t v4 = a2 >> 62;
  sub_2607DCED0(a1, a2);
  uint64_t v5 = 0;
  size_t v35 = 0;
  unint64_t v33 = (void *)MEMORY[0x263F8EE78];
  unint64_t v34 = (unsigned char *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v6 = v4;
  while (2)
  {
    uint64_t v7 = 0;
    switch(v6)
    {
      case 1:
        uint64_t v7 = (int)a1;
        break;
      case 2:
        uint64_t v7 = *(void *)(a1 + 16);
        break;
      default:
        break;
    }
    uint64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    switch(v6)
    {
      case 1:
        BOOL v10 = v8 >= (int)a1 && v8 < a1 >> 32;
        if (!v10) {
          goto LABEL_48;
        }
        uint64_t v11 = sub_26087AED0();
        if (!v11) {
          goto LABEL_57;
        }
        uint64_t v12 = v11;
        uint64_t v13 = sub_26087AEF0();
        uint64_t v14 = v8 - v13;
        if (!__OFSUB__(v8, v13)) {
          goto LABEL_22;
        }
        goto LABEL_50;
      case 2:
        if (v8 < *(void *)(a1 + 16)) {
          goto LABEL_49;
        }
        if (v8 >= *(void *)(a1 + 24)) {
          goto LABEL_51;
        }
        uint64_t v15 = sub_26087AED0();
        if (!v15) {
          goto LABEL_58;
        }
        uint64_t v12 = v15;
        uint64_t v16 = sub_26087AEF0();
        uint64_t v14 = v8 - v16;
        if (__OFSUB__(v8, v16)) {
          goto LABEL_52;
        }
LABEL_22:
        int v9 = *(unsigned __int8 *)(v12 + v14);
LABEL_23:
        if ((v9 & (1 << (v5 & 7))) == 0)
        {
          if (++v5 > 2) {
            goto LABEL_42;
          }
          continue;
        }
        size_t v17 = v35;
        if (!v35)
        {
          unint64_t v18 = v33[3];
          if ((uint64_t)((v18 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_55;
          }
          int64_t v19 = v18 & 0xFFFFFFFFFFFFFFFELL;
          if (v19 <= 1) {
            uint64_t v20 = 1;
          }
          else {
            uint64_t v20 = v19;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4D98);
          unint64_t v21 = (void *)swift_allocObject();
          size_t v22 = 2 * _swift_stdlib_malloc_size(v21) - 64;
          void v21[2] = v20;
          v21[3] = v22;
          unint64_t v23 = (unint64_t)(v21 + 4);
          unint64_t v24 = v33[3];
          if (v33[2])
          {
            if (v21 != v33 || v23 >= (unint64_t)v33 + (v24 >> 1) + 32)
            {
              size_t v36 = v22;
              memmove(v21 + 4, v33 + 4, v24 >> 1);
              unint64_t v23 = (unint64_t)(v21 + 4);
              size_t v22 = v36;
            }
            v33[2] = 0;
          }
          unint64_t v34 = (unsigned char *)(v23 + (v24 >> 1));
          size_t v26 = (v22 >> 1) - (v24 >> 1);
          swift_release();
          size_t v17 = v26;
          unint64_t v33 = v21;
        }
        BOOL v27 = __OFSUB__(v17, 1);
        size_t v28 = v17 - 1;
        if (v27) {
          goto LABEL_53;
        }
        size_t v35 = v28;
        *v34++ = v5;
        BOOL v10 = v5++ <= 1;
        if (v10) {
          continue;
        }
LABEL_42:
        sub_2607DCF28(a1, a2);
        unint64_t result = v33;
        unint64_t v30 = v33[3];
        if (v30 < 2) {
          return result;
        }
        unint64_t v31 = v30 >> 1;
        BOOL v27 = __OFSUB__(v31, v35);
        unint64_t v32 = v31 - v35;
        if (v27)
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
        }
        v33[2] = v32;
        return result;
      case 3:
        goto LABEL_56;
      default:
        if (v8 >= BYTE6(a2)) {
          goto LABEL_47;
        }
        uint64_t v37 = a1;
        __int16 v38 = a2;
        char v39 = BYTE2(a2);
        char v40 = BYTE3(a2);
        char v41 = BYTE4(a2);
        char v42 = BYTE5(a2);
        int v9 = *((unsigned __int8 *)&v37 + v8);
        goto LABEL_23;
    }
  }
}

#error "260838284: call analysis failed (funcsize=120)"

void *sub_2608383F4(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  uint64_t v3 = a1;
  sub_2607DCED0(a1, a2);
  uint64_t v4 = 0;
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v44 = MEMORY[0x263F8EE78] + 32;
  while (2)
  {
    unint64_t v6 = v2 >> 62;
    uint64_t v7 = (int)v3;
    switch(v2 >> 62)
    {
      case 1uLL:
        uint64_t v8 = v3 >> 32;
        uint64_t v9 = (int)v3;
        goto LABEL_7;
      case 2uLL:
        uint64_t v9 = *(void *)(v3 + 16);
        uint64_t v8 = *(void *)(v3 + 24);
LABEL_7:
        if (v9 != v8) {
          goto LABEL_8;
        }
        goto LABEL_62;
      case 3uLL:
        goto LABEL_62;
      default:
        if ((v2 & 0xFF000000000000) != 0)
        {
LABEL_8:
          sub_2607DCED0(v3, v2);
          uint64_t v10 = sub_260807DEC(v3, v2);
          uint64_t v12 = 0;
          switch(v11 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v10), v10)) {
                goto LABEL_75;
              }
              uint64_t v12 = HIDWORD(v10) - (int)v10;
LABEL_13:
              if (v12 < 0) {
                goto LABEL_67;
              }
LABEL_14:
              unint64_t v46 = v11;
              uint64_t v45 = v10;
              if (v6)
              {
                if (v6 == 1)
                {
                  sub_2607DCED0(v3, v2);
                  if (v3 >> 32 < (int)v3) {
                    goto LABEL_66;
                  }
                  uint64_t v15 = v3 >> 32;
                  uint64_t v16 = (int)v3;
                  uint64_t v17 = v3 >> 32;
                  uint64_t v18 = (int)v3;
                }
                else
                {
                  uint64_t v16 = *(void *)(v3 + 16);
                  uint64_t v15 = *(void *)(v3 + 24);
                  sub_2607DCED0(v3, v2);
                  if (v15 < v16)
                  {
LABEL_66:
                    __break(1u);
LABEL_67:
                    __break(1u);
LABEL_68:
                    __break(1u);
LABEL_69:
                    __break(1u);
LABEL_70:
                    __break(1u);
LABEL_71:
                    __break(1u);
LABEL_72:
                    __break(1u);
LABEL_73:
                    __break(1u);
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    __break(1u);
LABEL_77:
                    __break(1u);
                    JUMPOUT(0x260838804);
                  }
                  uint64_t v18 = *(void *)(v3 + 16);
                  uint64_t v17 = *(void *)(v3 + 24);
                }
              }
              else
              {
                uint64_t v16 = 0;
                uint64_t v18 = 0;
                uint64_t v15 = BYTE6(v2);
                uint64_t v17 = BYTE6(v2);
              }
              if (v17 < v15 || v15 < v18) {
                goto LABEL_68;
              }
              uint64_t v20 = v15 - v16;
              if (__OFSUB__(v15, v16)) {
                goto LABEL_69;
              }
              if (!v12 || v20 < 0 || v20 >= v12)
              {
                uint64_t v22 = v16 + v12;
                if (__OFADD__(v16, v12)) {
                  goto LABEL_72;
                }
                if (v6)
                {
                  unint64_t v21 = v46;
                  if (v6 == 1)
                  {
                    uint64_t v23 = v3 >> 32;
                  }
                  else
                  {
                    uint64_t v7 = *(void *)(v3 + 16);
                    uint64_t v23 = *(void *)(v3 + 24);
                  }
                }
                else
                {
                  uint64_t v7 = 0;
                  uint64_t v23 = BYTE6(v2);
                  unint64_t v21 = v46;
                }
                if (v23 < v22 || v22 < v7) {
                  goto LABEL_73;
                }
                uint64_t v25 = 0;
                switch((int)v6)
                {
                  case 1:
                    uint64_t v25 = v3 >> 32;
                    break;
                  case 2:
                    uint64_t v25 = *(void *)(v3 + 24);
                    break;
                  case 3:
                    break;
                  default:
                    uint64_t v25 = BYTE6(v2);
                    break;
                }
                if (v25 < v22) {
                  goto LABEL_70;
                }
              }
              else
              {
                unint64_t v21 = v46;
              }
              uint64_t v26 = sub_26087AFC0();
              unint64_t v28 = v27;
              sub_2607DCF28(v3, v2);
              sub_2607DCF28(v3, v2);
              unint64_t v48 = &unk_270CA1398;
              unint64_t v49 = &off_270CA13B8;
              *(void *)&long long v47 = v45;
              *((void *)&v47 + 1) = v21;
              sub_2607E2B70(&v47, (uint64_t)v50);
              if (v4)
              {
                uint64_t v29 = v44;
              }
              else
              {
                unint64_t v30 = v5[3];
                if ((uint64_t)((v30 >> 1) + 0x4000000000000000) < 0) {
                  goto LABEL_74;
                }
                int64_t v31 = v30 & 0xFFFFFFFFFFFFFFFELL;
                if (v31 <= 1) {
                  uint64_t v32 = 1;
                }
                else {
                  uint64_t v32 = v31;
                }
                __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DA8);
                unint64_t v33 = (void *)swift_allocObject();
                uint64_t v34 = (uint64_t)(_swift_stdlib_malloc_size(v33) - 32) / 40;
                v33[2] = v32;
                v33[3] = 2 * v34;
                unint64_t v35 = (unint64_t)(v33 + 4);
                unint64_t v36 = v5[3];
                unint64_t v37 = v36 >> 1;
                if (v5[2])
                {
                  if (v33 != v5 || v35 >= (unint64_t)&v5[5 * v37 + 4]) {
                    memmove(v33 + 4, v5 + 4, 40 * v37);
                  }
                  v5[2] = 0;
                }
                uint64_t v29 = v35 + 40 * v37;
                uint64_t v4 = (v34 & 0x7FFFFFFFFFFFFFFFLL) - (v36 >> 1);
                swift_release();
                uint64_t v5 = v33;
              }
              BOOL v39 = __OFSUB__(v4--, 1);
              if (v39) {
                goto LABEL_71;
              }
              sub_2607E2B70(v50, v29);
              uint64_t v44 = v29 + 40;
              uint64_t v3 = v26;
              unint64_t v2 = v28;
              break;
            case 2uLL:
              uint64_t v14 = *(void *)(v10 + 16);
              uint64_t v13 = *(void *)(v10 + 24);
              uint64_t v12 = v13 - v14;
              if (!__OFSUB__(v13, v14)) {
                goto LABEL_13;
              }
              goto LABEL_76;
            case 3uLL:
              goto LABEL_14;
            default:
              uint64_t v12 = BYTE6(v11);
              goto LABEL_14;
          }
          continue;
        }
LABEL_62:
        sub_2607DCF28(v3, v2);
        unint64_t v40 = v5[3];
        if (v40 >= 2)
        {
          unint64_t v41 = v40 >> 1;
          BOOL v39 = __OFSUB__(v41, v4);
          unint64_t v42 = v41 - v4;
          if (v39) {
            goto LABEL_77;
          }
          v5[2] = v42;
        }
        return v5;
    }
  }
}

uint64_t sub_260838834(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v2 = a1;
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v44 = a1;
  if (!v3)
  {
    uint64_t v4 = (uint64_t *)MEMORY[0x263F8EE78];
    uint64_t v7 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    unint64_t v9 = 0;
    unint64_t v6 = v4 + 4;
LABEL_11:
    uint64_t v46 = v2 + 32;
    while (1)
    {
      if (v9 == v3)
      {
        OUTLINED_FUNCTION_13_9();
      }
      else
      {
        if (v9 >= v3) {
          goto LABEL_38;
        }
        sub_2607E2A1C(v46 + 40 * v9++, (uint64_t)v52);
      }
      sub_260838AF4((uint64_t)v52, (uint64_t)&v50);
      if (!v51) {
        break;
      }
      uint64_t v21 = sub_2607E2B70(&v50, (uint64_t)v49);
      uint64_t v29 = OUTLINED_FUNCTION_8_16(v21, v22, v23, v24, v25, v26, v27, v28, v44, v46, v47, v48, v49[0]);
      v30(v29);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      if (!v7)
      {
        unint64_t v31 = v4[3];
        if ((uint64_t)((v31 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_39;
        }
        int64_t v32 = v31 & 0xFFFFFFFFFFFFFFFELL;
        if (v32 <= 1) {
          uint64_t v33 = 1;
        }
        else {
          uint64_t v33 = v32;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DB8);
        uint64_t v34 = (uint64_t *)swift_allocObject();
        uint64_t v35 = (uint64_t)(_swift_stdlib_malloc_size(v34) - 32) / 8;
        v34[2] = v33;
        v34[3] = (2 * v35) | 1;
        unint64_t v36 = (unint64_t)(v34 + 4);
        unint64_t v37 = v4[3];
        unint64_t v38 = v37 >> 1;
        if (v4[2])
        {
          if (v34 != v4 || v36 >= (unint64_t)&v4[v38 + 4]) {
            memmove(v34 + 4, v4 + 4, 8 * v38);
          }
          v4[2] = 0;
        }
        unint64_t v6 = (uint64_t *)(v36 + 8 * v38);
        uint64_t v7 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - (v37 >> 1);
        uint64_t result = swift_release();
        uint64_t v4 = v34;
      }
      BOOL v40 = __OFSUB__(v7--, 1);
      if (v40)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      *v6++ = v48;
    }
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v41 = v4[3];
    if (v41 >= 2)
    {
      unint64_t v42 = v41 >> 1;
      BOOL v40 = __OFSUB__(v42, v7);
      unint64_t v43 = v42 - v7;
      if (v40) {
        goto LABEL_41;
      }
      v4[2] = v43;
    }
    return (uint64_t)v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DB8);
  uint64_t v4 = (uint64_t *)swift_allocObject();
  uint64_t v5 = (uint64_t)(_swift_stdlib_malloc_size(v4) - 32) / 8;
  v4[2] = v3;
  v4[3] = (2 * v5) | 1;
  unint64_t v6 = v4 + 4;
  uint64_t v7 = (v5 & 0x7FFFFFFFFFFFFFFFLL) - v3;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  unint64_t v9 = 0;
  unint64_t v10 = v3;
  while (1)
  {
    if (v9 == v3)
    {
      OUTLINED_FUNCTION_13_9();
      goto LABEL_7;
    }
    if (v9 >= v3) {
      break;
    }
    sub_2607E2A1C(v2 + 32 + 40 * v9++, (uint64_t)v52);
LABEL_7:
    uint64_t result = sub_260838AF4((uint64_t)v52, (uint64_t)&v50);
    if (!v51) {
      goto LABEL_42;
    }
    uint64_t v11 = sub_2607E2B70(&v50, (uint64_t)v49);
    int64_t v19 = OUTLINED_FUNCTION_8_16(v11, v12, v13, v14, v15, v16, v17, v18, v44, v45, v47, v48, v49[0]);
    v20(v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    *v6++ = v48;
    if (!--v10)
    {
      uint64_t v2 = v44;
      goto LABEL_11;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_260838AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_21()
{
  return sub_2607DCF28(v1, v0);
}

char *OUTLINED_FUNCTION_8_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t OUTLINED_FUNCTION_9_14()
{
  return HIDReport.mask(for:)(v0);
}

double OUTLINED_FUNCTION_13_9()
{
  return 0.0;
}

id HIDConnection.bridgedValue.getter()
{
  return v0;
}

uint64_t HIDConnection.connectionType.getter()
{
  return MEMORY[0x270EF4500](v0);
}

uint64_t HIDConnection.entitlements.getter()
{
  return *(unsigned int *)IOHIDEventSystemConnectionGetEntitlements();
}

CFStringRef HIDConnection.logDescription.getter()
{
  CFStringRef result = CFCopyDescription(v0);
  if (result)
  {
    uint64_t v2 = (__CFString *)result;
    uint64_t v3 = sub_26087B2B0();

    return (CFStringRef)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HIDConnection.taskNamePort.getter()
{
  return MEMORY[0x270EF44F8](v0);
}

double HIDConnection.attribute(forKey:)@<D0>(uint64_t a1@<X8>)
{
  id v3 = v1;
  uint64_t v4 = (void *)sub_26087B2A0();
  id v5 = (id)IOHIDEventSystemConnectionGetAttribute();

  if (v5)
  {
    *(void *)(a1 + 24) = swift_getObjectType();
    *(void *)a1 = v5;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void HIDConnection.dispatchEvent(_:)(void *a1)
{
  id v1 = a1;
  int v2 = IOHIDEventSystemConnectionDispatchEvent();
  if (v2)
  {
    int v3 = v2;
    uint64_t v4 = sub_26087B2B0();
    uint64_t v6 = v5;
    id v7 = objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_260835708(v4, v6, v3, 0);
    swift_willThrow();
  }
}

BOOL HIDConnection.isValid.getter()
{
  return _IOHIDEventSystemConnectionIsValid() != 0;
}

BOOL HIDConnection.isResponsive.getter()
{
  return _IOHIDEventSystemConnectionIsResponsive() != 0;
}

uint64_t HIDConnection.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DC0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (id)IOHIDEventSystemConnectionGetUUID();
  sub_26087B2B0();

  sub_26087B090();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_26087B0F0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, v4, v6);
  }
  sub_260839078((uint64_t)v4);
  return sub_26087B0C0();
}

uint64_t sub_260838F2C()
{
  return HIDConnection.connectionType.getter();
}

uint64_t sub_260838F50()
{
  return HIDConnection.entitlements.getter();
}

uint64_t sub_260838F74@<X0>(uint64_t a1@<X8>)
{
  return HIDConnection.id.getter(a1);
}

BOOL sub_260838F98()
{
  return HIDConnection.isValid.getter();
}

BOOL sub_260838FC0()
{
  return HIDConnection.isResponsive.getter();
}

CFStringRef sub_260838FE8()
{
  return HIDConnection.logDescription.getter();
}

uint64_t sub_26083900C()
{
  return HIDConnection.taskNamePort.getter();
}

double sub_260839030@<D0>(uint64_t a1@<X8>)
{
  return HIDConnection.attribute(forKey:)(a1);
}

void sub_260839054(void *a1)
{
}

uint64_t sub_260839078(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of HIDConnectionProtocol.connectionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.entitlements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.isValid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.isResponsive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.logDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.taskNamePort.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.attribute(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of HIDConnectionProtocol.dispatchEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t UniversalControlUsage.init(rawValue:)(unsigned __int16 a1)
{
  unsigned int v1 = (unsigned __int16)(a1 + 4096);
  BOOL v2 = v1 >= 0xF000;
  int v3 = v1 < 0xF000;
  if (v2) {
    unsigned __int16 v4 = a1;
  }
  else {
    unsigned __int16 v4 = 0;
  }
  return v4 | (v3 << 16);
}

uint64_t static UniversalControlUsage.usageMinimum.getter()
{
  return 57344;
}

uint64_t static UniversalControlUsage.usageMaximum.getter()
{
  return 61439;
}

uint64_t sub_2608391DC@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UniversalControlUsage.init(rawValue:)(*a1);
  *(_WORD *)a2 = result;
  *(unsigned char *)(a2 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t static UniversalControlUsage.usagePage.getter()
{
  return 65306;
}

uint64_t sub_260839218()
{
  return 57344;
}

uint64_t sub_260839220()
{
  return 61439;
}

uint64_t static UniversalControlUsage.report.getter()
{
  return 57344;
}

uint64_t static UniversalControlUsage.control.getter()
{
  return 57345;
}

uint64_t static UniversalControlUsage.synthetic.getter()
{
  return 57346;
}

uint64_t static UniversalControlUsage.copy.getter()
{
  return 57347;
}

uint64_t static UniversalControlUsage.serviceSelection.getter()
{
  return 57584;
}

uint64_t static UniversalControlUsage.keyboardState.getter()
{
  return 57585;
}

uint64_t static UniversalControlUsage.resting.getter()
{
  return 57586;
}

uint64_t static UniversalControlUsage.gameControllerType.getter()
{
  return 57587;
}

uint64_t static UniversalControlUsage.multitouchContactIdentity.getter()
{
  return 57588;
}

uint64_t static UniversalControlUsage.eventPhase.getter()
{
  return 57589;
}

uint64_t static UniversalControlUsage.genericGestureType.getter()
{
  return 57590;
}

uint64_t static UniversalControlUsage.genericGestureTapCount.getter()
{
  return 57591;
}

uint64_t static UniversalControlUsage.genericGestureSwipeProgress.getter()
{
  return 57592;
}

unint64_t sub_260839290(uint64_t a1)
{
  unint64_t result = sub_2608392B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2608392B8()
{
  unint64_t result = qword_26A8B4DC8;
  if (!qword_26A8B4DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4DC8);
  }
  return result;
}

unint64_t sub_260839308()
{
  unint64_t result = qword_26A8B4DD0;
  if (!qword_26A8B4DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4DD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlUsage()
{
  return &type metadata for UniversalControlUsage;
}

double DockSwipeEvent.delta.getter()
{
  OUTLINED_FUNCTION_9_15();
  IOHIDEventGetFloatValue();
  double v1 = v0;
  IOHIDEventGetFloatValue();
  IOHIDEventGetFloatValue();
  return v1;
}

unint64_t DockSwipeEvent.swipeMask.getter()
{
  unint64_t result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_27();
    unint64_t result = sub_26087B980();
    __break(1u);
  }
  return result;
}

unint64_t DockSwipeEvent.flavor.getter()
{
  return OUTLINED_FUNCTION_7_15();
}

uint64_t DockSwipeEvent.progress.getter()
{
  return OUTLINED_FUNCTION_1_21();
}

unint64_t DockSwipeEvent.gestureMotion.getter()
{
  return OUTLINED_FUNCTION_7_15();
}

unint64_t sub_260839474()
{
  unint64_t result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || result >= 0x10000)
  {
    OUTLINED_FUNCTION_27();
    unint64_t result = sub_26087B980();
    __break(1u);
  }
  return result;
}

uint64_t static DockSwipeEvent.eventType.getter()
{
  return 23;
}

uint64_t DockSwipeEvent.init(time:swipeMask:gestureMotion:flavor:delta:progress:flags:)()
{
  uint64_t DockSwipeEvent = IOHIDEventCreateDockSwipeEvent();
  IOHIDEventSetIntegerValue();
  return DockSwipeEvent;
}

uint64_t DockSwipeEvent.init(event:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  if (v3(v2) == 23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v4 = OUTLINED_FUNCTION_8_2();
    uint64_t v6 = v5(v4);
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t DockSwipeEvent.x.getter()
{
  return OUTLINED_FUNCTION_1_21();
}

uint64_t DockSwipeEvent.x.setter()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t (*DockSwipeEvent.x.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_260839660;
}

uint64_t sub_260839660()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t DockSwipeEvent.y.getter()
{
  return OUTLINED_FUNCTION_1_21();
}

uint64_t DockSwipeEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t (*DockSwipeEvent.y.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2608396D0;
}

uint64_t sub_2608396D0()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t DockSwipeEvent.z.getter()
{
  return OUTLINED_FUNCTION_1_21();
}

uint64_t DockSwipeEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t (*DockSwipeEvent.z.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_260839740;
}

uint64_t sub_260839740()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t DockSwipeEvent.progress.setter()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t (*DockSwipeEvent.progress.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2608397A8;
}

uint64_t sub_2608397A8()
{
  return OUTLINED_FUNCTION_0_22();
}

uint64_t DockSwipeEvent.swipeMask.setter()
{
  return OUTLINED_FUNCTION_6_17();
}

uint64_t (*DockSwipeEvent.swipeMask.modify(void *a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_8_17(a1, a2);
  *(_DWORD *)(v2 + 8) = DockSwipeEvent.swipeMask.getter();
  return sub_26083980C;
}

uint64_t sub_26083980C()
{
  return OUTLINED_FUNCTION_6_17();
}

uint64_t DockSwipeEvent.gestureMotion.setter()
{
  return OUTLINED_FUNCTION_2_22();
}

uint64_t (*DockSwipeEvent.gestureMotion.modify(void *a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_8_17(a1, a2);
  *(_WORD *)(v2 + 8) = DockSwipeEvent.gestureMotion.getter();
  return sub_260839870;
}

uint64_t sub_260839870()
{
  return OUTLINED_FUNCTION_2_22();
}

uint64_t DockSwipeEvent.flavor.setter()
{
  return OUTLINED_FUNCTION_2_22();
}

uint64_t (*DockSwipeEvent.flavor.modify(void *a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_8_17(a1, a2);
  *(_WORD *)(v2 + 8) = DockSwipeEvent.flavor.getter();
  return sub_2608398D8;
}

uint64_t sub_2608398D8()
{
  return OUTLINED_FUNCTION_2_22();
}

uint64_t sub_2608398EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = DockSwipeEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

void sub_260839914(uint64_t a1@<X8>)
{
  *(double *)a1 = DockSwipeEvent.delta.getter();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
}

uint64_t sub_260839944()
{
  return DockSwipeEvent.delta.setter();
}

uint64_t DockSwipeEvent.delta.setter()
{
  OUTLINED_FUNCTION_9_15();
  IOHIDEventSetFloatValue();
  IOHIDEventSetFloatValue();
  return IOHIDEventSetFloatValue();
}

uint64_t (*DockSwipeEvent.delta.modify(void *a1, uint64_t a2))()
{
  a1[3] = a2;
  IOHIDEventGetFloatValue();
  uint64_t v4 = v3;
  IOHIDEventGetFloatValue();
  uint64_t v6 = v5;
  IOHIDEventGetFloatValue();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  return sub_260839A4C;
}

uint64_t sub_260839A4C()
{
  IOHIDEventSetFloatValue();
  IOHIDEventSetFloatValue();
  return IOHIDEventSetFloatValue();
}

uint64_t sub_260839AC0(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = DockSwipeEvent.x.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_260839AE8()
{
  return DockSwipeEvent.x.setter();
}

uint64_t sub_260839AF4(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = DockSwipeEvent.y.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_260839B1C()
{
  return DockSwipeEvent.y.setter();
}

uint64_t sub_260839B28(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = DockSwipeEvent.z.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_260839B50()
{
  return DockSwipeEvent.z.setter();
}

uint64_t sub_260839B5C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = DockSwipeEvent.progress.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_260839B84()
{
  return DockSwipeEvent.progress.setter();
}

unint64_t sub_260839B90(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  unint64_t result = DockSwipeEvent.swipeMask.getter();
  *double v1 = result;
  return result;
}

uint64_t sub_260839BB8()
{
  return DockSwipeEvent.swipeMask.setter();
}

unint64_t sub_260839BC4(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  unint64_t result = DockSwipeEvent.gestureMotion.getter();
  *double v1 = result;
  return result;
}

uint64_t sub_260839BEC()
{
  return DockSwipeEvent.gestureMotion.setter();
}

unint64_t sub_260839BF8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  unint64_t result = DockSwipeEvent.flavor.getter();
  *double v1 = result;
  return result;
}

uint64_t sub_260839C20()
{
  return DockSwipeEvent.flavor.setter();
}

ValueMetadata *type metadata accessor for DockSwipeEvent()
{
  return &type metadata for DockSwipeEvent;
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_22()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  return IOHIDEventSetIntegerValue();
}

unint64_t OUTLINED_FUNCTION_7_15()
{
  return sub_260839474();
}

uint64_t OUTLINED_FUNCTION_8_17(void *a1, uint64_t a2)
{
  *a1 = a2;
  return a2;
}

uint64_t ScrollFilter.eventMask.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ScrollFilter.__allocating_init(service:)(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v6 = 0;
  uint64_t v4 = swift_allocObject();
  ScrollFilter.init(platform:service:)(&v6, a1, a2);
  return v4;
}

uint64_t ScrollFilter.__allocating_init(platform:service:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  ScrollFilter.init(platform:service:)(a1, a2, a3);
  return v6;
}

uint64_t ScrollFilter.init(platform:service:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *a1;
  uint64_t v6 = MEMORY[0x263F8EE78];
  v3[4] = sub_2607E2554(MEMORY[0x263F8EE78]);
  v3[5] = sub_2607E2554(v6);
  if (v5 != 1)
  {
    uint64_t v7 = sub_2607E2554((uint64_t)&unk_270C9E4D0);
    goto LABEL_10;
  }
  if (dword_270C9E4C8 >= 0x41)
  {
LABEL_3:
    uint64_t v7 = 0;
LABEL_10:
    v3[2] = v7;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(ObjectType, a3);
    swift_unknownObjectRelease();
    void v3[3] = v10;
    return (uint64_t)v3;
  }
  int v8 = dword_270C9E4C8 & 0x3F;
  if (dword_270C9E4C8 == 64 || v8 != 63)
  {
    if (dword_270C9E4C8 == 64) {
      goto LABEL_3;
    }
    if (v8 != 63)
    {
      uint64_t v7 = 1 << v8;
      goto LABEL_10;
    }
  }
  uint64_t result = sub_26087B980();
  __break(1u);
  return result;
}

BOOL ScrollFilter.filterEvent(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v7);
  unsigned int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if ((HIDEventType.maskValue.getter(v9) & v6) == 0
    || (uint64_t v10 = a2[3],
        uint64_t v11 = a2[4],
        __swift_project_boxed_opaque_existential_1(a2, v10),
        HIDEventProtocol.first<A>(_:)(v10, (uint64_t)&type metadata for ScrollEvent, v11, (uint64_t)&protocol witness table for ScrollEvent, (uint64_t)&v30), !(void)v30))
  {
    sub_2607E2A1C((uint64_t)a2, a1);
    return 0;
  }
  id v12 = (id)v30;
  uint64_t v13 = ScrollReport.init(scrollEvent:)(v12);
  unint64_t v15 = v14;
  *(void *)&long long v30 = v13;
  *((void *)&v30 + 1) = v14;
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 328))(v16, v17);
  switch(v15 >> 62)
  {
    case 1uLL:
      LODWORD(v18) = HIDWORD(v13) - v13;
      if (__OFSUB__(HIDWORD(v13), v13)) {
        goto LABEL_33;
      }
      uint64_t v18 = (int)v18;
LABEL_10:
      if ((unint64_t)(v18 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        JUMPOUT(0x26083A174);
      }
      if (v18 < 21)
      {
LABEL_12:
        if ((*(unsigned char *)(v3 + 40) & 0x40) != 0) {
          goto LABEL_24;
        }
        sub_2607E2A1C((uint64_t)a2, a1);
        goto LABEL_25;
      }
      uint64_t v24 = 160;
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(v13 + 16);
      uint64_t v21 = *(void *)(v13 + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v18 = v21 - v22;
      if (!v23) {
        goto LABEL_10;
      }
      goto LABEL_34;
    case 3uLL:
      goto LABEL_12;
    default:
      uint64_t v18 = BYTE6(v15);
      goto LABEL_10;
  }
  while (2)
  {
    uint64_t v25 = 0;
    switch(*((void *)&v30 + 1) >> 62)
    {
      case 1:
        uint64_t v27 = (int)v30;
        goto LABEL_21;
      case 2:
        uint64_t v27 = *(void *)(v30 + 16);
LABEL_21:
        if ((unint64_t)(v27 - 0x1000000000000000) >> 61 == 7)
        {
          uint64_t v25 = 8 * v27;
LABEL_16:
          if (__OFADD__(v25, v24)) {
            goto LABEL_32;
          }
          sub_26087AFD0();
          unint64_t v26 = v24 - 96;
          v24 -= 8;
          if (v26 <= 8) {
            goto LABEL_12;
          }
          continue;
        }
        __break(1u);
LABEL_24:
        *(void *)(a1 + 32) = 0;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
LABEL_25:
        BOOL v19 = (IOHIDEventGetPhase() & 0x8F) == 0 || (IOHIDEventGetPhase() & 0x8F) == 1;
        if ((*(unsigned char *)(v3 + 32) & 0x40) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
          uint64_t v28 = swift_allocObject();
          long long v29 = v30;
          *(_OWORD *)(v28 + 16) = xmmword_26087C870;
          *(_OWORD *)(v28 + 32) = v29;
        }
        else
        {

          sub_2607DCF28(v30, *((unint64_t *)&v30 + 1));
        }
        return v19;
      default:
        goto LABEL_16;
    }
  }
}

uint64_t ScrollFilter.updateCopyMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x263F8EE78];
}

uint64_t ScrollFilter.updateFilterMask(oldValue:newValue:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  return MEMORY[0x263F8EE78];
}

uint64_t ScrollFilter.deinit()
{
  return v0;
}

uint64_t ScrollFilter.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_26083A1CC()
{
  return ScrollFilter.eventMask.getter();
}

BOOL sub_26083A1F0(uint64_t a1, void *a2)
{
  return ScrollFilter.filterEvent(_:)(a1, a2);
}

uint64_t sub_26083A218(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_26083A244(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x263F8EE78];
}

uint64_t type metadata accessor for ScrollFilter()
{
  return self;
}

uint64_t method lookup function for ScrollFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScrollFilter);
}

uint64_t dispatch thunk of ScrollFilter.__allocating_init(platform:service:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_26083A2C0()
{
}

void sub_26083A330()
{
}

void sub_26083A378()
{
}

uint64_t sub_26083A3AC(uint64_t a1, uint64_t a2)
{
  BOOL v5 = a1 != 7 || a2 < 0 || a2 > 255 || (unint64_t)(a2 - 232) < 0xFFFFFFFFFFFFFF19;
  return OUTLINED_FUNCTION_3_19(a2, v5);
}

uint64_t sub_26083A3D4(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 != 65280 || a2 < 0 || a2 > 255;
  if (!(_BYTE)a2) {
    BOOL v4 = 1;
  }
  return OUTLINED_FUNCTION_3_19(a2, v4);
}

void sub_26083A3FC()
{
}

uint64_t sub_26083A43C(uint64_t a1, uint64_t a2)
{
  BOOL v5 = a1 != 9 || a2 < 0 || a2 > 255 || a2 > 2uLL;
  return OUTLINED_FUNCTION_3_19(a2, v5);
}

uint64_t sub_26083A460(int a1)
{
  BOOL v1 = (a1 - 15204352) >= 0xFF190000 && (a1 & 0xFF00FFFF) == 7;
  int v2 = !v1;
  int v3 = BYTE2(a1);
  if (!v1) {
    int v3 = 0;
  }
  return v3 | (v2 << 8);
}

uint64_t sub_26083A494(unsigned int a1)
{
  unsigned int v1 = HIWORD(a1);
  int v3 = (unsigned __int16)a1 != 12 || a1 - 85262336 < 0xFAEC0000;
  if (v3) {
    unsigned int v1 = 0;
  }
  return v1 | (v3 << 16);
}

uint64_t sub_26083A4CC(unsigned int a1)
{
  unsigned int v1 = a1 & 0xFF00FFFF;
  unsigned int v2 = HIWORD(a1) - 193;
  int v3 = BYTE2(a1);
  unsigned int v4 = BYTE2(a1) - 6;
  BOOL v6 = __CFADD__(v4, 3);
  BOOL v5 = v4 < 0xFFFFFFFD;
  if (!v6) {
    int v3 = 0;
  }
  BOOL v6 = __CFADD__(v2, 190);
  if (v2 >= 0xFFFFFF42) {
    int v7 = v3;
  }
  else {
    int v7 = 0;
  }
  int v8 = !v6 || v5;
  BOOL v9 = v1 == 255;
  if (v1 == 255) {
    int v10 = v7;
  }
  else {
    int v10 = 0;
  }
  if (v9) {
    int v11 = v8;
  }
  else {
    int v11 = 1;
  }
  return v10 | (v11 << 8);
}

uint64_t sub_26083A51C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_26087B890();
    uint64_t result = sub_26083CEE8(v1);
    if (result < 0 || (unint64_t v5 = result, result >= 1 << *(unsigned char *)(v1 + 32)))
    {
LABEL_13:
      __break(1u);
      return v11;
    }
    else
    {
      uint64_t v6 = v1 + 64;
      uint64_t v7 = v1 + 64;
      uint64_t v8 = v1;
      while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
      {
        if (v4 != *(_DWORD *)(v1 + 36)) {
          goto LABEL_17;
        }
        uint64_t v9 = v2;
        int v10 = v4;
        sub_2607DDC34();
        sub_26087B360();
        sub_26087B360();
        sub_26087B330();
        sub_26087B330();
        swift_bridgeObjectRelease();
        sub_26087B330();
        uint64_t v1 = v8;
        sub_26087B330();
        swift_bridgeObjectRelease();
        sub_26087B2A0();
        swift_bridgeObjectRelease();
        sub_26087B860();
        sub_26087B8A0();
        sub_26087B8B0();
        uint64_t result = sub_26087B870();
        if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(v8 + 32))) {
          goto LABEL_18;
        }
        uint64_t v6 = v7;
        if ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
          goto LABEL_19;
        }
        if (v10 != *(_DWORD *)(v8 + 36)) {
          goto LABEL_20;
        }
        uint64_t result = sub_26087B7B0();
        --v2;
        if (v9 == 1) {
          return v11;
        }
        unint64_t v5 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          int v4 = *(_DWORD *)(v8 + 36);
          if (result < 1 << *(unsigned char *)(v8 + 32)) {
            continue;
          }
        }
        goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_26083A7B8(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083A804(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 4)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083A850(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 17)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083A89C(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 3)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083A8E8(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) == 3)
  {
    uint64_t v4 = a1[3];
    uint64_t v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 352))(v4, v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t sub_26083A98C(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 5)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083A9D8(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 9)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083AA24(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 7)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083AA70(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 11)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083AABC(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 39)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t sub_26083AB08(void *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_1_22(a1);
  if (v2(v1) == 22)
  {
    uint64_t v3 = OUTLINED_FUNCTION_0_23();
    v4(v3);
  }
  return OUTLINED_FUNCTION_2_23();
}

uint64_t KeyboardFilter.debugState.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4C70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_26087C870;
  *(void *)(inited + 32) = 0x6472616F6279654BLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DD8);
  uint64_t v1 = swift_initStackObject();
  *(_OWORD *)(v1 + 16) = xmmword_260880810;
  *(void *)(v1 + 32) = 0x6B636F4C73706143;
  *(void *)(v1 + 40) = 0xE800000000000000;
  OUTLINED_FUNCTION_6_18();
  *(void *)(v1 + 48) = sub_26087B450();
  strcpy((char *)(v1 + 56), "InterruptSeed");
  *(_WORD *)(v1 + 70) = -4864;
  OUTLINED_FUNCTION_6_18();
  *(void *)(v1 + 72) = sub_26087B640();
  *(void *)(v1 + 80) = 0x657461745379654BLL;
  *(void *)(v1 + 88) = 0xE800000000000000;
  OUTLINED_FUNCTION_6_18();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_26083A51C(v2);
  swift_bridgeObjectRelease();
  sub_26081221C(0, &qword_26A8B4DE8);
  uint64_t v3 = sub_26087B3E0();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = v3;
  sub_26081221C(0, &qword_26A8B49A8);
  uint64_t v4 = sub_26087B200();
  *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DF0);
  *(void *)(inited + 48) = v4;
  return sub_26087B200();
}

uint64_t KeyboardFilter.eventMask.getter()
{
  if (dword_270C9E518 >= 0x41) {
    return 0;
  }
  int v1 = dword_270C9E518 & 0x3F;
  if (dword_270C9E518 != 64 && v1 == 63) {
    goto LABEL_9;
  }
  if (dword_270C9E518 == 64) {
    return 0;
  }
  if (v1 != 63) {
    return 1 << v1;
  }
LABEL_9:
  uint64_t result = sub_26087B980();
  __break(1u);
  return result;
}

uint64_t KeyboardFilter.capsLockState.getter()
{
  OUTLINED_FUNCTION_6_18();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t KeyboardFilter.capsLockState.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*KeyboardFilter.capsLockState.modify())()
{
  return j__swift_endAccess;
}

uint64_t KeyboardFilter.interruptSeed.getter()
{
  OUTLINED_FUNCTION_6_18();
  return *(void *)(v0 + 24);
}

uint64_t sub_26083AED8(char a1)
{
  if (!a1) {
    return 1145128260;
  }
  if (a1 == 1) {
    return 20565;
  }
  return 1314344772;
}

BOOL sub_26083AF14(char a1, char a2)
{
  return a1 == a2;
}

uint64_t _s12UniversalHID13HIDDeviceTypeO4hash4intoys6HasherVz_tF_0()
{
  return sub_26087BCB0();
}

uint64_t _s12UniversalHID13HIDDeviceTypeO9hashValueSivg_0()
{
  return sub_26087BD00();
}

uint64_t sub_26083AF94()
{
  return _s12UniversalHID13HIDDeviceTypeO9hashValueSivg_0();
}

uint64_t sub_26083AF9C()
{
  return sub_26083AED8(*v0);
}

uint64_t sub_26083AFA4(unsigned __int8 a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2607F3F14((a1 << 16) | 7u), (v6 & 1) != 0)) {
    uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 + 56) + v5);
  }
  else {
    uint64_t v7 = 1;
  }
  swift_endAccess();
  return v7;
}

uint64_t sub_26083B024(unsigned int a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2607F3F14(a1), (v6 & 1) != 0)) {
    uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 + 56) + v5);
  }
  else {
    uint64_t v7 = 1;
  }
  swift_endAccess();
  return v7;
}

uint64_t sub_26083B0A0(unsigned __int8 a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2607F3F14((a1 << 16) | 0xFFu), (v6 & 1) != 0)) {
    uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 + 56) + v5);
  }
  else {
    uint64_t v7 = 1;
  }
  swift_endAccess();
  return v7;
}

uint64_t sub_26083B120(unsigned __int8 a1, unsigned int a2)
{
  int v4 = a1;
  swift_beginAccess();
  if (v4 == 1) {
    sub_2607F4E10(a2);
  }
  else {
    sub_2607F50B0(a1, a2);
  }
  return swift_endAccess();
}

uint64_t KeyboardFilter.__allocating_init(logger:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  KeyboardFilter.init(logger:service:)(a1, a2, a3);
  return v6;
}

uint64_t KeyboardFilter.init(logger:service:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  *(unsigned char *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 24) = xmmword_260880820;
  *(unsigned char *)(v4 + 40) = 0;
  uint64_t v8 = OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates;
  sub_2607DED54();
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v4 + v8) = sub_26087B200();
  uint64_t v10 = OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask;
  *(void *)(v4 + v10) = sub_2607E2554(v9);
  uint64_t v11 = OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_filterMask;
  *(void *)(v4 + v11) = sub_2607E2554(v9);
  uint64_t v12 = v4 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_logger;
  uint64_t v13 = sub_26087B120();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  unint64_t v15 = (void *)(v4 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_service);
  *unint64_t v15 = a2;
  v15[1] = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  swift_unknownObjectRetain();
  uint64_t v18 = v17(ObjectType, a3);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  *(void *)(v4 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_serviceID) = v18;
  return v4;
}

BOOL sub_26083B38C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask);
  return (sub_2607E2554((uint64_t)&unk_270C9E520) & v1) != 0;
}

BOOL KeyboardFilter.filterEvent(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_2607E2A1C((uint64_t)a2, (uint64_t)v43);
  uint64_t v6 = sub_26083A8E8(v43);
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = (void *)v6;
  if (IOHIDEventGetTimeStamp() == *(void *)(v3 + 32))
  {

LABEL_4:
    sub_2607E2A1C((uint64_t)a2, a1);
    return 0;
  }
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  id v10 = v7;
  unsigned __int16 v11 = IOHIDEventGetIntegerValue();
  unsigned __int16 v12 = IOHIDEventGetIntegerValue();

  sub_26083BA4C();
  OUTLINED_FUNCTION_6_18();
  *(unsigned char *)(v3 + 40) = *(unsigned char *)(v3 + 16);
  unsigned int v13 = v11 | (v12 << 16);
  unsigned __int8 v14 = sub_26083B024(v13);
  if (!IntegerValue)
  {
    if (!v14)
    {
      unsigned __int8 v14 = 0;
      unsigned __int8 v17 = 1;
      uint64_t v41 = 1;
      char v16 = 1;
      goto LABEL_34;
    }
    if (v14 != 1)
    {
      char v16 = 0;
      unsigned __int8 v17 = 1;
      uint64_t v41 = 1;
      goto LABEL_34;
    }
    unint64_t v15 = v14;
LABEL_27:
    unint64_t v20 = v15;
    goto LABEL_43;
  }
  unint64_t v15 = v14;
  switch(v14)
  {
    case 0u:
      uint64_t v41 = 2;
      char v16 = 1;
      goto LABEL_35;
    case 2u:
      goto LABEL_27;
    case 1u:
      char v16 = 0;
      unsigned __int8 v14 = 1;
      uint64_t v41 = 2;
      unsigned __int8 v17 = 2;
      if (v11 != 7 || v12 != 42) {
        goto LABEL_34;
      }
      sub_26083AFA4(0xE3u);
      OUTLINED_FUNCTION_4_15();
      if (v26 || (sub_26083AFA4(0xE7u), OUTLINED_FUNCTION_4_15(), v26))
      {
        sub_26083AFA4(0xE0u);
        OUTLINED_FUNCTION_4_15();
        if (v26 || (sub_26083AFA4(0xE4u), OUTLINED_FUNCTION_4_15(), v26))
        {
          sub_26083AFA4(0xE2u);
          OUTLINED_FUNCTION_4_15();
          if (v26 || (sub_26083AFA4(0xE6u), OUTLINED_FUNCTION_4_15(), v26))
          {
            swift_beginAccess();
            uint64_t v18 = *(void *)(v3 + 24) + 1;
            do
            {
              uint64_t v19 = v18;
              uint64_t v18 = 1;
            }
            while (!v19);
            *(void *)(v3 + 24) = v19;
            sub_26083B120(0, 0x2A0007u);
            *(void *)(a1 + 32) = 0;
            *(_OWORD *)a1 = 0u;
            *(_OWORD *)(a1 + 16) = 0u;

            return 0;
          }
        }
      }
      char v16 = 0;
      unsigned __int8 v14 = 1;
      unsigned __int8 v17 = 2;
      break;
    default:
      unsigned __int8 v17 = 2;
      char v16 = 0;
      break;
  }
  uint64_t v41 = 2;
LABEL_34:
  unint64_t v15 = v14;
  sub_26083B120(v17, v11 | (v12 << 16));
LABEL_35:
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) != 0)
  {
    if (v16)
    {
LABEL_42:
      unint64_t v20 = v41;
      goto LABEL_43;
    }
  }
  else if (!sub_26083B38C() || v16 & 1 | ((sub_26083BBD4(v11 | (v12 << 16)) & 1) == 0))
  {
    goto LABEL_42;
  }
  if ((sub_26083A460(v11 | (v12 << 16)) & 0x100) == 0)
  {
    swift_bridgeObjectRelease();
    sub_26083BC7C(&v42);
    uint64_t v21 = a2[3];
    uint64_t v22 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v21);
    (*(void (**)(uint64_t, uint64_t))(v22 + 328))(v21, v22);
    uint64_t v23 = v42;
    uint64_t v24 = *((void *)&v42 + 1) >> 62;
    unint64_t v20 = v41;
    switch(*((void *)&v42 + 1) >> 62)
    {
      case 1:
        LODWORD(v25) = DWORD1(v42) - v42;
        if (__OFSUB__(DWORD1(v42), v42)) {
          goto LABEL_89;
        }
        uint64_t v25 = (int)v25;
LABEL_63:
        if ((unint64_t)(v25 - 0x1000000000000000) >> 61 != 7)
        {
          __break(1u);
LABEL_87:
          __break(1u);
          do
          {
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            uint64_t v33 = 8 * v24;
LABEL_66:
            uint64_t v24 = v33 + 240;
          }
          while (__OFADD__(v33, 240));
          sub_26087AFD0();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
          uint64_t v34 = OUTLINED_FUNCTION_8_18();
          long long v35 = v42;
          *(_OWORD *)(v34 + 16) = xmmword_26087C870;
          *(_OWORD *)(v34 + 32) = v35;
          goto LABEL_43;
        }
        if (v25 < 39)
        {
LABEL_65:
          uint64_t v33 = 0;
          switch(v24)
          {
            case 0:
            case 3:
              goto LABEL_66;
            case 1:
              uint64_t v24 = (int)v23;
              goto LABEL_83;
            case 2:
              uint64_t v24 = *(void *)(v23 + 16);
LABEL_83:
              if ((unint64_t)(v24 - 0x1000000000000000) >> 61 == 7) {
                goto LABEL_91;
              }
              __break(1u);
              break;
            default:
              JUMPOUT(0);
          }
          goto LABEL_43;
        }
        uint64_t v36 = 304;
        unint64_t v20 = 0xF000000000000000;
        break;
      case 2:
        uint64_t v31 = *(void *)(v42 + 16);
        uint64_t v30 = *(void *)(v42 + 24);
        BOOL v32 = __OFSUB__(v30, v31);
        uint64_t v25 = v30 - v31;
        if (!v32) {
          goto LABEL_63;
        }
        goto LABEL_90;
      case 3:
        goto LABEL_65;
      default:
        uint64_t v25 = BYTE14(v42);
        goto LABEL_63;
    }
    while (1)
    {
      uint64_t v24 = v36 - 248;
      uint64_t v37 = 0;
      switch(*((void *)&v42 + 1) >> 62)
      {
        case 1:
          uint64_t v39 = (int)v42;
          goto LABEL_75;
        case 2:
          uint64_t v39 = *(void *)(v42 + 16);
LABEL_75:
          if ((unint64_t)(v39 - 0x1000000000000000) >> 61 != 7)
          {
            __break(1u);
LABEL_78:
            sub_26083A2C0();
            if ((v40 & 0x100) == 0)
            {
              swift_bridgeObjectRelease();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
              uint64_t v29 = OUTLINED_FUNCTION_8_18();
              OUTLINED_FUNCTION_7_16((__n128 *)v29, (__n128)xmmword_26087C870);
              sub_26083BF04();
              goto LABEL_80;
            }
            goto LABEL_43;
          }
          uint64_t v37 = 8 * v39;
LABEL_70:
          if (__OFADD__(v37, v36)) {
            goto LABEL_87;
          }
          sub_26087AFD0();
          unint64_t v38 = v36 - 240;
          v36 -= 8;
          if (v38 <= 8)
          {
            uint64_t v23 = v42;
            uint64_t v24 = *((void *)&v42 + 1) >> 62;
            unint64_t v20 = v41;
            goto LABEL_65;
          }
          break;
        default:
          goto LABEL_70;
      }
    }
  }
  if ((sub_26083A494(v11 | (v12 << 16)) & 0x10000) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
    uint64_t v28 = OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_7_16((__n128 *)v28, (__n128)xmmword_26087C870);
    sub_26083BD54();
    *(_OWORD *)(v28 + 32) = v42;
    goto LABEL_42;
  }
  unint64_t v20 = v41;
  if ((sub_26083A4CC(v11 | (v12 << 16)) & 0x100) != 0) {
    goto LABEL_78;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
  uint64_t v29 = OUTLINED_FUNCTION_8_18();
  OUTLINED_FUNCTION_7_16((__n128 *)v29, (__n128)xmmword_26087C870);
  sub_26083BE2C();
LABEL_80:
  *(_OWORD *)(v29 + 32) = v42;
LABEL_43:
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_filterMask) & 8) != 0 && (v15 || v20 != 1))
  {
    char v27 = sub_26083BBD4(v13);

    if ((v27 & 1) == 0)
    {
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return v20 == 2 && v15 == 1;
    }
  }
  else
  {
  }
  sub_2607E2A1C((uint64_t)a2, a1);
  return v20 == 2 && v15 == 1;
}

void sub_26083BA4C()
{
  uint64_t v1 = (unsigned char *)(v0 + 16);
  swift_beginAccess();
  int v2 = *(unsigned __int8 *)(v0 + 16);
  char v3 = sub_26083C9C4();
  if (v2 != (v3 & 1))
  {
    char v4 = v3;
    swift_retain();
    unint64_t v5 = sub_26087B100();
    os_log_type_t v6 = sub_26087B530();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218496;
      sub_26087B650();
      swift_release();
      *(_WORD *)(v7 + 12) = 1024;
      sub_26087B650();
      *(_WORD *)(v7 + 18) = 1024;
      sub_26087B650();
      _os_log_impl(&dword_2607D9000, v5, v6, "%llx: Caps Lock: %{BOOL}d -> %{BOOL}d", (uint8_t *)v7, 0x18u);
      MEMORY[0x26121DB90](v7, -1, -1);
    }
    else
    {
      swift_release();
    }

    *uint64_t v1 = v4 & 1;
  }
}

uint64_t sub_26083BBD4(unsigned int a1)
{
  if ((a1 & 0xFF00FFFF) != 7) {
    return 0;
  }
  uint64_t v1 = HIWORD(a1);
  if ((v1 - 232) < 0xFFFFFF19) {
    return 0;
  }
  if (qword_26A8B4538 != -1)
  {
    unsigned int v5 = HIWORD(a1);
    char v6 = BYTE2(a1);
    swift_once();
    uint64_t v1 = v5;
    BYTE2(a1) = v6;
  }
  int v2 = BYTE2(a1);
  BOOL v3 = sub_2608537C8(v1, (uint64_t)off_26A8B4D50);
  uint64_t result = 1;
  if (v2 != 57 && !v3) {
    return 0;
  }
  return result;
}

double sub_26083BC7C@<D0>(long long *a1@<X8>)
{
  BOOL v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_26083D134;
  *(void *)(v5 + 24) = v1;
  v7[0] = v4;
  v7[1] = sub_26083D2D4;
  uint64_t v7[2] = v5;
  v7[3] = sub_26083CFF8;
  v7[4] = 0;
  void v7[5] = sub_26083D010;
  void v7[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_260877180((unint64_t)v7, a1);
}

uint64_t sub_26083BD54()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_26083D228;
  *(void *)(v3 + 24) = v0;
  v5[0] = v2;
  v5[1] = sub_26083D230;
  v5[2] = v3;
  v5[3] = sub_26083D0B0;
  v5[4] = 0;
  _OWORD v5[5] = sub_26083D0C8;
  void v5[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_260876F68(v5);
}

uint64_t sub_26083BE2C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_26083D238;
  *(void *)(v3 + 24) = v0;
  v5[0] = v2;
  v5[1] = sub_26083D2D4;
  v5[2] = v3;
  v5[3] = sub_26083CFF8;
  v5[4] = 0;
  _OWORD v5[5] = sub_26083D010;
  void v5[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_260876D9C(v5);
}

uint64_t sub_26083BF04()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_26083D240;
  *(void *)(v3 + 24) = v0;
  v5[0] = v2;
  v5[1] = sub_26083D248;
  v5[2] = v3;
  v5[3] = sub_26083CF98;
  v5[4] = 0;
  _OWORD v5[5] = sub_26083CFB0;
  void v5[6] = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_260876BD0(v5);
}

uint64_t sub_26083BFDC(unsigned int a1, char a2, uint64_t a3)
{
  if (a2 == 2)
  {
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) != 0
      || sub_26083B38C() && (sub_26083BBD4(a1) & 1) != 0)
    {
      sub_26083A2C0();
      int v5 = (v4 >> 8) & 1;
    }
    else
    {
      LOBYTE(v4) = 0;
      int v5 = 1;
    }
  }
  else
  {
    LOBYTE(v4) = 0;
    int v5 = 1;
  }
  return v4 | (v5 << 8);
}

uint64_t sub_26083C06C(unsigned int a1, char a2, uint64_t a3)
{
  if (a2 != 2)
  {
    int v5 = 0;
    int v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) == 0)
  {
    if (sub_26083B38C())
    {
      char v4 = sub_26083BBD4(a1);
      int v5 = 0;
      int v6 = 1;
      if ((v4 & 1) == 0 || (a1 & 0xFF00FFFF) != 0xFF) {
        return v5 | (v6 << 8);
      }
      goto LABEL_9;
    }
LABEL_14:
    int v5 = 0;
    int v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((a1 & 0xFF00FFFF) != 0xFF) {
    goto LABEL_14;
  }
LABEL_9:
  int v5 = BYTE2(a1);
  unsigned int v7 = BYTE2(a1) - 6;
  BOOL v8 = __CFADD__(v7, 3);
  BOOL v9 = v7 < 0xFFFFFFFD;
  if (!v8) {
    int v5 = 0;
  }
  if (BYTE2(a1) - 193 >= 0xFFFFFF42)
  {
    int v6 = v9;
  }
  else
  {
    int v5 = 0;
    int v6 = 1;
  }
  return v5 | (v6 << 8);
}

uint64_t sub_26083C134(unsigned int a1, char a2, uint64_t a3)
{
  if (a2 == 2)
  {
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) != 0
      || sub_26083B38C() && (sub_26083BBD4(a1) & 1) != 0)
    {
      unsigned int v4 = HIWORD(a1);
      if (HIWORD(a1) > 0x514u) {
        unsigned int v4 = 0;
      }
      if (a1 >= 0x10000 && (unsigned __int16)a1 == 12)
      {
        int v6 = HIWORD(a1) > 0x514u;
      }
      else
      {
        unsigned int v4 = 0;
        int v6 = 1;
      }
    }
    else
    {
      unsigned int v4 = 0;
      int v6 = 1;
    }
  }
  else
  {
    unsigned int v4 = 0;
    int v6 = 1;
  }
  return v4 | (v6 << 16);
}

uint64_t sub_26083C1D8(unsigned int a1, char a2, uint64_t a3)
{
  if (a2 != 2)
  {
    unsigned __int8 v5 = 0;
    int v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) & 8) == 0)
  {
    if (sub_26083B38C())
    {
      char v4 = sub_26083BBD4(a1);
      unsigned __int8 v5 = 0;
      int v6 = 1;
      if ((v4 & 1) == 0 || (a1 & 0xFF00FFFF) != 7) {
        return v5 | (v6 << 8);
      }
      goto LABEL_9;
    }
LABEL_17:
    unsigned __int8 v5 = 0;
    int v6 = 1;
    return v5 | (v6 << 8);
  }
  if ((a1 & 0xFF00FFFF) != 7) {
    goto LABEL_17;
  }
LABEL_9:
  unsigned int v7 = HIWORD(a1);
  if (BYTE2(a1) > 0xE7u) {
    LOBYTE(v7) = 0;
  }
  if (BYTE2(a1)) {
    unsigned __int8 v5 = v7;
  }
  else {
    unsigned __int8 v5 = 0;
  }
  if (BYTE2(a1)) {
    int v6 = BYTE2(a1) > 0xE7u;
  }
  else {
    int v6 = 1;
  }
  return v5 | (v6 << 8);
}

double KeyboardFilter.updateCopyMask(oldValue:newValue:)(int a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_copyMask) = a2;
  if ((a1 & 8) != 0)
  {
    if ((a1 & 0x20000) != 0 || (a2 & 0x20000) == 0) {
      return result;
    }
    goto LABEL_8;
  }
  if ((a1 & 0x20000) != 0)
  {
    if ((a2 & 8) == 0) {
      return result;
    }
  }
  else if ((a2 & 8) == 0)
  {
    if ((a2 & 0x20000) == 0) {
      return result;
    }
LABEL_8:
    int v3 = 0;
    goto LABEL_11;
  }
  int v3 = 1;
LABEL_11:
  uint64_t v4 = v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates;
  OUTLINED_FUNCTION_6_18();
  if (!*(void *)(*(void *)v4 + 16)) {
    return result;
  }
  if (qword_26A8B44C0 != -1) {
    goto LABEL_44;
  }
LABEL_13:
  uint64_t v6 = HIDReportDescriptor.reportBitCount(for:)(1u);
  *(void *)&long long v25 = HIDReport.init(bitCount:id:)(v6, 1);
  *((void *)&v25 + 1) = v7;
  if (qword_26A8B4538 != -1) {
    swift_once();
  }
  BOOL v8 = off_26A8B4D50;
  uint64_t v9 = *((void *)off_26A8B4D50 + 2);
  if (v9)
  {
    int v23 = v3;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (1)
    {
      unsigned __int8 v11 = v8[v10 + 32];
      sub_26083AFA4(v11);
      OUTLINED_FUNCTION_4_15();
      if (v12)
      {
        unint64_t v13 = v11 + 8;
        int v3 = DWORD2(v25);
        uint64_t v14 = 0;
        uint64_t v15 = (int)v25;
        switch(*((void *)&v25 + 1) >> 62)
        {
          case 1:
            uint64_t v14 = (int)v25;
            break;
          case 2:
            uint64_t v14 = *(void *)(v25 + 16);
            break;
          default:
            break;
        }
        if (__OFADD__(v14, v13 >> 3))
        {
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          swift_once();
          goto LABEL_13;
        }
        unint64_t v16 = v13 >> 3;
        sub_26087B080();
        switch(*((void *)&v25 + 1) >> 62)
        {
          case 1:
            goto LABEL_25;
          case 2:
            uint64_t v15 = *(void *)(v25 + 16);
LABEL_25:
            if (!__OFADD__(v15, v16)) {
              goto LABEL_26;
            }
            goto LABEL_43;
          default:
LABEL_26:
            sub_26087B080();
            sub_26087AFD0();
            break;
        }
      }
      if (v9 == ++v10)
      {
        swift_bridgeObjectRelease();
        int v3 = v23;
        break;
      }
    }
  }
  if (v3)
  {
    sub_26083AFA4(0x39u);
    OUTLINED_FUNCTION_4_15();
    if (v12)
    {
      HIDReport.offset(for:)(65);
      sub_26087B080();
      HIDReport.offset(for:)(65);
      sub_26087B080();
      sub_26087AFD0();
    }
    if (qword_26A8B44B0 != -1) {
      swift_once();
    }
    uint64_t v17 = HIDReportDescriptor.reportBitCount(for:)(4u);
    uint64_t v18 = HIDReport.init(bitCount:id:)(v17, 4);
    uint64_t v20 = v19;
    uint64_t v24 = v19;
    sub_26083B0A0(3u);
    OUTLINED_FUNCTION_4_15();
    if (v12)
    {
      AppleVendorTopCaseReport.update(with:)(3);
      uint64_t v20 = v24;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
    uint64_t v21 = swift_allocObject();
    *(void *)&double result = 2;
    *(_OWORD *)(v21 + 16) = xmmword_26087EEC0;
    *(_OWORD *)(v21 + 32) = v25;
    *(void *)(v21 + 48) = v18;
    *(void *)(v21 + 56) = v20;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4720);
    uint64_t v22 = OUTLINED_FUNCTION_8_18();
    *(void *)&double result = 1;
    *(_OWORD *)(v22 + 16) = xmmword_26087C870;
    *(_OWORD *)(v22 + 32) = v25;
  }
  return result;
}

uint64_t KeyboardFilter.updateFilterMask(oldValue:newValue:)(char a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_filterMask) = a2;
  uint64_t v3 = MEMORY[0x263F8EE78];
  if ((a1 & 8) == 0 && (a2 & 8) != 0)
  {
    uint64_t v4 = v2 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter__keyStates;
    OUTLINED_FUNCTION_6_18();
    if (*(void *)(*(void *)v4 + 16))
    {
      uint64_t v5 = mach_absolute_time();
      *(void *)(v2 + 32) = v5;
      MEMORY[0x270FA5388](v5);
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v3 = sub_26083C7E4(v6, (uint64_t (*)(void, void))sub_26083CC04);
      swift_bridgeObjectRelease();
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

uint64_t sub_26083C748(unsigned int a1, char a2)
{
  if (a2 != 2 || (sub_26083BBD4(a1) & 1) != 0) {
    return 0;
  }
  sub_26083B120(0, a1);
  uint64_t KeyboardEvent = IOHIDEventCreateKeyboardEvent();
  IOHIDEventSetSenderID();
  return KeyboardEvent;
}

uint64_t sub_26083C7E4(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_2607F5FF8(v15, a1);
  uint64_t v3 = v15[0];
  uint64_t v14 = v15[1];
  int64_t v4 = v15[3];
  unint64_t v5 = v15[4];
  int64_t v6 = (unint64_t)(v15[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v10 >= v6) {
      goto LABEL_24;
    }
    unint64_t v11 = *(void *)(v14 + 8 * v10);
    int64_t v12 = v4 + 1;
    if (!v11)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v6) {
        goto LABEL_24;
      }
      unint64_t v11 = *(void *)(v14 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v6) {
          goto LABEL_24;
        }
        unint64_t v11 = *(void *)(v14 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v6) {
            goto LABEL_24;
          }
          unint64_t v11 = *(void *)(v14 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 5;
            if (v4 + 5 >= v6) {
              goto LABEL_24;
            }
            unint64_t v11 = *(void *)(v14 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v4 + 6;
              while (v13 < v6)
              {
                unint64_t v11 = *(void *)(v14 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_19;
                }
              }
LABEL_24:
              swift_release();
              return v16;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v4 = v12;
LABEL_20:
    uint64_t result = a2(*(unsigned int *)(*(void *)(v3 + 48) + 4 * v9), *(unsigned __int8 *)(*(void *)(v3 + 56) + v9));
    if (result)
    {
      MEMORY[0x26121C810]();
      if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_26087B410();
      }
      sub_26087B430();
      uint64_t result = sub_26087B400();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_26083C9C4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_service + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v1 + 48))(v5, 0xD000000000000010, 0x8000000260884CE0, ObjectType, v1);
  if (v5[3])
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v4;
    }
  }
  else
  {
    sub_26083D264((uint64_t)v5);
    return 0;
  }
  return result;
}

uint64_t KeyboardFilter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12UniversalHID14KeyboardFilter_logger;
  uint64_t v2 = sub_26087B120();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KeyboardFilter.__deallocating_deinit()
{
  KeyboardFilter.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_26083CB58()
{
  return KeyboardFilter.eventMask.getter();
}

BOOL sub_26083CB70(uint64_t a1, void *a2)
{
  return KeyboardFilter.filterEvent(_:)(a1, a2);
}

uint64_t sub_26083CB98()
{
  return KeyboardFilter.debugState.getter();
}

double sub_26083CBBC(int a1, uint64_t a2)
{
  return KeyboardFilter.updateCopyMask(oldValue:newValue:)(a1, a2);
}

uint64_t sub_26083CBE0(char a1, uint64_t a2)
{
  return KeyboardFilter.updateFilterMask(oldValue:newValue:)(a1, a2);
}

uint64_t sub_26083CC04(unsigned int a1, char a2)
{
  return sub_26083C748(a1, a2);
}

uint64_t sub_26083CC0C()
{
  return type metadata accessor for KeyboardFilter();
}

uint64_t type metadata accessor for KeyboardFilter()
{
  uint64_t result = qword_26A8B4E20;
  if (!qword_26A8B4E20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_26083CC5C()
{
  uint64_t result = sub_26087B120();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for KeyboardFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for KeyboardFilter);
}

uint64_t dispatch thunk of KeyboardFilter.__allocating_init(logger:service:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

unsigned char *storeEnumTagSinglePayload for KeyboardFilter.KeyState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26083CE28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardFilter.KeyState()
{
  return &type metadata for KeyboardFilter.KeyState;
}

unint64_t sub_26083CE64()
{
  unint64_t result = qword_26A8B4E30;
  if (!qword_26A8B4E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E30);
  }
  return result;
}

BOOL sub_26083CEB0(__int16 a1)
{
  return (a1 & 0x100) == 0;
}

BOOL sub_26083CEBC(int a1)
{
  return (a1 & 0x10000) == 0;
}

uint64_t sub_26083CEC8(uint64_t result)
{
  if ((result & 0x100) == 0) {
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_26083CEDC(uint64_t result)
{
  if ((result & 0x10000) != 0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_26083CEE8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_26083CF68@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_26083BFDC(a1, a2, a3);
  *a4 = result;
  a4[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_26083CF98(unsigned __int8 *a1)
{
  return sub_26083D1CC(a1, (uint64_t (*)(void))sub_26083CEB0);
}

uint64_t sub_26083CFB0@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_26083D1E8(a1, sub_26083CEC8, a2);
}

uint64_t sub_26083CFC8@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_26083C06C(a1, a2, a3);
  *a4 = result;
  a4[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_26083CFF8(unsigned __int8 *a1)
{
  return sub_26083D1CC(a1, (uint64_t (*)(void))sub_26083D2C4);
}

uint64_t sub_26083D010@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_26083D1E8(a1, sub_26083D2D8, a2);
}

uint64_t sub_26083D028@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_26083C134(a1, a2, a3);
  *(_WORD *)a4 = result;
  *(unsigned char *)(a4 + 2) = BYTE2(result) & 1;
  return result;
}

void *sub_26083D058@<X0>(unsigned int *a1@<X0>, void *(*a2)(uint64_t *__return_ptr, void, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = a2(&v6, *a1, *((unsigned __int8 *)a1 + 4));
  char v5 = BYTE2(v6);
  *(_WORD *)a3 = v6;
  *(unsigned char *)(a3 + 2) = v5;
  return result;
}

BOOL sub_26083D0B0(unsigned __int16 *a1)
{
  return sub_26083CEBC(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
}

uint64_t sub_26083D0C8@<X0>(unsigned __int16 *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_26083CEDC(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
  *a2 = result;
  return result;
}

uint64_t sub_26083D104@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_26083C1D8(a1, a2, a3);
  *a4 = result;
  a4[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_26083D134@<X0>(unsigned int a1@<W0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_26083D104(a1, a2, v3, a3);
}

void *sub_26083D13C@<X0>(unsigned int *a1@<X0>, void *(*a2)(uint64_t *__return_ptr, void, void)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(&v6, *a1, *((unsigned __int8 *)a1 + 4));
  char v5 = BYTE1(v6);
  *a3 = v6;
  a3[1] = v5;
  return result;
}

uint64_t sub_26083D194()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_26083D1CC(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1 | (a1[1] << 8));
}

uint64_t sub_26083D1E8@<X0>(unsigned __int8 *a1@<X0>, uint64_t (*a2)(void)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(*a1 | (a1[1] << 8));
  *a3 = result;
  return result;
}

uint64_t sub_26083D228@<X0>(unsigned int a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_26083D028(a1, a2, v3, a3);
}

void *sub_26083D230@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_26083D058(a1, *(void *(**)(uint64_t *__return_ptr, void, void))(v2 + 16), a2);
}

uint64_t sub_26083D238@<X0>(unsigned int a1@<W0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_26083CFC8(a1, a2, v3, a3);
}

uint64_t sub_26083D240@<X0>(unsigned int a1@<W0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  return sub_26083CF68(a1, a2, v3, a3);
}

void *sub_26083D248@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_26083D13C(a1, *(void *(**)(uint64_t *__return_ptr, void, void))(v2 + 16), a2);
}

uint64_t sub_26083D264(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4998);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_23()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_22(void *a1)
{
  uint64_t v1 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_2_23()
{
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_3_19@<X0>(unsigned __int8 a1@<W1>, int a2@<W8>)
{
  int v2 = a1;
  if (a2) {
    int v2 = 0;
  }
  return v2 | (a2 << 8);
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  return swift_beginAccess();
}

__n128 *OUTLINED_FUNCTION_7_16(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_18()
{
  return swift_allocObject();
}

uint64_t HIDReport.subscript.getter@<X0>(uint64_t a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DC0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_26087B0F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_26087B0E0();
  if ((a1 & 7) != 0)
  {
LABEL_10:
    OUTLINED_FUNCTION_0_24();
    __break(1u);
    JUMPOUT(0x26083D60CLL);
  }
  uint64_t v13 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      OUTLINED_FUNCTION_2_1();
      if (v18) {
        goto LABEL_3;
      }
      __break(1u);
      goto LABEL_8;
    default:
LABEL_3:
      if (__OFADD__(a1, 8 * v13))
      {
LABEL_8:
        __break(1u);
        goto LABEL_9;
      }
      uint64_t v14 = sub_26087AFC0();
      unint64_t v16 = v15;
      sub_2607DCED0(v14, v15);
      sub_260824454(v14, v16, (uint64_t)v8);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
      {
LABEL_9:
        __break(1u);
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      sub_2607DCF28(v14, v16);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
  }
}

uint64_t HIDReport.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  if ((a2 & 7) != 0)
  {
    OUTLINED_FUNCTION_0_24();
    __break(1u);
    JUMPOUT(0x26083D7DCLL);
  }
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 8) >> 62;
  uint64_t v6 = 0;
  switch(v4)
  {
    case 1:
    case 2:
      OUTLINED_FUNCTION_2_1();
      if (v20) {
        goto LABEL_3;
      }
      __break(1u);
      goto LABEL_7;
    default:
LABEL_3:
      BOOL v7 = __OFADD__(a2, 8 * v6);
      uint64_t v8 = a2 + 8 * v6;
      if (v7) {
LABEL_7:
      }
        __break(1u);
      uint64_t v9 = v8 >> 3;
      uint64_t v21 = sub_26087B0D0();
      char v22 = v10;
      char v23 = v11;
      char v24 = v12;
      char v25 = v13;
      char v26 = v14;
      char v27 = v15;
      char v28 = v16;
      char v29 = v17;
      sub_26083D7EC((uint64_t)&v21, (uint64_t)&v30, v3, v9);
      uint64_t v18 = sub_26087B0F0();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
  }
}

{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t vars8;

  uint64_t v4 = *v2;
  char v5 = 0;
  switch((unint64_t)v2[1] >> 62)
  {
    case 1uLL:
      char v5 = (int)v4;
      goto LABEL_6;
    case 2uLL:
      char v5 = *(void *)(v4 + 16);
LABEL_6:
      if ((unint64_t)(v5 - 0x1000000000000000) >> 61 == 7) {
        goto LABEL_2;
      }
      __break(1u);
      break;
    default:
LABEL_2:
      if (__OFADD__(a2, 8 * v5))
      {
        __break(1u);
        JUMPOUT(0x26083E164);
      }
      return result;
  }
  sub_26087B080();
  return sub_26087AFD0();
}

uint64_t sub_26083D7EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (__OFADD__(a4, 16))
  {
    __break(1u);
  }
  else if (a4 + 16 >= a4)
  {
    v4[3] = MEMORY[0x263F8DA40];
    v4[4] = MEMORY[0x263F07D80];
    v4[0] = result;
    v4[1] = a2;
    __swift_project_boxed_opaque_existential_1(v4, MEMORY[0x263F8DA40]);
    sub_26087AFB0();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  __break(1u);
  return result;
}

void (*HIDReport.subscript.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  char v5 = malloc(0x30uLL);
  *a1 = v5;
  *char v5 = a2;
  v5[1] = v2;
  uint64_t v6 = sub_26087B0F0();
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  void v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  _OWORD v5[5] = v9;
  HIDReport.subscript.getter(a2, *(void *)(v2 + 8), (uint64_t)v9);
  return sub_26083D964;
}

void sub_26083D964(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    HIDReport.subscript.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    HIDReport.subscript.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t OUTLINED_FUNCTION_0_24()
{
  return sub_26087B990();
}

id HIDVirtualEventService.bridgedValue.getter()
{
  return v0;
}

CFStringRef HIDVirtualEventService.logDescription.getter()
{
  CFStringRef result = CFCopyDescription(v0);
  if (result)
  {
    uint64_t v2 = (__CFString *)result;
    uint64_t v3 = sub_26087B2B0();

    return (CFStringRef)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_26083DAAC()
{
  id v1 = objc_msgSend(v0, sel_delegate);
  return v1;
}

uint64_t sub_26083DAE8(uint64_t a1)
{
  objc_msgSend(v1, sel_setDelegate_, a1);
  return swift_unknownObjectRelease();
}

uint64_t (*sub_26083DB30(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_delegate);
  return sub_26083DB8C;
}

uint64_t sub_26083DB8C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 8), sel_setDelegate_, *(void *)a1);
  return swift_unknownObjectRelease();
}

id sub_26083DBD8()
{
  return objc_msgSend(v0, sel_serviceID);
}

uint64_t sub_26083DBEC(uint64_t a1, uint64_t a2)
{
  void v5[4] = a1;
  _OWORD v5[5] = a2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_2608045D0;
  v5[3] = &block_descriptor_2;
  uint64_t v3 = _Block_copy(v5);
  swift_retain();
  objc_msgSend(v2, sel_setCancelHandler_, v3);
  _Block_release(v3);
  return swift_release();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.logDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.serviceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.setCancelHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.setDispatchQueue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HIDVirtualEventServiceProtocol.dispatchEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

id sub_26083DD74(uint64_t a1)
{
  return objc_msgSend(v1, sel_dispatchEvent_, a1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

BOOL HIDVirtualService.capsLockEngaged.getter()
{
  return BKSHIDServicesIsCapsLockLightOn() != 0;
}

void HIDVirtualService.setClientCapsLockEnaged(_:client:)(int a1, id a2)
{
  id v4 = objc_msgSend(a2, sel_serviceID);
  swift_beginAccess();
  if (v4 == *(id *)(v2 + 48))
  {
    uint64_t v5 = (void *)sub_26087B450();
    uint64_t v6 = (void *)sub_26087B2A0();
    objc_msgSend(a2, sel_setProperty_forKey_, v5, v6);
  }
  else
  {
    sub_26083DFB8();
    sub_26087B7F0();
    swift_bridgeObjectRelease();
    objc_msgSend(a2, sel_serviceID);
    sub_26087BBA0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    sub_26087B330();
    sub_26087BBA0();
    sub_26087B330();
    swift_bridgeObjectRelease();
    sub_26087B330();
    sub_26085047C(-6708, 0xD000000000000018, 0x8000000260884D60);
    swift_willThrow();
  }
}

unint64_t sub_26083DFB8()
{
  unint64_t result = qword_26A8B4E38;
  if (!qword_26A8B4E38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A8B4E38);
  }
  return result;
}

BOOL HIDReport.subscript.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v3 = (int)a2;
      goto LABEL_6;
    case 2uLL:
      uint64_t v3 = *(void *)(a2 + 16);
LABEL_6:
      if ((unint64_t)(v3 - 0x1000000000000000) >> 61 == 7) {
        goto LABEL_2;
      }
      __break(1u);
      goto LABEL_8;
    default:
LABEL_2:
      if (__OFADD__(a1, 8 * v3))
      {
LABEL_8:
        __break(1u);
        JUMPOUT(0x26083E08CLL);
      }
      return (sub_26087B080() & (1 << (a1 & 7))) != 0;
  }
}

uint64_t (*HIDReport.subscript.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = HIDReport.subscript.getter(a2, *(void *)v2, *(void *)(v2 + 8));
  return sub_26083E1CC;
}

uint64_t sub_26083E1CC(uint64_t a1)
{
  return HIDReport.subscript.setter(*(unsigned __int8 *)(a1 + 16), *(void *)a1);
}

uint64_t static ReportID.keyboard.getter()
{
  return 1;
}

uint64_t static ReportID.consumer.getter()
{
  return 2;
}

uint64_t static ReportID.appleVendorKeyboard.getter()
{
  return 3;
}

uint64_t static ReportID.appleVendorTopCase.getter()
{
  return 4;
}

uint64_t static ReportID.pointer.getter()
{
  return 5;
}

uint64_t static ReportID.button.getter()
{
  return 6;
}

uint64_t static ReportID.scroll.getter()
{
  return 7;
}

uint64_t static ReportID.digitizer.getter()
{
  return 9;
}

uint64_t static ReportID.serviceFilter.getter()
{
  return 10;
}

uint64_t static ReportID.dockSwipe.getter()
{
  return 11;
}

uint64_t static ReportID.fluidTouchGesture.getter()
{
  return 12;
}

uint64_t static ReportID.navigationSwipe.getter()
{
  return 13;
}

uint64_t static ReportID.zoomToggle.getter()
{
  return 14;
}

uint64_t static ReportID.scale.getter()
{
  return 15;
}

uint64_t static ReportID.rotation.getter()
{
  return 16;
}

uint64_t static ReportID.translation.getter()
{
  return 17;
}

uint64_t static ReportID.gameController.getter()
{
  return 18;
}

uint64_t static ReportID.absolutePointer.getter()
{
  return 19;
}

uint64_t static ReportID.genericGesture.getter()
{
  return 20;
}

uint64_t HIDReport.reportID.getter(uint64_t a1, unint64_t a2)
{
  sub_2607DCED0(a1, a2);
  uint64_t v4 = OUTLINED_FUNCTION_1_23();
  unsigned int v6 = sub_2607F6A24(v4, v5);
  sub_2607DCF28(a1, a2);
  if ((v6 & 0x100) != 0) {
    return 0;
  }
  else {
    return v6;
  }
}

uint64_t HIDReport.data.getter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_1_23();
}

BOOL HIDReport.hasStorage<A>(for:at:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_11;
      }
      uint64_t v5 = HIDWORD(a3) - (int)a3;
LABEL_6:
      if ((unint64_t)(v5 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
        goto LABEL_10;
      }
LABEL_7:
      uint64_t v8 = sub_26087B910();
      if (__OFADD__(a2, v8))
      {
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x26083E3E8);
      }
      return a2 + v8 <= 8 * v5;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v5 = BYTE6(a4);
      goto LABEL_6;
  }
}

BOOL HIDReport.subscript.getter()
{
  OUTLINED_FUNCTION_3_20();
  HIDReport.offset(for:)(v1);
  return (sub_26087B080() & (1 << (v0 & 7))) != 0;
}

unint64_t HIDReport.subscript.setter(unint64_t result, Swift::Int a2)
{
  if (result > 1)
  {
    __break(1u);
  }
  else
  {
    HIDReport.offset(for:)(a2);
    sub_26087B080();
    return sub_26087AFD0();
  }
  return result;
}

uint64_t HIDReport.withUnsafeBytes<A>(_:)()
{
  return sub_26087AFE0();
}

uint64_t HIDReport.withUnsafeMutableBytes<A>(_:)()
{
  return sub_26087B000();
}

uint64_t HIDReport.init(bitCount:id:)(uint64_t a1, char a2)
{
  if ((a1 & 7) != 0) {
    uint64_t v4 = (a1 >> 3) + 1;
  }
  else {
    uint64_t v4 = a1 >> 3;
  }
  v7[0] = MEMORY[0x26121C470](v4);
  v7[1] = v5;
  sub_260841EB0(v7, 0);
  uint64_t result = v7[0];
  if (a1 < 8)
  {
    if (!a2) {
      return result;
    }
    __break(1u);
  }
  sub_26087AFD0();
  return v7[0];
}

uint64_t HIDReport.initialize(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x26083E714);
      }
      uint64_t v5 = (int)v5;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        break;
      }
      goto LABEL_23;
    case 3uLL:
      break;
    default:
      uint64_t v5 = BYTE6(a2);
      break;
  }
  uint64_t v9 = *v2;
  unint64_t v10 = v2[1];
  switch(v10 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(v9) - v9;
      if (__OFSUB__(HIDWORD(v9), v9)) {
        goto LABEL_24;
      }
      uint64_t v11 = (int)v11;
LABEL_11:
      if (v5 < v11) {
        return 0;
      }
LABEL_14:
      OUTLINED_FUNCTION_2_24();
      __int16 v14 = sub_2607F6A24(a1, a2);
      sub_2607DCF28(a1, a2);
      sub_2607DCED0(v9, v10);
      __int16 v15 = sub_2607F6A24(v9, v10);
      sub_2607DCF28(v9, v10);
      if ((v14 & 0x100) != 0)
      {
        if ((v15 & 0x100) == 0) {
          return 0;
        }
LABEL_19:
        OUTLINED_FUNCTION_2_24();
        sub_2607DCF28(v9, v10);
        *uint64_t v2 = a1;
        v2[1] = a2;
        return 1;
      }
      uint64_t result = 0;
      if ((v15 & 0x100) == 0 && v14 == v15) {
        goto LABEL_19;
      }
      return result;
    case 2uLL:
      uint64_t v13 = *(void *)(v9 + 16);
      uint64_t v12 = *(void *)(v9 + 24);
      BOOL v8 = __OFSUB__(v12, v13);
      uint64_t v11 = v12 - v13;
      if (!v8) {
        goto LABEL_11;
      }
      goto LABEL_25;
    case 3uLL:
      if ((v5 & 0x8000000000000000) == 0) {
        goto LABEL_14;
      }
      return 0;
    default:
      uint64_t v11 = BYTE6(v10);
      goto LABEL_11;
  }
}

uint64_t HIDReport.startIndex.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      OUTLINED_FUNCTION_2_1();
      if (!v4)
      {
        __break(1u);
        JUMPOUT(0x26083E780);
      }
      return result;
    default:
      return OUTLINED_FUNCTION_9_16(v2);
  }
  return OUTLINED_FUNCTION_9_16(v2);
}

uint64_t HIDReport.storage.getter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_1_23();
}

uint64_t HIDReport.storage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2607DCF28(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*HIDReport.storage.modify())()
{
  return nullsub_1;
}

uint64_t HIDReport.reportID.setter()
{
  return sub_26087AFD0();
}

uint64_t HIDReport.init<A>(_:)()
{
  OUTLINED_FUNCTION_3_20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v1, v0);
  uint64_t v6 = sub_26087B070();
  uint64_t v7 = OUTLINED_FUNCTION_6_19();
  v8(v7);
  return v6;
}

uint64_t sub_26083E914@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = HIDReport.reportID.getter(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t (*HIDReport.reportID.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  uint64_t v3 = OUTLINED_FUNCTION_6_19();
  sub_2607DCED0(v3, v4);
  uint64_t v5 = OUTLINED_FUNCTION_6_19();
  __int16 v7 = sub_2607F6A24(v5, v6);
  uint64_t v8 = OUTLINED_FUNCTION_6_19();
  sub_2607DCF28(v8, v9);
  if ((v7 & 0x100) != 0) {
    char v10 = 0;
  }
  else {
    char v10 = v7;
  }
  *(unsigned char *)(a1 + 8) = v10;
  return sub_26083E9B8;
}

uint64_t sub_26083E9B8()
{
  return sub_26087AFD0();
}

uint64_t sub_26083E9E4()
{
  return HIDReport.withUnsafeBytes<A>(_:)();
}

uint64_t static HIDReport.< infix(_:_:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
        JUMPOUT(0x26083EB50);
      }
      OUTLINED_FUNCTION_2_24();
      sub_2607DCED0(a1, a2);
      char v10 = sub_26084077C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_2607DCF28(a1, a2);
      break;
    case 2uLL:
      uint64_t v11 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      OUTLINED_FUNCTION_2_24();
      swift_retain();
      swift_retain();
      char v10 = sub_26084077C(v12, v13, v11, a3, a4);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      OUTLINED_FUNCTION_2_24();
      uint64_t v9 = 0;
      uint64_t v8 = 0;
      goto LABEL_7;
    default:
      OUTLINED_FUNCTION_2_24();
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v9 = a1;
LABEL_7:
      char v10 = sub_260840900(v9, v8, a3, a4);
      break;
  }
  return v10 & 1;
}

uint64_t sub_26083EB60@<X0>(void *__s1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  __s2[2] = *MEMORY[0x263EF8340];
  uint64_t v7 = v5;
  uint64_t v8 = a4;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3) {
        __break(1u);
      }
      swift_retain();
      char v21 = sub_260840848((int)a3, a3 >> 32, v8 & 0x3FFFFFFFFFFFFFFFLL, __s1, a2);
      if (v7) {
        goto LABEL_27;
      }
      LOBYTE(v17) = v21;
      uint64_t result = sub_2607DCF28(a3, v8);
      break;
    case 2uLL:
      uint64_t v8 = a4 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v18 = *(void *)(a3 + 16);
      uint64_t v19 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      char v20 = sub_260840848(v18, v19, v8, __s1, a2);
      if (v7) {
        goto LABEL_26;
      }
      LOBYTE(v17) = v20;
      swift_release();
      uint64_t result = swift_release();
      break;
    case 3uLL:
      memset(__s2, 0, 14);
      if (!__s1) {
        goto LABEL_25;
      }
      uint64_t result = memcmp(__s1, __s2, (a2 - (void)__s1) & ((a2 - (uint64_t)__s1) >> 63));
      unsigned int v17 = result >> 31;
      break;
    default:
      __s2[0] = a3;
      LOWORD(__s2[1]) = a4;
      BYTE2(__s2[1]) = BYTE2(a4);
      BYTE3(__s2[1]) = BYTE3(a4);
      BYTE4(__s2[1]) = BYTE4(a4);
      BYTE5(__s2[1]) = BYTE5(a4);
      if (!__s1)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        swift_release();
        swift_release();
        __break(1u);
LABEL_27:
        sub_2607DCF28(a3, v8);
        __break(1u);
        JUMPOUT(0x26083EDB0);
      }
      uint64_t v12 = a2 - (void)__s1;
      if (BYTE6(a4) >= a2 - (uint64_t)__s1) {
        size_t v13 = a2 - (void)__s1;
      }
      else {
        size_t v13 = BYTE6(a4);
      }
      uint64_t result = memcmp(__s1, __s2, v13);
      if (result) {
        BOOL v15 = 0;
      }
      else {
        BOOL v15 = v12 < BYTE6(v8);
      }
      char v16 = v15;
      if ((int)result >= 0) {
        LOBYTE(v17) = v16;
      }
      else {
        LOBYTE(v17) = 1;
      }
      break;
  }
  *a5 = v17 & 1;
  return result;
}

uint64_t sub_26083EDC0@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, uint64_t a4@<X3>, char *a5@<X8>)
{
  if (!__s2)
  {
    if (__s1)
    {
LABEL_18:
      __break(1u);
      return __s2;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!__s1) {
    goto LABEL_17;
  }
  uint64_t v6 = a4 - (void)__s1;
  uint64_t v7 = a3 - __s2;
  if (a3 - __s2 >= a4 - (uint64_t)__s1) {
    size_t v8 = a4 - (void)__s1;
  }
  else {
    size_t v8 = a3 - __s2;
  }
  uint64_t __s2 = memcmp(__s1, (const void *)__s2, v8);
  if (__s2) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v6 < v7;
  }
  char v10 = v9;
  if ((int)__s2 >= 0) {
    char v11 = v10;
  }
  else {
    char v11 = 1;
  }
  *a5 = v11;
  return __s2;
}

uint64_t sub_26083EE44(uint64_t a1, uint64_t a2)
{
  return static HIDReport.< infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_26083EE58(uint64_t a1, uint64_t a2)
{
  return sub_26086C100(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_26083EE6C(uint64_t a1, uint64_t a2)
{
  return sub_26086C270(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_26083EE80(uint64_t a1, uint64_t a2)
{
  return sub_26086C3D0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t HIDReport.description.getter(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 2uLL:
      if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_12;
    case 3uLL:
      return HIDReport.debugDescription.getter(a1, a2);
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v3)
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x26083EF68);
      }
      if (v2 < 32) {
        return HIDReport.debugDescription.getter(a1, a2);
      }
      HIDReport.count.getter(a1, a2);
      uint64_t v5 = sub_26087BBA0();
      sub_26087B330();
      return v5;
  }
}

uint64_t HIDReport.debugDescription.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_5;
      }
      goto LABEL_18;
    case 2uLL:
      if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_19;
    case 3uLL:
      return result;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v6)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x26083F0ECLL);
      }
      uint64_t v7 = 8 * v5;
      if (8 * v5 < 1) {
        return 0;
      }
      uint64_t v8 = 0;
      do
      {
        if (__OFADD__(v8, 8)) {
          uint64_t v9 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v9 = v8 + 8;
        }
        sub_2607DB19C(v8, a1, a2);
        sub_26081D8D8();
        sub_26087B360();
        if (sub_26087B310() <= 1)
        {
          sub_26087B330();
          swift_bridgeObjectRelease();
        }
        sub_26087B330();
        swift_bridgeObjectRelease();
        uint64_t v8 = v9;
      }
      while (v9 < v7);
      return 0;
  }
}

uint64_t sub_26083F0FC()
{
  return HIDReport.debugDescription.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_26083F104()
{
  return HIDReport.description.getter(*(void *)v0, *(void *)(v0 + 8));
}

void sub_26083F10C(void *a1, void *a2)
{
  static HIDReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t HIDReport.hash(into:)()
{
  OUTLINED_FUNCTION_3_20();
  sub_2607DCED0(v0, v1);
  OUTLINED_FUNCTION_6_19();
  sub_26087B020();
  uint64_t v2 = OUTLINED_FUNCTION_1_23();
  return sub_2607DCF28(v2, v3);
}

uint64_t HIDReport.hashValue.getter(uint64_t a1, unint64_t a2)
{
  sub_26087BCA0();
  uint64_t v4 = OUTLINED_FUNCTION_1_23();
  sub_2607DCED0(v4, v5);
  sub_26087B020();
  sub_2607DCF28(a1, a2);
  return sub_26087BD00();
}

uint64_t sub_26083F1D8()
{
  return HIDReport.hashValue.getter(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_26083F1E0()
{
  return HIDReport.hash(into:)();
}

uint64_t sub_26083F1E8()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_26087BCA0();
  sub_2607DCED0(v1, v2);
  sub_26087B020();
  sub_2607DCF28(v1, v2);
  return sub_26087BD00();
}

Swift::Int HIDReport.subscript.getter(Swift::Int a1, Swift::Int a2)
{
  Swift::Int v3 = HIDReport.offset(for:)(a1);
  Swift::Int result = HIDReport.offset(for:)(a2);
  if (result < v3)
  {
    __break(1u);
  }
  else
  {
    return sub_26087AFC0();
  }
  return result;
}

Swift::Int sub_26083F2C4@<X0>(Swift::Int *a1@<X1>, Swift::Int *a2@<X8>)
{
  Swift::Int result = HIDReport.subscript.getter(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

Swift::Int sub_26083F2F4(uint64_t *a1, uint64_t a2, Swift::Int *a3)
{
  Swift::Int v3 = *a3;
  Swift::Int v4 = a3[1];
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  sub_2607DCED0(*a1, v6);
  return HIDReport.subscript.setter(v5, v6, v3, v4);
}

Swift::Int HIDReport.subscript.setter(uint64_t a1, unint64_t a2, Swift::Int a3, Swift::Int a4)
{
  Swift::Int v7 = HIDReport.offset(for:)(a3);
  Swift::Int result = HIDReport.offset(for:)(a4);
  if (result < v7)
  {
    __break(1u);
  }
  else
  {
    sub_2608345EC(a1, a2);
    return sub_2607DCF28(a1, a2);
  }
  return result;
}

Swift::Int __swiftcall HIDReport.offset(for:)(Swift::Int a1)
{
  uint64_t v3 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v3 = (int)v1;
      break;
    case 2uLL:
      uint64_t v3 = *(void *)(v1 + 16);
      break;
    default:
      break;
  }
  BOOL v4 = __OFADD__(v3, a1 >> 3);
  Swift::Int result = v3 + (a1 >> 3);
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x26083F440);
  }
  return result;
}

void (*HIDReport.subscript.modify(void *a1, Swift::Int a2, Swift::Int a3))(uint64_t **a1, char a2)
{
  Swift::Int v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  void v7[2] = a2;
  Swift::Int v8 = HIDReport.offset(for:)(a2);
  Swift::Int result = (void (*)(uint64_t **, char))HIDReport.offset(for:)(a3);
  if ((uint64_t)result < v8)
  {
    __break(1u);
  }
  else
  {
    *Swift::Int v7 = sub_26087AFC0();
    v7[1] = v10;
    return sub_26083F510;
  }
  return result;
}

void sub_26083F510(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  Swift::Int v4 = (*a1)[3];
  unint64_t v5 = (*a1)[1];
  uint64_t v6 = **a1;
  Swift::Int v7 = HIDReport.offset(for:)((*a1)[2]);
  Swift::Int v8 = HIDReport.offset(for:)(v4);
  if ((a2 & 1) == 0)
  {
    if (v8 >= v7)
    {
      sub_2608345EC(v6, v5);
      uint64_t v9 = v6;
      unint64_t v10 = v5;
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_2607DCED0(v6, v5);
  sub_2608345EC(v6, v5);
  sub_2607DCF28(v6, v5);
  uint64_t v9 = *v3;
  unint64_t v10 = v3[1];
LABEL_6:
  sub_2607DCF28(v9, v10);
  free(v3);
}

Swift::Int __swiftcall HIDReport.shift(for:)(Swift::Int a1)
{
  return a1 & 7;
}

Swift::UInt8 __swiftcall HIDReport.mask(for:)(Swift::Int a1)
{
  return 1 << (a1 & 7);
}

BOOL sub_26083F634@<W0>(BOOL *a1@<X8>)
{
  BOOL result = HIDReport.subscript.getter();
  *a1 = result;
  return result;
}

unint64_t sub_26083F668(unint64_t *a1, uint64_t a2, Swift::Int *a3)
{
  return HIDReport.subscript.setter(*a1, *a3);
}

unint64_t (*HIDReport.subscript.modify(void *a1, Swift::Int a2))(uint64_t a1)
{
  char v3 = a2;
  a1[1] = a2;
  a1[2] = v2;
  HIDReport.offset(for:)(a2);
  *a1 = (sub_26087B080() & (1 << (v3 & 7))) != 0;
  return sub_26083F718;
}

unint64_t sub_26083F718(uint64_t a1)
{
  return HIDReport.subscript.setter(*(void *)a1, *(void *)(a1 + 8));
}

Swift::Int __swiftcall HIDReport.index(after:)(Swift::Int after)
{
  uint64_t v2 = 0;
  switch(v1 >> 62)
  {
    case 3uLL:
      goto LABEL_4;
    default:
      OUTLINED_FUNCTION_2_1();
      if (!v3)
      {
        __break(1u);
LABEL_6:
        __break(1u);
        JUMPOUT(0x26083F7A4);
      }
LABEL_4:
      if (after >= 8 * v2) {
        goto LABEL_6;
      }
      return after + 1;
  }
}

uint64_t HIDReport.endIndex.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 3uLL:
      return OUTLINED_FUNCTION_9_16(v2);
    default:
      OUTLINED_FUNCTION_2_1();
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x26083F808);
      }
      return result;
  }
  return OUTLINED_FUNCTION_9_16(v2);
}

void HIDReport.indices.getter(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 2uLL:
      if ((unint64_t)(*(void *)(a1 + 16) - 0x1000000000000000) >> 61 == 7) {
        goto LABEL_3;
      }
      goto LABEL_7;
    case 3uLL:
      return;
    default:
LABEL_3:
      OUTLINED_FUNCTION_2_1();
      if (!v4)
      {
        __break(1u);
LABEL_6:
        __break(1u);
LABEL_7:
        __break(1u);
        JUMPOUT(0x26083F8B0);
      }
      if (8 * v3 < v2) {
        goto LABEL_6;
      }
      return;
  }
}

Swift::Void __swiftcall HIDReport.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  HIDReport.offset(for:)(a1);
  unint64_t v4 = (sub_26087B080() & (1 << (a1 & 7))) != 0;
  HIDReport.offset(for:)(a2);
  unint64_t v5 = (sub_26087B080() & (1 << (a2 & 7))) != 0;
  HIDReport.subscript.setter(v5, a1);
  HIDReport.subscript.setter(v4, a2);
}

unint64_t sub_26083F978(unint64_t *a1, Swift::Int *a2)
{
  return HIDReport.subscript.setter(*a1, *a2);
}

unint64_t (*sub_26083F984(void *a1, uint64_t *a2))(uint64_t a1)
{
  uint64_t v4 = *a2;
  a1[1] = v2;
  a1[2] = v4;
  *a1 = HIDReport.subscript.getter();
  return sub_26083F9D4;
}

unint64_t sub_26083F9D4(uint64_t a1)
{
  return HIDReport.subscript.setter(*(void *)a1, *(void *)(a1 + 16));
}

Swift::Int sub_26083F9FC(uint64_t a1, Swift::Int *a2)
{
  return HIDReport.subscript.setter(*(void *)a1, *(void *)(a1 + 8), *a2, a2[1]);
}

void (*sub_26083FA10(void *a1, Swift::Int *a2))(uint64_t **a1, char a2)
{
  unint64_t v5 = malloc(0x28uLL);
  *a1 = v5;
  Swift::Int v6 = *a2;
  Swift::Int v7 = a2[1];
  v5[2] = v2;
  v5[3] = v6;
  void v5[4] = v7;
  *unint64_t v5 = HIDReport.subscript.getter(v6, v7);
  v5[1] = v8;
  return sub_26083FA80;
}

void sub_26083FA80(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    sub_2607DCED0(**a1, (*a1)[1]);
    OUTLINED_FUNCTION_10_14();
    sub_2607DCF28(*v2, v2[1]);
  }
  else
  {
    OUTLINED_FUNCTION_10_14();
  }
  free(v2);
}

Swift::Int sub_26083FAF4@<X0>(uint64_t (*a1)(BOOL *)@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = sub_26083FB20(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

Swift::Int sub_26083FB20(uint64_t (*a1)(BOOL *))
{
  return sub_260842138(a1);
}

void sub_26083FB38(Swift::Int *a1, Swift::Int *a2)
{
}

uint64_t sub_26083FB44()
{
  return sub_26087B280();
}

uint64_t sub_26083FB68()
{
  return sub_26087B270();
}

uint64_t sub_26083FB8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    JUMPOUT(0x26083FC30);
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v6 = 8 * (int)a3;
      uint64_t v7 = a3 >> 32;
      goto LABEL_7;
    case 2uLL:
      uint64_t v8 = *(void *)(a3 + 16);
      if ((unint64_t)(v8 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_16;
      }
      uint64_t v6 = 8 * v8;
      uint64_t v7 = *(void *)(a3 + 24);
LABEL_7:
      if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_14;
      }
LABEL_8:
      uint64_t v9 = 8 * v7;
      if (result < v6 || v9 < result) {
        goto LABEL_15;
      }
      return result;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = 0;
      uint64_t v7 = BYTE6(a4);
      goto LABEL_7;
  }
}

uint64_t sub_26083FC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = sub_26083FCCC(a1, a3, a4, a5);
  if (a2 < 1)
  {
    if (v9 <= 0 && v9 > a2) {
      return 0;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_26083FB8C(a1, a2, a4, a5);
}

uint64_t sub_26083FCCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = (int)a3;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (int)a3;
      goto LABEL_15;
    case 2uLL:
      uint64_t v9 = *(void *)(a3 + 16);
LABEL_15:
      if ((unint64_t)(v9 - 0x1000000000000000) >> 61 == 7) {
        goto LABEL_2;
      }
      __break(1u);
LABEL_17:
      uint64_t v13 = v10;
LABEL_19:
      if ((unint64_t)(v13 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_7:
      uint64_t v14 = HIDReport.endIndex.getter(a3, a4);
      if (a2 < 8 * v13 || v14 < a2)
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      uint64_t result = a2 - a1;
      if (__OFSUB__(a2, a1))
      {
LABEL_23:
        __break(1u);
        JUMPOUT(0x26083FDF4);
      }
      return result;
    default:
LABEL_2:
      uint64_t v11 = HIDReport.endIndex.getter(a3, a4);
      if (a1 >= 8 * v9 && v11 >= a1)
      {
        uint64_t v13 = 0;
        switch((int)v4)
        {
          case 1:
            goto LABEL_17;
          case 2:
            uint64_t v13 = *(void *)(a3 + 16);
            goto LABEL_19;
          default:
            goto LABEL_7;
        }
      }
      goto LABEL_21;
  }
}

uint64_t sub_26083FE14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HIDReport.startIndex.getter(*(void *)v1, *(void *)(v1 + 8));
  *a1 = result;
  return result;
}

uint64_t sub_26083FE40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HIDReport.endIndex.getter(*(void *)v1, *(void *)(v1 + 8));
  *a1 = result;
  return result;
}

uint64_t (*sub_26083FE6C(void *a1, Swift::Int *a2))()
{
  Swift::Int v3 = *a2;
  HIDReport.offset(for:)(*a2);
  LOBYTE(v3) = HIDReport.mask(for:)(v3);
  *a1 = (sub_26087B080() & v3) != 0;
  return nullsub_1;
}

Swift::Int sub_26083FF00@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = HIDReport.subscript.getter(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

void sub_26083FF34(void *a1@<X8>)
{
  HIDReport.indices.getter(*(void *)v1, *(void *)(v1 + 8));
  *a1 = v3;
  a1[1] = v4;
}

BOOL sub_26083FF60()
{
  return sub_260807B88(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_26083FF68()
{
  return HIDReport.count.getter(*v0, v0[1]);
}

void sub_26083FF70(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_26083FF80(uint64_t *a1, uint64_t *a2)
{
  return sub_26083FF94(*a1, *a2, a2[1]);
}

uint64_t sub_26083FF94(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result >= a2)
  {
    BOOL v4 = __OFSUB__(result, a3);
    BOOL v3 = result - a3 < 0;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v3 = 0;
  }
  if (v3 == v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_26083FFA8(uint64_t *a1, uint64_t *a2)
{
  return sub_26083FFBC(*a1, *a2, a2[1]);
}

uint64_t sub_26083FFBC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_26083FFD0(uint64_t *a1, uint64_t *a2)
{
  return sub_26083FFE8(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_26083FFE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2) {
    __break(1u);
  }
  return result;
}

Swift::Int sub_26083FFFC@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = HIDReport.index(after:)(*a1);
  *a2 = result;
  return result;
}

uint64_t *sub_26084002C(uint64_t *result)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v4 = *result;
  uint64_t v5 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v5 = v2 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v5 = *(void *)(v2 + 24);
      goto LABEL_5;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v5 = BYTE6(v3);
LABEL_5:
      if ((unint64_t)(v5 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
        goto LABEL_9;
      }
LABEL_6:
      if (v4 >= 8 * v5)
      {
LABEL_9:
        __break(1u);
        JUMPOUT(0x2608400A0);
      }
      *Swift::Int result = v4 + 1;
      return result;
  }
}

uint64_t sub_2608400B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2608400E0(*a1, *(void *)v2, *(void *)(v2 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_2608400E0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3 = __OFSUB__(a1, 1);
  uint64_t result = a1 - 1;
  if (v3)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    JUMPOUT(0x260840184);
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v5 = 8 * (int)a2;
      uint64_t v6 = a2 >> 32;
      goto LABEL_7;
    case 2uLL:
      uint64_t v7 = *(void *)(a2 + 16);
      if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_17;
      }
      uint64_t v5 = 8 * v7;
      uint64_t v6 = *(void *)(a2 + 24);
LABEL_7:
      if ((unint64_t)(v6 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_15;
      }
LABEL_8:
      uint64_t v8 = 8 * v6;
      if (result < v5 || result >= v8) {
        goto LABEL_16;
      }
      return result;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v5 = 0;
      uint64_t v6 = BYTE6(a3);
      goto LABEL_7;
  }
}

uint64_t *sub_260840194(uint64_t *result)
{
  uint64_t v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    JUMPOUT(0x260840244);
  }
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = 8 * (int)v3;
      uint64_t v6 = v3 >> 32;
      goto LABEL_7;
    case 2uLL:
      uint64_t v7 = *(void *)(v3 + 16);
      if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_17;
      }
      uint64_t v5 = 8 * v7;
      uint64_t v6 = *(void *)(v3 + 24);
LABEL_7:
      if ((unint64_t)(v6 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_15;
      }
LABEL_8:
      uint64_t v8 = 8 * v6;
      if (v2 < v5 || v2 >= v8) {
        goto LABEL_16;
      }
      *uint64_t result = v2;
      return result;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v5 = 0;
      uint64_t v6 = BYTE6(v4);
      goto LABEL_7;
  }
}

uint64_t sub_260840254@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_26083FB8C(*a1, a2, *(void *)v3, *(void *)(v3 + 8));
  *a3 = result;
  return result;
}

uint64_t sub_260840284@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_26083FC44(*a1, a2, *a3, *(void *)v4, *(void *)(v4 + 8));
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v7 & 1;
  return result;
}

uint64_t sub_2608402C0(uint64_t *a1, uint64_t *a2)
{
  return sub_26083FCCC(*a1, *a2, *(void *)v2, *(void *)(v2 + 8));
}

void sub_2608402D0(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v4 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)v2;
      goto LABEL_5;
    case 2uLL:
      uint64_t v4 = *(void *)(v2 + 16);
LABEL_5:
      if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
        JUMPOUT(0x260840330);
      }
      return;
    default:
      break;
  }
  *a1 = v2;
  a1[1] = v3;
  a1[2] = 8 * v4;
}

uint64_t sub_260840340()
{
  return _s12UniversalHID9HIDReportV5countSivg_0(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t _s12UniversalHID9HIDReportV5countSivg_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_5;
      }
      goto LABEL_8;
    case 2uLL:
      if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_9;
    case 3uLL:
      return OUTLINED_FUNCTION_9_16(v2);
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v3)
      {
        __break(1u);
LABEL_8:
        __break(1u);
LABEL_9:
        __break(1u);
        JUMPOUT(0x2608403CCLL);
      }
      return OUTLINED_FUNCTION_9_16(v2);
  }
}

void *sub_2608403DC()
{
  return sub_2608403E4(*(void *)v0, *(void *)(v0 + 8));
}

void *sub_2608403E4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2608404C4(a1, a2);
  sub_2607DCF28(a1, a2);
  return v4;
}

uint64_t sub_260840428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_26083E328(a1, a2, a3, *v3, v3[1]);
}

BOOL HIDReport.hasStorage(for:at:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_5;
      }
      goto LABEL_10;
    case 2uLL:
      if (!__OFSUB__(*(void *)(a2 + 24), *(void *)(a2 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_7;
    default:
LABEL_5:
      OUTLINED_FUNCTION_2_1();
      if (!v4)
      {
        __break(1u);
LABEL_9:
        __break(1u);
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x2608404B4);
      }
LABEL_7:
      if (__OFADD__(a1, 1)) {
        goto LABEL_9;
      }
      return a1 + 1 <= 8 * v3;
  }
}

void *sub_2608404C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_16;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if ((unint64_t)(v5 - 0x1000000000000000) >> 61 != 7)
      {
        __break(1u);
        goto LABEL_15;
      }
      uint64_t v8 = 8 * v5;
      if (!(8 * v5)) {
        return (void *)MEMORY[0x263F8EE78];
      }
      if (v8 <= 0)
      {
        uint64_t v2 = (void *)MEMORY[0x263F8EE78];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4EA8);
        uint64_t v2 = (void *)swift_allocObject();
        size_t v9 = _swift_stdlib_malloc_size(v2);
        v2[2] = v8;
        v2[3] = 2 * ((uint64_t)(v9 - 32) / 8);
      }
      sub_2607DCED0(a1, a2);
      uint64_t v10 = sub_260841734(v12, (uint64_t)(v2 + 4), v8, a1, a2);
      sub_2607DCF28(v12[0], v12[1]);
      if (v10 != v8)
      {
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        JUMPOUT(0x260840618);
      }
      return v2;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_17;
    case 3uLL:
      return v2;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

const void *sub_260840628(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B46E0);
  uint64_t v1 = (const void *)swift_allocObject();
  size_t v2 = _swift_stdlib_malloc_size(v1);
  OUTLINED_FUNCTION_5_15(2 * ((uint64_t)(v2 - 32) / 8));
  sub_260841B20(v3, v4, v5, v6);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_8_19();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

const void *sub_2608406D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4DB8);
  uint64_t v1 = (const void *)swift_allocObject();
  size_t v2 = _swift_stdlib_malloc_size(v1);
  OUTLINED_FUNCTION_5_15((2 * ((uint64_t)(v2 - 32) / 8)) | 1);
  sub_260841CB4(v3, v4, v5, v6);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_8_19();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

uint64_t sub_26084077C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_26087AED0();
  uint64_t v11 = (char *)result;
  if (result)
  {
    uint64_t result = sub_26087AEF0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  BOOL v12 = __OFSUB__(a2, a1);
  uint64_t v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v14 = sub_26087AEE0();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  char v16 = &v11[v15];
  if (v11) {
    uint64_t v17 = (uint64_t)v16;
  }
  else {
    uint64_t v17 = 0;
  }
  sub_26083EB60(v11, v17, a4, a5, &v19);
  sub_2607DCF28(a4, a5);
  if (!v5) {
    char v18 = v19;
  }
  return v18 & 1;
}

uint64_t sub_260840848(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result = sub_26087AED0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_26087AEF0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  BOOL v12 = __OFSUB__(a2, a1);
  uint64_t v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v14 = sub_26087AEE0();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = v11 + v15;
  if (v11) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  sub_26083EDC0(v11, a4, v17, a5, &v19);
  if (!v5) {
    char v18 = v19;
  }
  return v18 & 1;
}

uint64_t sub_260840900(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v11 = a2;
  char v12 = BYTE2(a2);
  char v13 = BYTE3(a2);
  char v14 = BYTE4(a2);
  char v15 = BYTE5(a2);
  sub_26083EB60(&__s1, (uint64_t)&__s1 + BYTE6(a2), a3, a4, &v9);
  uint64_t v5 = OUTLINED_FUNCTION_1_23();
  sub_2607DCF28(v5, v6);
  if (!v4) {
    char v7 = v9;
  }
  return v7 & 1;
}

uint64_t sub_260840A00(unint64_t *a1, unsigned char *a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (!a2)
  {
    uint64_t v22 = 0;
    a3 = 0;
    goto LABEL_35;
  }
  if (!a3)
  {
    uint64_t v22 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_44;
  }
  char v28 = a2;
  uint64_t v24 = a3;
  a3 = 0;
  uint64_t v7 = 0;
  char v8 = a4;
  uint64_t v41 = (uint64_t)a4 >> 32;
  unint64_t v39 = a4 >> 8;
  uint64_t v40 = BYTE6(a5);
  unint64_t v37 = a4 >> 24;
  unint64_t v38 = a4 >> 16;
  unint64_t v35 = a4 >> 40;
  unint64_t v36 = HIDWORD(a4);
  unint64_t v33 = HIBYTE(a4);
  unint64_t v34 = HIWORD(a4);
  unint64_t v31 = a5 >> 16;
  unint64_t v32 = a5 >> 8;
  unint64_t v29 = HIDWORD(a5);
  unint64_t v30 = a5 >> 24;
  uint64_t v9 = 1;
  unint64_t v10 = a5 >> 62;
  char v27 = a1;
LABEL_5:
  uint64_t v25 = a3;
  uint64_t v26 = v9;
  uint64_t v11 = v7;
  while (2)
  {
    uint64_t v12 = 0;
    switch(v10)
    {
      case 1uLL:
        uint64_t v12 = (int)a4;
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(a4 + 16);
        break;
      default:
        break;
    }
    uint64_t v13 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
    }
    switch(v10)
    {
      case 1uLL:
        if (v13 < (int)a4 || v13 >= v41) {
          goto LABEL_39;
        }
        uint64_t v16 = sub_26087AED0();
        if (!v16) {
          goto LABEL_46;
        }
        uint64_t v17 = v16;
        uint64_t v18 = sub_26087AEF0();
        uint64_t v19 = v13 - v18;
        if (!__OFSUB__(v13, v18)) {
          goto LABEL_26;
        }
        goto LABEL_41;
      case 2uLL:
        if (v13 < *(void *)(a4 + 16)) {
          goto LABEL_40;
        }
        if (v13 >= *(void *)(a4 + 24)) {
          goto LABEL_42;
        }
        uint64_t v20 = sub_26087AED0();
        if (!v20) {
          goto LABEL_47;
        }
        uint64_t v17 = v20;
        uint64_t v21 = sub_26087AEF0();
        uint64_t v19 = v13 - v21;
        if (__OFSUB__(v13, v21)) {
          goto LABEL_43;
        }
LABEL_26:
        int v14 = *(unsigned __int8 *)(v17 + v19);
LABEL_27:
        if ((v14 & (1 << (v11 & 7))) == 0)
        {
          if (++v11 == 3)
          {
            a3 = v25;
            a1 = v27;
            uint64_t v22 = 3;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t v7 = v11 + 1;
        *char v28 = v11;
        a3 = v26;
        if (v26 != v24)
        {
          ++v28;
          uint64_t v9 = v26 + 1;
          a1 = v27;
          uint64_t v22 = 3;
          if (v11 > 1) {
            goto LABEL_35;
          }
          goto LABEL_5;
        }
        uint64_t v22 = v11 + 1;
        a3 = v24;
        a1 = v27;
LABEL_35:
        *a1 = a4;
        a1[1] = a5;
        a1[2] = v22;
        return a3;
      case 3uLL:
        goto LABEL_45;
      default:
        if (v13 >= v40) {
          goto LABEL_38;
        }
        v42[0] = v8;
        v42[1] = v39;
        uint64_t v42[2] = v38;
        v42[3] = v37;
        v42[4] = v36;
        v42[5] = v35;
        v42[6] = v34;
        v42[7] = v33;
        v42[8] = a5;
        v42[9] = v32;
        v42[10] = v31;
        v42[11] = v30;
        v42[12] = v29;
        v42[13] = BYTE5(a5);
        int v14 = v42[v13];
        goto LABEL_27;
    }
  }
}

#error "260840DB4: call analysis failed (funcsize=75)"

uint64_t sub_260840E58(unint64_t *a1, unsigned char *a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  if (!a2)
  {
    a3 = 0;
    goto LABEL_35;
  }
  if (!a3)
  {
LABEL_35:
    uint64_t v10 = 1;
    goto LABEL_37;
  }
  if (a3 < 0) {
    goto LABEL_47;
  }
  char v28 = a1;
  uint64_t v7 = 0;
  char v8 = a4;
  uint64_t v36 = BYTE6(a5);
  uint64_t v37 = (uint64_t)a4 >> 32;
  unint64_t v34 = a4 >> 16;
  unint64_t v35 = a4 >> 8;
  unint64_t v32 = HIDWORD(a4);
  unint64_t v33 = a4 >> 24;
  unint64_t v30 = HIWORD(a4);
  unint64_t v31 = a4 >> 40;
  uint64_t v9 = 1;
  uint64_t v10 = 1;
  unint64_t v11 = a5 >> 62;
  uint64_t v25 = a3;
  while (2)
  {
    uint64_t v26 = v9;
    char v27 = a2;
    uint64_t v29 = v7;
    unint64_t v12 = v10 - 256;
    while (v12 <= 0xFFFFFFFFFFFFFF00)
    {
LABEL_29:
      if (++v12 == -24)
      {
        uint64_t v10 = 232;
        a3 = v29;
        goto LABEL_36;
      }
    }
    unint64_t v13 = v12 + 264;
    uint64_t v14 = 0;
    switch(v11)
    {
      case 1uLL:
        uint64_t v14 = (int)a4;
        break;
      case 2uLL:
        uint64_t v14 = *(void *)(a4 + 16);
        break;
      default:
        break;
    }
    uint64_t v15 = v14 + (v13 >> 3);
    if (__OFADD__(v14, v13 >> 3))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
    }
    switch(v11)
    {
      case 1uLL:
        if (v15 < (int)a4 || v15 >= v37) {
          goto LABEL_42;
        }
        uint64_t v18 = sub_26087AED0();
        if (!v18) {
          goto LABEL_49;
        }
        uint64_t v19 = v18;
        uint64_t v20 = sub_26087AEF0();
        uint64_t v21 = v15 - v20;
        if (!__OFSUB__(v15, v20)) {
          goto LABEL_27;
        }
        goto LABEL_44;
      case 2uLL:
        if (v15 < *(void *)(a4 + 16)) {
          goto LABEL_43;
        }
        if (v15 >= *(void *)(a4 + 24)) {
          goto LABEL_45;
        }
        uint64_t v22 = sub_26087AED0();
        if (!v22) {
          goto LABEL_50;
        }
        uint64_t v19 = v22;
        uint64_t v23 = sub_26087AEF0();
        uint64_t v21 = v15 - v23;
        if (__OFSUB__(v15, v23)) {
          goto LABEL_46;
        }
LABEL_27:
        int v16 = *(unsigned __int8 *)(v19 + v21);
LABEL_28:
        if ((v16 & (1 << (v12 & 7))) == 0) {
          goto LABEL_29;
        }
        uint64_t v10 = v12 + 257;
        uint64_t v7 = v26;
        *char v27 = v12;
        if (v26 != v25)
        {
          a2 = v27 + 1;
          uint64_t v9 = v26 + 1;
          if ((uint64_t)(v12 + 256) > 230) {
            goto LABEL_39;
          }
          continue;
        }
        uint64_t v7 = v25;
LABEL_39:
        a3 = v7;
LABEL_36:
        a1 = v28;
LABEL_37:
        *a1 = a4;
        a1[1] = a5;
        a1[2] = v10;
        return a3;
      case 3uLL:
        goto LABEL_48;
      default:
        if (v15 >= v36) {
          goto LABEL_41;
        }
        v38[0] = v8;
        v38[1] = v35;
        v38[2] = v34;
        v38[3] = v33;
        v38[4] = v32;
        v38[5] = v31;
        v38[6] = v30;
        v38[7] = HIBYTE(a4);
        __int16 v39 = a5;
        char v40 = BYTE2(a5);
        char v41 = BYTE3(a5);
        char v42 = BYTE4(a5);
        char v43 = BYTE5(a5);
        int v16 = v38[v15];
        goto LABEL_28;
    }
  }
}

uint64_t sub_260841154(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5 = a5;
  uint64_t v6 = a4;
  uint64_t v7 = a1;
  if (!a2)
  {
    uint64_t result = 0;
    goto LABEL_53;
  }
  if (!a3)
  {
    uint64_t result = 0;
    goto LABEL_53;
  }
  if (a3 < 0) {
    goto LABEL_63;
  }
  uint64_t v8 = a2;
  uint64_t v9 = 0;
  unint64_t v10 = a5;
  uint64_t v11 = a4;
  while (2)
  {
    uint64_t result = v9;
    unint64_t v5 = v10;
    uint64_t v13 = v9 + 1;
    unint64_t v14 = v10 >> 62;
    uint64_t v6 = v11;
    uint64_t v15 = (int)v11;
    uint64_t v16 = v11 >> 32;
    switch(v14)
    {
      case 1uLL:
        uint64_t v17 = v16;
        uint64_t v18 = v15;
        goto LABEL_10;
      case 2uLL:
        uint64_t v18 = *(void *)(v6 + 16);
        uint64_t v17 = *(void *)(v6 + 24);
LABEL_10:
        if (v18 != v17) {
          break;
        }
        goto LABEL_50;
      case 3uLL:
        goto LABEL_50;
      default:
        if ((v5 & 0xFF000000000000) == 0) {
          goto LABEL_50;
        }
        break;
    }
    sub_2607DCED0(v6, v5);
    uint64_t v19 = sub_260807DEC(v6, v5);
    uint64_t v21 = 0;
    switch(v20 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v19), v19)) {
          goto LABEL_61;
        }
        uint64_t v21 = HIDWORD(v19) - (int)v19;
LABEL_16:
        if (v21 < 0) {
          goto LABEL_55;
        }
LABEL_17:
        uint64_t v39 = v19;
        unint64_t v40 = v20;
        uint64_t v41 = v13;
        if (!v14)
        {
          uint64_t v25 = 0;
          uint64_t v27 = 0;
          uint64_t v24 = BYTE6(v5);
          uint64_t v26 = BYTE6(v5);
          goto LABEL_24;
        }
        if (v14 != 1)
        {
          uint64_t v25 = *(void *)(v6 + 16);
          uint64_t v24 = *(void *)(v6 + 24);
          sub_2607DCED0(v6, v5);
          if (v24 >= v25)
          {
            uint64_t v27 = *(void *)(v6 + 16);
            uint64_t v26 = *(void *)(v6 + 24);
            goto LABEL_24;
          }
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
          JUMPOUT(0x2608414A4);
        }
        sub_2607DCED0(v6, v5);
        if (v16 < (int)v6) {
          goto LABEL_54;
        }
        uint64_t v24 = v16;
        uint64_t v25 = v15;
        uint64_t v26 = v16;
        uint64_t v27 = v15;
LABEL_24:
        if (v26 < v24 || v24 < v27) {
          goto LABEL_56;
        }
        uint64_t v29 = v24 - v25;
        if (__OFSUB__(v24, v25)) {
          goto LABEL_57;
        }
        if (!v21 || v29 < 0 || v29 >= v21)
        {
          uint64_t v30 = v25 + v21;
          if (__OFADD__(v25, v21)) {
            goto LABEL_59;
          }
          if (v14)
          {
            if (v14 == 1)
            {
              uint64_t v31 = v16;
            }
            else
            {
              uint64_t v15 = *(void *)(v6 + 16);
              uint64_t v31 = *(void *)(v6 + 24);
            }
          }
          else
          {
            uint64_t v15 = 0;
            uint64_t v31 = BYTE6(v5);
          }
          if (v31 < v30 || v30 < v15) {
            goto LABEL_60;
          }
          uint64_t v33 = 0;
          switch((int)v14)
          {
            case 1:
              uint64_t v33 = v16;
              break;
            case 2:
              uint64_t v33 = *(void *)(v6 + 24);
              break;
            case 3:
              break;
            default:
              uint64_t v33 = BYTE6(v5);
              break;
          }
          uint64_t v34 = a3;
          unint64_t v35 = v40;
          uint64_t v9 = v41;
          if (v33 < v30) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v34 = a3;
          unint64_t v35 = v40;
          uint64_t v9 = v41;
        }
        uint64_t v11 = sub_26087AFC0();
        unint64_t v10 = v36;
        sub_2607DCF28(v6, v5);
        sub_2607DCF28(v6, v5);
        char v43 = &unk_270CA1398;
        uint64_t v44 = &off_270CA13B8;
        *(void *)&long long v42 = v39;
        *((void *)&v42 + 1) = v35;
        sub_2607E2B70(&v42, (uint64_t)v45);
        sub_2607E2B70(v45, v8);
        v8 += 40;
        if (v34 != v9) {
          continue;
        }
        uint64_t v6 = v11;
        unint64_t v5 = v10;
        uint64_t result = v34;
LABEL_50:
        uint64_t v7 = a1;
LABEL_53:
        *uint64_t v7 = v6;
        v7[1] = v5;
        return result;
      case 2uLL:
        uint64_t v23 = *(void *)(v19 + 16);
        uint64_t v22 = *(void *)(v19 + 24);
        uint64_t v21 = v22 - v23;
        if (!__OFSUB__(v22, v23)) {
          goto LABEL_16;
        }
        goto LABEL_62;
      case 3uLL:
        goto LABEL_17;
      default:
        uint64_t v21 = BYTE6(v20);
        goto LABEL_17;
    }
  }
}

unint64_t sub_2608414D4(unint64_t result, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v7 = (void *)result;
  if (!a2)
  {
    uint64_t v13 = 0;
    uint64_t v8 = 0;
LABEL_16:
    *uint64_t v7 = a4;
    v7[1] = a5;
    void v7[2] = v13;
    return v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    uint64_t v13 = 0;
    goto LABEL_16;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = a2;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 1;
    uint64_t v13 = 4;
    while (2)
    {
      uint64_t v16 = v10;
      uint64_t v10 = v12;
      uint64_t v14 = 8 * v11;
      uint64_t v15 = v11;
      while (1)
      {
        if ((unint64_t)(v15 - 0x1000000000000000) >> 61 != 7)
        {
          __break(1u);
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
        uint64_t result = v14 + 8;
        if (__OFADD__(v14, 8)) {
          goto LABEL_20;
        }
        uint64_t result = sub_2607DB19C(result, a4, a5);
        uint64_t v11 = v15 + 1;
        if ((result - 3) < 3u) {
          break;
        }
        v14 += 8;
        ++v15;
        if (v11 == 4)
        {
          uint64_t v8 = v16;
          goto LABEL_16;
        }
      }
      *uint64_t v9 = result;
      if (v10 == v8)
      {
        uint64_t v10 = v8;
      }
      else
      {
        ++v9;
        uint64_t v12 = v10 + 1;
        if (v15 <= 2) {
          continue;
        }
      }
      break;
    }
    uint64_t v13 = v15 + 1;
    uint64_t v8 = v10;
    goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t *sub_260841608(uint64_t *result, unsigned __int8 *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v7 = result;
  if (!a2)
  {
    uint64_t v11 = 0;
    uint64_t v8 = 0;
LABEL_19:
    *uint64_t v7 = a4;
    v7[1] = a5;
    void v7[2] = v11;
    return (uint64_t *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    uint64_t v11 = 0;
    goto LABEL_19;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = a2;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 1;
    while (1)
    {
      uint64_t v13 = v10;
      uint64_t v10 = v12;
      uint64_t v14 = v11;
      while (1)
      {
        unsigned __int8 v15 = sub_2607DB19C(8 * v14 + 8, a4, a5);
        if ((v15 - 49) > 0xCFu && v15 <= 0x21u && ((1 << v15) & 0x30003001ELL) != 0) {
          break;
        }
        BOOL v17 = v14 < 1;
        uint64_t v14 = 1;
        if (!v17)
        {
          uint64_t v11 = 2;
          uint64_t v8 = v13;
          goto LABEL_19;
        }
      }
      uint64_t v11 = v14 + 1;
      *uint64_t v9 = v15;
      if (v10 == v8) {
        goto LABEL_19;
      }
      ++v9;
      uint64_t v12 = v10 + 1;
      if (v14 > 0)
      {
        uint64_t v11 = 2;
        uint64_t v8 = v10;
        goto LABEL_19;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_260841734(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v7 = a5 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = (int)a4;
  switch(a5 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a4;
      goto LABEL_38;
    case 2uLL:
      uint64_t v5 = *(void *)(a4 + 16);
LABEL_38:
      if ((unint64_t)(v5 - 0x1000000000000000) >> 61 == 7) {
        goto LABEL_56;
      }
      __break(1u);
LABEL_40:
      v9 += v6;
      a3 = v6;
      goto LABEL_41;
    default:
      if (!a2) {
        goto LABEL_57;
      }
      break;
  }
  while (2)
  {
    if (!a3) {
      goto LABEL_58;
    }
    uint64_t v21 = a1;
    if (a3 < 0) {
      goto LABEL_52;
    }
    uint64_t v6 = 0;
    uint64_t v11 = BYTE6(a5);
    unint64_t v26 = a5 >> 8;
    unint64_t v24 = a5 >> 24;
    unint64_t v25 = a5 >> 16;
    unint64_t v27 = a5;
    unint64_t v22 = a5 >> 40;
    unint64_t v23 = HIDWORD(a5);
    uint64_t v12 = v7;
    uint64_t v31 = a3;
    uint64_t v29 = a2;
    uint64_t v30 = v9;
    uint64_t v28 = v10;
LABEL_6:
    uint64_t v13 = v6 + 1;
    uint64_t v14 = v9 + v6;
    uint64_t v7 = 0;
    uint64_t v5 = v11;
    switch(v12)
    {
      case 0:
        goto LABEL_9;
      case 1:
        uint64_t v5 = a4 >> 32;
        goto LABEL_9;
      case 2:
        uint64_t v5 = *(void *)(a4 + 24);
LABEL_9:
        uint64_t v7 = v5;
        if ((unint64_t)(v5 - 0x1000000000000000) >> 61 == 7) {
          goto LABEL_10;
        }
        __break(1u);
        goto LABEL_43;
      case 3:
LABEL_10:
        if (v14 == 8 * v7) {
          goto LABEL_40;
        }
        uint64_t v7 = 0;
        switch(v12)
        {
          case 1:
            uint64_t v7 = v10;
            break;
          case 2:
            uint64_t v7 = *(void *)(a4 + 16);
            break;
          default:
            break;
        }
        uint64_t v15 = v7 + (v14 >> 3);
        if (__OFADD__(v7, v14 >> 3))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          uint64_t v9 = 8 * v5;
          if (!a2)
          {
LABEL_57:
            a3 = 0;
            goto LABEL_58;
          }
          continue;
        }
        LODWORD(v7) = v14 & 7;
        uint64_t v5 = 1;
        switch(v12)
        {
          case 1:
            uint64_t v7 = a4 >> 32;
            if (v15 < v10 || v15 >= a4 >> 32) {
              goto LABEL_48;
            }
            a1 = (void *)sub_26087AED0();
            if (!a1) {
              goto LABEL_54;
            }
            uint64_t v19 = a1;
            a1 = (void *)sub_26087AEF0();
            uint64_t v7 = v15 - (void)a1;
            if (__OFSUB__(v15, a1)) {
              goto LABEL_50;
            }
            int v16 = *((unsigned __int8 *)v19 + v7);
            uint64_t v7 = a4 >> 32;
            goto LABEL_31;
          case 2:
            uint64_t v7 = *(void *)(a4 + 16);
            if (v15 < v7) {
              goto LABEL_46;
            }
            uint64_t v7 = *(void *)(a4 + 24);
            if (v15 >= v7) {
              goto LABEL_49;
            }
            a1 = (void *)sub_26087AED0();
            if (!a1) {
              goto LABEL_55;
            }
            BOOL v17 = a1;
            a1 = (void *)sub_26087AEF0();
            uint64_t v7 = v15 - (void)a1;
            if (__OFSUB__(v15, a1)) {
              goto LABEL_51;
            }
            int v16 = *((unsigned __int8 *)v17 + v7);
            uint64_t v7 = *(void *)(a4 + 24);
LABEL_31:
            a3 = v31;
            a2 = v29;
            uint64_t v9 = v30;
            uint64_t v10 = v28;
LABEL_32:
            uint64_t v5 = (v16 & (1 << (v14 & 7))) != 0;
            if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7) {
              goto LABEL_44;
            }
            if (v14 >= 8 * v7) {
              goto LABEL_45;
            }
            *(void *)(a2 + 8 * v6++) = v5;
            if (a3 != v13) {
              goto LABEL_6;
            }
            v9 += v13;
            break;
          case 3:
            goto LABEL_53;
          default:
            if (v15 >= v11) {
              goto LABEL_47;
            }
            v32[0] = v10;
            v32[1] = BYTE1(a4);
            v32[2] = BYTE2(a4);
            v32[3] = BYTE3(a4);
            v32[4] = BYTE4(a4);
            v32[5] = BYTE5(a4);
            v32[6] = BYTE6(a4);
            v32[7] = HIBYTE(a4);
            v32[8] = v27;
            v32[9] = v26;
            v32[10] = v25;
            v32[11] = v24;
            v32[12] = v23;
            uint64_t v7 = v11;
            v32[13] = v22;
            int v16 = v32[v15];
            goto LABEL_32;
        }
LABEL_41:
        a5 = v27;
        a1 = v21;
LABEL_58:
        *a1 = a4;
        a1[1] = a5;
        a1[2] = v9;
        return a3;
      default:
        JUMPOUT(0);
    }
  }
}

void *sub_260841B20(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_36:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_18;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    int64_t v13 = v8;
LABEL_18:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_19;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v13 = v15;
    goto LABEL_18;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    unint64_t v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_260841CB4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *unint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_260841EB0(void *result, int __c)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  unint64_t v2 = result[1];
  uint64_t v4 = result;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_2608420A4((int *)&__b, __c);
      uint64_t v5 = __b;
      unint64_t v6 = v19 | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_26087AF50();
      uint64_t v7 = v19;
      uint64_t v8 = *(void *)(__b + 16);
      uint64_t v9 = *(void *)(__b + 24);
      uint64_t v10 = sub_26087AED0();
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x260842094);
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_26087AEF0();
      uint64_t v13 = v8 - v12;
      if (__OFSUB__(v8, v12))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v14 = __OFSUB__(v9, v8);
      int64_t v15 = v9 - v8;
      if (v14) {
        goto LABEL_14;
      }
      uint64_t v16 = sub_26087AEE0();
      if (v16 >= v15) {
        size_t v17 = v15;
      }
      else {
        size_t v17 = v16;
      }
      uint64_t result = memset((void *)(v11 + v13), __c, v17);
      *uint64_t v4 = __b;
      v4[1] = v7 | 0x8000000000000000;
      return result;
    case 3uLL:
      return result;
    default:
      uint64_t __b = *result;
      LOWORD(v19) = v2;
      BYTE2(v19) = BYTE2(v2);
      BYTE3(v19) = BYTE3(v2);
      BYTE4(v19) = BYTE4(v2);
      BYTE5(v19) = BYTE5(v2);
      BYTE6(v19) = BYTE6(v2);
      uint64_t result = memset(&__b, __c, BYTE6(v2));
      uint64_t v5 = __b;
      unint64_t v6 = v19 | ((unint64_t)BYTE4(v19) << 32) | ((unint64_t)BYTE5(v19) << 40) | ((unint64_t)BYTE6(v19) << 48);
LABEL_4:
      *uint64_t v4 = v5;
      v4[1] = v6;
      return result;
  }
}

char *sub_2608420A4(int *a1, int a2)
{
  uint64_t result = (char *)sub_26087AF70();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = (char *)sub_26087AED0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  uint64_t result = (char *)sub_26087AEF0();
  uint64_t v8 = v5 - (void)result;
  if (__OFSUB__(v5, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v9 = v6 - v5;
  uint64_t v10 = sub_26087AEE0();
  if (v10 >= v9) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v10;
  }
  return (char *)memset(&v7[v8], a2, v11);
}

Swift::Int sub_260842138(uint64_t (*a1)(BOOL *))
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  Swift::Int v5 = 0;
  uint64_t v6 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      Swift::Int v5 = 8 * (int)v4;
      uint64_t v6 = v4 >> 32;
      goto LABEL_6;
    case 2uLL:
      uint64_t v7 = *(void *)(v4 + 16);
      if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_106;
      }
      Swift::Int v5 = 8 * v7;
      uint64_t v6 = *(void *)(v4 + 24);
LABEL_6:
      if ((unint64_t)(v6 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_97;
      }
LABEL_7:
      if (v5 >= 8 * v6) {
        return v5;
      }
      Swift::Int v8 = 8 * v6;
      break;
    case 3uLL:
      goto LABEL_7;
    default:
      Swift::Int v5 = 0;
      uint64_t v6 = BYTE6(v3);
      goto LABEL_6;
  }
  while (2)
  {
    unint64_t v9 = v3 >> 62;
    uint64_t v10 = 0;
    switch(v3 >> 62)
    {
      case 1uLL:
        uint64_t v10 = (int)v4;
        break;
      case 2uLL:
        uint64_t v10 = *(void *)(v4 + 16);
        break;
      default:
        break;
    }
    uint64_t v11 = v10 + (v5 >> 3);
    if (__OFADD__(v10, v5 >> 3)) {
      goto LABEL_96;
    }
    int v12 = 1 << (v5 & 7);
    uint64_t v50 = v4 >> 32;
    unint64_t v47 = HIDWORD(v3);
    unint64_t v48 = v3 >> 40;
    unint64_t v45 = v3 >> 16;
    unint64_t v46 = v3 >> 24;
    unint64_t v44 = v3 >> 8;
    switch((int)v9)
    {
      case 1:
        if (v11 < (int)v4 || v11 >= v50) {
          goto LABEL_101;
        }
        Swift::Int v49 = v5;
        int v15 = 1 << (v5 & 7);
        unint64_t v16 = v3;
        uint64_t v17 = sub_26087AED0();
        if (!v17)
        {
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
          JUMPOUT(0x26084276CLL);
        }
        uint64_t v18 = v17;
        uint64_t v19 = sub_26087AEF0();
        uint64_t v20 = v11 - v19;
        if (!__OFSUB__(v11, v19)) {
          goto LABEL_29;
        }
        goto LABEL_103;
      case 2:
        if (v11 < *(void *)(v4 + 16)) {
          goto LABEL_102;
        }
        if (v11 >= *(void *)(v4 + 24)) {
          goto LABEL_104;
        }
        Swift::Int v49 = v5;
        int v15 = 1 << (v5 & 7);
        unint64_t v16 = v3;
        uint64_t v21 = sub_26087AED0();
        if (!v21) {
          goto LABEL_113;
        }
        uint64_t v18 = v21;
        uint64_t v22 = sub_26087AEF0();
        uint64_t v20 = v11 - v22;
        if (__OFSUB__(v11, v22)) {
          goto LABEL_105;
        }
LABEL_29:
        int v13 = *(unsigned __int8 *)(v18 + v20);
        unint64_t v3 = v16;
        int v12 = v15;
        Swift::Int v5 = v49;
LABEL_30:
        BOOL v52 = (v13 & v12) != 0;
        char v23 = a1(&v52);
        uint64_t v24 = v9;
        if (v2) {
          return v5;
        }
        if (v23)
        {
          while (1)
          {
            if (__OFSUB__(v8--, 1)) {
              goto LABEL_86;
            }
            if (v9)
            {
              uint64_t v26 = v4 >> 32;
              uint64_t v27 = 8 * (int)v4;
              if (v9 != 1)
              {
                uint64_t v28 = *(void *)(v4 + 16);
                if ((unint64_t)(v28 - 0x1000000000000000) >> 61 != 7) {
                  goto LABEL_89;
                }
                uint64_t v27 = 8 * v28;
                uint64_t v26 = *(void *)(v4 + 24);
              }
            }
            else
            {
              uint64_t v26 = BYTE6(v3);
              uint64_t v27 = v24;
            }
            if ((unint64_t)(v26 - 0x1000000000000000) >> 61 != 7) {
              break;
            }
            uint64_t v29 = 8 * v26;
            if (v8 < v27 || v8 >= v29) {
              goto LABEL_87;
            }
            if (v5 >= v8) {
              return v5;
            }
            if (v9)
            {
              uint64_t v31 = (int)v4;
              if (v9 != 1) {
                uint64_t v31 = *(void *)(v4 + 16);
              }
            }
            else
            {
              uint64_t v31 = v24;
            }
            uint64_t v32 = v31 + (v8 >> 3);
            if (__OFADD__(v31, v8 >> 3)) {
              goto LABEL_88;
            }
            if (v9)
            {
              if (v9 == 1)
              {
                if (v32 < (int)v4 || v32 >= v50) {
                  goto LABEL_90;
                }
                uint64_t v34 = sub_26087AED0();
                if (!v34) {
                  goto LABEL_109;
                }
                uint64_t v35 = v34;
                uint64_t v36 = sub_26087AEF0();
                uint64_t v37 = v32 - v36;
                if (__OFSUB__(v32, v36)) {
                  goto LABEL_93;
                }
              }
              else
              {
                if (v32 < *(void *)(v4 + 16)) {
                  goto LABEL_92;
                }
                if (v32 >= *(void *)(v4 + 24)) {
                  goto LABEL_94;
                }
                uint64_t v39 = sub_26087AED0();
                if (!v39) {
                  goto LABEL_110;
                }
                uint64_t v35 = v39;
                uint64_t v40 = sub_26087AEF0();
                uint64_t v37 = v32 - v40;
                if (__OFSUB__(v32, v40)) {
                  goto LABEL_95;
                }
              }
              int v38 = *(unsigned __int8 *)(v35 + v37);
              uint64_t v24 = v9;
            }
            else
            {
              if (v32 >= BYTE6(v3)) {
                goto LABEL_91;
              }
              BOOL v52 = v4;
              LOBYTE(v53) = v3;
              HIBYTE(v53) = v44;
              char v54 = v45;
              char v55 = v46;
              char v56 = v47;
              char v57 = v48;
              int v38 = *((unsigned __int8 *)&v52 + v32);
            }
            BOOL v52 = (v38 & (1 << (v8 & 7))) != 0;
            if ((a1(&v52) & 1) == 0)
            {
              HIDReport.swapAt(_:_:)(v5, v8);
              uint64_t v4 = *v1;
              unint64_t v3 = v1[1];
              uint64_t v41 = 0;
              switch(v3 >> 62)
              {
                case 1uLL:
                  uint64_t v41 = v4 >> 32;
                  goto LABEL_81;
                case 2uLL:
                  uint64_t v41 = *(void *)(v4 + 24);
                  goto LABEL_81;
                case 3uLL:
                  goto LABEL_82;
                default:
                  uint64_t v41 = BYTE6(v3);
LABEL_81:
                  if ((unint64_t)(v41 - 0x1000000000000000) >> 61 != 7) {
                    goto LABEL_107;
                  }
LABEL_82:
                  if (v5 < 8 * v41) {
                    goto LABEL_83;
                  }
                  goto LABEL_108;
              }
            }
          }
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
        }
        if (v9)
        {
          if (v9 == 1) {
            uint64_t v42 = v4 >> 32;
          }
          else {
            uint64_t v42 = *(void *)(v4 + 24);
          }
        }
        else
        {
          uint64_t v42 = BYTE6(v3);
        }
        if ((unint64_t)(v42 - 0x1000000000000000) >> 61 != 7) {
          goto LABEL_98;
        }
        if (v5 >= 8 * v42) {
          goto LABEL_99;
        }
LABEL_83:
        if (++v5 < v8) {
          continue;
        }
        return v5;
      case 3:
        __break(1u);
        goto LABEL_112;
      default:
        if (v11 >= BYTE6(v3)) {
          goto LABEL_100;
        }
        BOOL v52 = v4;
        __int16 v53 = v3;
        char v54 = BYTE2(v3);
        char v55 = BYTE3(v3);
        char v56 = BYTE4(v3);
        char v57 = BYTE5(v3);
        int v13 = *((unsigned __int8 *)&v52 + v11);
        goto LABEL_30;
    }
  }
}

unint64_t sub_2608427B0()
{
  unint64_t result = qword_26A8B4E40;
  if (!qword_26A8B4E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E40);
  }
  return result;
}

unint64_t sub_260842800()
{
  unint64_t result = qword_26A8B4E48;
  if (!qword_26A8B4E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E48);
  }
  return result;
}

unint64_t sub_260842850()
{
  unint64_t result = qword_26A8B4E50;
  if (!qword_26A8B4E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E50);
  }
  return result;
}

unint64_t sub_2608428A0()
{
  unint64_t result = qword_26A8B4E58;
  if (!qword_26A8B4E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E58);
  }
  return result;
}

uint64_t sub_2608428EC()
{
  return sub_260842A80(&qword_26A8B4E60);
}

unint64_t sub_260842920()
{
  unint64_t result = qword_26A8B4E70;
  if (!qword_26A8B4E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E70);
  }
  return result;
}

unint64_t sub_260842970()
{
  unint64_t result = qword_26A8B4E78;
  if (!qword_26A8B4E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E78);
  }
  return result;
}

unint64_t sub_2608429C0()
{
  unint64_t result = qword_26A8B4E80;
  if (!qword_26A8B4E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E80);
  }
  return result;
}

uint64_t sub_260842A0C()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_260842A18()
{
  return sub_260842A80(&qword_26A8B4E88);
}

uint64_t sub_260842A4C()
{
  return sub_260842A80(&qword_26A8B4E90);
}

uint64_t sub_260842A80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4E68);
    sub_260842920();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_260842AF4()
{
  unint64_t result = qword_26A8B4E98;
  if (!qword_26A8B4E98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B4EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4E98);
  }
  return result;
}

uint64_t sub_260842B4C()
{
  return HIDReport.reportID.setter();
}

ValueMetadata *type metadata accessor for HIDReport()
{
  return &type metadata for HIDReport;
}

uint64_t sub_260842BA4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_24()
{
  return sub_2607DCED0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_5_15(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8_19()
{
  return sub_260842BA4();
}

uint64_t OUTLINED_FUNCTION_9_16@<X0>(uint64_t a1@<X8>)
{
  return 8 * a1;
}

Swift::Int OUTLINED_FUNCTION_10_14()
{
  return HIDReport.subscript.setter(v0, v1, v3, v2);
}

#error "260842D90: call analysis failed (funcsize=182)"

#error "260843084: call analysis failed (funcsize=170)"

uint64_t (*HIDAccelerationPoint.x.modify())()
{
  return nullsub_1;
}

double HIDAccelerationPoint.y.getter(double a1, double a2)
{
  return a2;
}

void HIDAccelerationPoint.y.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDAccelerationPoint.y.modify())()
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationSegment.m.modify())()
{
  return nullsub_1;
}

double HIDAccelerationSegment.b.getter(double a1, double a2)
{
  return a2;
}

void HIDAccelerationSegment.b.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDAccelerationSegment.b.modify())()
{
  return nullsub_1;
}

double HIDAccelerationSegment.x.getter(double a1, double a2, double a3)
{
  return a3;
}

void HIDAccelerationSegment.x.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*HIDAccelerationSegment.x.modify())()
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationTableEntry.accel.modify())()
{
  return nullsub_1;
}

uint64_t HIDAccelerationTableEntry.points.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*HIDAccelerationTableEntry.points.modify())()
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationTable.scale.modify())()
{
  return nullsub_1;
}

uint64_t HIDAccelerationTable.signature.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*HIDAccelerationTable.signature.modify())()
{
  return nullsub_1;
}

uint64_t HIDAccelerationTable.entry.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HIDAccelerationTable.entry.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*HIDAccelerationTable.entry.modify())()
{
  return nullsub_1;
}

uint64_t static HIDAccelerationTable.appleDefaultAccelerationTableSignature.getter()
{
  return 1077030960;
}

uint64_t static HIDAccelerationTable.appleMultitouchAccelerationTableSignature.getter()
{
  return 1431519786;
}

uint64_t HIDAccelerationTable.init(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  int v5 = ((uint64_t (*)(void))sub_26084359C)();
  int v6 = sub_26084359C(v4, a1, a2);
  if (v6 == 1077030960 || v6 == 1431519786)
  {
    uint64_t v9 = sub_26084367C(v4, a1, a2) << 16;
    swift_retain();
    sub_260842C94(v9, v4, a1, a2);
    swift_release();
    *(double *)&uint64_t result = (double)v5 * 0.0000152587891;
  }
  else
  {
    swift_release();
    sub_2607DCF28(a1, a2);
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t sub_26084358C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

#error "260843638: call analysis failed (funcsize=55)"

#error "260843718: call analysis failed (funcsize=56)"

void type metadata accessor for HIDAccelerationPoint()
{
}

void type metadata accessor for HIDAccelerationSegment()
{
}

void *initializeBufferWithCopyOfBuffer for HIDAccelerationTableEntry(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HIDAccelerationTableEntry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for HIDAccelerationTableEntry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDAccelerationTableEntry(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDAccelerationTableEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for HIDAccelerationTableEntry()
{
}

uint64_t destroy for HIDAccelerationTable()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12UniversalHID20HIDAccelerationTableVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HIDAccelerationTable(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HIDAccelerationTable(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDAccelerationTable(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDAccelerationTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for HIDAccelerationTable()
{
}

unint64_t sub_260843A28()
{
  unint64_t result = qword_26A8B4EB0;
  if (!qword_26A8B4EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4EB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDAccelerationTable.IndexOutOfBounds()
{
  return &type metadata for HIDAccelerationTable.IndexOutOfBounds;
}

void OUTLINED_FUNCTION_1_24(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t ButtonEvent.init(time:buttons:pressure:flags:)()
{
  return IOHIDEventCreateButtonEventWithPressure();
}

uint64_t ButtonEvent.buttonState.setter()
{
  return OUTLINED_FUNCTION_0_25();
}

uint64_t static ButtonEvent.eventType.getter()
{
  return 2;
}

uint64_t ButtonEvent.init(event:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  if (v3(v2) == 2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v4 = OUTLINED_FUNCTION_8_2();
    uint64_t v6 = v5(v4);
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t ButtonEvent.buttonClickCount.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t ButtonEvent.buttonClickCount.setter(uint64_t result)
{
  if ((unint64_t)(result - 255) >= 0xFFFFFFFFFFFFFF02) {
    return OUTLINED_FUNCTION_7_12();
  }
  __break(1u);
  return result;
}

void *(*ButtonEvent.buttonClickCount.modify(uint64_t a1, uint64_t a2))(void *result, char a2)
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_260843BBC;
}

void *sub_260843BBC(void *result, char a2)
{
  unint64_t v2 = *result - 255;
  if (a2)
  {
    if (v2 >= 0xFFFFFFFFFFFFFF02) {
      return (void *)OUTLINED_FUNCTION_7_12();
    }
    __break(1u);
  }
  if (v2 < 0xFFFFFFFFFFFFFF02)
  {
    __break(1u);
    return result;
  }
  return (void *)OUTLINED_FUNCTION_7_12();
}

uint64_t ButtonEvent.buttonMask.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t ButtonEvent.buttonMask.setter(uint64_t result)
{
  return sub_260843C8C(result);
}

void *(*ButtonEvent.buttonMask.modify(uint64_t a1, uint64_t a2))(void *result, char a2)
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  *unint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_260843C3C;
}

void *sub_260843C3C(void *result, char a2)
{
  unint64_t v2 = *result - 0xFFFFFFFFLL;
  if (a2)
  {
    if (v2 >= 0xFFFFFFFF00000002) {
      return (void *)IOHIDEventSetIntegerValue();
    }
    __break(1u);
  }
  if (v2 < 0xFFFFFFFF00000002)
  {
    __break(1u);
    return result;
  }
  return (void *)IOHIDEventSetIntegerValue();
}

uint64_t ButtonEvent.buttonNumber.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t ButtonEvent.buttonNumber.setter(uint64_t result)
{
  return sub_260843C8C(result);
}

uint64_t sub_260843C8C(uint64_t result)
{
  if ((unint64_t)(result - 0xFFFFFFFFLL) >= 0xFFFFFFFF00000002) {
    return IOHIDEventSetIntegerValue();
  }
  __break(1u);
  return result;
}

void *(*ButtonEvent.buttonNumber.modify(uint64_t a1, uint64_t a2))(void *result, char a2)
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  *unint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_260843D08;
}

void *sub_260843D08(void *result, char a2)
{
  unint64_t v2 = *result - 0xFFFFFFFFLL;
  if (a2)
  {
    if (v2 >= 0xFFFFFFFF00000002) {
      return (void *)OUTLINED_FUNCTION_0_25();
    }
    __break(1u);
  }
  if (v2 < 0xFFFFFFFF00000002)
  {
    __break(1u);
    return result;
  }
  return (void *)OUTLINED_FUNCTION_0_25();
}

uint64_t ButtonEvent.buttonPressure.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t (*ButtonEvent.buttonPressure.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *unint64_t v2 = v3;
  return sub_2608249E4;
}

BOOL ButtonEvent.buttonState.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t (*ButtonEvent.buttonState.modify(uint64_t a1, uint64_t a2))()
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = IOHIDEventGetIntegerValue() != 0;
  return sub_260843E20;
}

uint64_t sub_260843E20()
{
  return OUTLINED_FUNCTION_0_25();
}

uint64_t sub_260843E34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ButtonEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_260843E5C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = ButtonEvent.buttonClickCount.getter();
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_260843E84(uint64_t *a1)
{
  return ButtonEvent.buttonClickCount.setter(*a1);
}

uint64_t sub_260843E90(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = ButtonEvent.buttonMask.getter();
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_260843EB8(uint64_t *a1)
{
  return ButtonEvent.buttonMask.setter(*a1);
}

uint64_t sub_260843EC4(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = ButtonEvent.buttonNumber.getter();
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_260843EEC(uint64_t *a1)
{
  return ButtonEvent.buttonNumber.setter(*a1);
}

uint64_t sub_260843EF8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = ButtonEvent.buttonPressure.getter();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_260843F20(double *a1, void *a2)
{
  return ButtonEvent.buttonPressure.setter(*a2, *a1);
}

BOOL sub_260843F2C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  BOOL result = ButtonEvent.buttonState.getter();
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_260843F58()
{
  return ButtonEvent.buttonState.setter();
}

ValueMetadata *type metadata accessor for ButtonEvent()
{
  return &type metadata for ButtonEvent;
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t FixedWidthInteger.init(scaledValue:logicalMinimum:logicalMaximum:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v42 = a2;
  uint64_t v43 = a4;
  sub_26087B620();
  OUTLINED_FUNCTION_0_0();
  uint64_t v40 = v9;
  uint64_t v41 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - v10;
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (void (*)(void))((char *)&v40 - v16);
  uint64_t v18 = *(void (**)(void))(v13 + 16);
  uint64_t v44 = a1;
  OUTLINED_FUNCTION_6_20();
  v18();
  if (sub_26087B6F0() < 65)
  {
    char v22 = OUTLINED_FUNCTION_19_2();
    uint64_t v23 = sub_26087B6E0();
    uint64_t v24 = OUTLINED_FUNCTION_3_21();
    v25(v24);
    if (v22) {
      double v21 = (double)v23;
    }
    else {
      double v21 = (double)(unint64_t)v23;
    }
  }
  else
  {
    sub_2607E4518();
    sub_2607E4564();
    OUTLINED_FUNCTION_13_2();
    uint64_t v19 = OUTLINED_FUNCTION_3_21();
    v20(v19);
    double v21 = v45;
  }
  uint64_t v26 = v42;
  OUTLINED_FUNCTION_6_20();
  v18();
  if (sub_26087B6F0() <= 64)
  {
    uint64_t v28 = v26;
    char v29 = OUTLINED_FUNCTION_19_2();
    uint64_t v30 = sub_26087B6E0();
    OUTLINED_FUNCTION_11_2();
    v17();
    if (v29) {
      double v27 = (double)v30;
    }
    else {
      double v27 = (double)(unint64_t)v30;
    }
    uint64_t v26 = v28;
  }
  else
  {
    sub_2607E4518();
    sub_2607E4564();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_11_2();
    v17();
    double v27 = v45;
  }
  char v31 = OUTLINED_FUNCTION_19_2();
  double v32 = v27 * a5;
  double v33 = fabs(a5) * v21;
  if (a5 < 0.0) {
    double v32 = v33;
  }
  if (v31) {
    double v34 = v32;
  }
  else {
    double v34 = v21 + (v27 - v21) * a5;
  }
  if (v34 > v21) {
    double v35 = v34;
  }
  else {
    double v35 = v21;
  }
  if (v27 < v35) {
    double v35 = v27;
  }
  double v45 = v35;
  sub_2607E4518();
  sub_26087B6D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
    double v36 = 0.0 - v27;
    if (0.0 - v27 < INFINITY) {
      *(void *)&double v36 = ((COERCE__INT64(0.0 - v27) >> 63) | 1) + COERCE__INT64(0.0 - v27);
    }
    double v37 = -v36;
    double v38 = v21 + 0.0;
    if (v21 + 0.0 < INFINITY) {
      *(void *)&v38 += (*(uint64_t *)&v38 >> 63) | 1;
    }
    if (v34 <= v37)
    {
      if (v34 >= v38)
      {
        if (v34 > v38) {
          double v38 = v34;
        }
        if (v38 <= v37) {
          double v37 = v38;
        }
        double v45 = v37;
        sub_26087B710();
        OUTLINED_FUNCTION_2_25();
        v17();
        OUTLINED_FUNCTION_2_25();
        return ((uint64_t (*)(void))v17)();
      }
      else
      {
        OUTLINED_FUNCTION_11_2();
        v17();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v43, v44, a3);
      }
    }
    else
    {
      OUTLINED_FUNCTION_11_2();
      v17();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v43, v26, a3);
    }
  }
  else
  {
    OUTLINED_FUNCTION_2_25();
    v17();
    OUTLINED_FUNCTION_2_25();
    v17();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v43, v11, a3);
  }
}

uint64_t dispatch thunk of static HIDReportScaledValue.logicalMinimum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static HIDReportScaledValue.logicalMaximum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t OUTLINED_FUNCTION_3_21()
{
  return v0;
}

uint64_t HIDDeviceType.description.getter(char a1)
{
  uint64_t result = 0x65746F6D6552;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x657A697469676944;
      break;
    case 2:
      uint64_t result = 0x646170656D6147;
      break;
    case 3:
      uint64_t result = 0x6472616F6279654BLL;
      break;
    case 4:
      uint64_t result = 0x6573756F4DLL;
      break;
    case 5:
      uint64_t result = 0x6461706B63617254;
      break;
    default:
      return result;
  }
  return result;
}

UniversalHID::HIDDeviceType_optional __swiftcall HIDDeviceType.init(deviceTypeHint:)(Swift::String deviceTypeHint)
{
  BOOL v1 = deviceTypeHint._countAndFlagsBits == 0x6573756F4DLL && deviceTypeHint._object == (void *)0xE500000000000000;
  if (v1
    || (object = deviceTypeHint._object,
        uint64_t countAndFlagsBits = deviceTypeHint._countAndFlagsBits,
        (sub_26087BBE0() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return (UniversalHID::HIDDeviceType_optional)4;
  }
  else if (countAndFlagsBits == 0x6461706B63617254 && object == (void *)0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return (UniversalHID::HIDDeviceType_optional)5;
  }
  else
  {
    char v6 = sub_26087BBE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return (UniversalHID::HIDDeviceType_optional)5;
    }
    else {
      return (UniversalHID::HIDDeviceType_optional)6;
    }
  }
}

uint64_t sub_2608445C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x525654656C707061 && a2 == 0xED000065746F6D65;
  if (v2 || (sub_26087BBE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x657A697469676964 && a2 == 0xE900000000000072;
    if (v6 || (sub_26087BBE0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x646170656D6167 && a2 == 0xE700000000000000;
      if (v7 || (sub_26087BBE0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6472616F6279656BLL && a2 == 0xE800000000000000;
        if (v8 || (sub_26087BBE0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6573756F6DLL && a2 == 0xE500000000000000;
          if (v9 || (sub_26087BBE0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6461706B63617274 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_26087BBE0();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_260844860(char a1)
{
  uint64_t result = 0x525654656C707061;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x657A697469676964;
      break;
    case 2:
      uint64_t result = 0x646170656D6167;
      break;
    case 3:
      uint64_t result = 0x6472616F6279656BLL;
      break;
    case 4:
      uint64_t result = 0x6573756F6DLL;
      break;
    case 5:
      uint64_t result = 0x6461706B63617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260844938()
{
  return 1;
}

uint64_t sub_260844958()
{
  return 0;
}

uint64_t sub_260844968(uint64_t a1)
{
  unint64_t v2 = sub_260845BDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2608449A4(uint64_t a1)
{
  unint64_t v2 = sub_260845BDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2608449E0()
{
  return _s12UniversalHID13HIDDeviceTypeO9hashValueSivg_0();
}

uint64_t sub_260844A00()
{
  return sub_260844860(*v0);
}

uint64_t sub_260844A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2608445C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260844A30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26082AF44();
  *a1 = result;
  return result;
}

uint64_t sub_260844A58(uint64_t a1)
{
  unint64_t v2 = sub_260845A14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260844A94(uint64_t a1)
{
  unint64_t v2 = sub_260845A14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260844AD0(uint64_t a1)
{
  unint64_t v2 = sub_260845B90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260844B0C(uint64_t a1)
{
  unint64_t v2 = sub_260845B90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260844B48(uint64_t a1)
{
  unint64_t v2 = sub_260845B44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260844B84(uint64_t a1)
{
  unint64_t v2 = sub_260845B44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260844BC0(uint64_t a1)
{
  unint64_t v2 = sub_260845AF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260844BFC(uint64_t a1)
{
  unint64_t v2 = sub_260845AF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260844C38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_260844938();
  *a1 = result & 1;
  return result;
}

uint64_t sub_260844C64()
{
  return OUTLINED_FUNCTION_41();
}

uint64_t sub_260844C80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_20_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_260844CAC(uint64_t a1)
{
  unint64_t v2 = sub_260845AAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260844CE8(uint64_t a1)
{
  unint64_t v2 = sub_260845AAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260844D24(uint64_t a1)
{
  unint64_t v2 = sub_260845A60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260844D60(uint64_t a1)
{
  unint64_t v2 = sub_260845A60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260844D9C()
{
  return HIDDeviceType.description.getter(*v0);
}

uint64_t HIDDeviceType.encode(to:)(void *a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4EB8);
  OUTLINED_FUNCTION_10_2();
  uint64_t v48 = v5;
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_6_21(v6, v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4EC0);
  OUTLINED_FUNCTION_10_2();
  uint64_t v45 = v8;
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_24_2();
  uint64_t v44 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4EC8);
  OUTLINED_FUNCTION_10_2();
  uint64_t v42 = v11;
  uint64_t v43 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_24_2();
  uint64_t v41 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4ED0);
  OUTLINED_FUNCTION_10_2();
  uint64_t v39 = v14;
  uint64_t v40 = v13;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_24_2();
  uint64_t v38 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4ED8);
  OUTLINED_FUNCTION_10_2();
  uint64_t v36 = v17;
  uint64_t v37 = v16;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_9_0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4EE0);
  OUTLINED_FUNCTION_10_2();
  uint64_t v35 = v22;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_19_6();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4EE8);
  OUTLINED_FUNCTION_10_2();
  uint64_t v26 = v25;
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_9_0();
  uint64_t v30 = v29 - v28;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260845A14();
  sub_26087BD20();
  switch(a2)
  {
    case 1:
      sub_260845B90();
      OUTLINED_FUNCTION_3_22();
      uint64_t v32 = v36;
      uint64_t v31 = v37;
      goto LABEL_8;
    case 2:
      sub_260845B44();
      uint64_t v20 = v38;
      OUTLINED_FUNCTION_3_22();
      uint64_t v32 = v39;
      uint64_t v31 = v40;
      goto LABEL_8;
    case 3:
      sub_260845AF8();
      uint64_t v20 = v41;
      OUTLINED_FUNCTION_3_22();
      uint64_t v32 = v42;
      uint64_t v31 = v43;
      goto LABEL_8;
    case 4:
      sub_260845AAC();
      uint64_t v20 = v44;
      OUTLINED_FUNCTION_3_22();
      uint64_t v32 = v45;
      uint64_t v31 = v46;
      goto LABEL_8;
    case 5:
      sub_260845A60();
      uint64_t v20 = v47;
      OUTLINED_FUNCTION_3_22();
      uint64_t v32 = v48;
      uint64_t v31 = v49;
LABEL_8:
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v20, v31);
      break;
    default:
      sub_260845BDC();
      sub_26087BAF0();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v21);
      break;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v30, v24);
}

uint64_t HIDDeviceType.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F28);
  OUTLINED_FUNCTION_10_2();
  uint64_t v52 = v3;
  uint64_t v53 = v4;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_24_2();
  uint64_t v64 = v5;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F30);
  OUTLINED_FUNCTION_10_2();
  uint64_t v62 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_24_2();
  uint64_t v66 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F38);
  OUTLINED_FUNCTION_10_2();
  uint64_t v60 = v10;
  uint64_t v61 = v9;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_6_21(v11, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F40);
  OUTLINED_FUNCTION_10_2();
  uint64_t v57 = v13;
  uint64_t v58 = v12;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_24_2();
  uint64_t v63 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F48);
  OUTLINED_FUNCTION_10_2();
  uint64_t v55 = v16;
  uint64_t v56 = v15;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_9_0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F50);
  OUTLINED_FUNCTION_10_2();
  uint64_t v54 = v21;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_19_6();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F58);
  OUTLINED_FUNCTION_10_2();
  uint64_t v25 = v24;
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_9_0();
  uint64_t v29 = v28 - v27;
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260845A14();
  sub_26087BD10();
  if (v68) {
    goto LABEL_8;
  }
  uint64_t v50 = v1;
  uint64_t v51 = v19;
  uint64_t v30 = v65;
  uint64_t v69 = v25;
  uint64_t v31 = sub_26087BAE0();
  uint64_t v32 = *(void *)(v31 + 16);
  if (!v32)
  {
LABEL_7:
    uint64_t v38 = sub_26087B840();
    swift_allocError();
    uint64_t v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4F60);
    *uint64_t v40 = &type metadata for HIDDeviceType;
    sub_26087BA30();
    sub_26087B830();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v40, *MEMORY[0x263F8DCB0], v38);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v29, v23);
LABEL_8:
    uint64_t v41 = (uint64_t)v67;
    goto LABEL_9;
  }
  uint64_t v33 = v23;
  uint64_t v23 = *(unsigned __int8 *)(v31 + 32);
  sub_260845C28(1, v32, v31, v31 + 32, 0, (2 * v32) | 1);
  uint64_t v35 = v34;
  unint64_t v37 = v36;
  swift_bridgeObjectRelease();
  if (v35 != v37 >> 1)
  {
    uint64_t v23 = v33;
    goto LABEL_7;
  }
  switch(v23)
  {
    case 1:
      sub_260845B90();
      uint64_t v30 = v51;
      sub_26087BA20();
      uint64_t v44 = v55;
      uint64_t v43 = v56;
      goto LABEL_13;
    case 2:
      sub_260845B44();
      uint64_t v30 = v63;
      OUTLINED_FUNCTION_2_26();
      uint64_t v44 = v57;
      uint64_t v43 = v58;
      goto LABEL_13;
    case 3:
      sub_260845AF8();
      OUTLINED_FUNCTION_2_26();
      uint64_t v44 = v60;
      uint64_t v43 = v61;
LABEL_13:
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v30, v43);
      goto LABEL_16;
    case 4:
      sub_260845AAC();
      OUTLINED_FUNCTION_2_26();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v66, v59);
      goto LABEL_16;
    case 5:
      sub_260845A60();
      OUTLINED_FUNCTION_2_26();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v64, v52);
      swift_unknownObjectRelease();
      uint64_t v47 = OUTLINED_FUNCTION_4_17();
      v48(v47);
      uint64_t v41 = (uint64_t)v67;
      break;
    default:
      sub_260845BDC();
      OUTLINED_FUNCTION_2_26();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v20);
LABEL_16:
      swift_unknownObjectRelease();
      uint64_t v45 = OUTLINED_FUNCTION_4_17();
      v46(v45);
      uint64_t v41 = (uint64_t)v67;
      break;
  }
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v41);
  return v23;
}

uint64_t sub_2608457D0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = HIDDeviceType.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2608457FC(void *a1)
{
  return HIDDeviceType.encode(to:)(a1, *v1);
}

BOOL static HIDDeviceType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_260845828(char *a1, char *a2)
{
  return static HIDDeviceType.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_260845838()
{
  return j___s12UniversalHID13HIDDeviceTypeO9hashValueSivg_0(*v0);
}

uint64_t HIDDeviceType.init(properties:)(uint64_t a1, void *a2)
{
  strcpy((char *)v11, "DeviceTypeHint");
  HIBYTE(v11[0]) = -18;
  id v3 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_26087BC00());
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_26087B730();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_260845CA4((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    if (swift_dynamicCast())
    {
      LOBYTE(v4) = HIDDeviceType.init(deviceTypeHint:)(v10);
      if (v4 != 6)
      {
        uint64_t v5 = v4;

        return v5;
      }
    }
  }
  else
  {
    sub_26083D264((uint64_t)v12);
  }
  unsigned int v6 = HIDServiceProperties.primaryUsagePair.getter();

  unsigned int v7 = HIWORD(v6);
  uint64_t v5 = 4;
  if ((unsigned __int16)v6 == 1)
  {
    if (v7 == 5) {
      unsigned int v8 = 2;
    }
    else {
      unsigned int v8 = 4;
    }
    if (v7 == 6) {
      return 3;
    }
    else {
      return v8;
    }
  }
  else if ((unsigned __int16)v6 == 13)
  {
    switch(v7)
    {
      case 4u:
        return 1;
      case 0xCu:
        return 5;
      case 5u:
        return 0;
    }
  }
  return v5;
}

uint64_t HIDServiceProperties.deviceType.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return HIDDeviceType.init(properties:)(a1, v3);
}

unint64_t sub_260845A14()
{
  unint64_t result = qword_26A8B4EF0;
  if (!qword_26A8B4EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4EF0);
  }
  return result;
}

unint64_t sub_260845A60()
{
  unint64_t result = qword_26A8B4EF8;
  if (!qword_26A8B4EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4EF8);
  }
  return result;
}

unint64_t sub_260845AAC()
{
  unint64_t result = qword_26A8B4F00;
  if (!qword_26A8B4F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F00);
  }
  return result;
}

unint64_t sub_260845AF8()
{
  unint64_t result = qword_26A8B4F08;
  if (!qword_26A8B4F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F08);
  }
  return result;
}

unint64_t sub_260845B44()
{
  unint64_t result = qword_26A8B4F10;
  if (!qword_26A8B4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F10);
  }
  return result;
}

unint64_t sub_260845B90()
{
  unint64_t result = qword_26A8B4F18;
  if (!qword_26A8B4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F18);
  }
  return result;
}

unint64_t sub_260845BDC()
{
  unint64_t result = qword_26A8B4F20;
  if (!qword_26A8B4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F20);
  }
  return result;
}

uint64_t sub_260845C28(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_260845CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_260845D10()
{
  unint64_t result = qword_26A8B4F68;
  if (!qword_26A8B4F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F68);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDDeviceType()
{
  return &type metadata for HIDDeviceType;
}

uint64_t _s12UniversalHID13HIDDeviceTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s12UniversalHID13HIDDeviceTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260845EC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDDeviceType.CodingKeys()
{
  return &type metadata for HIDDeviceType.CodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.AppleTVRemoteCodingKeys()
{
  return &type metadata for HIDDeviceType.AppleTVRemoteCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.DigitizerCodingKeys()
{
  return &type metadata for HIDDeviceType.DigitizerCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.GamepadCodingKeys()
{
  return &type metadata for HIDDeviceType.GamepadCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.KeyboardCodingKeys()
{
  return &type metadata for HIDDeviceType.KeyboardCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.MouseCodingKeys()
{
  return &type metadata for HIDDeviceType.MouseCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.TrackpadCodingKeys()
{
  return &type metadata for HIDDeviceType.TrackpadCodingKeys;
}

unint64_t sub_260845F64()
{
  unint64_t result = qword_26A8B4F70;
  if (!qword_26A8B4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F70);
  }
  return result;
}

unint64_t sub_260845FB4()
{
  unint64_t result = qword_26A8B4F78;
  if (!qword_26A8B4F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F78);
  }
  return result;
}

unint64_t sub_260846004()
{
  unint64_t result = qword_26A8B4F80;
  if (!qword_26A8B4F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F80);
  }
  return result;
}

unint64_t sub_260846054()
{
  unint64_t result = qword_26A8B4F88;
  if (!qword_26A8B4F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F88);
  }
  return result;
}

unint64_t sub_2608460A4()
{
  unint64_t result = qword_26A8B4F90;
  if (!qword_26A8B4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F90);
  }
  return result;
}

unint64_t sub_2608460F4()
{
  unint64_t result = qword_26A8B4F98;
  if (!qword_26A8B4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4F98);
  }
  return result;
}

unint64_t sub_260846144()
{
  unint64_t result = qword_26A8B4FA0;
  if (!qword_26A8B4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FA0);
  }
  return result;
}

unint64_t sub_260846194()
{
  unint64_t result = qword_26A8B4FA8;
  if (!qword_26A8B4FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FA8);
  }
  return result;
}

unint64_t sub_2608461E4()
{
  unint64_t result = qword_26A8B4FB0;
  if (!qword_26A8B4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FB0);
  }
  return result;
}

unint64_t sub_260846234()
{
  unint64_t result = qword_26A8B4FB8;
  if (!qword_26A8B4FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FB8);
  }
  return result;
}

unint64_t sub_260846284()
{
  unint64_t result = qword_26A8B4FC0;
  if (!qword_26A8B4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FC0);
  }
  return result;
}

unint64_t sub_2608462D4()
{
  unint64_t result = qword_26A8B4FC8;
  if (!qword_26A8B4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FC8);
  }
  return result;
}

unint64_t sub_260846324()
{
  unint64_t result = qword_26A8B4FD0;
  if (!qword_26A8B4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FD0);
  }
  return result;
}

unint64_t sub_260846374()
{
  unint64_t result = qword_26A8B4FD8;
  if (!qword_26A8B4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FD8);
  }
  return result;
}

unint64_t sub_2608463C4()
{
  unint64_t result = qword_26A8B4FE0;
  if (!qword_26A8B4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FE0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_26()
{
  return sub_26087BA20();
}

uint64_t OUTLINED_FUNCTION_3_22()
{
  return sub_26087BAF0();
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return v0;
}

void OUTLINED_FUNCTION_6_21(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t RotationEvent.z.getter()
{
  return OUTLINED_FUNCTION_1_25();
}

uint64_t RotationEvent.init(time:point:flags:)()
{
  return IOHIDEventCreateRotationEvent();
}

uint64_t static RotationEvent.eventType.getter()
{
  return 5;
}

uint64_t RotationEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t (*RotationEvent.x.modify(void *a1, uint64_t a2))()
{
  a1[1] = a2;
  IOHIDEventGetFloatValue();
  *a1 = v3;
  return sub_26084651C;
}

uint64_t sub_26084651C()
{
  return OUTLINED_FUNCTION_2_27();
}

uint64_t RotationEvent.y.getter()
{
  return OUTLINED_FUNCTION_1_25();
}

uint64_t RotationEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_26();
}

uint64_t (*RotationEvent.y.modify(void *a1, uint64_t a2))()
{
  a1[1] = a2;
  IOHIDEventGetFloatValue();
  *a1 = v3;
  return sub_260846590;
}

uint64_t sub_260846590()
{
  return OUTLINED_FUNCTION_0_26();
}

uint64_t RotationEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_26();
}

uint64_t (*RotationEvent.z.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_3_23(a1, a2);
  *uint64_t v2 = v3;
  return sub_2608465EC;
}

uint64_t sub_2608465EC()
{
  return OUTLINED_FUNCTION_0_26();
}

uint64_t RotationEvent.rotation.getter()
{
  return OUTLINED_FUNCTION_1_25();
}

uint64_t RotationEvent.rotation.setter()
{
  return OUTLINED_FUNCTION_0_26();
}

uint64_t (*RotationEvent.rotation.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_3_23(a1, a2);
  *uint64_t v2 = v3;
  return sub_2608465EC;
}

uint64_t sub_260846650(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = RotationEvent.x.getter();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_260846678(double *a1, void *a2)
{
  return RotationEvent.x.setter(*a2, *a1);
}

uint64_t sub_260846684(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = RotationEvent.y.getter();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_2608466AC()
{
  return RotationEvent.y.setter();
}

uint64_t sub_2608466B8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = RotationEvent.z.getter();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_2608466E0()
{
  return RotationEvent.z.setter();
}

uint64_t sub_2608466EC(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = RotationEvent.rotation.getter();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_260846714()
{
  return RotationEvent.rotation.setter();
}

ValueMetadata *type metadata accessor for RotationEvent()
{
  return &type metadata for RotationEvent;
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_25()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_27()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_3_23(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return IOHIDEventGetFloatValue();
}

double HIDFixed.doubleValue.getter(int a1)
{
  return (double)a1 * 0.0000152587891;
}

unint64_t HIDFixed.init(doubleValue:)(double a1)
{
  uint64_t v1 = *(void *)&a1 & 0x7FF0000000000000;
  if ((*(void *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    uint64_t v2 = 0;
    return v2 | ((unint64_t)(v1 == 0x7FF0000000000000) << 32);
  }
  double v3 = round(a1 * 65536.0);
  if (v3 <= -2147483650.0) {
    double v3 = -2147483650.0;
  }
  if (v3 > 2147483650.0) {
    double v3 = 2147483650.0;
  }
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 2147483650.0)
  {
    uint64_t v2 = (int)v3;
    return v2 | ((unint64_t)(v1 == 0x7FF0000000000000) << 32);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t static HIDFixed.radix.getter()
{
  return 16;
}

uint64_t HIDFixed.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*HIDFixed.rawValue.modify())()
{
  return nullsub_1;
}

double static HIDFixed.scale.getter()
{
  return 65536.0;
}

uint64_t HIDFixed.intValue.getter(int a1)
{
  return (uint64_t)a1 >> 16;
}

uint64_t HIDFixed.init(intValue:)(uint64_t result)
{
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    return (result << 16);
  }
  __break(1u);
  return result;
}

void sub_26084689C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t static HIDFixed.zero.getter()
{
  return 0;
}

uint64_t static HIDFixed.+ infix(_:_:)(int a1, int a2)
{
  BOOL v2 = __OFADD__(a1, a2);
  uint64_t result = (a1 + a2);
  if (v2) {
    __break(1u);
  }
  return result;
}

_DWORD *static HIDFixed.+= infix(_:_:)(_DWORD *result, int a2)
{
  if (__OFADD__(*result, a2)) {
    __break(1u);
  }
  else {
    *result += a2;
  }
  return result;
}

uint64_t static HIDFixed.- infix(_:_:)(int a1, int a2)
{
  BOOL v2 = __OFSUB__(a1, a2);
  uint64_t result = (a1 - a2);
  if (v2) {
    __break(1u);
  }
  return result;
}

_DWORD *static HIDFixed.-= infix(_:_:)(_DWORD *result, int a2)
{
  if (__OFSUB__(*result, a2)) {
    __break(1u);
  }
  else {
    *result -= a2;
  }
  return result;
}

uint64_t sub_260846904@<X0>(int *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result = static HIDFixed.+ infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

_DWORD *sub_260846934(_DWORD *a1, int *a2)
{
  return static HIDFixed.+= infix(_:_:)(a1, *a2);
}

uint64_t sub_26084693C@<X0>(int *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result = static HIDFixed.- infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

_DWORD *sub_26084696C(_DWORD *a1, int *a2)
{
  return static HIDFixed.-= infix(_:_:)(a1, *a2);
}

uint64_t HIDFixed.init(integerLiteral:)(uint64_t result)
{
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    return (result << 16);
  }
  __break(1u);
  return result;
}

uint64_t sub_26084699C@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = HIDFixed.init(integerLiteral:)(*a1);
  *a2 = result;
  return result;
}

uint64_t HIDFixed.init(floatLiteral:)(double a1)
{
  unint64_t v1 = HIDFixed.init(doubleValue:)(a1);
  return OUTLINED_FUNCTION_10_15(v1);
}

uint64_t sub_2608469E4@<X0>(double *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = HIDFixed.init(floatLiteral:)(*a1);
  *a2 = result;
  return result;
}

unint64_t HIDFixed.init<A>(exactly:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v83 = *(void *)(*(void *)(a3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v81 = (char *)&v77 - v6;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  Swift::String v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_21_6();
  uint64_t v79 = v11;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_21_6();
  uint64_t v86 = v13;
  OUTLINED_FUNCTION_19_0();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v77 - v16;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_21_6();
  uint64_t v80 = v18;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_21_6();
  uint64_t v85 = v20;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_21_6();
  uint64_t v87 = v22;
  OUTLINED_FUNCTION_19_0();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v77 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v77 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v77 - v30;
  char v32 = OUTLINED_FUNCTION_1_26();
  unint64_t v84 = v17;
  unint64_t v78 = v10;
  if (v32)
  {
    if (OUTLINED_FUNCTION_4_18() < 32)
    {
LABEL_9:
      OUTLINED_FUNCTION_16_11();
      v37();
      int v38 = OUTLINED_FUNCTION_7_18();
      OUTLINED_FUNCTION_11_2();
      v39();
      char v35 = v38 < -32768;
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  char v33 = OUTLINED_FUNCTION_1_26();
  uint64_t v34 = OUTLINED_FUNCTION_4_18();
  if ((v33 & 1) == 0)
  {
    if (v34 >= 32)
    {
      char v35 = 0;
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  if (v34 > 32)
  {
LABEL_6:
    signed int v91 = -32768;
    sub_2608472E0();
    OUTLINED_FUNCTION_0_27();
    char v35 = OUTLINED_FUNCTION_11_11();
    OUTLINED_FUNCTION_11_2();
    v36();
    goto LABEL_14;
  }
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_14_9();
  sub_26087BBC0();
  char v40 = OUTLINED_FUNCTION_11_11();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v7 + 8);
  v41(v31, a2);
  OUTLINED_FUNCTION_16_11();
  v42();
  char v35 = (v40 & 1) != 0 || (int)OUTLINED_FUNCTION_7_18() < -32768;
  v41(v26, a2);
LABEL_14:
  uint64_t v88 = *(void (**)(void))(v7 + 16);
  uint64_t v89 = a1;
  OUTLINED_FUNCTION_6_22();
  v43();
  if (v35)
  {
    uint64_t v44 = *(void (**)(void))(v7 + 8);
    ((void (*)(char *, uint64_t))v44)(v29, a2);
LABEL_26:
    ((void (*)(uint64_t, uint64_t))v44)(v89, a2);
    uint64_t v54 = 0;
    unsigned __int8 v55 = 1;
LABEL_40:
    LOBYTE(v91) = v55;
    return v54 | ((unint64_t)v55 << 32);
  }
  char v45 = OUTLINED_FUNCTION_1_26();
  uint64_t v46 = OUTLINED_FUNCTION_4_18();
  if (v45)
  {
    if (v46 > 32) {
      goto LABEL_18;
    }
LABEL_25:
    int v53 = OUTLINED_FUNCTION_7_18();
    uint64_t v44 = *(void (**)(void))(v7 + 8);
    OUTLINED_FUNCTION_3_24();
    v44();
    if (v53 >= 0x8000) {
      goto LABEL_26;
    }
    goto LABEL_19;
  }
  if (v46 <= 31) {
    goto LABEL_25;
  }
LABEL_18:
  signed int v91 = 0x7FFF;
  sub_2608472E0();
  OUTLINED_FUNCTION_0_27();
  char v47 = sub_26087B250();
  uint64_t v44 = *(void (**)(void))(v7 + 8);
  OUTLINED_FUNCTION_3_24();
  v44();
  OUTLINED_FUNCTION_3_24();
  v44();
  if (v47) {
    goto LABEL_26;
  }
LABEL_19:
  uint64_t v48 = v88;
  OUTLINED_FUNCTION_6_22();
  v48();
  char v49 = OUTLINED_FUNCTION_1_26();
  uint64_t v50 = v85;
  OUTLINED_FUNCTION_6_22();
  v48();
  if ((v49 & 1) == 0)
  {
    ((void (*)(uint64_t, uint64_t))v44)(v50, a2);
    goto LABEL_28;
  }
  uint64_t v51 = OUTLINED_FUNCTION_4_18();
  OUTLINED_FUNCTION_2_28();
  v44();
  if (v51 <= 32) {
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_6_22();
  v52();
  signed int v91 = 0x80000000;
  if (OUTLINED_FUNCTION_1_26())
  {
    if (OUTLINED_FUNCTION_4_18() >= 32)
    {
LABEL_43:
      sub_2608472E0();
      OUTLINED_FUNCTION_0_27();
      char v71 = sub_26087B250();
      OUTLINED_FUNCTION_2_28();
      v44();
      OUTLINED_FUNCTION_2_28();
      unint64_t result = ((uint64_t (*)(void))v44)();
      if (v71) {
        goto LABEL_54;
      }
      goto LABEL_28;
    }
LABEL_47:
    signed int v72 = OUTLINED_FUNCTION_7_18();
    OUTLINED_FUNCTION_2_28();
    unint64_t result = ((uint64_t (*)(void))v44)();
    if (v91 > v72) {
      goto LABEL_54;
    }
    goto LABEL_28;
  }
  char v69 = OUTLINED_FUNCTION_1_26();
  uint64_t v70 = OUTLINED_FUNCTION_4_18();
  if ((v69 & 1) == 0)
  {
    if (v70 >= 32)
    {
      OUTLINED_FUNCTION_2_28();
      v44();
      goto LABEL_28;
    }
    goto LABEL_47;
  }
  if (v70 > 32) {
    goto LABEL_43;
  }
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_15_10();
  OUTLINED_FUNCTION_14_9();
  sub_26087BBC0();
  uint64_t v73 = v80;
  char v74 = sub_26087B250();
  OUTLINED_FUNCTION_2_28();
  v44();
  uint64_t v61 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v78, v73, a2);
  if (v74) {
    goto LABEL_53;
  }
  signed int v75 = v91;
  signed int v76 = OUTLINED_FUNCTION_7_18();
  OUTLINED_FUNCTION_2_28();
  unint64_t result = ((uint64_t (*)(void))v44)();
  if (v75 > v76) {
    goto LABEL_54;
  }
LABEL_28:
  uint64_t v56 = v87;
  uint64_t v57 = OUTLINED_FUNCTION_4_18();
  uint64_t v58 = OUTLINED_FUNCTION_8_20();
  v59(v58);
  if (v57 < 33)
  {
    uint64_t v60 = OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_11_2();
    v44();
    if (v60 != 32 || (OUTLINED_FUNCTION_1_26() & 1) != 0) {
      goto LABEL_39;
    }
  }
  else
  {
    OUTLINED_FUNCTION_11_2();
    v44();
  }
  uint64_t v61 = v86;
  uint64_t v62 = OUTLINED_FUNCTION_8_20();
  v63(v62);
  signed int v91 = 0x7FFFFFFF;
  char v64 = OUTLINED_FUNCTION_1_26();
  uint64_t v65 = OUTLINED_FUNCTION_4_18();
  if ((v64 & 1) == 0)
  {
    if (v65 > 31)
    {
      int v90 = 0x7FFFFFFF;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v86, a2);
      sub_2608472E0();
      sub_26087B670();
      char v66 = sub_26087B250();
      OUTLINED_FUNCTION_3_24();
      v44();
      goto LABEL_38;
    }
LABEL_36:
    OUTLINED_FUNCTION_7_18();
    OUTLINED_FUNCTION_11_2();
    v44();
LABEL_39:
    int v67 = OUTLINED_FUNCTION_7_18();
    ((void (*)(uint64_t, uint64_t))v44)(v56, a2);
    ((void (*)(uint64_t, uint64_t))v44)(v89, a2);
    unsigned __int8 v55 = 0;
    uint64_t v54 = (v67 << 16);
    goto LABEL_40;
  }
  if (v65 <= 32) {
    goto LABEL_36;
  }
  sub_2608472E0();
  OUTLINED_FUNCTION_0_27();
  char v66 = sub_26087B250();
  OUTLINED_FUNCTION_3_24();
  v44();
LABEL_38:
  OUTLINED_FUNCTION_3_24();
  v44();
  if ((v66 & 1) == 0) {
    goto LABEL_39;
  }
  __break(1u);
LABEL_53:
  unint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v61, a2);
LABEL_54:
  __break(1u);
  return result;
}

unint64_t sub_2608472E0()
{
  unint64_t result = qword_26A8B4FE8;
  if (!qword_26A8B4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FE8);
  }
  return result;
}

uint64_t HIDFixed.magnitude.getter(uint64_t result)
{
  if ((int)result >= 0) {
    return result;
  }
  else {
    return -(int)result;
  }
}

unint64_t sub_260847338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = HIDFixed.init<A>(exactly:)(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(unsigned char *)(a4 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_260847368@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = HIDFixed.magnitude.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_260847394@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = static HIDFixed.* infix(_:_:)(*a1);
  *a2 = result;
  return result;
}

uint64_t static HIDFixed.* infix(_:_:)(int a1)
{
  double v1 = OUTLINED_FUNCTION_9_17(a1);
  unint64_t v3 = HIDFixed.init(doubleValue:)(v1 * v2);
  return OUTLINED_FUNCTION_10_15(v3);
}

uint64_t sub_2608473E8(int *a1)
{
  return static HIDFixed.*= infix(_:_:)(a1);
}

uint64_t static HIDFixed.*= infix(_:_:)(int *a1)
{
  uint64_t result = static HIDFixed.* infix(_:_:)(*a1);
  *a1 = result;
  return result;
}

uint64_t static HIDFixed.* infix(_:_:)()
{
  OUTLINED_FUNCTION_17_8();
  unint64_t v2 = HIDFixed.init(doubleValue:)(v1 * v0);
  return OUTLINED_FUNCTION_10_15(v2);
}

uint64_t static HIDFixed./ infix(_:_:)(int a1)
{
  double v1 = OUTLINED_FUNCTION_9_17(a1);
  unint64_t v3 = HIDFixed.init(doubleValue:)(v1 / v2);
  return OUTLINED_FUNCTION_10_15(v3);
}

uint64_t static HIDFixed./= infix(_:_:)(int *a1)
{
  uint64_t result = static HIDFixed./ infix(_:_:)(*a1);
  *a1 = result;
  return result;
}

uint64_t static HIDFixed./ infix(_:_:)()
{
  OUTLINED_FUNCTION_17_8();
  unint64_t v2 = HIDFixed.init(doubleValue:)(v1 / v0);
  return OUTLINED_FUNCTION_10_15(v2);
}

uint64_t HIDFixed.description.getter(int a1)
{
  return MEMORY[0x270F9DD60]((double)a1 * 0.0000152587891);
}

unint64_t sub_2608474CC()
{
  unint64_t result = qword_26A8B4FF0;
  if (!qword_26A8B4FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FF0);
  }
  return result;
}

uint64_t sub_260847518()
{
  return MEMORY[0x263F8D748];
}

uint64_t sub_260847524()
{
  return MEMORY[0x263F8D5B0];
}

unint64_t sub_260847534()
{
  unint64_t result = qword_26A8B4FF8;
  if (!qword_26A8B4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B4FF8);
  }
  return result;
}

unint64_t sub_260847584()
{
  unint64_t result = qword_26A8B5000;
  if (!qword_26A8B5000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5000);
  }
  return result;
}

uint64_t sub_2608475D0()
{
  return MEMORY[0x263F8E560];
}

uint64_t sub_2608475DC()
{
  return MEMORY[0x263F8E580];
}

uint64_t sub_2608475E8()
{
  return HIDFixed.description.getter(*v0);
}

ValueMetadata *type metadata accessor for HIDFixed()
{
  return &type metadata for HIDFixed;
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return sub_26087B670();
}

uint64_t OUTLINED_FUNCTION_1_26()
{
  return sub_26087B700();
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return sub_26087B6F0();
}

uint64_t OUTLINED_FUNCTION_7_18()
{
  return sub_26087B6E0();
}

uint64_t OUTLINED_FUNCTION_8_20()
{
  return v0;
}

double OUTLINED_FUNCTION_9_17(int a1)
{
  return (double)a1 * 0.0000152587891;
}

uint64_t OUTLINED_FUNCTION_10_15(uint64_t result)
{
  if ((result & 0x100000000) != 0) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t OUTLINED_FUNCTION_11_11()
{
  return sub_26087B250();
}

uint64_t OUTLINED_FUNCTION_14_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return sub_26087BBF0();
}

double ScrollEvent.delta.getter()
{
  IOHIDEventGetFloatValue();
  double v1 = v0;
  OUTLINED_FUNCTION_1_27();
  IOHIDEventGetFloatValue();
  IOHIDEventGetFloatValue();
  return v1;
}

uint64_t ScrollEvent.init(time:delta:flags:)()
{
  return IOHIDEventCreateScrollEvent();
}

uint64_t static ScrollEvent.eventType.getter()
{
  return 6;
}

uint64_t ScrollEvent.init(event:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  if (v3(v2) == 6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v4 = OUTLINED_FUNCTION_8_2();
    uint64_t v6 = v5(v4);
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

uint64_t ScrollEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t (*ScrollEvent.x.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_2608478BC;
}

uint64_t sub_2608478BC()
{
  return OUTLINED_FUNCTION_3_25();
}

uint64_t ScrollEvent.y.getter()
{
  return OUTLINED_FUNCTION_4_19();
}

uint64_t ScrollEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_28();
}

uint64_t (*ScrollEvent.y.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_260847928;
}

uint64_t sub_260847928()
{
  return OUTLINED_FUNCTION_0_28();
}

uint64_t ScrollEvent.z.getter()
{
  return OUTLINED_FUNCTION_4_19();
}

uint64_t ScrollEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_28();
}

uint64_t (*ScrollEvent.z.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *uint64_t v2 = v3;
  return sub_260847998;
}

uint64_t sub_260847998()
{
  return OUTLINED_FUNCTION_0_28();
}

BOOL ScrollEvent.isPixels.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t ScrollEvent.isPixels.setter()
{
  return OUTLINED_FUNCTION_2_29();
}

uint64_t (*ScrollEvent.isPixels.modify(uint64_t a1, uint64_t a2))()
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = IOHIDEventGetIntegerValue() != 0;
  return sub_260847A3C;
}

uint64_t sub_260847A3C()
{
  return OUTLINED_FUNCTION_2_29();
}

uint64_t sub_260847A4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ScrollEvent.init(event:)(a1);
  *a2 = result;
  return result;
}

void sub_260847A74(uint64_t a1@<X8>)
{
  *(double *)a1 = ScrollEvent.delta.getter();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
}

uint64_t sub_260847AA4()
{
  return ScrollEvent.delta.setter();
}

uint64_t ScrollEvent.delta.setter()
{
  IOHIDEventSetFloatValue();
  OUTLINED_FUNCTION_1_27();
  IOHIDEventSetFloatValue();
  return IOHIDEventSetFloatValue();
}

uint64_t (*ScrollEvent.delta.modify(void *a1, uint64_t a2))()
{
  a1[3] = a2;
  IOHIDEventGetFloatValue();
  uint64_t v4 = v3;
  IOHIDEventGetFloatValue();
  uint64_t v6 = v5;
  IOHIDEventGetFloatValue();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  return sub_260847BA8;
}

uint64_t sub_260847BA8()
{
  IOHIDEventSetFloatValue();
  OUTLINED_FUNCTION_1_27();
  IOHIDEventSetFloatValue();
  return IOHIDEventSetFloatValue();
}

uint64_t sub_260847C0C(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = ScrollEvent.x.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_260847C34(double *a1, void *a2)
{
  return ScrollEvent.x.setter(*a2, *a1);
}

uint64_t sub_260847C40(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = ScrollEvent.y.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_260847C68()
{
  return ScrollEvent.y.setter();
}

uint64_t sub_260847C74(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  uint64_t result = ScrollEvent.z.getter();
  *double v1 = v3;
  return result;
}

uint64_t sub_260847C9C()
{
  return ScrollEvent.z.setter();
}

BOOL sub_260847CA8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_3(a1);
  BOOL result = ScrollEvent.isPixels.getter();
  *double v1 = result;
  return result;
}

uint64_t sub_260847CD4()
{
  return ScrollEvent.isPixels.setter();
}

ValueMetadata *type metadata accessor for ScrollEvent()
{
  return &type metadata for ScrollEvent;
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_3_25()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return IOHIDEventGetFloatValue();
}

uint64_t HIDServicePropertyKey.rawValue.getter()
{
  return OUTLINED_FUNCTION_1_23();
}

uint64_t HIDServicePropertyKey.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HIDServicePropertyKey.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t HIDServicePropertyKey.stringValue.getter()
{
  return OUTLINED_FUNCTION_1_23();
}

UniversalHID::HIDServicePropertyKey_optional __swiftcall HIDServicePropertyKey.init(stringValue:)(Swift::String stringValue)
{
  double v1 = (void *)static HIDServicePropertyKey.allCases.getter();
  uint64_t v2 = OUTLINED_FUNCTION_1_23();
  char v4 = sub_26085369C(v2, v3, v1);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = OUTLINED_FUNCTION_1_23();
  result.value.rawValue._object = v6;
  result.value.rawValue._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t static HIDServicePropertyKey.allCases.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B5018);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2608817D0;
  *(void *)(v0 + 32) = 0x656369767265535FLL;
  *(void *)(v0 + 40) = 0xEA00000000004449;
  strcpy((char *)(v0 + 48), "HIDAccelCurves");
  *(unsigned char *)(v0 + 63) = -18;
  *(void *)(v0 + 64) = 0xD000000000000014;
  *(void *)(v0 + 72) = 0x8000000260884E20;
  strcpy((char *)(v0 + 80), "Authenticated");
  *(_WORD *)(v0 + 94) = -4864;
  *(void *)(v0 + 96) = 0x6E492D746C697542;
  *(void *)(v0 + 104) = 0xE800000000000000;
  strcpy((char *)(v0 + 112), "CapsLockDelay");
  *(_WORD *)(v0 + 126) = -4864;
  OUTLINED_FUNCTION_4_20();
  *(void *)(v1 + 128) = v2;
  *(void *)(v1 + 136) = v3;
  strcpy((char *)(v1 + 144), "DeviceTypeHint");
  *(unsigned char *)(v1 + 159) = -18;
  OUTLINED_FUNCTION_1_28();
  *(void *)(v4 + 160) = v6;
  *(void *)(v4 + 168) = v5;
  OUTLINED_FUNCTION_4_20();
  *(void *)(v7 + 176) = v8;
  *(void *)(v7 + 184) = v9;
  OUTLINED_FUNCTION_1_28();
  v10[24] = 0xD000000000000014;
  v10[25] = v11;
  v10[26] = 0x5579616C70736964;
  v10[27] = 0xEB00000000444955;
  OUTLINED_FUNCTION_1_28();
  *(void *)(v12 + 224) = v14;
  *(void *)(v12 + 232) = v13;
  OUTLINED_FUNCTION_1_28();
  *(void *)(v15 + 240) = v17;
  *(void *)(v15 + 248) = v16;
  OUTLINED_FUNCTION_1_28();
  *(void *)(v18 + 256) = v20;
  *(void *)(v18 + 264) = v19;
  OUTLINED_FUNCTION_8_21();
  *(void *)(v21 + 272) = v22;
  *(void *)(v21 + 280) = v23;
  OUTLINED_FUNCTION_2_30();
  *(void *)(v24 + 288) = v25;
  *(void *)(v24 + 296) = v26;
  OUTLINED_FUNCTION_8_21();
  v27[38] = v29;
  v27[39] = v28;
  v27[40] = 0x437972746E756F43;
  v27[41] = 0xEB0000000065646FLL;
  OUTLINED_FUNCTION_8_21();
  *(void *)(v30 + 336) = v31;
  *(void *)(v30 + 344) = v32;
  strcpy((char *)(v30 + 352), "StandardType");
  *(unsigned char *)(v30 + 365) = 0;
  *(_WORD *)(v30 + 366) = -5120;
  strcpy((char *)(v30 + 368), "Manufacturer");
  *(unsigned char *)(v30 + 381) = 0;
  *(_WORD *)(v30 + 382) = -5120;
  *(void *)(v30 + 384) = v33;
  *(void *)(v30 + 392) = 0x8000000260884F80;
  OUTLINED_FUNCTION_2_30();
  *(void *)(v34 + 400) = v35;
  *(void *)(v34 + 408) = v36;
  OUTLINED_FUNCTION_8_21();
  *(void *)(v37 + 416) = v38;
  *(void *)(v37 + 424) = v39;
  OUTLINED_FUNCTION_2_30();
  *(void *)(v40 + 432) = v41;
  *(void *)(v40 + 440) = v42;
  OUTLINED_FUNCTION_2_30();
  *(void *)(v43 + 448) = v44;
  *(void *)(v43 + 456) = v45;
  OUTLINED_FUNCTION_2_30();
  *(void *)(v46 + 464) = v47;
  *(void *)(v46 + 472) = v48;
  OUTLINED_FUNCTION_6_23();
  *(void *)(v49 + 480) = 0xD000000000000014;
  *(void *)(v49 + 488) = v50;
  OUTLINED_FUNCTION_6_23();
  v51[62] = 0xD000000000000014;
  v51[63] = v52;
  v51[64] = 0xD000000000000014;
  OUTLINED_FUNCTION_6_23();
  *(void *)(v53 + 520) = v54;
  strcpy((char *)(v53 + 528), "PrimaryUsage");
  *(unsigned char *)(v53 + 541) = 0;
  *(_WORD *)(v53 + 542) = -5120;
  *(void *)(v53 + 544) = v55;
  OUTLINED_FUNCTION_6_23();
  *(void *)(v56 + 552) = v57;
  *(void *)(v56 + 560) = 0x746375646F7250;
  *(void *)(v56 + 568) = 0xE700000000000000;
  *(void *)(v56 + 576) = 0x49746375646F7250;
  *(void *)(v56 + 584) = 0xE900000000000044;
  *(void *)(v56 + 592) = v58;
  *(void *)(v56 + 600) = 0x80000002608850B0;
  strcpy((char *)(v56 + 608), "ReportInterval");
  *(unsigned char *)(v56 + 623) = -18;
  *(void *)(v56 + 624) = v59;
  *(void *)(v56 + 632) = 0x80000002608850D0;
  *(void *)(v56 + 640) = v60;
  *(void *)(v56 + 648) = 0x80000002608850F0;
  *(void *)(v56 + 656) = 0xD00000000000001DLL;
  OUTLINED_FUNCTION_3_26();
  *(void *)(v61 + 664) = v62;
  *(void *)(v61 + 672) = 0xD000000000000014;
  OUTLINED_FUNCTION_3_26();
  *(void *)(v63 + 680) = v64;
  *(void *)(v63 + 688) = 0xD000000000000013;
  OUTLINED_FUNCTION_3_26();
  *(void *)(v65 + 696) = v66;
  *(void *)(v65 + 704) = v67;
  OUTLINED_FUNCTION_3_26();
  *(void *)(v68 + 712) = v69;
  *(void *)(v68 + 720) = v70;
  OUTLINED_FUNCTION_3_26();
  v71[91] = v72;
  v71[92] = 0xD000000000000018;
  v71[93] = 0x80000002608851B0;
  v71[94] = v73;
  v71[95] = 0x80000002608851D0;
  v71[96] = 0x726F70736E617254;
  v71[97] = v74 | 0x30;
  v71[98] = 0xD000000000000017;
  OUTLINED_FUNCTION_4_20();
  *(void *)(v75 + 792) = v76;
  *(void *)(v75 + 800) = v77;
  OUTLINED_FUNCTION_4_20();
  *(void *)(v78 + 808) = v79;
  *(void *)(v78 + 816) = v80;
  OUTLINED_FUNCTION_4_20();
  *(void *)(v81 + 824) = v82;
  *(void *)(v81 + 832) = v83;
  OUTLINED_FUNCTION_1_28();
  *(void *)(v84 + 840) = v85;
  if (qword_26A8B4548 != -1) {
    swift_once();
  }
  uint64_t v86 = unk_26A8B5010;
  *(void *)(v0 + 848) = qword_26A8B5008;
  *(void *)(v0 + 856) = v86;
  *(void *)(v0 + 864) = 0xD000000000000015;
  OUTLINED_FUNCTION_1_28();
  *(void *)(v0 + 872) = v87;
  *(void *)(v0 + 880) = 0x4449726F646E6556;
  *(void *)(v0 + 888) = 0xE800000000000000;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t HIDServicePropertyKey.intValue.getter()
{
  return 0;
}

UniversalHID::HIDServicePropertyKey_optional __swiftcall HIDServicePropertyKey.init(intValue:)(Swift::Int intValue)
{
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  result.value.rawValue._object = v2;
  result.value.rawValue._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t static HIDServicePropertyKey._serviceID.getter()
{
  return 0x656369767265535FLL;
}

void static HIDServicePropertyKey.accelParametricCurves.getter()
{
}

unint64_t static HIDServicePropertyKey.appleVendorSupported.getter()
{
  return OUTLINED_FUNCTION_0_29(20);
}

uint64_t static HIDServicePropertyKey.authenticatedDevice.getter()
{
  return 0x69746E6568747541;
}

uint64_t static HIDServicePropertyKey.builtIn.getter()
{
  return 0x6E492D746C697542;
}

uint64_t static HIDServicePropertyKey.capsLockDelay.getter()
{
  return 0x6B636F4C73706143;
}

unint64_t static HIDServicePropertyKey.capsLockLanguageSwitch.getter()
{
  return OUTLINED_FUNCTION_0_29(22);
}

void static HIDServicePropertyKey.deviceTypeHint.getter()
{
}

unint64_t static HIDServicePropertyKey.deviceUsagePairs.getter()
{
  return OUTLINED_FUNCTION_0_29(16);
}

unint64_t static HIDServicePropertyKey.disableAccessibilityEventTranslation.getter()
{
  return OUTLINED_FUNCTION_0_29(36);
}

unint64_t static HIDServicePropertyKey.dispatchScrollEvents.getter()
{
  return OUTLINED_FUNCTION_0_29(20);
}

uint64_t static HIDServicePropertyKey.displayIdentifier.getter()
{
  return 0x5579616C70736964;
}

unint64_t static HIDServicePropertyKey.displayIntegrated.getter()
{
  return OUTLINED_FUNCTION_0_29(17);
}

unint64_t static HIDServicePropertyKey.eventServiceProperties.getter()
{
  return OUTLINED_FUNCTION_0_29(25);
}

unint64_t static HIDServicePropertyKey.exclusivityIdentifier.getter()
{
  return OUTLINED_FUNCTION_0_29(21);
}

unint64_t static HIDServicePropertyKey.faceTimeRemoteControlSessionID.getter()
{
  return OUTLINED_FUNCTION_0_29(30);
}

unint64_t static HIDServicePropertyKey.fnKeyboardUsageMap.getter()
{
  return OUTLINED_FUNCTION_0_29(18);
}

unint64_t static HIDServicePropertyKey.ignoresNaturalScrollingPreference.getter()
{
  return OUTLINED_FUNCTION_0_29(33);
}

uint64_t static HIDServicePropertyKey.keyboardCountryCode.getter()
{
  return 0x437972746E756F43;
}

unint64_t static HIDServicePropertyKey.keyboardLanguage.getter()
{
  return OUTLINED_FUNCTION_0_29(16);
}

void static HIDServicePropertyKey.keyboardStandardType.getter()
{
}

void static HIDServicePropertyKey.manufacturer.getter()
{
}

unint64_t static HIDServicePropertyKey.mouseAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_29(20);
}

unint64_t static HIDServicePropertyKey.mouseScrollAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_29(26);
}

unint64_t static HIDServicePropertyKey.platformInputModeConfiguration.getter()
{
  return OUTLINED_FUNCTION_0_29(30);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationMultiplier.getter()
{
  return OUTLINED_FUNCTION_0_29(32);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationSupport.getter()
{
  return OUTLINED_FUNCTION_0_29(30);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationTable.getter()
{
  return OUTLINED_FUNCTION_0_29(27);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationType.getter()
{
  return OUTLINED_FUNCTION_0_29(26);
}

unint64_t static HIDServicePropertyKey.pointerButtonCount.getter()
{
  return OUTLINED_FUNCTION_0_29(21);
}

unint64_t static HIDServicePropertyKey.pointerButtonMode.getter()
{
  return OUTLINED_FUNCTION_0_29(20);
}

unint64_t static HIDServicePropertyKey.pointerReportRate.getter()
{
  return OUTLINED_FUNCTION_0_29(20);
}

unint64_t static HIDServicePropertyKey.pointerResolution.getter()
{
  return OUTLINED_FUNCTION_0_29(20);
}

void static HIDServicePropertyKey.primaryUsage.getter()
{
}

unint64_t static HIDServicePropertyKey.primaryUsagePage.getter()
{
  return OUTLINED_FUNCTION_0_29(16);
}

uint64_t static HIDServicePropertyKey.product.getter()
{
  return 0x746375646F7250;
}

uint64_t static HIDServicePropertyKey.productID.getter()
{
  return 0x49746375646F7250;
}

unint64_t static HIDServicePropertyKey.reportDescriptor.getter()
{
  return OUTLINED_FUNCTION_0_29(16);
}

void static HIDServicePropertyKey.reportInterval.getter()
{
}

unint64_t static HIDServicePropertyKey.scrollAccelerationSupport.getter()
{
  return OUTLINED_FUNCTION_0_29(29);
}

unint64_t static HIDServicePropertyKey.scrollAccelerationTable.getter()
{
  return OUTLINED_FUNCTION_0_29(26);
}

unint64_t static HIDServicePropertyKey.scrollAccelerationType.getter()
{
  return OUTLINED_FUNCTION_0_29(25);
}

unint64_t static HIDServicePropertyKey.scrollAccelParametricCurves.getter()
{
  return OUTLINED_FUNCTION_0_29(20);
}

unint64_t static HIDServicePropertyKey.scrollReportRate.getter()
{
  return OUTLINED_FUNCTION_0_29(19);
}

unint64_t static HIDServicePropertyKey.scrollResolution.getter()
{
  return OUTLINED_FUNCTION_0_29(19);
}

unint64_t static HIDServicePropertyKey.subinterfaceID.getter()
{
  return OUTLINED_FUNCTION_0_29(17);
}

unint64_t static HIDServicePropertyKey.supportsGestureScrolling.getter()
{
  return OUTLINED_FUNCTION_0_29(24);
}

unint64_t static HIDServicePropertyKey.surfaceDimensions.getter()
{
  return OUTLINED_FUNCTION_0_29(17);
}

unint64_t static HIDServicePropertyKey.trackpadAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_29(23);
}

unint64_t static HIDServicePropertyKey.trackpadScrollAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_29(29);
}

uint64_t static HIDServicePropertyKey.transport.getter()
{
  return 0x726F70736E617254;
}

unint64_t static HIDServicePropertyKey.universalControlBuiltIn.getter()
{
  return OUTLINED_FUNCTION_0_29(23);
}

unint64_t static HIDServicePropertyKey.universalControlVirtualService.getter()
{
  return OUTLINED_FUNCTION_0_29(30);
}

uint64_t sub_26084895C()
{
  uint64_t result = sub_26087B2B0();
  qword_26A8B5008 = result;
  unk_26A8B5010 = v1;
  return result;
}

uint64_t static HIDServicePropertyKey.userDeviceCreateInactive.getter()
{
  if (qword_26A8B4548 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26A8B5008;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t static HIDServicePropertyKey.useRemoteAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_29(21);
}

uint64_t static HIDServicePropertyKey.vendorID.getter()
{
  return 0x4449726F646E6556;
}

uint64_t sub_260848A24@<X0>(Swift::String *a1@<X0>, UniversalHID::HIDServicePropertyKey *a2@<X8>)
{
  UniversalHID::HIDServicePropertyKey v4 = HIDServicePropertyKey.init(rawValue:)(*a1);
  uint64_t result = v4.rawValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

uint64_t sub_260848A54@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_260848A64()
{
  unint64_t result = qword_26A8B5020;
  if (!qword_26A8B5020)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8B5028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5020);
  }
  return result;
}

uint64_t sub_260848AB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static HIDServicePropertyKey.allCases.getter();
  *a1 = result;
  return result;
}

unint64_t sub_260848AE4()
{
  unint64_t result = qword_26A8B5030;
  if (!qword_26A8B5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5030);
  }
  return result;
}

unint64_t sub_260848B34()
{
  unint64_t result = qword_26A8B5038;
  if (!qword_26A8B5038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5038);
  }
  return result;
}

uint64_t sub_260848B80()
{
  return HIDServicePropertyKey.stringValue.getter();
}

uint64_t sub_260848B88@<X0>(uint64_t a1@<X0>, UniversalHID::HIDServicePropertyKey_optional *a2@<X8>)
{
  UniversalHID::HIDServicePropertyKey_optional v5 = HIDServicePropertyKey.init(stringValue:)(*(Swift::String *)&a1);
  uint64_t result = v5.value.rawValue._countAndFlagsBits;
  *a2 = v5;
  return result;
}

void sub_260848BB0(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

unint64_t sub_260848BBC()
{
  unint64_t result = qword_26A8B5040;
  if (!qword_26A8B5040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5040);
  }
  return result;
}

uint64_t sub_260848C08()
{
  return sub_260853250(*v0, v0[1]);
}

uint64_t sub_260848C10(uint64_t a1)
{
  return sub_260853334(a1, *v1, v1[1]);
}

uint64_t sub_260848C18(uint64_t a1)
{
  return sub_26085353C(a1, *v1, v1[1]);
}

uint64_t sub_260848C20(uint64_t a1)
{
  unint64_t v2 = sub_260848D34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260848C5C(uint64_t a1)
{
  unint64_t v2 = sub_260848D34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260848C98(void *a1, void *a2)
{
  return sub_26086644C(*a1, a1[1], *a2, a2[1]);
}

void *assignWithCopy for HIDServicePropertyKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for HIDServicePropertyKey(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HIDServicePropertyKey()
{
  return &type metadata for HIDServicePropertyKey;
}

unint64_t sub_260848D34()
{
  unint64_t result = qword_26A8B5048;
  if (!qword_26A8B5048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5048);
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_0_29(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void HIDReport.scaledValue<A>(as:atIndex:)(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a5 == MEMORY[0x263F8E498])
  {
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_6_24();
    sub_2607DCF84(v15, v16, v17);
  }
  else if (a5 == MEMORY[0x263F8E4F0])
  {
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_6_24();
    sub_2607DCFD0(v19, v20, v21);
  }
  else if (a5 == MEMORY[0x263F8E548])
  {
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_6_24();
    sub_2607DD064();
  }
  else if (a5 == MEMORY[0x263F8E5C0])
  {
    OUTLINED_FUNCTION_9_19();
    OUTLINED_FUNCTION_6_24();
    sub_2607DD01C(v24, v25, v26);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    *((void *)&v11 + 1) = sub_26087B910();
    *(void *)&long long v11 = *((void *)&v11 + 1) - 8;
    switch((unint64_t)(v11 >> 3))
    {
      case 0uLL:
        sub_260849AB8();
        sub_260849B04();
        OUTLINED_FUNCTION_21_9();
        uint64_t v14 = MEMORY[0x263F8E778];
        break;
      case 1uLL:
        sub_260849A20();
        sub_260849A6C();
        OUTLINED_FUNCTION_21_9();
        uint64_t v14 = MEMORY[0x263F8E888];
        break;
      case 3uLL:
        sub_260849988();
        sub_2608499D4();
        OUTLINED_FUNCTION_21_9();
        uint64_t v14 = MEMORY[0x263F8E8F8];
        break;
      case 7uLL:
        sub_2608498F0();
        sub_26084993C();
        OUTLINED_FUNCTION_21_9();
        uint64_t v14 = MEMORY[0x263F8E970];
        break;
      default:
        OUTLINED_FUNCTION_11_12();
        __break(1u);
        JUMPOUT(0x260849048);
    }
    HIDReport.scaledValue<A, B>(as:unsignedType:atIndex:)(v12, v13, a2, a3, a4, a5, v14, a6, v28, v29, v30);
    OUTLINED_FUNCTION_6_24();
  }
}

void HIDReport.setScaledValue<A>(_:as:atIndex:)(double a1, uint64_t a2, char **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4 == MEMORY[0x263F8E498])
  {
    OUTLINED_FUNCTION_17_9();
    if (!v15)
    {
      OUTLINED_FUNCTION_19_9();
      OUTLINED_FUNCTION_3_27();
      sub_260849B50(v16, v17);
      return;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a4 == MEMORY[0x263F8E4F0])
  {
    OUTLINED_FUNCTION_17_9();
    if (!v15)
    {
      OUTLINED_FUNCTION_19_9();
      OUTLINED_FUNCTION_3_27();
      sub_260849BC0(v19, v20);
      return;
    }
    goto LABEL_29;
  }
  if (a4 == MEMORY[0x263F8E548])
  {
    OUTLINED_FUNCTION_17_9();
    if (v15)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_3_27();
    sub_260849C98(v22, v23);
  }
  else
  {
    uint64_t v9 = *(void *)&a1 & 0x7FF0000000000000;
    if (a4 != MEMORY[0x263F8E5C0])
    {
      if (v9 != 0x7FF0000000000000)
      {
        swift_getAssociatedTypeWitness();
        OUTLINED_FUNCTION_20_9();
        swift_getAssociatedConformanceWitness();
        *((void *)&v12 + 1) = sub_26087B910();
        *(void *)&long long v12 = *((void *)&v12 + 1) - 8;
        switch((unint64_t)(v12 >> 3))
        {
          case 0uLL:
            unint64_t v13 = sub_2607E51F8();
            unint64_t v14 = sub_260849B04();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v14, MEMORY[0x263F8E778], a3, a4, MEMORY[0x263F8E778], a5, v13, v14, a6);
            goto LABEL_27;
          case 1uLL:
            unint64_t v30 = sub_2607E5248();
            unint64_t v31 = sub_260849A6C();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v31, MEMORY[0x263F8E888], a3, a4, MEMORY[0x263F8E888], a5, v30, v31, a6);
            goto LABEL_27;
          case 3uLL:
            unint64_t v32 = sub_2607E5298();
            unint64_t v33 = sub_2608499D4();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v33, MEMORY[0x263F8E8F8], a3, a4, MEMORY[0x263F8E8F8], a5, v32, v33, a6);
            goto LABEL_27;
          case 7uLL:
            unint64_t v28 = sub_2607E4564();
            unint64_t v29 = sub_26084993C();
            HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(a1, v29, MEMORY[0x263F8E970], a3, a4, MEMORY[0x263F8E970], a5, v28, v29, a6);
LABEL_27:
            OUTLINED_FUNCTION_3_27();
            return;
          default:
            goto LABEL_33;
        }
      }
      goto LABEL_30;
    }
    if (v9 == 0x7FF0000000000000)
    {
LABEL_32:
      __break(1u);
LABEL_33:
      OUTLINED_FUNCTION_11_12();
      __break(1u);
      JUMPOUT(0x260849328);
    }
    OUTLINED_FUNCTION_19_9();
    OUTLINED_FUNCTION_3_27();
    sub_260849C30(v25, v26);
  }
}

uint64_t static Int8.logicalMinimum.getter()
{
  return 128;
}

uint64_t static Int8.logicalMaximum.getter()
{
  return 127;
}

void sub_260849358(unsigned char *a1@<X8>)
{
  *a1 = 0x80;
}

void sub_260849364(unsigned char *a1@<X8>)
{
  *a1 = 127;
}

uint64_t static Int16.logicalMinimum.getter()
{
  return 0x8000;
}

uint64_t static Int16.logicalMaximum.getter()
{
  return 0x7FFFLL;
}

void sub_260849380(_WORD *a1@<X8>)
{
  *a1 = 0x8000;
}

void sub_26084938C(_WORD *a1@<X8>)
{
  *a1 = 0x7FFF;
}

uint64_t static Int32.logicalMinimum.getter()
{
  return 0x80000000;
}

uint64_t static Int32.logicalMaximum.getter()
{
  return 0x7FFFFFFFLL;
}

void sub_2608493A8(_DWORD *a1@<X8>)
{
  *a1 = 0x80000000;
}

void sub_2608493B4(_DWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFF;
}

unint64_t static Int64.logicalMinimum.getter()
{
  return 0x8000000000000000;
}

uint64_t static Int64.logicalMaximum.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

void sub_2608493D0(void *a1@<X8>)
{
  *a1 = 0x8000000000000000;
}

void sub_2608493DC(void *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t HIDReport.scaledValue<A, B>(as:unsignedType:atIndex:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  unint64_t v43 = a4;
  unint64_t v44 = a5;
  uint64_t v42 = a3;
  uint64_t v45 = a10;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_2();
  uint64_t v38 = v11;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v13);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10_2();
  uint64_t v40 = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_26_1();
  uint64_t v39 = v17;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_21_6();
  uint64_t v37 = v19;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v37 - v21;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v41 = v22;
  unint64_t v24 = v43;
  unint64_t v25 = v44;
  unint64_t v43 = AssociatedConformanceWitness;
  unint64_t v44 = a11;
  HIDReport.subscript.getter(v42, v24, v25, AssociatedTypeWitness, (uint64_t)v22);
  uint64_t v26 = OUTLINED_FUNCTION_15_11();
  v27(v26);
  if (sub_26087B6F0() < 65)
  {
    LODWORD(v45) = sub_26087B700();
    sub_26087B6E0();
  }
  else
  {
    sub_2607E4518();
    sub_2607E4564();
    OUTLINED_FUNCTION_10_16();
  }
  unint64_t v28 = *(void (**)(void))(v38 + 8);
  OUTLINED_FUNCTION_5_17();
  v28();
  uint64_t v29 = OUTLINED_FUNCTION_15_11();
  v30(v29);
  if (sub_26087B6F0() <= 64)
  {
    sub_26087B700();
    sub_26087B6E0();
  }
  else
  {
    sub_2607E4518();
    sub_2607E4564();
    OUTLINED_FUNCTION_10_16();
  }
  OUTLINED_FUNCTION_5_17();
  v28();
  uint64_t v32 = v40;
  unint64_t v31 = v41;
  unint64_t v33 = v44;
  if (sub_26087B920() > 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v37, v31, AssociatedTypeWitness);
    uint64_t v34 = *(void (**)(uint64_t))(v33 + 8);
    if (sub_26087B6F0() >= 65) {
      goto LABEL_11;
    }
LABEL_12:
    sub_26087B700();
    OUTLINED_FUNCTION_23_5();
    goto LABEL_13;
  }
  uint64_t v34 = *(void (**)(uint64_t))(v33 + 8);
  sub_26087B690();
  if (sub_26087B6F0() < 65) {
    goto LABEL_12;
  }
LABEL_11:
  sub_2607E4518();
  sub_2607E4564();
  OUTLINED_FUNCTION_10_16();
LABEL_13:
  uint64_t v35 = OUTLINED_FUNCTION_1_29();
  v34(v35);
  return ((uint64_t (*)(char *, uint64_t))v34)(v31, AssociatedTypeWitness);
}

unint64_t sub_2608498F0()
{
  unint64_t result = qword_26A8B5050;
  if (!qword_26A8B5050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5050);
  }
  return result;
}

unint64_t sub_26084993C()
{
  unint64_t result = qword_26A8B5058;
  if (!qword_26A8B5058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5058);
  }
  return result;
}

unint64_t sub_260849988()
{
  unint64_t result = qword_26A8B5060;
  if (!qword_26A8B5060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5060);
  }
  return result;
}

unint64_t sub_2608499D4()
{
  unint64_t result = qword_26A8B5068;
  if (!qword_26A8B5068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5068);
  }
  return result;
}

unint64_t sub_260849A20()
{
  unint64_t result = qword_26A8B5070;
  if (!qword_26A8B5070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5070);
  }
  return result;
}

unint64_t sub_260849A6C()
{
  unint64_t result = qword_26A8B5078;
  if (!qword_26A8B5078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5078);
  }
  return result;
}

unint64_t sub_260849AB8()
{
  unint64_t result = qword_26A8B5080;
  if (!qword_26A8B5080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5080);
  }
  return result;
}

unint64_t sub_260849B04()
{
  unint64_t result = qword_26A8B5088;
  if (!qword_26A8B5088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5088);
  }
  return result;
}

uint64_t sub_260849B50(uint64_t a1, double a2)
{
  uint64_t v4 = (char)sub_2607E49A0(128, 127);
  if (a2 >= 0.0 || v4 == 0)
  {
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v4 = ((int)v4 >> 7) - (v4 ^ ((int)v4 >> 7));
LABEL_9:
  return _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcis_0(v4, a1);
}

uint64_t sub_260849BC0(uint64_t a1, double a2)
{
  uint64_t v4 = (__int16)sub_2607E48A4(0x8000, 0x7FFFLL);
  if (a2 >= 0.0 || v4 == 0)
  {
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v4 = ((int)v4 >> 15) - (v4 ^ ((int)v4 >> 15));
LABEL_9:
  return _s12UniversalHID9HIDReportV_2ass5Int16VSi_AFmtcis_0(v4, a1);
}

void sub_260849C30(uint64_t a1, double a2)
{
  uint64_t v4 = sub_2607E50FC(0x8000000000000000, 0x7FFFFFFFFFFFFFFFLL);
  if (a2 >= 0.0 || v4 == 0)
  {
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_10;
    }
    __break(1u);
  }
  if (v4 >= 0) {
    uint64_t v4 = -v4;
  }
LABEL_10:
  sub_2607E22C0(v4, a1);
}

void sub_260849C98(uint64_t a1, double a2)
{
  uint64_t v4 = sub_2607E5008(0x80000000, 0x7FFFFFFFLL);
  if (a2 >= 0.0 || v4 == 0)
  {
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if ((int)v4 < 0) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = -(int)v4;
  }
LABEL_11:
  sub_2607E2040(v4, a1);
}

uint64_t HIDReport.setScaledValue<A, B>(_:as:unsignedType:atIndex:)(double a1, uint64_t a2, uint64_t a3, char **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v107 = a9;
  uint64_t v106 = a8;
  char v103 = a4;
  uint64_t v104 = a3;
  uint64_t v14 = *(void *)(a10 + 8);
  uint64_t v15 = *(void *)(v14 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v96 = *(void *)(AssociatedConformanceWitness + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v94 = (char *)&v89 - v16;
  uint64_t v99 = swift_checkMetadataState();
  OUTLINED_FUNCTION_10_2();
  uint64_t v98 = v17;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_26_1();
  uint64_t v92 = v19;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_21_6();
  uint64_t v91 = v21;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_21_6();
  unint64_t v93 = v23;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_21_6();
  uint64_t v100 = v25;
  OUTLINED_FUNCTION_19_0();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  unint64_t v101 = (char *)&v89 - v28;
  uint64_t v105 = a6;
  MEMORY[0x270FA5388](v27);
  uint64_t v102 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = v15;
  int v90 = *(void (**)(uint64_t))(v15 + 16);
  uint64_t v30 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v89 - v31;
  uint64_t v33 = swift_checkMetadataState();
  OUTLINED_FUNCTION_10_2();
  uint64_t v119 = v34;
  long long v112 = v34;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_26_1();
  uint64_t v111 = v36;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_21_6();
  uint64_t v110 = v38;
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_21_6();
  uint64_t v115 = v40;
  OUTLINED_FUNCTION_19_0();
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  unint64_t v44 = (char *)&v89 - v43;
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_21_6();
  uint64_t v118 = v45;
  OUTLINED_FUNCTION_19_0();
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  uint64_t v49 = (uint64_t (*)(void))((char *)&v89 - v48);
  MEMORY[0x270FA5388](v47);
  uint64_t v51 = (char *)&v89 - v50;
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(a7 + 24);
  uint64_t v117 = a7;
  uint64_t v108 = v52;
  uint64_t v109 = a7 + 24;
  v52(a5, a7);
  char v53 = OUTLINED_FUNCTION_18_9();
  uint64_t v116 = v49;
  uint64_t v114 = v14;
  if (v53)
  {
    char v54 = (char)v51;
    if (sub_26087B6F0() < 64)
    {
LABEL_12:
      uint64_t v59 = sub_26087B6E0();
      uint64_t v30 = (uint64_t)v112;
      uint64_t v57 = (uint64_t (*)(void))*((void *)v112 + 1);
      OUTLINED_FUNCTION_5_17();
      uint64_t result = v57();
      if (v59 < 0) {
        goto LABEL_13;
      }
      goto LABEL_34;
    }
    uint64_t v120 = 0;
    sub_2607DDC34();
    OUTLINED_FUNCTION_22_7();
    OUTLINED_FUNCTION_13_10();
    OUTLINED_FUNCTION_12_14();
    uint64_t v57 = (uint64_t (*)(void))*((void *)v32 + 1);
  }
  else
  {
    char v55 = OUTLINED_FUNCTION_18_9();
    uint64_t v56 = sub_26087B6F0();
    if ((v55 & 1) == 0)
    {
      if (v56 >= 64)
      {
        uint64_t v87 = OUTLINED_FUNCTION_15_11();
        uint64_t result = v88(v87);
        goto LABEL_34;
      }
      goto LABEL_12;
    }
    if (v56 <= 64)
    {
      swift_getAssociatedConformanceWitness();
      sub_26087BBF0();
      sub_26087BBC0();
      OUTLINED_FUNCTION_13_10();
      OUTLINED_FUNCTION_12_14();
      uint64_t v57 = (uint64_t (*)(void))*((void *)v32 + 1);
      OUTLINED_FUNCTION_2_31();
      v85();
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v44, v51, v33);
      if (v33)
      {
        OUTLINED_FUNCTION_2_31();
        v57();
        OUTLINED_FUNCTION_2_31();
        v57();
        goto LABEL_13;
      }
      uint64_t v86 = sub_26087B6E0();
      OUTLINED_FUNCTION_2_31();
      v57();
      OUTLINED_FUNCTION_2_31();
      uint64_t result = v57();
      if (v86 < 0) {
        goto LABEL_13;
      }
      goto LABEL_34;
    }
    uint64_t v120 = 0;
    sub_2607DDC34();
    char v54 = v33;
    sub_26087B670();
    sub_26087B250();
    OUTLINED_FUNCTION_12_14();
    uint64_t v57 = (uint64_t (*)(void))*((void *)v32 + 1);
  }
  OUTLINED_FUNCTION_2_31();
  v57();
  OUTLINED_FUNCTION_2_31();
  uint64_t result = v57();
  if (v54)
  {
LABEL_13:
    uint64_t v60 = *(void (**)(uint64_t))(v117 + 32);
    v60(a5);
    char v61 = OUTLINED_FUNCTION_18_9();
    uint64_t v62 = sub_26087B6F0();
    long long v112 = v57;
    if ((v61 & 1) == 0) {
      goto LABEL_17;
    }
    if (v62 <= 64) {
      goto LABEL_18;
    }
    while (1)
    {
      uint64_t v120 = 0;
      sub_2607DDC34();
      uint64_t v63 = (void (*)(void))v57;
      uint64_t v57 = v116;
      OUTLINED_FUNCTION_22_7();
      int v90 = v60;
      char v64 = sub_26087B250();
      OUTLINED_FUNCTION_2_31();
      v63();
      uint64_t v60 = v90;
      OUTLINED_FUNCTION_2_31();
      uint64_t v62 = ((uint64_t (*)(void))v63)();
      if (v64) {
        break;
      }
      while (1)
      {
        __break(1u);
LABEL_17:
        if (v62 > 63) {
          break;
        }
LABEL_18:
        uint64_t v65 = sub_26087B6E0();
        OUTLINED_FUNCTION_5_17();
        uint64_t v62 = v57();
        uint64_t v57 = v116;
        if (v65 > 0) {
          goto LABEL_19;
        }
      }
    }
LABEL_19:
    uint64_t v66 = v117;
    v108(a5, v117);
    uint64_t v67 = v110;
    ((void (*)(uint64_t, uint64_t))v60)(a5, v66);
    swift_getAssociatedConformanceWitness();
    uint64_t v68 = v115;
    FixedWidthInteger.init(scaledValue:logicalMinimum:logicalMaximum:)((uint64_t)v57, (uint64_t)v67, v33, v115, a1);
    uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    uint64_t v70 = v111;
    v69(v111, v68, v33);
    if (a1 >= 0.0)
    {
      uint64_t v76 = v70;
      uint64_t v77 = (void (*)(void))v112;
      ((void (*)(uint64_t, uint64_t))v112)(v76, v33);
    }
    else
    {
      sub_26087B4D0();
      uint64_t v71 = v99;
      uint64_t v72 = swift_getAssociatedConformanceWitness();
      char v73 = sub_26087B700();
      uint64_t v118 = v72;
      uint64_t v74 = sub_26087B6F0();
      if (v73) {
        BOOL v75 = v74 <= 64;
      }
      else {
        BOOL v75 = v74 <= 63;
      }
      uint64_t v78 = v98;
      if (v75)
      {
        uint64_t v80 = sub_26087B6E0();
        uint64_t v67 = *(void (**)(void))(v78 + 8);
        OUTLINED_FUNCTION_14_10();
        v67();
        uint64_t v77 = (void (*)(void))v112;
        OUTLINED_FUNCTION_5_17();
        v77();
        if (v80 > 0)
        {
LABEL_29:
          uint64_t v81 = v91;
          sub_26087B4D0();
          OUTLINED_FUNCTION_20_9();
          swift_getAssociatedConformanceWitness();
          sub_26087BBF0();
          uint64_t v82 = v92;
          sub_26087BBC0();
          uint64_t v69 = v93;
          sub_26087B9B0();
          ((void (*)(uint64_t, uint64_t))v67)(v82, v71);
          ((void (*)(uint64_t, uint64_t))v67)(v81, v71);
          OUTLINED_FUNCTION_20_9();
          sub_26087B690();
          uint64_t v83 = OUTLINED_FUNCTION_20_9();
          ((void (*)(uint64_t))v67)(v83);
          OUTLINED_FUNCTION_16_12();
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v120 = 0;
        sub_2607DDC34();
        sub_26087B670();
        swift_getAssociatedConformanceWitness();
        char v79 = sub_26087B250();
        uint64_t v67 = *(void (**)(void))(v78 + 8);
        uint64_t v68 = v115;
        OUTLINED_FUNCTION_14_10();
        v67();
        OUTLINED_FUNCTION_14_10();
        v67();
        uint64_t v77 = (void (*)(void))v112;
        OUTLINED_FUNCTION_5_17();
        v77();
        if (v79) {
          goto LABEL_29;
        }
      }
    }
    v69((uint64_t)v116, v68, v33);
    OUTLINED_FUNCTION_16_12();
LABEL_30:
    uint64_t v84 = v105;
    sub_26087B720();
    HIDReport.subscript.setter((uint64_t)v69, v103, v104, v84, (uint64_t)v67);
    OUTLINED_FUNCTION_5_17();
    return ((uint64_t (*)(void))v77)();
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_26084A84C()
{
  unint64_t result = qword_26A8B5090;
  if (!qword_26A8B5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5090);
  }
  return result;
}

unint64_t sub_26084A89C()
{
  unint64_t result = qword_26A8B5098;
  if (!qword_26A8B5098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B5098);
  }
  return result;
}

unint64_t sub_26084A8EC()
{
  unint64_t result = qword_26A8B50A0;
  if (!qword_26A8B50A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B50A0);
  }
  return result;
}

unint64_t sub_26084A93C()
{
  unint64_t result = qword_26A8B50A8;
  if (!qword_26A8B50A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8B50A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_16()
{
  return sub_26087B1C0();
}

uint64_t OUTLINED_FUNCTION_11_12()
{
  return sub_26087B990();
}

uint64_t OUTLINED_FUNCTION_13_10()
{
  return sub_26087B250();
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_9()
{
  return sub_26087B700();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return sub_26087B670();
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return sub_26087B6E0();
}

uint64_t VelocityEvent.init(time:delta:flags:)()
{
  return IOHIDEventCreateVelocityEvent();
}

uint64_t VelocityEvent.x.getter()
{
  return IOHIDEventGetFloatValue();
}

uint64_t VelocityEvent.y.getter()
{
  return OUTLINED_FUNCTION_2_32();
}

uint64_t VelocityEvent.z.getter()
{
  return OUTLINED_FUNCTION_2_32();
}

uint64_t static VelocityEvent.eventType.getter()
{
  return 9;
}

uint64_t (*VelocityEvent.x.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *unint64_t v2 = v3;
  return sub_26084ABCC;
}

uint64_t sub_26084ABCC()
{
  return OUTLINED_FUNCTION_1_30();
}

uint64_t VelocityEvent.y.setter()
{
  return OUTLINED_FUNCTION_0_30();
}

uint64_t (*VelocityEvent.y.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *unint64_t v2 = v3;
  return sub_26084AC30;
}

uint64_t sub_26084AC30()
{
  return OUTLINED_FUNCTION_0_30();
}

uint64_t VelocityEvent.z.setter()
{
  return OUTLINED_FUNCTION_0_30();
}

uint64_t (*VelocityEvent.z.modify(uint64_t a1, uint64_t a2))()
{
  OUTLINED_FUNCTION_2_2(a1, a2);
  IOHIDEventGetFloatValue();
  *unint64_t v2 = v3;
  return sub_26084AC98;
}

uint64_t sub_26084AC98()
{
  return OUTLINED_FUNCTION_0_30();
}

uint64_t sub_26084ACAC@<X0>(void *a1@<X8>)
{
  uint64_t result = VelocityEvent.x.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_26084ACD8(double *a1, void *a2)
{
  return VelocityEvent.x.setter(*a2, *a1);
}

uint64_t sub_26084ACE4@<X0>(void *a1@<X8>)
{
  uint64_t result = VelocityEvent.y.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_26084AD10()
{
  return VelocityEvent.y.setter();
}

uint64_t sub_26084AD1C@<X0>(void *a1@<X8>)
{
  uint64_t result = VelocityEvent.z.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_26084AD48()
{
  return VelocityEvent.z.setter();
}

ValueMetadata *type metadata accessor for VelocityEvent()
{
  return &type metadata for VelocityEvent;
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_1_30()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_2_32()
{
  return IOHIDEventGetFloatValue();
}

uint64_t GameControllerGesture.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static GameControllerEvent.dispatch(report:)(uint64_t a1, uint64_t a2)
{
  return GameControllerGesture.dispatch(report:)(a1, a2);
}

uint64_t GameControllerGesture.dispatch(report:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8B4588);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_26087C870;
  char v5 = _s12UniversalHID9HIDReportV_2ass4Int8VSi_AFmtcig_0();
  HIDGameControllerType.init(rawValue:)(v5);
  OUTLINED_FUNCTION_1_31(16, v6, v7, v8, v9, v10, v11, v12, v130, v144, v158, v172, v186, v200, v214, v228, v242, v256, v270,
    v284,
    v298,
    v312,
    v325,
    v338,
    v351,
    v365,
    v378,
    v391,
    v404,
    SBYTE2(v404),
    SBYTE3(v404),
    SBYTE4(v404),
    SBYTE5(v404),
    SBYTE6(v404),
    SHIBYTE(v404),
    v489,
    SBYTE1(v489),
    SBYTE2(v489),
    SBYTE3(v489),
    SBYTE4(v489),
    SBYTE5(v489),
    SBYTE6(v489),
    SHIBYTE(v489),
    v586,
    v599,
    v612,
    v626,
    v640,
    v654,
    v668,
    v682,
    v696,
    v710,
    v724,
    v738,
    v752,
    v766);
  double v14 = OUTLINED_FUNCTION_2_21(v13);
  OUTLINED_FUNCTION_1_31(32, v15, v16, v17, v18, v19, v20, v21, v131, v145, v159, v173, v187, v201, v215, v229, v243, v257, v271,
    v285,
    v299,
    v313,
    v326,
    v339,
    v352,
    v366,
    v379,
    v392,
    v405,
    v417,
    v429,
    v441,
    v453,
    v465,
    v477,
    v490,
    v502,
    v514,
    v526,
    v538,
    v550,
    v562,
    v574,
    v587,
    COERCE__INT64(v14 / 65535.0),
    v613,
    v627,
    v641,
    v655,
    v669,
    v683,
    v697,
    v711,
    v725,
    v739,
    v753,
    v767);
  *(double *)&uint64_t v23 = OUTLINED_FUNCTION_0_31(v22);
  OUTLINED_FUNCTION_1_31(48, v24, v25, v26, v27, v28, v29, v30, v132, v146, v160, v174, v188, v202, v216, v230, v244, v258, v272,
    v286,
    v300,
    v314,
    v327,
    v340,
    v353,
    v367,
    v380,
    v393,
    v406,
    v418,
    v430,
    v442,
    v454,
    v466,
    v478,
    v491,
    v503,
    v515,
    v527,
    v539,
    v551,
    v563,
    v575,
    v23,
    v600,
    v614,
    v628,
    v642,
    v656,
    v670,
    v684,
    v698,
    v712,
    v726,
    v740,
    v754,
    v768);
  double v32 = OUTLINED_FUNCTION_0_31(v31);
  OUTLINED_FUNCTION_1_31(64, v33, v34, v35, v36, v37, v38, v39, v133, v147, v161, v175, v189, v203, v217, v231, v245, v259, v273,
    v287,
    v301,
    v315,
    v328,
    v341,
    v354,
    v368,
    v381,
    v394,
    v407,
    v419,
    v431,
    v443,
    v455,
    v467,
    v479,
    SLOBYTE(v32),
    SBYTE1(v32),
    SBYTE2(v32),
    SBYTE3(v32),
    SBYTE4(v32),
    SBYTE5(v32),
    SBYTE6(v32),
    SHIBYTE(v32),
    v588,
    v601,
    v615,
    v629,
    v643,
    v657,
    v671,
    v685,
    v699,
    v713,
    v727,
    v741,
    v755,
    v769);
  double v41 = OUTLINED_FUNCTION_0_31(v40);
  OUTLINED_FUNCTION_1_31(144, v42, v43, v44, v45, v46, v47, v48, v134, v148, v162, v176, v190, v204, v218, v232, v246, v260, v274,
    v288,
    v302,
    v316,
    v329,
    v342,
    v355,
    v369,
    v382,
    v395,
    SLOWORD(v41),
    SBYTE2(v41),
    SBYTE3(v41),
    SBYTE4(v41),
    SBYTE5(v41),
    SBYTE6(v41),
    SHIBYTE(v41),
    v492,
    v504,
    v516,
    v528,
    v540,
    v552,
    v564,
    v576,
    v589,
    v602,
    v616,
    v630,
    v644,
    v658,
    v672,
    v686,
    v700,
    v714,
    v728,
    v742,
    v756,
    v770);
  *(double *)&uint64_t v50 = OUTLINED_FUNCTION_0_31(v49);
  OUTLINED_FUNCTION_1_31(160, v51, v52, v53, v54, v55, v56, v57, v135, v149, v163, v177, v191, v205, v219, v233, v247, v261, v275,
    v289,
    v303,
    v317,
    v330,
    v343,
    v356,
    v370,
    v383,
    v50,
    v408,
    v420,
    v432,
    v444,
    v456,
    v468,
    v480,
    v493,
    v505,
    v517,
    v529,
    v541,
    v553,
    v565,
    v577,
    v590,
    v603,
    v617,
    v631,
    v645,
    v659,
    v673,
    v687,
    v701,
    v715,
    v729,
    v743,
    v757,
    v771);
  *(double *)&uint64_t v59 = OUTLINED_FUNCTION_0_31(v58);
  OUTLINED_FUNCTION_1_31(176, v60, v61, v62, v63, v64, v65, v66, v136, v150, v164, v178, v192, v206, v220, v234, v248, v262, v276,
    v290,
    v304,
    v318,
    v331,
    v344,
    v357,
    v371,
    v59,
    v396,
    v409,
    v421,
    v433,
    v445,
    v457,
    v469,
    v481,
    v494,
    v506,
    v518,
    v530,
    v542,
    v554,
    v566,
    v578,
    v591,
    v604,
    v618,
    v632,
    v646,
    v660,
    v674,
    v688,
    v702,
    v716,
    v730,
    v744,
    v758,
    v772);
  *(double *)&uint64_t v68 = OUTLINED_FUNCTION_0_31(v67);
  OUTLINED_FUNCTION_1_31(192, v69, v70, v71, v72, v73, v74, v75, v137, v151, v165, v179, v193, v207, v221, v235, v249, v263, v277,
    v291,
    v305,
    v319,
    v332,
    v345,
    v358,
    v68,
    v384,
    v397,
    v410,
    v422,
    v434,
    v446,
    v458,
    v470,
    v482,
    v495,
    v507,
    v519,
    v531,
    v543,
    v555,
    v567,
    v579,
    v592,
    v605,
    v619,
    v633,
    v647,
    v661,
    v675,
    v689,
    v703,
    v717,
    v731,
    v745,
    v759,
    v773);
  uint64_t v359 = OUTLINED_FUNCTION_0_31(v76);
  *(double *)&uint64_t v77 = GameControllerReport.joystickLeft.getter(a1, a2);
  OUTLINED_FUNCTION_1_31(272, v78, v79, v80, v81, v82, v83, v84, v138, v152, v166, v180, v194, v208, v222, v236, v250, v264, v278,
    v292,
    v306,
    v86,
    v85,
    v77,
    v359,
    v372,
    v385,
    v398,
    v411,
    v423,
    v435,
    v447,
    v459,
    v471,
    v483,
    v496,
    v508,
    v520,
    v532,
    v544,
    v556,
    v568,
    v580,
    v593,
    v606,
    v620,
    v634,
    v648,
    v662,
    v676,
    v690,
    v704,
    v718,
    v732,
    v746,
    v760,
    v774);
  uint64_t v307 = OUTLINED_FUNCTION_0_31(v87);
  GameControllerReport.joystickRight.getter(a1, a2);
  OUTLINED_FUNCTION_1_31(288, v88, v89, v90, v91, v92, v93, v94, v139, v153, v167, v181, v195, v209, v223, v237, v251, v265, v279,
    v293,
    v307,
    v320,
    v333,
    v346,
    v360,
    v373,
    v386,
    v399,
    v412,
    v424,
    v436,
    v448,
    v460,
    v472,
    v484,
    v497,
    v509,
    v521,
    v533,
    v545,
    v557,
    v569,
    v581,
    v594,
    v607,
    v621,
    v635,
    v649,
    v663,
    v677,
    v691,
    v705,
    v719,
    v733,
    v747,
    v761,
    v775);
  OUTLINED_FUNCTION_2_21(v95);
  OUTLINED_FUNCTION_1_31(208, v96, v97, v98, v99, v100, v101, v102, v140, v154, v168, v182, v196, v210, v224, v238, v252, v266, v280,
    v294,
    v308,
    v321,
    v334,
    v347,
    v361,
    v374,
    v387,
    v400,
    v413,
    v425,
    v437,
    v449,
    v461,
    v473,
    v485,
    v498,
    v510,
    v522,
    v534,
    v546,
    v558,
    v570,
    v582,
    v595,
    v608,
    v622,
    v636,
    v650,
    v664,
    v678,
    v692,
    v706,
    v720,
    v734,
    v748,
    v762,
    v776);
  OUTLINED_FUNCTION_2_21(v103);
  OUTLINED_FUNCTION_1_31(224, v104, v105, v106, v107, v108, v109, v110, v141, v155, v169, v183, v197, v211, v225, v239, v253, v267, v281,
    v295,
    v309,
    v322,
    v335,
    v348,
    v362,
    v375,
    v388,
    v401,
    v414,
    v426,
    v438,
    v450,
    v462,
    v474,
    v486,
    v499,
    v511,
    v523,
    v535,
    v547,
    v559,
    v571,
    v583,
    v596,
    v609,
    v623,
    v637,
    v651,
    v665,
    v679,
    v693,
    v707,
    v721,
    v735,
    v749,
    v763,
    v777);
  OUTLINED_FUNCTION_2_21(v111);
  OUTLINED_FUNCTION_1_31(240, v112, v113, v114, v115, v116, v117, v118, v142, v156, v170, v184, v198, v212, v226, v240, v254, v268, v282,
    v296,
    v310,
    v323,
    v336,
    v349,
    v363,
    v376,
    v389,
    v402,
    v415,
    v427,
    v439,
    v451,
    v463,
    v475,
    v487,
    v500,
    v512,
    v524,
    v536,
    v548,
    v560,
    v572,
    v584,
    v597,
    v610,
    v624,
    v638,
    v652,
    v666,
    v680,
    v694,
    v708,
    v722,
    v736,
    v750,
    v764,
    v778);
  OUTLINED_FUNCTION_2_21(v119);
  OUTLINED_FUNCTION_1_31(256, v120, v121, v122, v123, v124, v125, v126, v143, v157, v171, v185, v199, v213, v227, v241, v255, v269, v283,
    v297,
    v311,
    v324,
    v337,
    v350,
    v364,
    v377,
    v390,
    v403,
    v416,
    v428,
    v440,
    v452,
    v464,
    v476,
    v488,
    v501,
    v513,
    v525,
    v537,
    v549,
    v561,
    v573,
    v585,
    v598,
    v611,
    v625,
    v639,
    v653,
    v667,
    v681,
    v695,
    v709,
    v723,
    v737,
    v751,
    v765,
    v779);
  OUTLINED_FUNCTION_2_21(v127);
  mach_absolute_time();
  uint64_t v128 = GameControllerEvent.init(time:controllerType:dpadUp:dpadDown:dpadLeft:dpadRight:faceX:faceY:faceA:faceB:joystickLeft:thumbstickLeft:joystickRight:thumbstickRight:shoulderL1:shoulderL2:shoulderR1:shoulderR2:flags:)();
  *(void *)(v4 + 56) = &type metadata for GameControllerEvent;
  *(void *)(v4 + 64) = &protocol witness table for GameControllerEvent;
  *(void *)(v4 + 32) = v128;
  return v4;
}