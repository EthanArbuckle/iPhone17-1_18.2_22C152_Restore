uint64_t SiriUserFeedbackLearningPluginDiscovery.findPlugins()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v0 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  v36 = *(void *)(v0 - 8);
  v37 = v0;
  MEMORY[0x1F4188790]();
  v2 = (uint64_t *)((char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  v3 = sub_1D3001918();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBD65778);
  v4 = sub_1D30018F8();
  v5 = sub_1D30020A8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    aBlock[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v38 = sub_1D2F09508(0x67756C50646E6966, 0xED00002928736E69, aBlock);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v4, v5, "PluginDiscovery.%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v7, -1, -1);
    MEMORY[0x1D942F2D0](v6, -1, -1);
  }

  aBlock[4] = (uint64_t)sub_1D2F08094;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D2F081F0;
  aBlock[3] = (uint64_t)&block_descriptor;
  v8 = _Block_copy(aBlock);
  v9 = objc_msgSend(self, sel_predicateWithBlock_, v8);
  _Block_release(v8);
  swift_release();
  v10 = objc_allocWithZone(MEMORY[0x1E4F25880]);
  v11 = v9;
  v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v13 = objc_msgSend(v10, sel_initWithExtensionPointIdentifier_predicate_, v12, v11);

  v14 = objc_msgSend(self, sel_executeQuery_, v13);
  sub_1D2F0BCB8(0, &qword_1EA698140);
  v15 = sub_1D3001DC8();

  if (!(v15 >> 62))
  {
    v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_7;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E4FBC860];
LABEL_18:
    v32 = sub_1D2F082B8(v19);

    swift_bridgeObjectRelease();
    return v32;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1D30025A8();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_17;
  }
LABEL_7:
  aBlock[0] = MEMORY[0x1E4FBC860];
  result = sub_1D2F09B58(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v33 = v13;
    v34 = v11;
    v18 = 0;
    v19 = aBlock[0];
    v35 = v15 & 0xC000000000000001;
    v20 = v15;
    do
    {
      if (v35) {
        v21 = (id)MEMORY[0x1D942E3A0](v18, v15);
      }
      else {
        v21 = *(id *)(v15 + 8 * v18 + 32);
      }
      v22 = v21;
      v23 = objc_msgSend(v21, sel_bundleIdentifier, v33, v34);
      v24 = sub_1D3001B78();
      v26 = v25;

      v27 = objc_msgSend(v22, sel_url);
      v28 = (char *)v2 + *(int *)(v37 + 20);
      sub_1D3000EE8();

      *v2 = v24;
      v2[1] = v26;
      v29 = sub_1D3000F18();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);

      aBlock[0] = v19;
      v31 = *(void *)(v19 + 16);
      v30 = *(void *)(v19 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1D2F09B58(v30 > 1, v31 + 1, 1);
        v19 = aBlock[0];
      }
      ++v18;
      *(void *)(v19 + 16) = v31 + 1;
      sub_1D2F09B94((uint64_t)v2, v19+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v31);
      v15 = v20;
    }
    while (v16 != v18);
    swift_bridgeObjectRelease();
    v13 = v33;
    v11 = v34;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F08094(uint64_t a1)
{
  sub_1D2F0BF3C(a1, (uint64_t)&v7);
  if (!*((void *)&v8 + 1))
  {
    sub_1D2F0BEDC((uint64_t)&v7);
    goto LABEL_7;
  }
  sub_1D2F0BCB8(0, &qword_1EA698140);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_8:
    sub_1D2F0BEDC((uint64_t)&v7);
    return 0;
  }
  id v1 = objc_msgSend(v6, sel_attributes);

  uint64_t v2 = sub_1D3001A88();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1D2F0DC98(0xD00000000000001ELL, 0x80000001D300DEB0), (v4 & 1) != 0))
  {
    sub_1D2F0BD44(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v8 + 1)) {
    goto LABEL_8;
  }
  if (swift_dynamicCast()) {
    return v6;
  }
  return 0;
}

uint64_t sub_1D2F081F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  v5 = *(uint64_t (**)(long long *, uint64_t))(a1 + 32);
  if (!a2)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  *((void *)&v9 + 1) = swift_getObjectType();
  *(void *)&long long v8 = a2;
  if (v3) {
LABEL_3:
  }
    uint64_t v3 = sub_1D3001A88();
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  char v6 = v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1D2F0BEDC((uint64_t)&v8);
  return v6 & 1;
}

uint64_t sub_1D2F082B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1D2F09B28(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1D2F0BDA0(v8, (uint64_t)v5);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1D2F09B28(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      v16 = &protocol witness table for SiriUserFeedbackLearningMLRuntimePlugin;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1D2F0BDA0((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1D2F0BE68(&v14, v7 + 40 * v11 + 32);
      sub_1D2F0BE80((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1D2F0844C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1D2F09F3C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1D942E3A0](v5, a1);
        uint64_t v16 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1D2F09F3C(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        uint64_t v14 = type metadata accessor for SiriCorrectionsUndoResponse();
        uint64_t v15 = sub_1D2F09DF4((unint64_t *)&unk_1EA698340, (void (*)(uint64_t))type metadata accessor for SiriCorrectionsUndoResponse);
        *(void *)&long long v13 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_1D2F0BE68(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v16 = v3;
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v12 = *(void *)(v3 + 24);
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_1D2F09F3C(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        uint64_t v14 = type metadata accessor for SiriCorrectionsUndoResponse();
        uint64_t v15 = sub_1D2F09DF4((unint64_t *)&unk_1EA698340, (void (*)(uint64_t))type metadata accessor for SiriCorrectionsUndoResponse);
        *(void *)&long long v13 = v10;
        *(void *)(v3 + 16) = v11 + 1;
        sub_1D2F0BE68(&v13, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F08680(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1D2F09F6C(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2F09F6C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D2F09F6C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1D2F0B9B4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D2F087A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1D2F09F6C(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2F09F6C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D2F09F6C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1D2F0B9B4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D2F088CC(unint64_t a1)
{
  return sub_1D2F08A18(a1, (unint64_t *)&unk_1EBD63380);
}

uint64_t sub_1D2F088E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1D2F09F6C(0, v1, 0);
    uint64_t v4 = a1 + 32;
    type metadata accessor for BMSiriExecutionTaskStepType(0);
    do
    {
      v4 += 8;
      swift_dynamicCast();
      uint64_t v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2F09F6C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D2F09F6C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1D2F0B9B4(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D2F08A04(unint64_t a1)
{
  return sub_1D2F08A18(a1, (unint64_t *)&qword_1EA6997A0);
}

uint64_t sub_1D2F08A18(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1D2F09F6C(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x1D942E3A0](i, a1);
        sub_1D2F0BCB8(0, a2);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2F09F6C(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = *(void *)(v5 + 16);
        unint64_t v8 = *(void *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1D2F09F6C(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v9 + 1;
        sub_1D2F0B9B4(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      uint64_t v10 = (id *)(a1 + 32);
      sub_1D2F0BCB8(0, a2);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2F09F6C(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = *(void *)(v5 + 16);
        unint64_t v12 = *(void *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1D2F09F6C(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v13 + 1;
        sub_1D2F0B9B4(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F08C6C()
{
  return SiriUserFeedbackLearningPluginDiscovery.findPlugins()();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1D2F08CD8()
{
  return sub_1D3002948();
}

uint64_t sub_1D2F08D08()
{
  return MEMORY[0x1F40E6478](*v0);
}

uint64_t sub_1D2F08D10(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1D942DF20](a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1D2F08D64(uint64_t a1, uint64_t a2)
{
  char v3 = sub_1D3002008();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1D2F08DBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D3002018();
  *a1 = result;
  return result;
}

void sub_1D2F08DE4(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1D2F08DF0(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1D2F08DFC(uint64_t a1, uint64_t a2)
{
  return sub_1D2F08EF4(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1D2F08E14()
{
  sub_1D3001B78();
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F08E68()
{
  sub_1D3001B78();
  sub_1D3002928();
  sub_1D3001C28();
  uint64_t v0 = sub_1D3002968();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F08EDC(uint64_t a1, uint64_t a2)
{
  return sub_1D2F08EF4(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1D2F08EF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1D3001B78();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D2F08F38(uint64_t a1, id *a2)
{
  uint64_t result = sub_1D3001B58();
  *a2 = 0;
  return result;
}

uint64_t sub_1D2F08FB0(uint64_t a1, id *a2)
{
  char v3 = sub_1D3001B68();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D2F09030@<X0>(uint64_t *a1@<X8>)
{
  sub_1D3001B78();
  uint64_t v2 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D2F09074()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F090BC()
{
  return sub_1D3002968();
}

_DWORD *sub_1D2F09100@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

BOOL sub_1D2F09110(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_1D2F09124(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_1D2F09138@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1D2F09148(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1D2F09154(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1D2F0915C()
{
  uint64_t v0 = sub_1D3001B78();
  uint64_t v2 = v1;
  if (v0 == sub_1D3001B78() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_1D2F091E8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1D2F091F4()
{
  return sub_1D3002618();
}

uint64_t sub_1D2F092B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D2F092F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D3001B78();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D2F09324()
{
  sub_1D2F09DF4(&qword_1EBD5FC68, type metadata accessor for FileAttributeKey);
  sub_1D2F09DF4((unint64_t *)&unk_1EA698460, type metadata accessor for FileAttributeKey);
  return sub_1D3002618();
}

uint64_t sub_1D2F093E0()
{
  return MEMORY[0x1F4184270](*v0);
}

uint64_t sub_1D2F093E8()
{
  return sub_1D3002938();
}

uint64_t sub_1D2F09414()
{
  return sub_1D3002918();
}

uint64_t sub_1D2F0941C(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1D2F0942C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1D2F09468(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2F09490(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1D2F09508(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1D3002318();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1D2F09508(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D2F095DC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1D2F0BD44((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1D2F0BD44((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1D2F095DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D3002328();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1D2F09798(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1D30024C8();
  if (!v8)
  {
    sub_1D3002598();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1D30025E8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1D2F09798(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1D2F09830(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D2F099A8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1D2F099A8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D2F09830(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1D2F952DC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1D3002448();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1D3002598();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1D3001C98();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1D30025E8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1D3002598();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1D2F099A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

unsigned char **sub_1D2F09AF8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1D2F09B08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A1DC(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F09B28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A630(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EA698420, &qword_1EBD5DC58);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1D2F09B58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B064(a1, a2, a3, (void *)*v3, &qword_1EA698430, (uint64_t (*)(void))type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1D2F09B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginDiscovering.findPlugins()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginDiscovery()
{
  return &type metadata for SiriUserFeedbackLearningPluginDiscovery;
}

uint64_t initializeBufferWithCopyOfBuffer for FeatureResolver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t sub_1D2F09C98(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 200)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D2F09CB8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 200) = v3;
  return result;
}

void type metadata accessor for _opaque_pthread_rwlock_t(uint64_t a1)
{
}

void type metadata accessor for BPSDemand(uint64_t a1)
{
}

void type metadata accessor for PLUSSchemaPLUSSuggestionGenerationDomain(uint64_t a1)
{
}

void type metadata accessor for SISchemaComponentName(uint64_t a1)
{
}

uint64_t sub_1D2F09D64()
{
  return sub_1D2F09DF4(&qword_1EA698288, type metadata accessor for SISchemaComponentName);
}

uint64_t sub_1D2F09DAC()
{
  return sub_1D2F09DF4(&qword_1EA698290, type metadata accessor for BPSDemand);
}

uint64_t sub_1D2F09DF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2F09E3C()
{
  return sub_1D2F09DF4(&qword_1EA698298, type metadata accessor for BPSDemand);
}

uint64_t sub_1D2F09E84()
{
  return sub_1D2F09DF4(&qword_1EA6982A0, type metadata accessor for BPSDemand);
}

uint64_t sub_1D2F09ECC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A348(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F09EEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A4D4(a1, a2, a3, *v3, &qword_1EA698408);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F09F14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A4D4(a1, a2, a3, *v3, (uint64_t *)&unk_1EA698410);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F09F3C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A630(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EBD614F8, &qword_1EBD61140);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F09F6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A7D8(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F09F8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0A948(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F09FAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0AA98(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F09FCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B064(a1, a2, a3, (void *)*v3, &qword_1EA6983D8, MEMORY[0x1E4F276F0]);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F0A008(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0AC20(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F0A028(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0AD8C(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F0A048(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B064(a1, a2, a3, (void *)*v3, &qword_1EA698400, MEMORY[0x1E4FA27D8]);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F0A084(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B064(a1, a2, a3, (void *)*v3, &qword_1EA6983F8, MEMORY[0x1E4FA27E0]);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F0A0C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0AEF8(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F0A0E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B064(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EBD614D8, MEMORY[0x1E4F27990]);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F0A11C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B2AC(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F0A13C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B418(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F0A15C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B5CC(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F0A17C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B758(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F0A19C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0B9C4(a1, a2, a3, *v3);
  *char v3 = (char *)result;
  return result;
}

uint64_t sub_1D2F0A1BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1D2F0BB30(a1, a2, a3, (void *)*v3);
  *char v3 = result;
  return result;
}

uint64_t sub_1D2F0A1DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B0);
    long long v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    long long v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0A348(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61518);
    long long v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    long long v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61430);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0A4D4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0A630(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0A7D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA6982C8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0A948(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6983E0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0AA98(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAF8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  size_t v15 = 2 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EB00);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0AC20(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6983D0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0AD8C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698338);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0AEF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FD10);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0B064(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0B2AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA6983E8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0B418(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA6982B8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1D2F0B5CC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61508);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63310);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0B758(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614E8);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AC0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AC0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

void type metadata accessor for BMSiriExecutionTaskStepType(uint64_t a1)
{
}

_OWORD *sub_1D2F0B9B4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D2F0B9C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA6983B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0BB30(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6983C0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  size_t v15 = 4 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6983C8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F0BCB8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1D2F0BD44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D2F0BDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1D2F0BE68(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1D2F0BE80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2F0BEDC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2F0BF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for SISchemaDismissalReason(uint64_t a1)
{
}

void type metadata accessor for FLOWSchemaFLOWStateType(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for BPSCompletionState(uint64_t a1)
{
}

void sub_1D2F0BFF4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1D2F0C03C()
{
  return sub_1D2F09DF4(&qword_1EA698448, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1D2F0C084()
{
  return sub_1D2F09DF4(&qword_1EA698450, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1D2F0C0CC()
{
  return sub_1D2F09DF4(&qword_1EA698458, type metadata accessor for SISchemaDismissalReason);
}

uint64_t sub_1D2F0C114()
{
  return sub_1D2F09DF4((unint64_t *)&unk_1EBD5FC70, type metadata accessor for FileAttributeKey);
}

void sub_1D2F0C17C(void *a1)
{
  uint64_t v3 = sub_1D3001918();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  v65 = (uint8_t *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)&v57 - v10;
  uint64_t v12 = sub_1D30010A8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  v64 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v57 - v16;
  id v18 = objc_msgSend(a1, sel_source);
  uint64_t v66 = v4;
  uint64_t v67 = v3;
  v68 = v6;
  if (!v18) {
    goto LABEL_19;
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_uuid);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_8:

    sub_1D2F0D16C((uint64_t)v11);
    uint64_t v4 = v66;
    uint64_t v3 = v67;
    unint64_t v6 = v68;
    goto LABEL_19;
  }
  v21 = v20;
  uint64_t v62 = v1;
  v63 = v17;
  id v22 = objc_msgSend(v20, sel_value);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = sub_1D3000F68();
    unint64_t v26 = v25;

    sub_1D2F587AC(v24, v26, (uint64_t)v11);
    sub_1D2F0D1CC(v24, v26);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  uint64_t v27 = (uint64_t)v63;

  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v28(v11, 1, v12) == 1) {
    goto LABEL_8;
  }
  v60 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v60(v27, v11, v12);
  id v29 = objc_msgSend(a1, sel_target);
  unint64_t v6 = v68;
  if (v29)
  {
    id v61 = v29;
    id v30 = objc_msgSend(v29, sel_uuid);
    if (v30)
    {
      v31 = v30;
      id v32 = objc_msgSend(v30, sel_value);
      if (v32)
      {
        v33 = v32;
        uint64_t v34 = sub_1D3000F68();
        uint64_t v58 = v34;
        unint64_t v59 = v35;

        uint64_t v36 = (uint64_t)v65;
        uint64_t v37 = v34;
        unint64_t v38 = v59;
        sub_1D2F587AC(v37, v59, (uint64_t)v65);
        unint64_t v39 = v38;
        unint64_t v6 = v68;
        sub_1D2F0D1CC(v58, v39);
      }
      else
      {
        uint64_t v36 = (uint64_t)v65;
        (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v65, 1, 1, v12);
      }

      unsigned int v41 = v28((char *)v36, 1, v12);
      uint64_t v40 = v36;
      uint64_t v27 = (uint64_t)v63;
      if (v41 != 1)
      {
        uint64_t v53 = (uint64_t)v64;
        v60((uint64_t)v64, (char *)v40, v12);
        int v54 = objc_msgSend(v19, sel_component);
        id v55 = v61;
        sub_1D2F0C8D4(v54, v27, (int)objc_msgSend(v61, sel_component), v53);
        sub_1D2F0C8D4((int)objc_msgSend(v55, sel_component), v53, (int)objc_msgSend(v19, sel_component), v27);

        v56 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v56(v53, v12);
        v56(v27, v12);
        return;
      }
    }
    else
    {
      uint64_t v40 = (uint64_t)v65;
      (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v65, 1, 1, v12);
    }

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v12);
    sub_1D2F0D16C(v40);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v12);
  }
  uint64_t v4 = v66;
  uint64_t v3 = v67;
LABEL_19:
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v42 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBD65778);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v42, v3);
  id v43 = a1;
  v44 = sub_1D30018F8();
  os_log_type_t v45 = sub_1D30020B8();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v70 = v47;
    *(_DWORD *)v46 = 136315138;
    id v48 = objc_msgSend(v43, sel_dictionaryRepresentation);
    if (v48)
    {
      v49 = v48;
      v65 = v46 + 4;
      sub_1D3001A88();

      uint64_t v50 = sub_1D3001A98();
      unint64_t v52 = v51;
      swift_bridgeObjectRelease();
      uint64_t v69 = sub_1D2F09508(v50, v52, &v70);
      sub_1D3002318();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v44, v45, "RequestLink skipped due to incomplete data for message: %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v47, -1, -1);
      MEMORY[0x1D942F2D0](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v67);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1D2F0C8D4(int a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v9 = sub_1D30010A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(v4 + 16);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v4 + 16);
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1D2F0DD10(a1), (v16 & 1) != 0))
  {
    unint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v17 = sub_1D2F1EE9C(MEMORY[0x1E4FBC860]);
  }
  HIDWORD(v26) = a1;
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1D2F0DD14(a2), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
    swift_retain();
  }
  else
  {
    unint64_t v21 = sub_1D2F232F0(MEMORY[0x1E4FBC860]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD611A0);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v21;
  }
  sub_1D2FDA3AC(a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v28 = v17;
  sub_1D2FE50F4(v20, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = v28;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v24 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v13;
  *uint64_t v13 = 0x8000000000000000;
  sub_1D2FE50C8(v23, SHIDWORD(v26), v24);
  *uint64_t v13 = v27;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1D2F0CB40(int a1, uint64_t a2)
{
  uint64_t v5 = sub_1D30010A8();
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 16);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_1D2F0DD10(a1), (v14 & 1) != 0))
  {
    uint64_t v57 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D2FDA7C4(a2);
    if (v15) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v57 = 0;
  }
  unint64_t v16 = sub_1D2F232F0(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD611A0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v16;
LABEL_7:
  uint64_t v17 = v15;
  swift_beginAccess();
  uint64_t v39 = v17;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1D2FA09F4(v18);
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v19 + 16);
  if (v21)
  {
    unint64_t v22 = 0;
    uint64_t v23 = v19 + 32;
    unint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    uint64_t v53 = v44 + 16;
    v49 = (void (**)(unint64_t, uint64_t))(v44 + 8);
    uint64_t v50 = (void (**)(char *, char *, uint64_t))(v44 + 32);
    int v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
    unint64_t v43 = (v44 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v51 = v10;
    uint64_t v42 = v11;
    uint64_t v41 = v19;
    uint64_t v40 = v21;
    uint64_t v45 = v19 + 32;
    id v48 = v7;
    while (v22 < *(void *)(v19 + 16))
    {
      uint64_t v24 = *v11;
      if (*(void *)(*v11 + 16))
      {
        uint64_t v25 = *(void *)(v23 + 16 * v22 + 8);
        unint64_t result = sub_1D2F0DD10(*(_DWORD *)(v23 + 16 * v22));
        if (v26)
        {
          uint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * result);
          uint64_t v28 = *(void *)(v25 + 16);
          uint64_t v47 = v25;
          if (v28)
          {
            unint64_t v46 = v22;
            uint64_t v29 = v25 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
            uint64_t v30 = *(void *)(v44 + 72);
            id v55 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            do
            {
              v55(v10, v29, v5);
              id v32 = *v54;
              (*v54)(v10, 0, 1, v5);
              if ((*v52)(v10, 1, v5) == 1)
              {
                uint64_t v11 = v42;
                uint64_t v19 = v41;
                uint64_t v21 = v40;
                uint64_t v23 = v45;
                unint64_t v22 = v46;
                goto LABEL_10;
              }
              uint64_t v33 = v5;
              (*v50)(v7, v10, v5);
              swift_bridgeObjectRetain();
              unint64_t v34 = sub_1D2F0DD14((uint64_t)v7);
              char v36 = v35;
              swift_bridgeObjectRelease();
              uint64_t v37 = v49;
              if (v36)
              {
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v56 = v27;
                if (!isUniquelyReferenced_nonNull_native)
                {
                  sub_1D2F12E00();
                  uint64_t v27 = v56;
                }
                v31 = *v37;
                v31(*(void *)(v27 + 48) + v34 * v30, v33);
                uint64_t v27 = v56;
                sub_1D2FDAEC4(v34, v56);
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                v31 = *v49;
              }
              uint64_t v7 = v48;
              v31((unint64_t)v48, v33);
              v29 += v30;
              --v28;
              uint64_t v10 = v51;
              uint64_t v5 = v33;
            }
            while (v28);
            uint64_t v11 = v42;
            uint64_t v19 = v41;
            uint64_t v21 = v40;
            unint64_t v22 = v46;
          }
          else
          {
            id v32 = *v54;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          uint64_t v23 = v45;
          v32(v10, 1, 1, v5);
LABEL_10:
          swift_bridgeObjectRelease();
          unint64_t result = swift_bridgeObjectRelease();
        }
      }
      if (++v22 == v21) {
        goto LABEL_27;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v39;
  }
  return result;
}

uint64_t sub_1D2F0D008(int a1, uint64_t a2, int a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (!*(void *)(v7 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v8 = sub_1D2F0DD10(a1);
  if ((v9 & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  if (!*(void *)(v10 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1D2F0DD14(a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 16);
  if (!*(void *)(v14 + 16) || (unint64_t v15 = sub_1D2F0DD10(a3), (v16 & 1) == 0))
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_release();
  return v17;
}

uint64_t _s28SiriPrivateLearningAnalytics23ASRBestPostITNUtteranceCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestLinkTable()
{
  return self;
}

uint64_t sub_1D2F0D16C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2F0D1CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t FeatureProvider.targetName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureProvider.featureNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeatureProvider.__allocating_init(features:targetName:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  FeatureProvider.init(features:targetName:)(a1, a2, a3);
  return v6;
}

uint64_t FeatureProvider.init(features:targetName:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  v3[2] = MEMORY[0x1E4FBC868];
  v3[3] = a2;
  uint64_t v5 = v3 + 2;
  v3[4] = a3;
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      unint64_t v31 = v4 & 0xC000000000000001;
      uint64_t v7 = 4;
      while (1)
      {
        uint64_t v9 = v7 - 4;
        if (v31)
        {
          uint64_t v10 = MEMORY[0x1D942E3A0](v7 - 4, v4);
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v10 = *(void *)(v4 + 8 * v7);
          swift_retain();
          uint64_t v11 = v7 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v32 = v11;
        uint64_t v12 = sub_1D2F352F8();
        uint64_t v4 = v13;
        swift_beginAccess();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v3 = (void *)*v5;
        uint64_t v33 = (void *)*v5;
        void *v5 = 0x8000000000000000;
        unint64_t v16 = sub_1D2F0DC98(v12, v4);
        uint64_t v17 = v3[2];
        BOOL v18 = (v15 & 1) == 0;
        uint64_t v19 = v17 + v18;
        if (__OFADD__(v17, v18)) {
          goto LABEL_24;
        }
        char v20 = v15;
        if (v3[3] >= v19)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v3 = v33;
            if (v15) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1D2F13244();
            uint64_t v3 = v33;
            if (v20) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1D2F0F080(v19, isUniquelyReferenced_nonNull_native);
          unint64_t v21 = sub_1D2F0DC98(v12, v4);
          if ((v20 & 1) != (v22 & 1))
          {
            uint64_t result = sub_1D30028B8();
            __break(1u);
            return result;
          }
          unint64_t v16 = v21;
          uint64_t v3 = v33;
          if (v20)
          {
LABEL_4:
            uint64_t v8 = v3[7];
            swift_release();
            *(void *)(v8 + 8 * v16) = v10;
            goto LABEL_5;
          }
        }
        v3[(v16 >> 6) + 8] |= 1 << v16;
        uint64_t v23 = (uint64_t *)(v3[6] + 16 * v16);
        *uint64_t v23 = v12;
        v23[1] = v4;
        *(void *)(v3[7] + 8 * v16) = v10;
        uint64_t v24 = v3[2];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_25;
        }
        v3[2] = v26;
        swift_bridgeObjectRetain();
LABEL_5:
        void *v5 = v3;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        ++v7;
        uint64_t v4 = v30;
        if (v32 == v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v3 = v29;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  swift_beginAccess();
  uint64_t v27 = swift_bridgeObjectRetain();
  v3[5] = sub_1D2F0D5D0(v27);
  return (uint64_t)v3;
}

uint64_t sub_1D2F0D5D0(uint64_t a1)
{
  uint64_t result = sub_1D3001FD8();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1D2FDFC4C(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1D2F0D768(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1D2F0DC98(a1, a2);
    if (v7)
    {
      uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v9 = *(unsigned char *)(v8 + 32);
      long long v29 = *(_OWORD *)(v8 + 16);
      char v30 = v9;
      id v10 = sub_1D2F35934();
      if (v10)
      {
        id v11 = v10;
        swift_release();
      }
      else
      {
        uint64_t v18 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
        id v11 = objc_msgSend(self, sel_featureValueWithString_, v18);

        if (qword_1EBD63A48 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_1D3001918();
        __swift_project_value_buffer(v19, (uint64_t)qword_1EBD65778);
        swift_retain_n();
        char v20 = sub_1D30018F8();
        os_log_type_t v21 = sub_1D30020B8();
        if (os_log_type_enabled(v20, v21))
        {
          char v22 = (uint8_t *)swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          *(_DWORD *)char v22 = 136315138;
          *(void *)&long long v29 = v23;
          uint64_t v24 = *(uint64_t (**)(uint64_t))(*(void *)v8 + 104);
          uint64_t v25 = swift_retain();
          uint64_t v26 = v24(v25);
          unint64_t v28 = v27;
          swift_release();
          uint64_t v31 = sub_1D2F09508(v26, v28, (uint64_t *)&v29);
          sub_1D3002318();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D2F05000, v20, v21, "No known conversion of FeatureValue %s to StringMLFeatureValue", v22, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v23, -1, -1);
          MEMORY[0x1D942F2D0](v22, -1, -1);
          swift_release();
        }
        else
        {

          swift_release_n();
        }
      }
      return v11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D3001918();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1D30018F8();
  os_log_type_t v14 = sub_1D30020B8();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(void *)&long long v29 = v16;
    *(_DWORD *)unint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1D2F09508(a1, a2, (uint64_t *)&v29);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v13, v14, "%s is not a supported feature", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v16, -1, -1);
    MEMORY[0x1D942F2D0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t FeatureProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeatureProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1D2F0DC98(uint64_t a1, uint64_t a2)
{
  sub_1D3002928();
  sub_1D3001C28();
  uint64_t v4 = sub_1D3002968();
  return sub_1D2F0E0C4(a1, a2, v4);
}

unint64_t sub_1D2F0DD14(uint64_t a1)
{
  sub_1D30010A8();
  sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
  uint64_t v2 = sub_1D3001AB8();
  return sub_1D2F0E1A8(a1, v2);
}

unint64_t sub_1D2F0DD98(unsigned __int8 a1)
{
  sub_1D3002928();
  sub_1D3001C28();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D3002968();
  return sub_1D2F0E354(a1, v2);
}

unint64_t sub_1D2F0DEA4(uint64_t a1)
{
  uint64_t v2 = sub_1D3002918();
  return sub_1D2F0E57C(a1, v2);
}

unint64_t sub_1D2F0DEE8(uint64_t a1)
{
  sub_1D3001B78();
  sub_1D3002928();
  sub_1D3001C28();
  uint64_t v2 = sub_1D3002968();
  swift_bridgeObjectRelease();
  return sub_1D2F0E618(a1, v2);
}

unint64_t sub_1D2F0DF7C(int a1)
{
  sub_1D3002928();
  sub_1D3002948();
  uint64_t v2 = sub_1D3002968();
  return sub_1D2F0E790(a1, v2);
}

unint64_t sub_1D2F0DFE4(unsigned __int8 a1)
{
  sub_1D3002928();
  sub_1D3002938();
  uint64_t v2 = sub_1D3002968();
  return sub_1D2F0E82C(a1, v2);
}

unint64_t sub_1D2F0E054(char a1)
{
  char v1 = a1 & 1;
  sub_1D3002928();
  sub_1D3002938();
  uint64_t v2 = sub_1D3002968();
  return sub_1D2F0E8CC(v1, v2);
}

unint64_t sub_1D2F0E0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D3002778() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D3002778() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D2F0E1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
      char v15 = sub_1D3001B28();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1D2F0E354(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE300000000000000;
      uint64_t v8 = 5459817;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1397716596;
          break;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x534F6863746177;
          break;
        case 4:
          uint64_t v8 = 0x4F6E776F6E6B6E75;
          unint64_t v7 = 0xE900000000000053;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 5459817;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE500000000000000;
          if (v8 == 0x534F63616DLL) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1397716596) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x534F6863746177;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xE900000000000053;
          if (v8 != 0x4F6E776F6E6B6E75) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = sub_1D3002778();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1D2F0E57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1D2F0E618(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1D3001B78();
    uint64_t v8 = v7;
    if (v6 == sub_1D3001B78() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1D3001B78();
          uint64_t v15 = v14;
          if (v13 == sub_1D3001B78() && v15 == v16) {
            break;
          }
          char v18 = sub_1D3002778();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D2F0E790(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1D2F0E82C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1D2F0E8CC(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D2F0E988(uint64_t a1, char a2)
{
  return sub_1D2F0EDB0(a1, a2, &qword_1EBD614C0);
}

uint64_t sub_1D2F0E994(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61490);
  int v46 = a2;
  uint64_t v10 = sub_1D30025C8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1D2F0EDA4(uint64_t a1, char a2)
{
  return sub_1D2F0EDB0(a1, a2, (uint64_t *)&unk_1EBD614C8);
}

uint64_t sub_1D2F0EDB0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1D30025C8();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v31 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v30 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v20 >= v30) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v31 = -1 << v29;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v9];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_30:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      int v27 = *(_DWORD *)(*(void *)(v6 + 48) + 4 * v19);
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1D3002928();
      sub_1D3002948();
      uint64_t result = sub_1D3002968();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(void *)(v8 + 48) + 4 * v17) = v27;
      *(void *)(*(void *)(v8 + 56) + 8 * v17) = v28;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1D2F0F080(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6986A8);
  char v36 = a2;
  uint64_t v6 = sub_1D30025C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1D3002928();
    sub_1D3001C28();
    uint64_t result = sub_1D3002968();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D2F0F398(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61498);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1D30025C8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  unint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  int64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    unint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    int64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1D2F15C78(v32 + v33 * v24, v54);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1D2F15C14(v34 + v33 * v24, v54);
    }
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      int64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      int64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_1D2F15C78(v54, *(void *)(v13 + 56) + v33 * v22);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  unint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1D2F0F860(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD614B0);
  int v46 = a2;
  uint64_t v10 = sub_1D30025C8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  BOOL v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1D2F0FC70(uint64_t a1, char a2)
{
  return sub_1D2F11A90(a1, a2, &qword_1EA6986A0);
}

uint64_t sub_1D2F0FC7C(uint64_t a1, int a2)
{
  return sub_1D2F10140(a1, a2, &qword_1EBD614A0);
}

uint64_t sub_1D2F0FC88(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v53 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698660);
  int v50 = a2;
  uint64_t v12 = sub_1D30025C8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v3;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v49 = v6;
  uint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  uint64_t v52 = v11;
  while (1)
  {
    if (v17)
    {
      uint64_t v51 = (v17 - 1) & v17;
      unint64_t v26 = __clz(__rbit64(v17)) | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45) {
      break;
    }
    uint64_t v28 = v46;
    unint64_t v29 = v46[v27];
    ++v21;
    if (!v29)
    {
      int64_t v21 = v27 + 1;
      if (v27 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v29 = v46[v21];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v21 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v45) {
              goto LABEL_34;
            }
            unint64_t v29 = v46[v21];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v30;
      }
    }
LABEL_21:
    uint64_t v51 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_22:
    uint64_t v31 = *(void *)(v49 + 72);
    unint64_t v32 = v31 * v26;
    unint64_t v33 = *(void *)(v11 + 48) + v31 * v26;
    if (v50)
    {
      char v34 = *v18;
      (*v18)(v10, v33, v5);
      v34(v53, *(void *)(v52 + 56) + v32, v5);
    }
    else
    {
      uint64_t v48 = *(void *)(v49 + 72);
      unint64_t v35 = *v47;
      (*v47)(v10, v33, v5);
      v35(v53, *(void *)(v52 + 56) + v32, v5);
      uint64_t v31 = v48;
    }
    uint64_t v11 = v52;
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v36 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v19 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v37) & ~*(void *)(v19 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v19 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v22 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    unint64_t v23 = v31 * v22;
    unint64_t v24 = *(void *)(v13 + 48) + v31 * v22;
    int64_t v25 = *v18;
    (*v18)((char *)v24, (unint64_t)v10, v5);
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v13 + 56) + v23, v53, v5);
    ++*(void *)(v13 + 16);
    unint64_t v17 = v51;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v28 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v11 + 32);
  if (v43 >= 64) {
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v43;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1D2F10134(uint64_t a1, int a2)
{
  return sub_1D2F10140(a1, a2, &qword_1EA698670);
}

uint64_t sub_1D2F10140(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v48 = a2;
  uint64_t v12 = sub_1D30025C8();
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = *(void *)(v13 + 64);
  uint64_t v44 = (void *)(v13 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  uint64_t v42 = v5;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  int64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v47 = v8;
  uint64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v20 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  for (i = v13; ; uint64_t v13 = i)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43) {
      break;
    }
    int64_t v27 = v44;
    unint64_t v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v28 = v44[v22];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v5 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v22 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v43) {
              goto LABEL_34;
            }
            unint64_t v28 = v44[v22];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v47 + 72);
    unint64_t v31 = *(void *)(v13 + 48) + v30 * v25;
    if (v48)
    {
      (*v19)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
    }
    else
    {
      (*v45)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v19)(*(void *)(v14 + 48) + v30 * v23, v10, v7);
    *(void *)(*(void *)(v14 + 56) + 8 * v23) = v32;
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v5 = v42;
  int64_t v27 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v13 + 32);
  if (v40 >= 64) {
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v27 = -1 << v40;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v5 = v14;
  return result;
}

uint64_t sub_1D2F10554(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD614B8);
  uint64_t result = sub_1D30025C8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      int v26 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_1D3002928();
      sub_1D3002948();
      uint64_t result = sub_1D3002968();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D2F10828(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698678);
  int v47 = a2;
  uint64_t v10 = sub_1D30025C8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v41 = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  int v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v49 = v8;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v50 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    BOOL v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      int64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v32;
      uint64_t v31 = v32[1];
      swift_retain();
      swift_retain();
    }
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    unint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *unint64_t v20 = v30;
    v20[1] = v31;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  BOOL v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1D2F10C60(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698698);
  int v42 = a2;
  uint64_t v10 = sub_1D30025C8();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    unint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
      uint64_t result = sub_1D3001AB8();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1D2F11070(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FD70);
  uint64_t result = sub_1D30025C8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1D3002928();
      sub_1D3002938();
      uint64_t result = sub_1D3002968();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D2F11340(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD614A8);
  int v44 = a2;
  uint64_t v10 = sub_1D30025C8();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v40 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    int v42 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v41 = (unint64_t)(v12 + 63) >> 6;
    int64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v46 = v5;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v41) {
          goto LABEL_34;
        }
        unint64_t v23 = v42[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v23 = v42[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v41)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v40;
              if (v44)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
                if (v38 >= 64) {
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int v42 = -1 << v38;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v42[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v23 = v42[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = v9;
      uint64_t v26 = *(void *)(v9 + 48);
      uint64_t v27 = v6;
      uint64_t v28 = *(void *)(v6 + 72);
      uint64_t v29 = v26 + v28 * v21;
      if (v44) {
        (*v45)(v8, v29, v46);
      }
      else {
        (*v43)(v8, v29, v46);
      }
      uint64_t v30 = *(void *)(*(void *)(v25 + 56) + 8 * v21);
      sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
      uint64_t result = sub_1D3001AB8();
      uint64_t v31 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v16 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v19 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v45)(*(void *)(v11 + 48) + v28 * v19, v8, v46);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v30;
      ++*(void *)(v11 + 16);
      uint64_t v6 = v27;
      uint64_t v9 = v25;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1D2F11754(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698690);
  char v37 = a2;
  uint64_t v6 = sub_1D30025C8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v37)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      long long v38 = *(_OWORD *)v32;
      uint64_t v33 = *(void *)(v32 + 16);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1D3002928();
      sub_1D3001C28();
      uint64_t result = sub_1D3002968();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(_OWORD *)uint64_t v19 = v38;
      *(void *)(v19 + 16) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D2F11A84(uint64_t a1, char a2)
{
  return sub_1D2F11A90(a1, a2, &qword_1EA698688);
}

uint64_t sub_1D2F11A90(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_1D30025C8();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    unint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v33 = -1 << v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
    int64_t v35 = v4;
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64) {
                bzero((void *)(v6 + 64), 8 * v36);
              }
              else {
                *unint64_t v10 = v33;
              }
              uint64_t v4 = v35;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void **)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        id v32 = v31;
      }
      uint64_t result = sub_1D3002918();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1D2F11D40(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698668);
  int v52 = a2;
  uint64_t v10 = sub_1D30025C8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v58 = v5;
  uint64_t v13 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v14 = *(void *)(v9 + 64);
  int v48 = (void *)(v9 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v46 = v3;
  int64_t v47 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v53 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v17 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v19 = 0;
  uint64_t v50 = v6;
  for (i = v9; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v19 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v47) {
      break;
    }
    char v25 = v48;
    unint64_t v26 = v48[v24];
    ++v19;
    if (!v26)
    {
      int64_t v19 = v24 + 1;
      if (v24 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v26 = v48[v19];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v46;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v48[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v19 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v19 >= v47) {
              goto LABEL_34;
            }
            unint64_t v26 = v48[v19];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v19 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v19 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v6 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v52)
    {
      (*v53)(v8, v29, v58);
      uint64_t v30 = (unsigned __int8 *)(*(void *)(v11 + 56) + 16 * v23);
      int v31 = *v30;
      int v56 = v30[1];
      int v57 = v31;
      int v32 = v30[2];
      int v54 = v30[3];
      int v55 = v32;
      uint64_t v33 = *((void *)v30 + 1);
    }
    else
    {
      (*v49)(v8, v29, v58);
      uint64_t v34 = (unsigned __int8 *)(*(void *)(v11 + 56) + 16 * v23);
      int v35 = *v34;
      int v56 = v34[1];
      int v57 = v35;
      int v36 = v34[2];
      int v54 = v34[3];
      int v55 = v36;
      uint64_t v33 = *((void *)v34 + 1);
      swift_unknownObjectRetain();
    }
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v37 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v17 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v38) & ~*(void *)(v17 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v17 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v20 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v53)(*(void *)(v12 + 48) + v28 * v20, v8, v58);
    uint64_t v21 = *(void *)(v12 + 56) + 16 * v20;
    *(unsigned char *)uint64_t v21 = v57;
    *(unsigned char *)(v21 + 1) = v56;
    *(unsigned char *)(v21 + 2) = v55;
    *(unsigned char *)(v21 + 3) = v54;
    *(void *)(v21 + 8) = v33;
    ++*(void *)(v12 + 16);
    uint64_t v6 = v50;
  }
  swift_release();
  uint64_t v3 = v46;
  char v25 = v48;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v11 + 32);
  if (v44 >= 64) {
    bzero(v25, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v44;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1D2F121C8(uint64_t a1, int a2)
{
  return sub_1D2F10140(a1, a2, &qword_1EA698658);
}

uint64_t sub_1D2F121D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698650);
  uint64_t result = sub_1D30025C8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    int v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_1D3002928();
      sub_1D3002938();
      uint64_t result = sub_1D3002968();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D2F1249C(uint64_t a1, char a2)
{
  return sub_1D2F124B4(a1, a2, (uint64_t *)&unk_1EBD635A0);
}

uint64_t sub_1D2F124A8(uint64_t a1, char a2)
{
  return sub_1D2F124B4(a1, a2, &qword_1EBD5FCD8);
}

uint64_t sub_1D2F124B4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_1D30025C8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    char v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1D3002928();
    sub_1D3001C28();
    uint64_t result = sub_1D3002968();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *int64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1D2F127C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCE0);
  char v37 = a2;
  uint64_t v6 = sub_1D30025C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1D3002928();
    sub_1D3001C28();
    uint64_t result = sub_1D3002968();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D2F12ACC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698680);
  char v42 = a2;
  uint64_t v6 = sub_1D30025C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    int64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D3002928();
    sub_1D3001C28();
    uint64_t result = sub_1D3002968();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1D2F12DF4()
{
  return sub_1D2F130A4(&qword_1EBD614C0);
}

void *sub_1D2F12E00()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61490);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D30025B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D2F13098()
{
  return sub_1D2F130A4((uint64_t *)&unk_1EBD614C8);
}

void *sub_1D2F130A4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D30025B8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 4 * v16;
    int v18 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v16);
    uint64_t v19 = 8 * v16;
    uint64_t v20 = *(void *)(*(void *)(v3 + 56) + v19);
    *(_DWORD *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2F13244()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6986A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeatureProvider()
{
  return self;
}

uint64_t method lookup function for FeatureProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureProvider);
}

uint64_t dispatch thunk of FeatureProvider.__allocating_init(features:targetName:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeatureProvider.featureValue(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1D2F13470(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D30010A8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1D2F134B4()
{
  uint64_t v1 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61498);
  int64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_1D30025B8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t *v24 = v10;
    return result;
  }
  uint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_1D2F15C14(*(void *)(v8 + 56) + v20, (uint64_t)v3);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    uint64_t result = (void *)sub_1D2F15C78((uint64_t)v3, *(void *)(v10 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1D2F137CC()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD614B0);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D30025B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    unint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1D2F13A64()
{
  return sub_1D2F14AD0(&qword_1EA6986A0);
}

void *sub_1D2F13A70()
{
  return sub_1D2F14F94(&qword_1EBD614A0);
}

void *sub_1D2F13A7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  int64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v30 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698660);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1D30025B8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t v30 = v1;
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(v7 + 16);
  uint64_t v36 = v7;
  uint64_t v37 = v9;
  *(void *)(v9 + 16) = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v31 = v7 + 64;
  int64_t v32 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v33 = v3 + 2;
  uint64_t v17 = v34;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v27 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v32) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v27);
    ++v12;
    if (!v28)
    {
      int64_t v12 = v27 + 1;
      if (v27 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v31 + 8 * v12);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v28 - 1) & v28;
    unint64_t v19 = __clz(__rbit64(v28)) + (v12 << 6);
LABEL_9:
    uint64_t v20 = v36;
    unint64_t v21 = v3[9] * v19;
    uint64_t v22 = (void (*)(char *, unint64_t, uint64_t))v3[2];
    v22(v17, *(void *)(v36 + 48) + v21, v2);
    unint64_t v23 = *(void *)(v20 + 56) + v21;
    uint64_t v24 = v35;
    v22(v35, v23, v2);
    uint64_t v25 = v37;
    uint64_t v26 = (void (*)(unint64_t, char *, uint64_t))v3[4];
    v26(*(void *)(v37 + 48) + v21, v17, v2);
    id result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v25 + 56) + v21, v24, v2);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v30;
    uint64_t v9 = v37;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    int64_t v12 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v12);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2F13D78()
{
  return sub_1D2F14F94(&qword_1EA698670);
}

void *sub_1D2F13D84()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD614B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1D2F13F2C()
{
  uint64_t v39 = sub_1D30010A8();
  uint64_t v1 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698678);
  uint64_t v33 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1D30025B8();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v41 = v4;
  if (!v5)
  {
    id result = (char *)swift_release();
    uint64_t v31 = v41;
    uint64_t v30 = v33;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  id result = (char *)(v4 + 64);
  uint64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    id result = (char *)memmove(result, v8, 8 * v9);
    uint64_t v6 = v41;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v40 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v37 = v1 + 16;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v36 = v1 + 32;
  unint64_t v15 = v38;
  uint64_t v14 = v39;
  uint64_t v16 = v41;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v40;
      goto LABEL_9;
    }
    int64_t v27 = v10 + 1;
    uint64_t v19 = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v35) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v34 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(void *)(v19 + 48) + v20, v14);
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v22 = 16 * v18;
    unint64_t v23 = (uint64_t *)(v21 + 16 * v18);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v16 + 48) + v20, v15, v14);
    uint64_t v26 = (void *)(*(void *)(v16 + 56) + v22);
    *uint64_t v26 = v24;
    v26[1] = v25;
    swift_retain();
    id result = (char *)swift_retain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_23:
    id result = (char *)swift_release();
    uint64_t v30 = v33;
    uint64_t v31 = v41;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v34 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2F1420C()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698698);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1D30025B8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D2F144A0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FD70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2F14644()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD614A8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1D30025B8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  unint64_t v23 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v6 + 56) + v18);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    *(void *)(*(void *)(v8 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2F148E4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698690);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)(v21 + 16);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v24 = *(_OWORD *)v21;
    *unint64_t v23 = v18;
    v23[1] = v19;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v25 = v24;
    *(void *)(v25 + 16) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D2F14AC4()
{
  return sub_1D2F14AD0(&qword_1EA698688);
}

id sub_1D2F14AD0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D30025B8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1D2F14C6C()
{
  uint64_t v41 = sub_1D30010A8();
  uint64_t v43 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698668);
  int64_t v35 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v44 = v3;
  if (!v4)
  {
    id result = (char *)swift_release();
    uint64_t v33 = v44;
    uint64_t v32 = v35;
LABEL_25:
    *uint64_t v32 = v33;
    return result;
  }
  uint64_t v5 = v3;
  id result = (char *)(v3 + 64);
  uint64_t v7 = (char *)(v2 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v36 = v2 + 64;
  if (v5 != v2 || result >= &v7[8 * v8])
  {
    id result = (char *)memmove(result, v7, 8 * v8);
    uint64_t v5 = v44;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v42 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v13 = v44;
  uint64_t v39 = v43 + 16;
  int64_t v37 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v38 = v43 + 32;
  uint64_t v14 = v43;
  unint64_t v15 = v40;
  uint64_t v16 = v41;
  while (1)
  {
    if (v12)
    {
      uint64_t v45 = (v12 - 1) & v12;
      int64_t v46 = v9;
      unint64_t v17 = __clz(__rbit64(v12)) | (v9 << 6);
      uint64_t v18 = v42;
      goto LABEL_9;
    }
    int64_t v28 = v9 + 1;
    uint64_t v18 = v42;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v28);
    int64_t v30 = v9 + 1;
    if (!v29)
    {
      int64_t v30 = v9 + 2;
      if (v9 + 2 >= v37) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v36 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    uint64_t v45 = (v29 - 1) & v29;
    int64_t v46 = v30;
    unint64_t v17 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v14 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v18 + 48) + v19, v16);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    uint64_t v22 = (char *)(v20 + 16 * v17);
    char v23 = *v22;
    int v47 = v22[1];
    char v24 = v22[2];
    char v25 = v22[3];
    uint64_t v26 = *((void *)v22 + 1);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v13 + 48) + v19, v15, v16);
    uint64_t v27 = *(void *)(v13 + 56) + v21;
    *(unsigned char *)uint64_t v27 = v23;
    *(unsigned char *)(v27 + 1) = v47;
    *(unsigned char *)(v27 + 2) = v24;
    *(unsigned char *)(v27 + 3) = v25;
    *(void *)(v27 + 8) = v26;
    id result = (char *)swift_unknownObjectRetain();
    unint64_t v12 = v45;
    int64_t v9 = v46;
  }
  uint64_t v31 = v9 + 3;
  if (v9 + 3 >= v37)
  {
LABEL_23:
    id result = (char *)swift_release();
    uint64_t v32 = v35;
    uint64_t v33 = v44;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v36 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v9 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v37) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v36 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2F14F88()
{
  return sub_1D2F14F94(&qword_1EA698658);
}

void *sub_1D2F14F94(uint64_t *a1)
{
  uint64_t v3 = sub_1D30010A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v26 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_1D30025B8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v26 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v27 = v7 + 64;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  uint64_t v30 = v4 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v13);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2F15228()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698650);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D2F153B8()
{
  return sub_1D2F153D0((uint64_t *)&unk_1EBD635A0);
}

id sub_1D2F153C4()
{
  return sub_1D2F153D0(&qword_1EBD5FCD8);
}

id sub_1D2F153D0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D30025B8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2F1557C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2F1572C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698680);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30025B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D2F158E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1D3001FD8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1D2FDFC4C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1D2F15980(uint64_t a1)
{
  uint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  int64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  int64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
  uint64_t v29 = sub_1D3001FD8();
  if (v10)
  {
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    unint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    int64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1D2FDFDFC(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1D2F15C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F15C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MaximumRecordCountPolicy.__allocating_init(maximumRecordCount:evictor:evictionPolicy:countKeyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  MaximumRecordCountPolicy.init(maximumRecordCount:evictor:evictionPolicy:countKeyPath:)(a1, a2, a3, a4);
  return v8;
}

char *MaximumRecordCountPolicy.init(maximumRecordCount:evictor:evictionPolicy:countKeyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void **)v4;
  *((void *)v4 + 2) = a1;
  (*(void (**)(char *))(*(void *)(v7[12] - 8) + 32))(&v4[v7[17]]);
  (*(void (**)(char *, uint64_t))(*(void *)(v7[13] - 8) + 32))(&v4[*(void *)(*(void *)v4 + 144)], a3);
  *(void *)&v4[*(void *)(*(void *)v4 + 152)] = a4;
  return v4;
}

void sub_1D2F15E40(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  v78[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = *v1;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
  swift_retain_n();
  uint64_t v72 = v8;
  int64_t v9 = sub_1D30018F8();
  os_log_type_t v10 = sub_1D30020A8();
  uint64_t v73 = v6;
  if (os_log_type_enabled(v9, v10))
  {
    v74 = a1;
    uint64_t v75 = v2;
    uint64_t v11 = swift_slowAlloc();
    unint64_t v12 = (void *)swift_slowAlloc();
    v78[0] = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    v71 = *(void **)(v6 + 80);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v14 = objc_msgSend(ObjCClassFromMetadata, sel_entity);
    id v15 = objc_msgSend(v14, sel_name);

    if (v15)
    {
      uint64_t v16 = sub_1D3001B78();
      unint64_t v18 = v17;
    }
    else
    {
      unint64_t v18 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    uint64_t v77 = sub_1D2F09508(v16, v18, (uint64_t *)v78);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    uint64_t v20 = v4[2];
    swift_release();
    uint64_t v77 = v20;
    sub_1D3002318();
    swift_release();
    _os_log_impl(&dword_1D2F05000, v9, v10, "Checking record count for entity type (%s) does not exceed %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v12, -1, -1);
    MEMORY[0x1D942F2D0](v11, -1, -1);

    a1 = v74;
    uint64_t v3 = v75;
    uint64_t v19 = v71;
  }
  else
  {

    swift_release_n();
    uint64_t v19 = *(void **)(v6 + 80);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  }
  id v21 = objc_msgSend(ObjCClassFromMetadata, sel_fetchRequest);
  v78[0] = 0;
  uint64_t v22 = (char *)objc_msgSend(a1, sel_countForFetchRequest_error_, v21, v78);

  if (v78[0])
  {
    v78[0];
    swift_willThrow();
    return;
  }
  swift_retain_n();
  uint64_t v23 = sub_1D30018F8();
  os_log_type_t v24 = sub_1D30020A8();
  v71 = v4;
  v74 = a1;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218240;
    v78[0] = v22;
    sub_1D3002318();
    *(_WORD *)(v25 + 12) = 2048;
    uint64_t v26 = v3;
    int64_t v27 = (void *)v71[2];
    swift_release();
    v78[0] = v27;
    uint64_t v3 = v26;
    uint64_t v4 = v71;
    sub_1D3002318();
    swift_release();
    _os_log_impl(&dword_1D2F05000, v23, v24, "Record Count: %ld/%ld", (uint8_t *)v25, 0x16u);
    MEMORY[0x1D942F2D0](v25, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v28 = v73;
  uint64_t v29 = v4[2];
  if (v29 >= (uint64_t)v22)
  {
    uint64_t v53 = sub_1D30018F8();
    os_log_type_t v54 = sub_1D30020A8();
    if (!os_log_type_enabled(v53, v54))
    {
LABEL_39:

      return;
    }
    int v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v55 = 0;
    int v56 = "Total records less than maximum. Skipping Policy.";
    int v57 = v53;
    os_log_type_t v58 = v54;
    unint64_t v59 = v55;
    uint32_t v60 = 2;
LABEL_38:
    _os_log_impl(&dword_1D2F05000, v57, v58, v56, v59, v60);
    MEMORY[0x1D942F2D0](v55, -1, -1);
    goto LABEL_39;
  }
  uint64_t v30 = &v22[-v29];
  if (__OFSUB__(v22, v29)) {
    goto LABEL_42;
  }
  uint64_t v31 = sub_1D30018F8();
  os_log_type_t v32 = sub_1D30020A8();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134217984;
    uint64_t v4 = v71;
    v78[0] = v30;
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v31, v32, "Evicting %ld records from the store.", v33, 0xCu);
    uint64_t v34 = v33;
    uint64_t v28 = v73;
    MEMORY[0x1D942F2D0](v34, -1, -1);
  }

  uint64_t v35 = *(void *)(v28 + 120);
  uint64_t v36 = v28;
  int64_t v37 = v30;
  uint64_t v38 = *(void *)(v36 + 104);
  uint64_t v39 = (*(uint64_t (**)(char *, void *, uint64_t, uint64_t))(v35 + 16))(v37, v74, v38, v35);
  if (!v3)
  {
    uint64_t v40 = v39;
    v62[1] = v38;
    uint64_t v77 = 0;
    if (MEMORY[0x1D942DDC0](v39, v19))
    {
      uint64_t v41 = 0;
      uint64_t v69 = *(void *)(v36 + 112);
      uint64_t v66 = *(uint64_t (**)(void))(v69 + 24);
      uint64_t v67 = v69 + 24;
      uint64_t v42 = *v4;
      v65 = (char *)v4 + *(void *)(*v4 + 136);
      uint64_t v63 = *(void *)(v42 + 152);
      uint64_t v64 = v40;
      uint64_t v43 = 4;
      uint64_t v44 = v37;
      v62[0] = v35;
      while (1)
      {
        v68 = v41;
        char v45 = sub_1D3001E58();
        sub_1D3001E08();
        id v46 = (v45 & 1) != 0 ? *(id *)(v40 + 8 * v43) : (id)sub_1D3002468();
        uint64_t v47 = v73;
        if (__OFADD__(v43 - 4, 1)) {
          break;
        }
        uint64_t v70 = v43 - 3;
        int v48 = v46;
        uint64_t v49 = (void *)v66();
        if (v3)
        {

          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v75 = 0;
        if (*(void *)((char *)v71 + v63))
        {
          v68 = v62;
          v78[0] = v49;
          MEMORY[0x1F4188790](v49);
          sub_1D3001EA8();
          swift_retain();
          swift_getWitnessTable();
          uint64_t v50 = v75;
          sub_1D3001D48();
          uint64_t v75 = v50;
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v41 = (void *)v77;
        }
        else
        {
          uint64_t v51 = MEMORY[0x1D942DDA0](v49, *(void *)(v47 + 88));
          swift_bridgeObjectRelease();

          uint64_t v41 = (void *)((char *)v68 + v51);
          if (__OFADD__(v68, v51)) {
            goto LABEL_43;
          }
          uint64_t v77 = (uint64_t)v68 + v51;
        }
        uint64_t v40 = v64;
        if ((uint64_t)v41 < (uint64_t)v44)
        {
          uint64_t v52 = MEMORY[0x1D942DDC0](v64, v19);
          ++v43;
          uint64_t v3 = v75;
          if (v70 != v52) {
            continue;
          }
        }
        goto LABEL_36;
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
    }
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1D30018F8();
    os_log_type_t v61 = sub_1D30020A8();
    if (!os_log_type_enabled(v53, v61)) {
      goto LABEL_39;
    }
    int v55 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v55 = 134217984;
    swift_beginAccess();
    uint64_t v76 = v77;
    sub_1D3002318();
    int v56 = "Evicted a total of %ld records. Policy finished.";
    int v57 = v53;
    os_log_type_t v58 = v61;
    unint64_t v59 = v55;
    uint32_t v60 = 12;
    goto LABEL_38;
  }
}

void sub_1D2F16720(id *a1, uint64_t a2, void *a3)
{
  id v4 = *a1;
  swift_getAtKeyPath();

  if (v6 != 1)
  {
    if (__OFADD__(*a3, v5)) {
      __break(1u);
    }
    else {
      *a3 += v5;
    }
  }
}

uint64_t *MaximumRecordCountPolicy.deinit()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 96) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 104) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 144));
  swift_release();
  return v0;
}

uint64_t MaximumRecordCountPolicy.__deallocating_deinit()
{
  MaximumRecordCountPolicy.deinit();
  return swift_deallocClassInstance();
}

void sub_1D2F168E4(void **a1)
{
}

void *sub_1D2F1690C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_1D30025E8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_1D2F169B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_1D2F169E0(id *a1)
{
  sub_1D2F16720(a1, *(void *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1D2F16A0C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for MaximumRecordCountPolicy()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for MaximumRecordCountPolicy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MaximumRecordCountPolicy);
}

uint64_t dispatch thunk of MaximumRecordCountPolicy.__allocating_init(maximumRecordCount:evictor:evictionPolicy:countKeyPath:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of MaximumRecordCountPolicy.runPolicy(store:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1D2F16B74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAC8);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  uint64_t v44 = *(void *)(v45 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v38 - v9;
  uint64_t v10 = sub_1D3001018();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v40 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v38 - v14;
  sub_1D3001008();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v42 = v15;
  uint64_t v48 = v10;
  v16(v5, v15, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  unint64_t v17 = (void *)a1;
  sub_1D2F17208(a1, (uint64_t)v5, &v50);
  sub_1D2F1CD78((uint64_t)v5, &qword_1EBD62A80);
  long long v49 = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5E7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA78);
  sub_1D2F1D154(&qword_1EBD5E7C8, &qword_1EBD5E7D0);
  unint64_t v18 = v41;
  sub_1D3002578();
  uint64_t v19 = v40;
  uint64_t v20 = v15;
  uint64_t v21 = v48;
  v16(v40, v20, v48);
  unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = swift_allocObject();
  id v39 = v17;
  *(void *)(v23 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v23 + v22, v19, v21);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1D2F1CEA4;
  *(void *)(v24 + 24) = v23;
  uint64_t v25 = v45;
  uint64_t v26 = v46;
  int64_t v27 = v43;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v43, v18, v46);
  unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v29 = (v44 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v30 + v28, v27, v26);
  uint64_t v31 = (void *)(v30 + v29);
  void *v31 = sub_1D2F1CF28;
  v31[1] = v24;
  os_log_type_t v32 = *(void (**)(char *, uint64_t))(v25 + 8);
  id v33 = v39;
  v32(v18, v26);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1D2F1CFE0;
  *(void *)(v34 + 24) = v30;
  uint64_t v36 = v47;
  uint64_t v35 = v48;
  *uint64_t v47 = sub_1D2F1D0B0;
  v36[1] = v34;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v42, v35);
}

uint64_t sub_1D2F16FEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1D2F17010, 0, 0);
}

uint64_t sub_1D2F17010()
{
  unint64_t v1 = (void *)v0[2];
  *unint64_t v1 = v0[3];
  v1[1] = 0;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  swift_retain();
  return v3();
}

uint64_t sub_1D2F1707C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
  swift_bridgeObjectRetain();
  sub_1D3000F98();
  uint64_t v13 = v12;
  uint64_t v14 = (objc_class *)type metadata accessor for StreamBookmark();
  id v15 = (char *)objc_allocWithZone(v14);
  uint64_t v16 = &v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(void *)uint64_t v16 = v11;
  *((void *)v16 + 1) = v10;
  *(void *)&v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  unint64_t v17 = &v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(void *)unint64_t v17 = v13;
  v17[8] = 0;
  v19.receiver = v15;
  v19.super_class = v14;
  objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_retain();
}

uint64_t sub_1D2F17208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark);
    int v10 = *(unsigned __int8 *)(a1
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate
                             + 8);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
    int v10 = 1;
  }
  sub_1D2F1CCAC(a2, (uint64_t)v8, &qword_1EBD62A80);
  uint64_t v11 = sub_1D3001018();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11);
  if (v13 == 1)
  {
    sub_1D2F1CD78((uint64_t)v8, &qword_1EBD62A80);
    uint64_t v14 = 0;
    if (!v10) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_1D3000F98();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    uint64_t v14 = v16;
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v9)
  {
    uint64_t v17 = swift_unknownObjectRetain();
    sub_1D2F185C8(v17);
    char v19 = v18;
    swift_unknownObjectRelease();
    if (v19)
    {
      swift_unknownObjectRelease();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = MEMORY[0x1E4FBC860];
      unint64_t v22 = sub_1D2F1CA24;
      goto LABEL_11;
    }
  }
LABEL_10:
  id v20 = sub_1D2F1839C(v14, v13 == 1);
  swift_unknownObjectRelease();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v20;
  unint64_t v22 = sub_1D2F1CA1C;
LABEL_11:
  *a3 = v22;
  a3[1] = result;
  return result;
}

uint64_t sub_1D2F17460@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCC0);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  uint64_t v44 = *(void *)(v45 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v38 - v9;
  uint64_t v10 = sub_1D3001018();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v40 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v38 - v14;
  sub_1D3001008();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v42 = v15;
  uint64_t v48 = v10;
  v16(v5, v15, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  uint64_t v17 = (void *)a1;
  sub_1D2F17A9C(a1, (uint64_t)v5, &v50);
  sub_1D2F1CD78((uint64_t)v5, &qword_1EBD62A80);
  long long v49 = v50;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5F8A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5F7A8);
  sub_1D2F1D154(&qword_1EBD5F8A0, (uint64_t *)&unk_1EBD5F8A8);
  char v18 = v41;
  sub_1D3002578();
  char v19 = v40;
  id v20 = v15;
  uint64_t v21 = v48;
  v16(v40, v20, v48);
  unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = swift_allocObject();
  id v39 = v17;
  *(void *)(v23 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v23 + v22, v19, v21);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1D2F1C91C;
  *(void *)(v24 + 24) = v23;
  uint64_t v25 = v45;
  uint64_t v26 = v46;
  int64_t v27 = v43;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v43, v18, v46);
  unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v29 = (v44 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v30 + v28, v27, v26);
  uint64_t v31 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v30 + v29);
  void *v31 = sub_1D2F1C9A8;
  v31[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v24;
  os_log_type_t v32 = *(void (**)(char *, uint64_t))(v25 + 8);
  id v33 = v39;
  v32(v18, v26);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1D2F1C9BC;
  *(void *)(v34 + 24) = v30;
  uint64_t v36 = v47;
  uint64_t v35 = v48;
  *uint64_t v47 = sub_1D2F1C9DC;
  v36[1] = v34;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v42, v35);
}

uint64_t sub_1D2F178D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1D2F1D1E0, 0, 0);
}

id sub_1D2F178FC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1D3001018();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  uint64_t v15 = *(void *)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  uint64_t v14 = *(void *)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
  swift_bridgeObjectRetain();
  sub_1D3000F98();
  uint64_t v17 = v16;
  char v18 = (objc_class *)type metadata accessor for StreamBookmark();
  char v19 = (char *)objc_allocWithZone(v18);
  id v20 = &v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(void *)id v20 = v15;
  *((void *)v20 + 1) = v14;
  *(void *)&v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  uint64_t v21 = &v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(void *)uint64_t v21 = v17;
  v21[8] = 0;
  v24.receiver = v19;
  v24.super_class = v18;
  id v22 = objc_msgSendSuper2(&v24, sel_init);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a1 = v13;
  swift_retain();
  return v22;
}

uint64_t sub_1D2F17A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCD0);
  uint64_t v7 = *(void *)(v40 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v40);
  v37[1] = v9;
  uint64_t v38 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v39 = (char *)v37 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v3;
  if (a1)
  {
    uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark);
    int v15 = *(unsigned __int8 *)(a1
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate
                             + 8);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v14 = 0;
    int v15 = 1;
  }
  sub_1D2F1CCAC(a2, (uint64_t)v13, &qword_1EBD62A80);
  uint64_t v16 = sub_1D3001018();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16);
  if (v18 == 1)
  {
    sub_1D2F1CD78((uint64_t)v13, &qword_1EBD62A80);
    uint64_t v19 = 0;
  }
  else
  {
    sub_1D3000F98();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v16);
    uint64_t v19 = v21;
  }
  id v22 = a3;
  if (v15
    && v14
    && (uint64_t v23 = swift_unknownObjectRetain(), sub_1D2F185C8(v23), v25 = v24, swift_unknownObjectRelease(), (v25 & 1) != 0))
  {
    swift_unknownObjectRelease();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = MEMORY[0x1E4FBC860];
    *a3 = sub_1D2F1C72C;
    a3[1] = result;
  }
  else
  {
    id v26 = sub_1D2F1839C(v19, v18 == 1);
    swift_unknownObjectRelease();
    int64_t v27 = (objc_class *)_s17ScanConversationsCMa();
    unint64_t v28 = (char *)objc_allocWithZone(v27);
    *(void *)&v28[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_inner] = 0;
    *(void *)&v28[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_upstream] = v26;
    v46.receiver = v28;
    v46.super_class = v27;
    id v29 = v26;
    id v42 = objc_msgSendSuper2(&v46, sel_init);
    uint64_t v43 = 0x402E000000000000;
    uint64_t v44 = &unk_1EA698708;
    uint64_t v45 = 0;
    id v30 = v42;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBD5FA78);
    sub_1D2F1D154(&qword_1EBD5FA70, qword_1EBD5FA78);
    uint64_t v31 = v39;
    sub_1D3002578();
    os_log_type_t v32 = v38;
    uint64_t v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v38, v31, v40);
    unint64_t v34 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v35 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v35 + v34, v32, v33);

    void *v22 = sub_1D2F1C680;
    v22[1] = v35;
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v31, v33);
  }
  return result;
}

void sub_1D2F17EF8(uint64_t a1)
{
  if (a1)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v1 = sub_1D2F180EC();
    unint64_t v3 = v2;
  }
  else
  {
    unint64_t v3 = 0xE500000000000000;
    uint64_t v1 = 0x3E6C696E3CLL;
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D3001918();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D30018F8();
  os_log_type_t v6 = sub_1D30020C8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    sub_1D3002318();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1D2F09508(v1, v3, &v9);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v5, v6, "BiomeAsyncSequence next element threshold exceeded: delta=%f, counts=%s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v8, -1, -1);
    MEMORY[0x1D942F2D0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1D2F180EC()
{
  swift_retain();
  sub_1D3002538();
  uint64_t result = sub_1D3002608();
  uint64_t v1 = v3;
  if (v3)
  {
    uint64_t v2 = 0;
    while (!__OFADD__(v2, 1))
    {
      uint64_t v4 = sub_1D3002738();
      sub_1D3001C68();
      if (*(void *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1D30025A8();
        swift_bridgeObjectRelease();
      }
      sub_1D3002738();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      sub_1D3001C68();
      sub_1D3001C68();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1D3002608();
      uint64_t v1 = v4;
      ++v2;
      if (!v4) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_release();
    swift_release();
    return 124;
  }
  return result;
}

uint64_t sub_1D2F1828C(uint64_t *a1)
{
  sub_1D2F17EF8(*a1);
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1D2F1C910(v2);
}

uint64_t sub_1D2F1830C(void *a1, uint64_t a2)
{
  *a1 = *(void *)(*(void *)a2 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  swift_retain();
  return sub_1D2F1C910(v3);
}

id sub_1D2F1839C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1D3001018();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v22 - v9;
  sub_1D3000F88();
  uint64_t v11 = *(void **)(v2 + 16);
  uint64_t v12 = (void *)sub_1D3001F98();
  uint64_t v13 = 0;
  if ((a2 & 1) == 0) {
    uint64_t v13 = (void *)sub_1D3001F98();
  }
  id v14 = objc_msgSend(v11, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v12, v13, 0, 0);

  int v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v8, v10, v4);
  uint64_t v16 = (objc_class *)_s9ScanTurnsCMa(0);
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  *(void *)&v17[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_inner] = 0;
  *(void *)&v17[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_upstream] = v14;
  v15(&v17[OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_turnsStartDateTime], v8, v4);
  v22.receiver = v17;
  v22.super_class = v16;
  id v18 = v14;
  id v19 = objc_msgSendSuper2(&v22, sel_init);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v8, v4);

  v20(v10, v4);
  return v19;
}

uint64_t sub_1D2F185C8(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  sub_1D2F1C528();
  uint64_t v4 = (void *)sub_1D30022A8();
  uint64_t v5 = (void *)sub_1D30022A8();
  id v6 = objc_msgSend(v3, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v4, 0, v5, 0);

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(unsigned char *)(v7 + 24) = 1;
  id v18 = (uint64_t (*)(void *))nullsub_1;
  uint64_t v19 = 0;
  uint64_t v14 = MEMORY[0x1E4F143A8];
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_1D2F187DC;
  uint64_t v17 = &block_descriptor_0;
  uint64_t v8 = _Block_copy(&v14);
  id v18 = sub_1D2F1C590;
  uint64_t v19 = v7;
  uint64_t v14 = MEMORY[0x1E4F143A8];
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_1D2F18864;
  uint64_t v17 = &block_descriptor_49;
  uint64_t v9 = _Block_copy(&v14);
  id v10 = v6;
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v10, sel_sinkWithBookmark_completion_receiveInput_, a1, v8, v9);

  _Block_release(v9);
  _Block_release(v8);

  swift_beginAccess();
  uint64_t v12 = *(void *)(v7 + 16);
  swift_release();
  return v12;
}

void sub_1D2F187DC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(id, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, a3);
  swift_release();
  swift_unknownObjectRelease();
}

void sub_1D2F18864(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1D2F188CC()
{
  return swift_deallocClassInstance();
}

double sub_1D2F18904@<D0>(void *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1D2F17208(0, (uint64_t)v4, &v8);
  sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62A80);
  uint64_t v6 = swift_allocObject();
  double result = *(double *)&v8;
  *(_OWORD *)(v6 + 16) = v8;
  *a1 = sub_1D2F1D1D8;
  a1[1] = v6;
  return result;
}

double sub_1D2F18A10@<D0>(void *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1D2F17A9C(0, (uint64_t)v4, &v8);
  sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62A80);
  uint64_t v6 = swift_allocObject();
  double result = *(double *)&v8;
  *(_OWORD *)(v6 + 16) = v8;
  *a1 = sub_1D2F1D1D4;
  a1[1] = v6;
  return result;
}

double sub_1D2F18B1C@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D3001018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1D2F17208(a1, (uint64_t)v6, &v10);
  sub_1D2F1CD78((uint64_t)v6, &qword_1EBD62A80);
  uint64_t v8 = swift_allocObject();
  double result = *(double *)&v10;
  *(_OWORD *)(v8 + 16) = v10;
  *a2 = sub_1D2F1C3E8;
  a2[1] = v8;
  return result;
}

uint64_t sub_1D2F18C34@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1D2F16B74(a1, a2);
}

double sub_1D2F18C58@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D3001018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1D2F17A9C(a1, (uint64_t)v6, &v10);
  sub_1D2F1CD78((uint64_t)v6, &qword_1EBD62A80);
  uint64_t v8 = swift_allocObject();
  double result = *(double *)&v10;
  *(_OWORD *)(v8 + 16) = v10;
  *a2 = sub_1D2F1C240;
  a2[1] = v8;
  return result;
}

uint64_t sub_1D2F18D70@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1D2F17460(a1, a2);
}

id makeAsyncBiomeSignalReaderForTesting()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AsyncBiomeSignalReader();
  uint64_t v3 = swift_allocObject();
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F50460]), sel_init);
  *(void *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F2A16410;
  a1[5] = (uint64_t)&off_1F2A163F8;
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for AsyncBiomeSignalReader()
{
  return self;
}

uint64_t sub_1D2F18E30()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5EA98);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)v19 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v19 - v8;
  long long v10 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v11 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58);
  uint64_t v12 = *(void **)((char *)v0 + v11);
  if ((unint64_t)v12 >= 2) {
    id v13 = v12;
  }
  else {
    id v13 = 0;
  }
  *(void *)((char *)v0 + v11) = 1;
  sub_1D2F1CC9C(v12);
  objc_msgSend(v13, sel_cancel);
  uint64_t v14 = (uint64_t)v0 + *(void *)((*v10 & *v0) + 0x60);
  swift_beginAccess();
  sub_1D2F1CCAC(v14, (uint64_t)v9, (uint64_t *)&unk_1EBD5EA98);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA90);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v7, 1, 1, v15);
  swift_beginAccess();
  sub_1D2F1CD10((uint64_t)v7, v14);
  swift_endAccess();
  sub_1D2F1CCAC((uint64_t)v9, (uint64_t)v4, (uint64_t *)&unk_1EBD5EA98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15) == 1)
  {
    sub_1D2F1CD78((uint64_t)v9, (uint64_t *)&unk_1EBD5EA98);

    return sub_1D2F1CD78((uint64_t)v4, (uint64_t *)&unk_1EBD5EA98);
  }
  else
  {
    sub_1D3001F08();
    sub_1D2F1CC44();
    uint64_t v18 = swift_allocError();
    sub_1D3001A68();
    v19[0] = v18;
    sub_1D3001ED8();

    sub_1D2F1CD78((uint64_t)v9, (uint64_t *)&unk_1EBD5EA98);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v4, v15);
  }
}

void sub_1D2F190F8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5EA98);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v10 = (uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x60);
  swift_beginAccess();
  sub_1D2F1CCAC(v10, (uint64_t)v8, (uint64_t *)&unk_1EBD5EA98);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA90);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11);
  sub_1D2F1CD78((uint64_t)v8, (uint64_t *)&unk_1EBD5EA98);
  if (v13 == 1)
  {
    uint64_t v14 = *(void **)((char *)v1 + *(void *)((*v9 & *v1) + 0x58));
    if (v14)
    {
      if (v14 == (void *)1)
      {
        v16[0] = 0;
        sub_1D3001EE8();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v6, a1, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
        swift_beginAccess();
        id v15 = v14;
        sub_1D2F1CD10((uint64_t)v6, v10);
        swift_endAccess();
        objc_msgSend(v15, sel_requestDemand_, BPSDemandMax());
        sub_1D2F1CC9C(v14);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v6, a1, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
      swift_beginAccess();
      sub_1D2F1CD10((uint64_t)v6, v10);
      swift_endAccess();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D2F193B4(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCB0);
  v1[7] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F19438, 0, 0);
}

uint64_t sub_1D2F19438()
{
  swift_beginAccess();
  uint64_t v1 = sub_1D2F1D154(&qword_1EBD5FCA8, &qword_1EBD5FCB0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F19518;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  return MEMORY[0x1F4187C78](v4, v3, v1);
}

uint64_t sub_1D2F19518()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D2F1D198, 0, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D2F19654(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1D2F19674, 0, 0);
}

uint64_t sub_1D2F19674()
{
  uint64_t v1 = v0[6];
  swift_beginAccess();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F1975C;
  uint64_t v3 = v0[5];
  return v5(v3);
}

uint64_t sub_1D2F1975C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F1D1E4;
  }
  else {
    uint64_t v2 = sub_1D2F1D19C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F19870(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1D2F19890, 0, 0);
}

uint64_t sub_1D2F19890()
{
  swift_beginAccess();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EA6986F8 + dword_1EA6986F8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D2F19954;
  uint64_t v2 = *(void *)(v0 + 40);
  return v4(v2);
}

uint64_t sub_1D2F19954()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D2F1D1E4, 0, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D2F19A90(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1D2F19AB0, 0, 0);
}

uint64_t sub_1D2F19AB0()
{
  uint64_t v1 = v0[6];
  swift_beginAccess();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F19B98;
  uint64_t v3 = v0[5];
  return v5(v3);
}

uint64_t sub_1D2F19B98()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F19D10;
  }
  else {
    uint64_t v2 = sub_1D2F19CAC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F19CAC()
{
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F19D10()
{
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F19D74(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6986E0);
  v1[7] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F19DF8, 0, 0);
}

uint64_t sub_1D2F19DF8()
{
  swift_beginAccess();
  uint64_t v1 = sub_1D2F1D154(&qword_1EA6986E8, &qword_1EA6986E0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F19ED8;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  return MEMORY[0x1F4187C78](v4, v3, v1);
}

uint64_t sub_1D2F19ED8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D2F1A014, 0, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D2F1A014()
{
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F1A078(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698788);
  v1[7] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F1A0FC, 0, 0);
}

uint64_t sub_1D2F1A0FC()
{
  swift_beginAccess();
  uint64_t v1 = sub_1D2F1D154(&qword_1EA6987A8, &qword_1EA698788);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F19518;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  return MEMORY[0x1F4187C78](v4, v3, v1);
}

uint64_t sub_1D2F1A1DC(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return MEMORY[0x1F4188298](sub_1D2F1A1FC, 0, 0);
}

uint64_t sub_1D2F1A1FC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t result = swift_beginAccess();
  unint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1D30025A8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3 == v6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v7 = *(void *)(*(void *)(v0 + 40) + 16);
    if ((v7 & 0xC000000000000001) == 0)
    {
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v3 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v5 = *(void *)(v7 + 8 * v3 + 32);
        uint64_t result = swift_retain();
        goto LABEL_9;
      }
      __break(1u);
      goto LABEL_17;
    }
    uint64_t result = MEMORY[0x1D942E3A0](v3);
    uint64_t v5 = result;
LABEL_9:
    uint64_t v8 = *(void *)(v1 + 24);
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (!v9)
    {
      *(void *)(v1 + 24) = v10;
      goto LABEL_11;
    }
LABEL_17:
    __break(1u);
    return result;
  }
  if (v3 != *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v5 = 0;
LABEL_11:
  swift_endAccess();
  uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v5);
}

uint64_t sub_1D2F1A344(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1D2F1A364, 0, 0);
}

uint64_t sub_1D2F1A364()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v5 = *(void *)(v4 + 16);
  if (v3 == v5)
  {
    **(void **)(v0 + 40) = 0;
  }
  else
  {
    if (v3 >= v5)
    {
      __break(1u);
      return result;
    }
    **(void **)(v0 + 40) = *(void *)(v4 + 8 * v3 + 32);
    *(void *)(v1 + 24) = v3 + 1;
    swift_retain();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1D2F1A418(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1D2F1A438, 0, 0);
}

uint64_t sub_1D2F1A438()
{
  swift_beginAccess();
  sub_1D3002608();
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F1A4CC()
{
  *(void *)(v1 + 64) = v0;
  return MEMORY[0x1F4188298](sub_1D2F1A4EC, 0, 0);
}

uint64_t sub_1D2F1A4EC()
{
  uint64_t v1 = (int **)v0[8];
  if ((_BYTE)v1[4])
  {
    uint64_t v2 = v0 + 6;
    *((unsigned char *)v1 + 32) = 0;
    uint64_t v10 = (uint64_t (*)(void *))((char *)*v1 + **v1);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_1D2F1A6B4;
LABEL_5:
    v3[1] = v4;
    return v10(v2);
  }
  unint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  v0[11] = v6;
  v0[12] = v5;
  if (v5)
  {
    uint64_t v2 = v0 + 4;
    v0[2] = v5;
    v0[3] = v6;
    uint64_t v10 = (uint64_t (*)(void *))((char *)*v1 + **v1);
    swift_retain();
    uint64_t v7 = v6;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[13] = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_1D2F1A93C;
    goto LABEL_5;
  }
  BOOL v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1D2F1A6B4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F1A924;
  }
  else {
    uint64_t v2 = sub_1D2F1A7C8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F1A7C8()
{
  uint64_t v2 = (void *)v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_1D2F1C4E8(*(void *)(v1 + 40), *(void **)(v1 + 48));
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = v2;
  v0[11] = v2;
  v0[12] = v3;
  if (v3)
  {
    uint64_t v4 = (void *)v0[8];
    v0[2] = v3;
    v0[3] = v2;
    BOOL v9 = (uint64_t (*)(void *))(*v4 + *(int *)*v4);
    swift_retain();
    id v5 = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[13] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1D2F1A93C;
    return v9(v0 + 4);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(void, void *))v0[1];
    return v8(0, v2);
  }
}

uint64_t sub_1D2F1A924()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2F1A93C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F1AB14;
  }
  else {
    uint64_t v2 = sub_1D2F1AA50;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F1AA50()
{
  uint64_t v9 = v0;
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 96);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v0 + 64) + 16))(v8, v0 + 16);
    swift_release();

    uint64_t v4 = v8[0];
    uint64_t v3 = v8[1];
  }
  uint64_t v5 = *(void *)(v0 + 64);
  sub_1D2F1C4E8(*(void *)(v5 + 40), *(void **)(v5 + 48));
  *(void *)(v5 + 40) = v1;
  *(void *)(v5 + 48) = v2;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v6(v4, v3);
}

uint64_t sub_1D2F1AB14()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F1AB80(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return MEMORY[0x1F4188298](sub_1D2F1ABA0, 0, 0);
}

uint64_t sub_1D2F1ABA0()
{
  uint64_t v1 = (int **)v0[9];
  if ((_BYTE)v1[4])
  {
    uint64_t v2 = v0 + 6;
    *((unsigned char *)v1 + 32) = 0;
    uint64_t v11 = (uint64_t (*)(void *))((char *)*v1 + **v1);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[10] = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_1D2F1AD6C;
LABEL_5:
    v3[1] = v4;
    return v11(v2);
  }
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  v0[12] = v6;
  v0[13] = v5;
  if (v5)
  {
    uint64_t v2 = v0 + 4;
    v0[2] = v5;
    v0[3] = v6;
    uint64_t v11 = (uint64_t (*)(void *))((char *)*v1 + **v1);
    swift_retain();
    uint64_t v7 = v6;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    uint64_t v4 = sub_1D2F1AFF4;
    goto LABEL_5;
  }
  uint64_t v9 = (void *)v0[8];
  *uint64_t v9 = 0;
  v9[1] = v6;
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1D2F1AD6C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F1AFDC;
  }
  else {
    uint64_t v2 = sub_1D2F1AE80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F1AE80()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)v0[7];
  sub_1D2F1C4E8(*(void *)(v1 + 40), *(void **)(v1 + 48));
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  v0[12] = v3;
  v0[13] = v2;
  if (v2)
  {
    uint64_t v4 = (void *)v0[9];
    v0[2] = v2;
    v0[3] = v3;
    uint64_t v10 = (uint64_t (*)(void *))(*v4 + *(int *)*v4);
    swift_retain();
    id v5 = v3;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[14] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1D2F1AFF4;
    return v10(v0 + 4);
  }
  else
  {
    uint64_t v8 = (void *)v0[8];
    *uint64_t v8 = 0;
    v8[1] = v3;
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1D2F1AFDC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2F1AFF4()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F1B1CC;
  }
  else {
    uint64_t v2 = sub_1D2F1B108;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F1B108()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  if (v1)
  {
    uint64_t v4 = v0[12];
    uint64_t v3 = v0[13];
  }
  else
  {
    (*(void (**)(void *__return_ptr, void *))(v0[9] + 16))(v10, v0 + 2);
    id v5 = (void *)v0[3];
    swift_release();

    uint64_t v3 = v10[0];
    uint64_t v4 = v10[1];
  }
  uint64_t v7 = (void *)v0[8];
  uint64_t v6 = v0[9];
  sub_1D2F1C4E8(*(void *)(v6 + 40), *(void **)(v6 + 48));
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *uint64_t v7 = v3;
  v7[1] = v4;
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1D2F1B1CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F1B238()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D2F1B258, 0, 0);
}

uint64_t sub_1D2F1B258()
{
  uint64_t v1 = v0[3];
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2(0);
  }
  else if (sub_1D3001F68())
  {
    *(unsigned char *)(v1 + 24) = 1;
    sub_1D2F18E30();
    sub_1D3001F08();
    sub_1D2F1CC44();
    swift_allocError();
    sub_1D3001A68();
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    id v5 = (void *)swift_task_alloc();
    v0[4] = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA70);
    void *v5 = v0;
    v5[1] = sub_1D2F1B40C;
    uint64_t v7 = v0[3];
    return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0x29287478656ELL, 0xE600000000000000, sub_1D2F1CC20, v7, v6);
  }
}

uint64_t sub_1D2F1B40C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F1B54C;
  }
  else {
    uint64_t v2 = sub_1D2F1B520;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F1B520()
{
  if (!*(void *)(v0 + 16)) {
    *(unsigned char *)(*(void *)(v0 + 24) + 24) = 1;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2F1B54C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2F1B564@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCB0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1D2F1D154(&qword_1EBD5FCC8, &qword_1EBD5FCD0);
  sub_1D3001F78();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v15 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v12, v8);
  *a2 = &unk_1EA698730;
  a2[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1D2F1B794@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698780);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698788);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1D2F1D154(&qword_1EA698790, &qword_1EA698780);
  sub_1D3001F78();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v15 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v12, v8);
  *a2 = &unk_1EA6987A0;
  a2[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1D2F1B9C4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1BA74;
  v4[5] = a2;
  return MEMORY[0x1F4188298](sub_1D2F1A1FC, 0, 0);
}

uint64_t sub_1D2F1BA74(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1D2F1BB84@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5E7E0);
  uint64_t v4 = swift_allocObject();
  id v5 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5E7D8));
  id v6 = v3;
  id v7 = objc_msgSend(v5, sel_init);
  *(void *)(v4 + 16) = v7;
  *(unsigned char *)(v4 + 24) = 0;
  objc_msgSend(v6, sel_subscribe_, v7);

  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v4;
  *a2 = &unk_1EA698760;
  a2[1] = result;
  return result;
}

uint64_t sub_1D2F1BC44(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1D2F1BC64, 0, 0);
}

uint64_t sub_1D2F1BC64()
{
  swift_beginAccess();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA698768 + dword_1EA698768);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D2F1BD20;
  return v3();
}

uint64_t sub_1D2F1BD20(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[8] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1D2F1D1E4, 0, 0);
  }
  else
  {
    id v5 = (void *)v4[5];
    swift_endAccess();
    void *v5 = a1;
    id v6 = (uint64_t (*)(void))v4[1];
    return v6();
  }
}

double sub_1D2F1BE78@<D0>(void (**a1)(long long *__return_ptr, uint64_t)@<X0>, void *a2@<X8>)
{
  void (*v3)(long long *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  double result;
  long long v7;

  uint64_t v3 = *a1;
  uint64_t v4 = swift_retain();
  v3(&v7, v4);
  swift_release();
  id v5 = swift_allocObject();
  uint64_t result = *(double *)&v7;
  *(_OWORD *)(v5 + 16) = v7;
  *a2 = &unk_1EA6986C8;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D2F1BEF8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x1F4188298](sub_1D2F1BF18, 0, 0);
}

uint64_t sub_1D2F1BF18()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_beginAccess();
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F1C008;
  return v4(v0 + 40);
}

uint64_t sub_1D2F1C008()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F1A014;
  }
  else {
    uint64_t v2 = sub_1D2F1C11C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F1C11C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[6];
  swift_endAccess();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

double sub_1D2F1C188@<D0>(void (**a1)(long long *__return_ptr, uint64_t)@<X0>, void *a2@<X8>)
{
  void (*v3)(long long *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  double result;
  long long v7;

  uint64_t v3 = *a1;
  uint64_t v4 = swift_retain();
  v3(&v7, v4);
  swift_release();
  uint64_t v5 = swift_allocObject();
  uint64_t result = *(double *)&v7;
  *(_OWORD *)(v5 + 16) = v7;
  *a2 = &unk_1EA6986B8;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D2F1C208()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

double sub_1D2F1C240@<D0>(void *a1@<X8>)
{
  return sub_1D2F1C188((void (**)(long long *__return_ptr, uint64_t))(v1 + 16), a1);
}

uint64_t sub_1D2F1C248(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1C2F4;
  v4[5] = a1;
  v4[6] = v1;
  return MEMORY[0x1F4188298](sub_1D2F19674, 0, 0);
}

uint64_t sub_1D2F1C2F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_1D2F1C3E8@<D0>(void *a1@<X8>)
{
  return sub_1D2F1BE78((void (**)(long long *__return_ptr, uint64_t))(v1 + 16), a1);
}

uint64_t sub_1D2F1C3F0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA6986C0 + dword_1EA6986C0);
  return v5(a1, v1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void sub_1D2F1C4E8(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_release();
  }
}

unint64_t sub_1D2F1C528()
{
  unint64_t result = qword_1EBD63370;
  if (!qword_1EBD63370)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD63370);
  }
  return result;
}

uint64_t sub_1D2F1C568()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1D2F1C590(void *a1)
{
  objc_msgSend(a1, sel_timestamp);
  uint64_t v3 = v2;
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1D2F1C5EC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCD0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2F1C680@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCD0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1D2F1B564(v4, a1);
}

uint64_t sub_1D2F1C6F4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2F1C72C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = 0;
  *a1 = &unk_1EA698720;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2F1C790()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2F1C7C8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  v4[5] = a1;
  v4[6] = v1;
  return MEMORY[0x1F4188298](sub_1D2F1A364, 0, 0);
}

uint64_t sub_1D2F1C874(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1D1A0;
  return sub_1D2F193B4(a1);
}

uint64_t sub_1D2F1C910(uint64_t (*a1)(void))
{
  return a1();
}

id sub_1D2F1C91C(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1D3001018() - 8);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_1D2F178FC(a1, a2, a3, v8, v9);
}

uint64_t sub_1D2F1C9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2F48D78(a1, *(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 16), a2);
}

uint64_t sub_1D2F1C9B0()
{
  return objectdestroy_70Tm(&qword_1EBD5FCC0);
}

uint64_t sub_1D2F1C9BC()
{
  return sub_1D2F1D000(&qword_1EBD5FCC0, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1D2F4D2E8);
}

void sub_1D2F1C9DC(void *a1@<X8>)
{
  sub_1D2F4DD14((void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16), a1);
}

uint64_t sub_1D2F1C9E4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2F1CA1C@<X0>(void *a1@<X8>)
{
  return sub_1D2F1BB84((void **)(v1 + 16), a1);
}

uint64_t sub_1D2F1CA24@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = 0;
  *a1 = &unk_1EA698748;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2F1CA88(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA698740 + dword_1EA698740);
  return v5(a1, v1);
}

uint64_t sub_1D2F1CB38()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2F1CB70(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA698758 + dword_1EA698758);
  return v5(a1, v1);
}

void sub_1D2F1CC20(uint64_t a1)
{
}

unint64_t sub_1D2F1CC44()
{
  unint64_t result = qword_1EA698770;
  if (!qword_1EA698770)
  {
    sub_1D3001F08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698770);
  }
  return result;
}

void sub_1D2F1CC9C(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t sub_1D2F1CCAC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2F1CD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5EA98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F1CD78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_64Tm()
{
  uint64_t v1 = sub_1D3001018();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2F1CEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1D3001018() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1D2F1707C(a1, a2, v6, v7);
}

uint64_t sub_1D2F1CF28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D2F48D3C(a1, *(uint64_t (**)(void, void))(v2 + 16), a2);
}

uint64_t sub_1D2F1CF30()
{
  return objectdestroy_70Tm(&qword_1EBD5EAC8);
}

uint64_t objectdestroy_70Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  return MEMORY[0x1F4186498](v1, v7, v6);
}

uint64_t sub_1D2F1CFE0()
{
  return sub_1D2F1D000(&qword_1EBD5EAC8, (uint64_t (*)(unint64_t, uint64_t, uint64_t))sub_1D2F4D88C);
}

uint64_t sub_1D2F1D000(uint64_t *a1, uint64_t (*a2)(unint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v2 + v5);
  uint64_t v7 = *(void *)(v2 + v5 + 8);
  return a2(v2 + v4, v6, v7);
}

double sub_1D2F1D0B0@<D0>(void *a1@<X8>)
{
  *(void *)&double result = sub_1D2F4D5B4((void (**)(_OWORD *__return_ptr, uint64_t))(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_1D2F1D0B8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1D1A0;
  return sub_1D2F1A078(a1);
}

uint64_t sub_1D2F1D154(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static SELFStoreMaintenance.resetStore()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AD0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F1D2F0();
  sub_1D3001208();
  sub_1D30011D8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

unint64_t sub_1D2F1D2F0()
{
  unint64_t result = qword_1EBD63350;
  if (!qword_1EBD63350)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD63350);
  }
  return result;
}

uint64_t sub_1D2F1D330()
{
  return 1;
}

ValueMetadata *type metadata accessor for SELFStoreMaintenance()
{
  return &type metadata for SELFStoreMaintenance;
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningPlatformFeature_optional __swiftcall SiriUserFeedbackLearningPlatformFeature.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D3002638();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static SiriUserFeedbackLearningPlatformFeature.allCases.getter()
{
  return &unk_1F2A154E8;
}

unint64_t SiriUserFeedbackLearningPlatformFeature.rawValue.getter()
{
  if (*v0) {
    return 0xD00000000000001DLL;
  }
  else {
    return 0xD000000000000023;
  }
}

uint64_t sub_1D2F1D3F8(char *a1, char *a2)
{
  return sub_1D2FBC968(*a1, *a2);
}

uint64_t sub_1D2F1D404()
{
  return sub_1D2FD5230();
}

uint64_t sub_1D2F1D40C()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F1D480()
{
  return sub_1D2FD56AC();
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningPlatformFeature_optional sub_1D2F1D488(Swift::String *a1)
{
  return SiriUserFeedbackLearningPlatformFeature.init(rawValue:)(*a1);
}

void sub_1D2F1D494(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD00000000000001DLL;
  }
  else {
    unint64_t v2 = 0xD000000000000023;
  }
  unint64_t v3 = 0x80000001D300D760;
  if (*v1) {
    unint64_t v3 = 0x80000001D300D790;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_1D2F1D4D8(void *a1@<X8>)
{
  *a1 = &unk_1F2A15510;
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init()();
  return v0;
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init()()
{
  uint64_t v1 = sub_1D3001158();
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_clientWithIdentifier_, 276);
  id v5 = objc_msgSend(self, sel_currentLocale);
  sub_1D30010E8();

  id v6 = objc_msgSend(self, sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v3, v6, (uint64_t)v19);
  long long v17 = v19[1];
  long long v18 = v19[0];
  long long v15 = v19[3];
  long long v16 = v19[2];
  long long v13 = v19[5];
  long long v14 = v19[4];
  uint64_t v7 = v20;
  uint64_t v8 = v21;
  *(void *)(v0 + 40) = &type metadata for EnvironmentFeatureFlags;
  *(void *)(v0 + 48) = &protocol witness table for EnvironmentFeatureFlags;
  *(void *)(v0 + 232) = &type metadata for OSTypeResolver;
  *(void *)(v0 + 240) = &protocol witness table for OSTypeResolver;
  *(void *)(v0 + 80) = sub_1D2F1DBA0();
  *(void *)(v0 + 88) = &protocol witness table for TRIClient;
  *(void *)(v0 + 56) = v4;
  long long v9 = v17;
  *(_OWORD *)(v0 + 96) = v18;
  *(_OWORD *)(v0 + 112) = v9;
  long long v10 = v15;
  *(_OWORD *)(v0 + 128) = v16;
  *(_OWORD *)(v0 + 144) = v10;
  long long v11 = v13;
  *(_OWORD *)(v0 + 160) = v14;
  *(_OWORD *)(v0 + 176) = v11;
  *(void *)(v0 + 192) = v7;
  *(void *)(v0 + 200) = v8;
  return v0;
}

void SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
}

void SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.deinit()
{
  sub_1D2F1DBE0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return v0;
}

uint64_t SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__deallocating_deinit()
{
  sub_1D2F1DBE0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return swift_deallocClassInstance();
}

void *sub_1D2F1D854()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5EAE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D3004370;
  *(unsigned char *)(inited + 32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D3004380;
  *(void *)(v1 + 56) = &type metadata for SiriPrivateLearningFeatureFlag;
  *(void *)(v1 + 64) = sub_1D2F1DF00();
  *(unsigned char *)(v1 + 32) = 14;
  *(unsigned char *)(v1 + 72) = 1;
  type metadata accessor for TrialFlagFactor(0);
  uint64_t v2 = swift_initStaticObject();
  if (qword_1EBD5E7C0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBD5E7B0;
  uint64_t v3 = *(void *)algn_1EBD5E7B8;
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v4;
  *(void *)(v1 + 96) = v3;
  *(unsigned char *)(v1 + 120) = 0;
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = 0;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1D2F1F090(inited);
  type metadata accessor for AnyFeature();
  SiriPrivateLearningAnalytics::SiriUserFeedbackLearningPlatformFeature_optional result = (void *)swift_allocObject();
  result[2] = 0xD000000000000023;
  result[3] = 0x80000001D300D760;
  result[4] = MEMORY[0x1E4FBC860];
  result[5] = v5;
  qword_1EBD5E6F8 = (uint64_t)result;
  return result;
}

uint64_t static SiriUserFeedbackLearningPlatformFeatures.UniversalSuggestionsOfflineLearning.getter()
{
  return sub_1D2F1DB54(qword_1EBD5E700);
}

void *sub_1D2F1D9D4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5EAE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D3004370;
  *(unsigned char *)(inited + 32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D3004380;
  *(void *)(v1 + 56) = &type metadata for SiriPrivateLearningFeatureFlag;
  *(void *)(v1 + 64) = sub_1D2F1DF00();
  *(unsigned char *)(v1 + 32) = 15;
  *(unsigned char *)(v1 + 72) = 1;
  type metadata accessor for TrialFlagFactor(0);
  uint64_t v2 = swift_initStaticObject();
  if (qword_1EBD5E7C0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBD5E7B0;
  uint64_t v3 = *(void *)algn_1EBD5E7B8;
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v4;
  *(void *)(v1 + 96) = v3;
  *(unsigned char *)(v1 + 120) = 0;
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = 0;
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1D2F1F090(inited);
  type metadata accessor for AnyFeature();
  SiriPrivateLearningAnalytics::SiriUserFeedbackLearningPlatformFeature_optional result = (void *)swift_allocObject();
  result[2] = 0xD00000000000001DLL;
  result[3] = 0x80000001D300D790;
  result[4] = MEMORY[0x1E4FBC860];
  result[5] = v5;
  qword_1EA6987B8 = (uint64_t)result;
  return result;
}

uint64_t static SiriUserFeedbackLearningPlatformFeatures.UniversalSuggestionsSurfacing.getter()
{
  return sub_1D2F1DB54(&qword_1EA698018);
}

uint64_t sub_1D2F1DB54(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t sub_1D2F1DBA0()
{
  unint64_t result = qword_1EBD639E8;
  if (!qword_1EBD639E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD639E8);
  }
  return result;
}

uint64_t sub_1D2F1DBE0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1D2F1DC38()
{
  unint64_t result = qword_1EA6987C0;
  if (!qword_1EA6987C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6987C0);
  }
  return result;
}

unint64_t sub_1D2F1DC90()
{
  unint64_t result = qword_1EA6987C8;
  if (!qword_1EA6987C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA6987D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6987C8);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningPlatformFeature(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SiriUserFeedbackLearningPlatformFeature(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F1DE54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1D2F1DE7C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1D2F1DE84(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPlatformFeature()
{
  return &type metadata for SiriUserFeedbackLearningPlatformFeature;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPlatformFeatures()
{
  return &type metadata for SiriUserFeedbackLearningPlatformFeatures;
}

uint64_t type metadata accessor for SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager()
{
  return self;
}

uint64_t method lookup function for SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager);
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unint64_t sub_1D2F1DF00()
{
  unint64_t result = qword_1EBD637B8;
  if (!qword_1EBD637B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD637B8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ConcurrencyError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ConcurrencyError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ConcurrencyError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for ConcurrencyError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConcurrencyError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConcurrencyError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcurrencyError()
{
  return &type metadata for ConcurrencyError;
}

uint64_t PluginRunner.init()@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBD616C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65730);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t PluginRunner.init(pluginPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D3000F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t PluginRunner.runPlugin(pluginName:context:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 64) = v4;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  *(unsigned char *)(v5 + 96) = *a4;
  return MEMORY[0x1F4188298](sub_1D2F1E1F8, 0, 0);
}

uint64_t sub_1D2F1E1F8()
{
  uint64_t v1 = sub_1D2FC9EBC(*(void *)(v0 + 64), *(void *)(v0 + 48), *(void *)(v0 + 56));
  *(void *)(v0 + 72) = v1;
  uint64_t v2 = v1;
  char v3 = *(unsigned char *)(v0 + 96);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  void *v5 = v0;
  v5[1] = sub_1D2F1E3FC;
  return MEMORY[0x1F41880D8](v0 + 16, 0, 0, 0xD00000000000001ELL, 0x80000001D300E230, sub_1D2F1E824, v4, &type metadata for PrivateLearningPluginResult);
}

uint64_t sub_1D2F1E3FC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F1E514, 0, 0);
}

uint64_t sub_1D2F1E514()
{
  swift_release();
  *(_OWORD *)*(void *)(v0 + 40) = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F1E580(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698800);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  char v15 = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(&v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v12 + v11, &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v6);
  (*(void (**)(char *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 16))(&v15, sub_1D2F1EE28, v12, ObjectType, v9);
  return swift_release();
}

uint64_t sub_1D2F1E704()
{
  return sub_1D3001EE8();
}

uint64_t sub_1D2F1E750(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v10 = swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *(void *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = sub_1D2F1C2F4;
  *(void *)(v10 + 56) = a3;
  *(void *)(v10 + 64) = v4;
  *(void *)(v10 + 40) = a1;
  *(void *)(v10 + 48) = a2;
  *(unsigned char *)(v10 + 96) = *a4;
  return MEMORY[0x1F4188298](sub_1D2F1E1F8, 0, 0);
}

uint64_t sub_1D2F1E824(uint64_t a1)
{
  return sub_1D2F1E580(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t dispatch thunk of PluginRunning.runPlugin(pluginName:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *long long v13 = v6;
  v13[1] = sub_1D2F1D1A0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t initializeBufferWithCopyOfBuffer for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D3000F18();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for PluginRunner(uint64_t a1)
{
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PluginRunner(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginRunner(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F1EBCC);
}

uint64_t sub_1D2F1EBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D3000F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PluginRunner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F1EC4C);
}

uint64_t sub_1D2F1EC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D3000F18();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PluginRunner()
{
  uint64_t result = qword_1EA6987F0;
  if (!qword_1EA6987F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2F1ED08()
{
  uint64_t result = sub_1D3000F18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D2F1ED94()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698800);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2F1EE28()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698800);
  return sub_1D2F1E704();
}

unint64_t sub_1D2F1EE9C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD610E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61490);
  uint64_t v6 = sub_1D30025D8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2F1CCAC(v12, (uint64_t)v5, &qword_1EBD610E8);
    unint64_t result = sub_1D2F0DD14((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D30010A8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1F090(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAD0);
  uint64_t v2 = (void *)sub_1D30025D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned __int8 *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *(v4 - 16);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    j__swift_bridgeObjectRetain(v6, *v4);
    unint64_t result = sub_1D2F0DD98(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = v2[7] + 16 * result;
    *(void *)uint64_t v10 = v6;
    *(unsigned char *)(v10 + 8) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1F1AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD637A0);
  uint64_t v2 = sub_1D30025D8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2F1CCAC(v6, (uint64_t)&v15, &qword_1EBD63790);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1D2F0DC98(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1D2F0B9B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1F2E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCE0);
  uint64_t v2 = (void *)sub_1D30025D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D2F0DC98(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1F3F8(uint64_t a1)
{
  return sub_1D2F1FA38(a1, &qword_1EBD5FCD8);
}

unint64_t sub_1D2F1F404(uint64_t a1)
{
  return sub_1D2F1F840(a1, &qword_1EBD62AC0, &qword_1EBD614A0);
}

unint64_t sub_1D2F1F418(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698830);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698698);
  uint64_t v6 = sub_1D30025D8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2F1CCAC(v12, (uint64_t)v5, &qword_1EA698830);
    unint64_t result = sub_1D2F0DD14((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D30010A8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1F60C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD62AB0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698668);
  uint64_t v6 = sub_1D30025D8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2F1CCAC(v12, (uint64_t)v5, (uint64_t *)&unk_1EBD62AB0);
    unint64_t result = sub_1D2F0DD14((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1D30010A8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 16 * v16;
    char v20 = v9[1];
    char v21 = v9[2];
    char v22 = v9[3];
    uint64_t v23 = *((void *)v9 + 1);
    *(unsigned char *)uint64_t v19 = *v9;
    *(unsigned char *)(v19 + 1) = v20;
    *(unsigned char *)(v19 + 2) = v21;
    *(unsigned char *)(v19 + 3) = v22;
    *(void *)(v19 + 8) = v23;
    uint64_t v24 = v7[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_11;
    }
    v7[2] = v26;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1F82C(uint64_t a1)
{
  return sub_1D2F1F840(a1, &qword_1EBD5E6B8, &qword_1EA698658);
}

unint64_t sub_1D2F1F840(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v11 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v10 = sub_1D30025D8();
  unint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2F1CCAC(v16, (uint64_t)v9, a2);
    unint64_t result = sub_1D2F0DD14((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = sub_1D30010A8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1FA2C(uint64_t a1)
{
  return sub_1D2F1FA38(a1, (uint64_t *)&unk_1EBD635A0);
}

unint64_t sub_1D2F1FA38(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_1D30025D8();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1D2F0DC98(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D2F1FB50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698680);
  uint64_t v2 = (void *)sub_1D30025D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D2F0DC98(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SiriUserFeedbackLearningTaskResult.Status.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!v1) {
    return 0x73736563637573;
  }
  if (v1 == 1) {
    return 0x64657070696B73;
  }
  sub_1D3001C68();
  return 0x3A6572756C696166;
}

BOOL sub_1D2F1FD08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s28SiriPrivateLearningAnalytics27PLUSSuggestionSurfacedStateO9hashValueSivg_0()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F1FD64()
{
  return sub_1D3002938();
}

uint64_t sub_1D2F1FD90()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F1FDD4()
{
  return *(void *)&aSuccess_2[8 * *v0];
}

uint64_t sub_1D2F1FDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D2F238FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D2F1FE14()
{
  return 0;
}

void sub_1D2F1FE20(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1D2F1FE2C(uint64_t a1)
{
  unint64_t v2 = sub_1D2F224F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F1FE68(uint64_t a1)
{
  unint64_t v2 = sub_1D2F224F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D2F1FEA4()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F1FEE8()
{
  return sub_1D3002938();
}

uint64_t sub_1D2F1FF10()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F1FF50()
{
  return 0x6567617373656DLL;
}

uint64_t sub_1D2F1FF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1D3002778();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1D2F20000(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D2F2000C(uint64_t a1)
{
  unint64_t v2 = sub_1D2F225A0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F20048(uint64_t a1)
{
  unint64_t v2 = sub_1D2F225A0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D2F20084()
{
  return 0;
}

uint64_t sub_1D2F20090@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1D2F200C0(uint64_t a1)
{
  unint64_t v2 = sub_1D2F2254C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F200FC(uint64_t a1)
{
  unint64_t v2 = sub_1D2F2254C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D2F20138(uint64_t a1)
{
  unint64_t v2 = sub_1D2F225F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F20174(uint64_t a1)
{
  unint64_t v2 = sub_1D2F225F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriUserFeedbackLearningTaskResult.Status.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61758);
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  MEMORY[0x1F4188790](v4);
  BOOL v24 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61750);
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61760);
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61748);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v2;
  uint64_t v17 = v2[1];
  v21[1] = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F224F8();
  sub_1D30029B8();
  if (!v17)
  {
    char v29 = 0;
    sub_1D2F225F4();
    sub_1D30026B8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  if (v17 == 1)
  {
    char v31 = 2;
    sub_1D2F2254C();
    uint64_t v18 = v24;
    sub_1D30026B8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  char v30 = 1;
  sub_1D2F225A0();
  sub_1D30026B8();
  uint64_t v20 = v26;
  sub_1D30026D8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t SiriUserFeedbackLearningTaskResult.Status.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61730);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x1F4188790](v3);
  int64_t v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61728);
  uint64_t v35 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61738);
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61720);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1D2F224F8();
  uint64_t v15 = v39;
  sub_1D3002998();
  if (!v15)
  {
    uint64_t v16 = v37;
    uint64_t v39 = v11;
    uint64_t v17 = sub_1D30026A8();
    if (*(void *)(v17 + 16) == 1)
    {
      if (*(unsigned char *)(v17 + 32))
      {
        if (*(unsigned char *)(v17 + 32) == 1)
        {
          char v41 = 1;
          sub_1D2F225A0();
          sub_1D3002648();
          uint64_t v22 = v31;
          uint64_t v23 = sub_1D3002678();
          BOOL v24 = v6;
          uint64_t v25 = v39;
          uint64_t v26 = v23;
          uint64_t v28 = v27;
          (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v22);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v10);
        }
        else
        {
          char v42 = 2;
          sub_1D2F2254C();
          sub_1D3002648();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
          uint64_t v26 = 0;
          uint64_t v28 = 1;
        }
      }
      else
      {
        char v40 = 0;
        sub_1D2F225F4();
        sub_1D3002648();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
        uint64_t v26 = 0;
        uint64_t v28 = 0;
      }
      char v29 = v36;
      *uint64_t v36 = v26;
      v29[1] = v28;
    }
    else
    {
      uint64_t v18 = sub_1D30024B8();
      swift_allocError();
      uint64_t v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698810);
      *uint64_t v20 = &type metadata for SiriUserFeedbackLearningTaskResult.Status;
      sub_1D3002658();
      sub_1D3002498();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA70], v18);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
}

uint64_t sub_1D2F20B28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SiriUserFeedbackLearningTaskResult.Status.init(from:)(a1, a2);
}

uint64_t sub_1D2F20B40(void *a1)
{
  return SiriUserFeedbackLearningTaskResult.Status.encode(to:)(a1);
}

uint64_t sub_1D2F20B58()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!v1) {
    return 0x73736563637573;
  }
  if (v1 == 1) {
    return 0x64657070696B73;
  }
  sub_1D3001C68();
  return 0x3A6572756C696166;
}

uint64_t SiriUserFeedbackLearningTaskResult.status.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1D2F22648(v2, v3);
}

id SiriUserFeedbackLearningTaskResult.mlrTaskResult.getter()
{
  return *(id *)(v0 + 16);
}

void *SiriUserFeedbackLearningTaskResult.error.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t SiriUserFeedbackLearningTaskResult.description.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  if (v2 > 1)
  {
    swift_bridgeObjectRetain();
    sub_1D3001C68();
  }
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D2F2265C(v1, v2);
  return 0x203A737574617473;
}

double SiriUserFeedbackLearningTaskResult.init(result:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1[1];
  if (v3)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = v3;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  SiriUserFeedbackLearningTaskResult.init(status:)(&v7, (uint64_t *)&v9);
  double result = *(double *)&v9;
  uint64_t v5 = v10;
  uint64_t v6 = v11;
  *(_OWORD *)a2 = v9;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t SiriUserFeedbackLearningTaskResult.init(status:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1D3001BB8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D3001918();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBD65778);
  sub_1D2F22648(v6, v7);
  sub_1D2F22648(v6, v7);
  long long v9 = sub_1D30018F8();
  os_log_type_t v10 = sub_1D30020A8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v36 = (char *)v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v37 = sub_1D2F09508(0x6174732874696E69, 0xED0000293A737574, (uint64_t *)&v36);
    sub_1D3002318();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v35 = a2;
    if (v7)
    {
      if (v7 == 1)
      {
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x64657070696B73;
      }
      else
      {
        uint64_t v37 = 0x3A6572756C696166;
        unint64_t v38 = 0xE900000000000020;
        swift_bridgeObjectRetain();
        sub_1D3001C68();
        sub_1D2F2265C(v6, v7);
        uint64_t v14 = v37;
        unint64_t v13 = v38;
      }
    }
    else
    {
      uint64_t v14 = 0x73736563637573;
      unint64_t v13 = 0xE700000000000000;
    }
    uint64_t v37 = sub_1D2F09508(v14, v13, (uint64_t *)&v36);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F2265C(v6, v7);
    sub_1D2F2265C(v6, v7);
    _os_log_impl(&dword_1D2F05000, v9, v10, "SiriUserFeedbackLearningTaskResult.%s status: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v12, -1, -1);
    MEMORY[0x1D942F2D0](v11, -1, -1);

    a2 = v35;
  }
  else
  {
    sub_1D2F2265C(v6, v7);
    sub_1D2F2265C(v6, v7);
  }
  sub_1D3000CF8();
  swift_allocObject();
  sub_1D2F22648(v6, v7);
  sub_1D3000CE8();
  uint64_t v37 = v6;
  unint64_t v38 = v7;
  sub_1D2F22670();
  uint64_t v15 = sub_1D3000CD8();
  unint64_t v17 = v16;
  sub_1D3001BA8();
  uint64_t v18 = sub_1D3001B98();
  if (v19)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v19;
    sub_1D2F2265C(v6, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD637A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D3004370;
    *(void *)(inited + 32) = 0x737574617473;
    *(void *)(inited + 40) = 0xE600000000000000;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v20;
    *(void *)(inited + 56) = v21;
    sub_1D2F1F1AC(inited);
    id v23 = objc_allocWithZone(MEMORY[0x1E4F737C8]);
    BOOL v24 = (void *)sub_1D3001A78();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v23, sel_initWithJSONResult_unprivatizedVector_, v24, 0);
  }
  else
  {
    sub_1D2F22648(v6, v7);
    uint64_t v26 = sub_1D30018F8();
    os_log_type_t v27 = sub_1D30020B8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v35 = a2;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (char *)swift_slowAlloc();
      uint64_t v36 = v34;
      *(_DWORD *)uint64_t v28 = 136315138;
      if (v7)
      {
        if (v7 == 1)
        {
          unint64_t v29 = 0xE700000000000000;
          uint64_t v30 = 0x64657070696B73;
        }
        else
        {
          uint64_t v37 = 0x3A6572756C696166;
          unint64_t v38 = 0xE900000000000020;
          swift_bridgeObjectRetain();
          sub_1D3001C68();
          sub_1D2F2265C(v6, v7);
          uint64_t v30 = v37;
          unint64_t v29 = v38;
        }
      }
      else
      {
        uint64_t v30 = 0x73736563637573;
        unint64_t v29 = 0xE700000000000000;
      }
      uint64_t v37 = sub_1D2F09508(v30, v29, (uint64_t *)&v36);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2F2265C(v6, v7);
      sub_1D2F2265C(v6, v7);
      _os_log_impl(&dword_1D2F05000, v26, v27, "SiriUserFeedbackLearningTaskResult: Unable to encode %s to string", v28, 0xCu);
      uint64_t v31 = v34;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v31, -1, -1);
      MEMORY[0x1D942F2D0](v28, -1, -1);

      a2 = v35;
    }
    else
    {
      sub_1D2F2265C(v6, v7);
      sub_1D2F2265C(v6, v7);
    }
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F737C8]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
  }
  sub_1D2F0D1CC(v15, v17);
  uint64_t result = swift_release();
  *a2 = v6;
  a2[1] = v7;
  a2[2] = (uint64_t)v25;
  a2[3] = 0;
  return result;
}

void SiriUserFeedbackLearningTaskResult.init(mlrTaskResult:error:)(void *a1@<X0>, void *a2@<X1>, unint64_t *a3@<X8>)
{
  id v77 = a2;
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  uint64_t v73 = sub_1D3001BB8();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  v71 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D3000D28();
  uint64_t v70 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v69 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D3001918();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBD65778);
  id v10 = a1;
  id v11 = v77;
  id v12 = v77;
  id v13 = v10;
  id v14 = v11;
  uint64_t v75 = v9;
  uint64_t v15 = sub_1D30018F8();
  os_log_type_t v16 = sub_1D30020A8();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v76 = a1;
  if (v17)
  {
    uint64_t v68 = v6;
    v74 = a3;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(void *)&long long v80 = v20;
    *(_DWORD *)uint64_t v18 = 136315650;
    *(void *)&long long v78 = sub_1D2F09508(0xD00000000000001ALL, 0x80000001D300E300, (uint64_t *)&v80);
    sub_1D3002318();
    *(_WORD *)(v18 + 12) = 2112;
    if (a1)
    {
      *(void *)&long long v78 = v13;
      id v21 = v13;
    }
    else
    {
      *(void *)&long long v78 = 0;
    }
    sub_1D3002318();
    *uint64_t v19 = v76;

    *(_WORD *)(v18 + 22) = 2112;
    if (v77)
    {
      id v44 = v77;
      uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v78 = v45;
      sub_1D3002318();
    }
    else
    {
      *(void *)&long long v78 = 0;
      sub_1D3002318();
      uint64_t v45 = 0;
    }
    v19[1] = v45;
    id v46 = v77;

    _os_log_impl(&dword_1D2F05000, v15, v16, "SiriUserFeedbackLearningTaskResult.%s mlrTaskResult: %@, error: %@", (uint8_t *)v18, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v20, -1, -1);
    MEMORY[0x1D942F2D0](v18, -1, -1);

    a3 = v74;
    uint64_t v6 = v68;
    if (!v76)
    {
LABEL_27:
      id v47 = v77;
      id v48 = v77;
      id v49 = v47;
      id v50 = v47;
      uint64_t v51 = sub_1D30018F8();
      os_log_type_t v52 = sub_1D30020B8();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v54 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 138412290;
        if (v77)
        {
          id v55 = v77;
          uint64_t v56 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)&long long v80 = v56;
          sub_1D3002318();
        }
        else
        {
          *(void *)&long long v80 = 0;
          sub_1D3002318();
          uint64_t v56 = 0;
        }
        *os_log_type_t v54 = v56;
        id v58 = v77;

        _os_log_impl(&dword_1D2F05000, v51, v52, "SiriUserFeedbackLearningTaskResult: MLR task result is nil, error: %@", v53, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v54, -1, -1);
        MEMORY[0x1D942F2D0](v53, -1, -1);
      }
      else
      {
        id v57 = v77;
      }
      id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F737C8]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
      *(void *)&long long v80 = 0;
      *((void *)&v80 + 1) = 0xE000000000000000;
      sub_1D3002438();
      swift_bridgeObjectRelease();
      *(void *)&long long v80 = 0xD00000000000001ALL;
      *((void *)&v80 + 1) = 0x80000001D300E280;
      if (v77)
      {
        uint64_t ErrorValue = swift_getErrorValue();
        id v60 = v23;
        uint64_t v61 = v79;
        uint64_t v62 = *(void *)(v79 - 8);
        MEMORY[0x1F4188790](ErrorValue);
        uint64_t v64 = (char *)&v67 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v62 + 16))(v64);
        sub_1D30028C8();
        uint64_t v65 = v61;
        id v23 = v60;
        (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
      }
      sub_1D3001C68();
      swift_bridgeObjectRelease();

      goto LABEL_36;
    }
  }
  else
  {

    id v22 = v77;
    if (!a1) {
      goto LABEL_27;
    }
  }
  id v23 = v13;
  id v24 = v77;
  id v25 = objc_msgSend(v23, sel_JSONResult);
  if (!v25)
  {
    long long v81 = 0u;
    long long v80 = 0u;
LABEL_17:
    sub_1D2F1CD78((uint64_t)&v80, &qword_1EBD635B8);
    goto LABEL_18;
  }
  uint64_t v26 = v25;
  uint64_t v27 = sub_1D3001A88();

  if (*(void *)(v27 + 16) && (unint64_t v28 = sub_1D2F0DC98(0x737574617473, 0xE600000000000000), (v29 & 1) != 0))
  {
    sub_1D2F0BD44(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v80);
  }
  else
  {
    long long v81 = 0u;
    long long v80 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v81 + 1)) {
    goto LABEL_17;
  }
  if (swift_dynamicCast())
  {
    long long v80 = v78;
    uint64_t v30 = v69;
    sub_1D3000D08();
    sub_1D2F226C4();
    sub_1D3002368();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v30, v6);
    swift_bridgeObjectRelease();
    uint64_t v31 = v71;
    sub_1D3001BA8();
    uint64_t v32 = sub_1D3001B88();
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v73);
    if (v34 >> 60 != 15)
    {
      sub_1D3000C98();
      swift_allocObject();
      sub_1D3000C88();
      sub_1D2F22718();
      sub_1D3000C78();

      swift_release();
      sub_1D2F2276C(v32, v34);
LABEL_36:
      unint64_t v43 = *((void *)&v80 + 1);
      unint64_t v42 = v80;
      goto LABEL_37;
    }
  }
LABEL_18:
  id v23 = v23;
  uint64_t v35 = sub_1D30018F8();
  os_log_type_t v36 = sub_1D30020B8();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    unint64_t v38 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(void *)&long long v80 = v39;
    *(_DWORD *)uint64_t v37 = 138412546;
    *(void *)&long long v78 = v23;
    v74 = a3;
    id v40 = v23;
    id v41 = v23;
    sub_1D3002318();
    *unint64_t v38 = v76;

    id v23 = v40;
    *(_WORD *)(v37 + 12) = 2080;
    *(void *)&long long v78 = sub_1D2F09508(0x737574617473, 0xE600000000000000, (uint64_t *)&v80);
    a3 = v74;
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v35, v36, "SiriUserFeedbackLearningTaskResult: Unable to get json result value from %@ for parameter: \"%s\"", (uint8_t *)v37, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v38, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v39, -1, -1);
    MEMORY[0x1D942F2D0](v37, -1, -1);
  }
  else
  {
  }
  unint64_t v42 = 0xD000000000000026;
  unint64_t v43 = 0x80000001D300E2A0;
LABEL_37:
  *a3 = v42;
  a3[1] = v43;
  unint64_t v66 = (unint64_t)v77;
  a3[2] = (unint64_t)v23;
  a3[3] = v66;
}

uint64_t static SiriUserFeedbackLearningTaskResult.toPrivateLearningPluginResult(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  if (v4 > 1)
  {
    *a2 = v3;
    a2[1] = v4;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return sub_1D2F22648(v3, v4);
}

uint64_t sub_1D2F222CC(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

uint64_t sub_1D2F222FC(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1D2F22324(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_1D3002318();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t _s28SiriPrivateLearningAnalytics0a12UserFeedbackC10TaskResultV6StatusO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      unint64_t v3 = 0;
      char v6 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5) {
        char v6 = 1;
      }
      else {
        char v6 = sub_1D3002778();
      }
      goto LABEL_9;
    }
LABEL_8:
    char v6 = 0;
LABEL_9:
    sub_1D2F22648(v4, v5);
    sub_1D2F22648(v2, v3);
    goto LABEL_10;
  }
  if (v5 != 1) {
    goto LABEL_8;
  }
  unint64_t v3 = 1;
  char v6 = 1;
LABEL_10:
  sub_1D2F2265C(v2, v3);
  sub_1D2F2265C(v4, v5);
  return v6 & 1;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1D2F224F8()
{
  unint64_t result = qword_1EBD63690;
  if (!qword_1EBD63690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD63690);
  }
  return result;
}

unint64_t sub_1D2F2254C()
{
  unint64_t result = qword_1EBD636B8;
  if (!qword_1EBD636B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636B8);
  }
  return result;
}

unint64_t sub_1D2F225A0()
{
  unint64_t result = qword_1EA698808;
  if (!qword_1EA698808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698808);
  }
  return result;
}

unint64_t sub_1D2F225F4()
{
  unint64_t result = qword_1EBD636D0;
  if (!qword_1EBD636D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636D0);
  }
  return result;
}

uint64_t sub_1D2F22648(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D2F2265C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D2F22670()
{
  unint64_t result = qword_1EBD616D8;
  if (!qword_1EBD616D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD616D8);
  }
  return result;
}

unint64_t sub_1D2F226C4()
{
  unint64_t result = qword_1EBD63A30;
  if (!qword_1EBD63A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD63A30);
  }
  return result;
}

unint64_t sub_1D2F22718()
{
  unint64_t result = qword_1EBD616E0;
  if (!qword_1EBD616E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD616E0);
  }
  return result;
}

uint64_t sub_1D2F2276C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1D2F0D1CC(a1, a2);
  }
  return a1;
}

void destroy for SiriUserFeedbackLearningTaskResult(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 2uLL) {
    swift_bridgeObjectRelease();
  }

  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for SiriUserFeedbackLearningTaskResult(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >= 2)
  {
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  unint64_t v5 = (void *)a2[2];
  char v6 = (void *)a2[3];
  a1[2] = v5;
  id v7 = v5;
  id v8 = v6;
  a1[3] = v6;
  return a1;
}

void *assignWithCopy for SiriUserFeedbackLearningTaskResult(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1D2F1CD78((uint64_t)a1, &qword_1EA698818);
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
LABEL_8:
  unint64_t v5 = (void *)a2[2];
  char v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  id v8 = (void *)a1[3];
  uint64_t v9 = (void *)a2[3];
  id v10 = v9;
  a1[3] = v9;

  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for SiriUserFeedbackLearningTaskResult(void *a1, void *a2)
{
  if (a1[1] >= 2uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D2F1CD78((uint64_t)a1, &qword_1EA698818);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  unint64_t v5 = (void *)a1[2];
  a1[2] = a2[2];

  char v6 = (void *)a1[3];
  a1[3] = a2[3];

  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult;
}

unint64_t destroy for SiriUserFeedbackLearningTaskResult.Status(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningTaskResultV6StatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for SiriUserFeedbackLearningTaskResult.Status(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SiriUserFeedbackLearningTaskResult.Status(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1D2F22C4C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1D2F22C64(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F22DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1D2F22E18(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.CodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.SuccessCodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.SuccessCodingKeys;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D2F22F30);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D2F22F58()
{
  return 0;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.FailureCodingKeys;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskResult.Status.SkippedCodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskResult.Status.SkippedCodingKeys;
}

unint64_t sub_1D2F22F84()
{
  unint64_t result = qword_1EA698820;
  if (!qword_1EA698820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698820);
  }
  return result;
}

unint64_t sub_1D2F22FDC()
{
  unint64_t result = qword_1EA698828;
  if (!qword_1EA698828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698828);
  }
  return result;
}

unint64_t sub_1D2F23034()
{
  unint64_t result = qword_1EBD636E0;
  if (!qword_1EBD636E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636E0);
  }
  return result;
}

unint64_t sub_1D2F2308C()
{
  unint64_t result = qword_1EBD636D8;
  if (!qword_1EBD636D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636D8);
  }
  return result;
}

unint64_t sub_1D2F230E4()
{
  unint64_t result = qword_1EBD636B0;
  if (!qword_1EBD636B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636B0);
  }
  return result;
}

unint64_t sub_1D2F2313C()
{
  unint64_t result = qword_1EBD636A8;
  if (!qword_1EBD636A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636A8);
  }
  return result;
}

unint64_t sub_1D2F23194()
{
  unint64_t result = qword_1EBD636C8;
  if (!qword_1EBD636C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636C8);
  }
  return result;
}

unint64_t sub_1D2F231EC()
{
  unint64_t result = qword_1EBD636C0;
  if (!qword_1EBD636C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636C0);
  }
  return result;
}

unint64_t sub_1D2F23244()
{
  unint64_t result = qword_1EBD636A0;
  if (!qword_1EBD636A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636A0);
  }
  return result;
}

unint64_t sub_1D2F2329C()
{
  unint64_t result = qword_1EBD63698;
  if (!qword_1EBD63698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD63698);
  }
  return result;
}

unint64_t sub_1D2F232F0(uint64_t a1)
{
  return sub_1D2F23308(a1, (uint64_t *)&unk_1EBD614C8);
}

unint64_t sub_1D2F232FC(uint64_t a1)
{
  return sub_1D2F23308(a1, &qword_1EBD614C0);
}

unint64_t sub_1D2F23308(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  unsigned int v4 = (void *)sub_1D30025D8();
  int v5 = *(_DWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t result = sub_1D2F0DD10(v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v9 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v4[6] + 4 * result) = v5;
    *(void *)(v4[7] + 8 * result) = v6;
    uint64_t v10 = v4[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v4[2] = v12;
    if (!--v2) {
      goto LABEL_8;
    }
    id v13 = v9 + 2;
    int v5 = *((_DWORD *)v9 - 2);
    uint64_t v14 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D2F0DD10(v5);
    uint64_t v9 = v13;
    uint64_t v6 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1D2F23408(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698688);
  int v3 = (void *)sub_1D30025D8();
  uint64_t v4 = a1[4];
  int v5 = (void *)a1[5];
  unint64_t result = sub_1D2F0DEA4(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  char v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    id v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    uint64_t v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_1D2F0DEA4(v4);
    char v8 = v13;
    int v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1D2F23500(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698838);
  int v3 = (void *)sub_1D30025D8();
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_1D2F0DD10(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    int v4 = *((_DWORD *)v9 - 4);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D2F0DD10(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1D2F23610(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FD70);
  int v3 = (void *)sub_1D30025D8();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1D2F0DFE4(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1D2F0DFE4(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1D2F23714(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FDF8);
    int v3 = (void *)sub_1D30025D8();
    for (uint64_t i = a1 + 32; ; i += 48)
    {
      sub_1D2F1CCAC(i, (uint64_t)v11, qword_1EBD60050);
      unsigned __int8 v5 = v11[0];
      unint64_t result = sub_1D2F0DFE4(v11[0]);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      unint64_t result = sub_1D2F0BE68(&v12, v3[7] + 40 * result);
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1D2F23824(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698650);
    int v3 = (void *)sub_1D30025D8();
    for (uint64_t i = (void *)(a1 + 40); ; i += 2)
    {
      char v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_1D2F0E054(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1D2F238FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000 || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657070696B73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

const char *SiriPrivateLearningFeatureFlag.domain.getter()
{
  return "SiriPrivateLearning";
}

const char *SiriPrivateLearningFeatureFlag.feature.getter()
{
  unint64_t result = "AnalyticsEvents";
  switch(*v0)
  {
    case 1:
      unint64_t result = "EntityRestatements";
      break;
    case 2:
      unint64_t result = "TMDCRuntime";
      break;
    case 3:
      unint64_t result = "TMDCRuntimeCall";
      break;
    case 4:
      unint64_t result = "TMDCRuntimeMessage";
      break;
    case 5:
      unint64_t result = "TMDCRuntimeCorrections";
      break;
    case 6:
      unint64_t result = "TMDCRuntimeLocalStorage";
      break;
    case 7:
      unint64_t result = "RECTIFIPatternExtraction";
      break;
    case 8:
      unint64_t result = "PIMSShadowLogging";
      break;
    case 9:
      unint64_t result = "PIMSRuntime";
      break;
    case 0xA:
      unint64_t result = "PIMSInAppFollowup";
      break;
    case 0xB:
      unint64_t result = "PICSAdaptiveSuggestionGeneration";
      break;
    case 0xC:
      unint64_t result = "AIMLInstrumentationStreamsTurns";
      break;
    case 0xD:
      unint64_t result = "MLRuntimePluginHosting";
      break;
    case 0xE:
      unint64_t result = "UniversalUserFeedbackOfflineLearning";
      break;
    case 0xF:
      unint64_t result = "UniversalUserFeedbackSurfacing";
      break;
    default:
      return result;
  }
  return result;
}

BOOL static SiriPrivateLearningFeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SiriPrivateLearningFeatureFlag.hash(into:)()
{
  return sub_1D3002938();
}

uint64_t SiriPrivateLearningFeatureFlag.hashValue.getter()
{
  return sub_1D3002968();
}

unint64_t sub_1D2F23C78()
{
  unint64_t result = qword_1EA698840;
  if (!qword_1EA698840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698840);
  }
  return result;
}

const char *sub_1D2F23CCC()
{
  return "SiriPrivateLearning";
}

const char *sub_1D2F23CE0()
{
  return SiriPrivateLearningFeatureFlag.feature.getter();
}

uint64_t getEnumTagSinglePayload for SiriPrivateLearningFeatureFlag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SiriPrivateLearningFeatureFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *unint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F23E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriPrivateLearningFeatureFlag()
{
  return &type metadata for SiriPrivateLearningFeatureFlag;
}

ValueMetadata *type metadata accessor for BiomeStreamError()
{
  return &type metadata for BiomeStreamError;
}

id ASRLogLinks.rawRecognitionLinkId.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void *ASRLogLinks.postITNLinkID.getter()
{
  id v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

uint64_t ASRFeatureExtractor.__allocating_init()()
{
  uint64_t v0 = sub_1D3001158();
  MEMORY[0x1F4188790](v0 - 8);
  id v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_allocObject();
  id v4 = objc_msgSend(self, sel_currentLocale);
  sub_1D30010E8();

  id v5 = objc_msgSend(self, sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v2, v5, (uint64_t)v14);
  long long v6 = v14[1];
  long long v7 = v14[2];
  long long v8 = v14[3];
  long long v9 = v14[4];
  long long v10 = v14[5];
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  *(_OWORD *)(v3 + 16) = v14[0];
  *(_OWORD *)(v3 + 32) = v6;
  *(_OWORD *)(v3 + 48) = v7;
  *(_OWORD *)(v3 + 64) = v8;
  *(_OWORD *)(v3 + 80) = v9;
  *(_OWORD *)(v3 + 96) = v10;
  *(void *)(v3 + 112) = v11;
  *(void *)(v3 + 120) = v12;
  return v3;
}

uint64_t ASRFeatureExtractor.init()()
{
  uint64_t v1 = sub_1D3001158();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_currentLocale);
  sub_1D30010E8();

  id v5 = objc_msgSend(self, sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v3, v5, (uint64_t)v14);
  long long v6 = v14[1];
  long long v7 = v14[2];
  long long v8 = v14[3];
  long long v9 = v14[4];
  long long v10 = v14[5];
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  *(_OWORD *)(v0 + 16) = v14[0];
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 80) = v9;
  *(_OWORD *)(v0 + 96) = v10;
  *(void *)(v0 + 112) = v11;
  *(void *)(v0 + 120) = v12;
  return v0;
}

uint64_t sub_1D2F240F0(uint64_t result, unint64_t a2)
{
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v3 = result;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1D30025A8();
      unint64_t result = swift_bridgeObjectRelease();
      if (v4 > v3)
      {
LABEL_4:
        if ((a2 & 0xC000000000000001) != 0) {
          return MEMORY[0x1D942E3A0](v3, a2);
        }
        if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)v3) {
          return (uint64_t)*(id *)(a2 + 8 * v3 + 32);
        }
        __break(1u);
        return result;
      }
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      goto LABEL_4;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D3001918();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBD65778);
  long long v6 = sub_1D30018F8();
  os_log_type_t v7 = sub_1D30020B8();
  if (os_log_type_enabled(v6, v7))
  {
    long long v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v8 = 0;
    _os_log_impl(&dword_1D2F05000, v6, v7, "[ASRFeatureExtractor] Error joining recognition tokens by their indices. ", v8, 2u);
    MEMORY[0x1D942F2D0](v8, -1, -1);
  }

  sub_1D2F26CB0();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1D2F24288(unint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x1D942EA50]();
  uint64_t v4 = (void *)MEMORY[0x1D942EA50]();
  sub_1D2F243B0(a1, v1, &v7);
  uint64_t v5 = v7;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D2F2432C(unint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x1D942EA50]();
  sub_1D2F243B0(a1, v1, &v5);
  return v5;
}

uint64_t sub_1D2F243B0@<X0>(unint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = a1;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)&long long v157 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1D30025A8();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      if (v8 >= 1)
      {
        unint64_t v3 = 0;
        unint64_t v9 = v6 & 0xC000000000000001;
        uint64_t v4 = (uint64_t)off_1E6970000;
        id v170 = (id)v6;
        while (1)
        {
          id v10 = v9 ? (id)MEMORY[0x1D942E3A0](v3, v6) : *(id *)(v6 + 8 * v3 + 32);
          uint64_t v11 = v10;
          if ([v10 *(SEL *)(v4 + 2032)] != 6) {
            break;
          }
          id v12 = objc_msgSend(v11, sel_payload);
          if (v12)
          {
            uint64_t v13 = sub_1D3000F68();
            unint64_t v15 = v14;

            id v12 = (id)sub_1D3000F58();
            uint64_t v16 = v13;
            uint64_t v4 = 0x1E6970000;
            sub_1D2F0D1CC(v16, v15);
          }
          id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v12);

          if (v17)
          {
            id v18 = objc_msgSend(v17, sel_event);

            if (v18) {
              goto LABEL_17;
            }
          }

LABEL_6:
          if (v8 == ++v3)
          {
            swift_bridgeObjectRelease();
            unint64_t v6 = v157;
            uint64_t v7 = MEMORY[0x1E4FBC860];
            goto LABEL_33;
          }
        }
        id v18 = v11;
LABEL_17:
        uint64_t v19 = sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD61438);
        [v18 *(SEL *)(v4 + 2032)];
        uint64_t v20 = sub_1D30021F8();
        if (v20 && v19 == v20)
        {
          id v21 = objc_msgSend(v18, sel_payload);
          if (v21)
          {
            uint64_t v22 = sub_1D3000F68();
            uint64_t v23 = v8;
            unint64_t v24 = v9;
            unint64_t v26 = v25;

            id v27 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            id v21 = (id)sub_1D3000F58();
            unint64_t v28 = v26;
            unint64_t v9 = v24;
            uint64_t v8 = v23;
            unint64_t v6 = (unint64_t)v170;
            sub_1D2F0D1CC(v22, v28);
          }
          else
          {
            id v27 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          }
          id v29 = objc_msgSend(v27, sel_initWithData_, v21);

          if (v29)
          {
            self;
            uint64_t v30 = swift_dynamicCastObjCClass();

            if (v30)
            {
              MEMORY[0x1D942DCC0]();
              if (*(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1D3001E28();
              }
              sub_1D3001E68();
              sub_1D3001DE8();
            }
            else
            {
            }
          }
          else
          {
          }
          uint64_t v4 = 0x1E6970000;
        }
        else
        {
        }
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_145;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_33:
  *(void *)&long long v157 = v7;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    if (v5) {
      goto LABEL_35;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    unint64_t v3 = MEMORY[0x1E4FBC860];
    goto LABEL_48;
  }
  uint64_t v5 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_47;
  }
LABEL_35:
  if (v5 < 1)
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v32 = (id)MEMORY[0x1D942E3A0](i, v6);
    }
    else {
      id v32 = *(id *)(v6 + 8 * i + 32);
    }
    uint64_t v7 = (uint64_t)v32;
    id v33 = objc_msgSend(v32, sel_packageGenerated);

    if (v33)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      uint64_t v7 = (uint64_t)&v157;
      sub_1D3001DE8();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = v157;
LABEL_48:
  *(void *)&long long v157 = MEMORY[0x1E4FBC860];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_50;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_50:
      if (v4 < 1)
      {
LABEL_146:
        __break(1u);
        goto LABEL_147;
      }
      id v170 = (id)v5;
      for (uint64_t j = 0; j != v4; ++j)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v35 = (id)MEMORY[0x1D942E3A0](j, v3);
        }
        else {
          id v35 = *(id *)(v3 + 8 * j + 32);
        }
        os_log_type_t v36 = v35;
        if (objc_msgSend(v35, sel_isFinal))
        {
          sub_1D30024E8();
          sub_1D3002518();
          sub_1D3002528();
          sub_1D30024F8();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v37 = (uint64_t *)v157;
      uint64_t v5 = (uint64_t)v170;
      goto LABEL_62;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t *)MEMORY[0x1E4FBC860];
LABEL_62:
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1D3001918();
  __swift_project_value_buffer(v38, (uint64_t)qword_1EBD65778);
  swift_retain_n();
  uint64_t v7 = sub_1D30018F8();
  LOBYTE(v3) = sub_1D3002098();
  unint64_t v141 = (unint64_t)v37;
  if (!os_log_type_enabled((os_log_t)v7, (os_log_type_t)v3))
  {

    swift_release_n();
    goto LABEL_70;
  }
  uint64_t v4 = swift_slowAlloc();
  *(_DWORD *)uint64_t v4 = 134217984;
  if (((unint64_t)v37 & 0x8000000000000000) != 0 || ((unint64_t)v37 & 0x4000000000000000) != 0) {
    goto LABEL_149;
  }
  uint64_t v39 = v37[2];
  while (1)
  {
    swift_release();
    *(void *)&long long v157 = v39;
    sub_1D3002318();
    swift_release();
    _os_log_impl(&dword_1D2F05000, (os_log_t)v7, (os_log_type_t)v3, "[ASRFeatureExtractor] ASR final package events count: %ld", (uint8_t *)v4, 0xCu);
    MEMORY[0x1D942F2D0](v4, -1, -1);

LABEL_70:
    unint64_t v3 = MEMORY[0x1E4FBC860];
    *(void *)&long long v157 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      if (v5 < 1)
      {
LABEL_147:
        __break(1u);
        goto LABEL_148;
      }
      swift_bridgeObjectRetain();
      for (uint64_t k = 0; k != v5; ++k)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v41 = (id)MEMORY[0x1D942E3A0](k, v6);
        }
        else {
          id v41 = *(id *)(v6 + 8 * k + 32);
        }
        unint64_t v42 = v41;
        id v43 = objc_msgSend(v41, sel_recognitionResultTier1);

        if (v43)
        {
          MEMORY[0x1D942DCC0]();
          uint64_t v4 = *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((unint64_t)v4 >= *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v3 = v157;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    id v44 = sub_1D30018F8();
    os_log_type_t v45 = sub_1D3002098();
    if (os_log_type_enabled(v44, v45))
    {
      id v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v46 = 134217984;
      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_1D30025A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v47 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(void *)&long long v157 = v47;
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v44, v45, "[ASRFeatureExtractor] ASR recognition events count: %ld", v46, 0xCu);
      MEMORY[0x1D942F2D0](v46, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v6 = v141;
    if ((v141 & 0x8000000000000000) != 0 || (v141 & 0x4000000000000000) != 0) {
      break;
    }
    uint64_t v7 = *(void *)(v141 + 16);
    if (!v7) {
      goto LABEL_142;
    }
LABEL_90:
    if (v7 >= 1)
    {
      id v48 = (void *)MEMORY[0x1E4FBC860];
      id v49 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v144 = v3;
      uint64_t v140 = v7;
      uint64_t v50 = 0;
      while (1)
      {
        uint64_t v152 = v50;
        unint64_t v51 = v3;
        if ((v141 & 0xC000000000000001) != 0) {
          id v52 = (id)MEMORY[0x1D942E3A0](v50, v6);
        }
        else {
          id v52 = *(id *)(v6 + 8 * v50 + 32);
        }
        uint64_t v53 = v52;
        id v54 = objc_msgSend(v52, sel_package);
        id v55 = objc_msgSend(v54, sel_postItn);

        id v56 = objc_msgSend(v55, sel_linkId);
        id v170 = v53;
        id v57 = objc_msgSend(v53, sel_package);
        id v58 = objc_msgSend(v57, sel_rawRecognition);

        id v59 = objc_msgSend(v58, sel_linkId);
        id v60 = v59;
        id v150 = v56;
        v151 = v60;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v48 = sub_1D2F27F14(0, v48[2] + 1, 1, v48);
        }
        unint64_t v62 = v48[2];
        unint64_t v61 = v48[3];
        if (v62 >= v61 >> 1) {
          id v48 = sub_1D2F27F14((void *)(v61 > 1), v62 + 1, 1, v48);
        }
        v48[2] = v62 + 1;
        uint64_t v63 = &v48[2 * v62];
        v148 = v59;
        v63[4] = v59;
        v63[5] = v56;
        id v64 = v170;
        id v65 = objc_msgSend(v170, sel_package);
        id v66 = objc_msgSend(v65, sel_postItn);

        uint64_t v67 = (void *)sub_1D2F26130(v66);
        swift_bridgeObjectRelease();
        id v68 = objc_msgSend(v64, sel_package);
        id v69 = objc_msgSend(v68, sel_rawRecognition);

        v146 = (void *)sub_1D2F26130(v69);
        uint64_t v71 = v70;

        unint64_t v3 = v51;
        uint64_t v72 = sub_1D2F26780(v51, v56, v67);
        uint64_t v74 = v73;
        swift_bridgeObjectRelease();
        uint64_t v153 = v71;
        v154 = v48;
        if (*(void *)(v72 + 16))
        {
          uint64_t v75 = type metadata accessor for ASRBestPostITNUtterance(0);
          uint64_t v76 = swift_allocObject();
          *(void *)(v76 + 16) = v72;
          swift_bridgeObjectRetain();
          uint64_t v143 = v74;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v49 = sub_1D2F27F00(0, v49[2] + 1, 1, v49);
          }
          unint64_t v78 = v49[2];
          unint64_t v77 = v49[3];
          if (v78 >= v77 >> 1) {
            id v49 = sub_1D2F27F00((void *)(v77 > 1), v78 + 1, 1, v49);
          }
          uint64_t v159 = v75;
          uint64_t v160 = sub_1D2F26C5C(&qword_1EA6988B8, (void (*)(uint64_t))type metadata accessor for ASRBestPostITNUtterance);
          v155 = v49;
          *(void *)&long long v157 = v76;
          v49[2] = v78 + 1;
          sub_1D2F0BE68(&v157, (uint64_t)&v49[5 * v78 + 4]);
          uint64_t v79 = sub_1D30018F8();
          os_log_type_t v80 = sub_1D30020B8();
          if (os_log_type_enabled(v79, v80))
          {
            long long v81 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)long long v81 = 0;
            _os_log_impl(&dword_1D2F05000, v79, v80, "[ASRFeatureExtractor] Attempting to trim wake words for ASRBestPostITNUtterance...", v81, 2u);
            MEMORY[0x1D942F2D0](v81, -1, -1);
          }

          uint64_t v82 = a2[3];
          uint64_t v83 = a2[4];
          uint64_t v84 = a2[5];
          uint64_t v85 = a2[6];
          uint64_t v86 = a2[7];
          uint64_t v87 = a2[8];
          uint64_t v88 = a2[9];
          uint64_t v89 = a2[10];
          uint64_t v90 = a2[11];
          uint64_t v91 = a2[12];
          uint64_t v92 = a2[13];
          uint64_t v93 = a2[14];
          uint64_t v94 = a2[15];
          *(void *)&long long v157 = a2[2];
          *((void *)&v157 + 1) = v82;
          uint64_t v158 = v83;
          uint64_t v159 = v84;
          uint64_t v160 = v85;
          uint64_t v161 = v86;
          uint64_t v162 = v87;
          uint64_t v163 = v88;
          uint64_t v164 = v89;
          uint64_t v165 = v90;
          uint64_t v166 = v91;
          uint64_t v167 = v92;
          uint64_t v168 = v93;
          uint64_t v169 = v94;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v142 = WakeWordTrimmer.trim(tokens:)(v72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v95 = type metadata accessor for ASRBestPostITNTrimmedUtterance(0);
          uint64_t v96 = swift_allocObject();
          *(void *)(v96 + 16) = v142;
          id v49 = v155;
          unint64_t v98 = v155[2];
          unint64_t v97 = v155[3];
          if (v98 >= v97 >> 1) {
            id v49 = sub_1D2F27F00((void *)(v97 > 1), v98 + 1, 1, v155);
          }
          unint64_t v3 = v144;
          uint64_t v71 = v153;
          id v48 = v154;
          uint64_t v159 = v95;
          uint64_t v160 = sub_1D2F26C5C(&qword_1EA6988C0, (void (*)(uint64_t))type metadata accessor for ASRBestPostITNTrimmedUtterance);
          *(void *)&long long v157 = v96;
          v49[2] = v98 + 1;
          sub_1D2F0BE68(&v157, (uint64_t)&v49[5 * v98 + 4]);
          uint64_t v74 = v143;
          if (!*(void *)(v143 + 16))
          {
LABEL_117:
            swift_bridgeObjectRelease();
            goto LABEL_118;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (!*(void *)(v74 + 16)) {
            goto LABEL_117;
          }
        }
        uint64_t v99 = type metadata accessor for ASRBestPostITNPhonemes(0);
        uint64_t v100 = swift_allocObject();
        *(void *)(v100 + 16) = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v49 = sub_1D2F27F00(0, v49[2] + 1, 1, v49);
        }
        unint64_t v102 = v49[2];
        unint64_t v101 = v49[3];
        if (v102 >= v101 >> 1) {
          id v49 = sub_1D2F27F00((void *)(v101 > 1), v102 + 1, 1, v49);
        }
        uint64_t v159 = v99;
        uint64_t v160 = sub_1D2F26C5C(&qword_1EA6988C8, (void (*)(uint64_t))type metadata accessor for ASRBestPostITNPhonemes);
        *(void *)&long long v157 = v100;
        v49[2] = v102 + 1;
        sub_1D2F0BE68(&v157, (uint64_t)&v49[5 * v102 + 4]);
LABEL_118:
        uint64_t v103 = sub_1D2F26780(v3, v148, v146);
        uint64_t v105 = v104;
        swift_bridgeObjectRelease();
        if (*(void *)(v103 + 16))
        {
          uint64_t v106 = type metadata accessor for ASRBestRawRecognitionUtterance(0);
          uint64_t v107 = swift_allocObject();
          *(void *)(v107 + 16) = v103;
          swift_bridgeObjectRetain();
          uint64_t v149 = v105;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v49 = sub_1D2F27F00(0, v49[2] + 1, 1, v49);
          }
          unint64_t v109 = v49[2];
          unint64_t v108 = v49[3];
          if (v109 >= v108 >> 1) {
            id v49 = sub_1D2F27F00((void *)(v108 > 1), v109 + 1, 1, v49);
          }
          uint64_t v159 = v106;
          uint64_t v160 = sub_1D2F26C5C(&qword_1EA6988D0, (void (*)(uint64_t))type metadata accessor for ASRBestRawRecognitionUtterance);
          v156 = v49;
          *(void *)&long long v157 = v107;
          v49[2] = v109 + 1;
          sub_1D2F0BE68(&v157, (uint64_t)&v49[5 * v109 + 4]);
          v110 = sub_1D30018F8();
          os_log_type_t v111 = sub_1D30020B8();
          if (os_log_type_enabled(v110, v111))
          {
            v112 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v112 = 0;
            _os_log_impl(&dword_1D2F05000, v110, v111, "[ASRFeatureExtractor] Attempting to trim wake words for ASRBestRawRecognitionUtterance...", v112, 2u);
            MEMORY[0x1D942F2D0](v112, -1, -1);
          }

          uint64_t v113 = a2[3];
          uint64_t v114 = a2[4];
          uint64_t v115 = a2[5];
          uint64_t v116 = a2[6];
          uint64_t v117 = a2[7];
          uint64_t v118 = a2[8];
          uint64_t v119 = a2[9];
          uint64_t v120 = a2[10];
          uint64_t v121 = a2[11];
          uint64_t v122 = a2[12];
          uint64_t v123 = a2[13];
          uint64_t v124 = a2[14];
          uint64_t v125 = a2[15];
          *(void *)&long long v157 = a2[2];
          *((void *)&v157 + 1) = v113;
          uint64_t v158 = v114;
          uint64_t v159 = v115;
          uint64_t v160 = v116;
          uint64_t v161 = v117;
          uint64_t v162 = v118;
          uint64_t v163 = v119;
          uint64_t v164 = v120;
          uint64_t v165 = v121;
          uint64_t v166 = v122;
          uint64_t v167 = v123;
          uint64_t v168 = v124;
          uint64_t v169 = v125;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v147 = WakeWordTrimmer.trim(tokens:)(v103);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v126 = type metadata accessor for ASRBestRawRecognitionTrimmedUtterance(0);
          uint64_t v127 = swift_allocObject();
          *(void *)(v127 + 16) = v147;
          id v49 = v156;
          unint64_t v129 = v156[2];
          unint64_t v128 = v156[3];
          if (v129 >= v128 >> 1) {
            id v49 = sub_1D2F27F00((void *)(v128 > 1), v129 + 1, 1, v156);
          }
          unint64_t v3 = v144;
          uint64_t v71 = v153;
          id v48 = v154;
          uint64_t v159 = v126;
          uint64_t v160 = sub_1D2F26C5C(&qword_1EA6988D8, (void (*)(uint64_t))type metadata accessor for ASRBestRawRecognitionTrimmedUtterance);
          *(void *)&long long v157 = v127;
          v49[2] = v129 + 1;
          sub_1D2F0BE68(&v157, (uint64_t)&v49[5 * v129 + 4]);
          uint64_t v105 = v149;
          if (!*(void *)(v149 + 16))
          {
LABEL_135:
            swift_bridgeObjectRelease();
            if (*(void *)(v71 + 16)) {
              goto LABEL_136;
            }
            goto LABEL_92;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (!*(void *)(v105 + 16)) {
            goto LABEL_135;
          }
        }
        uint64_t v130 = type metadata accessor for ASRBestRawRecognitionPhonemes(0);
        uint64_t v131 = swift_allocObject();
        *(void *)(v131 + 16) = v105;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v49 = sub_1D2F27F00(0, v49[2] + 1, 1, v49);
        }
        unint64_t v133 = v49[2];
        unint64_t v132 = v49[3];
        if (v133 >= v132 >> 1) {
          id v49 = sub_1D2F27F00((void *)(v132 > 1), v133 + 1, 1, v49);
        }
        uint64_t v159 = v130;
        uint64_t v160 = sub_1D2F26C5C(&qword_1EA6988E0, (void (*)(uint64_t))type metadata accessor for ASRBestRawRecognitionPhonemes);
        *(void *)&long long v157 = v131;
        v49[2] = v133 + 1;
        sub_1D2F0BE68(&v157, (uint64_t)&v49[5 * v133 + 4]);
        if (*(void *)(v71 + 16))
        {
LABEL_136:
          uint64_t v134 = type metadata accessor for ASRBestRawRecognitionConfidence(0);
          uint64_t v135 = swift_allocObject();
          *(void *)(v135 + 16) = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v49 = sub_1D2F27F00(0, v49[2] + 1, 1, v49);
          }
          unint64_t v137 = v49[2];
          unint64_t v136 = v49[3];
          if (v137 >= v136 >> 1) {
            id v49 = sub_1D2F27F00((void *)(v136 > 1), v137 + 1, 1, v49);
          }
          uint64_t v159 = v134;
          uint64_t v160 = sub_1D2F26C5C(&qword_1EA6988E8, (void (*)(uint64_t))type metadata accessor for ASRBestRawRecognitionConfidence);
          *(void *)&long long v157 = v135;
          v49[2] = v137 + 1;
          sub_1D2F0BE68(&v157, (uint64_t)&v49[5 * v137 + 4]);
          goto LABEL_93;
        }
LABEL_92:
        swift_bridgeObjectRelease();
LABEL_93:
        uint64_t v50 = v152 + 1;

        unint64_t v6 = v141;
        if (v140 == v152 + 1) {
          goto LABEL_143;
        }
      }
    }
LABEL_148:
    __break(1u);
LABEL_149:
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1D30025A8();
    swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D30025A8();
  swift_release();
  if (v7) {
    goto LABEL_90;
  }
LABEL_142:
  id v48 = (void *)MEMORY[0x1E4FBC860];
  id v49 = (void *)MEMORY[0x1E4FBC860];
LABEL_143:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a3 = v49;
  a3[1] = v48;
  return result;
}

uint64_t ASRBestPostITNPhonemes.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

{
  return sub_1D2F25B94(a1, &qword_1EA698848);
}

uint64_t ASRFeatureExtractor.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ASRFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F25888(unint64_t *a1)
{
  return sub_1D2F24288(*a1);
}

uint64_t ASRBestPostITNUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1D2F25B94(a1, &qword_1EA698848);
}

uint64_t ASRBestPostITNUtterance.init(value:)(uint64_t a1)
{
  return sub_1D2F25C14(a1, &qword_1EA698848);
}

uint64_t sub_1D2F258CC(uint64_t *a1)
{
  return sub_1D2F25938(a1, (void (*)(void))type metadata accessor for ASRBestPostITNUtterance);
}

uint64_t sub_1D2F258E4(uint64_t *a1)
{
  return sub_1D2F25994(a1, (void (*)(void))type metadata accessor for ASRBestPostITNUtterance, &qword_1EA698848);
}

uint64_t ASRBestPostITNTrimmedUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1D2F25B94(a1, &qword_1EA698848);
}

uint64_t ASRBestPostITNTrimmedUtterance.init(value:)(uint64_t a1)
{
  return sub_1D2F25C14(a1, &qword_1EA698848);
}

uint64_t sub_1D2F25920(uint64_t *a1)
{
  return sub_1D2F25938(a1, (void (*)(void))type metadata accessor for ASRBestPostITNTrimmedUtterance);
}

uint64_t sub_1D2F25938(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  return result;
}

uint64_t sub_1D2F25974(uint64_t *a1)
{
  return sub_1D2F25994(a1, (void (*)(void))type metadata accessor for ASRBestPostITNTrimmedUtterance, &qword_1EA698848);
}

uint64_t sub_1D2F25994(uint64_t *a1, void (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = *a1;
  a2(0);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = v5;
  if (v4)
  {
    *(void *)(v5 + 16) = v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v6;
}

uint64_t ASRBestPostITNPhonemes.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

{
  return sub_1D2F25C14(a1, &qword_1EA698848);
}

uint64_t ASRBestPostITNPhonemes.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F25A54(uint64_t *a1)
{
  return sub_1D2F25938(a1, (void (*)(void))type metadata accessor for ASRBestPostITNPhonemes);
}

uint64_t sub_1D2F25A6C(uint64_t *a1)
{
  return sub_1D2F25994(a1, (void (*)(void))type metadata accessor for ASRBestPostITNPhonemes, &qword_1EA698848);
}

uint64_t ASRBestRawRecognitionUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1D2F25B94(a1, &qword_1EA698848);
}

uint64_t ASRBestRawRecognitionUtterance.init(value:)(uint64_t a1)
{
  return sub_1D2F25C14(a1, &qword_1EA698848);
}

uint64_t sub_1D2F25AA8(uint64_t *a1)
{
  return sub_1D2F25938(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionUtterance);
}

uint64_t sub_1D2F25AC0(uint64_t *a1)
{
  return sub_1D2F25994(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionUtterance, &qword_1EA698848);
}

uint64_t ASRBestRawRecognitionTrimmedUtterance.__allocating_init(value:)(uint64_t a1)
{
  return sub_1D2F25B94(a1, &qword_1EA698848);
}

uint64_t ASRBestRawRecognitionTrimmedUtterance.init(value:)(uint64_t a1)
{
  return sub_1D2F25C14(a1, &qword_1EA698848);
}

uint64_t sub_1D2F25AFC(uint64_t *a1)
{
  return sub_1D2F25938(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionTrimmedUtterance);
}

uint64_t sub_1D2F25B14(uint64_t *a1)
{
  return sub_1D2F25994(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionTrimmedUtterance, &qword_1EA698848);
}

uint64_t ASRBestRawRecognitionPhonemes.__allocating_init(value:)(uint64_t a1)
{
  return sub_1D2F25B94(a1, &qword_1EA698848);
}

uint64_t ASRBestRawRecognitionPhonemes.init(value:)(uint64_t a1)
{
  return sub_1D2F25C14(a1, &qword_1EA698848);
}

uint64_t sub_1D2F25B50(uint64_t *a1)
{
  return sub_1D2F25938(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionPhonemes);
}

uint64_t sub_1D2F25B68(uint64_t *a1)
{
  return sub_1D2F25994(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionPhonemes, &qword_1EA698848);
}

uint64_t ASRBestRawRecognitionConfidence.__allocating_init(value:)(uint64_t a1)
{
  return sub_1D2F25B94(a1, &qword_1EA698850);
}

uint64_t sub_1D2F25B94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (a1)
  {
    *(void *)(v4 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t ASRBestRawRecognitionConfidence.init(value:)(uint64_t a1)
{
  return sub_1D2F25C14(a1, &qword_1EA698850);
}

uint64_t sub_1D2F25C14(uint64_t a1, uint64_t *a2)
{
  if (a1)
  {
    *(void *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

void *initializeBufferWithCopyOfBuffer for ASRLogLinks(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ASRLogLinks(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ASRLogLinks(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for ASRLogLinks(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ASRLogLinks(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASRLogLinks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASRLogLinks()
{
  return &type metadata for ASRLogLinks;
}

uint64_t type metadata accessor for ASRFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for ASRFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ASRFeatureExtractor);
}

uint64_t dispatch thunk of ASRFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ASRFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t type metadata accessor for ASRBestPostITNUtterance(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61298);
}

uint64_t type metadata accessor for ASRBestPostITNTrimmedUtterance(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698858);
}

uint64_t type metadata accessor for ASRBestPostITNPhonemes(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698868);
}

uint64_t type metadata accessor for ASRBestRawRecognitionUtterance(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698878);
}

uint64_t type metadata accessor for ASRBestRawRecognitionTrimmedUtterance(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698888);
}

uint64_t type metadata accessor for ASRBestRawRecognitionPhonemes(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698898);
}

uint64_t type metadata accessor for ASRBestRawRecognitionConfidence(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6988A8);
}

uint64_t sub_1D2F25FA4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2F25FDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D2F26014(uint64_t *a1)
{
  return sub_1D2F25938(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionConfidence);
}

uint64_t sub_1D2F2602C(uint64_t *a1)
{
  return sub_1D2F25994(a1, (void (*)(void))type metadata accessor for ASRBestRawRecognitionConfidence, &qword_1EA698850);
}

uint64_t sub_1D2F2604C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1D3002508();
    for (uint64_t i = (uint64_t *)(a1 + 32); ; ++i)
    {
      if (a2)
      {
        sub_1D2F240F0(*i, a2);
        if (v2) {
          break;
        }
      }
      sub_1D30024E8();
      sub_1D3002518();
      sub_1D3002528();
      sub_1D30024F8();
      if (!--v4) {
        return v8;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2F26130(void *a1)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v60[1] = MEMORY[0x1E4FBC860];
  uint64_t v61 = MEMORY[0x1E4FBC860];
  if (a1)
  {
    id v5 = (id *)objc_msgSend(a1, sel_utterances);
    if (v5)
    {
      uint64_t v1 = v5;
      sub_1D2F0BCB8(0, &qword_1EA698920);
      unint64_t v6 = sub_1D3001DC8();
    }
    else
    {
      unint64_t v6 = MEMORY[0x1E4FBC860];
    }
    id v7 = objc_msgSend(a1, sel_phrases);
    if (v7)
    {
      uint64_t v8 = v7;
      sub_1D2F0BCB8(0, &qword_1EA698918);
      uint64_t v3 = sub_1D3001DC8();
    }
  }
  else
  {
    unint64_t v6 = MEMORY[0x1E4FBC860];
  }
  if (v6 >> 62) {
    goto LABEL_65;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        id v9 = (id *)MEMORY[0x1D942E3A0](0, v6);
      }
      else
      {
        if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_69:
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_1D30025A8();
          swift_bridgeObjectRelease();
          if (!v12)
          {
LABEL_70:

            swift_bridgeObjectRelease();
            uint64_t v46 = MEMORY[0x1E4FBC860];
            goto LABEL_71;
          }
          goto LABEL_17;
        }
        id v9 = (id *)*(id *)(v6 + 32);
      }
      uint64_t v1 = v9;
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v1, sel_interpretationIndices);
      unint64_t v2 = MEMORY[0x1E4FBC860];
      if (v10)
      {
        uint64_t v11 = v10;
        sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63370);
        unint64_t v2 = sub_1D3001DC8();
      }
      if (v2 >> 62) {
        goto LABEL_69;
      }
      uint64_t v12 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v12) {
        goto LABEL_70;
      }
LABEL_17:
      id v48 = v1;
      uint64_t v49 = v12;
      unint64_t v6 = 0;
      unint64_t v13 = v2 & 0xC000000000000001;
      unint64_t v14 = v3 & 0xC000000000000001;
      unint64_t v54 = v2 + 32;
      uint64_t v55 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v52 = v3 + 32;
      uint64_t v53 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v15 = off_1E6970000;
      unint64_t v56 = v3 & 0xC000000000000001;
      unint64_t v57 = v2 & 0xC000000000000001;
      unint64_t v50 = v2;
      uint64_t v51 = v3;
      while (1)
      {
        if (v13)
        {
          uint64_t v16 = (id *)MEMORY[0x1D942E3A0](v6, v2);
        }
        else
        {
          if (v6 >= *(void *)(v55 + 16)) {
            goto LABEL_62;
          }
          uint64_t v16 = (id *)*(id *)(v54 + 8 * v6);
        }
        id v59 = v16;
        id v17 = (id *)(v6 + 1);
        if (__OFADD__(v6, 1)) {
          break;
        }
        if (v14)
        {
          id v18 = (id)MEMORY[0x1D942E3A0](v6, v3);
        }
        else
        {
          if (v6 >= *(void *)(v53 + 16)) {
            goto LABEL_63;
          }
          id v18 = *(id *)(v52 + 8 * v6);
        }
        uint64_t v19 = v18;
        id v20 = objc_msgSend(v18, (SEL)v15[269], v48);

        if (v20)
        {
          sub_1D2F0BCB8(0, &qword_1EA698908);
          uint64_t v21 = sub_1D3001DC8();

          unint64_t v6 = (unint64_t)v59;
          unint64_t v22 = (unint64_t)objc_msgSend(v59, sel_integerValue);
          if ((v21 & 0xC000000000000001) != 0)
          {
            uint64_t v23 = (id *)MEMORY[0x1D942E3A0](v22, v21);
          }
          else
          {
            if ((v22 & 0x8000000000000000) != 0) {
              goto LABEL_60;
            }
            if (v22 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_61;
            }
            uint64_t v23 = (id *)*(id *)(v21 + 8 * v22 + 32);
          }
          uint64_t v1 = v23;
          swift_bridgeObjectRelease();
          id v24 = objc_msgSend(v1, sel_tokens);
          if (v24)
          {
            unint64_t v25 = v24;
            id v58 = v1;
            sub_1D2F0BCB8(0, &qword_1EA698910);
            unint64_t v26 = sub_1D3001DC8();

            if (v26 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v27 = sub_1D30025A8();
              swift_bridgeObjectRelease();
              unint64_t v28 = v1;
              if (!v27) {
                goto LABEL_55;
              }
LABEL_37:
              v60[0] = MEMORY[0x1E4FBC860];
              unint64_t v6 = (unint64_t)v60;
              sub_1D2F09F14(0, v27 & ~(v27 >> 63), 0);
              if (v27 < 0) {
                goto LABEL_64;
              }
              uint64_t v29 = 0;
              uint64_t v30 = v60[0];
              unint64_t v31 = v26 & 0xC000000000000001;
              do
              {
                if (v31) {
                  id v32 = (id)MEMORY[0x1D942E3A0](v29, v26);
                }
                else {
                  id v32 = *(id *)(v26 + 8 * v29 + 32);
                }
                id v33 = v32;
                unsigned int v34 = objc_msgSend(v32, sel_linkIndex);

                v60[0] = v30;
                unint64_t v36 = *(void *)(v30 + 16);
                unint64_t v35 = *(void *)(v30 + 24);
                if (v36 >= v35 >> 1)
                {
                  sub_1D2F09F14(v35 > 1, v36 + 1, 1);
                  uint64_t v30 = v60[0];
                }
                ++v29;
                *(void *)(v30 + 16) = v36 + 1;
                *(void *)(v30 + 8 * v36 + 32) = v34;
              }
              while (v27 != v29);
              sub_1D2F9CA38(v30);
              v60[0] = MEMORY[0x1E4FBC860];
              sub_1D2F09EEC(0, v27 & ~(v27 >> 63), 0);
              uint64_t v37 = 0;
              uint64_t v38 = v60[0];
              do
              {
                if (v31) {
                  id v39 = (id)MEMORY[0x1D942E3A0](v37, v26);
                }
                else {
                  id v39 = *(id *)(v26 + 8 * v37 + 32);
                }
                id v40 = v39;
                signed int v41 = objc_msgSend(v39, sel_confidence);

                v60[0] = v38;
                unint64_t v43 = *(void *)(v38 + 16);
                unint64_t v42 = *(void *)(v38 + 24);
                if (v43 >= v42 >> 1)
                {
                  sub_1D2F09EEC(v42 > 1, v43 + 1, 1);
                  uint64_t v38 = v60[0];
                }
                ++v37;
                *(void *)(v38 + 16) = v43 + 1;
                *(void *)(v38 + 8 * v43 + 32) = v41;
              }
              while (v27 != v37);
              swift_bridgeObjectRelease();
              unint64_t v2 = v50;
              uint64_t v3 = v51;
              uint64_t v12 = v49;
              unint64_t v28 = v58;
            }
            else
            {
              uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
              unint64_t v28 = v1;
              if (v27) {
                goto LABEL_37;
              }
LABEL_55:
              uint64_t v38 = MEMORY[0x1E4FBC860];
              sub_1D2F9CA38(MEMORY[0x1E4FBC860]);
              swift_bridgeObjectRelease();
            }
            sub_1D2F9CB84(v38);
            uint64_t v1 = v59;
            unint64_t v6 = (unint64_t)v28;
            unint64_t v14 = v56;
            unint64_t v13 = v57;
            unint64_t v15 = off_1E6970000;
          }

          goto LABEL_19;
        }
        unint64_t v6 = (unint64_t)v59;
LABEL_19:

        unint64_t v6 = (unint64_t)v17;
        if (v17 == (id *)v12)
        {

          swift_bridgeObjectRelease();
          uint64_t v44 = v61;
          goto LABEL_72;
        }
      }
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1D30025A8();
      swift_bridgeObjectRelease();
    }
    while (v45);
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = MEMORY[0x1E4FBC860];
LABEL_71:
  uint64_t v44 = v46;
LABEL_72:
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1D2F26780(unint64_t a1, void *a2, id a3)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v6 = a2;
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
LABEL_37:

    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_36:
  id v45 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D30025A8();
  if (!v5) {
    goto LABEL_37;
  }
LABEL_4:
  uint64_t v47 = (uint64_t)a3;
  uint64_t v7 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1D942E3A0](v7 - 4, a1);
    }
    else {
      id v8 = *(id *)(a1 + 8 * v7);
    }
    id v9 = v8;
    uint64_t v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    id v11 = objc_msgSend(v8, sel_linkId);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_1D2F0BCB8(0, &qword_1EA6988F0);
      id v13 = a2;
      a3 = v12;
      LOBYTE(v12) = sub_1D30022B8();

      if (v12) {
        break;
      }
    }

    ++v7;
    if (v10 == v5) {
      goto LABEL_37;
    }
  }
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v9, sel_tokens);
  if (v14)
  {
    unint64_t v15 = v14;
    sub_1D2F0BCB8(0, &qword_1EA6988F8);
    unint64_t v16 = sub_1D3001DC8();
  }
  else
  {
    unint64_t v16 = 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1D2F2604C(v47, v16);
  swift_bridgeObjectRelease_n();
  int64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease();

    return MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1D2F09B08(0, v19, 0);
  uint64_t v20 = 0;
  uint64_t v17 = v50;
  int64_t v49 = v19;
  do
  {
    uint64_t v21 = v18;
    unint64_t v22 = *(void **)(v18 + 8 * v20 + 32);
    if (v22 && (id v23 = v22, (v24 = objc_msgSend(v23, sel_text)) != 0))
    {
      unint64_t v25 = v24;
      uint64_t v26 = sub_1D3001B78();
      unint64_t v28 = v27;
    }
    else
    {

      uint64_t v26 = 0;
      unint64_t v28 = 0xE000000000000000;
    }
    unint64_t v30 = *(void *)(v50 + 16);
    unint64_t v29 = *(void *)(v50 + 24);
    if (v30 >= v29 >> 1) {
      sub_1D2F09B08(v29 > 1, v30 + 1, 1);
    }
    ++v20;
    *(void *)(v50 + 16) = v30 + 1;
    uint64_t v31 = v50 + 16 * v30;
    *(void *)(v31 + 32) = v26;
    *(void *)(v31 + 40) = v28;
    uint64_t v18 = v21;
  }
  while (v49 != v20);
  uint64_t v51 = MEMORY[0x1E4FBC860];
  sub_1D2F09B08(0, v49, 0);
  uint64_t v32 = 0;
  uint64_t v33 = v51;
  do
  {
    uint64_t v34 = v33;
    unint64_t v35 = *(void **)(v18 + 8 * v32 + 32);
    if (v35
      && (id v36 = v35, (v37 = objc_msgSend(v36, sel_phoneSequence)) != 0))
    {
      uint64_t v38 = v37;
      uint64_t v39 = sub_1D3001B78();
      unint64_t v41 = v40;
    }
    else
    {

      uint64_t v39 = 0;
      unint64_t v41 = 0xE000000000000000;
    }
    uint64_t v33 = v34;
    uint64_t v52 = v34;
    unint64_t v42 = *(void *)(v34 + 16);
    unint64_t v43 = *(void *)(v33 + 24);
    if (v42 >= v43 >> 1)
    {
      sub_1D2F09B08(v43 > 1, v42 + 1, 1);
      uint64_t v33 = v52;
    }
    ++v32;
    *(void *)(v33 + 16) = v42 + 1;
    uint64_t v44 = v33 + 16 * v42;
    *(void *)(v44 + 32) = v39;
    *(void *)(v44 + 40) = v41;
    uint64_t v18 = v21;
  }
  while (v49 != v32);
  swift_bridgeObjectRelease();

  return v17;
}

uint64_t sub_1D2F26C5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2F26CB0()
{
  unint64_t result = qword_1EA698900;
  if (!qword_1EA698900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698900);
  }
  return result;
}

ValueMetadata *type metadata accessor for ASRFeatureExtractorError()
{
  return &type metadata for ASRFeatureExtractorError;
}

unsigned char *storeEnumTagSinglePayload for ASRFeatureExtractorErrorReason(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D2F26DB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASRFeatureExtractorErrorReason()
{
  return &type metadata for ASRFeatureExtractorErrorReason;
}

unint64_t sub_1D2F26DEC()
{
  unint64_t result = qword_1EA698928;
  if (!qword_1EA698928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698928);
  }
  return result;
}

uint64_t INAddTaskIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INAddTaskIntentFeatureExtractor.init()()
{
  return v0;
}

uint64_t sub_1D2F26EA4(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(v1, sel_intent);
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {

    return MEMORY[0x1E4FBC860];
  }
  unsigned int v4 = (void *)v3;
  id v52 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D3004380;
  id v6 = objc_msgSend(v4, sel_typeName);
  uint64_t v7 = sub_1D3001B78();
  uint64_t v9 = v8;

  uint64_t v10 = type metadata accessor for AddTaskEventFeature.EventType(0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v7;
  *(void *)(v11 + 24) = v9;
  *(void *)(v5 + 56) = v10;
  *(void *)(v5 + 64) = sub_1D2F27574(&qword_1EA698930, (void (*)(uint64_t))type metadata accessor for AddTaskEventFeature.EventType);
  *(void *)(v5 + 32) = v11;
  LOBYTE(v10) = objc_msgSend(v1, sel__donatedBySiri);
  uint64_t v12 = type metadata accessor for AddTaskEventFeature.DonatedBySiri(0);
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v10;
  *(void *)(v5 + 96) = v12;
  *(void *)(v5 + 104) = sub_1D2F27574(&qword_1EA698938, (void (*)(uint64_t))type metadata accessor for AddTaskEventFeature.DonatedBySiri);
  *(void *)(v5 + 72) = v13;
  id v14 = objc_msgSend(v4, sel_targetTaskList);
  if (v14)
  {
    unint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_title);

    if (v16)
    {
      id v17 = objc_msgSend(v16, sel_spokenPhrase);
      uint64_t v18 = sub_1D3001B78();
      uint64_t v20 = v19;

      uint64_t v21 = type metadata accessor for AddTaskEventFeature.TargetTaskListTitle(0);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v18;
      *(void *)(v22 + 24) = v20;
      uint64_t v5 = (uint64_t)sub_1D2F28BD8((void *)1, 3, 1, (void *)v5, (uint64_t *)&unk_1EBD614F8, &qword_1EBD61140);
      uint64_t v54 = v21;
      uint64_t v55 = sub_1D2F27574(&qword_1EA698950, (void (*)(uint64_t))type metadata accessor for AddTaskEventFeature.TargetTaskListTitle);
      *(void *)&long long v53 = v22;
      *(void *)(v5 + 16) = 3;
      sub_1D2F0BE68(&v53, v5 + 112);
    }
  }
  id v23 = v52;
  id v24 = objc_msgSend(v4, sel_taskTitles);
  if (!v24)
  {

LABEL_24:
    return v5;
  }
  unint64_t v25 = v24;
  sub_1D2F275C8();
  unint64_t v26 = sub_1D3001DC8();

  if (!(v26 >> 62))
  {
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v51 = v1;
    if (v27) {
      goto LABEL_8;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_21:
    uint64_t v40 = type metadata accessor for AddTaskEventFeature.TaskContents(0);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v30;
    uint64_t v54 = v40;
    uint64_t v42 = sub_1D2F27574(&qword_1EA698948, (void (*)(uint64_t))type metadata accessor for AddTaskEventFeature.TaskContents);
    uint64_t v55 = v42;
    unint64_t v56 = (void *)v5;
    *(void *)&long long v53 = v41;
    unint64_t v44 = *(void *)(v5 + 16);
    unint64_t v43 = *(void *)(v5 + 24);
    if (v44 >= v43 >> 1) {
      unint64_t v56 = sub_1D2F28BD8((void *)(v43 > 1), v44 + 1, 1, (void *)v5, (uint64_t *)&unk_1EBD614F8, &qword_1EBD61140);
    }
    uint64_t v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v40);
    MEMORY[0x1F4188790](v45);
    uint64_t v47 = (char *)&v49 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v48 + 16))(v47);
    sub_1D2F2916C(v44, (uint64_t)v47, (uint64_t *)&v56, v40, v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v53);
    uint64_t v5 = (uint64_t)v56;

    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1D30025A8();
  swift_bridgeObjectRelease();
  id v51 = v1;
  if (!v27) {
    goto LABEL_20;
  }
LABEL_8:
  *(void *)&long long v53 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1D2F09B08(0, v27 & ~(v27 >> 63), 0);
  if ((v27 & 0x8000000000000000) == 0)
  {
    uint64_t v50 = v5;
    uint64_t v29 = 0;
    uint64_t v30 = v53;
    do
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v31 = (id)MEMORY[0x1D942E3A0](v29, v26);
      }
      else {
        id v31 = *(id *)(v26 + 8 * v29 + 32);
      }
      uint64_t v32 = v31;
      id v33 = objc_msgSend(v31, sel_spokenPhrase);
      uint64_t v34 = sub_1D3001B78();
      uint64_t v36 = v35;

      *(void *)&long long v53 = v30;
      unint64_t v38 = *(void *)(v30 + 16);
      unint64_t v37 = *(void *)(v30 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1D2F09B08(v37 > 1, v38 + 1, 1);
        uint64_t v30 = v53;
      }
      ++v29;
      *(void *)(v30 + 16) = v38 + 1;
      uint64_t v39 = v30 + 16 * v38;
      *(void *)(v39 + 32) = v34;
      *(void *)(v39 + 40) = v36;
    }
    while (v27 != v29);
    swift_bridgeObjectRelease();
    id v23 = v52;
    uint64_t v5 = v50;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t AddTaskEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeC5valueAESS_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t AddTaskEventFeature.TaskContents.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  id v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (a1)
  {
    *(void *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t type metadata accessor for AddTaskEventFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698968);
}

uint64_t INAddTaskIntentFeatureExtractor.deinit()
{
  return v0;
}

uint64_t INAddTaskIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AddTaskEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698978);
}

uint64_t sub_1D2F27538(uint64_t *a1)
{
  return sub_1D2F278F8(a1, (void (*)(void))type metadata accessor for AddTaskEventFeature.EventType);
}

uint64_t sub_1D2F27550(uint64_t *a1)
{
  return sub_1D2F2794C(a1, (void (*)(void))type metadata accessor for AddTaskEventFeature.EventType);
}

uint64_t AddTaskEventFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2F27574(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2F275C8()
{
  unint64_t result = qword_1EA698940;
  if (!qword_1EA698940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA698940);
  }
  return result;
}

uint64_t AddTaskEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t AddTaskEventFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t AddTaskEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F276FC(char *a1)
{
  char v1 = *a1;
  type metadata accessor for AddTaskEventFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F27734(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for AddTaskEventFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t AddTaskEventFeature.TargetTaskListTitle.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeC5valueAESgSSSg_tcfC_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (a2)
  {
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeC5valueAESgSSSg_tcfc_0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    *(void *)(v2 + 16) = a1;
    *(void *)(v2 + 24) = a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t AddTaskEventFeature.TargetTaskListTitle.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s28SiriPrivateLearningAnalytics19AddTaskEventFeatureV0G4TypeCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F278E0(uint64_t *a1)
{
  return sub_1D2F278F8(a1, (void (*)(void))type metadata accessor for AddTaskEventFeature.TargetTaskListTitle);
}

uint64_t sub_1D2F278F8(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2F27934(uint64_t *a1)
{
  return sub_1D2F2794C(a1, (void (*)(void))type metadata accessor for AddTaskEventFeature.TargetTaskListTitle);
}

uint64_t sub_1D2F2794C(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t AddTaskEventFeature.TaskContents.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(void *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t AddTaskEventFeature.TaskContents.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AddTaskEventFeature.TaskContents.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F27AE4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for AddTaskEventFeature.TaskContents(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F27B1C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for AddTaskEventFeature.TaskContents(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1)
  {
    *(void *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

void *sub_1D2F27B88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F292F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F27C98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2F28284(a1, a2, a3, a4, (uint64_t *)&unk_1EBD614D8, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
}

void *sub_1D2F27CCC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F27CE4(a1, a2, a3, a4, &qword_1EA698408);
}

void *sub_1D2F27CD8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F27CE4(a1, a2, a3, a4, (uint64_t *)&unk_1EA698410);
}

void *sub_1D2F27CE4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      id v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      id v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F293EC(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1D2F27DF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A28);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F294D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F27F00(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F28BD8(a1, a2, a3, a4, (uint64_t *)&unk_1EBD614F8, &qword_1EBD61140);
}

void *sub_1D2F27F14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A30);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F295CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F28024(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61510);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F293EC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1D2F28134(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1D2F28988(a1, a2, a3, a4, &qword_1EBD61520);
}

char *sub_1D2F28140(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6983E0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D2F297AC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F2823C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F28AA8(a1, a2, a3, a4, &qword_1EA6989F0, &qword_1EA6989F8);
}

uint64_t sub_1D2F28250(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2F28284(a1, a2, a3, a4, &qword_1EA6989D8, type metadata accessor for UniversalSuggestionSummary, type metadata accessor for UniversalSuggestionSummary);
}

uint64_t sub_1D2F28284(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1D3002598();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D2F29FA0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1D2F28504(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A20);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F29894(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F28614(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F28860(a1, a2, a3, a4, &qword_1EBD5DC80);
}

char *sub_1D2F28628(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A38);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D2F297AC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F28724(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A10);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D2F29A90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F2884C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F28860(a1, a2, a3, a4, &qword_1EBD5FD10);
}

void *sub_1D2F28860(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F299A0(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_1D2F2897C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1D2F28988(a1, a2, a3, a4, (uint64_t *)&unk_1EBD61528);
}

char *sub_1D2F28988(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (char *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 29;
      }
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * (v13 >> 2);
      uint64_t v14 = v11 + 32;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 32]) {
          memmove(v14, a4 + 32, 4 * v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F296C0(0, v9, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1D2F28A94(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F28AA8(a1, a2, a3, a4, &qword_1EA698A00, &qword_1EA698A08);
}

void *sub_1D2F28AA8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F29BA0(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1D2F28BC4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F28BD8(a1, a2, a3, a4, &qword_1EBD5FD80, &qword_1EBD5FD68);
}

void *sub_1D2F28BD8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D2F29CA8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1D2F28D08(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F28BD8(a1, a2, a3, a4, &qword_1EA6989C0, (uint64_t *)&unk_1EBD60288);
}

uint64_t sub_1D2F28D1C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2F28284(a1, a2, a3, a4, &qword_1EA6989A8, type metadata accessor for UniversalCandidate, type metadata accessor for UniversalCandidate);
}

uint64_t sub_1D2F28D50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2F28284(a1, a2, a3, a4, &qword_1EA6989B8, type metadata accessor for UniversalSuggestion, type metadata accessor for UniversalSuggestion);
}

uint64_t sub_1D2F28D84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2F28284(a1, a2, a3, a4, &qword_1EA6989B0, type metadata accessor for UniversalRuntimeSuggestion, type metadata accessor for UniversalRuntimeSuggestion);
}

void *sub_1D2F28DB8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F29030(a1, a2, a3, a4, &qword_1EBD5FD18, (void (*)(void, int64_t, void *, void *))sub_1D2F2A0FC);
}

void *sub_1D2F28DD8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6989E8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2F29EAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F28EE8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6989E0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1D2F29DB4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1D2F29010(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1D2F29030(a1, a2, a3, a4, &qword_1EA6989C8, (void (*)(void, int64_t, void *, void *))sub_1D2F2A1F0);
}

void *sub_1D2F29030(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 1;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 5);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[4 * v11 + 4]) {
          memmove(v16, a4 + 4, 32 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AddTaskEventFeature.TaskContents(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698998);
}

uint64_t sub_1D2F2916C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1D2F0BE68(&v12, v10 + 40 * a1 + 32);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for AddTaskEventFeature.TargetTaskListTitle(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698988);
}

uint64_t type metadata accessor for INAddTaskIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for INAddTaskIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for INAddTaskIntentFeatureExtractor);
}

uint64_t dispatch thunk of INAddTaskIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INAddTaskIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

ValueMetadata *type metadata accessor for AddTaskEventFeature()
{
  return &type metadata for AddTaskEventFeature;
}

uint64_t sub_1D2F292F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

char *sub_1D2F293EC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F294D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F295CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

char *sub_1D2F296C0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1D30025E8();
  __break(1u);
  return result;
}

char *sub_1D2F297AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F29894(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F299A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F29A90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A18);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F29BA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F29CA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F29DB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F29EAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F29FA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F2A0FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F2A1F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6989D0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

void *sub_1D2F2A308(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_1D30025A8();
    if (v32) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v32)
    {
LABEL_3:
      unint64_t v30 = v1;
      unint64_t v31 = v1 & 0xC000000000000001;
      uint64_t v2 = 4;
      uint64_t v3 = off_1E6970000;
      uint64_t v4 = off_1E6970000;
      unint64_t v5 = 0x1E4FA1000uLL;
      do
      {
        if (v31) {
          id v6 = (id)MEMORY[0x1D942E3A0](v2 - 4, v1);
        }
        else {
          id v6 = *(id *)(v1 + 8 * v2);
        }
        unint64_t v7 = v6;
        uint64_t v8 = v2 - 3;
        if (__OFADD__(v2 - 4, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        if ([v6 (SEL)v3[254]] == 6)
        {
          id v9 = [v7 (SEL)v4[262]];
          if (v9)
          {
            uint64_t v10 = sub_1D3000F68();
            unint64_t v12 = v11;

            id v9 = (id)sub_1D3000F58();
            sub_1D2F0D1CC(v10, v12);
          }
          id v13 = objc_msgSend(objc_allocWithZone(*(Class *)(v5 + 728)), sel_initWithData_, v9);

          id v14 = objc_msgSend(v13, sel_event);
          if (!v14)
          {
            id v14 = v7;
            goto LABEL_5;
          }
        }
        else
        {
          id v14 = v7;
        }
        unint64_t v15 = sub_1D2F2B808();
        [v14 (SEL)v3[254]];
        uint64_t v16 = sub_1D30021F8();
        if (!v16 || v15 != v16) {
          goto LABEL_4;
        }
        id v17 = [v14 (SEL)v4[262]];
        if (v17)
        {
          uint64_t v18 = sub_1D3000F68();
          size_t v19 = v4;
          BOOL v20 = v3;
          unint64_t v22 = v21;

          id v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          id v17 = (id)sub_1D3000F58();
          uint64_t v24 = v18;
          unint64_t v1 = v30;
          unint64_t v25 = v22;
          uint64_t v3 = v20;
          uint64_t v4 = v19;
          unint64_t v5 = 0x1E4FA1000;
          sub_1D2F0D1CC(v24, v25);
        }
        else
        {
          id v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        }
        id v26 = objc_msgSend(v23, sel_initWithData_, v17);

        if (v26)
        {
          self;
          uint64_t v27 = (void *)swift_dynamicCastObjCClass();

          if (v27)
          {
            id v28 = objc_msgSend(v27, sel_deviceDynamicContext);

            id v14 = v26;
            if (v28)
            {
              swift_bridgeObjectRelease_n();
              return v27;
            }
          }
          else
          {
            id v14 = v26;
          }
        }
        else
        {
LABEL_4:
        }
LABEL_5:

        ++v2;
      }
      while (v8 != v32);
    }
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

double sub_1D2F2A610(uint64_t a1, double result)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    double v4 = *(double *)(a1 + 32);
    uint64_t v5 = v2 - 1;
    if (v2 != 1)
    {
      uint64_t result = v4;
      id v6 = (double *)(a1 + 40);
      double v7 = v4;
      do
      {
        double v8 = *v6++;
        double v9 = v8;
        if (v8 < result) {
          uint64_t result = v9;
        }
        if (v9 >= v7) {
          double v7 = v9;
        }
        --v5;
      }
      while (v5);
    }
  }
  return result;
}

uint64_t UEITurnDurationFeature.__allocating_init(value:)(double a1)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a1;
  return result;
}

uint64_t UEISaidDialogIdentifier.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t UEIFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t UEIFeatureExtractor.init()()
{
  return v0;
}

uint64_t UEIFeatureExtractor.deinit()
{
  return v0;
}

uint64_t UEIFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1D2F2A710(uint64_t *a1)
{
  return sub_1D2F2ACF4(*a1);
}

uint64_t FirstUEIEventTimestampFeature.deinit()
{
  return v0;
}

uint64_t sub_1D2F2A728(uint64_t *a1)
{
  return sub_1D2F2A780(a1, (void (*)(void))type metadata accessor for FirstUEIEventTimestampFeature);
}

uint64_t sub_1D2F2A740(uint64_t *a1)
{
  return sub_1D2F2A7D4(a1, (void (*)(void))type metadata accessor for FirstUEIEventTimestampFeature);
}

uint64_t LastUEIEventTimestampFeature.deinit()
{
  return v0;
}

uint64_t sub_1D2F2A768(uint64_t *a1)
{
  return sub_1D2F2A780(a1, (void (*)(void))type metadata accessor for LastUEIEventTimestampFeature);
}

uint64_t sub_1D2F2A780(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  return result;
}

uint64_t sub_1D2F2A7BC(uint64_t *a1)
{
  return sub_1D2F2A7D4(a1, (void (*)(void))type metadata accessor for LastUEIEventTimestampFeature);
}

uint64_t sub_1D2F2A7D4(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A38);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v4 + 16) = v2;
  }
  return v5;
}

uint64_t UEITurnDurationFeature.init(value:)(double a1)
{
  uint64_t result = v1;
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics29FirstUEIEventTimestampFeatureC5valueACSgSdSg_tcfC_0(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A38);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v4 + 16) = a1;
  }
  return v5;
}

uint64_t _s28SiriPrivateLearningAnalytics29FirstUEIEventTimestampFeatureC5valueACSgSdSg_tcfc_0(uint64_t a1, char a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A38);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v2 + 16) = a1;
  }
  return v2;
}

uint64_t UEITurnDurationFeature.deinit()
{
  return v0;
}

uint64_t UEITurnDurationFeature.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F2A944(uint64_t *a1)
{
  return sub_1D2F2A780(a1, (void (*)(void))type metadata accessor for UEITurnDurationFeature);
}

uint64_t sub_1D2F2A95C(uint64_t *a1)
{
  return sub_1D2F2A7D4(a1, (void (*)(void))type metadata accessor for UEITurnDurationFeature);
}

uint64_t UEISaidDialogIdentifier.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t UEISaidDialogIdentifier.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F2A9AC(uint64_t *a1)
{
  return sub_1D2F2AABC(a1, (void (*)(void))type metadata accessor for UEISaidDialogIdentifier);
}

uint64_t sub_1D2F2A9C4(uint64_t *a1)
{
  return sub_1D2F2AB10(a1, (void (*)(void))type metadata accessor for UEISaidDialogIdentifier);
}

uint64_t _s28SiriPrivateLearningAnalytics23UEISaidDialogIdentifierC5valueACSgSaySSGSg_tcfC_0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (a1)
  {
    *(void *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t _s28SiriPrivateLearningAnalytics23UEISaidDialogIdentifierC5valueACSgSaySSGSg_tcfc_0(uint64_t a1)
{
  if (a1)
  {
    *(void *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t sub_1D2F2AAA4(uint64_t *a1)
{
  return sub_1D2F2AABC(a1, (void (*)(void))type metadata accessor for UEIShownDialogIdentifier);
}

uint64_t sub_1D2F2AABC(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  return result;
}

uint64_t sub_1D2F2AAF8(uint64_t *a1)
{
  return sub_1D2F2AB10(a1, (void (*)(void))type metadata accessor for UEIShownDialogIdentifier);
}

uint64_t sub_1D2F2AB10(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  a2(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2)
  {
    *(void *)(v3 + 16) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v4;
}

void *sub_1D2F2AB80(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1D30025A8())
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D942E3A0](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      double v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      getEventTimestampFromContext(from:context:)(v6, a2);
      uint64_t v10 = v9;
      char v12 = v11;

      if ((v12 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1D2F28024(0, v4[2] + 1, 1, v4);
        }
        unint64_t v14 = v4[2];
        unint64_t v13 = v4[3];
        if (v14 >= v13 >> 1) {
          uint64_t v4 = sub_1D2F28024((void *)(v13 > 1), v14 + 1, 1, v4);
        }
        v4[2] = v14 + 1;
        v4[v14 + 4] = v10;
      }
      ++v5;
      if (v8 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1D2F2ACF4(uint64_t a1)
{
  unint64_t v4 = a1;
  *(void *)&long long v98 = MEMORY[0x1E4FBC860];
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      unint64_t v1 = a1;
    }
    else {
      unint64_t v1 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        uint64_t v6 = 0;
        uint64_t v94 = (void *)v4;
        unint64_t v96 = v4 & 0xC000000000000001;
        double v7 = off_1E6970000;
        uint64_t v8 = off_1E6970000;
        unint64_t v9 = 0x1E4FA1000uLL;
        while (1)
        {
          id v10 = v96 ? (id)MEMORY[0x1D942E3A0](v6, v4) : *(id *)(v4 + 8 * v6 + 32);
          char v11 = v10;
          if (objc_msgSend(v10, (SEL)v7[254], v94) != 6) {
            break;
          }
          id v12 = [v11 (SEL)v8[262]];
          if (v12)
          {
            uint64_t v13 = sub_1D3000F68();
            unint64_t v15 = v14;

            id v12 = (id)sub_1D3000F58();
            sub_1D2F0D1CC(v13, v15);
          }
          id v16 = objc_msgSend(objc_allocWithZone(*(Class *)(v9 + 728)), sel_initWithData_, v12);

          *(double *)&uint64_t v3 = COERCE_DOUBLE(objc_msgSend(v16, sel_event));
          if (*(double *)&v3 != 0.0) {
            goto LABEL_16;
          }

LABEL_6:
          if (v5 == ++v6)
          {
            swift_bridgeObjectRelease();
            unint64_t v1 = v98;
            goto LABEL_34;
          }
        }
        *(double *)&uint64_t v3 = COERCE_DOUBLE(v11);
LABEL_16:
        unint64_t v17 = sub_1D2F2B808();
        [v3 (SEL)v7[254]];
        uint64_t v18 = sub_1D30021F8();
        if (v18 && v17 == v18)
        {
          id v19 = [v3 (SEL)v8[262]];
          if (v19)
          {
            BOOL v20 = v19;
            uint64_t v21 = sub_1D3000F68();
            unint64_t v22 = v7;
            unint64_t v24 = v23;

            id v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            id v26 = (void *)sub_1D3000F58();
            uint64_t v27 = v21;
            unint64_t v4 = (unint64_t)v94;
            unint64_t v28 = v24;
            double v7 = v22;
            sub_1D2F0D1CC(v27, v28);
          }
          else
          {
            id v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            id v26 = 0;
          }
          id v29 = objc_msgSend(v25, sel_initWithData_, v26);

          if (v29)
          {
            self;
            uint64_t v30 = swift_dynamicCastObjCClass();

            uint64_t v8 = off_1E6970000;
            unint64_t v9 = 0x1E4FA1000;
            if (v30)
            {
              MEMORY[0x1D942DCC0]();
              uint64_t v3 = *(double **)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if ((unint64_t)v3 >= *(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1D3001E28();
              }
              sub_1D3001E68();
              sub_1D3001DE8();
            }
            else
            {
            }
          }
          else
          {

            uint64_t v8 = off_1E6970000;
            unint64_t v9 = 0x1E4FA1000;
          }
        }
        else
        {
        }
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_91;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v1 = MEMORY[0x1E4FBC860];
LABEL_34:
  unint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_1D2F2A308(v31);
  swift_bridgeObjectRelease();
  if (!v32) {
    goto LABEL_44;
  }
  id v33 = v32;
  uint64_t v34 = sub_1D2F2AB80(v1, v33);

  sub_1D2F2A610((uint64_t)v34, v35);
  uint64_t v3 = v36;
  double v38 = v37;
  char v40 = v39;
  swift_bridgeObjectRelease();
  if (v40)
  {

LABEL_44:
    unint64_t v4 = MEMORY[0x1E4FBC860];
    goto LABEL_45;
  }
  uint64_t UEIEventTimestampFeature = type metadata accessor for FirstUEIEventTimestampFeature(0);
  uint64_t v42 = swift_allocObject();
  *(double *)(v42 + 16) = *(double *)&v3;
  unint64_t v43 = sub_1D2F27F00(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v45 = v43[2];
  unint64_t v44 = v43[3];
  unint64_t v4 = (unint64_t)v43;
  if (v45 >= v44 >> 1) {
    unint64_t v4 = (unint64_t)sub_1D2F27F00((void *)(v44 > 1), v45 + 1, 1, v43);
  }
  double v46 = *(double *)&v3;
  double v47 = v38;
  unint64_t v99 = UEIEventTimestampFeature;
  uint64_t v100 = sub_1D2F2B848(&qword_1EBD61328, (void (*)(uint64_t))type metadata accessor for FirstUEIEventTimestampFeature);
  *(void *)&long long v98 = v42;
  *(void *)(v4 + 16) = v45 + 1;
  sub_1D2F0BE68(&v98, v4 + 40 * v45 + 32);
  uint64_t v48 = type metadata accessor for LastUEIEventTimestampFeature(0);
  uint64_t v49 = swift_allocObject();
  *(double *)(v49 + 16) = v38;
  unint64_t v51 = *(void *)(v4 + 16);
  unint64_t v50 = *(void *)(v4 + 24);
  if (v51 >= v50 >> 1) {
    unint64_t v4 = (unint64_t)sub_1D2F27F00((void *)(v50 > 1), v51 + 1, 1, (void *)v4);
  }
  unint64_t v99 = v48;
  uint64_t v100 = sub_1D2F2B848(&qword_1EBD61310, (void (*)(uint64_t))type metadata accessor for LastUEIEventTimestampFeature);
  *(void *)&long long v98 = v49;
  *(void *)(v4 + 16) = v51 + 1;
  sub_1D2F0BE68(&v98, v4 + 40 * v51 + 32);
  uint64_t v52 = type metadata accessor for UEITurnDurationFeature(0);
  *(double *)&uint64_t v3 = COERCE_DOUBLE(swift_allocObject());
  v3[2] = v47 - v46;
  unint64_t v54 = *(void *)(v4 + 16);
  unint64_t v53 = *(void *)(v4 + 24);
  if (v54 >= v53 >> 1) {
    unint64_t v4 = (unint64_t)sub_1D2F27F00((void *)(v53 > 1), v54 + 1, 1, (void *)v4);
  }
  unint64_t v99 = v52;
  uint64_t v100 = sub_1D2F2B848(&qword_1EBD61280, (void (*)(uint64_t))type metadata accessor for UEITurnDurationFeature);
  *(void *)&long long v98 = v3;
  *(void *)(v4 + 16) = v54 + 1;
  sub_1D2F0BE68(&v98, v4 + 40 * v54 + 32);

LABEL_45:
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D30025A8();
    if (v2) {
      goto LABEL_47;
    }
LABEL_76:
    *(double *)&uint64_t v3 = MEMORY[0x1E4FBC860];
    unint64_t v57 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_77;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_76;
  }
LABEL_47:
  if (v2 < 1)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    unint64_t v4 = (unint64_t)sub_1D2F27F00(0, *(void *)(v4 + 16) + 1, 1, (void *)v4);
LABEL_79:
    unint64_t v88 = *(void *)(v4 + 16);
    unint64_t v87 = *(void *)(v4 + 24);
    if (v88 >= v87 >> 1) {
      unint64_t v4 = (unint64_t)sub_1D2F27F00((void *)(v87 > 1), v88 + 1, 1, (void *)v4);
    }
    unint64_t v99 = v1;
    uint64_t v100 = sub_1D2F2B848(&qword_1EA698A40, (void (*)(uint64_t))type metadata accessor for UEISaidDialogIdentifier);
    *(void *)&long long v98 = v2;
    *(void *)(v4 + 16) = v88 + 1;
    sub_1D2F0BE68(&v98, v4 + 40 * v88 + 32);
    if (*((void *)v3 + 2)) {
      goto LABEL_82;
    }
LABEL_88:
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t v95 = (void *)v4;
  uint64_t v55 = 0;
  unint64_t v56 = v1 & 0xC000000000000001;
  unint64_t v57 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (v56) {
      id v58 = (id)MEMORY[0x1D942E3A0](v55, v1);
    }
    else {
      id v58 = *(id *)(v1 + 8 * v55 + 32);
    }
    id v59 = v58;
    id v60 = objc_msgSend(v58, sel_uufrSaid, v95);
    if (v60
      && (uint64_t v61 = v60,
          id v62 = objc_msgSend(v60, sel_dialogIdentifier),
          v61,
          v62))
    {
      uint64_t v63 = sub_1D3001B78();
      uint64_t v65 = v64;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v57 = sub_1D2F27B88(0, v57[2] + 1, 1, v57);
      }
      unint64_t v67 = v57[2];
      unint64_t v66 = v57[3];
      if (v67 >= v66 >> 1) {
        unint64_t v57 = sub_1D2F27B88((void *)(v66 > 1), v67 + 1, 1, v57);
      }
      v57[2] = v67 + 1;
      id v68 = &v57[2 * v67];
      v68[4] = v63;
      v68[5] = v65;
    }
    else
    {
    }
    ++v55;
  }
  while (v2 != v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v69 = 0;
  *(double *)&unint64_t v97 = MEMORY[0x1E4FBC860];
  uint64_t v70 = off_1E6970000;
  do
  {
    if (v56) {
      id v71 = (id)MEMORY[0x1D942E3A0](v69, v1);
    }
    else {
      id v71 = *(id *)(v1 + 8 * v69 + 32);
    }
    uint64_t v72 = v71;
    id v73 = [v71 (SEL)v70[284]];
    if (v73
      && (uint64_t v74 = v73,
          id v75 = objc_msgSend(v73, sel_dialogIdentifier),
          v74,
          v75))
    {
      uint64_t v76 = v2;
      unint64_t v77 = v56;
      unint64_t v78 = v57;
      unint64_t v79 = v1;
      os_log_type_t v80 = v70;
      uint64_t v81 = sub_1D3001B78();
      uint64_t v83 = v82;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        *(double *)&unint64_t v97 = COERCE_DOUBLE(sub_1D2F27B88(0, *((void *)v97 + 2) + 1, 1, v97));
      }
      unint64_t v85 = *((void *)v97 + 2);
      unint64_t v84 = *((void *)v97 + 3);
      if (v85 >= v84 >> 1) {
        *(double *)&unint64_t v97 = COERCE_DOUBLE(sub_1D2F27B88((void *)(v84 > 1), v85 + 1, 1, v97));
      }
      *((void *)v97 + 2) = v85 + 1;
      uint64_t v86 = &v97[2 * v85];
      *((void *)v86 + 4) = v81;
      *((void *)v86 + 5) = v83;
      uint64_t v70 = v80;
      unint64_t v1 = v79;
      unint64_t v57 = v78;
      unint64_t v56 = v77;
      uint64_t v2 = v76;
    }
    else
    {
    }
    ++v69;
  }
  while (v2 != v69);
  unint64_t v4 = (unint64_t)v95;
  uint64_t v3 = v97;
LABEL_77:
  swift_bridgeObjectRelease_n();
  if (v57[2])
  {
    unint64_t v1 = type metadata accessor for UEISaidDialogIdentifier(0);
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v57;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_79;
    }
    goto LABEL_92;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)v3 + 2)) {
    goto LABEL_88;
  }
LABEL_82:
  uint64_t v89 = type metadata accessor for UEIShownDialogIdentifier(0);
  uint64_t v90 = swift_allocObject();
  *(double *)(v90 + 16) = *(double *)&v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v4 = (unint64_t)sub_1D2F27F00(0, *(void *)(v4 + 16) + 1, 1, (void *)v4);
  }
  unint64_t v92 = *(void *)(v4 + 16);
  unint64_t v91 = *(void *)(v4 + 24);
  if (v92 >= v91 >> 1) {
    unint64_t v4 = (unint64_t)sub_1D2F27F00((void *)(v91 > 1), v92 + 1, 1, (void *)v4);
  }
  unint64_t v99 = v89;
  uint64_t v100 = sub_1D2F2B848(&qword_1EA698A48, (void (*)(uint64_t))type metadata accessor for UEIShownDialogIdentifier);
  *(void *)&long long v98 = v90;
  *(void *)(v4 + 16) = v92 + 1;
  sub_1D2F0BE68(&v98, v4 + 40 * v92 + 32);
  return v4;
}

uint64_t type metadata accessor for UEIFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for UEIFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UEIFeatureExtractor);
}

uint64_t dispatch thunk of UEIFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of UEIFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for FirstUEIEventTimestampFeature(uint64_t a1)
{
  return sub_1D2F25FA4(a1, qword_1EBD61330);
}

uint64_t type metadata accessor for LastUEIEventTimestampFeature(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61318);
}

uint64_t type metadata accessor for UEITurnDurationFeature(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61288);
}

uint64_t type metadata accessor for UEISaidDialogIdentifier(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD612A8);
}

uint64_t type metadata accessor for UEIShownDialogIdentifier(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD612B8);
}

unint64_t sub_1D2F2B808()
{
  unint64_t result = qword_1EA699770;
  if (!qword_1EA699770)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA699770);
  }
  return result;
}

uint64_t sub_1D2F2B848(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of FeatureFlagsResolving.isFeatureEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t static PLUSSchemaConverters.convertToSuggestionSurfaced(state:)(char *a1)
{
  return dword_1D30052FC[*a1];
}

uint64_t static PLUSSchemaConverters.convertToSuggestionNoveltyState(state:)(char *a1)
{
  return dword_1D30052FC[*a1];
}

uint64_t static PLUSSchemaConverters.convertToSuggestionRedundancyState(state:)(unsigned __int8 *a1)
{
  int v1 = *a1;
  if (v1) {
    unsigned int v2 = 2;
  }
  else {
    unsigned int v2 = 1;
  }
  if (v1 == 2) {
    return 0;
  }
  else {
    return v2;
  }
}

ValueMetadata *type metadata accessor for PLUSSchemaConverters()
{
  return &type metadata for PLUSSchemaConverters;
}

ValueMetadata *type metadata accessor for PLUSSchemaConverters.ConversionError()
{
  return &type metadata for PLUSSchemaConverters.ConversionError;
}

uint64_t dispatch thunk of StorePolicy.runPolicy(store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CoreDataRecordEvictor.evictRecord(record:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of CoreDataEvictionPolicy.evictionCandidates(count:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void *initializeBufferWithCopyOfBuffer for StorePolicyError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StorePolicyError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for StorePolicyError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for StorePolicyError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorePolicyError(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorePolicyError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorePolicyError()
{
  return &type metadata for StorePolicyError;
}

uint64_t TrialFactor.__allocating_init(factorName:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t TrialFactor.init(factorName:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t TrialFactor.factorName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrialFactor.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TrialFactor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id static Int.fromLevel(level:)(void *a1)
{
  unsigned int v2 = objc_msgSend(a1, sel_levelOneOfCase);
  if (v2 == 13) {
    return objc_msgSend(a1, sel_longValue);
  }
  if (v2 == 12) {
    return (id)(int)objc_msgSend(a1, sel_intValue);
  }
  return 0;
}

id sub_1D2F2BC48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4 = objc_msgSend(a1, sel_levelOneOfCase);
  if (v4 == 13)
  {
    id result = objc_msgSend(a1, sel_longValue);
    char v5 = 0;
  }
  else if (v4 == 12)
  {
    LODWORD(result) = objc_msgSend(a1, sel_intValue);
    char v5 = 0;
    id result = (id)(int)result;
  }
  else
  {
    id result = 0;
    char v5 = 1;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t static Bool.fromLevel(level:)(void *a1)
{
  if (objc_msgSend(a1, sel_levelOneOfCase) == 10) {
    return (uint64_t)objc_msgSend(a1, sel_BOOLeanValue);
  }
  else {
    return 2;
  }
}

uint64_t sub_1D2F2BD18@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  if (objc_msgSend(a1, sel_levelOneOfCase) == 10) {
    uint64_t result = (uint64_t)objc_msgSend(a1, sel_BOOLeanValue);
  }
  else {
    uint64_t result = 2;
  }
  *a2 = result;
  return result;
}

double static Double.fromLevel(level:)(void *a1)
{
  if (objc_msgSend(a1, sel_levelOneOfCase) == 15) {
    objc_msgSend(a1, sel_doubleValue);
  }
  return result;
}

id sub_1D2F2BDC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result = objc_msgSend(a1, sel_levelOneOfCase);
  int v5 = (int)result;
  uint64_t v6 = 0;
  if (result == 15) {
    id result = objc_msgSend(a1, sel_doubleValue, 0.0);
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v5 != 15;
  return result;
}

uint64_t TrialFlagFactor.init(factorName:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t TrialFlagFactor.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F2BE6C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TrialFactor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TrialFactor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialFactor);
}

uint64_t dispatch thunk of TrialFactor.__allocating_init(factorName:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for TrialFactorScope()
{
  return &type metadata for TrialFactorScope;
}

uint64_t dispatch thunk of static TrialFactorType.fromLevel(level:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for TrialFlagFactor(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD63678);
}

uint64_t type metadata accessor for TrialDoubleFactor(uint64_t a1)
{
  return sub_1D2F25FA4(a1, qword_1EBD5F960);
}

uint64_t sub_1D2F2BF5C()
{
  return swift_initClassMetadata2();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1D2F2BFCC()
{
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  sub_1D3001EF8();
  uint64_t result = sub_1D30022F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1D2F2C0A0(uint64_t a1)
{
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x58);
  uint64_t v3 = *(void **)((char *)v1 + v2);
  *(void *)((char *)v1 + v2) = a1;
  sub_1D2F1CC9C(v3);
}

uint64_t sub_1D2F2C0D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x60);
  swift_beginAccess();
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  sub_1D3001EF8();
  uint64_t v4 = sub_1D30022F8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D2F2C1C8(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x60);
  swift_beginAccess();
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  sub_1D3001EF8();
  uint64_t v4 = sub_1D30022F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

id sub_1D2F2C2C4(void *a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  uint64_t v4 = sub_1D3001EF8();
  uint64_t v5 = sub_1D30022F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void *)(v3 + 88);
  id v10 = *(void **)((char *)v1 + v9);
  *(void *)((char *)v1 + v9) = a1;
  id v11 = a1;
  sub_1D2F1CC9C(v10);
  sub_1D2F2C0D4((uint64_t)v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v8, 1, v4);
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v12 != 1) {
    return objc_msgSend(v11, sel_requestDemand_, BPSDemandMax());
  }
  return result;
}

void sub_1D2F2C47C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1D2F2C2C4(v4);
}

uint64_t sub_1D2F2C4E4(void (*a1)(char *, void, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v4 = sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  uint64_t v5 = sub_1D3001EF8();
  uint64_t v6 = sub_1D30022F8();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v42 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v38 - v10;
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  unint64_t v43 = (char *)&v38 - v13;
  uint64_t v14 = *(void *)(v4 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  char v39 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v38 - v18;
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v22 = (char *)&v38 - v21;
  unint64_t v45 = a1;
  sub_1D2F0BD44((uint64_t)a1, (uint64_t)v48);
  int v23 = swift_dynamicCast();
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if (v23)
  {
    unint64_t v45 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
    v24(v19, 0, 1, v3);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v19, v3);
    sub_1D2F2C0D4((uint64_t)v11);
    uint64_t v25 = v44;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v11, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
    }
    else
    {
      id v33 = v43;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v43, v11, v5);
      uint64_t v34 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v42, 1, 1, v5);
      sub_1D2F2C1C8(v34);
      double v35 = v39;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v39, v22, v3);
      v45(v35, 0, 1, v3);
      sub_1D3001EE8();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v5);
    }
    uint64_t v36 = *MEMORY[0x1E4F501C0];
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v3);
  }
  else
  {
    v24(v19, 1, 1, v3);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v4);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1D3001918();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EBD65778);
    sub_1D2F0BD44((uint64_t)v45, (uint64_t)v48);
    uint64_t v27 = sub_1D30018F8();
    os_log_type_t v28 = sub_1D30020A8();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v47 = v30;
      *(_DWORD *)id v29 = 136315138;
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      uint64_t DynamicType = swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699780);
      uint64_t v31 = sub_1D3001BC8();
      uint64_t DynamicType = sub_1D2F09508(v31, v32, &v47);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
      _os_log_impl(&dword_1D2F05000, v27, v28, "AsyncAwaitAdapter ignored unexpected input type %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v30, -1, -1);
      MEMORY[0x1D942F2D0](v29, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    }

    return BPSDemandMax();
  }
  return v36;
}

uint64_t sub_1D2F2CB0C(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1D3002398();
  swift_unknownObjectRelease();
  uint64_t v3 = sub_1D2F2C4E4((void (*)(char *, void, uint64_t, uint64_t))v5);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  return v3;
}

void sub_1D2F2CB78(void *a1)
{
  uint64_t v44 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v3 = sub_1D30022F8();
  MEMORY[0x1F4188790](v3);
  unint64_t v43 = (char *)&v42 - v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  uint64_t v5 = sub_1D3001EF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v45 = (char *)&v42 - v7;
  uint64_t v9 = v8;
  uint64_t v46 = sub_1D30022F8();
  uint64_t v10 = *(void *)(v46 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v46);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  id v19 = (char *)&v42 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v42 - v20;
  unint64_t v22 = a1;
  id v23 = objc_msgSend(a1, sel_state);
  if (v23 != (id)1)
  {
    if (!v23)
    {
      unint64_t v24 = v1;
      sub_1D2F2C0D4((uint64_t)v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v9))
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v46);
        uint64_t v25 = v1;
      }
      else
      {
        uint64_t v31 = v45;
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v45, v21, v9);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v46);
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1);
        sub_1D3001EE8();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v9);
        uint64_t v25 = v24;
      }
      goto LABEL_17;
    }
    id v29 = v1;
    sub_1D2F2C0D4((uint64_t)v13);
    uint64_t v30 = v9;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v9))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v46);
    }
    else
    {
      id v33 = v45;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v45, v13, v30);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v46);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_1D3002438();
      swift_bridgeObjectRelease();
      unint64_t v48 = 0xD00000000000001DLL;
      unint64_t v49 = 0x80000001D300EC10;
      id v47 = objc_msgSend(v22, sel_state);
      type metadata accessor for BPSCompletionState(0);
      sub_1D3001BC8();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      unint64_t v34 = v48;
      unint64_t v35 = v49;
      sub_1D2F2DD2C();
      uint64_t v36 = swift_allocError();
      *double v37 = v34;
      v37[1] = v35;
      unint64_t v48 = v36;
      sub_1D3001ED8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v33, v30);
    }
LABEL_16:
    uint64_t v25 = v29;
    goto LABEL_17;
  }
  id v26 = objc_msgSend(a1, sel_error);
  uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v26)
  {
    os_log_type_t v28 = v26;
    id v29 = v1;
    sub_1D2F2C0D4((uint64_t)v19);
    if ((*v27)(v19, 1, v9))
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v46);
    }
    else
    {
      uint64_t v38 = v45;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v45, v19, v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v46);
      unint64_t v48 = (unint64_t)v28;
      sub_1D3001ED8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v38, v9);
    }
    goto LABEL_16;
  }
  unint64_t v32 = v1;
  sub_1D2F2C0D4((uint64_t)v16);
  if ((*v27)(v16, 1, v9))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v46);
    uint64_t v25 = v1;
  }
  else
  {
    char v39 = v45;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v45, v16, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v46);
    sub_1D2F2DD2C();
    uint64_t v40 = swift_allocError();
    *uint64_t v41 = 0xD00000000000003BLL;
    v41[1] = 0x80000001D300EC30;
    unint64_t v48 = v40;
    sub_1D3001ED8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v39, v9);
    uint64_t v25 = v32;
  }
LABEL_17:
  sub_1D2F2D1B8(v25);
}

void sub_1D2F2D1B8(void *a1)
{
  id v2 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  uint64_t v3 = sub_1D3001EF8();
  uint64_t v4 = sub_1D30022F8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))((char *)&v9 - v5, 1, 1, v3);
  sub_1D2F2C1C8((uint64_t)v6);
  uint64_t v7 = *(void *)((*v2 & *a1) + 0x58);
  uint64_t v8 = *(void **)((char *)a1 + v7);
  *(void *)((char *)a1 + v7) = 1;
  sub_1D2F1CC9C(v8);
}

void sub_1D2F2D2F4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1D2F2CB78(v4);
}

uint64_t sub_1D2F2D35C()
{
  unint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *v0;
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  uint64_t v3 = sub_1D3001EF8();
  uint64_t v4 = sub_1D30022F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v22 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v22 - v12;
  uint64_t v14 = *(void *)(v2 + 88);
  uint64_t v15 = *(void **)((char *)v0 + v14);
  if ((unint64_t)v15 >= 2)
  {
    sub_1D2F2DD1C(*(id *)((char *)v0 + v14));
    uint64_t v2 = *v1 & *v0;
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v16 = *(void *)(v2 + 88);
  uint64_t v17 = *(void **)((char *)v0 + v16);
  *(void *)((char *)v0 + v16) = 1;
  sub_1D2F1CC9C(v17);
  objc_msgSend(v15, sel_cancel);
  sub_1D2F2C0D4((uint64_t)v13);
  uint64_t v18 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v3);
  sub_1D2F2C1C8((uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v13, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v3) == 1)
  {
    id v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v13, v4);

    return ((uint64_t (*)(char *, uint64_t))v19)(v8, v4);
  }
  else
  {
    sub_1D3001F08();
    sub_1D2F1CC44();
    uint64_t v21 = swift_allocError();
    sub_1D3001A68();
    v22[1] = v21;
    sub_1D3001ED8();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v3);
  }
}

void sub_1D2F2D67C(void *a1)
{
  id v1 = a1;
  sub_1D2F2D35C();
}

void sub_1D2F2D6C4(uint64_t a1)
{
  uint64_t v18 = a1;
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v3 = sub_1D30022F8();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v17 - v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  uint64_t v6 = sub_1D3001EF8();
  uint64_t v7 = sub_1D30022F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v17 - v12;
  sub_1D2F2C0D4((uint64_t)&v17 - v12);
  uint64_t v14 = *(void *)(v6 - 8);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  if (v15 == 1)
  {
    uint64_t v16 = *(void **)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x58));
    if (v16)
    {
      if (v16 == (void *)1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v5, 1, 1, v2);
        sub_1D3001EE8();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, v18, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v6);
        sub_1D2F2DD1C(v16);
        sub_1D2F2C1C8((uint64_t)v11);
        objc_msgSend(v16, sel_requestDemand_, BPSDemandMax());
        sub_1D2F1CC9C(v16);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, v18, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v6);
      sub_1D2F2C1C8((uint64_t)v11);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1D2F2D9FC()
{
  sub_1D2F2D35C();
  v2.receiver = v0;
  v2.super_class = (Class)_s17AsyncAwaitAdapterCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D2F2DA68(void *a1)
{
  id v1 = a1;
  return sub_1D2F2D9FC();
}

uint64_t sub_1D2F2DA90(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1D2F1CC9C(*(id *)((char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x58)));
  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x60);
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  sub_1D3001EF8();
  uint64_t v4 = sub_1D30022F8();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(v3, v4);
}

id sub_1D2F2DB94()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id sub_1D2F2DBC8()
{
  id v1 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58)) = 0;
  objc_super v2 = (char *)v0 + *(void *)((*v1 & *v0) + 0x60);
  sub_1D30022F8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD633D0);
  uint64_t v3 = sub_1D3001EF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5.receiver = v0;
  v5.super_class = (Class)_s17AsyncAwaitAdapterCMa();
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1D2F2DCE0()
{
  return sub_1D2F2DBC8();
}

uint64_t _s17AsyncAwaitAdapterCMa()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1D2F2DD1C(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

unint64_t sub_1D2F2DD2C()
{
  unint64_t result = qword_1EA698AB0;
  if (!qword_1EA698AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698AB0);
  }
  return result;
}

SiriPrivateLearningAnalytics::UniversalSuggestionsCoreDataStorePolicies __swiftcall UniversalSuggestionsCoreDataStorePolicies.init()()
{
  void *v0 = 100;
  return result;
}

void UniversalSuggestionsCoreDataStorePolicies.runPolicy(store:)(uint64_t a1)
{
  id v1 = *(id *)(a1 + 24);
  sub_1D3002228();
}

uint64_t sub_1D2F2DE04(uint64_t a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAD8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D3004370;
  type metadata accessor for UniversalSuggestionEvictor();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1D2F2E208;
  *(void *)(v7 + 24) = 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA18);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = v7;
  v11[4] = KeyPath;
  v11[5] = v9;
  *(void *)(inited + 56) = v10;
  *(void *)(inited + 64) = &protocol witness table for MaximumRecordCountPolicy<A, B, C, D>;
  *(void *)(inited + 32) = v11;
  id v12 = a2;
  swift_retain();
  uint64_t v13 = sub_1D2F2E27C(inited, v12, a3);

  swift_release();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5E7F8);
  swift_arrayDestroy();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    int v15 = (unsigned char *)(v13 + 40);
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if (*v15 == 1)
      {
        uint64_t v17 = (void *)*((void *)v15 - 1);
        id v18 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1D2F28504(0, v16[2] + 1, 1, v16);
        }
        unint64_t v20 = v16[2];
        unint64_t v19 = v16[3];
        if (v20 >= v19 >> 1) {
          uint64_t v16 = sub_1D2F28504((void *)(v19 > 1), v20 + 1, 1, v16);
        }
        v16[2] = v20 + 1;
        v16[v20 + 4] = v17;
      }
      v15 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  if (!v16[2]) {
    return swift_bridgeObjectRelease();
  }
  sub_1D2F2E454();
  swift_allocError();
  void *v21 = v16;
  return swift_willThrow();
}

uint64_t sub_1D2F2E070()
{
  return sub_1D2F2DE04(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1D2F2E090(uint64_t a1)
{
  id v1 = *(id *)(*(void *)a1 + 24);
  sub_1D3002228();
}

ValueMetadata *type metadata accessor for UniversalSuggestionsCoreDataStorePolicies()
{
  return &type metadata for UniversalSuggestionsCoreDataStorePolicies;
}

uint64_t sub_1D2F2E11C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UniversalSuggestionEvictor()
{
  uint64_t result = qword_1EBD5EA20;
  if (!qword_1EBD5EA20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2F2E1A0()
{
  return swift_initClassMetadata2();
}

void sub_1D2F2E1D8()
{
}

uint64_t sub_1D2F2E208()
{
  return swift_getKeyPath();
}

char *keypath_get_selector_lastUpdated()
{
  return sel_lastUpdated;
}

char *keypath_get_selector_candidates()
{
  return sel_candidates;
}

char *keypath_get_selector_count()
{
  return sel_count;
}

id sub_1D2F2E248@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_count);
  *a2 = result;
  return result;
}

uint64_t sub_1D2F2E27C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1D2F09FAC(0, v5, 0);
    uint64_t v6 = v23;
    for (uint64_t i = (void *)(a1 + 32); ; i += 5)
    {
      uint64_t v10 = i[3];
      uint64_t v9 = i[4];
      __swift_project_boxed_opaque_existential_1(i, v10);
      id v22 = a2;
      (*(void (**)(id *, uint64_t))(*(void *)(v9 + 8) + 16))(&v22, v10);
      if (v4) {
        break;
      }
      uint64_t v11 = *(void **)(a3 + 24);
      id v22 = 0;
      if ((objc_msgSend(v11, sel_save_, &v22) & 1) == 0)
      {
        id v14 = v22;
        uint64_t v10 = sub_1D3000DF8();

        swift_willThrow();
        goto LABEL_8;
      }
      id v12 = v22;
      char v13 = 0;
LABEL_9:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D2F09FAC(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v23;
      }
      unint64_t v17 = *(void *)(v6 + 16);
      unint64_t v16 = *(void *)(v6 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D2F09FAC(v16 > 1, v17 + 1, 1);
        uint64_t v6 = v23;
      }
      *(void *)(v6 + 16) = v17 + 1;
      uint64_t v18 = v6 + 16 * v17;
      *(void *)(v18 + 32) = v10;
      *(unsigned char *)(v18 + 40) = v13;
      if (!--v5) {
        return v6;
      }
    }
    uint64_t v10 = v4;
LABEL_8:
    uint64_t v4 = 0;
    char v13 = 1;
    goto LABEL_9;
  }
  return v6;
}

unint64_t sub_1D2F2E454()
{
  unint64_t result = qword_1EA698AB8;
  if (!qword_1EA698AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698AB8);
  }
  return result;
}

char *keypath_get_selector_candidateForUniversalSuggestion()
{
  return sel_candidateForUniversalSuggestion;
}

uint64_t sub_1D2F2E4BC()
{
  return sub_1D2F2E070();
}

uint64_t UniversalSuggestion.queryEntityName.getter()
{
  return sub_1D2F2E568(type metadata accessor for UniversalSuggestion);
}

uint64_t type metadata accessor for UniversalSuggestion(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD5E800);
}

uint64_t UniversalSuggestion.candidates.getter()
{
  type metadata accessor for UniversalSuggestion(0);
  return swift_bridgeObjectRetain();
}

uint64_t UniversalRuntimeSuggestion.queryEntityName.getter()
{
  return sub_1D2F2E568(type metadata accessor for UniversalRuntimeSuggestion);
}

uint64_t sub_1D2F2E568(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t UniversalRuntimeSuggestion.topCandidate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F2EA4C(type metadata accessor for UniversalRuntimeSuggestion, sub_1D2F2ED98, a1);
}

uint64_t UniversalRuntimeSuggestion.needsDisambiguation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UniversalRuntimeSuggestion(0) + 28));
}

double static UniversalCandidate.startingScore.getter()
{
  return 0.2;
}

uint64_t UniversalCandidate.candidateEntity.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for UniversalCandidate(0) + 20));
  return swift_retain();
}

double UniversalCandidate.score.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for UniversalCandidate(0) + 24));
}

uint64_t UniversalCandidate.score.setter(double a1)
{
  uint64_t result = type metadata accessor for UniversalCandidate(0);
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*UniversalCandidate.score.modify())(void)
{
  return nullsub_1;
}

double UniversalCandidate.lastSurfaced.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for UniversalCandidate(0) + 28));
}

uint64_t UniversalCandidate.lastSurfaced.setter(double a1)
{
  uint64_t result = type metadata accessor for UniversalCandidate(0);
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*UniversalCandidate.lastSurfaced.modify())(void)
{
  return nullsub_1;
}

int *UniversalCandidate.init(id:node:score:lastSurfaced:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v11 = *a2;
  uint64_t v12 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a5, a1, v12);
  uint64_t result = (int *)type metadata accessor for UniversalCandidate(0);
  *(void *)(a5 + result[5]) = v11;
  *(double *)(a5 + result[6]) = a6;
  double v14 = a3;
  if (a4) {
    double v14 = 0.0;
  }
  *(double *)(a5 + result[7]) = v14;
  return result;
}

uint64_t static UniversalCandidate.== infix(_:_:)()
{
  return _s28SiriPrivateLearningAnalytics15UniversalEntityO2eeoiySbAC_ACtFZ_0() & 1;
}

BOOL static UniversalCandidate.> infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UniversalCandidate(0);
  return *(double *)(a2 + *(int *)(v4 + 24)) < *(double *)(a1 + *(int *)(v4 + 24));
}

uint64_t sub_1D2F2E8D8()
{
  return _s28SiriPrivateLearningAnalytics15UniversalEntityO2eeoiySbAC_ACtFZ_0() & 1;
}

uint64_t UniversalSuggestionCandidate.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
  uint64_t v4 = sub_1D30010A8();
  int64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

double UniversalSuggestionCandidate.score.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
  return *(double *)(v1 + *(int *)(type metadata accessor for UniversalCandidate(0) + 24));
}

BOOL UniversalSuggestionCandidate.surfacedBefore.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
  return *(double *)(v1 + *(int *)(type metadata accessor for UniversalCandidate(0) + 28)) > 0.0;
}

uint64_t UniversalSuggestionCandidate.needsDisambiguation.getter()
{
  return *v0;
}

uint64_t UniversalSuggestionCandidate.leftHandKey.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t UniversalSuggestionCandidate.rightHandValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F2EA4C(type metadata accessor for UniversalSuggestionCandidate, sub_1D2F2EE40, a1);
}

uint64_t sub_1D2F2EA4C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *(int *)(a1(0) + 24);
  return a2(v5, a3);
}

uint64_t UniversalSuggestionCandidate.init(leftHandKey:rightHandValue:needsDisambiguation:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + 8) = *a1;
  uint64_t v7 = type metadata accessor for UniversalSuggestionCandidate(0);
  uint64_t result = sub_1D2F2EEA4(a2, a4 + *(int *)(v7 + 24));
  *(unsigned char *)a4 = a3;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics19UniversalSuggestionV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D30010A8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t UniversalSuggestionSurfaced.init(suggestionId:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for UniversalSuggestionSurfaced(0);
  uint64_t v10 = a4 + *(int *)(result + 20);
  *(void *)uint64_t v10 = a2;
  *(unsigned char *)(v10 + 8) = a3 & 1;
  return result;
}

uint64_t static UniversalSuggestionSurfaced.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1D3001058() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for UniversalSuggestionSurfaced(0) + 20);
  uint64_t v5 = (double *)(a1 + v4);
  char v6 = *(unsigned char *)(a1 + v4 + 8);
  uint64_t v7 = (double *)(a2 + v4);
  char v8 = *(unsigned char *)(a2 + v4 + 8);
  if (v6)
  {
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*v5 != *v7) {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1D2F2EC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_1D3001058())
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (double *)(a1 + v6);
    char v8 = *(unsigned char *)(a1 + v6 + 8);
    uint64_t v9 = (double *)(a2 + v6);
    int v10 = *(unsigned __int8 *)(a2 + v6 + 8);
    if (v8)
    {
      if (v10) {
        return 1;
      }
    }
    else
    {
      if (*v7 != *v9) {
        LOBYTE(v10) = 1;
      }
      if ((v10 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t _s28SiriPrivateLearningAnalytics19UniversalSuggestionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1D3001058() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for UniversalSuggestion(0);
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  char v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_1D3002778() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(v4 + 24);
  uint64_t v11 = *(void *)(a1 + v10);
  uint64_t v12 = *(void *)(a2 + v10);
  return sub_1D2F349D0(v11, v12);
}

uint64_t type metadata accessor for UniversalRuntimeSuggestion(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698AC8);
}

uint64_t sub_1D2F2ED98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UniversalCandidate(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD5E7E8);
}

uint64_t type metadata accessor for UniversalSuggestionCandidate(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD5EA40);
}

uint64_t sub_1D2F2EE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UniversalCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F2EEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UniversalCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UniversalSuggestionSurfaced(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD5EA30);
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D30010A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UniversalSuggestion(uint64_t a1)
{
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F2F31C);
}

uint64_t sub_1D2F2F31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F2F3F4);
}

uint64_t sub_1D2F2F3F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D30010A8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D2F2F4B4()
{
  uint64_t result = sub_1D30010A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for UniversalRuntimeSuggestion(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D30010A8();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v21(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = &a1[v8];
    uint64_t v11 = &a2[v8];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)unint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    __dst = &a1[v9];
    uint64_t v13 = &a2[v9];
    double v14 = (int *)type metadata accessor for UniversalCandidate(0);
    uint64_t v15 = *((void *)v14 - 1);
    unint64_t v16 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
      memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v21(__dst, v13, v7);
      *(void *)&__dst[v14[5]] = *(void *)&v13[v14[5]];
      *(void *)&__dst[v14[6]] = *(void *)&v13[v14[6]];
      *(void *)&__dst[v14[7]] = *(void *)&v13[v14[7]];
      unint64_t v19 = *(void (**)(char *, void, uint64_t, int *))(v15 + 56);
      swift_retain();
      v19(__dst, 0, 1, v14);
    }
    a1[a3[7]] = a2[a3[7]];
  }
  return a1;
}

uint64_t destroy for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for UniversalCandidate(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    v5(v6, v4);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v20(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (char *)(a1 + v8);
  uint64_t v13 = (char *)(a2 + v8);
  double v14 = (int *)type metadata accessor for UniversalCandidate(0);
  uint64_t v15 = *((void *)v14 - 1);
  unint64_t v16 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v20((uint64_t)v12, (uint64_t)v13, v6);
    *(void *)&v12[v14[5]] = *(void *)&v13[v14[5]];
    *(void *)&v12[v14[6]] = *(void *)&v13[v14[6]];
    *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
    uint64_t v18 = *(void (**)(char *, void, uint64_t, int *))(v15 + 56);
    swift_retain();
    v18(v12, 0, 1, v14);
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v21 = *(void *)(v6 - 8);
  id v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 24);
  v22(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a2;
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for UniversalCandidate(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v22((uint64_t)v11, (uint64_t)v12, v6);
      *(void *)&v11[v13[5]] = *(void *)&v12[v13[5]];
      swift_retain();
      swift_release();
      *(void *)&v11[v13[6]] = *(void *)&v12[v13[6]];
      *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
      goto LABEL_7;
    }
    sub_1D2F2FCBC((uint64_t)v11);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v11, v12, v6);
  *(void *)&v11[v13[5]] = *(void *)&v12[v13[5]];
  *(void *)&v11[v13[6]] = *(void *)&v12[v13[6]];
  *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
  uint64_t v18 = *(void (**)(char *, void, uint64_t, int *))(v14 + 56);
  swift_retain();
  v18(v11, 0, 1, v13);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(v23 + a3[7]);
  return a1;
}

uint64_t sub_1D2F2FCBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UniversalCandidate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for UniversalCandidate(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(void *)&v9[v11[5]] = *(void *)&v10[v11[5]];
    *(void *)&v9[v11[6]] = *(void *)&v10[v11[6]];
    *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  v23(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v24 = a2;
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for UniversalCandidate(0);
  uint64_t v16 = *((void *)v15 - 1);
  int v17 = *(uint64_t (**)(char *, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      v23((uint64_t)v13, (uint64_t)v14, v6);
      *(void *)&v13[v15[5]] = *(void *)&v14[v15[5]];
      swift_release();
      *(void *)&v13[v15[6]] = *(void *)&v14[v15[6]];
      *(void *)&v13[v15[7]] = *(void *)&v14[v15[7]];
      goto LABEL_7;
    }
    sub_1D2F2FCBC((uint64_t)v13);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v13, v14, v6);
  *(void *)&v13[v15[5]] = *(void *)&v14[v15[5]];
  *(void *)&v13[v15[6]] = *(void *)&v14[v15[6]];
  *(void *)&v13[v15[7]] = *(void *)&v14[v15[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(v24 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F3012C);
}

uint64_t sub_1D2F3012C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for UniversalRuntimeSuggestion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F30274);
}

uint64_t sub_1D2F30274(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D30010A8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1D2F303A8()
{
  sub_1D30010A8();
  if (v0 <= 0x3F)
  {
    sub_1D2F30480();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1D2F30480()
{
  if (!qword_1EA698AD8)
  {
    type metadata accessor for UniversalCandidate(255);
    unint64_t v0 = sub_1D30022F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA698AD8);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalCandidate(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1D30010A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for UniversalCandidate(uint64_t a1)
{
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for UniversalCandidate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v7 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F308A0);
}

uint64_t sub_1D2F308A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UniversalCandidate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F30974);
}

uint64_t sub_1D2F30974(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D30010A8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D2F30A30()
{
  uint64_t result = sub_1D30010A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionCandidate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1D30010A8();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_retain();
    v9(v6, v7, v8);
    unint64_t v10 = (int *)type metadata accessor for UniversalCandidate(0);
    *(void *)&v6[v10[5]] = *(void *)&v7[v10[5]];
    *(void *)&v6[v10[6]] = *(void *)&v7[v10[6]];
    *(void *)&v6[v10[7]] = *(void *)&v7[v10[7]];
  }
  swift_retain();
  return v3;
}

uint64_t destroy for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for UniversalCandidate(0);
  return swift_release();
}

uint64_t initializeWithCopy for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  uint64_t v9 = (int *)type metadata accessor for UniversalCandidate(0);
  *(void *)(v5 + v9[5]) = *(void *)(v6 + v9[5]);
  *(void *)(v5 + v9[6]) = *(void *)(v6 + v9[6]);
  *(void *)(v5 + v9[7]) = *(void *)(v6 + v9[7]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  unint64_t v10 = (int *)type metadata accessor for UniversalCandidate(0);
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  swift_retain();
  swift_release();
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  return a1;
}

uint64_t initializeWithTake for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for UniversalCandidate(0);
  *(void *)(v5 + v8[5]) = *(void *)(v6 + v8[5]);
  *(void *)(v5 + v8[6]) = *(void *)(v6 + v8[6]);
  *(void *)(v5 + v8[7]) = *(void *)(v6 + v8[7]);
  return a1;
}

uint64_t assignWithTake for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  unint64_t v10 = (int *)type metadata accessor for UniversalCandidate(0);
  *(void *)(v7 + v10[5]) = *(void *)(v8 + v10[5]);
  swift_release();
  *(void *)(v7 + v10[6]) = *(void *)(v8 + v10[6]);
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F30FCC);
}

uint64_t sub_1D2F30FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UniversalCandidate(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionCandidate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F31090);
}

uint64_t sub_1D2F31090(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UniversalCandidate(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1D2F31138()
{
  uint64_t result = type metadata accessor for UniversalCandidate(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionSurfaced(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D30010A8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t destroy for UniversalSuggestionSurfaced(uint64_t a1)
{
  uint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t assignWithCopy for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  return a1;
}

uint64_t initializeWithTake for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F31560);
}

uint64_t sub_1D2F31560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionSurfaced(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F315E0);
}

uint64_t sub_1D2F315E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1D2F31650()
{
  uint64_t result = sub_1D30010A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t SELFFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
  return (*(uint64_t (**)(uint64_t *))(*(void *)(a3 + 8) + 16))(&v4);
}

uint64_t IntentFeatureExtractor.intentTypes.getter()
{
  sub_1D2F31A38();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D3004370;
  *(void *)(v0 + 32) = swift_getAssociatedTypeWitness();
  return v0;
}

uint64_t IntentFeatureExtractor.extract(from:)(id *a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(*a1, sel_intent);
  swift_getAssociatedTypeWitness();
  uint64_t v6 = swift_dynamicCastUnknownClass();
  if (v6) {
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v6, a2, a3);
  }
  else {
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }

  return v7;
}

uint64_t BiomeEventFeatureExtractorBase.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BiomeEventFeatureExtractorBase.init()()
{
  return v0;
}

uint64_t BiomeEventFeatureExtractorBase.extract(from:)(void *a1)
{
  if (objc_msgSend(a1, sel_error) != 1) {
    return MEMORY[0x1E4FBC860];
  }
  if (!objc_msgSend(a1, sel_eventBody)) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA698B40);
  if ((swift_dynamicCast() & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = (*(uint64_t (**)())(*(void *)v1 + 96))();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t BiomeEventFeatureExtractorBase.eventType.getter()
{
  return nullsub_1(*(void *)(*(void *)v0 + 80));
}

uint64_t sub_1D2F31988()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t BiomeEventFeatureExtractorBase.deinit()
{
  return v0;
}

uint64_t BiomeEventFeatureExtractorBase.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F319AC(uint64_t a1)
{
  return nullsub_1(*(void *)(a1 + 80));
}

uint64_t sub_1D2F319B4(void **a1)
{
  return BiomeEventFeatureExtractorBase.extract(from:)(*a1);
}

uint64_t sub_1D2F319DC()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = UniversalSuggestionSummaryExtractor.extract(from:)(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D2F31A38()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61480);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_1EBD633B0;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_1EBD61538;
  }
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t dispatch thunk of FeatureExtracting.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SELFFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AppInteractionFeatureExtractor.intentTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AppInteractionFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of IntentFeatureExtractor.extract(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BiomeEventFeatureExtractor.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D2F31B24()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BiomeEventFeatureExtractorBase()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BiomeEventFeatureExtractorBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BiomeEventFeatureExtractorBase);
}

uint64_t dispatch thunk of BiomeEventFeatureExtractorBase.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BiomeEventFeatureExtractorBase.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

id GroundTruthRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id GroundTruthRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for GroundTruthRecord();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for GroundTruthRecord()
{
  return self;
}

uint64_t sub_1D2F31CFC(uint64_t a1)
{
  unint64_t v2 = sub_1D2F31EB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F31D38(uint64_t a1)
{
  unint64_t v2 = sub_1D2F31EB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

id GroundTruthRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2F31DA8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698BD0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F31EB8();
  sub_1D30029B8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1D2F31EB8()
{
  unint64_t result = qword_1EA698BD8;
  if (!qword_1EA698BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698BD8);
  }
  return result;
}

uint64_t method lookup function for GroundTruthRecord(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GroundTruthRecord);
}

uint64_t dispatch thunk of GroundTruthRecord.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

ValueMetadata *type metadata accessor for GroundTruthRecord.CodingKeys()
{
  return &type metadata for GroundTruthRecord.CodingKeys;
}

unint64_t sub_1D2F31F80()
{
  unint64_t result = qword_1EA698BE0;
  if (!qword_1EA698BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698BE0);
  }
  return result;
}

unint64_t sub_1D2F31FD8()
{
  unint64_t result = qword_1EA698BE8;
  if (!qword_1EA698BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698BE8);
  }
  return result;
}

uint64_t PLUSSchemaEventConstructor.__allocating_init(plusId:suggestionGenerationDomain:)(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(_DWORD *)(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = a2;
  return v4;
}

uint64_t PLUSSchemaEventConstructor.init(plusId:suggestionGenerationDomain:)(uint64_t a1, int a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  uint64_t v6 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(_DWORD *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = a2;
  return v2;
}

void *sub_1D2F32148(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1D2F33140();
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FB0]), sel_init);
      if (v9)
      {
        char v10 = v9;
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v8);
        objc_msgSend(v10, sel_setGeneratedSuggestion_, a1);
        objc_msgSend(v10, sel_setSuggestionChangeDataCaptureMetadata_, a2);
        objc_msgSend(v6, sel_setSuggestionGenerated_, v10);

        return v6;
      }

      uint64_t v6 = v8;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D3001918();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBD65778);
  uint64_t v12 = sub_1D30018F8();
  os_log_type_t v13 = sub_1D30020B8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v17 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    sub_1D2F09508(0xD00000000000003ALL, 0x80000001D300ED60, &v17);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v12, v13, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v15, -1, -1);
    MEMORY[0x1D942F2D0](v14, -1, -1);
  }

  return 0;
}

void *sub_1D2F32374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = sub_1D2F33140();
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v9)
    {
      char v10 = v9;
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FC8]), sel_init);
      if (v11)
      {
        uint64_t v12 = v11;
        objc_msgSend(v11, sel_setSuggestionDomainMetadata_, v10);
        id v13 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        uint64_t v14 = (void *)sub_1D3001048();
        id v15 = objc_msgSend(v13, sel_initWithNSUUID_, v14);

        objc_msgSend(v12, sel_setSuggestionLinkId_, v15);
        id v16 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        uint64_t v17 = (void *)sub_1D3001048();
        id v18 = objc_msgSend(v16, sel_initWithNSUUID_, v17);

        objc_msgSend(v12, sel_setOriginalRequestId_, v18);
        objc_msgSend(v12, sel_setSuggestionOutcome_, a3);
        objc_msgSend(v12, sel_setDomainOutcome_, a4);
        objc_msgSend(v8, sel_setSuggestionOutcomeReported_, v12);

        return v8;
      }

      uint64_t v8 = v10;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D3001918();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBD65778);
  uint64_t v20 = sub_1D30018F8();
  os_log_type_t v21 = sub_1D30020B8();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v25 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    sub_1D2F09508(0xD00000000000005ELL, 0x80000001D300EDA0, &v25);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v20, v21, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v23, -1, -1);
    MEMORY[0x1D942F2D0](v22, -1, -1);
  }

  return 0;
}

void *sub_1D2F32654(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_1D2F33140();
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F88]), sel_init);
      if (v9)
      {
        char v10 = v9;
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v8);
        id v11 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        uint64_t v12 = (void *)sub_1D3001048();
        id v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

        objc_msgSend(v10, sel_setOriginalRequestId_, v13);
        sub_1D2F33474();
        uint64_t v14 = (void *)sub_1D3001DA8();
        objc_msgSend(v10, sel_setMatchedResults_, v14);

        objc_msgSend(v10, sel_setMatchedResultsPopulated_, a3 & 1);
        objc_msgSend(v6, sel_setPlusSuggesterQueried_, v10);

        return v6;
      }

      uint64_t v6 = v8;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D3001918();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBD65778);
  id v16 = sub_1D30018F8();
  os_log_type_t v17 = sub_1D30020B8();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)id v18 = 136315138;
    sub_1D2F09508(0xD00000000000004BLL, 0x80000001D300EE00, &v21);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v16, v17, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v19, -1, -1);
    MEMORY[0x1D942F2D0](v18, -1, -1);
  }

  return 0;
}

void *sub_1D2F328F8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1D2F33140();
  if (v6)
  {
    id v7 = v6;
    id v8 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v8)
    {
      id v9 = v8;
      id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F80]), sel_init);
      if (v10)
      {
        id v11 = v10;
        objc_msgSend(v10, sel_setSuggestionDomainMetadata_, v9);
        id v12 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        id v13 = (void *)sub_1D3001048();
        id v14 = objc_msgSend(v12, sel_initWithNSUUID_, v13);

        objc_msgSend(v11, sel_setOriginalRequestId_, v14);
        objc_msgSend(v11, sel_setIsSuggesterEnabled_, a2 & 1);
        objc_msgSend(v11, sel_setDomainConfiguredState_, a3);
        objc_msgSend(v7, sel_setPlusSuggesterMetadataReported_, v11);

        return v7;
      }

      id v7 = v9;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D3001918();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBD65778);
  id v16 = sub_1D30018F8();
  os_log_type_t v17 = sub_1D30020B8();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)id v18 = 136315138;
    sub_1D2F09508(0xD000000000000056, 0x80000001D300EE50, &v21);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v16, v17, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v19, -1, -1);
    MEMORY[0x1D942F2D0](v18, -1, -1);
  }

  return 0;
}

void *sub_1D2F32B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = sub_1D2F33140();
  if (v9)
  {
    id v10 = v9;
    id v11 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v11)
    {
      id v12 = v11;
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F90]), sel_init);
      if (v13)
      {
        id v14 = v13;
        objc_msgSend(v13, sel_setSuggestionDomainMetadata_, v12);
        id v15 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        id v16 = (void *)sub_1D3001048();
        id v17 = objc_msgSend(v15, sel_initWithNSUUID_, v16);

        objc_msgSend(v14, sel_setOriginalRequestId_, v17);
        id v18 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        uint64_t v19 = (void *)sub_1D3001048();
        id v20 = objc_msgSend(v18, sel_initWithNSUUID_, v19);

        objc_msgSend(v14, sel_setSuggestionLinkId_, v20);
        objc_msgSend(v14, sel_setSuggestionSurfaced_, a3);
        objc_msgSend(v14, sel_setSuggestionNoveltyState_, a4);
        objc_msgSend(v14, sel_setDomainSuggestionMetadata_, a5);
        objc_msgSend(v10, sel_setPlusSuggesterSuggestionMetadataReported_, v14);

        return v10;
      }

      id v10 = v12;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1D3001918();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EBD65778);
  uint64_t v22 = sub_1D30018F8();
  os_log_type_t v23 = sub_1D30020B8();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v27 = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    sub_1D2F09508(0xD00000000000008BLL, 0x80000001D300EEB0, &v27);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v22, v23, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v25, -1, -1);
    MEMORY[0x1D942F2D0](v24, -1, -1);
  }

  return 0;
}

void *sub_1D2F32E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1D2F33140();
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(*(unsigned int *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain));
    if (v7)
    {
      id v8 = v7;
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F98]), sel_init);
      if (v9)
      {
        id v10 = v9;
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v8);
        id v11 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        id v12 = (void *)sub_1D3001048();
        id v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

        objc_msgSend(v10, sel_setOriginalRequestId_, v13);
        id v14 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
        id v15 = (void *)sub_1D3001048();
        id v16 = objc_msgSend(v14, sel_initWithNSUUID_, v15);

        objc_msgSend(v10, sel_setSuggestionLinkId_, v16);
        objc_msgSend(v10, sel_setSuggestionRedundancyState_, a3);
        objc_msgSend(v6, sel_setPlusSuggesterSuggestionRedundancyReported_, v10);

        return v6;
      }

      uint64_t v6 = v8;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D3001918();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBD65778);
  id v18 = sub_1D30018F8();
  os_log_type_t v19 = sub_1D30020B8();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    *(_DWORD *)id v20 = 136315138;
    sub_1D2F09508(0xD000000000000064, 0x80000001D300EF40, &v23);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v18, v19, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v21, -1, -1);
    MEMORY[0x1D942F2D0](v20, -1, -1);
  }

  return 0;
}

void *sub_1D2F33140()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F70]), sel_init);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F78]), sel_init);
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
      uint64_t v5 = (void *)sub_1D3001048();
      id v6 = objc_msgSend(v4, sel_initWithNSUUID_, v5);

      objc_msgSend(v3, sel_setPlusId_, v6);
      objc_msgSend(v1, sel_setEventMetadata_, v3);

      return v1;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
  id v8 = sub_1D30018F8();
  os_log_type_t v9 = sub_1D30020B8();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v13 = v11;
    *(_DWORD *)id v10 = 136315138;
    sub_1D2F09508(0xD000000000000015, 0x80000001D300F020, &v13);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v8, v9, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v11, -1, -1);
    MEMORY[0x1D942F2D0](v10, -1, -1);
  }

  return 0;
}

uint64_t PLUSSchemaEventConstructor.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PLUSSchemaEventConstructor.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId;
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_1D2F33474()
{
  unint64_t result = qword_1EA698C00;
  if (!qword_1EA698C00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA698C00);
  }
  return result;
}

uint64_t sub_1D2F334B4()
{
  return type metadata accessor for PLUSSchemaEventConstructor();
}

uint64_t type metadata accessor for PLUSSchemaEventConstructor()
{
  uint64_t result = qword_1EA698C08;
  if (!qword_1EA698C08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2F33508()
{
  uint64_t result = sub_1D30010A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PLUSSchemaEventConstructor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PLUSSchemaEventConstructor);
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.__allocating_init(plusId:suggestionGenerationDomain:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggestionGenerated(suggestion:changeDataCaptureMetadata:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.outcomeReported(originalRequestId:suggestionLinkId:suggestionOutcome:suggestionDomainOutcome:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterQueried(originalRequestId:matchedResults:matchedResultsPopulated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterMetadataReported(originalRequestId:isSuggesterEnabled:domainConfiguredState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterSuggestionMetadataReported(originalRequestId:suggestionLinkId:suggestionSurfaced:suggestionNoveltyState:domainSuggestionMetadata:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of PLUSSchemaEventConstructor.suggesterSuggestionRedundancyReported(originalRequestId:suggestionLinkId:suggestionRedundancyState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

void sub_1D2F336A8(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  id v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;
  id v5 = v2;
}

id sub_1D2F33700()
{
  swift_beginAccess();
  unint64_t v1 = *(void **)(v0 + 16);
  return v1;
}

void sub_1D2F33744(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  id v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;
  id v5 = v2;
}

id sub_1D2F3379C()
{
  swift_beginAccess();
  unint64_t v1 = *(void **)(v0 + 24);
  return v1;
}

uint64_t CoreDataStore.__allocating_init(path:modelFileName:)(void *a1, void (*a2)(char *, uint64_t), uint64_t a3, id *a4)
{
  return CoreDataStore.init(path:modelFileName:)(a1, a2, a3, a4);
}

uint64_t CoreDataStore.init(path:modelFileName:)(void *a1, void (*a2)(char *, uint64_t), uint64_t a3, id *a4)
{
  uint64_t v5 = v4;
  id v6 = sub_1D2F33AC0(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = objc_msgSend(v6, sel_newBackgroundContext);
  return v5;
}

id sub_1D2F33AC0(void *a1, void (*a2)(char *, uint64_t), uint64_t a3, id *a4)
{
  id v65 = a1;
  unint64_t v66 = a2;
  uint64_t v79 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D3000F18();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v67 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v63 - v14;
  MEMORY[0x1F4188790](v13);
  id v68 = (char *)&v63 - v16;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v18 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  os_log_type_t v19 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v20 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v21 = objc_msgSend(v18, sel_URLForResource_withExtension_, v19, v20);

  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_9;
  }
  sub_1D3000EE8();

  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v22(v8, v15, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:
    sub_1D2F346A8((uint64_t)v8);
LABEL_10:
    *(void *)&aBlocuint64_t k = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    sub_1D3002438();
    swift_bridgeObjectRelease();
    strcpy((char *)&aBlock, "Couldn't load ");
    HIBYTE(aBlock) = -18;
    sub_1D3001C68();
    sub_1D3001C68();
    long long v50 = aBlock;
    sub_1D2F34708();
    swift_allocError();
    *unint64_t v51 = v50;
    return (id)swift_willThrow();
  }
  uint64_t v23 = v68;
  v22(v68, v8, v9);
  id v24 = objc_allocWithZone(MEMORY[0x1E4F1C120]);
  uint64_t v25 = (void *)sub_1D3000E78();
  id v26 = objc_msgSend(v24, sel_initWithContentsOfURL_, v25);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_10;
  }
  id v27 = objc_allocWithZone(MEMORY[0x1E4F1C150]);
  swift_bridgeObjectRetain();
  id v28 = v26;
  id v29 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v64 = objc_msgSend(v27, sel_initWithName_managedObjectModel_, v29, v28);

  id v63 = v28;
  uint64_t v30 = v67;
  sub_1D3000E58();
  id v31 = objc_msgSend(self, sel_defaultManager);
  sub_1D3000ED8();
  unint64_t v32 = (void *)sub_1D3000E78();
  id v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v15, v9);
  *(void *)&aBlocuint64_t k = 0;
  unsigned __int8 v34 = objc_msgSend(v31, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v32, 1, 0, &aBlock);

  id v35 = (id)aBlock;
  if (v34)
  {
    unint64_t v66 = v33;
    id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C190]), sel_init);
    double v37 = (void *)sub_1D3000E78();
    objc_msgSend(v36, sel_setURL_, v37);

    objc_msgSend(v36, sel_setReadOnly_, 0);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1D3005C00;
    *(void *)(v38 + 32) = v36;
    *(void *)&aBlocuint64_t k = v38;
    sub_1D3001DE8();
    sub_1D2F347B4();
    id v65 = v36;
    char v39 = (void *)sub_1D3001DA8();
    swift_bridgeObjectRelease();
    id v40 = v64;
    objc_msgSend(v64, sel_setPersistentStoreDescriptions_, v39);

    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v40;
    *(void *)(v41 + 16) = 0;
    unint64_t v43 = (void *)(v41 + 16);
    unint64_t v77 = sub_1D2F3482C;
    uint64_t v78 = v41;
    *(void *)&aBlocuint64_t k = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    id v75 = sub_1D2F3E7C0;
    uint64_t v76 = &block_descriptor_1;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v42, sel_loadPersistentStoresWithCompletionHandler_, v44);
    _Block_release(v44);
    swift_beginAccess();
    if (*v43)
    {
      unint64_t v72 = 0;
      unint64_t v73 = 0xE000000000000000;
      sub_1D3002438();
      swift_bridgeObjectRelease();
      unint64_t v72 = 0xD00000000000001ELL;
      unint64_t v73 = 0x80000001D300F140;
      sub_1D3001C68();
      sub_1D3001C68();
      if (*v43)
      {
        uint64_t ErrorValue = swift_getErrorValue();
        uint64_t v70 = &v63;
        uint64_t v46 = v71;
        uint64_t v47 = *(void *)(v71 - 8);
        MEMORY[0x1F4188790](ErrorValue);
        unint64_t v49 = (char *)&v63 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v47 + 16))(v49);
        sub_1D30028C8();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v46);
      }
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      unint64_t v59 = v72;
      unint64_t v60 = v73;
      sub_1D2F34708();
      swift_allocError();
      *uint64_t v61 = v59;
      v61[1] = v60;
      swift_willThrow();

      id v62 = v66;
      v66(v67, v9);
      v62(v68, v9);
      return (id)swift_release();
    }
    else
    {

      id v58 = v66;
      v66(v67, v9);
      v58(v68, v9);
      swift_release();
      return v64;
    }
  }
  else
  {
    unint64_t v53 = v35;
    unint64_t v54 = (void *)sub_1D3000DF8();

    swift_willThrow();
    *(void *)&aBlocuint64_t k = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    sub_1D3002438();
    swift_bridgeObjectRelease();
    *(void *)&aBlocuint64_t k = 0xD000000000000026;
    *((void *)&aBlock + 1) = 0x80000001D300F0D0;
    sub_1D2F3475C();
    sub_1D3002738();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    unint64_t v72 = (unint64_t)v54;
    id v55 = v54;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    sub_1D3001BC8();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    long long v56 = aBlock;
    sub_1D2F34708();
    swift_allocError();
    *unint64_t v57 = v56;
    swift_willThrow();

    v33(v30, v9);
    return (id)((uint64_t (*)(char *, uint64_t))v33)(v23, v9);
  }
}

void sub_1D2F34490(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = a2;
  id v6 = a2;
}

uint64_t CoreDataStore.deinit()
{
  return v0;
}

uint64_t CoreDataStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStore()
{
  return self;
}

id sub_1D2F3457C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  *a2 = v4;
  return v4;
}

id sub_1D2F345D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 24);
  *a2 = v4;
  return v4;
}

uint64_t method lookup function for CoreDataStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreDataStore);
}

uint64_t dispatch thunk of CoreDataStore.context.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of CoreDataStore.persistentContainer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CoreDataStore.__allocating_init(path:modelFileName:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1D2F346A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D2F34708()
{
  unint64_t result = qword_1EA698C18;
  if (!qword_1EA698C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698C18);
  }
  return result;
}

unint64_t sub_1D2F3475C()
{
  unint64_t result = qword_1EBD5F778;
  if (!qword_1EBD5F778)
  {
    sub_1D3000F18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5F778);
  }
  return result;
}

unint64_t sub_1D2F347B4()
{
  unint64_t result = qword_1EBD63348;
  if (!qword_1EBD63348)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD63348);
  }
  return result;
}

uint64_t sub_1D2F347F4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1D2F3482C(uint64_t a1, void *a2)
{
  sub_1D2F34490(a1, a2, v2);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t getEnumTagSinglePayload for CoreDataStoreError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDataStoreError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDataStoreError()
{
  return &type metadata for CoreDataStoreError;
}

uint64_t sub_1D2F34908(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1D3001CF8();
  }
  else {
    return 0;
  }
}

uint64_t sub_1D2F34950(uint64_t a1)
{
  uint64_t result = sub_1D2F3716C(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_1D2F3770C(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1D2F349D0(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = type metadata accessor for UniversalCandidate(0);
  uint64_t v4 = MEMORY[0x1F4188790](v48);
  id v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v10 || a1 == a2) {
    return 1;
  }
  uint64_t v11 = 0;
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = *(void *)(v7 + 72);
  uint64_t v44 = a2;
  uint64_t v45 = v13;
  uint64_t v43 = a1;
  uint64_t v46 = (char *)&v42 - v8;
  uint64_t v47 = v6;
  while (1)
  {
    sub_1D2F2EE40(a1 + v12, (uint64_t)v9);
    sub_1D2F2EE40(a2 + v12, (uint64_t)v6);
    uint64_t v14 = *(void *)&v9[*(int *)(v48 + 20)];
    swift_retain();
    swift_retain();
    unint64_t v15 = sub_1D30013D8();
    unint64_t v16 = v15;
    if (!v15)
    {
      unint64_t v50 = 0;
      goto LABEL_24;
    }
    if (v15 >> 62)
    {
      if (!sub_1D30025A8())
      {
LABEL_23:
        swift_bridgeObjectRelease();
        unint64_t v50 = 0;
        unint64_t v16 = 0;
        goto LABEL_24;
      }
    }
    else if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_23;
    }
    if ((v16 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1D942E3A0](0, v16);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v17) {
      break;
    }
LABEL_13:
    unint64_t v50 = sub_1D2F593BC();
    unint64_t v16 = v19;
    if (v19)
    {
      uint64_t v20 = sub_1D30013C8();
      if (v20)
      {
        unint64_t v21 = v20;
        swift_retain();
        uint64_t v22 = sub_1D2F5AD54(v21);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v51 = (uint64_t)v22;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
        sub_1D2F37FC8();
        uint64_t v23 = sub_1D3001B18();
        unint64_t v25 = v24;
        swift_bridgeObjectRelease();
        uint64_t v26 = HIBYTE(v25) & 0xF;
        if ((v25 & 0x2000000000000000) == 0) {
          uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
        }
        if (v26)
        {
          uint64_t v51 = 91;
          unint64_t v52 = 0xE100000000000000;
          sub_1D3001C68();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1D3001C68();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1D3001C68();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v16 = v52;
          unint64_t v50 = v51;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        a1 = v43;
        a2 = v44;
      }
    }
LABEL_24:
    swift_retain();
    unint64_t v27 = sub_1D30013D8();
    uint64_t v49 = v14;
    if (!v27)
    {
      swift_release();
      goto LABEL_44;
    }
    unint64_t v28 = v27;
    uint64_t v29 = v27 & 0xFFFFFFFFFFFFFF8;
    if (v27 >> 62)
    {
      if (!sub_1D30025A8())
      {
LABEL_43:
        swift_release();
        swift_bridgeObjectRelease();
LABEL_44:
        unint64_t v31 = 0;
        unint64_t v33 = 0;
        if (!v16) {
          goto LABEL_37;
        }
        goto LABEL_45;
      }
    }
    else if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_43;
    }
    if ((v28 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1D942E3A0](0, v28);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)(v29 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      if (!v30) {
        goto LABEL_56;
      }
    }
    unint64_t v31 = sub_1D2F593BC();
    unint64_t v33 = v32;
    if (v32 && (uint64_t v34 = sub_1D30013C8()) != 0)
    {
      unint64_t v35 = v34;
      swift_retain();
      id v36 = sub_1D2F5AD54(v35);
      uint64_t v42 = v11;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v51 = (uint64_t)v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
      sub_1D2F37FC8();
      uint64_t v37 = sub_1D3001B18();
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      uint64_t v40 = HIBYTE(v39) & 0xF;
      if ((v39 & 0x2000000000000000) == 0) {
        uint64_t v40 = v37 & 0xFFFFFFFFFFFFLL;
      }
      if (v40)
      {
        uint64_t v51 = 91;
        unint64_t v52 = 0xE100000000000000;
        sub_1D3001C68();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1D3001C68();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1D3001C68();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v31 = v51;
        unint64_t v33 = v52;
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      a1 = v43;
      a2 = v44;
      uint64_t v11 = v42;
      if (!v16)
      {
LABEL_37:
        if (v33) {
          goto LABEL_53;
        }
        swift_release();
        swift_release();
        goto LABEL_6;
      }
    }
    else
    {
      swift_release();
      if (!v16) {
        goto LABEL_37;
      }
    }
LABEL_45:
    if (!v33)
    {
LABEL_53:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1D2F2FCBC((uint64_t)v47);
      sub_1D2F2FCBC((uint64_t)v46);
      return 0;
    }
    if (v50 == v31 && v16 == v33)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      id v6 = v47;
      sub_1D2F2FCBC((uint64_t)v47);
      uint64_t v9 = v46;
      sub_1D2F2FCBC((uint64_t)v46);
      goto LABEL_7;
    }
    char v41 = sub_1D3002778();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v6 = v47;
    sub_1D2F2FCBC((uint64_t)v47);
    uint64_t v9 = v46;
    sub_1D2F2FCBC((uint64_t)v46);
    if ((v41 & 1) == 0) {
      return 0;
    }
LABEL_7:
    v12 += v45;
    if (!--v10) {
      return 1;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

BOOL sub_1D2F34FE4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = a1 + 5;
  id v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_1D2F35058(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1D3002778(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1D3002778() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1D2F35120(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 != 1)
  {
    uint64_t v4 = v2 - 2;
    BOOL v5 = (unsigned char *)(a1 + 33);
    char v6 = (unsigned char *)(a2 + 33);
    do
    {
      uint64_t v7 = v4;
      char v8 = *v5 ^ *v6;
      if (v8) {
        break;
      }
      --v4;
      ++v5;
      ++v6;
    }
    while (v7);
    LOBYTE(v2) = v8 ^ 1;
  }
  return v2 & 1;
}

void Feature.confidence.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

uint64_t static Feature.name.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698C20);
  uint64_t v0 = sub_1D3001BC8();
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_1D2F34908(v0, v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (sub_1D3001AC8())
    {
      uint64_t v5 = sub_1D3001BD8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D2F9FF34(1uLL, v0, v2);
      swift_bridgeObjectRelease();
      sub_1D2F375B4();
      swift_bridgeObjectRetain();
      sub_1D3001C58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v0;
}

uint64_t sub_1D2F352F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698C20);
  uint64_t v0 = sub_1D3001BC8();
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_1D2F34908(v0, v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (sub_1D3001AC8())
    {
      uint64_t v5 = sub_1D3001BD8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D2F9FF34(1uLL, v0, v2);
      swift_bridgeObjectRelease();
      sub_1D2F375B4();
      swift_bridgeObjectRetain();
      sub_1D3001C58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v0;
}

uint64_t sub_1D2F35464()
{
  sub_1D3002438();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698C20);
  uint64_t v0 = sub_1D3001BC8();
  unint64_t v2 = v1;
  swift_bridgeObjectRetain();
  sub_1D2F34908(v0, v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (sub_1D3001AC8())
    {
      sub_1D3001BD8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D2F9FF34(1uLL, v0, v2);
      swift_bridgeObjectRelease();
      sub_1D2F375B4();
      swift_bridgeObjectRetain();
      sub_1D3001C58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  sub_1D3002568();
  sub_1D3001C68();
  sub_1D3002568();
  return 0;
}

uint64_t Feature.__allocating_init(value:confidence:)(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  LOBYTE(a2) = *a2;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v9, v5, v6);
  char v7 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(unsigned char *)(v4 + 32) = v7;
  *(unsigned char *)(v4 + 33) = (_BYTE)a2;
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

uint64_t Feature.init(value:confidence:)(uint64_t a1, char *a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v8 = sub_1D2F37760(v7, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v8;
}

void sub_1D2F357B8(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      uint64_t v4 = MEMORY[0x1E4FBB3D0];
      goto LABEL_10;
    case 2:
      uint64_t v5 = MEMORY[0x1E4FBC150];
      goto LABEL_8;
    case 3:
      uint64_t v4 = MEMORY[0x1E4FBC1C8];
      goto LABEL_10;
    case 4:
      uint64_t v6 = *(void *)(v1 + 24);
      a1[3] = MEMORY[0x1E4FBB1A0];
      *a1 = v2;
      a1[1] = v6;
      goto LABEL_16;
    case 5:
      uint64_t v5 = MEMORY[0x1E4FBC4C0];
LABEL_8:
      a1[3] = v5;
      *(_DWORD *)a1 = v2;
      return;
    case 6:
      uint64_t v4 = MEMORY[0x1E4FBC538];
LABEL_10:
      a1[3] = v4;
      *a1 = v2;
      return;
    case 7:
      uint64_t v7 = (uint64_t *)&unk_1EA698C30;
      goto LABEL_15;
    case 8:
      uint64_t v7 = &qword_1EBD5FC38;
      goto LABEL_15;
    case 9:
      uint64_t v7 = (uint64_t *)&unk_1EA698C28;
LABEL_15:
      a1[3] = __swift_instantiateConcreteTypeFromMangledName(v7);
      *a1 = v2;
LABEL_16:
      swift_bridgeObjectRetain();
      break;
    default:
      a1[3] = MEMORY[0x1E4FBB390];
      *(unsigned char *)a1 = v2 & 1;
      break;
  }
}

id sub_1D2F358F8()
{
  return sub_1D2F35934();
}

id sub_1D2F35934()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      id v4 = objc_msgSend(self, sel_featureValueWithDouble_, *(double *)&v1);
      goto LABEL_12;
    case 2:
      id v4 = objc_msgSend(self, sel_featureValueWithDouble_, (double)(int)v1);
      goto LABEL_12;
    case 3:
      id v4 = objc_msgSend(self, sel_featureValueWithDouble_, (double)v1);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRetain();
      id v5 = (id)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      sub_1D2F377D0(v1, v2, 4);
      id v6 = objc_msgSend(self, sel_featureValueWithString_, v5);
      goto LABEL_27;
    case 5:
      id v4 = objc_msgSend(self, sel_featureValueWithDouble_, (double)*(void *)v0);
      goto LABEL_12;
    case 6:
      id v4 = objc_msgSend(self, sel_featureValueWithDouble_, (double)(unint64_t)v1);
      goto LABEL_12;
    case 7:
      uint64_t v18 = MEMORY[0x1E4FBC860];
      uint64_t v8 = *(void *)(v1 + 16);
      if (v8)
      {
        long long v9 = (uint64_t *)(v1 + 32);
        swift_bridgeObjectRetain();
        do
        {
          uint64_t v10 = *v9++;
          if (objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v10))
          {
            MEMORY[0x1D942DCC0]();
            if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1D3001E28();
            }
            sub_1D3001E68();
            sub_1D3001DE8();
          }
          --v8;
        }
        while (v8);
        sub_1D2F377D0(v1, v2, 7);
      }
      goto LABEL_26;
    case 8:
      swift_bridgeObjectRetain();
      BOOL v11 = (void *)sub_1D3001DA8();
      sub_1D2F377D0(v1, v2, 8);
      id v12 = objc_msgSend(self, sel_sequenceWithStringArray_, v11);

      id v7 = objc_msgSend(self, sel_featureValueWithSequence_, v12);
      return v7;
    case 9:
      uint64_t v13 = *(void *)(v1 + 16);
      if (v13)
      {
        sub_1D3002508();
        uint64_t v14 = (unsigned __int8 *)(v1 + 32);
        do
        {
          unsigned int v15 = *v14++;
          objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v15);
          sub_1D30024E8();
          sub_1D3002518();
          sub_1D3002528();
          sub_1D30024F8();
          --v13;
        }
        while (v13);
      }
LABEL_26:
      sub_1D2F1C528();
      unint64_t v16 = (void *)sub_1D3001DA8();
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(self, sel_sequenceWithInt64Array_, v16);

      id v6 = objc_msgSend(self, sel_featureValueWithSequence_, v5);
LABEL_27:
      id v7 = v6;

      break;
    default:
      if (v1) {
        double v3 = 1.0;
      }
      else {
        double v3 = 0.0;
      }
      id v4 = objc_msgSend(self, sel_featureValueWithDouble_, v3);
LABEL_12:
      id v7 = v4;
      break;
  }
  return v7;
}

uint64_t Feature.deinit()
{
  sub_1D2F377D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return v0;
}

uint64_t Feature.__deallocating_deinit()
{
  sub_1D2F377D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F35E40()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

BOOL sub_1D2F35E84(uint64_t *a1, uint64_t *a2)
{
  return _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t TypedFeature.__allocating_init(value:confidence:)(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  char v7 = *a2;
  (*(void (**)(long long *__return_ptr, void))(*(void *)(*(void *)v6 + 144) + 8))(&v10, *(void *)(*(void *)v6 + 136));
  char v8 = v11;
  *(_OWORD *)(v6 + 16) = v10;
  *(unsigned char *)(v6 + 32) = v8;
  *(unsigned char *)(v6 + 33) = v7;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 136) - 8) + 8))(a1);
  return v6;
}

uint64_t TypedFeature.init(value:confidence:)(uint64_t a1, char *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1D2F37828(a1, a2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 136) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_1D2F35FF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *((unsigned __int8 *)v1 + 32);
  uint64_t v4 = *v1;
  switch(v3)
  {
    case 4:
      goto LABEL_6;
    case 7:
      uint64_t v5 = (uint64_t *)&unk_1EA698C30;
      goto LABEL_5;
    case 8:
      uint64_t v5 = &qword_1EBD5FC38;
      goto LABEL_5;
    case 9:
      uint64_t v5 = (uint64_t *)&unk_1EA698C28;
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(v5);
LABEL_6:
      swift_bridgeObjectRetain();
      break;
    default:
      break;
  }
  uint64_t v6 = *(void *)(v4 + 136);
  int v7 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, v7 ^ 1u, 1, v6);
}

void TypedFeature.__allocating_init(value:confidence:)()
{
}

void TypedFeature.init(value:confidence:)()
{
}

uint64_t TypedFeature.deinit()
{
  sub_1D2F377D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return v0;
}

uint64_t TypedFeature.__deallocating_deinit()
{
  sub_1D2F377D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t Bool.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result & 1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

void sub_1D2F36274(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t String.featureValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2F36298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 4;
  return swift_bridgeObjectRetain();
}

void Double.featureValue.getter(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
}

void sub_1D2F362C0(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
}

uint64_t Int32.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 2;
  return result;
}

void sub_1D2F362E8(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
}

uint64_t Int64.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 3;
  return result;
}

void sub_1D2F3630C(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 3;
}

uint64_t UInt32.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 5;
  return result;
}

void sub_1D2F36334(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 5;
}

uint64_t UInt64.featureValue.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 6;
  return result;
}

void sub_1D2F36358(uint64_t a1@<X8>)
{
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 6;
}

void Array.featureValue.getter(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (a1 == MEMORY[0x1E4FBC1C8])
  {
    uint64_t v9 = sub_1D3002628();
    if (v9) {
      uint64_t v8 = v9;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    char v7 = 7;
  }
  else if (a1 == MEMORY[0x1E4FBB1A0])
  {
    uint64_t v10 = sub_1D3002628();
    if (v10) {
      uint64_t v8 = v10;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    char v7 = 8;
  }
  else if (a1 == MEMORY[0x1E4FBB390])
  {
    uint64_t v11 = sub_1D3002628();
    if (v11) {
      uint64_t v8 = v11;
    }
    else {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    char v7 = 9;
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1D3001918();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EBD65778);
    uint64_t v4 = sub_1D30018F8();
    os_log_type_t v5 = sub_1D30020B8();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1D2F05000, v4, v5, "Element type is not supported, returning an empty FeatureValue.strings", v6, 2u);
      MEMORY[0x1D942F2D0](v6, -1, -1);
    }

    char v7 = 8;
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v7;
}

void sub_1D2F36504(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t FeatureValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D30024A8();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D3002988();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    uint64_t v6 = sub_1D3002798() & 1;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 16) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t FeatureValue.encode(to:)(void *a1)
{
  uint64_t v2 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D30029A8();
  switch(v2)
  {
    case 1:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D3002828();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    case 2:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D3002848();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    case 3:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D3002858();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    case 4:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D3002808();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    case 5:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D3002868();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    case 6:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D3002878();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
    case 7:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      uint64_t v3 = &qword_1EA698C30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698C30);
      uint64_t v4 = (unint64_t *)&unk_1EA698C60;
      goto LABEL_12;
    case 8:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      uint64_t v3 = &qword_1EBD5FC38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
      uint64_t v4 = (unint64_t *)&unk_1EA698C58;
      goto LABEL_12;
    case 9:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      uint64_t v3 = &qword_1EA698C28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698C28);
      uint64_t v4 = (unint64_t *)&unk_1EA698C50;
LABEL_12:
      sub_1D2F378F0(v4, v3);
      sub_1D3002838();
      break;
    default:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D3002818();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
}

uint64_t sub_1D2F36DC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeatureValue.init(from:)(a1, a2);
}

uint64_t sub_1D2F36DD8(void *a1)
{
  return FeatureValue.encode(to:)(a1);
}

SiriPrivateLearningAnalytics::Confidence_optional __swiftcall Confidence.init(rawValue:)(Swift::Double rawValue)
{
  if (rawValue == 1.0)
  {
    *uint64_t v1 = 0;
  }
  else if (rawValue == 0.75)
  {
    *uint64_t v1 = 1;
  }
  else
  {
    if (rawValue == 0.0) {
      char v2 = 4;
    }
    else {
      char v2 = 5;
    }
    if (rawValue == 0.25) {
      char v3 = 3;
    }
    else {
      char v3 = v2;
    }
    if (rawValue == 0.5) {
      char v4 = 2;
    }
    else {
      char v4 = v3;
    }
    *uint64_t v1 = v4;
  }
  return result;
}

double Confidence.rawValue.getter()
{
  return dbl_1D3005FE0[*v0];
}

BOOL sub_1D2F36E6C(char *a1, char *a2)
{
  return dbl_1D3005FE0[*a1] == dbl_1D3005FE0[*a2];
}

uint64_t sub_1D2F36E90()
{
  return sub_1D2FD5730();
}

uint64_t sub_1D2F36E9C()
{
  return sub_1D3002958();
}

uint64_t sub_1D2F36ED4()
{
  return sub_1D2FD5730();
}

SiriPrivateLearningAnalytics::Confidence_optional sub_1D2F36EDC(Swift::Double *a1)
{
  return Confidence.init(rawValue:)(*a1);
}

double sub_1D2F36EE4@<D0>(double *a1@<X8>)
{
  double result = dbl_1D3005FE0[*v1];
  *a1 = result;
  return result;
}

void Feature.rawValue.getter(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      uint64_t v4 = MEMORY[0x1E4FBB3D0];
      goto LABEL_10;
    case 2:
      uint64_t v5 = MEMORY[0x1E4FBC150];
      goto LABEL_8;
    case 3:
      uint64_t v4 = MEMORY[0x1E4FBC1C8];
      goto LABEL_10;
    case 4:
      uint64_t v6 = *(void *)(v1 + 24);
      a1[3] = MEMORY[0x1E4FBB1A0];
      *a1 = v2;
      a1[1] = v6;
      goto LABEL_16;
    case 5:
      uint64_t v5 = MEMORY[0x1E4FBC4C0];
LABEL_8:
      a1[3] = v5;
      *(_DWORD *)a1 = v2;
      return;
    case 6:
      uint64_t v4 = MEMORY[0x1E4FBC538];
LABEL_10:
      a1[3] = v4;
      *a1 = v2;
      return;
    case 7:
      uint64_t v7 = &qword_1EA698C30;
      goto LABEL_15;
    case 8:
      uint64_t v7 = &qword_1EBD5FC38;
      goto LABEL_15;
    case 9:
      uint64_t v7 = &qword_1EA698C28;
LABEL_15:
      a1[3] = __swift_instantiateConcreteTypeFromMangledName(v7);
      *a1 = v2;
LABEL_16:
      swift_bridgeObjectRetain();
      break;
    default:
      a1[3] = MEMORY[0x1E4FBB390];
      *(unsigned char *)a1 = v2 & 1;
      break;
  }
}

uint64_t Feature.equalTo(_:)(uint64_t a1)
{
  sub_1D2F37950(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61140);
  type metadata accessor for Feature();
  if (!swift_dynamicCast()) {
    return 2;
  }
  BOOL v2 = _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(v1, v4);
  swift_release();
  return v2;
}

uint64_t sub_1D2F370C0()
{
  return sub_1D2F352F8();
}

uint64_t sub_1D2F370E4(uint64_t a1)
{
  uint64_t v2 = *v1;
  sub_1D2F37950(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61140);
  type metadata accessor for Feature();
  if (!swift_dynamicCast()) {
    return 2;
  }
  BOOL v3 = _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(v2, v5);
  swift_release();
  return v3;
}

uint64_t sub_1D2F3716C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s28SiriPrivateLearningAnalytics12FeatureValueO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  int v7 = *((unsigned __int8 *)a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_29;
      }
      sub_1D2F377D0(*(void *)a1, v3, 1);
      sub_1D2F377D0(v5, v6, 1);
      char v8 = *(double *)&v2 == *(double *)&v5;
      return v8 & 1;
    case 2:
      if (v7 != 2) {
        goto LABEL_29;
      }
      sub_1D2F377D0(*(void *)a1, v3, 2);
      uint64_t v9 = v5;
      uint64_t v10 = v6;
      char v11 = 2;
      goto LABEL_18;
    case 3:
      if (v7 != 3) {
        goto LABEL_29;
      }
      sub_1D2F377D0(*(void *)a1, v3, 3);
      uint64_t v12 = v5;
      uint64_t v13 = v6;
      char v14 = 3;
      goto LABEL_21;
    case 4:
      if (v7 != 4) {
        goto LABEL_28;
      }
      if (v2 == v5 && v3 == v6) {
        char v8 = 1;
      }
      else {
        char v8 = sub_1D3002778();
      }
      sub_1D2F37C20(v5, v6, 4);
      sub_1D2F37C20(v2, v3, 4);
      sub_1D2F377D0(v2, v3, 4);
      sub_1D2F377D0(v5, v6, 4);
      return v8 & 1;
    case 5:
      if (v7 != 5) {
        goto LABEL_29;
      }
      sub_1D2F377D0(*(void *)a1, v3, 5);
      uint64_t v9 = v5;
      uint64_t v10 = v6;
      char v11 = 5;
LABEL_18:
      sub_1D2F377D0(v9, v10, v11);
      char v8 = v2 == v5;
      return v8 & 1;
    case 6:
      if (v7 != 6) {
        goto LABEL_29;
      }
      sub_1D2F377D0(*(void *)a1, v3, 6);
      uint64_t v12 = v5;
      uint64_t v13 = v6;
      char v14 = 6;
LABEL_21:
      sub_1D2F377D0(v12, v13, v14);
      char v8 = v2 == v5;
      return v8 & 1;
    case 7:
      if (v7 != 7) {
        goto LABEL_28;
      }
      char v8 = sub_1D2F34FE4((void *)v2, (void *)*a2);
      sub_1D2F37C20(v5, v6, 7);
      sub_1D2F37C20(v2, v3, 7);
      sub_1D2F377D0(v2, v3, 7);
      sub_1D2F377D0(v5, v6, 7);
      return v8 & 1;
    case 8:
      if (v7 != 8) {
        goto LABEL_28;
      }
      char v8 = sub_1D2F35058((void *)v2, (void *)*a2);
      sub_1D2F37C20(v5, v6, 8);
      sub_1D2F37C20(v2, v3, 8);
      sub_1D2F377D0(v2, v3, 8);
      sub_1D2F377D0(v5, v6, 8);
      return v8 & 1;
    case 9:
      if (v7 == 9)
      {
        char v8 = sub_1D2F35120(v2, *a2);
        sub_1D2F37C20(v5, v6, 9);
        sub_1D2F37C20(v2, v3, 9);
        sub_1D2F377D0(v2, v3, 9);
        sub_1D2F377D0(v5, v6, 9);
      }
      else
      {
LABEL_28:
        swift_bridgeObjectRetain();
LABEL_29:
        sub_1D2F37C20(v5, v6, v7);
        sub_1D2F377D0(v2, v3, v4);
        sub_1D2F377D0(v5, v6, v7);
        char v8 = 0;
      }
      break;
    default:
      if (*((unsigned char *)a2 + 16)) {
        goto LABEL_29;
      }
      sub_1D2F377D0(*(void *)a1, v3, 0);
      sub_1D2F377D0(v5, v6, 0);
      char v8 = ((v2 & 1) == 0) ^ v5;
      break;
  }
  return v8 & 1;
}

unint64_t sub_1D2F375B4()
{
  unint64_t result = qword_1EBD613E8;
  if (!qword_1EBD613E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD613E8);
  }
  return result;
}

BOOL _s28SiriPrivateLearningAnalytics7FeatureC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D2F352F8();
  uint64_t v6 = v5;
  if (v4 == sub_1D2F352F8() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  char v10 = *(unsigned char *)(a1 + 32);
  long long v14 = *(_OWORD *)(a1 + 16);
  char v15 = v10;
  char v11 = *(unsigned char *)(a2 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  char v13 = v11;
  return (_s28SiriPrivateLearningAnalytics12FeatureValueO2eeoiySbAC_ACtFZ_0((uint64_t)&v14, (uint64_t *)&v12) & 1) != 0
      && dbl_1D3005FE0[*(char *)(a1 + 33)] == dbl_1D3005FE0[*(char *)(a2 + 33)];
}

uint64_t sub_1D2F3770C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D2F37760(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a2;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a5 + 8))(&v9, a4, a5);
  char v7 = v10;
  *(_OWORD *)(a3 + 16) = v9;
  *(unsigned char *)(a3 + 32) = v7;
  *(unsigned char *)(a3 + 33) = v6;
  return a3;
}

uint64_t sub_1D2F377D0(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 4:
    case 7:
    case 8:
    case 9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D2F37828(uint64_t a1, char *a2)
{
  char v3 = *a2;
  (*(void (**)(long long *__return_ptr, void))(*(void *)(*(void *)v2 + 144) + 8))(&v6, *(void *)(*(void *)v2 + 136));
  char v4 = v7;
  *(_OWORD *)(v2 + 16) = v6;
  *(unsigned char *)(v2 + 32) = v4;
  *(unsigned char *)(v2 + 33) = v3;
  return v2;
}

void sub_1D2F378C0()
{
}

uint64_t sub_1D2F378F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2F37950(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for Feature()
{
  return self;
}

unint64_t sub_1D2F379DC()
{
  unint64_t result = qword_1EA698C68;
  if (!qword_1EA698C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698C68);
  }
  return result;
}

unint64_t sub_1D2F37A30(uint64_t a1)
{
  unint64_t result = sub_1D2F37A58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D2F37A58()
{
  unint64_t result = qword_1EA698C70[0];
  if (!qword_1EA698C70[0])
  {
    type metadata accessor for Feature();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA698C70);
  }
  return result;
}

uint64_t method lookup function for Feature(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Feature);
}

uint64_t dispatch thunk of Feature.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of Feature.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of Feature.__allocating_init(value:confidence:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Feature.value()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of Feature.toMLFeatureValue()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1D2F37B68()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for TypedFeature()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TypedFeature(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TypedFeature);
}

uint64_t dispatch thunk of TypedFeature.__allocating_init(value:confidence:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of TypedFeature.value.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of FeatureValueConvertible.featureValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D2F37C20(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 4:
    case 7:
    case 8:
    case 9:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for FeatureValue(uint64_t a1)
{
  return sub_1D2F377D0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s28SiriPrivateLearningAnalytics12FeatureValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1D2F37C20(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FeatureValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1D2F37C20(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1D2F377D0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FeatureValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1D2F377D0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 9) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 247;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D2F37E14(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1D2F37E1C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeatureValue()
{
  return &type metadata for FeatureValue;
}

uint64_t getEnumTagSinglePayload for Confidence(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Confidence(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F37F90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Confidence()
{
  return &type metadata for Confidence;
}

unint64_t sub_1D2F37FC8()
{
  unint64_t result = qword_1EBD5FC40;
  if (!qword_1EBD5FC40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBD5FC38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5FC40);
  }
  return result;
}

id sub_1D2F38024()
{
  if (objc_msgSend(v0, sel_anyEventType) != 6) {
    return v0;
  }
  id v1 = objc_msgSend(v0, sel_payload);
  if (v1)
  {
    int v2 = v1;
    uint64_t v3 = sub_1D3000F68();
    unint64_t v5 = v4;

    unsigned int v6 = (void *)sub_1D3000F58();
    sub_1D2F0D1CC(v3, v5);
  }
  else
  {
    unsigned int v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v6);

  if (!v7) {
    return v0;
  }
  id v8 = objc_msgSend(v7, sel_event);
  if (!v8)
  {

    return v0;
  }
  id v9 = v8;
  objc_msgSend(v7, sel_metadata);

  return v9;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000013;
  *(void *)(result + 24) = 0x80000001D300F230;
  return result;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0xD000000000000013;
  *(void *)(v0 + 24) = 0x80000001D300F230;
  return result;
}

uint64_t sub_1D2F381A4(id *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  os_log_type_t v80 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001018();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v77 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v78 = (char *)&v72 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698CF8);
  MEMORY[0x1F4188790](v10 - 8);
  long long v12 = (uint64_t *)((char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v13 = sub_1D3000DC8();
  unint64_t v81 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v79 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *a1;
  id v16 = objc_msgSend(v15, sel_intent);
  uint64_t v17 = sub_1D2F76438();
  if (!v18) {
    goto LABEL_13;
  }
  uint64_t v20 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  if (v17 == v20 && v18 == v19)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_13;
    }
  }
  id v22 = objc_msgSend(v16, sel_parametersByName);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v74 = v6;
    uint64_t v75 = v5;
    uint64_t v24 = sub_1D3001A88();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1D3004380;
    uint64_t v26 = v15;
    uint64_t v27 = type metadata accessor for MTCreateAlarmEventFeature.EventType(0);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v20;
    *(void *)(v28 + 24) = v19;
    *(void *)(v25 + 56) = v27;
    *(void *)(v25 + 64) = sub_1D2F38D0C(&qword_1EA698D00, (void (*)(uint64_t))type metadata accessor for MTCreateAlarmEventFeature.EventType);
    *(void *)(v25 + 32) = v28;
    swift_bridgeObjectRetain();
    uint64_t v76 = v26;
    unsigned __int8 v29 = objc_msgSend(v26, sel__donatedBySiri);
    uint64_t v30 = type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(0);
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = v29;
    *(void *)(v25 + 96) = v30;
    *(void *)(v25 + 104) = sub_1D2F38D0C(&qword_1EA698D08, (void (*)(uint64_t))type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri);
    *(void *)(v25 + 72) = v31;
    if (*(void *)(v24 + 16) && (unint64_t v32 = sub_1D2F0DC98(0x6C6562616CLL, 0xE500000000000000), (v33 & 1) != 0))
    {
      sub_1D2F0BD44(*(void *)(v24 + 56) + 32 * v32, (uint64_t)&v84);
      if (swift_dynamicCast())
      {
        unint64_t v34 = v82;
        uint64_t v35 = v83;
        uint64_t v36 = type metadata accessor for MTCreateAlarmEventFeature.AlarmName(0);
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v34;
        *(void *)(v37 + 24) = v35;
        unint64_t v39 = *(void *)(v25 + 16);
        unint64_t v38 = *(void *)(v25 + 24);
        unint64_t v73 = v39 + 1;
        if (v39 >= v38 >> 1) {
          uint64_t v25 = (uint64_t)sub_1D2F27F00((void *)(v38 > 1), v39 + 1, 1, (void *)v25);
        }
        uint64_t v40 = v76;
        *((void *)&v85 + 1) = v36;
        uint64_t v86 = sub_1D2F38D0C(&qword_1EA698D28, (void (*)(uint64_t))type metadata accessor for MTCreateAlarmEventFeature.AlarmName);
        *(void *)&long long v84 = v37;
        *(void *)(v25 + 16) = v73;
        sub_1D2F0BE68(&v84, v25 + 40 * v39 + 32);
        unint64_t v41 = v81;
      }
      else
      {
        uint64_t v40 = v76;
        unint64_t v41 = v81;
      }
    }
    else
    {
      uint64_t v40 = v76;
      unint64_t v41 = v81;
    }
    uint64_t v43 = v80;
    if (*(void *)(v24 + 16) && (unint64_t v44 = sub_1D2F0DC98(0x706D6F4365746164, 0xEE0073746E656E6FLL), (v45 & 1) != 0))
    {
      sub_1D2F0BD44(*(void *)(v24 + 56) + 32 * v44, (uint64_t)&v84);
      int v46 = swift_dynamicCast();
      (*(void (**)(void *, void, uint64_t, int64_t))(v41 + 56))(v12, v46 ^ 1u, 1, v13);
      if ((*(unsigned int (**)(void *, uint64_t, int64_t))(v41 + 48))(v12, 1, v13) != 1)
      {
        uint64_t v47 = v79;
        (*(void (**)(void))(v41 + 32))();
        sub_1D3000DB8();
        long long v12 = (void *)v74;
        uint64_t v48 = v43;
        uint64_t v49 = (uint64_t)v43;
        uint64_t v50 = v75;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v48, 1, v75) == 1)
        {
          uint64_t v51 = *(void (**)(char *, int64_t))(v41 + 8);
          v41 += 8;
          v51(v47, v13);
          sub_1D2F1CD78(v49, &qword_1EBD62A80);
          uint64_t v40 = v76;
          if (!*(void *)(v24 + 16)) {
            goto LABEL_30;
          }
        }
        else
        {
          id v55 = (void (*)(char *, uint64_t, uint64_t))v12[4];
          long long v56 = v78;
          v55(v78, v49, v50);
          unint64_t v57 = (void (*)(uint64_t, char *, uint64_t))v55;
          id v58 = (void (*)(char *, char *, uint64_t))v12[2];
          unint64_t v59 = v77;
          v58(v77, v56, v50);
          uint64_t v60 = type metadata accessor for MTCreateAlarmEventFeature.AlarmTime(0);
          uint64_t v61 = swift_allocObject();
          v57(v61 + *(void *)(*(void *)v61 + 96), v59, v50);
          unint64_t v41 = *(void *)(v25 + 16);
          unint64_t v62 = *(void *)(v25 + 24);
          long long v12 = (void *)(v41 + 1);
          if (v41 >= v62 >> 1) {
            uint64_t v25 = (uint64_t)sub_1D2F27F00((void *)(v62 > 1), v41 + 1, 1, (void *)v25);
          }
          uint64_t v40 = v76;
          *((void *)&v85 + 1) = v60;
          uint64_t v86 = sub_1D2F38D0C(&qword_1EA698D20, (void (*)(uint64_t))type metadata accessor for MTCreateAlarmEventFeature.AlarmTime);
          *(void *)&long long v84 = v61;
          *(void *)(v25 + 16) = v12;
          sub_1D2F0BE68(&v84, v25 + 40 * v41 + 32);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v75);
          (*(void (**)(char *, int64_t))(v81 + 8))(v79, v13);
          if (!*(void *)(v24 + 16)) {
            goto LABEL_30;
          }
        }
LABEL_24:
        unint64_t v53 = sub_1D2F0DC98(0x6353746165706572, 0xEE00656C75646568);
        if (v54)
        {
          sub_1D2F0BD44(*(void *)(v24 + 56) + 32 * v53, (uint64_t)&v84);
          goto LABEL_31;
        }
LABEL_30:
        long long v84 = 0u;
        long long v85 = 0u;
LABEL_31:
        swift_bridgeObjectRelease();
        if (!*((void *)&v85 + 1))
        {

          sub_1D2F1CD78((uint64_t)&v84, &qword_1EBD635B8);
          return v25;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D10);
        if ((swift_dynamicCast() & 1) == 0)
        {

          return v25;
        }
        uint64_t v63 = v82;
        if (v82 >> 62)
        {
          swift_bridgeObjectRetain();
          id v64 = (void *)sub_1D30025A8();
          swift_bridgeObjectRelease();
          if (v64)
          {
LABEL_35:
            if ((v63 & 0xC000000000000001) != 0)
            {
              id v66 = (id)MEMORY[0x1D942E3A0](0, v63);
            }
            else
            {
              unint64_t v65 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v65)
              {
                __break(1u);
                goto LABEL_46;
              }
              id v66 = *(id *)(v63 + 32);
            }
            id v64 = v66;
            swift_bridgeObjectRelease();
            id v67 = objc_msgSend(v64, sel_displayString);
            uint64_t v68 = sub_1D3001B78();
            uint64_t v70 = v69;

            uint64_t v63 = type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule(0);
            long long v12 = (void *)swift_allocObject();
            v12[2] = v68;
            uint64_t v12[3] = v70;
            unint64_t v41 = *(void *)(v25 + 16);
            unint64_t v65 = *(void *)(v25 + 24);
            int64_t v13 = v41 + 1;
            if (v41 < v65 >> 1)
            {
LABEL_39:
              uint64_t v71 = v76;
              *((void *)&v85 + 1) = v63;
              uint64_t v86 = sub_1D2F38D0C(&qword_1EA698D18, (void (*)(uint64_t))type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule);
              *(void *)&long long v84 = v12;
              *(void *)(v25 + 16) = v13;
              sub_1D2F0BE68(&v84, v25 + 40 * v41 + 32);

              return v25;
            }
LABEL_46:
            uint64_t v25 = (uint64_t)sub_1D2F27F00((void *)(v65 > 1), v13, 1, (void *)v25);
            goto LABEL_39;
          }
        }
        else
        {
          id v64 = *(void **)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v64) {
            goto LABEL_35;
          }
        }

        swift_bridgeObjectRelease();
        return v25;
      }
    }
    else
    {
      unint64_t v52 = *(void (**)(void *, uint64_t, uint64_t, int64_t))(v41 + 56);
      v41 += 56;
      v52(v12, 1, 1, v13);
    }
    sub_1D2F1CD78((uint64_t)v12, &qword_1EA698CF8);
    if (!*(void *)(v24 + 16)) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_13:

  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698D38);
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 96);
  uint64_t v4 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  sub_1D2F39578(a1, (uint64_t)v4);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62A80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D30);
    swift_deallocPartialClassInstance();
    uint64_t v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(void *)(*(void *)v5 + 96), v4, v6);
  }
  sub_1D2F1CD78(a1, &qword_1EBD62A80);
  return v5;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MTCreateAlarmIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698D48);
}

uint64_t sub_1D2F38CD0(uint64_t *a1)
{
  return sub_1D2F38F24(a1, (void (*)(void))type metadata accessor for MTCreateAlarmEventFeature.EventType);
}

uint64_t sub_1D2F38CE8(uint64_t *a1)
{
  return sub_1D2F38F78(a1, (void (*)(void))type metadata accessor for MTCreateAlarmEventFeature.EventType);
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2F38D0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t MTCreateAlarmEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F38E54(char *a1)
{
  char v1 = *a1;
  type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F38E8C(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for MTCreateAlarmEventFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t sub_1D2F38F0C(uint64_t *a1)
{
  return sub_1D2F38F24(a1, (void (*)(void))type metadata accessor for MTCreateAlarmEventFeature.AlarmName);
}

uint64_t sub_1D2F38F24(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2F38F60(uint64_t *a1)
{
  return sub_1D2F38F78(a1, (void (*)(void))type metadata accessor for MTCreateAlarmEventFeature.AlarmName);
}

uint64_t sub_1D2F38F78(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t MTCreateAlarmEventFeature.AlarmRepeatSchedule.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t MTCreateAlarmEventFeature.AlarmRepeatSchedule.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F39028(uint64_t *a1)
{
  return sub_1D2F38F24(a1, (void (*)(void))type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t sub_1D2F39040(uint64_t *a1)
{
  return sub_1D2F38F78(a1, (void (*)(void))type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.init(value:)(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F39578(a1, (uint64_t)v5);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D2F1CD78((uint64_t)v5, &qword_1EBD62A80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D30);
    swift_deallocPartialClassInstance();
    uint64_t v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(void *)(*(void *)v1 + 96), v5, v6);
  }
  sub_1D2F1CD78(a1, &qword_1EBD62A80);
  return v1;
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MTCreateAlarmEventFeature.AlarmTime.__deallocating_deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.AlarmRepeatSchedule(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698D68);
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.AlarmTime(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698D78);
}

uint64_t type metadata accessor for MTCreateAlarmEventFeature.AlarmName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698D58);
}

uint64_t sub_1D2F39578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MTCreateAlarmIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for MTCreateAlarmIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MTCreateAlarmIntentFeatureExtractor);
}

uint64_t dispatch thunk of MTCreateAlarmIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MTCreateAlarmIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

ValueMetadata *type metadata accessor for MTCreateAlarmEventFeature()
{
  return &type metadata for MTCreateAlarmEventFeature;
}

uint64_t SiriUserFeedbackLearningPluginRunResult.bundleName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriUserFeedbackLearningPluginRunResult.pluginResult.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1D2F22648(v2, v3);
}

__n128 SiriUserFeedbackLearningPluginRunResult.init(bundleName:pluginResult:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  __n128 result = *a3;
  a4[1] = *a3;
  return result;
}

BOOL sub_1D2F396C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D2F396DC()
{
  if (*v0) {
    return 0x65526E6967756C70;
  }
  else {
    return 0x614E656C646E7562;
  }
}

uint64_t sub_1D2F39724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D2F3CD18(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D2F3974C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1D2F39758(uint64_t a1)
{
  unint64_t v2 = sub_1D2F3C4D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F39794(uint64_t a1)
{
  unint64_t v2 = sub_1D2F3C4D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriUserFeedbackLearningPluginRunResult.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5DC78);
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F3C4D4();
  sub_1D30029B8();
  LOBYTE(v13) = 0;
  sub_1D30026D8();
  if (!v2)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v10;
    char v15 = 1;
    sub_1D2F22670();
    sub_1D30026E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t SiriUserFeedbackLearningPluginRunResult.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F3C4D4();
  sub_1D3002998();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v15[0]) = 0;
  uint64_t v9 = sub_1D3002678();
  uint64_t v11 = v10;
  char v16 = 1;
  sub_1D2F22718();
  swift_bridgeObjectRetain();
  sub_1D3002688();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v15[0];
  unint64_t v13 = v15[1];
  swift_bridgeObjectRetain();
  sub_1D2F22648(v12, v13);
  swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1D2F2265C(v12, v13);
}

uint64_t sub_1D2F39BA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SiriUserFeedbackLearningPluginRunResult.init(from:)(a1, a2);
}

uint64_t sub_1D2F39BB8(void *a1)
{
  return SiriUserFeedbackLearningPluginRunResult.encode(to:)(a1);
}

uint64_t SiriUserFeedbackLearningPluginLauncher.runPlugins(plugins:task:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 256) = a1;
  *(void *)(v2 + 264) = a2;
  return MEMORY[0x1F4188298](sub_1D2F39BF8, 0, 0);
}

uint64_t sub_1D2F39BF8()
{
  uint64_t v44 = v0;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = sub_1D3001918();
  *(void *)(v0 + 272) = __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  sub_1D2F3C528(v1, v0 + 16);
  unint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v40 = v37;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 232) = sub_1D2F09508(0xD000000000000019, 0x80000001D300F450, &v40);
    sub_1D3002318();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1D2F3C528(v0 + 16, v0 + 72);
    v43[0] = 0;
    v43[1] = 0xE000000000000000;
    sub_1D3002438();
    uint64_t v41 = v43[0];
    uint64_t v42 = v43[1];
    sub_1D3001C68();
    strcpy((char *)v43, "triggerType: ");
    HIWORD(v43[1]) = -4864;
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    id v6 = *(id *)(v0 + 80);
    id v7 = objc_msgSend(v6, sel_description);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();

    uint64_t v9 = v41;
    unint64_t v8 = v42;
    sub_1D2F3C584(v0 + 72);
    *(void *)(v0 + 248) = sub_1D2F09508(v9, v8, &v40);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F3C584(v0 + 16);
    _os_log_impl(&dword_1D2F05000, v3, v4, "LaunchQueue.%s (async) mlrTask: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v37, -1, -1);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }
  else
  {
    sub_1D2F3C584(v0 + 16);
  }

  *(void *)(v0 + 240) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1D30018F8();
  os_log_type_t v11 = sub_1D30020A8();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 256);
  if (v12)
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v43[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5DC58);
    uint64_t v17 = MEMORY[0x1D942DD00](v13, v16);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 224) = sub_1D2F09508(v17, v19, v43);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v10, v11, "plugins: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v15, -1, -1);
    MEMORY[0x1D942F2D0](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v20 = *(void **)(v0 + 256);
  uint64_t v21 = v20[2];
  *(void *)(v0 + 280) = v21;
  if (v21)
  {
    *(void *)(v0 + 288) = *(void *)(v0 + 240);
    *(void *)(v0 + 296) = 0;
    id v22 = v20 + 4;
    uint64_t v23 = v20[7];
    uint64_t v24 = v20[8];
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v22, v23);
    unint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 24) + **(int **)(v24 + 24));
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D2F3A3B8;
    uint64_t v26 = *(void *)(v0 + 264);
    return v38(v0 + 128, v26, v23, v24);
  }
  else
  {
    uint64_t v28 = sub_1D30018F8();
    os_log_type_t v29 = sub_1D30020A8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v43[0] = v39;
      *(_DWORD *)uint64_t v30 = 136315394;
      *(void *)(v0 + 208) = sub_1D2F09508(0xD000000000000019, 0x80000001D300F450, v43);
      sub_1D3002318();
      *(_WORD *)(v30 + 12) = 2080;
      swift_beginAccess();
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v32 = MEMORY[0x1D942DD00](v31, &type metadata for SiriUserFeedbackLearningPluginRunResult);
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 216) = sub_1D2F09508(v32, v34, v43);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v28, v29, "LaunchQueue.%s results: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v39, -1, -1);
      MEMORY[0x1D942F2D0](v30, -1, -1);
    }

    swift_beginAccess();
    uint64_t v35 = *(void *)(v0 + 240);
    uint64_t v36 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v36(v35);
  }
}

uint64_t sub_1D2F3A3B8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F3A4B4, 0, 0);
}

uint64_t sub_1D2F3A4B4()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = (void *)(v0[32] + 40 * v0[37]);
  unint64_t v3 = v0[17];
  unint64_t v33 = (void *)v0[18];
  id v35 = (id)v0[19];
  uint64_t v4 = v2[7];
  uint64_t v5 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v4);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v7 = v6;
  sub_1D2F22648(v1, v3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = (void *)v0[36];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v9 = sub_1D2F28614(0, v9[2] + 1, 1, (void *)v0[36]);
  }
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_1D2F28614((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  uint64_t v12 = v0[35];
  uint64_t v13 = v0[37] + 1;
  v9[2] = v11 + 1;
  uint64_t v14 = &v9[4 * v11];
  v14[4] = v32;
  v14[5] = v7;
  _OWORD v14[6] = v1;
  v14[7] = v3;
  sub_1D2F2265C(v1, v3);

  v0[30] = v9;
  if (v13 == v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1D30018F8();
    os_log_type_t v16 = sub_1D30020A8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v36 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      v0[26] = sub_1D2F09508(0xD000000000000019, 0x80000001D300F450, &v36);
      sub_1D3002318();
      *(_WORD *)(v17 + 12) = 2080;
      swift_beginAccess();
      uint64_t v19 = swift_bridgeObjectRetain();
      uint64_t v20 = MEMORY[0x1D942DD00](v19, &type metadata for SiriUserFeedbackLearningPluginRunResult);
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      v0[27] = sub_1D2F09508(v20, v22, &v36);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v15, v16, "LaunchQueue.%s results: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v18, -1, -1);
      MEMORY[0x1D942F2D0](v17, -1, -1);
    }

    swift_beginAccess();
    uint64_t v23 = v0[30];
    uint64_t v24 = (uint64_t (*)(uint64_t))v0[1];
    return v24(v23);
  }
  else
  {
    uint64_t v26 = v0[37] + 1;
    v0[36] = v9;
    v0[37] = v26;
    uint64_t v27 = (void *)(v0[32] + 40 * v26);
    uint64_t v28 = v27[7];
    uint64_t v29 = v27[8];
    __swift_project_boxed_opaque_existential_1(v27 + 4, v28);
    unint64_t v34 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 24) + **(int **)(v29 + 24));
    uint64_t v30 = (void *)swift_task_alloc();
    v0[38] = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_1D2F3A3B8;
    uint64_t v31 = v0[33];
    return v34(v0 + 16, v31, v28, v29);
  }
}

NSObject *SiriUserFeedbackLearningPluginLauncher.runPlugins(plugins:task:timeout:)(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v7 = sub_1D3001988();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - v11;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D3001918();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBD65778);
  sub_1D2F3C528(a2, (uint64_t)v46);
  uint64_t v39 = *(void (**)(char *, NSObject *, uint64_t))(v8 + 16);
  v39(v12, a3, v7);
  uint64_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D30020A8();
  int v40 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v17 = v16;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v48 = v35;
    *(_DWORD *)uint64_t v17 = 136315650;
    os_log_t v34 = v14;
    v45[0] = sub_1D2F09508(0xD000000000000021, 0x80000001D300F470, &v48);
    sub_1D3002318();
    *(_WORD *)(v17 + 12) = 2080;
    sub_1D2F3C528((uint64_t)v46, (uint64_t)v45);
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_1D3002438();
    uint64_t v38 = v3;
    sub_1D3001C68();
    strcpy((char *)v42, "triggerType: ");
    v42[7] = -4864;
    uint64_t v37 = a3;
    uint64_t v33 = v17 + 14;
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    id v18 = (id)v45[1];
    id v19 = objc_msgSend(v18, sel_description);
    sub_1D3001B78();
    uint64_t v32 = v12;

    sub_1D3001C68();
    swift_bridgeObjectRelease();
    uint64_t v20 = v43;
    unint64_t v21 = v44;
    sub_1D2F3C584((uint64_t)v45);
    v45[0] = sub_1D2F09508(v20, v21, &v48);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F3C584((uint64_t)v46);
    *(_WORD *)(v17 + 22) = 2080;
    unint64_t v22 = v32;
    v39(v41, v32, v7);
    uint64_t v23 = sub_1D3001BC8();
    v45[0] = sub_1D2F09508(v23, v24, &v48);
    sub_1D3002318();
    a3 = v37;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v7);
    uint64_t v14 = v34;
    _os_log_impl(&dword_1D2F05000, v34, (os_log_type_t)v40, "LaunchQueue.%s mlrTask: %s, timeout: %s", (uint8_t *)v17, 0x20u);
    uint64_t v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v25, -1, -1);
    uint64_t v26 = v17;
    a2 = v36;
    MEMORY[0x1D942F2D0](v26, -1, -1);
  }
  else
  {
    sub_1D2F3C584((uint64_t)v46);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }

  sub_1D2F3C528(a2, (uint64_t)v46);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  long long v28 = v46[1];
  *(_OWORD *)(v27 + 24) = v46[0];
  *(_OWORD *)(v27 + 40) = v28;
  *(_OWORD *)(v27 + 56) = v46[2];
  *(void *)(v27 + 72) = v47;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1D2F3B050(a3, (uint64_t)&unk_1EA698D98, v27);
  swift_release();
  return v29;
}

uint64_t sub_1D2F3AE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1D2F3AF30;
  v6[32] = a2;
  v6[33] = a3;
  return MEMORY[0x1F4188298](sub_1D2F39BF8, 0, 0);
}

uint64_t sub_1D2F3AF30(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F3B030, 0, 0);
}

uint64_t sub_1D2F3B030()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

NSObject *sub_1D2F3B050(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  uint64_t v4 = sub_1D3001988();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = (char *)&v43 - v7;
  uint64_t v8 = sub_1D3001A38();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v18 = dispatch_semaphore_create(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5DC60);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  uint64_t v20 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 1, 1, v20);
  unint64_t v21 = (void *)swift_allocObject();
  void v21[2] = 0;
  v21[3] = 0;
  v21[4] = v50;
  v21[5] = a3;
  v21[6] = sub_1D2F3D06C;
  v21[7] = v19;
  v21[8] = v18;
  swift_retain_n();
  swift_retain();
  unint64_t v22 = v18;
  uint64_t v23 = (uint64_t)v17;
  unint64_t v24 = v51;
  sub_1D2F66700(v23, (uint64_t)&unk_1EA698DD8, (uint64_t)v21);
  swift_release();
  sub_1D3001A18();
  sub_1D3001A28();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v12, v8);
  sub_1D3002208();
  v25(v14, v8);
  if (sub_1D3001998())
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1D3001918();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EBD65778);
    long long v28 = v47;
    uint64_t v27 = v48;
    uint64_t v29 = *(void (**)(char *, NSObject *, uint64_t))(v48 + 16);
    uint64_t v30 = v49;
    v29(v47, v24, v49);
    uint64_t v31 = sub_1D30018F8();
    os_log_type_t v32 = sub_1D30020C8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      os_log_t v46 = v31;
      os_log_t v34 = v28;
      uint64_t v35 = (uint8_t *)v33;
      uint64_t v50 = swift_slowAlloc();
      uint64_t v53 = v50;
      uint64_t v51 = v22;
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v43 = v35 + 4;
      unint64_t v44 = v35;
      v29(v45, v34, v30);
      uint64_t v36 = sub_1D3001BC8();
      uint64_t v52 = sub_1D2F09508(v36, v37, &v53);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      unint64_t v22 = v51;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v34, v30);
      uint64_t v31 = v46;
      uint64_t v38 = v44;
      _os_log_impl(&dword_1D2F05000, v46, v32, "a thread was blocked by a semaphore awaiting a Task and timed out after %s seconds", v44, 0xCu);
      uint64_t v39 = v50;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v39, -1, -1);
      MEMORY[0x1D942F2D0](v38, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
    }

    sub_1D2F3CF88();
    swift_allocError();
    *int v40 = 0xD00000000000002FLL;
    uint64_t v41 = "timed out waiting for an async task to complete";
    goto LABEL_11;
  }
  uint64_t v31 = *(NSObject **)(v19 + 16);
  if (!v31)
  {
    sub_1D2F3CF88();
    swift_allocError();
    *int v40 = 0xD000000000000028;
    uint64_t v41 = "unable to extract result from async Task";
LABEL_11:
    v40[1] = (unint64_t)(v41 - 32) | 0x8000000000000000;
    swift_willThrow();

    swift_release_n();
    return v31;
  }
  swift_bridgeObjectRetain();

  swift_release_n();
  return v31;
}

uint64_t sub_1D2F3B608@<X0>(NSObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint8_t *a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v58 = a2;
  unint64_t v59 = a1;
  uint64_t v5 = sub_1D3001988();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v55 = (char *)&v51 - v8;
  uint64_t v9 = sub_1D3001A38();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v16 - 8);
  dispatch_semaphore_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v19 = dispatch_semaphore_create(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA80);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = sub_1D3001F48();
  *(_OWORD *)(v20 + 16) = 0u;
  *(_OWORD *)(v20 + 32) = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
  unint64_t v22 = (void *)swift_allocObject();
  void v22[2] = 0;
  v22[3] = 0;
  v22[4] = v58;
  v22[5] = a3;
  v22[6] = sub_1D2F3CE30;
  v22[7] = v20;
  v22[8] = v19;
  swift_retain_n();
  swift_retain();
  uint64_t v23 = v19;
  uint64_t v24 = (uint64_t)v18;
  uint64_t v25 = v59;
  sub_1D2F668B4(v24, (uint64_t)&unk_1EA698DC0, (uint64_t)v22);
  swift_release();
  sub_1D3001A18();
  sub_1D3001A28();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v13, v9);
  sub_1D3002208();
  v26(v15, v9);
  if (sub_1D3001998())
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1D3001918();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EBD65778);
    uint64_t v29 = v55;
    uint64_t v28 = v56;
    uint64_t v30 = *(void (**)(char *, NSObject *, uint64_t))(v56 + 16);
    uint64_t v31 = v57;
    v30(v55, v25, v57);
    os_log_type_t v32 = sub_1D30018F8();
    os_log_type_t v33 = sub_1D30020C8();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      os_log_t v54 = v32;
      uint64_t v35 = v29;
      uint64_t v36 = (uint8_t *)v34;
      uint64_t v58 = swift_slowAlloc();
      uint64_t v61 = v58;
      unint64_t v59 = v23;
      uint64_t v53 = v36;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v51 = v36 + 4;
      v30(v52, v35, v31);
      uint64_t v37 = sub_1D3001BC8();
      uint64_t v60 = sub_1D2F09508(v37, v38, &v61);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      uint64_t v23 = v59;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v35, v31);
      uint64_t v39 = v53;
      os_log_type_t v32 = v54;
      _os_log_impl(&dword_1D2F05000, v54, v33, "a thread was blocked by a semaphore awaiting a Task and timed out after %s seconds", v53, 0xCu);
      uint64_t v40 = v58;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v40, -1, -1);
      MEMORY[0x1D942F2D0](v39, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v31);
    }

    sub_1D2F3CF88();
    swift_allocError();
    void *v49 = 0xD00000000000002FLL;
    uint64_t v50 = "timed out waiting for an async task to complete";
  }
  else
  {
    uint64_t v41 = *(void **)(v20 + 32);
    if (v41)
    {
      uint64_t v42 = *(void **)(v20 + 40);
      uint64_t v44 = *(void *)(v20 + 16);
      unint64_t v43 = *(void *)(v20 + 24);
      sub_1D2F22648(v44, v43);
      id v45 = v41;
      id v46 = v42;

      uint64_t result = swift_release_n();
      uint64_t v48 = v53;
      *(void *)uint64_t v53 = v44;
      *((void *)v48 + 1) = v43;
      *((void *)v48 + 2) = v45;
      *((void *)v48 + 3) = v42;
      return result;
    }
    sub_1D2F3CF88();
    swift_allocError();
    void *v49 = 0xD000000000000028;
    uint64_t v50 = "unable to extract result from async Task";
  }
  v49[1] = (unint64_t)(v50 - 32) | 0x8000000000000000;
  swift_willThrow();

  return swift_release_n();
}

uint64_t sub_1D2F3BBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D2F3BC98;
  unsigned char v5[32] = a1;
  v5[33] = a2;
  return MEMORY[0x1F4188298](sub_1D2F39BF8, 0, 0);
}

uint64_t sub_1D2F3BC98(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

NSObject *sub_1D2F3BD94(uint64_t a1, uint64_t a2, NSObject *a3)
{
  return SiriUserFeedbackLearningPluginLauncher.runPlugins(plugins:task:timeout:)(a1, a2, a3);
}

uint64_t sub_1D2F3BDAC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[4] = a7;
  v8[5] = a8;
  void v8[2] = a1;
  v8[3] = a6;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v8[6] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_1D2F3BE90;
  return v12(a1);
}

uint64_t sub_1D2F3BE90()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F3BF8C, 0, 0);
}

uint64_t sub_1D2F3BF8C()
{
  uint64_t v12 = v0;
  uint64_t v1 = (uint64_t *)v0[2];
  uint64_t v2 = (void (*)(void *))v0[3];
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v6 = (void *)v1[2];
  uint64_t v5 = (void *)v1[3];
  v11[0] = v3;
  v11[1] = v4;
  v11[2] = v6;
  v11[3] = v5;
  sub_1D2F22648(v3, v4);
  id v7 = v6;
  id v8 = v5;
  v2(v11);
  sub_1D2F2265C(v3, v4);

  sub_1D3002218();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1D2F3C05C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a1;
  void v8[4] = a6;
  uint64_t v11 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  v8[7] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_1D2F3C140;
  return v11(v8 + 2);
}

uint64_t sub_1D2F3C140()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F3C23C, 0, 0);
}

uint64_t sub_1D2F3C23C()
{
  id v7 = v0;
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = (void (*)(uint64_t *))v0[4];
  uint64_t v6 = v0[2];
  uint64_t v3 = v6;
  swift_bridgeObjectRetain();
  v1(&v6);
  swift_bridgeObjectRelease();
  sub_1D3002218();
  *uint64_t v2 = v3;
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1D2F3C2DC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = (void *)a2[4];
  uint64_t v9 = (void *)a2[5];
  a2[2] = *(void *)a1;
  a2[3] = v3;
  a2[4] = v4;
  a2[5] = v5;
  sub_1D2F3CFDC(v2, v3, v4, v5);
  sub_1D2F3D024(v6, v7, v8, v9);
}

BOOL _s28SiriPrivateLearningAnalytics0a12UserFeedbackC15PluginRunResultV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (uint64_t v7 = 0, (sub_1D3002778() & 1) != 0))
  {
    if (v3)
    {
      if (v3 == 1)
      {
        if (v5 == 1)
        {
          uint64_t v7 = 1;
          sub_1D2F2265C(v2, 1uLL);
          sub_1D2F2265C(v4, 1uLL);
          return v7;
        }
        goto LABEL_13;
      }
      if (v5 < 2)
      {
LABEL_13:
        sub_1D2F22648(v2, v3);
        sub_1D2F22648(v4, v5);
        sub_1D2F2265C(v2, v3);
        sub_1D2F2265C(v4, v5);
        return 0;
      }
      if (v2 != v4 || v3 != v5)
      {
        char v11 = sub_1D3002778();
        sub_1D2F22648(v2, v3);
        sub_1D2F22648(v4, v5);
        sub_1D2F2265C(v2, v3);
        sub_1D2F2265C(v4, v5);
        return (v11 & 1) != 0;
      }
      sub_1D2F22648(v2, v3);
      sub_1D2F22648(v2, v3);
      sub_1D2F2265C(v2, v3);
      uint64_t v8 = v2;
      unint64_t v9 = v3;
    }
    else
    {
      if (v5) {
        goto LABEL_13;
      }
      sub_1D2F2265C(v2, 0);
      uint64_t v8 = v4;
      unint64_t v9 = 0;
    }
    sub_1D2F2265C(v8, v9);
    return 1;
  }
  return v7;
}

unint64_t sub_1D2F3C4D4()
{
  unint64_t result = qword_1EBD616F0;
  if (!qword_1EBD616F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD616F0);
  }
  return result;
}

uint64_t sub_1D2F3C528(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D2F3C584(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D2F3C5D8()
{
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D2F3C620(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D2F1C2F4;
  return sub_1D2F3AE7C(a1, v4, v1 + 24);
}

unint64_t destroy for SiriUserFeedbackLearningPluginRunResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 24);
  if (result >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SiriUserFeedbackLearningPluginRunResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >= 2)
  {
    a1[2] = *v4;
    a1[3] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  }
  return a1;
}

void *assignWithCopy for SiriUserFeedbackLearningPluginRunResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a2[3];
  if (a1[3] >= 2uLL)
  {
    if (v4 >= 2)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D2F3C850((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D2F3C850(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for SiriUserFeedbackLearningPluginRunResult(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 2;
  if (a1[3] >= 2uLL)
  {
    unint64_t v6 = a2[3];
    if (v6 >= 2)
    {
      a1[2] = *v5;
      a1[3] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D2F3C850((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for Locale(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Locale(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginRunResult()
{
  return &type metadata for SiriUserFeedbackLearningPluginRunResult;
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginLaunching.runPlugins(plugins:task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D2F3D1F0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginLaunching.runPlugins(plugins:task:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginLauncher()
{
  return &type metadata for SiriUserFeedbackLearningPluginLauncher;
}

unsigned char *storeEnumTagSinglePayload for SiriUserFeedbackLearningPluginRunResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F3CBD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPluginRunResult.CodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningPluginRunResult.CodingKeys;
}

unint64_t sub_1D2F3CC14()
{
  unint64_t result = qword_1EA698DB0;
  if (!qword_1EA698DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA698DB0);
  }
  return result;
}

unint64_t sub_1D2F3CC6C()
{
  unint64_t result = qword_1EBD61700;
  if (!qword_1EBD61700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD61700);
  }
  return result;
}

unint64_t sub_1D2F3CCC4()
{
  unint64_t result = qword_1EBD616F8;
  if (!qword_1EBD616F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD616F8);
  }
  return result;
}

uint64_t sub_1D2F3CD18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E656C646E7562 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65526E6967756C70 && a2 == 0xEC000000746C7573)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1D2F3CE30(uint64_t a1)
{
  sub_1D2F3C2DC(a1, v1);
}

uint64_t sub_1D2F3CE3C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(int **)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 48);
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_1D2F1D1A0;
  *(void *)(v7 + 40) = v6;
  *(_OWORD *)(v7 + 24) = v8;
  *(void *)(v7 + 16) = a1;
  char v11 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v7 + 48) = v9;
  *unint64_t v9 = v7;
  v9[1] = sub_1D2F3BE90;
  return v11(a1);
}

unint64_t sub_1D2F3CF88()
{
  unint64_t result = qword_1EA698DC8;
  if (!qword_1EA698DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698DC8);
  }
  return result;
}

id sub_1D2F3CFDC(id result, unint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    sub_1D2F22648((uint64_t)result, a2);
    id v6 = a3;
    return a4;
  }
  return result;
}

void sub_1D2F3D024(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    sub_1D2F2265C(a1, a2);
  }
}

uint64_t sub_1D2F3D06C(void *a1)
{
  *(void *)(v1 + 16) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t objectdestroy_10Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1D2F3D100(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  id v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  char v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *char v11 = v2;
  v11[1] = sub_1D2F1D1A0;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA698DD0 + dword_1EA698DD0);
  return v12(a1, v4, v5, v6, v7, v8, v9, v10);
}

void SiriUserFeedbackLearningMLRuntimePlatform.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001918();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65778);
  sub_1D2F3C528(a1, (uint64_t)aBlock);
  uint64_t v7 = sub_1D30018F8();
  os_log_type_t v8 = sub_1D30020A8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v19 = a3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    v20[0] = sub_1D2F09508(0xD000000000000016, 0x80000001D300F590, &v21);
    sub_1D3002318();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1D2F3C528((uint64_t)aBlock, (uint64_t)v20);
    sub_1D3002438();
    sub_1D3001C68();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    id v11 = (id)v20[1];
    id v12 = objc_msgSend(v11, sel_description);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D2F3C584((uint64_t)v20);
    v20[0] = sub_1D2F09508(0, 0xE000000000000000, &v21);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F3C584((uint64_t)aBlock);
    _os_log_impl(&dword_1D2F05000, v7, v8, "SiriUserFeedbackLearningPlatform.%s task: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v10, -1, -1);
    uint64_t v13 = v9;
    a3 = v19;
    MEMORY[0x1D942F2D0](v13, -1, -1);
  }
  else
  {
    sub_1D2F3C584((uint64_t)aBlock);
  }

  uint64_t v14 = self;
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  aBlock[4] = sub_1D2F3E03C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2F3D6E8;
  aBlock[3] = &block_descriptor_2;
  dispatch_semaphore_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performTask_forPluginID_completionHandler_, v15, v16, v18);
  _Block_release(v18);
}

void sub_1D2F3D64C(void *a1, void *a2, void (*a3)(void *))
{
  id v6 = a1;
  id v7 = a2;
  SiriUserFeedbackLearningPlatformResult.init(mlrTaskResult:error:)(a1, a2, &v11);
  os_log_type_t v8 = v12;
  uint64_t v9 = v13;
  v10[0] = v11;
  v10[1] = v12;
  void v10[2] = v13;
  a3(v10);

  swift_bridgeObjectRelease();
}

void sub_1D2F3D6E8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t SiriUserFeedbackLearningMLRuntimePlatform.perform(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return MEMORY[0x1F4188298](sub_1D2F3D794, 0, 0);
}

uint64_t sub_1D2F3D794()
{
  uint64_t v20 = v0;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  sub_1D2F3C528(v1, v0 + 16);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 128) = sub_1D2F09508(0x286D726F66726570, 0xEB00000000293A5FLL, &v16);
    sub_1D3002318();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1D2F3C528(v0 + 16, v0 + 72);
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    sub_1D3002438();
    uint64_t v17 = v19[0];
    unint64_t v18 = v19[1];
    sub_1D3001C68();
    strcpy((char *)v19, "triggerType: ");
    HIWORD(v19[1]) = -4864;
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    id v7 = *(id *)(v0 + 80);
    id v8 = objc_msgSend(v7, sel_description);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();

    uint64_t v9 = v17;
    unint64_t v10 = v18;
    sub_1D2F3C584(v0 + 72);
    *(void *)(v0 + 136) = sub_1D2F09508(v9, v10, &v16);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F3C584(v0 + 16);
    _os_log_impl(&dword_1D2F05000, v3, v4, "SiriUserFeedbackLearningMLRuntimePlugin.%s (async) task: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v6, -1, -1);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }
  else
  {
    sub_1D2F3C584(v0 + 16);
  }

  uint64_t v11 = *(void *)(v0 + 152);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 160) = v12;
  *(void *)(v12 + 16) = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1D2F3DBC0;
  uint64_t v14 = *(void *)(v0 + 144);
  return MEMORY[0x1F41880D8](v14, 0, 0, 0x286D726F66726570, 0xEB00000000293A5FLL, sub_1D2F3E05C, v12, &type metadata for SiriUserFeedbackLearningPlatformResult);
}

uint64_t sub_1D2F3DBC0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1D2F3DCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC48);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  id v7 = self;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1D2F3E22C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2F3D6E8;
  aBlock[3] = &block_descriptor_9;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_performTask_forPluginID_completionHandler_, v8, v9, v12);
  _Block_release(v12);
}

uint64_t sub_1D2F3DEC0(void *a1, void *a2)
{
  id v4 = a1;
  id v5 = a2;
  SiriUserFeedbackLearningPlatformResult.init(mlrTaskResult:error:)(a1, a2, &v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC48);
  return sub_1D3001EE8();
}

void sub_1D2F3DF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1D2F3DF54(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D2F1C2F4;
  v5[18] = a1;
  v5[19] = a2;
  return MEMORY[0x1F4188298](sub_1D2F3D794, 0, 0);
}

uint64_t sub_1D2F3E004()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D2F3E03C(void *a1, void *a2)
{
  sub_1D2F3D64C(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_1D2F3E05C(uint64_t a1)
{
  sub_1D2F3DCD0(a1, *(void *)(v1 + 16));
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlatform.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlatform.perform(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D2F1D1A0;
  return v11(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningMLRuntimePlatform()
{
  return &type metadata for SiriUserFeedbackLearningMLRuntimePlatform;
}

uint64_t sub_1D2F3E198()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC48);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2F3E22C(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC48);
  return sub_1D2F3DEC0(a1, a2);
}

void sub_1D2F3E2B8()
{
  id v0 = objc_msgSend(self, sel_namespaceNameFromId_, 351);
  uint64_t v1 = sub_1D3001B78();
  uint64_t v3 = v2;

  qword_1EBD5F7B0 = v1;
  *(void *)algn_1EBD5F7B8 = v3;
}

uint64_t static TrialConstants.SiriValueInferenceTrialScope.getter@<X0>(void *a1@<X8>)
{
  return sub_1D2F3E468(qword_1EBD5F7C0, &qword_1EBD5F7B0, (uint64_t *)algn_1EBD5F7B8, a1);
}

void sub_1D2F3E348()
{
  id v0 = objc_msgSend(self, sel_namespaceNameFromId_, 354);
  uint64_t v1 = sub_1D3001B78();
  uint64_t v3 = v2;

  qword_1EBD63410 = v1;
  unk_1EBD63418 = v3;
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaTrialScope.getter@<X0>(void *a1@<X8>)
{
  return sub_1D2F3E468(qword_1EBD63428, &qword_1EBD63410, (uint64_t *)&unk_1EBD63418, a1);
}

void sub_1D2F3E3D8()
{
  id v0 = objc_msgSend(self, sel_namespaceNameFromId_, 353);
  uint64_t v1 = sub_1D3001B78();
  uint64_t v3 = v2;

  qword_1EBD5E7B0 = v1;
  *(void *)algn_1EBD5E7B8 = v3;
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformTrialScope.getter@<X0>(void *a1@<X8>)
{
  return sub_1D2F3E468(&qword_1EBD5E7C0, &qword_1EBD5E7B0, (uint64_t *)algn_1EBD5E7B8, a1);
}

uint64_t sub_1D2F3E468@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;
  return swift_bridgeObjectRetain();
}

unint64_t static TrialConstants.ValueInferenceFactorNames.isPICSRestatementAndSuccessfulPhoneCallEnabled.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static TrialConstants.ValueInferenceFactorNames.isPICSEnabledAtRuntimeInSiriVocab.getter()
{
  return 0xD000000000000021;
}

uint64_t static TrialConstants.ValueInferenceFactors.isPICSRestatementAndSuccessfulPhoneCallEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.ValueInferenceFactors.isPICSEnabledAtRuntimeInSiriVocab.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsOfflineLearningEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsSurfacingEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsPartialRepetitionSimilarityThreshold.getter()
{
  type metadata accessor for TrialDoubleFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsWakeWordTrimmingEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsMediaFactors.pimsPhantomTurnRemovalEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

unint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames.isEventBasedSchedulerEnabled.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames.uuflOfflineLearningEnabled.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames.uuflSurfacingEnabled.getter()
{
  return 0xD000000000000014;
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors.isEventBasedSchedulerEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors.uuflOfflineLearningEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

uint64_t static TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors.uuflSurfacingEnabled.getter()
{
  type metadata accessor for TrialFlagFactor(0);
  return swift_initStaticObject();
}

ValueMetadata *type metadata accessor for TrialConstants()
{
  return &type metadata for TrialConstants;
}

ValueMetadata *type metadata accessor for TrialConstants.ValueInferenceFactorNames()
{
  return &type metadata for TrialConstants.ValueInferenceFactorNames;
}

ValueMetadata *type metadata accessor for TrialConstants.ValueInferenceFactors()
{
  return &type metadata for TrialConstants.ValueInferenceFactors;
}

ValueMetadata *type metadata accessor for TrialConstants.SiriPrivateLearningSuggestionsMediaFactors()
{
  return &type metadata for TrialConstants.SiriPrivateLearningSuggestionsMediaFactors;
}

ValueMetadata *type metadata accessor for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames()
{
  return &type metadata for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactorNames;
}

ValueMetadata *type metadata accessor for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors()
{
  return &type metadata for TrialConstants.SiriPrivateLearningSuggestionsPlatformFactors;
}

void sub_1D2F3E7C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

id sub_1D2F3E84C()
{
  id result = sub_1D2F3E86C();
  qword_1EBD5FB08 = (uint64_t)result;
  return result;
}

id sub_1D2F3E86C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D3000F18();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  type metadata accessor for InferredGroundTruthStoreCoreData();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v13 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    sub_1D3000EE8();

    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v2, v7, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15(v9, v2, v3);
      id v16 = objc_allocWithZone(MEMORY[0x1E4F1C120]);
      uint64_t v17 = (void *)sub_1D3000E78();
      id v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      if (v18) {
        return v18;
      }
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_1D2F1CD78((uint64_t)v2, &qword_1EBD63688);
LABEL_7:
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D3001918();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBD65778);
  uint64_t v20 = sub_1D30018F8();
  os_log_type_t v21 = sub_1D30020B8();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v22 = 0;
    _os_log_impl(&dword_1D2F05000, v20, v21, "InferredGroundTruthStoreCoreData: Error loading data base model from bundle", v22, 2u);
    MEMORY[0x1D942F2D0](v22, -1, -1);
  }

  return 0;
}

uint64_t InferredGroundTruthStoreCoreData.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  return InferredGroundTruthStoreCoreData.init(_:)(a1, a2);
}

uint64_t InferredGroundTruthStoreCoreData.init(_:)(uint64_t a1, uint64_t a2)
{
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1D3002108();
  uint64_t v70 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v71 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1D3000F18();
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v60[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = &v60[-v11];
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = &v60[-v14];
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v60[-v16];
  if (qword_1EBD5FB18 != -1) {
    swift_once();
  }
  id v18 = (void *)qword_1EBD5FB08;
  if (!qword_1EBD5FB08)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    type metadata accessor for InferredGroundTruthStoreCoreData();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v66 = v4;
  id v64 = v9;
  uint64_t v69 = v2;
  id v19 = objc_allocWithZone(MEMORY[0x1E4F1C150]);
  id v20 = v18;
  os_log_type_t v21 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v68 = v20;
  id v67 = objc_msgSend(v19, sel_initWithName_managedObjectModel_, v21, v20);

  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C190]), sel_init);
  objc_msgSend(v22, sel_setShouldInferMappingModelAutomatically_, 0);
  objc_msgSend(v22, sel_setShouldMigrateStoreAutomatically_, 0);
  if (a2)
  {
    sub_1D3000E58();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(self, sel_defaultManager);
    sub_1D3000ED8();
    uint64_t v24 = (void *)sub_1D3000E78();
    unint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
    v65(v15, v6);
    aBlock[0] = 0;
    unsigned int v25 = objc_msgSend(v23, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v24, 1, 0, aBlock);

    id v26 = aBlock[0];
    if (!v25)
    {
      uint64_t v27 = v26;
      uint64_t v28 = (void *)sub_1D3000DF8();

      swift_willThrow();
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1D3001918();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBD65778);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v72 + 16))(v12, v17, v6);
      id v30 = v28;
      id v31 = v28;
      os_log_type_t v32 = sub_1D30018F8();
      os_log_type_t v33 = sub_1D30020B8();
      int v34 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v35 = swift_slowAlloc();
        uint64_t v63 = (void *)swift_slowAlloc();
        aBlock[0] = v63;
        *(_DWORD *)uint64_t v35 = 136315394;
        os_log_t v62 = v32;
        sub_1D2F45990((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
        int v61 = v34;
        uint64_t v36 = sub_1D3002738();
        uint64_t v73 = sub_1D2F09508(v36, v37, (uint64_t *)aBlock);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        v65(v12, v6);
        *(_WORD *)(v35 + 12) = 2080;
        uint64_t v73 = (uint64_t)v28;
        id v38 = v28;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
        uint64_t v39 = sub_1D3001BC8();
        uint64_t v73 = sub_1D2F09508(v39, v40, (uint64_t *)aBlock);
        sub_1D3002318();
        swift_bridgeObjectRelease();

        os_log_t v41 = v62;
        _os_log_impl(&dword_1D2F05000, v62, (os_log_type_t)v61, "InferredGroundTruthStoreCoreData: Unable to create the data directory, path=%s, error=%s", (uint8_t *)v35, 0x16u);
        uint64_t v42 = v63;
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v42, -1, -1);
        MEMORY[0x1D942F2D0](v35, -1, -1);
      }
      else
      {

        v65(v12, v6);
      }
    }
    unint64_t v43 = (void *)sub_1D3000E78();
    objc_msgSend(v22, sel_setURL_, v43);

    type metadata accessor for InferredGroundTruthStoreCoreData();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v45 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    type metadata accessor for IncrementalMigrationManager();
    *(void *)(swift_initStackObject() + 16) = v45;
    uint64_t v46 = (uint64_t)v71;
    sub_1D30020F8();
    sub_1D2F92F38((uint64_t)v17, v46, 0xD000000000000010, 0x80000001D300F5B0);
    uint64_t v47 = (void (**)(uint64_t, uint64_t))(v70 + 8);
    swift_release();
    (*v47)(v46, v66);
    v65(v17, v6);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1D3005C00;
  *(void *)(v48 + 32) = v22;
  aBlock[0] = (id)v48;
  sub_1D3001DE8();
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63348);
  id v49 = v22;
  uint64_t v50 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  id v51 = v67;
  objc_msgSend(v67, sel_setPersistentStoreDescriptions_, v50);

  uint64_t v52 = (unsigned char *)swift_allocObject();
  v52[16] = 1;
  uint64_t v53 = v52 + 16;
  aBlock[4] = sub_1D2F3FAB8;
  aBlock[5] = v52;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1D2F3E7C0;
  aBlock[3] = &block_descriptor_3;
  os_log_t v54 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v51, sel_loadPersistentStoresWithCompletionHandler_, v54);
  _Block_release(v54);
  swift_beginAccess();
  if ((*v53 & 1) == 0)
  {

    swift_release();
    goto LABEL_16;
  }
  uint64_t v55 = v69;
  *(void *)(v69 + 24) = v51;
  id v56 = v51;
  id v57 = objc_msgSend(v56, sel_newBackgroundContext);

  *(void *)(v55 + 16) = v57;
  uint64_t v58 = v55;
  swift_release();
  return v58;
}

uint64_t type metadata accessor for InferredGroundTruthStoreCoreData()
{
  return self;
}

uint64_t sub_1D2F3F82C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

void sub_1D2F3F83C(void *a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    swift_beginAccess();
    *(unsigned char *)(a3 + 16) = 0;
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D3001918();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65778);
    id v7 = a2;
    id v8 = a1;
    id v9 = a2;
    id v10 = v8;
    uint64_t v11 = sub_1D30018F8();
    os_log_type_t v12 = sub_1D30020B8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)uint64_t v13 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
      uint64_t v16 = sub_1D30022E8();
      sub_1D2F09508(v16, v17, &v19);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      id v18 = v10;
      sub_1D3002318();
      *uint64_t v14 = v10;

      _os_log_impl(&dword_1D2F05000, v11, v12, "InferredGroundTruthStoreCoreData: Unable to load persistent stores: %s : %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v15, -1, -1);
      MEMORY[0x1D942F2D0](v13, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D2F3FAB8(void *a1, void *a2)
{
  sub_1D2F3F83C(a1, a2, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1D2F3FAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  id v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(void **)(v3 + 16);
  (*(void (**)(char *))(v6 + 16))(v8);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v11[v10], v8, a2);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D2F45010;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1D2F45064;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2F3FE34;
  aBlock[3] = &block_descriptor_9_0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2F3FD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D2F89498(a3, a3);
  uint64_t v5 = *(void *)(a3 - 8);
  swift_allocObject();
  uint64_t v6 = sub_1D3001DF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1D2F8927C(v6);
  sub_1D2F3FFE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F3FE0C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2F3FE34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1D2F3FE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = *(void **)(v4 + 16);
  id v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v4;
  v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D2F450CC;
  *(void *)(v10 + 24) = v9;
  v14[4] = sub_1D2F4651C;
  v14[5] = v10;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_1D2F3FE34;
  v14[3] = &block_descriptor_19;
  uint64_t v11 = _Block_copy(v14);
  id v12 = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlockAndWait_, v11);

  _Block_release(v11);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a1) {
    __break(1u);
  }
  return result;
}

id sub_1D2F3FFE4()
{
  return sub_1D2F43F20();
}

uint64_t sub_1D2F4007C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1D3001EA8();
  id v2 = v1;
  sub_1D3002228();

  return v4;
}

uint64_t sub_1D2F40100()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1D3001EA8();
  id v2 = v1;
  sub_1D3002228();

  return v4;
}

uint64_t sub_1D2F40188()
{
  type metadata accessor for InferredGroundTruthStoreCoreData();
  uint64_t v0 = sub_1D3001EA8();
  sub_1D2F40B64((void (*)(void))sub_1D2F463FC, v0, (uint64_t)&v2);
  uint64_t result = v2;
  if (!v2) {
    return sub_1D3001E38();
  }
  return result;
}

void sub_1D2F40248(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  sub_1D2F0BCB8(0, &qword_1EBD5FC50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD20);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D3004370;
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = sub_1D2F458C8();
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_1D3002058();
  objc_msgSend(v13, sel_setPredicate_, v15);

  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1D3005C00;
  id v17 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v18 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v19 = objc_msgSend(v17, sel_initWithKey_ascending_, v18, 0);

  *(void *)(v16 + 32) = v19;
  sub_1D3001DE8();
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63330);
  id v20 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v20);

  objc_msgSend(v13, sel_setFetchLimit_, a3);
  objc_msgSend(v13, sel_setFetchOffset_, a4);
  os_log_type_t v21 = *(void **)(a5 + 16);
  type metadata accessor for GroundTruthRecord();
  id v22 = v21;
  sub_1D3002238();
  if (v26)
  {
  }
  else
  {

    MEMORY[0x1F4188790](v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC28);
    sub_1D2F46448();
    uint64_t v24 = sub_1D3001D38();
    swift_bridgeObjectRelease();

    *a6 = v24;
  }
}

uint64_t sub_1D2F40584@<X0>(id *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  unint64_t v33 = a3;
  uint64_t v32 = a2;
  uint64_t v8 = sub_1D30022F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v28 - v10;
  id v12 = objc_msgSend(*a1, sel_payload);
  uint64_t v13 = sub_1D3000F68();
  unint64_t v15 = v14;

  sub_1D2F446C0(a4, (uint64_t)v11);
  uint64_t v16 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, a4) == 1)
  {
    uint64_t v31 = a5;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D3001918();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBD65778);
    unint64_t v18 = v33;
    swift_bridgeObjectRetain_n();
    id v19 = sub_1D30018F8();
    os_log_type_t v20 = sub_1D30020B8();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v30 = v15;
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      os_log_t v29 = v19;
      uint64_t v23 = v22;
      uint64_t v35 = v22;
      *(_DWORD *)os_log_type_t v21 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1D2F09508(v32, v18, &v35);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      os_log_t v24 = v29;
      _os_log_impl(&dword_1D2F05000, v29, v20, "InferredGroundTruthStoreCoreData: Cannot decode an inferred ground truth of type %s", v21, 0xCu);
      uint64_t v25 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v23, -1, -1);
      MEMORY[0x1D942F2D0](v21, -1, -1);
      sub_1D2F0D1CC(v13, v30);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1D2F0D1CC(v13, v15);

      uint64_t v25 = 1;
    }
    uint64_t v26 = v31;
  }
  else
  {
    sub_1D2F0D1CC(v13, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a5, v11, a4);
    uint64_t v25 = 0;
    uint64_t v26 = a5;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v26, v25, 1, a4);
}

uint64_t sub_1D2F40900(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v4);
  return 0;
}

uint64_t sub_1D2F40B64@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  a1();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v5(a3, 0, 1, a2);
}

uint64_t sub_1D2F40E68()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1D2F451A4;
  *(void *)(v2 + 24) = v0;
  v6[4] = sub_1D2F4651C;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1D2F3FE34;
  v6[3] = &block_descriptor_26;
  uint64_t v3 = _Block_copy(v6);
  id v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2F40FB0(uint64_t a1)
{
  swift_retain();
  sub_1D2F459D8(0x746E497465736572, 0xEF29286C616E7265, a1);
  return swift_release();
}

void sub_1D2F41010(uint64_t a1)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C018]), sel_initWithFetchRequest_, v4);
  uint64_t v6 = *(void **)(a1 + 16);
  v15[0] = 0;
  id v7 = objc_msgSend(v6, sel_executeRequest_error_, v5, v15);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = v15[0];

    if ((sub_1D2F43F20() & 1) == 0)
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1D3001918();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EBD65778);
      id v11 = sub_1D30018F8();
      os_log_type_t v12 = sub_1D30020B8();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_1D2F05000, v11, v12, "InferredGroundTruthStoreCoreData: Cannot reset store, failed to save", v13, 2u);
        MEMORY[0x1D942F2D0](v13, -1, -1);

        return;
      }
    }
  }
  else
  {
    id v14 = v15[0];
    sub_1D3000DF8();

    swift_willThrow();
  }
}

uint64_t sub_1D2F41218()
{
  id v1 = *(id *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC28);
  sub_1D3002228();

  return v3;
}

uint64_t sub_1D2F41290@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = 0;
  swift_retain();
  sub_1D2F45C38(0xD000000000000022, 0x80000001D300F6C0, 0, 0, 1, &v6, a1);
  uint64_t result = swift_release();
  uint64_t v5 = v6;
  if (!v6) {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1D2F4131C()
{
  id v1 = *(void **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1D2F451D8;
  *(void *)(v2 + 24) = v0;
  v6[4] = sub_1D2F4651C;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1D2F3FE34;
  v6[3] = &block_descriptor_33;
  uint64_t v3 = _Block_copy(v6);
  id v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

void sub_1D2F41464()
{
  uint64_t v2 = v0;
  v120[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v113 = sub_1D30010A8();
  unint64_t v3 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  v112 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(v0 + 16);
  uint64_t v6 = sub_1D2F42504();
  id v108 = v5;

  if (__OFSUB__(v6, 0x100000))
  {
    __break(1u);
  }
  else
  {
    if (((unint64_t)(v6 - 0x100000) & 0x8000000000000000) != 0) {
      return;
    }
    uint64_t v106 = v6 - 0x100000;
    v120[0] = 0;
    swift_retain();
    sub_1D2F45EAC(0xD00000000000001CLL, 0x80000001D300F6A0, (uint64_t *)v120, v2);
    swift_release();
    unint64_t v7 = (unint64_t)v120[0];
    if (!v120[0]) {
      unint64_t v7 = MEMORY[0x1E4FBC860];
    }
    unint64_t v118 = v7;
    unint64_t v1 = v7 >> 62;
    if (!(v7 >> 62))
    {
      uint64_t v8 = *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1D30025A8();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v107 = v2;
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
      goto LABEL_100;
    }
    unint64_t v105 = v1;
    unint64_t v117 = v118 & 0xC000000000000001;
    os_log_type_t v111 = (void (**)(char *, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    *(void *)&long long v10 = 136315394;
    long long v110 = v10;
    uint64_t v109 = MEMORY[0x1E4FBC840] + 8;
    do
    {
      if (v117) {
        id v11 = (id)MEMORY[0x1D942E3A0](v9, v118);
      }
      else {
        id v11 = *(id *)(v118 + 8 * v9 + 32);
      }
      os_log_type_t v12 = v11;
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1D3001918();
      uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EBD65778);
      id v15 = v12;
      uint64_t v16 = sub_1D30018F8();
      os_log_type_t v17 = sub_1D30020B8();
      int v18 = v17;
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v19 = swift_slowAlloc();
        int v115 = v18;
        uint64_t v20 = v19;
        uint64_t v114 = (void *)swift_slowAlloc();
        v120[0] = v114;
        *(_DWORD *)uint64_t v20 = v110;
        id v21 = objc_msgSend(v15, sel_id);
        uint64_t v22 = v112;
        sub_1D3001068();

        sub_1D2F45990(&qword_1EA698E08, MEMORY[0x1E4F27990]);
        uint64_t v23 = v8;
        uint64_t v24 = v113;
        uint64_t v25 = sub_1D3002738();
        uint64_t v116 = v14;
        unint64_t v27 = v26;
        uint64_t v28 = v24;
        uint64_t v8 = v23;
        (*v111)(v22, v28);
        *(void *)(v20 + 4) = sub_1D2F09508(v25, v27, (uint64_t *)v120);

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        id v29 = objc_msgSend(v15, sel_type);
        uint64_t v30 = sub_1D3001B78();
        unint64_t v32 = v31;

        *(void *)(v20 + 14) = sub_1D2F09508(v30, v32, (uint64_t *)v120);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v16, (os_log_type_t)v115, "InferredGroundTruthStoreCoreData: Preparing to delete a GT record with zero payload; id=%s, type=%s",
          (uint8_t *)v20,
          0x16u);
        unint64_t v33 = v114;
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v33, -1, -1);
        MEMORY[0x1D942F2D0](v20, -1, -1);
      }
      else
      {
      }
      ++v9;
    }
    while (v8 != v9);
    swift_bridgeObjectRelease();
    if (v105)
    {
      swift_bridgeObjectRetain();
      unint64_t v3 = sub_1D30025A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v3 = *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v2 = v107;
    if (v3)
    {
      v120[0] = (id)MEMORY[0x1E4FBC860];
      sub_1D3002508();
      if ((v3 & 0x8000000000000000) != 0)
      {
LABEL_102:
        __break(1u);
LABEL_103:
        swift_once();
LABEL_80:
        uint64_t v83 = sub_1D3001918();
        __swift_project_value_buffer(v83, (uint64_t)qword_1EBD65778);
        swift_bridgeObjectRetain();
        long long v84 = sub_1D30018F8();
        os_log_type_t v85 = sub_1D30020A8();
        if (os_log_type_enabled(v84, v85))
        {
          uint64_t v86 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v86 = 134217984;
          if (v8)
          {
            swift_bridgeObjectRetain();
            unint64_t v87 = (void *)sub_1D30025A8();
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v87 = *(void **)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          v120[0] = v87;
          sub_1D3002318();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D2F05000, v84, v85, "InferredGroundTruthStoreCoreData: Deleted %ld records due to store size exceeding the threshold", v86, 0xCu);
          MEMORY[0x1D942F2D0](v86, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return;
      }
      uint64_t v34 = 0;
      do
      {
        if (v117) {
          id v35 = (id)MEMORY[0x1D942E3A0](v34, v118);
        }
        else {
          id v35 = *(id *)(v118 + 8 * v34 + 32);
        }
        uint64_t v36 = v35;
        ++v34;
        id v37 = objc_msgSend(v35, sel_objectID);

        sub_1D30024E8();
        sub_1D3002518();
        sub_1D3002528();
        sub_1D30024F8();
      }
      while (v3 != v34);
    }
    id v38 = objc_allocWithZone(MEMORY[0x1E4F1C018]);
    sub_1D2F0BCB8(0, &qword_1EA698E10);
    uint64_t v39 = (void *)sub_1D3001DA8();
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(v38, sel_initWithObjectIDs_, v39);

    v120[0] = 0;
    id v41 = objc_msgSend(v108, sel_executeRequest_error_, v40, v120);
    if (v41)
    {
      uint64_t v42 = v41;
      id v43 = v120[0];

      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1D30018F8();
      os_log_type_t v45 = sub_1D30020C8();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v8 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134217984;
        swift_bridgeObjectRelease();
        v120[0] = (id)v3;
        sub_1D3002318();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v44, v45, "InferredGroundTruthStoreCoreData: Deleted %ld invalid records with zero payload", (uint8_t *)v8, 0xCu);
        MEMORY[0x1D942F2D0](v8, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      id v46 = v120[0];
      swift_bridgeObjectRelease();
      uint64_t v47 = (void *)sub_1D3000DF8();

      swift_willThrow();
      id v48 = v47;
      id v49 = v47;
      uint64_t v50 = sub_1D30018F8();
      os_log_type_t v51 = sub_1D30020B8();
      uint64_t v8 = v51;
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v53 = (void *)swift_slowAlloc();
        v120[0] = v53;
        *(_DWORD *)uint64_t v52 = 136315138;
        swift_getErrorValue();
        uint64_t v54 = sub_1D30028C8();
        uint64_t v119 = sub_1D2F09508(v54, v55, (uint64_t *)v120);
        sub_1D3002318();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D2F05000, v50, (os_log_type_t)v8, "InferredGroundTruthStoreCoreData: Failed to delete records with zero payload, error=%s", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v53, -1, -1);
        MEMORY[0x1D942F2D0](v52, -1, -1);
      }
      else
      {
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v120[0] = 0;
  swift_retain();
  unint64_t v56 = (unint64_t)"readRecordsWithZeroPayload()";
  sub_1D2F45C38(0xD000000000000022, 0x80000001D300F6C0, 1, 10, 0, (uint64_t *)v120, v2);
  swift_release();
  id v57 = (void *)MEMORY[0x1E4FBC860];
  if (v120[0]) {
    unint64_t v3 = (unint64_t)v120[0];
  }
  else {
    unint64_t v3 = MEMORY[0x1E4FBC860];
  }
  if (!(v3 >> 62))
  {
    uint64_t v58 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v58) {
      goto LABEL_42;
    }
LABEL_54:
    swift_bridgeObjectRelease();
    uint64_t v60 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  uint64_t v58 = sub_1D30025A8();
  swift_bridgeObjectRelease();
  id v57 = (void *)MEMORY[0x1E4FBC860];
  if (!v58) {
    goto LABEL_54;
  }
LABEL_42:
  v120[0] = v57;
  sub_1D2F0A028(0, v58 & ~(v58 >> 63), 0);
  if (v58 < 0)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  unint64_t v118 = (unint64_t)"readRecordsWithZeroPayload()";
  uint64_t v59 = 0;
  uint64_t v60 = v120[0];
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v61 = (id)MEMORY[0x1D942E3A0](v59, v3);
    }
    else {
      id v61 = *(id *)(v3 + 8 * v59 + 32);
    }
    os_log_t v62 = v61;
    id v63 = objc_msgSend(v61, sel_payload);
    uint64_t v8 = sub_1D3000F68();
    uint64_t v65 = v64;

    v120[0] = v60;
    unint64_t v67 = v60[2];
    unint64_t v66 = v60[3];
    if (v67 >= v66 >> 1)
    {
      sub_1D2F0A028(v66 > 1, v67 + 1, 1);
      uint64_t v60 = v120[0];
    }
    ++v59;
    void v60[2] = v67 + 1;
    id v68 = &v60[2 * v67];
    v68[4] = v8;
    v68[5] = v65;
  }
  while (v58 != v59);
  swift_bridgeObjectRelease();
  uint64_t v2 = v107;
  unint64_t v56 = v118;
LABEL_55:
  uint64_t v69 = sub_1D2F42E80((uint64_t)v60);
  swift_bridgeObjectRelease();
  if (v69 <= 9)
  {
    unint64_t v70 = 5;
  }
  else if ((uint64_t)((unint64_t)v106 / (v69 / 0xAuLL)) <= 0)
  {
    unint64_t v70 = 5;
  }
  else
  {
    unint64_t v70 = (unint64_t)v106 / (v69 / 0xAuLL);
  }
  v120[0] = 0;
  swift_retain();
  sub_1D2F45C38(0xD000000000000022, v56 | 0x8000000000000000, 1, v70, 0, (uint64_t *)v120, v2);
  swift_release();
  uint64_t v71 = (void *)MEMORY[0x1E4FBC860];
  if (v120[0]) {
    unint64_t v72 = (unint64_t)v120[0];
  }
  else {
    unint64_t v72 = MEMORY[0x1E4FBC860];
  }
  if (!(v72 >> 62))
  {
    unint64_t v3 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_65;
    }
LABEL_73:
    swift_bridgeObjectRelease();
    unint64_t v3 = MEMORY[0x1E4FBC860];
    goto LABEL_74;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_1D30025A8();
  swift_bridgeObjectRelease();
  uint64_t v71 = (void *)MEMORY[0x1E4FBC860];
  if (!v3) {
    goto LABEL_73;
  }
LABEL_65:
  v120[0] = v71;
  sub_1D3002508();
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t v73 = 0;
  do
  {
    if ((v72 & 0xC000000000000001) != 0) {
      id v74 = (id)MEMORY[0x1D942E3A0](v73, v72);
    }
    else {
      id v74 = *(id *)(v72 + 8 * v73 + 32);
    }
    uint64_t v75 = v74;
    ++v73;
    id v76 = objc_msgSend(v74, sel_objectID);

    sub_1D30024E8();
    sub_1D3002518();
    sub_1D3002528();
    sub_1D30024F8();
  }
  while (v3 != v73);
  unint64_t v3 = (unint64_t)v120[0];
  swift_bridgeObjectRelease();
LABEL_74:
  uint64_t v8 = v3 >> 62;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v103 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v103) {
      goto LABEL_78;
    }
  }
  else if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_78;
  }
  id v77 = objc_allocWithZone(MEMORY[0x1E4F1C018]);
  sub_1D2F0BCB8(0, &qword_1EA698E10);
  swift_bridgeObjectRetain();
  uint64_t v78 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  id v79 = objc_msgSend(v77, sel_initWithObjectIDs_, v78);

  v120[0] = 0;
  id v80 = objc_msgSend(v108, sel_executeRequest_error_, v79, v120);
  if (!v80)
  {
    id v92 = v120[0];
    swift_bridgeObjectRelease();
    uint64_t v93 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v94 = sub_1D3001918();
    __swift_project_value_buffer(v94, (uint64_t)qword_1EBD65778);
    id v95 = v93;
    id v96 = v93;
    unint64_t v97 = sub_1D30018F8();
    os_log_type_t v98 = sub_1D30020B8();
    if (os_log_type_enabled(v97, v98))
    {
      unint64_t v99 = (uint8_t *)swift_slowAlloc();
      uint64_t v100 = (void *)swift_slowAlloc();
      v120[0] = v100;
      *(_DWORD *)unint64_t v99 = 136315138;
      swift_getErrorValue();
      uint64_t v101 = sub_1D30028C8();
      uint64_t v119 = sub_1D2F09508(v101, v102, (uint64_t *)v120);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v97, v98, "InferredGroundTruthStoreCoreData: Cannot delete oldest records %s", v99, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v100, -1, -1);
      MEMORY[0x1D942F2D0](v99, -1, -1);
    }
    else
    {
    }
    return;
  }
  unint64_t v81 = v80;
  id v82 = v120[0];

LABEL_78:
  if (sub_1D2F43F20())
  {
    if (qword_1EBD63A48 == -1) {
      goto LABEL_80;
    }
    goto LABEL_103;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v88 = sub_1D3001918();
  __swift_project_value_buffer(v88, (uint64_t)qword_1EBD65778);
  uint64_t v89 = sub_1D30018F8();
  os_log_type_t v90 = sub_1D30020B8();
  if (os_log_type_enabled(v89, v90))
  {
    unint64_t v91 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v91 = 0;
    _os_log_impl(&dword_1D2F05000, v89, v90, "InferredGroundTruthStoreCoreData: Cannot save context with deleted oldest records", v91, 2u);
    MEMORY[0x1D942F2D0](v91, -1, -1);
  }
}

char *sub_1D2F42504()
{
  unint64_t v1 = v0;
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  id v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v60 - v6;
  uint64_t v8 = sub_1D3000F18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(v1, sel_persistentStoreCoordinator);
  if (!v12)
  {
LABEL_50:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_51:
    sub_1D2F1CD78((uint64_t)v7, &qword_1EBD63688);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_1D3001918();
    __swift_project_value_buffer(v56, (uint64_t)qword_1EBD65778);
    id v57 = sub_1D30018F8();
    os_log_type_t v58 = sub_1D30020B8();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl(&dword_1D2F05000, v57, v58, "NSManagedObjectContext: Failed to get store URL", v59, 2u);
      MEMORY[0x1D942F2D0](v59, -1, -1);
    }

    return 0;
  }
  uint64_t v13 = v12;
  id v14 = objc_msgSend(v12, sel_persistentStores);

  sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD5FC58);
  unint64_t v15 = sub_1D3001DC8();

  if (v15 >> 62) {
    goto LABEL_48;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  while (1)
  {
    if ((v15 & 0xC000000000000001) != 0)
    {
      id v16 = (id)MEMORY[0x1D942E3A0](0, v15);
    }
    else
    {
      if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_59;
      }
      id v16 = *(id *)(v15 + 32);
    }
    os_log_type_t v17 = v16;
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v17, sel_URL);

    if (v18)
    {
      sub_1D3000EE8();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
    }
    sub_1D2F46394((uint64_t)v5, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
      goto LABEL_51;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v19 = self;
    id v20 = objc_msgSend(v19, sel_defaultManager);
    sub_1D3000F08();
    id v21 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    v63[0] = 0;
    id v22 = objc_msgSend(v20, sel_attributesOfItemAtPath_error_, v21, v63);

    id v23 = v63[0];
    if (!v22) {
      goto LABEL_15;
    }
    type metadata accessor for FileAttributeKey(0);
    id v5 = v24;
    sub_1D2F45990(&qword_1EBD5FC68, type metadata accessor for FileAttributeKey);
    uint64_t v25 = sub_1D3001A88();
    id v26 = v23;

    unint64_t v27 = (void *)*MEMORY[0x1E4F28390];
    if (*(void *)(v25 + 16))
    {
      id v28 = v27;
      unint64_t v29 = sub_1D2F0DEE8((uint64_t)v28);
      if (v30)
      {
        sub_1D2F0BD44(*(void *)(v25 + 56) + 32 * v29, (uint64_t)&v64);
      }
      else
      {
        long long v64 = 0u;
        long long v65 = 0u;
      }
    }
    else
    {
      long long v64 = 0u;
      long long v65 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v65 + 1)) {
      break;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_30;
    }
    id v61 = v27;
    id v62 = v63[0];
    id v41 = objc_msgSend(v19, sel_defaultManager);
    v63[0] = (id)sub_1D3000F08();
    v63[1] = v42;
    sub_1D3001C68();
    id v43 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    v63[0] = 0;
    unint64_t v15 = (unint64_t)objc_msgSend(v41, sel_attributesOfItemAtPath_error_, v43, v63);

    id v44 = v63[0];
    if (!v15)
    {
LABEL_15:
      id v31 = v63[0];
      unint64_t v15 = sub_1D3000DF8();

      swift_willThrow();
      if (qword_1EBD63A48 == -1)
      {
LABEL_16:
        uint64_t v32 = sub_1D3001918();
        __swift_project_value_buffer(v32, (uint64_t)qword_1EBD65778);
        unint64_t v33 = (id *)(id)v15;
        uint64_t v34 = (id *)(id)v15;
        id v35 = sub_1D30018F8();
        os_log_type_t v36 = sub_1D30020B8();
        if (os_log_type_enabled(v35, v36))
        {
          id v37 = (uint8_t *)swift_slowAlloc();
          uint64_t v38 = swift_slowAlloc();
          *(void *)&long long v64 = v38;
          *(_DWORD *)id v37 = 136315138;
          id v62 = v37 + 4;
          swift_getErrorValue();
          uint64_t v39 = sub_1D30028C8();
          v63[0] = (id)sub_1D2F09508(v39, v40, (uint64_t *)&v64);
          sub_1D3002318();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1D2F05000, v35, v36, "NSManagedObjectContext: Cannot determine store size %s", v37, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v38, -1, -1);
          MEMORY[0x1D942F2D0](v37, -1, -1);
        }
        else
        {
        }
        goto LABEL_35;
      }
LABEL_59:
      swift_once();
      goto LABEL_16;
    }
    unint64_t v7 = (char *)sub_1D3001A88();
    id v45 = v44;

    if (*((void *)v7 + 2))
    {
      id v5 = (char *)v61;
      unint64_t v46 = sub_1D2F0DEE8((uint64_t)v5);
      if (v47)
      {
        sub_1D2F0BD44(*((void *)v7 + 7) + 32 * v46, (uint64_t)&v64);
      }
      else
      {
        long long v64 = 0u;
        long long v65 = 0u;
      }
    }
    else
    {
      long long v64 = 0u;
      long long v65 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void (**)(char *, uint64_t))(v9 + 8);
    v9 += 8;
    v52(v11, v8);
    if (!*((void *)&v65 + 1))
    {
      sub_1D2F1CD78((uint64_t)&v64, &qword_1EBD635B8);
LABEL_44:
      uint64_t v53 = 0;
      goto LABEL_45;
    }
    if (!swift_dynamicCast()) {
      goto LABEL_44;
    }
    uint64_t v53 = (char *)v63[0];
LABEL_45:
    uint64_t result = &v53[(void)v62];
    if (!__OFADD__(v62, v53)) {
      return result;
    }
    __break(1u);
LABEL_48:
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v55) {
      goto LABEL_49;
    }
  }
  sub_1D2F1CD78((uint64_t)&v64, &qword_1EBD635B8);
LABEL_30:
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1D3001918();
  __swift_project_value_buffer(v48, (uint64_t)qword_1EBD65778);
  id v49 = sub_1D30018F8();
  os_log_type_t v50 = sub_1D30020B8();
  if (os_log_type_enabled(v49, v50))
  {
    os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v51 = 0;
    _os_log_impl(&dword_1D2F05000, v49, v50, "NSManagedObjectContext: Failed to get store size", v51, 2u);
    MEMORY[0x1D942F2D0](v51, -1, -1);
  }

LABEL_35:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return 0;
}

uint64_t sub_1D2F42E80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t result = 0;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    while (2)
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      unint64_t v7 = (unint64_t)*v4 >> 62;
      v4 += 2;
      uint64_t v8 = 0;
      switch(v7)
      {
        case 1uLL:
          LODWORD(v8) = HIDWORD(v5) - v5;
          if (__OFSUB__(HIDWORD(v5), v5)) {
            goto LABEL_13;
          }
          uint64_t v8 = (int)v8;
LABEL_8:
          BOOL v12 = __OFADD__(result, v8);
          result += v8;
          if (v12)
          {
            __break(1u);
LABEL_13:
            __break(1u);
LABEL_14:
            __break(1u);
            JUMPOUT(0x1D2F42F14);
          }
          if (!--v1) {
            return result;
          }
          continue;
        case 2uLL:
          uint64_t v11 = v5 + 16;
          uint64_t v10 = *(void *)(v5 + 16);
          uint64_t v9 = *(void *)(v11 + 8);
          BOOL v12 = __OFSUB__(v9, v10);
          uint64_t v8 = v9 - v10;
          if (!v12) {
            goto LABEL_8;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_8;
        default:
          uint64_t v8 = BYTE6(v6);
          goto LABEL_8;
      }
    }
  }
  return 0;
}

uint64_t sub_1D2F42F24()
{
  id v1 = *(id *)(v0 + 16);
  sub_1D3002228();

  return v3;
}

uint64_t sub_1D2F42F94()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unsigned __int8 v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_1D2F0BCB8(0, &qword_1EBD5FC50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD20);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D3004380;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1D2F458C8();
  *(void *)(v5 + 32) = 25705;
  *(void *)(v5 + 40) = 0xE200000000000000;
  uint64_t v6 = sub_1D3001048();
  *(void *)(v5 + 96) = sub_1D2F0BCB8(0, &qword_1EA698DF8);
  *(void *)(v5 + 104) = sub_1D2F4591C((unint64_t *)&qword_1EA698E00, &qword_1EA698DF8);
  *(void *)(v5 + 72) = v6;
  uint64_t v7 = sub_1D3002058();
  objc_msgSend(v4, sel_setPredicate_, v7);

  swift_retain();
  id v8 = v4;
  LOBYTE(v7) = sub_1D2F46110(0xD000000000000015, 0x80000001D300F680, v1);
  swift_release();

  if (v7) {
    unsigned __int8 v9 = sub_1D2F43F20();
  }
  else {
    unsigned __int8 v9 = 0;
  }

  return v9 & 1;
}

void sub_1D2F4316C(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  id v4 = *(void **)(a1 + 16);
  type metadata accessor for GroundTruthRecord();
  id v5 = v4;
  unint64_t v6 = sub_1D3002238();

  if (!v2)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1D30025A8();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v9 = (id)MEMORY[0x1D942E3A0](i, v6);
          }
          else {
            id v9 = *(id *)(v6 + 8 * i + 32);
          }
          uint64_t v10 = v9;
          objc_msgSend(v5, sel_deleteObject_, v9);
        }
      }
    }
    swift_bridgeObjectRelease_n();
    *a2 = v7 != 0;
  }
}

uint64_t sub_1D2F432AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](a1);
  id v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(void **)(v3 + 16);
  (*(void (**)(char *))(v6 + 16))(v8);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v11[v10], v8, a2);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D2F452CC;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1D2F4651C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2F3FE34;
  aBlock[3] = &block_descriptor_43;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlockAndWait_, v13);

  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_1D2F434D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v23 = a1;
  uint64_t v26 = sub_1D30010A8();
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v8 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v27 = objc_msgSend(v7, sel_initWithEntityName_, v8);

  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D3006540;
  sub_1D2F0BCB8(0, &qword_1EBD5FC50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD20);
  uint64_t v10 = swift_allocObject();
  long long v24 = xmmword_1D3004380;
  *(_OWORD *)(v10 + 16) = xmmword_1D3004380;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1D2F458C8();
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = 25705;
  *(void *)(v10 + 40) = 0xE200000000000000;
  uint64_t v12 = v25;
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(v25, a3);
  uint64_t v13 = sub_1D3001048();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
  *(void *)(v10 + 96) = sub_1D2F0BCB8(0, &qword_1EA698DF8);
  *(void *)(v10 + 104) = sub_1D2F4591C((unint64_t *)&qword_1EA698E00, &qword_1EA698DF8);
  *(void *)(v10 + 72) = v13;
  *(void *)(v9 + 32) = sub_1D3002058();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v24;
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = v11;
  *(void *)(v14 + 32) = 1701869940;
  *(void *)(v14 + 40) = 0xE400000000000000;
  uint64_t v16 = v23;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(v12, a3);
  *(void *)(v14 + 96) = v15;
  *(void *)(v14 + 104) = v11;
  *(void *)(v14 + 72) = v17;
  *(void *)(v14 + 80) = v18;
  *(void *)(v9 + 40) = sub_1D3002058();
  uint64_t v34 = v9;
  sub_1D3001DE8();
  uint64_t v19 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

  id v21 = v27;
  objc_msgSend(v27, sel_setPredicate_, v20);

  uint64_t v29 = v12;
  uint64_t v30 = a3;
  uint64_t v31 = v28;
  id v32 = v21;
  uint64_t v33 = v16;
  sub_1D2F40900(0xD000000000000012, 0x80000001D300F660, (void (*)(uint64_t *__return_ptr))sub_1D2F4596C);
}

void sub_1D2F43880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v66 = a5;
  uint64_t v63 = a3;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v62 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a4;
  uint64_t v65 = *(void *)(a4 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v56 - v15;
  uint64_t v17 = *(void **)(a1 + 16);
  type metadata accessor for GroundTruthRecord();
  id v18 = v17;
  unint64_t v19 = sub_1D3002238();

  if (v5) {
    return;
  }
  os_log_type_t v58 = v11;
  uint64_t v60 = v16;
  id v61 = v14;
  uint64_t v20 = v8;
  uint64_t v21 = v65;
  unint64_t v22 = v66;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_4:
      sub_1D3000CF8();
      swift_allocObject();
      sub_1D3000CE8();
      uint64_t v65 = sub_1D3000CD8();
      unint64_t v66 = v24;
      uint64_t v59 = 0;
      swift_release();
      if (v23 < 1)
      {
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = 0;
        do
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v26 = (id)MEMORY[0x1D942E3A0](v25, v19);
          }
          else {
            id v26 = *(id *)(v19 + 8 * v25 + 32);
          }
          id v27 = v26;
          ++v25;
          uint64_t v28 = (void *)sub_1D3000F58();
          objc_msgSend(v27, sel_setPayload_, v28);
        }
        while (v23 != v25);
        swift_bridgeObjectRelease_n();
        if (sub_1D2F43F20())
        {
          sub_1D2F0D1CC(v65, v66);
          return;
        }
        if (qword_1EBD63A48 == -1) {
          goto LABEL_13;
        }
      }
      swift_once();
LABEL_13:
      uint64_t v29 = sub_1D3001918();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBD65778);
      uint64_t v30 = sub_1D30018F8();
      os_log_type_t v31 = sub_1D30020B8();
      if (os_log_type_enabled(v30, v31))
      {
        id v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v32 = 0;
        _os_log_impl(&dword_1D2F05000, v30, v31, "InferredGroundTruthStoreCoreData: Cannot save context after updating records", v32, 2u);
        MEMORY[0x1D942F2D0](v32, -1, -1);
      }
      sub_1D2F0D1CC(v65, v66);

      return;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23) {
      goto LABEL_4;
    }
  }
  uint64_t v59 = 0;
  swift_bridgeObjectRelease();
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1D3001918();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EBD65778);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  id v35 = v60;
  uint64_t v37 = v63;
  uint64_t v36 = v64;
  v34(v60, v63, v64);
  v34(v61, v37, v36);
  uint64_t v38 = sub_1D30018F8();
  os_log_type_t v39 = sub_1D30020B8();
  int v40 = v39;
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v41 = swift_slowAlloc();
    LODWORD(v63) = v40;
    uint64_t v42 = v41;
    uint64_t v65 = swift_slowAlloc();
    uint64_t v68 = v65;
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t v56 = v42 + 4;
    os_log_t v57 = v38;
    unint64_t v43 = v22;
    id v44 = *(void (**)(uint64_t, unint64_t))(v22 + 48);
    id v45 = v58;
    v44(v36, v43);
    sub_1D2F45990(&qword_1EA698E08, MEMORY[0x1E4F27990]);
    uint64_t v46 = sub_1D3002738();
    unint64_t v48 = v47;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v20);
    uint64_t v67 = sub_1D2F09508(v46, v48, &v68);
    id v49 = v61;
    sub_1D3002318();
    swift_bridgeObjectRelease();
    os_log_type_t v50 = *(void (**)(char *, uint64_t))(v21 + 8);
    v50(v60, v36);
    *(_WORD *)(v42 + 12) = 2080;
    uint64_t v51 = (*(uint64_t (**)(uint64_t, unint64_t))(v43 + 56))(v36, v43);
    uint64_t v67 = sub_1D2F09508(v51, v52, &v68);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    v50(v49, v36);
    os_log_t v53 = v57;
    _os_log_impl(&dword_1D2F05000, v57, (os_log_type_t)v63, "InferredGroundTruthStoreCoreData: No matching record found to update with id=%s and type=%s", (uint8_t *)v42, 0x16u);
    uint64_t v54 = v65;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v54, -1, -1);
    MEMORY[0x1D942F2D0](v42, -1, -1);
  }
  else
  {
    uint64_t v55 = *(void (**)(char *, uint64_t))(v21 + 8);
    v55(v35, v36);
    v55(v61, v36);
  }
}

id sub_1D2F43F18()
{
  return *(id *)(v0 + 24);
}

id sub_1D2F43F20()
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 16);
  v17[0] = 0;
  id v2 = objc_msgSend(v1, sel_save_, v17);
  if (v2)
  {
    id v3 = v17[0];
  }
  else
  {
    id v4 = v17[0];
    uint64_t v5 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D3001918();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65778);
    id v7 = v5;
    id v8 = v5;
    uint64_t v9 = sub_1D30018F8();
    os_log_type_t v10 = sub_1D30020B8();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      v17[0] = v12;
      *(_DWORD *)unint64_t v11 = 136315138;
      id v13 = v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v14 = sub_1D3001BC8();
      sub_1D2F09508(v14, v15, (uint64_t *)v17);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v9, v10, "InferredGroundTruthStoreCoreData: Unresolved error in save changes error=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v12, -1, -1);
      MEMORY[0x1D942F2D0](v11, -1, -1);
    }
    else
    {
    }
  }
  return v2;
}

id sub_1D2F44180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v43 = v3;
  uint64_t v44 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v42 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_1D30010A8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D3001018();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D3001008();
  sub_1D3000FE8();
  double v21 = v20;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  uint64_t v23 = sub_1D2F45534(a1);
  if (v24 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D3001918();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBD65778);
    uint64_t v26 = v44;
    id v27 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
    v27(v11, a1, a2);
    uint64_t v28 = sub_1D30018F8();
    os_log_type_t v29 = sub_1D30020B8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v46 = v43;
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v41 = v30 + 4;
      v27(v42, (uint64_t)v11, a2);
      uint64_t v31 = sub_1D3001BC8();
      uint64_t v45 = sub_1D2F09508(v31, v32, &v46);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, a2);
      _os_log_impl(&dword_1D2F05000, v28, v29, "InferredGroundTruthStoreCoreData: Cannot build a database record for an inferred ground truth:%s", v30, 0xCu);
      uint64_t v33 = v43;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v33, -1, -1);
      MEMORY[0x1D942F2D0](v30, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, a2);
    }

    return 0;
  }
  else
  {
    unint64_t v34 = v24;
    uint64_t v44 = v23;
    type metadata accessor for GroundTruthRecord();
    uint64_t v42 = (char *)v22;
    id v35 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(void *)(v43 + 16));
    (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
    uint64_t v36 = (void *)sub_1D3001048();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    objc_msgSend(v35, sel_setId_, v36);

    objc_msgSend(v35, sel_setTimestamp_, floor(v21 / 86400.0) * 86400.0);
    uint64_t v37 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    objc_msgSend(v35, sel_setType_, v37);

    uint64_t v38 = v44;
    os_log_type_t v39 = (void *)sub_1D3000F58();
    objc_msgSend(v35, sel_setPayload_, v39);

    sub_1D2F2276C(v38, v34);
  }
  return v35;
}

uint64_t sub_1D2F446C0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  sub_1D3000C98();
  swift_allocObject();
  sub_1D3000C88();
  sub_1D3000C78();
  swift_release();
  id v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  return v4(a2, 0, 1, a1);
}

void sub_1D2F44A60(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  id v10 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v11 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D3005C00;
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63330);
  swift_getKeyPath();
  *(void *)(v13 + 32) = sub_1D30020D8();
  sub_1D3001DE8();
  uint64_t v14 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setSortDescriptors_, v14);

  if ((a3 & 1) == 0) {
    objc_msgSend(v12, sel_setFetchLimit_, a2);
  }
  unint64_t v15 = *(void **)(a5 + 16);
  type metadata accessor for GroundTruthRecord();
  id v16 = v15;
  uint64_t v17 = sub_1D3002238();
  if (v5)
  {
  }
  else
  {
    uint64_t v18 = v17;

    *a4 = v18;
    swift_bridgeObjectRelease();
  }
}

void sub_1D2F44C14(uint64_t *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1D2F0BCB8(0, &qword_1EBD5FC50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD20);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D3004380;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1D2F458C8();
  *(void *)(v8 + 32) = 0x64616F6C796170;
  *(void *)(v8 + 40) = 0xE700000000000000;
  uint64_t v9 = sub_1D3000F58();
  *(void *)(v8 + 96) = sub_1D2F0BCB8(0, &qword_1EBD63358);
  *(void *)(v8 + 104) = sub_1D2F4591C(&qword_1EA698E18, &qword_1EBD63358);
  *(void *)(v8 + 72) = v9;
  id v10 = (void *)sub_1D3002058();
  objc_msgSend(v7, sel_setPredicate_, v10);

  unint64_t v11 = *(void **)(a2 + 16);
  type metadata accessor for GroundTruthRecord();
  id v12 = v11;
  uint64_t v13 = sub_1D3002238();
  if (v2)
  {
  }
  else
  {
    uint64_t v14 = v13;

    *a1 = v14;
    swift_bridgeObjectRelease();
  }
}

uint64_t InferredGroundTruthStoreCoreData.deinit()
{
  return v0;
}

uint64_t InferredGroundTruthStoreCoreData.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F44E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2F3FAD8(a1, a2, a3);
}

uint64_t sub_1D2F44E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2F3FE5C(a1, a2, a3);
}

uint64_t sub_1D2F44EAC()
{
  return sub_1D2F4007C();
}

uint64_t sub_1D2F44ED0()
{
  return sub_1D2F40100();
}

uint64_t sub_1D2F44EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2F432AC(a1, a2, a3);
}

uint64_t sub_1D2F44F18()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  sub_1D3002228();

  return v3;
}

uint64_t sub_1D2F44F8C()
{
  return sub_1D2F40E68();
}

uint64_t sub_1D2F44FB0()
{
  return sub_1D2F4131C();
}

uint64_t sub_1D2F44FD4(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1D2F45010()
{
  return sub_1D2F3FD04(*(void *)(v0 + 32), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t sub_1D2F45054()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2F45064()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D2F4508C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

id sub_1D2F450CC()
{
  return sub_1D2F3FFE4();
}

uint64_t sub_1D2F450F8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2F45108@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D2F40188();
  *a1 = result;
  return result;
}

uint64_t sub_1D2F45158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D2F40188();
  *a1 = result;
  return result;
}

uint64_t sub_1D2F451A4()
{
  return sub_1D2F40FB0(v0);
}

uint64_t sub_1D2F451AC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2F451BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D2F41290(v1, a1);
}

uint64_t sub_1D2F451DC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2F451EC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1D2F464D8(a1);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1D2F452CC()
{
  sub_1D2F434D8(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D2F45330()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t method lookup function for InferredGroundTruthStoreCoreData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InferredGroundTruthStoreCoreData);
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.write<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.read<A>(type:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.read<A>(type:limit:offset:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.readAllRawData()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.deleteOldestRecordsIfNeeded()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.delete(uuid:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.update<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of InferredGroundTruthStoreCoreData.getPersistentContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t sub_1D2F454DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1D2F45534(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  MEMORY[0x1F4188790](v1);
  sub_1D3000CF8();
  swift_allocObject();
  sub_1D3000CE8();
  uint64_t v2 = sub_1D3000CD8();
  swift_release();
  return v2;
}

unint64_t sub_1D2F458C8()
{
  unint64_t result = qword_1EBD5FC10;
  if (!qword_1EBD5FC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5FC10);
  }
  return result;
}

uint64_t sub_1D2F4591C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D2F0BCB8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D2F4596C()
{
  sub_1D2F43880(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D2F45990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2F459D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 0;
}

uint64_t sub_1D2F45C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, uint64_t a7)
{
  return 0;
}

uint64_t sub_1D2F45EAC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return 0;
}

BOOL sub_1D2F46110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D2F4316C(a3, &v4);
  return v4;
}

char *keypath_get_selector_timestamp()
{
  return sel_timestamp;
}

uint64_t sub_1D2F46394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D2F463FC(uint64_t *a1@<X8>)
{
  sub_1D2F40248(v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_1D2F46424@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2F40584(a1, *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), a2);
}

unint64_t sub_1D2F46448()
{
  unint64_t result = qword_1EBD5FC30;
  if (!qword_1EBD5FC30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBD5FC28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5FC30);
  }
  return result;
}

void sub_1D2F464A4(uint64_t a1)
{
}

uint64_t sub_1D2F464D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D2F42F94();
  *a1 = result & 1;
  return result;
}

uint64_t TrialFactorResolving.resolveFlag(factor:scope:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, void *, void, _UNKNOWN **, uint64_t, uint64_t))(a4 + 16))(&var1, a1, v8, MEMORY[0x1E4FBB390], &protocol witness table for Bool, a3, a4);
  if (!v4) {
    char v6 = var1;
  }
  return v6 & 1;
}

double TrialFactorResolving.resolveDoubleFactor(factor:scope:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2[1];
  v7[0] = *a2;
  v7[1] = v5;
  (*(void (**)(double *__return_ptr, uint64_t, void *, void, _UNKNOWN **, uint64_t, uint64_t))(a4 + 16))(&v8, a1, v7, MEMORY[0x1E4FBB3D0], &protocol witness table for Double, a3, a4);
  if (!v4) {
    return v8;
  }
  return result;
}

uint64_t dispatch thunk of TrialFactorResolver.resolveFlag(factor:scope:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))() & 1;
}

uint64_t dispatch thunk of TrialFactorResolver.resolveDoubleFactor(factor:scope:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TrialFactorResolver.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialFactorResolving.resolveFactor<A>(factor:scope:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_1D2F466A4(uint64_t a1, void *a2, uint64_t a3)
{
  return TrialFactorResolving.resolveFlag(factor:scope:)(a1, a2, a3, (uint64_t)&protocol witness table for TRIClient) & 1;
}

double sub_1D2F466C8(uint64_t a1, void *a2, uint64_t a3)
{
  return TrialFactorResolving.resolveDoubleFactor(factor:scope:)(a1, a2, a3, (uint64_t)&protocol witness table for TRIClient);
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000013;
  *(void *)(result + 24) = 0x80000001D300F720;
  return result;
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0xD000000000000013;
  *(void *)(v0 + 24) = 0x80000001D300F720;
  return result;
}

uint64_t sub_1D2F4674C(id *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  id v80 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001018();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v77 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v78 = (char *)&v72 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698CF8);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (uint64_t *)((char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v13 = sub_1D3000DC8();
  unint64_t v81 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v79 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *a1;
  id v16 = objc_msgSend(v15, sel_intent);
  uint64_t v17 = sub_1D2F76438();
  if (!v18) {
    goto LABEL_13;
  }
  uint64_t v20 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  if (v17 == v20 && v18 == v19)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_13;
    }
  }
  id v22 = objc_msgSend(v16, sel_parametersByName);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v74 = v6;
    uint64_t v75 = v5;
    uint64_t v24 = sub_1D3001A88();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1D3004380;
    uint64_t v26 = v15;
    uint64_t v27 = type metadata accessor for MTUpdateAlarmEventFeature.EventType(0);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v20;
    *(void *)(v28 + 24) = v19;
    *(void *)(v25 + 56) = v27;
    *(void *)(v25 + 64) = sub_1D2F472B4(&qword_1EA698E28, (void (*)(uint64_t))type metadata accessor for MTUpdateAlarmEventFeature.EventType);
    *(void *)(v25 + 32) = v28;
    swift_bridgeObjectRetain();
    id v76 = v26;
    unsigned __int8 v29 = objc_msgSend(v26, sel__donatedBySiri);
    uint64_t v30 = type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(0);
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = v29;
    *(void *)(v25 + 96) = v30;
    *(void *)(v25 + 104) = sub_1D2F472B4(&qword_1EA698E30, (void (*)(uint64_t))type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri);
    *(void *)(v25 + 72) = v31;
    if (*(void *)(v24 + 16) && (unint64_t v32 = sub_1D2F0DC98(0x6C6562616CLL, 0xE500000000000000), (v33 & 1) != 0))
    {
      sub_1D2F0BD44(*(void *)(v24 + 56) + 32 * v32, (uint64_t)&v84);
      if (swift_dynamicCast())
      {
        unint64_t v34 = v82;
        uint64_t v35 = v83;
        uint64_t v36 = type metadata accessor for MTUpdateAlarmEventFeature.AlarmName(0);
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v34;
        *(void *)(v37 + 24) = v35;
        unint64_t v39 = *(void *)(v25 + 16);
        unint64_t v38 = *(void *)(v25 + 24);
        unint64_t v73 = v39 + 1;
        if (v39 >= v38 >> 1) {
          uint64_t v25 = (uint64_t)sub_1D2F27F00((void *)(v38 > 1), v39 + 1, 1, (void *)v25);
        }
        int v40 = v76;
        *((void *)&v85 + 1) = v36;
        uint64_t v86 = sub_1D2F472B4(&qword_1EA698E48, (void (*)(uint64_t))type metadata accessor for MTUpdateAlarmEventFeature.AlarmName);
        *(void *)&long long v84 = v37;
        *(void *)(v25 + 16) = v73;
        sub_1D2F0BE68(&v84, v25 + 40 * v39 + 32);
        unint64_t v41 = v81;
      }
      else
      {
        int v40 = v76;
        unint64_t v41 = v81;
      }
    }
    else
    {
      int v40 = v76;
      unint64_t v41 = v81;
    }
    uint64_t v43 = v80;
    if (*(void *)(v24 + 16) && (unint64_t v44 = sub_1D2F0DC98(0x706D6F4365746164, 0xEE0073746E656E6FLL), (v45 & 1) != 0))
    {
      sub_1D2F0BD44(*(void *)(v24 + 56) + 32 * v44, (uint64_t)&v84);
      int v46 = swift_dynamicCast();
      (*(void (**)(void *, void, uint64_t, int64_t))(v41 + 56))(v12, v46 ^ 1u, 1, v13);
      if ((*(unsigned int (**)(void *, uint64_t, int64_t))(v41 + 48))(v12, 1, v13) != 1)
      {
        unint64_t v47 = v79;
        (*(void (**)(void))(v41 + 32))();
        sub_1D3000DB8();
        id v12 = (void *)v74;
        unint64_t v48 = v43;
        uint64_t v49 = (uint64_t)v43;
        uint64_t v50 = v75;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v48, 1, v75) == 1)
        {
          uint64_t v51 = *(void (**)(char *, int64_t))(v41 + 8);
          v41 += 8;
          v51(v47, v13);
          sub_1D2F1CD78(v49, &qword_1EBD62A80);
          int v40 = v76;
          if (!*(void *)(v24 + 16)) {
            goto LABEL_30;
          }
        }
        else
        {
          uint64_t v55 = (void (*)(char *, uint64_t, uint64_t))v12[4];
          uint64_t v56 = v78;
          v55(v78, v49, v50);
          os_log_t v57 = (void (*)(uint64_t, char *, uint64_t))v55;
          os_log_type_t v58 = (void (*)(char *, char *, uint64_t))v12[2];
          uint64_t v59 = v77;
          v58(v77, v56, v50);
          uint64_t v60 = type metadata accessor for MTUpdateAlarmEventFeature.AlarmTime(0);
          uint64_t v61 = swift_allocObject();
          v57(v61 + *(void *)(*(void *)v61 + 96), v59, v50);
          unint64_t v41 = *(void *)(v25 + 16);
          unint64_t v62 = *(void *)(v25 + 24);
          id v12 = (void *)(v41 + 1);
          if (v41 >= v62 >> 1) {
            uint64_t v25 = (uint64_t)sub_1D2F27F00((void *)(v62 > 1), v41 + 1, 1, (void *)v25);
          }
          int v40 = v76;
          *((void *)&v85 + 1) = v60;
          uint64_t v86 = sub_1D2F472B4(&qword_1EA698E40, (void (*)(uint64_t))type metadata accessor for MTUpdateAlarmEventFeature.AlarmTime);
          *(void *)&long long v84 = v61;
          *(void *)(v25 + 16) = v12;
          sub_1D2F0BE68(&v84, v25 + 40 * v41 + 32);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v75);
          (*(void (**)(char *, int64_t))(v81 + 8))(v79, v13);
          if (!*(void *)(v24 + 16)) {
            goto LABEL_30;
          }
        }
LABEL_24:
        unint64_t v53 = sub_1D2F0DC98(0x6353746165706572, 0xEE00656C75646568);
        if (v54)
        {
          sub_1D2F0BD44(*(void *)(v24 + 56) + 32 * v53, (uint64_t)&v84);
          goto LABEL_31;
        }
LABEL_30:
        long long v84 = 0u;
        long long v85 = 0u;
LABEL_31:
        swift_bridgeObjectRelease();
        if (!*((void *)&v85 + 1))
        {

          sub_1D2F1CD78((uint64_t)&v84, &qword_1EBD635B8);
          return v25;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D10);
        if ((swift_dynamicCast() & 1) == 0)
        {

          return v25;
        }
        uint64_t v63 = v82;
        if (v82 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v64 = (void *)sub_1D30025A8();
          swift_bridgeObjectRelease();
          if (v64)
          {
LABEL_35:
            if ((v63 & 0xC000000000000001) != 0)
            {
              id v66 = (id)MEMORY[0x1D942E3A0](0, v63);
            }
            else
            {
              unint64_t v65 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v65)
              {
                __break(1u);
                goto LABEL_46;
              }
              id v66 = *(id *)(v63 + 32);
            }
            uint64_t v64 = v66;
            swift_bridgeObjectRelease();
            id v67 = objc_msgSend(v64, sel_displayString);
            uint64_t v68 = sub_1D3001B78();
            uint64_t v70 = v69;

            uint64_t v63 = type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule(0);
            id v12 = (void *)swift_allocObject();
            v12[2] = v68;
            uint64_t v12[3] = v70;
            unint64_t v41 = *(void *)(v25 + 16);
            unint64_t v65 = *(void *)(v25 + 24);
            int64_t v13 = v41 + 1;
            if (v41 < v65 >> 1)
            {
LABEL_39:
              uint64_t v71 = v76;
              *((void *)&v85 + 1) = v63;
              uint64_t v86 = sub_1D2F472B4(&qword_1EA698E38, (void (*)(uint64_t))type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule);
              *(void *)&long long v84 = v12;
              *(void *)(v25 + 16) = v13;
              sub_1D2F0BE68(&v84, v25 + 40 * v41 + 32);

              return v25;
            }
LABEL_46:
            uint64_t v25 = (uint64_t)sub_1D2F27F00((void *)(v65 > 1), v13, 1, (void *)v25);
            goto LABEL_39;
          }
        }
        else
        {
          uint64_t v64 = *(void **)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v64) {
            goto LABEL_35;
          }
        }

        swift_bridgeObjectRelease();
        return v25;
      }
    }
    else
    {
      unint64_t v52 = *(void (**)(void *, uint64_t, uint64_t, int64_t))(v41 + 56);
      v41 += 56;
      v52(v12, 1, 1, v13);
    }
    sub_1D2F1CD78((uint64_t)v12, &qword_1EA698CF8);
    if (!*(void *)(v24 + 16)) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_13:

  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698E50);
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 96);
  uint64_t v4 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  sub_1D2F39578(a1, (uint64_t)v4);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62A80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D30);
    swift_deallocPartialClassInstance();
    uint64_t v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(void *)(*(void *)v5 + 96), v4, v6);
  }
  sub_1D2F1CD78(a1, &qword_1EBD62A80);
  return v5;
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MTUpdateAlarmIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698E60);
}

uint64_t sub_1D2F47278(uint64_t *a1)
{
  return sub_1D2F474CC(a1, (void (*)(void))type metadata accessor for MTUpdateAlarmEventFeature.EventType);
}

uint64_t sub_1D2F47290(uint64_t *a1)
{
  return sub_1D2F47520(a1, (void (*)(void))type metadata accessor for MTUpdateAlarmEventFeature.EventType);
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2F472B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t MTUpdateAlarmEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F473FC(char *a1)
{
  char v1 = *a1;
  type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F47434(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for MTUpdateAlarmEventFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t sub_1D2F474B4(uint64_t *a1)
{
  return sub_1D2F474CC(a1, (void (*)(void))type metadata accessor for MTUpdateAlarmEventFeature.AlarmName);
}

uint64_t sub_1D2F474CC(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2F47508(uint64_t *a1)
{
  return sub_1D2F47520(a1, (void (*)(void))type metadata accessor for MTUpdateAlarmEventFeature.AlarmName);
}

uint64_t sub_1D2F47520(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t MTUpdateAlarmEventFeature.AlarmRepeatSchedule.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t MTUpdateAlarmEventFeature.AlarmRepeatSchedule.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F475D0(uint64_t *a1)
{
  return sub_1D2F474CC(a1, (void (*)(void))type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t sub_1D2F475E8(uint64_t *a1)
{
  return sub_1D2F47520(a1, (void (*)(void))type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule);
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.init(value:)(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F39578(a1, (uint64_t)v5);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D2F1CD78((uint64_t)v5, &qword_1EBD62A80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D30);
    swift_deallocPartialClassInstance();
    uint64_t v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(void *)(*(void *)v1 + 96), v5, v6);
  }
  sub_1D2F1CD78(a1, &qword_1EBD62A80);
  return v1;
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MTUpdateAlarmEventFeature.AlarmTime.__deallocating_deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.AlarmRepeatSchedule(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698E80);
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.AlarmTime(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698E90);
}

uint64_t type metadata accessor for MTUpdateAlarmEventFeature.AlarmName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA698E70);
}

uint64_t type metadata accessor for MTUpdateAlarmIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for MTUpdateAlarmIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MTUpdateAlarmIntentFeatureExtractor);
}

uint64_t dispatch thunk of MTUpdateAlarmIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MTUpdateAlarmIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

ValueMetadata *type metadata accessor for MTUpdateAlarmEventFeature()
{
  return &type metadata for MTUpdateAlarmEventFeature;
}

SiriPrivateLearningAnalytics::PLUSSuggestionGenerationDomain_optional __swiftcall PLUSSuggestionGenerationDomain.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D3002638();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static PLUSSuggestionGenerationDomain.allCases.getter()
{
  return &unk_1F2A156E8;
}

uint64_t PLUSSuggestionGenerationDomain.rawValue.getter()
{
  if (*v0) {
    return 0x6964654D73756C50;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_1D2F47C68()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F47CF4()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F47D6C()
{
  return sub_1D3002968();
}

SiriPrivateLearningAnalytics::PLUSSuggestionGenerationDomain_optional sub_1D2F47DF4(Swift::String *a1)
{
  return PLUSSuggestionGenerationDomain.init(rawValue:)(*a1);
}

void sub_1D2F47E00(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000018;
  if (*v1) {
    unint64_t v2 = 0x6964654D73756C50;
  }
  unint64_t v3 = 0x80000001D300D930;
  if (*v1) {
    unint64_t v3 = 0xE900000000000061;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D2F47E48(char *a1, char *a2)
{
  return sub_1D2FBC21C(*a1, *a2);
}

void sub_1D2F47E54(void *a1@<X8>)
{
  *a1 = &unk_1F2A15710;
}

uint64_t static PLUSLoggingIdGenerator.derivePlusLoggingId(requestId:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D30010A8();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return sub_1D2F47F74((uint64_t)v6, a2);
}

uint64_t sub_1D2F47F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v44[1] = *(char **)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1D3001BB8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D3001BA8();
  uint64_t v8 = sub_1D3001B88();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15)
  {
    uint64_t v11 = sub_1D30010A8();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v11);
  }
  uint64_t v14 = sub_1D3001E48();
  *(void *)(v14 + 16) = 20;
  *(void *)(v14 + 32) = 0;
  id v15 = (unsigned __int8 *)(v14 + 32);
  *(void *)(v14 + 40) = 0;
  *(_DWORD *)(v14 + 48) = 0;
  v44[0] = (char *)v14;
  memset(&c, 0, sizeof(c));
  CC_SHA1_Init(&c);
  uint64_t data = sub_1D3001088();
  char v35 = v16;
  char v36 = v17;
  char v37 = v18;
  char v38 = v19;
  char v39 = v20;
  char v40 = v21;
  char v41 = v22;
  char v42 = v23;
  switch(v10 >> 62)
  {
    case 1uLL:
      if (v8 >> 32 < (int)v8) {
        goto LABEL_31;
      }
      swift_retain();
      sub_1D2F48B44((int)v8, v8 >> 32, v10 & 0x3FFFFFFFFFFFFFFFLL, v44, &c, &data, (uint64_t)&c);
      sub_1D2F2276C(v8, v10);
      break;
    case 2uLL:
      uint64_t v26 = *(void *)(v8 + 16);
      uint64_t v27 = *(void *)(v8 + 24);
      swift_retain();
      swift_retain();
      sub_1D2F48B44(v26, v27, v10 & 0x3FFFFFFFFFFFFFFFLL, v44, &c, &data, (uint64_t)&c);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v33, 0, 14);
      uint64_t v24 = &v15[*(void *)(v14 + 16)];
      uint64_t v25 = (char *)v33;
      goto LABEL_9;
    default:
      v33[0] = v8;
      LOWORD(v33[1]) = v10;
      BYTE2(v33[1]) = BYTE2(v10);
      BYTE3(v33[1]) = BYTE3(v10);
      uint64_t v24 = &v15[*(void *)(v14 + 16)];
      BYTE4(v33[1]) = BYTE4(v10);
      BYTE5(v33[1]) = BYTE5(v10);
      uint64_t v25 = (char *)v33 + BYTE6(v10);
LABEL_9:
      sub_1D2F48A58(v15, (int)v24, &c, &data, (uint64_t)&c, v33, (uint64_t)v25);
      v44[0] = (char *)v14;
      break;
  }
  uint64_t v28 = v44[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v28 = sub_1D2FA863C((uint64_t)v28);
  }
  unint64_t v29 = *((void *)v28 + 2);
  if (v29 < 7)
  {
    __break(1u);
    goto LABEL_23;
  }
  v28[38] = v28[38] & 0xF | 0x50;
  if (v29 < 9)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v28[40] = v28[40] & 0x3F | 0x80;
  v44[0] = v28;
  if (v29 == 9)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v29 == 10)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v29 < 0xC)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v29 == 12)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v29 < 0xE)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v29 == 14)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v29 < 0x10)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  sub_1D3001078();
  sub_1D2F2276C(v8, v10);
  uint64_t v30 = sub_1D30010A8();
  uint64_t v31 = *(void *)(v30 - 8);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a1, v30);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(a2, 0, 1, v30);
}

uint64_t static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  id v15 = (char *)&v24 - v14;
  MEMORY[0x1F4188790](v13);
  char v17 = (char *)&v24 - v16;
  char v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18((char *)&v24 - v16, a1, v8);
  v18(v15, a2, v8);
  v18(v12, (uint64_t)v17, v8);
  sub_1D3001038();
  sub_1D2F47F74((uint64_t)v12, (uint64_t)v7);
  char v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v15, v8);
  v19(v17, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1D2F0D16C((uint64_t)v7);
    uint64_t v20 = 1;
    uint64_t v21 = v25;
  }
  else
  {
    uint64_t v22 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v7, v8);
    uint64_t v20 = 0;
    uint64_t v21 = v22;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v21, v20, 1, v8);
}

uint64_t PLUSLoggingIdGenerator.deinit()
{
  return v0;
}

uint64_t PLUSLoggingIdGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1D2F487B0()
{
  unint64_t result = qword_1EA698EA0;
  if (!qword_1EA698EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698EA0);
  }
  return result;
}

unint64_t sub_1D2F48808()
{
  unint64_t result = qword_1EA698EA8;
  if (!qword_1EA698EA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA698EB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698EA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PLUSSuggestionGenerationDomain(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F48930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PLUSSuggestionGenerationDomain()
{
  return &type metadata for PLUSSuggestionGenerationDomain;
}

uint64_t type metadata accessor for PLUSLoggingIdGenerator()
{
  return self;
}

uint64_t method lookup function for PLUSLoggingIdGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PLUSLoggingIdGenerator);
}

uint64_t sub_1D2F489A4(const void *a1, uint64_t a2, char **a3, CC_SHA1_CTX *a4, void *a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v12 = sub_1D2FA863C((uint64_t)v12);
    *a3 = v12;
  }
  uint64_t result = sub_1D2F48A58((unsigned __int8 *)v12 + 32, (int)v12 + 32 + *((_DWORD *)v12 + 4), a4, a5, a6, a1, a2);
  *a3 = v12;
  return result;
}

uint64_t sub_1D2F48A58(unsigned __int8 *a1, int a2, CC_SHA1_CTX *c, void *data, uint64_t a5, const void *a6, uint64_t a7)
{
  if (data)
  {
    CC_LONG v11 = a5 - data;
    if (a5 - (uint64_t)data >= 0x100000000) {
      goto LABEL_7;
    }
  }
  else
  {
    CC_LONG v11 = 0;
  }
  CC_SHA1_Update(c, data, v11);
  if (!a6)
  {
LABEL_8:
    CC_LONG v12 = 0;
    goto LABEL_9;
  }
  CC_LONG v12 = a7 - a6;
  if (a7 - (uint64_t)a6 >= 0x100000000)
  {
LABEL_7:
    sub_1D3002598();
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  CC_SHA1_Update(c, a6, v12);
  return CC_SHA1_Final(a1, c);
}

uint64_t sub_1D2F48B44(uint64_t a1, uint64_t a2, uint64_t a3, char **a4, CC_SHA1_CTX *a5, void *a6, uint64_t a7)
{
  uint64_t result = sub_1D3000D88();
  uint64_t v14 = (char *)result;
  if (result)
  {
    uint64_t result = sub_1D3000DA8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v14 += a1 - result;
  }
  BOOL v15 = __OFSUB__(a2, a1);
  uint64_t v16 = a2 - a1;
  if (v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v17 = sub_1D3000D98();
  if (v17 >= v16) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v17;
  }
  char v19 = &v14[v18];
  if (v14) {
    uint64_t v20 = (uint64_t)v19;
  }
  else {
    uint64_t v20 = 0;
  }
  return sub_1D2F489A4(v14, v20, a4, a5, a6, a7);
}

uint64_t sub_1D2F48C08(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1D3002508();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1D942E3A0](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      unsigned int v6 = v5;
      ++v4;
      sub_1D2F49D10(v5);

      sub_1D30024E8();
      sub_1D3002518();
      sub_1D3002528();
      sub_1D30024F8();
      if (v2 == v4) {
        return v7;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2F48D3C@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1, a1[1]);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1D2F48D78@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = a2(a3, a1, *(void *)(a1 + 8));
  *(void *)(a3 + 8) = result;
  return result;
}

uint64_t sub_1D2F48DB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v41 = a1;
  char v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAC8);
  uint64_t v6 = *(void *)(v40 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v40);
  char v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v43 = sub_1D3001018();
  uint64_t v11 = *(void *)(v43 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v43);
  uint64_t v14 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v38 - v15;
  char v38 = (char *)&v38 - v15;
  sub_1D3001008();
  uint64_t v17 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v2;
  swift_retain();
  uint64_t v19 = sub_1D2F4A090((uint64_t)v5, (uint64_t)&unk_1EA699020, (uint64_t)v18, &qword_1EA698F98);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1D2F4E638;
  *(void *)(v20 + 24) = v19;
  unint64_t v44 = sub_1D2F4EE6C;
  uint64_t v45 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5E7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA78);
  sub_1D2F1D154(&qword_1EBD5E7C8, &qword_1EBD5E7D0);
  sub_1D3002578();
  uint64_t v21 = v16;
  uint64_t v22 = v43;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v21, v43);
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v41;
  *(void *)(v24 + 16) = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v24 + v23, v14, v22);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1D2F4EBA8;
  *(void *)(v26 + 24) = v24;
  uint64_t v27 = v39;
  uint64_t v28 = v40;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v10, v40);
  unint64_t v29 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v30 + v29, v27, v28);
  uint64_t v31 = (void *)(v30 + ((v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v31 = sub_1D2F4EC2C;
  v31[1] = v26;
  unint64_t v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  id v33 = v25;
  v32(v10, v28);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1D2F1CFE0;
  *(void *)(v34 + 24) = v30;
  char v36 = v42;
  uint64_t v35 = v43;
  *char v42 = sub_1D2F1D0B0;
  v36[1] = v34;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v38, v35);
}

uint64_t sub_1D2F4926C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
  swift_bridgeObjectRetain();
  sub_1D3000F98();
  uint64_t v13 = v12;
  uint64_t v14 = (objc_class *)type metadata accessor for StreamBookmark();
  uint64_t v15 = (char *)objc_allocWithZone(v14);
  uint64_t v16 = &v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(void *)uint64_t v16 = v11;
  *((void *)v16 + 1) = v10;
  *(void *)&v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  uint64_t v17 = &v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(void *)uint64_t v17 = v13;
  v17[8] = 0;
  v19.receiver = v15;
  v19.super_class = v14;
  objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_retain();
}

uint64_t sub_1D2F493F8(uint64_t a1)
{
  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  v1[3] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F00);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698FC0);
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698FC8);
  v1[12] = v4;
  v1[13] = *(void *)(v4 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D2F495FC, 0, 0);
}

uint64_t sub_1D2F495FC()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = sub_1D3001018();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  uint64_t v5 = sub_1D2F4B1D0();
  v0[16] = v5;
  sub_1D2F39578(v1, v2);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  uint64_t v7 = v0[4];
  if (v6 == 1)
  {
    sub_1D2F1CD78(v0[4], &qword_1EBD62A80);
    uint64_t v8 = 0;
  }
  else
  {
    sub_1D3000F98();
    uint64_t v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = v10;
  }
  BOOL v11 = v6 == 1;
  uint64_t v12 = v0[3];
  sub_1D3001778();
  uint64_t v13 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[17] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1D2F49834;
  uint64_t v15 = v0[8];
  return MEMORY[0x1F4104EF0](v15, v5, 0, 1, v8, v11, 0, 1);
}

uint64_t sub_1D2F49834()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 128);
  uint64_t v4 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  sub_1D2F1CD78(v4, &qword_1EBD63688);

  if (v0)
  {
    uint64_t v5 = sub_1D2F49BB8;
  }
  else
  {
    sub_1D2F1CD78(*(void *)(v2 + 40), &qword_1EBD62A80);
    uint64_t v5 = sub_1D2F4999C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D2F4999C()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[7];
  uint64_t v12 = v0[14];
  swift_getOpaqueTypeConformance2();
  sub_1D3001758();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  sub_1D2F1D154(&qword_1EA698FD0, &qword_1EA698FC0);
  sub_1D3001168();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v12, v1, v3);
  type metadata accessor for Turn();
  sub_1D2F1D154(&qword_1EA698FE0, &qword_1EA698FC8);
  sub_1D3002578();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1D2F49BB8()
{
  sub_1D2F1CD78(*(void *)(v0 + 40), &qword_1EBD62A80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F49C88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1D2F49CAC, 0, 0);
}

uint64_t sub_1D2F49CAC()
{
  uint64_t v1 = *(void ***)(v0 + 16);
  *uint64_t v1 = sub_1D2F49D10(*(void **)(v0 + 24));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void *sub_1D2F49D10(void *a1)
{
  unint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (__CFString **)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  BOOL v11 = (char *)&v24 - v10;
  unint64_t v12 = sub_1D3001788();
  unint64_t v13 = v12;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease();
    sub_1D30017D8();
    if (v20)
    {
      uint64_t v22 = sub_1D3001018();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
    }
    else
    {
      sub_1D3000FD8();
      uint64_t v21 = sub_1D3001018();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 0, 1, v21);
    }
    sub_1D30017E8();
    sub_1D2F4E518((uint64_t)v11, (uint64_t)v9);
    type metadata accessor for Turn();
    uint64_t v23 = swift_allocObject();
    (*(void (**)(uint64_t, __CFString **, unint64_t))(v3 + 32))(v23 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v5, v2);
    *(void *)(v23 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v19;
    sub_1D2F4E518((uint64_t)v9, v23 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
    return (void *)v23;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1D30025A8();
  if (!v14) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v24 = a1;
  uint64_t v25 = v9;
  uint64_t v26 = v5;
  uint64_t v27 = v3;
  unint64_t v28 = v2;
  unint64_t v2 = v13 & 0xC000000000000001;
  uint64_t v3 = 4;
  uint64_t v5 = off_1E6970000;
  while (1)
  {
    if (v2) {
      id v15 = (id)MEMORY[0x1D942E3A0](v3 - 4, v13);
    }
    else {
      id v15 = *(id *)(v13 + 8 * v3);
    }
    a1 = v15;
    uint64_t v9 = (char *)(v3 - 3);
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t result = (void *)sub_1D30016A8();
    if (!result) {
      break;
    }
    uint64_t v17 = result;
    id v18 = objc_msgSend(result, sel_wrapAsAnyEvent, v24);

    if (v18)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
    ++v3;
    if (v9 == (char *)v14)
    {
      swift_bridgeObjectRelease();
      unint64_t v2 = v28;
      uint64_t v19 = v29;
      uint64_t v5 = v26;
      uint64_t v3 = v27;
      uint64_t v9 = v25;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F4A090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_1D3001F48();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_1D3001F38();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1D2F1CD78(a1, &qword_1EBD63798);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D3001EC8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return swift_task_create();
}

uint64_t sub_1D2F4A218@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v41 = a1;
  char v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCC0);
  uint64_t v6 = *(void *)(v40 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v40);
  char v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v43 = sub_1D3001018();
  uint64_t v11 = *(void *)(v43 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v43);
  uint64_t v14 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v38 - v15;
  char v38 = (char *)&v38 - v15;
  sub_1D3001008();
  uint64_t v17 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  id v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v2;
  swift_retain();
  uint64_t v19 = sub_1D2F4A090((uint64_t)v5, (uint64_t)&unk_1EA698FF8, (uint64_t)v18, &qword_1EA698EE8);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1D2F4BC30;
  *(void *)(v20 + 24) = v19;
  unint64_t v44 = sub_1D2F4EE68;
  uint64_t v45 = v20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5F8A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5F7A8);
  sub_1D2F1D154(&qword_1EBD5F8A0, (uint64_t *)&unk_1EBD5F8A8);
  sub_1D3002578();
  uint64_t v21 = v16;
  uint64_t v22 = v43;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v21, v43);
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v41;
  *(void *)(v24 + 16) = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v24 + v23, v14, v22);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1D2F4E910;
  *(void *)(v26 + 24) = v24;
  uint64_t v27 = v39;
  uint64_t v28 = v40;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v10, v40);
  unint64_t v29 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v30 + v29, v27, v28);
  uint64_t v31 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v30 + ((v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v31 = sub_1D2F4E99C;
  v31[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v26;
  unint64_t v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  id v33 = v25;
  v32(v10, v28);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1D2F1C9BC;
  *(void *)(v34 + 24) = v30;
  char v36 = v42;
  uint64_t v35 = v43;
  *char v42 = sub_1D2F1C9DC;
  v36[1] = v34;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v38, v35);
}

id sub_1D2F4A6CC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1D3001018();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  uint64_t v15 = *(void *)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  uint64_t v14 = *(void *)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
  swift_bridgeObjectRetain();
  sub_1D3000F98();
  uint64_t v17 = v16;
  id v18 = (objc_class *)type metadata accessor for StreamBookmark();
  uint64_t v19 = (char *)objc_allocWithZone(v18);
  uint64_t v20 = &v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(void *)uint64_t v20 = v15;
  *((void *)v20 + 1) = v14;
  *(void *)&v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  uint64_t v21 = &v19[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(void *)uint64_t v21 = v17;
  v21[8] = 0;
  v24.receiver = v19;
  v24.super_class = v18;
  id v22 = objc_msgSendSuper2(&v24, sel_init);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a1 = v13;
  swift_retain();
  return v22;
}

uint64_t sub_1D2F4A86C(uint64_t a1)
{
  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  v1[3] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F00);
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F08);
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F10);
  v1[12] = v4;
  v1[13] = *(void *)(v4 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D2F4AA70, 0, 0);
}

uint64_t sub_1D2F4AA70()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = sub_1D3001018();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  uint64_t v5 = sub_1D2F4B1D0();
  v0[16] = v5;
  sub_1D2F39578(v1, v2);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  uint64_t v7 = v0[4];
  if (v6 == 1)
  {
    sub_1D2F1CD78(v0[4], &qword_1EBD62A80);
    uint64_t v8 = 0;
  }
  else
  {
    sub_1D3000F98();
    uint64_t v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = v10;
  }
  BOOL v11 = v6 == 1;
  uint64_t v12 = v0[3];
  sub_1D3001778();
  uint64_t v13 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[17] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1D2F4ACA8;
  uint64_t v15 = v0[8];
  return MEMORY[0x1F4104EF0](v15, v5, 0, 1, v8, v11, 0, 1);
}

uint64_t sub_1D2F4ACA8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 128);
  uint64_t v4 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  sub_1D2F1CD78(v4, &qword_1EBD63688);

  if (v0)
  {
    uint64_t v5 = sub_1D2F4EE28;
  }
  else
  {
    sub_1D2F1CD78(*(void *)(v2 + 40), &qword_1EBD62A80);
    uint64_t v5 = sub_1D2F4AE10;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D2F4AE10()
{
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[7];
  uint64_t v12 = v0[14];
  swift_getOpaqueTypeConformance2();
  sub_1D3001748();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  sub_1D2F1D154(&qword_1EA698F18, &qword_1EA698F08);
  sub_1D3001168();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v12, v1, v3);
  sub_1D2F1D154(&qword_1EA698F28, &qword_1EA698F10);
  sub_1D3002578();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1D2F4B024(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1D2F4B048, 0, 0);
}

uint64_t sub_1D2F4B048()
{
  sub_1D2F4B0A8(*(void **)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F4B0A8@<X0>(void *a1@<X8>)
{
  unint64_t v2 = sub_1D30017C8();
  unint64_t v3 = sub_1D2F48C08(v2);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61548);
  uint64_t v4 = (void *)swift_allocObject();
  v4[6] = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = sub_1D2F1D154((unint64_t *)&qword_1EBD61550, (uint64_t *)&unk_1EBD61560);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v6;
  v4[2] = v5;
  v4[3] = v7;
  v4[4] = result;
  v4[5] = v7;
  *a1 = v4;
  return result;
}

uint64_t sub_1D2F4B1D0()
{
  sub_1D30017B8();
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EA699770);
  uint64_t v0 = (void *)sub_1D30017A8();
  sub_1D2F0BCB8(0, &qword_1EA698F30);
  uint64_t v1 = (void *)sub_1D30017A8();
  unint64_t v2 = (void *)MEMORY[0x1D942D6C0](v0, v1);

  sub_1D2F0BCB8(0, &qword_1EBD61468);
  unint64_t v3 = (void *)sub_1D30017A8();
  uint64_t v4 = (void *)MEMORY[0x1D942D6C0](v2, v3);

  sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD61450);
  uint64_t v5 = (void *)sub_1D30017A8();
  uint64_t v6 = (void *)MEMORY[0x1D942D6C0](v4, v5);

  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD61478);
  uint64_t v7 = (void *)sub_1D30017A8();
  uint64_t v8 = (void *)MEMORY[0x1D942D6C0](v6, v7);

  sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD61438);
  uint64_t v9 = (void *)sub_1D30017A8();
  uint64_t v10 = (void *)MEMORY[0x1D942D6C0](v8, v9);

  sub_1D2F0BCB8(0, &qword_1EA698F38);
  BOOL v11 = (void *)sub_1D30017A8();
  uint64_t v12 = (void *)MEMORY[0x1D942D6C0](v10, v11);

  sub_1D2F0BCB8(0, &qword_1EA698F40);
  uint64_t v13 = (void *)sub_1D30017A8();
  uint64_t v14 = (void *)MEMORY[0x1D942D6C0](v12, v13);

  sub_1D2F0BCB8(0, &qword_1EA698F48);
  uint64_t v15 = (void *)sub_1D30017A8();
  uint64_t v16 = MEMORY[0x1D942D6C0](v14, v15);

  return v16;
}

uint64_t sub_1D2F4B3E4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AIMLISSignalReader()
{
  return self;
}

uint64_t sub_1D2F4B418@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v6;
  swift_retain();
  uint64_t v9 = sub_1D2F4A090((uint64_t)v5, (uint64_t)&unk_1EA698F58, (uint64_t)v8, &qword_1EA698F98);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D2F4E638;
  *(void *)(v10 + 24) = v9;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1D2F4E640;
  *(void *)(result + 24) = v10;
  *a1 = sub_1D2F1C3E8;
  a1[1] = result;
  return result;
}

uint64_t sub_1D2F4B58C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v6;
  swift_retain();
  uint64_t v9 = sub_1D2F4A090((uint64_t)v5, (uint64_t)&unk_1EA698EC0, (uint64_t)v8, &qword_1EA698EE8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D2F4BC30;
  *(void *)(v10 + 24) = v9;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1D2F4E2FC;
  *(void *)(result + 24) = v10;
  *a1 = sub_1D2F1C240;
  a1[1] = result;
  return result;
}

uint64_t sub_1D2F4B700@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v6;
  swift_retain();
  uint64_t v9 = sub_1D2F4A090((uint64_t)v5, (uint64_t)&unk_1EA698FF0, (uint64_t)v8, &qword_1EA698F98);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D2F4E638;
  *(void *)(v10 + 24) = v9;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1D2F4EE6C;
  *(void *)(result + 24) = v10;
  *a1 = sub_1D2F1D1D8;
  a1[1] = result;
  return result;
}

uint64_t sub_1D2F4B874@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1D2F48DB8(a1, a2);
}

uint64_t sub_1D2F4B898@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v6;
  swift_retain();
  uint64_t v9 = sub_1D2F4A090((uint64_t)v5, (uint64_t)&unk_1EA698FE8, (uint64_t)v8, &qword_1EA698EE8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D2F4BC30;
  *(void *)(v10 + 24) = v9;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1D2F4EE68;
  *(void *)(result + 24) = v10;
  *a1 = sub_1D2F1D1D4;
  a1[1] = result;
  return result;
}

uint64_t sub_1D2F4BA0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1D2F4A218(a1, a2);
}

uint64_t sub_1D2F4BA34(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1D1A0;
  return sub_1D2F4A86C(a1);
}

void *sub_1D2F4BAE8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = 0;
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = v2;
  swift_retain();
  return &unk_1EA698F78;
}

void *sub_1D2F4BB8C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = 0;
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = v2;
  swift_retain();
  return &unk_1EA698ED8;
}

void *sub_1D2F4BC30()
{
  return sub_1D2F4BB8C(v0);
}

uint64_t sub_1D2F4BC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F88);
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F90);
  v3[24] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F98);
  v3[25] = v5;
  v3[26] = *(void *)(v5 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D2F4BDCC, 0, 0);
}

uint64_t sub_1D2F4BDCC()
{
  uint64_t v1 = v0[16];
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v2 = v0[18];
    swift_beginAccess();
    uint64_t v3 = *(int **)(v2 + 16);
    if (v3)
    {
      uint64_t v14 = (uint64_t (*)(void *))((char *)v3 + *v3);
      uint64_t v4 = (void *)swift_task_alloc();
      v0[33] = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1D2F4C580;
      return v14(v0 + 15);
    }
    else
    {
      swift_endAccess();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v13 = (uint64_t (*)(void))v0[1];
      return v13(0);
    }
  }
  else
  {
    uint64_t v6 = v0[16];
    swift_beginAccess();
    *(unsigned char *)(v6 + 16) = 1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[31] = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    v0[32] = v8;
    *uint64_t v7 = v0;
    v7[1] = sub_1D2F4C05C;
    uint64_t v9 = v0[24];
    uint64_t v10 = v0[25];
    uint64_t v11 = v0[17];
    uint64_t v12 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v9, v11, v10, v8, v12);
  }
}

uint64_t sub_1D2F4C05C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F4C158, 0, 0);
}

uint64_t sub_1D2F4C158()
{
  uint64_t v1 = (void *)v0[24];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v0[14] = *v1;
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v5 = (void *)v0[29];
    uint64_t v4 = v0[30];
    uint64_t v6 = v0[28];
    uint64_t v7 = v0[25];
    uint64_t v8 = (void *)v0[26];
    uint64_t v20 = (void *)v0[27];
    uint64_t v21 = v0[22];
    uint64_t v19 = v0[20];
    uint64_t v22 = v0[21];
    uint64_t v23 = v0[19];
    uint64_t v24 = v0[18];
    uint64_t v9 = (void (*)(uint64_t, void *, uint64_t))v8[4];
    v9(v4, v1, v7);
    uint64_t v10 = (void (*)(void *, uint64_t, uint64_t))v8[2];
    v10(v5, v4, v7);
    v9(v6, v5, v7);
    v10(v20, v6, v7);
    sub_1D2F1D154(&qword_1EA698FA0, &qword_1EA698F98);
    sub_1D3001F78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v22, v21, v23);
    uint64_t v11 = swift_allocBox();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v12, v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v23);
    uint64_t v13 = (void (*)(uint64_t, uint64_t))v8[1];
    v13(v6, v7);
    v13(v4, v7);
    swift_beginAccess();
    uint64_t v14 = *(void *)(v24 + 16);
    *(void *)(v24 + 16) = &unk_1EA698FB0;
    *(void *)(v24 + 24) = v11;
    sub_1D2F4E508(v14);
    uint64_t v15 = v0[18];
    swift_beginAccess();
    uint64_t v16 = *(int **)(v15 + 16);
    if (v16)
    {
      uint64_t v25 = (uint64_t (*)(void *))((char *)v16 + *v16);
      uint64_t v17 = (void *)swift_task_alloc();
      v0[33] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_1D2F4C580;
      return v25(v0 + 15);
    }
    else
    {
      swift_endAccess();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v18 = (uint64_t (*)(void))v0[1];
      return v18(0);
    }
  }
}

uint64_t sub_1D2F4C580()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F4C760;
  }
  else {
    uint64_t v2 = sub_1D2F4C694;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F4C694()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1D2F4C760()
{
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F4C820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6986E0);
  v4[19] = v5;
  v4[20] = *(void *)(v5 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698EE0);
  v4[24] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698EE8);
  v4[25] = v6;
  v4[26] = *(void *)(v6 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D2F4C9B4, 0, 0);
}

uint64_t sub_1D2F4C9B4()
{
  uint64_t v1 = v0[16];
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v2 = v0[18];
    swift_beginAccess();
    uint64_t v3 = *(int **)(v2 + 16);
    if (v3)
    {
      uint64_t v16 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
      uint64_t v4 = (void *)swift_task_alloc();
      v0[33] = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1D2F4D11C;
      uint64_t v5 = v0[15];
      return v16(v5);
    }
    else
    {
      uint64_t v14 = (void *)v0[15];
      swift_endAccess();
      *uint64_t v14 = 0;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v15 = (uint64_t (*)(void))v0[1];
      return v15();
    }
  }
  else
  {
    uint64_t v7 = v0[16];
    swift_beginAccess();
    *(unsigned char *)(v7 + 16) = 1;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[31] = v8;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    v0[32] = v9;
    *uint64_t v8 = v0;
    v8[1] = sub_1D2F4CC30;
    uint64_t v10 = v0[24];
    uint64_t v11 = v0[25];
    uint64_t v12 = v0[17];
    uint64_t v13 = MEMORY[0x1E4FBC0F0];
    return MEMORY[0x1F4187DA0](v10, v12, v11, v9, v13);
  }
}

uint64_t sub_1D2F4CC30()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F4CD2C, 0, 0);
}

uint64_t sub_1D2F4CD2C()
{
  uint64_t v1 = (void *)v0[24];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v0[14] = *v1;
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
LABEL_8:
    return v2();
  }
  uint64_t v4 = (void *)v0[29];
  uint64_t v3 = v0[30];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[25];
  uint64_t v7 = (void *)v0[26];
  uint64_t v21 = (void *)v0[27];
  uint64_t v22 = v0[22];
  uint64_t v20 = v0[20];
  uint64_t v23 = v0[21];
  uint64_t v24 = v0[19];
  uint64_t v25 = v0[18];
  uint64_t v8 = (void (*)(uint64_t, void *, uint64_t))v7[4];
  v8(v3, v1, v6);
  uint64_t v9 = (void (*)(void *, uint64_t, uint64_t))v7[2];
  v9(v4, v3, v6);
  v8(v5, v4, v6);
  v9(v21, v5, v6);
  sub_1D2F1D154(&qword_1EA698EF0, &qword_1EA698EE8);
  sub_1D3001F78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v23, v22, v24);
  uint64_t v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v11, v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v24);
  uint64_t v12 = (void (*)(uint64_t, uint64_t))v7[1];
  v12(v5, v6);
  v12(v3, v6);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v25 + 16);
  *(void *)(v25 + 16) = &unk_1EA698EF8;
  *(void *)(v25 + 24) = v10;
  sub_1D2F4E508(v13);
  uint64_t v14 = v0[18];
  swift_beginAccess();
  uint64_t v15 = *(int **)(v14 + 16);
  if (!v15)
  {
    uint64_t v19 = (void *)v0[15];
    swift_endAccess();
    *uint64_t v19 = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    goto LABEL_8;
  }
  uint64_t v26 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[33] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1D2F4D11C;
  uint64_t v17 = v0[15];
  return v26(v17);
}

uint64_t sub_1D2F4D11C()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F4C760;
  }
  else {
    uint64_t v2 = sub_1D2F4D230;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F4D230()
{
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F4D2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCC0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCA0);
  uint64_t v12 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_1D2F1D154(&qword_1EBD5FCB8, &qword_1EBD5FCC0);
  sub_1D3001F78();
  *(void *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  *(void *)a4 = &unk_1EA699018;
  *(void *)(a4 + 8) = v12;
  *(void *)(a4 + 16) = a2;
  *(void *)(a4 + 24) = a3;
  *(unsigned char *)(a4 + 32) = 1;
  return swift_retain();
}

uint64_t sub_1D2F4D450(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCA0);
  v1[7] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F4D4D4, 0, 0);
}

uint64_t sub_1D2F4D4D4()
{
  swift_beginAccess();
  uint64_t v1 = sub_1D2F1D154(&qword_1EBD5FC98, &qword_1EBD5FCA0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F19ED8;
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  return MEMORY[0x1F4187C78](v4, v3, v1);
}

__n128 sub_1D2F4D5B4@<Q0>(void (**a1)(_OWORD *__return_ptr, uint64_t)@<X0>, void *a2@<X8>)
{
  void (*v3)(_OWORD *__return_ptr, uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;
  long long v11;
  _OWORD v12[2];
  char v13;
  uint64_t v14;
  uint64_t v15;

  uint64_t v3 = *a1;
  uint64_t v4 = swift_retain();
  v3(v12, v4);
  swift_release();
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  uint64_t v10 = (__n128)v12[1];
  uint64_t v11 = v12[0];
  uint64_t v8 = swift_allocObject();
  uint64_t result = v10;
  *(_OWORD *)(v8 + 16) = v11;
  *(__n128 *)(v8 + 32) = v10;
  *(unsigned char *)(v8 + 48) = v5;
  *(void *)(v8 + 56) = v6;
  *(void *)(v8 + 64) = v7;
  *a2 = &unk_1EA699038;
  a2[1] = v8;
  return result;
}

uint64_t sub_1D2F4D654(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x1F4188298](sub_1D2F4D674, 0, 0);
}

uint64_t sub_1D2F4D674()
{
  swift_beginAccess();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA698700 + dword_1EA698700);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D2F4D730;
  return v3();
}

uint64_t sub_1D2F4D730(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[8] = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_1D2F19D10, 0, 0);
  }
  else
  {
    uint64_t v7 = (void *)v6[5];
    swift_endAccess();
    *uint64_t v7 = a1;
    v7[1] = a2;
    uint64_t v8 = (uint64_t (*)(void))v6[1];
    return v8();
  }
}

uint64_t sub_1D2F4D88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAC8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAB8);
  uint64_t v12 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_1D2F1D154(&qword_1EBD5EAC0, &qword_1EBD5EAC8);
  sub_1D3001F78();
  *(void *)a4 = &unk_1EA699048;
  *(void *)(a4 + 8) = v12;
  *(void *)(a4 + 16) = a2;
  *(void *)(a4 + 24) = a3;
  *(unsigned char *)(a4 + 32) = 1;
  *(void *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  return swift_retain();
}

uint64_t sub_1D2F4D9F4(uint64_t a1)
{
  v1[7] = a1;
  v1[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAB8);
  v1[9] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F4DA78, 0, 0);
}

uint64_t sub_1D2F4DA78()
{
  swift_beginAccess();
  uint64_t v1 = sub_1D2F1D154(&qword_1EBD5EAB0, &qword_1EBD5EAB8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F4DB64;
  uint64_t v3 = *(void *)(v0 + 64);
  return MEMORY[0x1F4187C78](v0 + 40, v3, v1);
}

uint64_t sub_1D2F4DB64()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D2F4DCB0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(_OWORD **)(v2 + 56);
    swift_endAccess();
    *uint64_t v3 = *(_OWORD *)(v2 + 40);
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_1D2F4DCB0()
{
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1D2F4DD14(void (**a1)(uint64_t *__return_ptr, uint64_t)@<X0>, void *a2@<X8>)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  long long v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t vars8;

  uint64_t v3 = *a1;
  uint64_t v4 = swift_retain();
  v3(&v11, v4);
  swift_release();
  uint64_t v5 = v11;
  uint64_t v6 = v13;
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  uint64_t v9 = v16;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v5;
  *(_OWORD *)(v10 + 24) = v12;
  *(void *)(v10 + 40) = v6;
  *(unsigned char *)(v10 + 48) = v7;
  *(void *)(v10 + 56) = v8;
  *(void *)(v10 + 64) = v9;
  *a2 = &unk_1EA699008;
  a2[1] = v10;
  swift_retain();
  swift_retain();
  sub_1D2F4EA84(v8, v9);
  swift_release();
  swift_release();
  sub_1D2F1C4E8(v8, v9);
}

uint64_t sub_1D2F4DE04@<X0>(uint64_t (**a1)(uint64_t)@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = swift_retain();
  uint64_t v5 = v3(v4);
  uint64_t v7 = v6;
  swift_release();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v5;
  *(void *)(result + 24) = v7;
  *a2 = &unk_1EA698F68;
  a2[1] = result;
  return result;
}

uint64_t sub_1D2F4DE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1D2F1BA74;
  return sub_1D2F4BC38(a2, a3, a4);
}

uint64_t sub_1D2F4DF2C(uint64_t a1)
{
  v1[6] = a1;
  v1[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698F88);
  v1[8] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F4DFB0, 0, 0);
}

uint64_t sub_1D2F4DFB0()
{
  swift_beginAccess();
  uint64_t v1 = sub_1D2F1D154(&qword_1EA698FB8, &qword_1EA698F88);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1D2F4E09C;
  uint64_t v3 = *(void *)(v0 + 56);
  return MEMORY[0x1F4187C78](v0 + 40, v3, v1);
}

uint64_t sub_1D2F4E09C()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D2F4E1E8, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[6];
    swift_endAccess();
    *uint64_t v3 = v2[5];
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1D2F4E1E8()
{
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F4E24C@<X0>(uint64_t (**a1)(uint64_t)@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = swift_retain();
  uint64_t v5 = v3(v4);
  uint64_t v7 = v6;
  swift_release();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v5;
  *(void *)(result + 24) = v7;
  *a2 = &unk_1EA698EC8;
  a2[1] = result;
  return result;
}

uint64_t sub_1D2F4E2C4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2F4E2FC@<X0>(void *a1@<X8>)
{
  return sub_1D2F4E24C((uint64_t (**)(uint64_t))(v1 + 16), a1);
}

uint64_t sub_1D2F4E304(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  return sub_1D2F19A90(a1, v1);
}

uint64_t sub_1D2F4E3A4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D2F4E3B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D2F1D1A0;
  return sub_1D2F4C820(a1, v4, v5, v6);
}

uint64_t sub_1D2F4E46C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1D1A0;
  return sub_1D2F19D74(a1);
}

uint64_t sub_1D2F4E508(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2F4E518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F4E584(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1D1A0;
  return sub_1D2F493F8(a1);
}

void *sub_1D2F4E638()
{
  return sub_1D2F4BAE8(v0);
}

uint64_t sub_1D2F4E640@<X0>(void *a1@<X8>)
{
  return sub_1D2F4DE04((uint64_t (**)(uint64_t))(v1 + 16), a1);
}

uint64_t sub_1D2F4E648(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA698F60 + dword_1EA698F60);
  return v5(a1, v1);
}

uint64_t objectdestroy_20Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_26Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D2F4E788(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D2F1D1A0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA698F70 + dword_1EA698F70);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D2F4E850(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1D1A0;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EA698FA8 + dword_1EA698FA8);
  return v4(a1);
}

id sub_1D2F4E910(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1D3001018() - 8);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_1D2F4A6CC(a1, a2, a3, v8, v9);
}

uint64_t sub_1D2F4E99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 16))(a2, a1, *(void *)(a1 + 8));
  *(void *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1D2F4E9D8()
{
  return objectdestroy_70Tm(&qword_1EBD5FCC0);
}

uint64_t sub_1D2F4E9E8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  return sub_1D2F19870(a1, v1);
}

uint64_t sub_1D2F4EA84(uint64_t result, void *a2)
{
  if (result)
  {
    id v2 = a2;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1D2F4EAC4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1C2F4;
  return sub_1D2F4D450(a1);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D2F4EBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1D3001018() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1D2F4926C(a1, a2, v6, v7);
}

uint64_t sub_1D2F4EC2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1D2F4EC64()
{
  return objectdestroy_70Tm(&qword_1EBD5EAC8);
}

uint64_t objectdestroy_121Tm()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56))
  {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1D2F4ECC8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA699030 + dword_1EA699030);
  return v5(a1, v1);
}

uint64_t sub_1D2F4ED78(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D2F1D1A0;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EA699040 + dword_1EA699040);
  return v4(a1);
}

uint64_t sub_1D2F4EE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = type metadata accessor for WindowedAsyncSequence.WindowedAsyncSequenceIterator();
  uint64_t v13 = a3 + *(int *)(v12 + 36);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(unsigned char *)(a3 + *(int *)(v12 + 40)) = 0;
  uint64_t v15 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, a2);
  sub_1D3001F78();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a3, v11, AssociatedTypeWitness);
}

uint64_t WindowedAsyncSequence.WindowedAsyncSequenceIterator.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(a2 + 24);
  v3[6] = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  uint64_t v5 = sub_1D30022F8();
  v3[8] = v5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v3[9] = TupleTypeMetadata2;
  v3[10] = *(void *)(TupleTypeMetadata2 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = *(void *)(AssociatedTypeWitness - 8);
  v3[13] = swift_task_alloc();
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D2F4F26C, 0, 0);
}

uint64_t sub_1D2F4F26C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(int *)(*(void *)(v0 + 24) + 40);
  *(_DWORD *)(v0 + 184) = v2;
  if (*(unsigned char *)(v1 + v2))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 80) + 56))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 72));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v3();
  }
  if (sub_1D3001F68())
  {
    *(unsigned char *)(v1 + v2) = 1;
    sub_1D3001F08();
    sub_1D2F1CC44();
    swift_allocError();
    sub_1D3001A68();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D2F4F480;
  uint64_t v8 = *(void *)(v0 + 128);
  return MEMORY[0x1F4187C78](v8, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_1D2F4F480()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F4FA48;
  }
  else {
    uint64_t v2 = sub_1D2F4F594;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F4F594()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 96) + 48);
  if (v2(*(void *)(v0 + 128), 1, v1) == 1)
  {
    *(unsigned char *)(*(void *)(v0 + 32) + *(int *)(v0 + 184)) = 1;
    uint64_t v1 = *(void *)(v0 + 56);
  }
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 32) + *(int *)(*(void *)(v0 + 24) + 36);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 112) + 16);
  v5(v3, v4, *(void *)(v0 + 64));
  unsigned int v6 = v2(v3, 1, v1);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 112);
  if (v6 == 1)
  {
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    *(void *)(v0 + 152) = v11;
    *(void *)(v0 + 160) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v11(v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v4, v8, v10);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1D2F4F898;
    uint64_t v13 = *(void *)(v0 + 24);
    uint64_t v14 = *(void *)(v0 + 16);
    return WindowedAsyncSequence.WindowedAsyncSequenceIterator.next()(v14, v13);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v28 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 56);
    uint64_t v23 = v16;
    uint64_t v24 = *(void *)(v0 + 64);
    uint64_t v25 = v4;
    uint64_t v26 = *(void *)(v0 + 16);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v19 = *(void (**)(void))(*(void *)(v0 + 96) + 32);
    ((void (*)(void, uint64_t, uint64_t))v19)(*(void *)(v0 + 104), v7, v17);
    uint64_t v20 = v28 + *(int *)(v16 + 48);
    v19();
    v5(v20, v18, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v25, v18, v24);
    uint64_t v21 = v26 + *(int *)(v23 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v26, v28, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v21, v20, v24);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v26, 0, 1, v23);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1D2F4F898()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F4FAD4;
  }
  else {
    uint64_t v2 = sub_1D2F4F9AC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F4F9AC()
{
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 128), *(void *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F4FA48()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F4FAD4()
{
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 128), *(void *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F4FB70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D2F1C2F4;
  return WindowedAsyncSequence.WindowedAsyncSequenceIterator.next()(a1, a2);
}

uint64_t sub_1D2F4FC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1D2F4FCF8;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_1D2F4FCF8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_1D2F4FE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t WindowedAsyncSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  return sub_1D2F4EE70((uint64_t)v5, v3, a2);
}

uint64_t sub_1D2F4FF10(uint64_t a1, uint64_t a2)
{
  return sub_1D2F510E4(a1, a2, (void (*)(void))WindowedAsyncSequence.makeAsyncIterator());
}

uint64_t sub_1D2F4FF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v16 - v12;
  uint64_t v14 = (int *)type metadata accessor for WindowedNAsyncSequence.WindowedNAsyncSequenceIterator();
  *(unsigned char *)(a4 + v14[11]) = 0;
  *(void *)(a4 + v14[9]) = v17;
  swift_getAssociatedTypeWitness();
  *(void *)(a4 + v14[10]) = sub_1D3001E38();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, a3);
  sub_1D3001F78();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, a3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v13, AssociatedTypeWitness);
}

uint64_t WindowedNAsyncSequence.WindowedNAsyncSequenceIterator.next()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *(void *)(a1 + 24);
  v2[7] = *(void *)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[8] = AssociatedTypeWitness;
  v2[9] = *(void *)(AssociatedTypeWitness - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v4 = sub_1D30022F8();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D2F502B4, 0, 0);
}

uint64_t sub_1D2F502B4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(int *)(*(void *)(v0 + 32) + 44);
  *(_DWORD *)(v0 + 184) = v2;
  if (*(unsigned char *)(v1 + v2))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3(0);
  }
  else if (sub_1D3001F68())
  {
    *(unsigned char *)(v1 + v2) = 1;
    sub_1D3001F08();
    sub_1D2F1CC44();
    swift_allocError();
    sub_1D3001A68();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1D2F50510;
    uint64_t v9 = *(void *)(v0 + 136);
    return MEMORY[0x1F4187C78](v9, AssociatedTypeWitness, AssociatedConformanceWitness);
  }
}

uint64_t sub_1D2F50510()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2F50C60;
  }
  else {
    uint64_t v2 = sub_1D2F50624;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2F50624()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void (**)(uint64_t, void, void))(*(void *)(v0 + 112) + 16);
  v4(v1, *(void *)(v0 + 136), *(void *)(v0 + 104));
  uint64_t v5 = *(unsigned int (**)(void, void, void))(v3 + 48);
  if (v5(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 104));
LABEL_8:
    uint64_t v13 = (uint64_t *)(*(void *)(v0 + 40) + *(int *)(*(void *)(v0 + 32) + 40));
    uint64_t v14 = *v13;
    *(void *)(v0 + 16) = *v13;
    sub_1D3001EA8();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    if ((sub_1D3002038() & 1) == 0)
    {
      uint64_t v15 = *(void *)(v0 + 88);
      unint64_t v32 = v5;
      id v33 = v4;
      uint64_t v17 = *(void *)(v0 + 64);
      uint64_t v16 = *(void *)(v0 + 72);
      swift_getWitnessTable();
      sub_1D3002048();
      uint64_t v18 = v17;
      uint64_t v4 = v33;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v18);
      uint64_t v5 = v32;
    }
    uint64_t v19 = *(void *)(v0 + 120);
    uint64_t v20 = *(void *)(v0 + 64);
    v4(v19, *(void *)(v0 + 136), *(void *)(v0 + 104));
    if (v5(v19, 1, v20) == 1)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
    }
    else
    {
      uint64_t v22 = *(void *)(v0 + 80);
      uint64_t v21 = *(void *)(v0 + 88);
      uint64_t v24 = *(void *)(v0 + 64);
      uint64_t v23 = *(void *)(v0 + 72);
      (*(void (**)(uint64_t, void, uint64_t))(v23 + 32))(v22, *(void *)(v0 + 120), v24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, v22, v24);
      sub_1D3001E88();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    uint64_t v25 = *(void *)(v0 + 136);
    uint64_t v27 = *(void *)(v0 + 104);
    uint64_t v26 = *(void *)(v0 + 112);
    *(void *)(v0 + 24) = v14;
    char v28 = sub_1D3002038();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    if (v28)
    {
      uint64_t v29 = *(int *)(v0 + 184);
      uint64_t v30 = *(void *)(v0 + 40);
      swift_bridgeObjectRelease();
      uint64_t v14 = 0;
      *(unsigned char *)(v30 + v29) = 1;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v31(v14);
  }
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  (*(void (**)(void, void, uint64_t))(*(void *)(v0 + 72) + 32))(*(void *)(v0 + 96), *(void *)(v0 + 128), v7);
  if (MEMORY[0x1D942DDA0](*(void *)(v8 + *(int *)(v9 + 40)), v7) >= *(void *)(v8 + *(int *)(v9 + 36)))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 64));
    uint64_t v5 = v6;
    goto LABEL_8;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 72) + 16))(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 64));
  sub_1D3001EA8();
  sub_1D3001E88();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1D2F50A50;
  uint64_t v11 = *(void *)(v0 + 32);
  return WindowedNAsyncSequence.WindowedNAsyncSequenceIterator.next()(v11);
}

uint64_t sub_1D2F50A50(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1D2F50D08;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_1D2F50B78;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D2F50B78()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  (*(void (**)(void, void))(v0[9] + 8))(v0[12], v0[8]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = v0[22];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_1D2F50C60()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2F50D08()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  (*(void (**)(void, void))(v0[9] + 8))(v0[12], v0[8]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D2F50DE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1BA74;
  return WindowedNAsyncSequence.WindowedNAsyncSequenceIterator.next()(a2);
}

uint64_t sub_1D2F50E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1D2F53E18;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_1D2F50F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for WindowedNAsyncSequence() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t WindowedNAsyncSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, (char *)v2 + *(int *)(v5 + 36), v4);
  return sub_1D2F4FF28(v8, (uint64_t)v7, v4, a2);
}

uint64_t sub_1D2F510CC(uint64_t a1, uint64_t a2)
{
  return sub_1D2F510E4(a1, a2, (void (*)(void))WindowedNAsyncSequence.makeAsyncIterator());
}

uint64_t sub_1D2F510E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v5(v3, a1);
}

uint64_t AsyncSequence.window2()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t AsyncSequence.windowN(length:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a2);
  *(void *)a3 = a1;
  uint64_t v10 = type metadata accessor for WindowedNAsyncSequence();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(&a3[*(int *)(v10 + 36)], v9, a2);
}

uint64_t sub_1D2F51328()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_1D2F51334()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D2F51350()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D2F5136C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1D2F51374()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D2F51404(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1D2F514BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1D2F514E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D2F51538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D2F51588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D2F515D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D2F51628(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1D2F51784(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1D2F5199CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for WindowedAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2F519DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1D2F519E4()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_1D30022F8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D2F51AFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || v11 + (v10 & ~v9) + 1 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = v7;
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v18 = (const void *)(((unint64_t)a2 + v10) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v16))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v17), v18, v11);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v17, v18, v16);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v10) & v17, 0, 1, v16);
    }
    *(unsigned char *)(v11 + (((unint64_t)a1 + v10) & v17)) = *((unsigned char *)v18 + v11);
  }
  return a1;
}

uint64_t sub_1D2F51D24(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = v6;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(unint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t sub_1D2F51E7C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    uint64_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  *((unsigned char *)v10 + v17) = *((unsigned char *)v11 + v17);
  return a1;
}

uint64_t sub_1D2F52014(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  *((unsigned char *)v10 + v17) = *((unsigned char *)v11 + v17);
  return a1;
}

uint64_t sub_1D2F52228(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    size_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  *((unsigned char *)v10 + v17) = *((unsigned char *)v11 + v17);
  return a1;
}

uint64_t sub_1D2F523C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  size_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  *((unsigned char *)v10 + v17) = *((unsigned char *)v11 + v17);
  return a1;
}

uint64_t sub_1D2F525D4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v6) {
    unsigned int v12 = v6;
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0xFE) {
    unsigned int v12 = 254;
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v10) {
    ++v14;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = *(void *)(v5 + 64) + v13;
  if (a2 > v12)
  {
    uint64_t v16 = v14 + (v15 & ~v13) + 1;
    char v17 = 8 * v16;
    if (v16 > 3) {
      goto LABEL_14;
    }
    unsigned int v19 = ((a2 - v12 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v19 >= 2)
    {
LABEL_14:
      int v18 = *((unsigned __int8 *)a1 + v16);
      if (!*((unsigned char *)a1 + v16)) {
        goto LABEL_31;
      }
LABEL_21:
      int v20 = (v18 - 1) << v17;
      if (v16 > 3) {
        int v20 = 0;
      }
      if (v16)
      {
        if (v16 <= 3) {
          int v21 = v16;
        }
        else {
          int v21 = 4;
        }
        switch(v21)
        {
          case 2:
            int v22 = *a1;
            break;
          case 3:
            int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v22 = *(_DWORD *)a1;
            break;
          default:
            int v22 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v22 = 0;
      }
      int v28 = v12 + (v22 | v20);
      return (v28 + 1);
    }
  }
LABEL_31:
  if (v6 != v12)
  {
    unint64_t v25 = ((unint64_t)a1 + v15) & ~v13;
    if (v11 == v12)
    {
      if (v10 >= 2)
      {
        unsigned int v26 = (*(uint64_t (**)(unint64_t))(v9 + 48))(v25);
        if (v26 >= 2) {
          return v26 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
    unsigned int v27 = *(unsigned __int8 *)(v25 + v14);
    if (v27 < 2) {
      return 0;
    }
    int v28 = (v27 + 2147483646) & 0x7FFFFFFF;
    return (v28 + 1);
  }
  uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
  return v23(a1, v6, AssociatedTypeWitness);
}

void sub_1D2F528DC(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  int v9 = 0;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  int v12 = *(_DWORD *)(v10 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v13 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(v7 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = *(void *)(v10 + 64);
  if (v14 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = v14;
  }
  uint64_t v19 = v15 + v16;
  uint64_t v20 = (v15 + v16) & ~v16;
  if (!v12) {
    ++v17;
  }
  size_t v21 = v17 + v20 + 1;
  if (a3 <= v18) {
    goto LABEL_19;
  }
  if (v21 <= 3)
  {
    unsigned int v22 = ((a3 - v18 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v22))
    {
      int v9 = 4;
      if (v18 >= a2) {
        goto LABEL_27;
      }
      goto LABEL_20;
    }
    if (v22 >= 0x100) {
      int v9 = 2;
    }
    else {
      int v9 = v22 > 1;
    }
LABEL_19:
    if (v18 >= a2) {
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  int v9 = 1;
  if (v18 >= a2)
  {
LABEL_27:
    uint64_t v26 = ~v16;
    switch(v9)
    {
      case 1:
        a1[v21] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_32;
      case 2:
        *(_WORD *)&a1[v21] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_32;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)&a1[v21] = 0;
        goto LABEL_31;
      default:
LABEL_31:
        if (a2)
        {
LABEL_32:
          if (v8 == v18)
          {
            unsigned int v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
            v27(a1, a2, v8, AssociatedTypeWitness);
          }
          else
          {
            unint64_t v28 = (unint64_t)&a1[v19] & v26;
            if (v13 == v18)
            {
              uint64_t v29 = *(void (**)(unint64_t, void))(v11 + 56);
              v29(v28, (a2 + 1));
            }
            else
            {
              *(unsigned char *)(v28 + v17) = a2 + 1;
            }
          }
        }
        break;
    }
    return;
  }
LABEL_20:
  unsigned int v23 = ~v18 + a2;
  if (v21 < 4)
  {
    int v24 = (v23 >> (8 * v21)) + 1;
    if (v21)
    {
      int v25 = v23 & ~(-1 << (8 * v21));
      bzero(a1, v21);
      if (v21 == 3)
      {
        *(_WORD *)a1 = v25;
        a1[2] = BYTE2(v25);
      }
      else if (v21 == 2)
      {
        *(_WORD *)a1 = v25;
      }
      else
      {
        *a1 = v25;
      }
    }
  }
  else
  {
    bzero(a1, v21);
    *(_DWORD *)a1 = v23;
    int v24 = 1;
  }
  switch(v9)
  {
    case 1:
      a1[v21] = v24;
      break;
    case 2:
      *(_WORD *)&a1[v21] = v24;
      break;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x1D2F52C68);
    case 4:
      *(_DWORD *)&a1[v21] = v24;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for WindowedAsyncSequence.WindowedAsyncSequenceIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2F52CA8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D2F52D48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_1D2F52E34(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

void *sub_1D2F52E70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1D2F52EE0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1D2F52F50(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1D2F52FC0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1D2F53030(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1D2F531AC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1D2F533E0);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 8] & ~v8;
        unsigned int v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t type metadata accessor for WindowedNAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2F53420()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D2F534E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    BOOL v10 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *BOOL v10 = *v11;
    unint64_t v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D2F5361C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F536B8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D2F53774(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_1D2F5383C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_1D2F538F4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_1D2F539B4(unsigned __int8 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v9 < 4) {
      unsigned int v10 = ((a2 - v7 + 255) >> (8 * v9)) + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v9];
        if (!a1[v9]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v9];
        if (*(_WORD *)&a1[v9]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1D2F53B80);
      case 4:
        int v13 = *(_DWORD *)&a1[v9];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v9);
        if (v9 >= 4) {
          int v15 = 0;
        }
        if (v9 == 1) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)((((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    unint64_t v17 = *(uint64_t (**)(unsigned __int8 *))(v5 + 48);
    return v17(a1);
  }
}

void sub_1D2F53B94(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v9 >= a3)
  {
    int v14 = 0;
    if (v9 >= a2)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v20 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v20 = (a2 - 1);
              }
              *uint64_t v19 = v20;
            }
            else
            {
              unint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
              v18(a1, a2);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (v10 <= 3) {
      unsigned int v12 = ((a3 - v9 + 255) >> v11) + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    if (v9 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v15 = ~v9 + a2;
  if (v10 < 4) {
    int v16 = (v15 >> v11) + 1;
  }
  else {
    int v16 = 1;
  }
  if (v10 >= 4) {
    unsigned int v17 = v15;
  }
  else {
    unsigned int v17 = v15;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v17;
  }
  else {
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1D2F53DD8);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for WindowedNAsyncSequence.WindowedNAsyncSequenceIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2F53E1C(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(type metadata accessor for UniversalSuggestionCandidate(0) - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      char v11 = a1(&v12, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v12)
      {
        MEMORY[0x1D942DCC0](v11);
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D3001E28();
        }
        sub_1D3001E68();
        sub_1D3001DE8();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.__allocating_init(logTarget:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1D2F0BE68(a1, v2 + 16);
  return v2;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.init(logTarget:)(long long *a1)
{
  sub_1D2F0BE68(a1, v1 + 16);
  return v1;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.__allocating_init()()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  unsigned int v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  uint64_t v3 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v2) {
    uint64_t v3 = &type metadata for DisabledPLUSEventLogTarget;
  }
  uint64_t v4 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v2) {
    uint64_t v4 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  }
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  type metadata accessor for PLUSUniversalSuggestionsRuntimeLogger();
  uint64_t v5 = swift_allocObject();
  sub_1D2F0BE68(&v7, v5 + 16);
  return v5;
}

uint64_t type metadata accessor for PLUSUniversalSuggestionsRuntimeLogger()
{
  return self;
}

uint64_t sub_1D2F54100(uint64_t a1)
{
  uint64_t v3 = sub_1D30010A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F37950(v1 + 16, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v7
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1D2F0BE68(v12, v7 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v6, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v3);
  return v7;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:)(long long *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1D2F0BE68(a1, v4 + 16);
  uint64_t v7 = v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, a2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v8);
  return v4;
}

uint64_t type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger()
{
  uint64_t result = qword_1EA6990A0;
  if (!qword_1EA6990A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2F54428(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v19 - v10;
  sub_1D2F37950(v2 + 16, (uint64_t)v20);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(v11, a1, v5);
  v12(v9, a2, v5);
  type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v13
      + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1D2F0BE68(v20, v13 + 16);
  int v16 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v16(v13 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v11, v5);
  uint64_t v17 = v13 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId;
  v16(v13 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, v9, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  return v13;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:plusId:)(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1D2F0BE68(a1, v6 + 16);
  uint64_t v9 = v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  uint64_t v10 = sub_1D30010A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v9, a2, v10);
  uint64_t v13 = v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId;
  v12(v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, a3, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  return v6;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t PLUSUniversalSuggestionsRuntimeLogger.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F547E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v20 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699098);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = v1
      + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  swift_beginAccess();
  sub_1D2F1CCAC(v15, (uint64_t)v14, &qword_1EA699098);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) != 1) {
    return sub_1D2F56C74((uint64_t)v14, v21);
  }
  sub_1D2F1CD78((uint64_t)v14, &qword_1EA699098);
  sub_1D2F1CCAC(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, (uint64_t)v8, &qword_1EBD62AA0);
  uint64_t v16 = v20;
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v20);
  uint64_t v18 = v21;
  if (v17 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v16);
    sub_1D2F47F74((uint64_t)v4, v18);
    sub_1D2F1CD78((uint64_t)v8, &qword_1EBD62AA0);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v21, v8, v16);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v18, 0, 1, v16);
  }
  sub_1D2F1CCAC(v18, (uint64_t)v12, &qword_1EBD62AA0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  swift_beginAccess();
  sub_1D2F56C0C((uint64_t)v12, v15);
  return swift_endAccess();
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.init(logTarget:requestId:)(long long *a1, uint64_t a2)
{
  uint64_t v5 = v2
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1D2F0BE68(a1, v2 + 16);
  uint64_t v7 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, a2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v8);
  return v2;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.init(logTarget:requestId:plusId:)(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1D2F0BE68(a1, v3 + 16);
  uint64_t v9 = v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  uint64_t v10 = sub_1D30010A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v12(v9, a2, v10);
  uint64_t v13 = v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId;
  v12(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, a3, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  return v3;
}

void sub_1D2F54DB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v34 - v12;
  sub_1D2F547E4((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D2F1CD78((uint64_t)v6, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D3001918();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBD65778);
    uint64_t v15 = sub_1D30018F8();
    os_log_type_t v16 = sub_1D30020B8();
    if (os_log_type_enabled(v15, v16))
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v17 = 0;
      _os_log_impl(&dword_1D2F05000, v15, v16, "Could not generate a plus logging identifier for a SELF event donation", v17, 2u);
      MEMORY[0x1D942F2D0](v17, -1, -1);
    }
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    type metadata accessor for PLUSSchemaEventConstructor();
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v11, v7);
    *(_DWORD *)(v19
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    MEMORY[0x1F4188790](v20);
    v34[-2] = v13;
    unint64_t v21 = sub_1D2F53E1C((void *(*)(uint64_t *__return_ptr, uint64_t))sub_1D2F568C4, (uint64_t)&v34[-4], a1);
    uint64_t v22 = v21;
    if (v21 >> 62) {
      uint64_t v23 = sub_1D30025A8();
    }
    else {
      uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    int v24 = sub_1D2F32654((uint64_t)v1+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v22, v23 != 0);
    swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v25 = v1[5];
      uint64_t v26 = v2[6];
      __swift_project_boxed_opaque_existential_1(v2 + 2, v2[5]);
      PLUSEventLogTarget.emitMessage(_:)((uint64_t)v24, v25, v26);

      swift_setDeallocating();
      unsigned int v27 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v27(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
      swift_deallocClassInstance();
      v27((uint64_t)v13, v7);
    }
    else
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1D3001918();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EBD65778);
      uint64_t v29 = sub_1D30018F8();
      os_log_type_t v30 = sub_1D30020B8();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v35 = v32;
        *(_DWORD *)uint64_t v31 = 136315138;
        v34[1] = sub_1D2F09508(0xD000000000000028, 0x80000001D300FA20, &v35);
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v29, v30, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v32, -1, -1);
        MEMORY[0x1D942F2D0](v31, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else
      {
        swift_setDeallocating();
        id v33 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
        v33(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
        swift_deallocClassInstance();

        v33((uint64_t)v13, v7);
      }
    }
  }
}

void sub_1D2F55368(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v32 - v12;
  sub_1D2F547E4((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D2F1CD78((uint64_t)v6, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D3001918();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBD65778);
    uint64_t v15 = sub_1D30018F8();
    os_log_type_t v16 = sub_1D30020B8();
    if (os_log_type_enabled(v15, v16))
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v17 = 0;
      _os_log_impl(&dword_1D2F05000, v15, v16, "Could not generate a plus logging identifier for a SELF event donation", v17, 2u);
      MEMORY[0x1D942F2D0](v17, -1, -1);
    }
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v13, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    type metadata accessor for PLUSSchemaEventConstructor();
    uint64_t v19 = swift_allocObject();
    v18((char *)(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v11, v7);
    *(_DWORD *)(v19
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    uint64_t v20 = sub_1D2F328F8(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, a1 & 1, 0);
    if (v20)
    {
      unint64_t v21 = v20;
      uint64_t v22 = (void *)(v1 + 16);
      uint64_t v23 = *(void *)(v1 + 40);
      uint64_t v24 = *(void *)(v2 + 48);
      __swift_project_boxed_opaque_existential_1(v22, v23);
      PLUSEventLogTarget.emitMessage(_:)((uint64_t)v21, v23, v24);
      swift_setDeallocating();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v25(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
      swift_deallocClassInstance();

      v25((uint64_t)v13, v7);
    }
    else
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1D3001918();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EBD65778);
      unsigned int v27 = sub_1D30018F8();
      os_log_type_t v28 = sub_1D30020B8();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v33 = v30;
        *(_DWORD *)uint64_t v29 = 136315138;
        uint64_t v32 = sub_1D2F09508(0xD000000000000029, 0x80000001D300FA50, &v33);
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v27, v28, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v30, -1, -1);
        MEMORY[0x1D942F2D0](v29, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else
      {
        swift_setDeallocating();
        uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
        v31(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v7);
        swift_deallocClassInstance();

        v31((uint64_t)v13, v7);
      }
    }
  }
}

void sub_1D2F558A8(uint64_t a1, unsigned char *a2)
{
  os_log_t v57 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v51[-v8];
  uint64_t v10 = sub_1D30010A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v56 = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  os_log_type_t v16 = &v51[-v15];
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v51[-v17];
  sub_1D2F547E4((uint64_t)v9);
  uint64_t v19 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
    sub_1D2F1CD78((uint64_t)v9, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1D3001918();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EBD65778);
    unint64_t v21 = sub_1D30018F8();
    os_log_type_t v22 = sub_1D30020B8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1D2F05000, v21, v22, "Could not generate a plus logging identifier for a SELF event donation", v23, 2u);
      MEMORY[0x1D942F2D0](v23, -1, -1);
    }
  }
  else
  {
    unint64_t v53 = v2;
    uint64_t v54 = a1;
    uint64_t v24 = v11;
    uint64_t v25 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32);
    v25(v18, v9, v10);
    uint64_t v55 = v24;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v24 + 16))(v16, v18, v10);
    type metadata accessor for PLUSSchemaEventConstructor();
    uint64_t v26 = swift_allocObject();
    v25((unsigned char *)(v26 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v16, v10);
    *(_DWORD *)(v26
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    int v52 = v57[16];
    int v27 = v57[17];
    type metadata accessor for PLUSLoggingIdGenerator();
    os_log_t v57 = v18;
    static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)((uint64_t)v18, v54, (uint64_t)v7);
    if (v19(v7, 1, v10) == 1)
    {
      uint64_t v28 = v10;
      sub_1D2F1CD78((uint64_t)v7, &qword_1EBD62AA0);
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1D3001918();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBD65778);
      uint64_t v30 = sub_1D30018F8();
      os_log_type_t v31 = sub_1D30020B8();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t v59 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v58 = sub_1D2F09508(0xD000000000000037, 0x80000001D300FA80, &v59);
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v30, v31, "PLUSUniversalSuggestionsRuntimeLogger.%s:  cannot generate a suggestion link id", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v33, -1, -1);
        MEMORY[0x1D942F2D0](v32, -1, -1);

        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v57, v28);
      }
      else
      {
        swift_setDeallocating();
        uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        v43(v26 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v28);
        swift_deallocClassInstance();

        v43((uint64_t)v57, v28);
      }
    }
    else
    {
      uint64_t v34 = (v52 + 1);
      uint64_t v35 = (uint64_t)v56;
      v25(v56, v7, v10);
      char v36 = v53;
      char v37 = sub_1D2F32B80((uint64_t)v53+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v35, v34, (v27 + 1), 0);
      if (v37)
      {
        char v38 = v37;
        char v39 = v36 + 2;
        uint64_t v41 = v36[5];
        uint64_t v40 = v36[6];
        __swift_project_boxed_opaque_existential_1(v39, v41);
        PLUSEventLogTarget.emitMessage(_:)((uint64_t)v38, v41, v40);

        swift_release();
        char v42 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        v42(v35, v10);
        v42((uint64_t)v57, v10);
      }
      else
      {
        uint64_t v44 = v10;
        if (qword_1EBD63A48 != -1) {
          swift_once();
        }
        uint64_t v45 = sub_1D3001918();
        __swift_project_value_buffer(v45, (uint64_t)qword_1EBD65778);
        int v46 = sub_1D30018F8();
        os_log_type_t v47 = sub_1D30020B8();
        if (os_log_type_enabled(v46, v47))
        {
          unint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          uint64_t v59 = v49;
          *(_DWORD *)unint64_t v48 = 136315138;
          uint64_t v58 = sub_1D2F09508(0xD000000000000037, 0x80000001D300FA80, &v59);
          sub_1D3002318();
          _os_log_impl(&dword_1D2F05000, v46, v47, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v49, -1, -1);
          MEMORY[0x1D942F2D0](v48, -1, -1);
        }

        swift_release();
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        v50(v35, v44);
        v50((uint64_t)v57, v44);
      }
    }
  }
}

void sub_1D2F5601C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v53 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = sub_1D30010A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v48 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v48 - v18;
  int v51 = *a2;
  int v52 = v2;
  sub_1D2F547E4((uint64_t)v9);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v20(v9, 1, v10) == 1)
  {
    sub_1D2F1CD78((uint64_t)v9, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1D3001918();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBD65778);
    os_log_type_t v22 = sub_1D30018F8();
    os_log_type_t v23 = sub_1D30020B8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1D2F05000, v22, v23, "Could not generate a plus logging identifier for a SELF event donation", v24, 2u);
      MEMORY[0x1D942F2D0](v24, -1, -1);
    }
  }
  else
  {
    unint64_t v48 = v14;
    uint64_t v25 = v11;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v26(v19, v9, v10);
    uint64_t v50 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v17, v19, v10);
    type metadata accessor for PLUSSchemaEventConstructor();
    uint64_t v27 = swift_allocObject();
    v26((char *)(v27 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v17, v10);
    *(_DWORD *)(v27
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    type metadata accessor for PLUSLoggingIdGenerator();
    uint64_t v49 = v19;
    static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)((uint64_t)v19, v53, (uint64_t)v7);
    uint64_t v28 = v10;
    if (v20(v7, 1, v10) == 1)
    {
      sub_1D2F1CD78((uint64_t)v7, &qword_1EBD62AA0);
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1D3001918();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBD65778);
      uint64_t v30 = sub_1D30018F8();
      os_log_type_t v31 = sub_1D30020B8();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        uint64_t v55 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v54 = sub_1D2F09508(0xD000000000000036, 0x80000001D300FAC0, &v55);
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v30, v31, "PLUSUniversalSuggestionsRuntimeLogger.%s:  cannot generate a suggestion link id", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v33, -1, -1);
        MEMORY[0x1D942F2D0](v32, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v28);
      }
      else
      {
        swift_setDeallocating();
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
        v41(v27 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v28);
        swift_deallocClassInstance();

        v41((uint64_t)v49, v28);
      }
    }
    else
    {
      if (v51) {
        uint64_t v34 = 2;
      }
      else {
        uint64_t v34 = 1;
      }
      uint64_t v35 = (uint64_t)v48;
      v26(v48, v7, v10);
      char v36 = v52;
      char v37 = sub_1D2F32E7C((uint64_t)v52+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId, v35, v34);
      if (v37)
      {
        char v38 = v37;
        uint64_t v39 = v36[5];
        uint64_t v40 = v36[6];
        __swift_project_boxed_opaque_existential_1(v36 + 2, v39);
        PLUSEventLogTarget.emitMessage(_:)((uint64_t)v38, v39, v40);
      }
      else
      {
        if (qword_1EBD63A48 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_1D3001918();
        __swift_project_value_buffer(v42, (uint64_t)qword_1EBD65778);
        uint64_t v43 = sub_1D30018F8();
        os_log_type_t v44 = sub_1D30020B8();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          uint64_t v46 = swift_slowAlloc();
          uint64_t v55 = v46;
          *(_DWORD *)uint64_t v45 = 136315138;
          uint64_t v54 = sub_1D2F09508(0xD000000000000036, 0x80000001D300FAC0, &v55);
          sub_1D3002318();
          _os_log_impl(&dword_1D2F05000, v43, v44, "PLUSUniversalSuggestionsRuntimeLogger.%s:  failed to create PLUS SELF event templates", v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v46, -1, -1);
          MEMORY[0x1D942F2D0](v45, -1, -1);
        }
      }
      swift_release();
      os_log_type_t v47 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      v47(v35, v28);
      v47((uint64_t)v49, v28);
    }
  }
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1D2F1CD78(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, &qword_1EBD62AA0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1D2F1CD78(v0+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, &qword_1EA699098);
  return v0;
}

uint64_t PLUSUniversalSuggestionsRuntimeRequestLogger.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  sub_1D2F1CD78(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, &qword_1EBD62AA0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId;
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1D2F1CD78(v0+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, &qword_1EA699098);
  return swift_deallocClassInstance();
}

NSObject *sub_1D2F568C4@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t result = sub_1D2FFEEC4(*(void *)(v2 + 16), a1);
  *a2 = result;
  return result;
}

uint64_t method lookup function for PLUSUniversalSuggestionsRuntimeLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PLUSUniversalSuggestionsRuntimeLogger);
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeLogger.__allocating_init(logTarget:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeLogger.make(requestId:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeLogger.make(requestId:plusId:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_1D2F56970()
{
  return type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
}

void sub_1D2F56978()
{
  sub_1D2F56B58();
  if (v0 <= 0x3F)
  {
    sub_1D30010A8();
    if (v1 <= 0x3F)
    {
      sub_1D2F56BB0();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for PLUSUniversalSuggestionsRuntimeRequestLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PLUSUniversalSuggestionsRuntimeRequestLogger);
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.__allocating_init(logTarget:requestId:plusId:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggesterQueried(matchedSuggestions:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggesterMetadata(isSuggesterEnabled:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggestionMetadata(suggestionId:suggestionMetadata:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsRuntimeRequestLogger.logSuggestionRedundancy(suggestionId:redundancyState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

void sub_1D2F56B58()
{
  if (!qword_1EBD62AA8)
  {
    sub_1D30010A8();
    unint64_t v0 = sub_1D30022F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD62AA8);
    }
  }
}

void sub_1D2F56BB0()
{
  if (!qword_1EA6990B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBD62AA0);
    unint64_t v0 = sub_1D30022F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA6990B0);
    }
  }
}

uint64_t sub_1D2F56C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F56C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F56CE0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return BPSDemandMax();
  }
  uint64_t v3 = 0;
  int v4 = 0;
  uint64_t v5 = v2 - 1;
  do
  {
    uint64_t v6 = *(void *)(a2 + 32 + 8 * v3);
    v4 |= v6 == *MEMORY[0x1E4F501C8];
    if (v4)
    {
      if (v5 == v3) {
        return *MEMORY[0x1E4F501C8];
      }
      uint64_t result = 0;
    }
    else
    {
      if (v6 != *MEMORY[0x1E4F501C0])
      {
        BOOL v7 = __OFADD__(v6, result);
        result += v6;
        if (v7) {
          uint64_t result = 0x7FFFFFFFFFFFFFFFLL;
        }
      }
      if (v5 == v3) {
        return BPSDemandMax();
      }
    }
    ++v3;
  }
  while (!__OFADD__(v3, 1));
  __break(1u);
  return result;
}

uint64_t sub_1D2F56D7C()
{
  swift_release();
  return v0;
}

uint64_t sub_1D2F56D9C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s16DownstreamBufferCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2F56DEC()
{
  return swift_initClassMetadata2();
}

void sub_1D2F56E34(uint64_t a1)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  uint64_t v4 = sub_1D30022F8();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v27 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *(void **)((char *)v1 + qword_1EA6990C0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633A0);
  uint64_t inited = swift_initStackObject();
  long long v31 = xmmword_1D3004380;
  *(_OWORD *)(inited + 16) = xmmword_1D3004380;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = v11[4];
  uint64_t v13 = sub_1D2F56CE0(0, inited);
  swift_setDeallocating();
  void v11[4] = v13;
  id v14 = (id)*MEMORY[0x1E4F501C8];
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v33 = *MEMORY[0x1E4F501C0];
  uint64_t v30 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v16 = (void (**)(char *, uint64_t))(v8 + 8);
  while ((id)v13 == v14 || v13 >= 1 && v13 != v33)
  {
    swift_retain();
    sub_1D2FDC3A0((uint64_t)v7);
    swift_release();
    if ((*v15)(v7, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v29);
      uint64_t v13 = v11[4];
      break;
    }
    (*v30)(v10, v7, v3);
    uint64_t v17 = (void *)v11[2];
    swift_unknownObjectRetain();
    id v18 = objc_msgSend(v17, sel_receiveInput_, sub_1D3002768());
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = v31;
    *(void *)(v19 + 32) = v18;
    id v20 = (id)v11[4];
    *(void *)(v19 + 40) = v20;
    uint64_t v13 = (uint64_t)v14;
    if (v18 != v14)
    {
      uint64_t v13 = (uint64_t)v14;
      if (v20 != v14) {
        uint64_t v13 = BPSDemandMax();
      }
    }
    swift_bridgeObjectRelease();
    (*v16)(v10, v3);
    void v11[4] = v13;
  }
  if ((id)v13 == v14 || v13 >= 1 && v13 != v33)
  {
    uint64_t v21 = (void *)v11[3];
    if (v21)
    {
      if (v21 == (void *)1)
      {
        os_log_type_t v22 = (void *)v11[5];
        if (v22)
        {
          id v23 = (id)v11[5];
        }
        else
        {
          id v23 = objc_msgSend(self, sel_success);
          os_log_type_t v22 = 0;
        }
        uint64_t v25 = (void *)v11[2];
        id v26 = v22;
        objc_msgSend(v25, sel_receiveCompletion_, v23);
      }
      else
      {
        id v24 = v21;
        objc_msgSend(v24, sel_requestDemand_, v13);
        id v23 = v24;
        sub_1D2F1CC9C(v21);
      }
    }
  }
}

void sub_1D2F57248(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = a1;
  sub_1D2F56E34(a3);
}

id sub_1D2F5729C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1D2F57310();

  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6990C8);
    uint64_t v3 = (void *)sub_1D3001DA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

uint64_t sub_1D2F57310()
{
  id v1 = *(void **)(*(void *)(v0 + qword_1EA6990C0) + 24);
  if ((unint64_t)v1 < 2) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_upstreamSubscriptions);
  if (!v2)
  {
    sub_1D2F1CC9C(v1);
    return 0;
  }
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6990C8);
  uint64_t v4 = sub_1D3001DC8();
  sub_1D2F1CC9C(v1);

  return v4;
}

void sub_1D2F573A8()
{
  uint64_t v1 = *(void *)(v0 + qword_1EA6990C0);
  id v2 = *(void **)(v1 + 24);
  if ((unint64_t)v2 >= 2) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  *(void *)(v1 + 24) = 1;
  sub_1D2F1CC9C(v2);
  objc_msgSend(v3, sel_cancel);
}

void sub_1D2F57428(void *a1)
{
  id v1 = a1;
  sub_1D2F573A8();
}

void sub_1D2F57470()
{
}

id sub_1D2F57498()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s28DownstreamBufferSubscriptionCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2F574F4()
{
  return swift_release();
}

uint64_t _s28DownstreamBufferSubscriptionCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2F5751C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D2F57590()
{
  swift_unknownObjectRelease();
  sub_1D2F1CC9C(*(id *)(v0 + 24));

  swift_release();
  return v0;
}

uint64_t sub_1D2F575C8()
{
  sub_1D2F57590();
  return swift_deallocClassInstance();
}

uint64_t _s21DownstreamBufferStateCMa()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1D2F57610()
{
}

uint64_t sub_1D2F57640(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD611B8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D30010A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D3001018();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a2, sel_timestampInNanoseconds);
  objc_msgSend(a3, sel_timeIntervalSince1970);
  sub_1D3000FD8();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  uint64_t v18 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v8[*(int *)(v18 + 20)], v16, v13);
  *(void *)uint64_t v8 = v17;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
  swift_beginAccess();
  sub_1D2FBE544((uint64_t)v8, (uint64_t)v12);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

id sub_1D2F578C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD611B8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D30010A8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v2 + 24);
  if (!*(void *)(v18 + 16)) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1D2F0DD14(a1);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v41 = sub_1D3001018();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a2, 1, 1, v41);
  }
  id v21 = *(id *)(*(void *)(v18 + 56) + 8 * v19);
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v21, sel_clockIdentifier);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_10:

    uint64_t v33 = &qword_1EBD62AA0;
    uint64_t v34 = (uint64_t)v13;
LABEL_18:
    sub_1D2F1CD78(v34, v33);
    goto LABEL_19;
  }
  id v23 = v22;
  id v49 = v21;
  id v24 = objc_msgSend(v22, sel_value);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = sub_1D3000F68();
    uint64_t v47 = v15;
    uint64_t v48 = a2;
    uint64_t v27 = v26;
    unint64_t v29 = v28;

    sub_1D2F587AC(v27, v29, (uint64_t)v13);
    uint64_t v30 = v27;
    unint64_t v31 = v29;
    uint64_t v15 = v47;
    a2 = v48;
    sub_1D2F0D1CC(v30, v31);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }

  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  id v21 = v49;
  if (v32 == 1) {
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  swift_beginAccess();
  uint64_t v35 = *(void *)(v3 + 16);
  if (!*(void *)(v35 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v8, 1, 1, v9);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

    uint64_t v33 = &qword_1EBD611B8;
    uint64_t v34 = (uint64_t)v8;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_1D2F0DD14((uint64_t)v17);
  uint64_t v37 = v51;
  if (v38)
  {
    sub_1D2F15C14(*(void *)(v35 + 56) + *(void *)(v51 + 72) * v36, (uint64_t)v8);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v8, v39, 1, v9);
  swift_bridgeObjectRelease();
  int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v8, 1, v9);
  id v21 = v49;
  if (v40 == 1) {
    goto LABEL_17;
  }
  uint64_t v43 = (uint64_t)v8;
  os_log_type_t v44 = v50;
  sub_1D2F15C78(v43, (uint64_t)v50);
  id result = objc_msgSend(v21, sel_timestampInNanoseconds);
  if (__OFSUB__(result, *v44))
  {
    __break(1u);
  }
  else
  {
    sub_1D3000FB8();

    sub_1D2F5837C((uint64_t)v44);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v45 = sub_1D3001018();
    return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(a2, 0, 1, v45);
  }
  return result;
}

uint64_t sub_1D2F57E00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LogicalClockTable()
{
  return self;
}

uint64_t *sub_1D2F57E64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1D3001018();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1D2F57F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1D3001018();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *sub_1D2F57F98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1D3001018();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1D2F58014(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1D3001018();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1D2F58090(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1D3001018();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1D2F5810C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1D3001018();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D2F58188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F5819C);
}

uint64_t sub_1D2F5819C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1D3001018();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1D2F5820C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F58220);
}

uint64_t sub_1D2F58220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for LogicalClockTable.DeviceFixedContextTime()
{
  uint64_t result = qword_1EBD611A8;
  if (!qword_1EBD611A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2F582E0()
{
  uint64_t result = sub_1D3001018();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D2F5837C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for BiomeSubscribers()
{
  return &type metadata for BiomeSubscribers;
}

uint64_t sub_1D2F583E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D2F5847C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t sub_1D2F584EC()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Reference()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for EnvironmentFeatureFlags()
{
  return &type metadata for EnvironmentFeatureFlags;
}

uint64_t sub_1D2F585CC()
{
  return sub_1D2F585FC(sub_1D2F9B024);
}

uint64_t sub_1D2F585E4()
{
  return sub_1D2F585FC(sub_1D2F9B038);
}

uint64_t sub_1D2F585FC(uint64_t (*a1)(void))
{
  if (objc_msgSend(v1, sel_anyEventType) == 6)
  {
    id v3 = objc_msgSend(v1, sel_payload);
    if (v3)
    {
      uint64_t v4 = sub_1D3000F68();
      unint64_t v6 = v5;

      id v3 = (id)sub_1D3000F58();
      sub_1D2F0D1CC(v4, v6);
    }
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v3);

    id v8 = objc_msgSend(v7, sel_event);
    if (!v8) {
      return 0;
    }
  }
  else
  {
    id v8 = v1;
  }
  uint64_t v10 = a1();

  return v10;
}

uint64_t static UEIEvents.clientEvent(from:)()
{
  return sub_1D2F585FC(sub_1D2F9B024);
}

uint64_t sub_1D2F58730()
{
  unint64_t v0 = sub_1D2F23500((uint64_t)&unk_1F2A15738);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6990D0);
  uint64_t result = swift_arrayDestroy();
  qword_1EA6A01F0 = v0;
  return result;
}

void static UEIEvents.turnID(_:)(uint64_t a1@<X8>)
{
}

uint64_t static UEIEvents.turnID(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2F58E8C(a1, (SEL *)&selRef_eventMetadata, (SEL *)&selRef_turnID, a2);
}

uint64_t sub_1D2F587AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1D30010A8();
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v11 = (int)v11;
LABEL_6:
      if (v11 == 16)
      {
        uint64_t v27 = v7;
        if (!v10)
        {
          uint64_t v28 = a1;
          __int16 v29 = a2;
          char v30 = BYTE2(a2);
          char v31 = BYTE3(a2);
          char v32 = BYTE4(a2);
          char v33 = BYTE5(a2);
          (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v9, &v28, v6);
          goto LABEL_20;
        }
        if (v10 != 1)
        {
          uint64_t v21 = *(void *)(a1 + 16);
          swift_retain();
          swift_retain();
          uint64_t v22 = sub_1D3000D88();
          if (!v22)
          {
LABEL_27:
            sub_1D3000D98();
            __break(1u);
            JUMPOUT(0x1D2F58ADCLL);
          }
          uint64_t v23 = v22;
          uint64_t v24 = sub_1D3000DA8();
          BOOL v14 = __OFSUB__(v21, v24);
          uint64_t v25 = v21 - v24;
          if (!v14)
          {
            sub_1D3000D98();
            (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v9, v23 + v25, v6);
            swift_release();
            swift_release();
            goto LABEL_20;
          }
          goto LABEL_24;
        }
        if ((int)a1 <= a1 >> 32)
        {
          sub_1D2F454DC(a1, a2);
          uint64_t v15 = sub_1D3000D88();
          if (!v15)
          {
LABEL_26:
            sub_1D3000D98();
            __break(1u);
            goto LABEL_27;
          }
          uint64_t v16 = v15;
          uint64_t v17 = sub_1D3000DA8();
          uint64_t v18 = (int)a1 - v17;
          if (!__OFSUB__((int)a1, v17))
          {
            sub_1D3000D98();
            (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v9, v16 + v18, v6);
            sub_1D2F0D1CC(a1, a2);
LABEL_20:
            (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(a3, v9, v6);
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(a3, 0, 1, v6);
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_13:
      unint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
      return v19(a3, 1, 1, v6);
    case 2uLL:
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v11 = v12 - v13;
      if (!v14) {
        goto LABEL_6;
      }
      goto LABEL_22;
    case 3uLL:
      goto LABEL_13;
    default:
      uint64_t v11 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t static UEIEvents.dialogID(_:)(uint64_t a1)
{
  return sub_1D2F58B20(a1, (uint64_t (*)(void))_s28SiriPrivateLearningAnalytics9UEIEventsO8dialogIDySSSgSo19SISchemaClientEventCFZ_0);
}

uint64_t static UEIEvents.dialogPhase(_:)(uint64_t a1)
{
  return sub_1D2F58B20(a1, (uint64_t (*)(void))_s28SiriPrivateLearningAnalytics9UEIEventsO11dialogPhaseySSSgSo19SISchemaClientEventCFZ_0);
}

uint64_t sub_1D2F58B20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = sub_1D2F585FC(sub_1D2F9B024);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = (void *)v3;
  uint64_t v5 = a2();

  return v5;
}

void *static UEIEvents.dismissalReason(_:)()
{
  uint64_t result = (void *)sub_1D2F585FC(sub_1D2F9B024);
  if (result)
  {
    unint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_uiStateTransition);
    if (v2 && (uint64_t v3 = v2, v4 = objc_msgSend(v2, sel_dismissed), v3, v4))
    {
      signed int v5 = objc_msgSend(v4, sel_dismissalReason);

      return (void *)v5;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

id static UEIEvents.dismissalReason(_:)(void *a1)
{
  id result = objc_msgSend(a1, sel_uiStateTransition);
  if (result)
  {
    id v2 = result;
    id v3 = objc_msgSend(result, sel_dismissed);

    if (v3)
    {
      signed int v4 = objc_msgSend(v3, sel_dismissalReason);

      return (id)v4;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t static UEIEvents.dismissalReasonAsString(_:)(uint64_t a1)
{
  return sub_1D2F58B20(a1, (uint64_t (*)(void))_s28SiriPrivateLearningAnalytics9UEIEventsO23dismissalReasonAsStringySSSgSo19SISchemaClientEventCFZ_0);
}

void static UEIEvents.previousTurnID(_:)(uint64_t a1@<X8>)
{
}

void sub_1D2F58D04(SEL *a1@<X1>, SEL *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void *)sub_1D2F585FC(sub_1D2F9B024);
  if (v6)
  {
    id v16 = v6;
    id v7 = [v6 *a1];
    if (v7 && (uint64_t v8 = v7, v9 = [v7 *a2], v8, v9))
    {
      uint64_t v10 = sub_1D3000F68();
      unint64_t v12 = v11;

      sub_1D2F587AC(v10, v12, a3);
      sub_1D2F0D1CC(v10, v12);
    }
    else
    {
      uint64_t v15 = sub_1D30010A8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
    }
  }
  else
  {
    uint64_t v13 = sub_1D30010A8();
    BOOL v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    v14(a3, 1, 1, v13);
  }
}

uint64_t static UEIEvents.previousTurnID(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2F58E8C(a1, (SEL *)&selRef_clientConversationTrace, (SEL *)&selRef_previousTurnID, a2);
}

uint64_t sub_1D2F58E8C@<X0>(void *a1@<X0>, SEL *a2@<X1>, SEL *a3@<X2>, uint64_t a4@<X8>)
{
  id v6 = [a1 *a2];
  if (v6 && (id v7 = v6, v8 = [v6 *a3], v7, v8))
  {
    uint64_t v9 = sub_1D3000F68();
    unint64_t v11 = v10;

    sub_1D2F587AC(v9, v11, a4);
    return sub_1D2F0D1CC(v9, v11);
  }
  else
  {
    uint64_t v13 = sub_1D30010A8();
    BOOL v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a4, 1, 1, v13);
  }
}

void *_s28SiriPrivateLearningAnalytics9UEIEventsO8dialogIDySSSgSo19SISchemaClientEventCFZ_0(void *a1)
{
  id v2 = objc_msgSend(a1, sel_uufrShown);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_dialogIdentifier);

    if (v4)
    {
LABEL_5:
      id v6 = (void *)sub_1D3001B78();

      return v6;
    }
  }
  id v5 = objc_msgSend(a1, sel_uufrSaid);
  id v6 = v5;
  if (v5)
  {
    id v4 = objc_msgSend(v5, sel_dialogIdentifier);

    if (!v4) {
      return 0;
    }
    goto LABEL_5;
  }
  return v6;
}

id _s28SiriPrivateLearningAnalytics9UEIEventsO11dialogPhaseySSSgSo19SISchemaClientEventCFZ_0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_uufrSaid);
  id v2 = v1;
  if (!v1) {
    return 0;
  }
  id v3 = objc_msgSend(v1, sel_siriResponseContext);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_dialogPhase);

    if (v4)
    {
      id v3 = (id)sub_1D3001B78();
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

void *_s28SiriPrivateLearningAnalytics9UEIEventsO23dismissalReasonAsStringySSSgSo19SISchemaClientEventCFZ_0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_uiStateTransition);
  id v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_dismissed);

    if (v3)
    {
      int v4 = objc_msgSend(v3, sel_dismissalReason);

      if (qword_1EA698020 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v5 = qword_1EA6A01F0;
      if (*(void *)(qword_1EA6A01F0 + 16) && (unint64_t v6 = sub_1D2F0DD10(v4), (v7 & 1) != 0))
      {
        id v2 = *(void **)(*(void *)(v5 + 56) + 16 * v6);
        swift_bridgeObjectRetain();
      }
      else
      {
        id v2 = 0;
      }
      swift_endAccess();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

ValueMetadata *type metadata accessor for UEIEvents()
{
  return &type metadata for UEIEvents;
}

Swift::String_optional __swiftcall UniversalEntity.getName()()
{
  swift_retain();
  uint64_t v0 = sub_1D2F59298();
  id v2 = v1;
  swift_release();
  uint64_t v3 = v0;
  int v4 = v2;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_1D2F59298()
{
  unint64_t v0 = sub_1D30013D8();
  if (!v0) {
    return 0;
  }
  unint64_t v1 = v0;
  uint64_t v2 = v0 & 0xFFFFFFFFFFFFFF8;
  if (!(v0 >> 62))
  {
    if (*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  if (!sub_1D30025A8())
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D942E3A0](0, v1);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    unint64_t v5 = sub_1D2F593BC();
    if (v6)
    {
      uint64_t v7 = sub_1D2F5970C();
      if (v8)
      {
        uint64_t v9 = v7;
        swift_bridgeObjectRetain();
        sub_1D3001C68();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    return v5;
  }
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D2F593BC()
{
  unint64_t result = sub_1D30013D8();
  if (!result) {
    return result;
  }
  unint64_t v1 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D30025A8();
    if (v2) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_4:
      if (v2 < 1)
      {
        __break(1u);
        unint64_t result = swift_release();
        __break(1u);
        return result;
      }
      uint64_t v3 = 0;
      int v4 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if ((v1 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](v3, v1);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        if (v25)
        {
          uint64_t v5 = sub_1D3001BD8();
          uint64_t v7 = v6;
          swift_release();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v4 = sub_1D2F27B88(0, v4[2] + 1, 1, v4);
          }
          unint64_t v9 = v4[2];
          unint64_t v8 = v4[3];
          if (v9 >= v8 >> 1) {
            int v4 = sub_1D2F27B88((void *)(v8 > 1), v9 + 1, 1, v4);
          }
          v4[2] = v9 + 1;
          unint64_t v10 = &v4[2 * v9];
          v10[4] = v5;
          v10[5] = v7;
        }
        else
        {
          swift_release();
        }
        ++v3;
      }
      while (v2 != v3);
      goto LABEL_19;
    }
  }
  int v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
  swift_bridgeObjectRelease_n();
  uint64_t v11 = v4[2];
  if (v11)
  {
    unint64_t v12 = v4 + 5;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v18 = *(v12 - 1);
      uint64_t v17 = *v12;
      uint64_t v19 = HIBYTE(*v12) & 0xF;
      if ((*v12 & 0x2000000000000000) == 0) {
        uint64_t v19 = v18 & 0xFFFFFFFFFFFFLL;
      }
      if (v19)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2F09B08(0, *(void *)(v13 + 16) + 1, 1);
          uint64_t v13 = v24;
        }
        unint64_t v15 = *(void *)(v13 + 16);
        unint64_t v14 = *(void *)(v13 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1D2F09B08(v14 > 1, v15 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v15 + 1;
        uint64_t v16 = v13 + 16 * v15;
        *(void *)(v16 + 32) = v18;
        *(void *)(v16 + 40) = v17;
      }
      v12 += 2;
      --v11;
    }
    while (v11);
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v13;
  swift_retain();
  sub_1D2F59FE0(&v24);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
  sub_1D2F37FC8();
  uint64_t v20 = sub_1D3001B18();
  unint64_t v22 = v21;
  swift_release();
  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (v23)
  {
    uint64_t v24 = 34;
    unint64_t v25 = 0xE100000000000000;
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1D2F5970C()
{
  uint64_t result = sub_1D30013C8();
  if (result)
  {
    unint64_t v1 = result;
    swift_retain();
    sub_1D2F5AD54(v1);
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
    sub_1D2F37FC8();
    uint64_t v2 = sub_1D3001B18();
    unint64_t v4 = v3;
    swift_bridgeObjectRelease();
    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      return 91;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D2F59830(char *a1, char *a2)
{
  return sub_1D2FBC530(*a1, *a2);
}

uint64_t sub_1D2F5983C()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F598B8()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F59920()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F59998@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D3002638();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D2F599F8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702060386;
  if (*v1) {
    uint64_t v2 = 0x64616F6C796170;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D2F59A30()
{
  if (*v0) {
    return 0x64616F6C796170;
  }
  else {
    return 1702060386;
  }
}

uint64_t sub_1D2F59A64@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D3002638();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D2F59AC8(uint64_t a1)
{
  unint64_t v2 = sub_1D2F5B018();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F59B04(uint64_t a1)
{
  unint64_t v2 = sub_1D2F5B018();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1D2F59B40@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1D2F59B54()
{
  return sub_1D3001D88();
}

uint64_t sub_1D2F59BB4()
{
  return sub_1D3001D68();
}

uint64_t UniversalEntity.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6990D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F5B018();
  sub_1D3002998();
  if (!v2)
  {
    char v12 = 0;
    sub_1D2F5B06C();
    sub_1D3002688();
    sub_1D30013E8();
    char v11 = 1;
    sub_1D2F5B114(&qword_1EA6990F0);
    sub_1D3002688();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t UniversalEntity.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6990F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F5B018();
  sub_1D30029B8();
  char v12 = 0;
  sub_1D2F5B0C0();
  swift_retain();
  sub_1D30026E8();
  if (!v2)
  {
    v10[1] = v8;
    char v11 = 1;
    sub_1D30013E8();
    sub_1D2F5B114(&qword_1EA699108);
    sub_1D30026E8();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_1D2F59FB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return UniversalEntity.init(from:)(a1, a2);
}

uint64_t sub_1D2F59FC8(void *a1)
{
  return UniversalEntity.encode(to:)(a1);
}

uint64_t sub_1D2F59FE0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D2F5AD2C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1D2F5A04C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1D2F5A04C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1D3002718();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1D2F5A738(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  unint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      char v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          unint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1D2F5A808((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v97 = sub_1D2F5AD18((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1D3001E48();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  char v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1D3002778();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1D3002778()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_1D2F5AAA4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      char v11 = sub_1D2F5AAA4((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          id v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          os_log_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            id v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        unint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        long long v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        os_log_type_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1D2F5A808((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        char v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      char v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        char v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1D3002778() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)char v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1D3002598();
  __break(1u);
  return result;
}

uint64_t sub_1D2F5A738(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1D3002778(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2F5A808(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1D3002778() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1D3002778() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1D2F5ABA0((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

char *sub_1D2F5AAA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699138);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1D2F5ABA0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1D30025E8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1D2F5AC5C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1D30025E8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1D2F5AD18(uint64_t a1)
{
  return sub_1D2F5AAA4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D2F5AD2C(uint64_t a1)
{
  return sub_1D2F0A1DC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1D2F5AD40()
{
}

void *sub_1D2F5AD54(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D30025A8();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1D942E3A0](i - 4, a1);
          uint64_t v6 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          swift_retain();
          uint64_t v6 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        sub_1D3001428();
        if (v14)
        {
          unint64_t v7 = sub_1D2F593BC();
          uint64_t v9 = v8;
          swift_release();
          swift_release();
          if (v9)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v3 = sub_1D2F27B88(0, v3[2] + 1, 1, v3);
            }
            unint64_t v11 = v3[2];
            unint64_t v10 = v3[3];
            if (v11 >= v10 >> 1) {
              uint64_t v3 = sub_1D2F27B88((void *)(v10 > 1), v11 + 1, 1, v3);
            }
            v3[2] = v11 + 1;
            uint64_t v12 = &v3[2 * v11];
            v12[4] = v7;
            v12[5] = v9;
          }
        }
        else
        {
          swift_release();
        }
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t _s28SiriPrivateLearningAnalytics15UniversalEntityO2eeoiySbAC_ACtFZ_0()
{
  swift_retain();
  uint64_t v0 = sub_1D2F59298();
  uint64_t v2 = v1;
  swift_release();
  swift_retain();
  uint64_t v3 = sub_1D2F59298();
  uint64_t v5 = v4;
  swift_release();
  if (v2)
  {
    if (v5)
    {
      if (v0 == v3 && v2 == v5)
      {
        swift_bridgeObjectRelease();
        char v6 = 1;
      }
      else
      {
        char v6 = sub_1D3002778();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v6 = 0;
    }
  }
  else
  {
    if (!v5)
    {
      char v6 = 1;
      return v6 & 1;
    }
    char v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_1D2F5B018()
{
  unint64_t result = qword_1EA6990E0;
  if (!qword_1EA6990E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6990E0);
  }
  return result;
}

unint64_t sub_1D2F5B06C()
{
  unint64_t result = qword_1EA6990E8;
  if (!qword_1EA6990E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6990E8);
  }
  return result;
}

unint64_t sub_1D2F5B0C0()
{
  unint64_t result = qword_1EA699100;
  if (!qword_1EA699100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699100);
  }
  return result;
}

uint64_t sub_1D2F5B114(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D30013E8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *__swift_initWithCopy_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t __swift_destroy_strong()
{
  return swift_release();
}

void *__swift_assignWithCopy_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_assignWithTake_strong(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for UniversalEntity()
{
  return &type metadata for UniversalEntity;
}

unsigned char *storeEnumTagSinglePayload for UniversalEntity.Base(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D2F5B2ACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalEntity.Base()
{
  return &type metadata for UniversalEntity.Base;
}

unsigned char *storeEnumTagSinglePayload for UniversalEntity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F5B3B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalEntity.CodingKeys()
{
  return &type metadata for UniversalEntity.CodingKeys;
}

unint64_t sub_1D2F5B3EC()
{
  unint64_t result = qword_1EA699110;
  if (!qword_1EA699110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699110);
  }
  return result;
}

unint64_t sub_1D2F5B444()
{
  unint64_t result = qword_1EA699118;
  if (!qword_1EA699118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699118);
  }
  return result;
}

unint64_t sub_1D2F5B49C()
{
  unint64_t result = qword_1EA699120;
  if (!qword_1EA699120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699120);
  }
  return result;
}

unint64_t sub_1D2F5B4F4()
{
  unint64_t result = qword_1EA699128;
  if (!qword_1EA699128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699128);
  }
  return result;
}

unint64_t sub_1D2F5B548()
{
  unint64_t result = qword_1EA699130;
  if (!qword_1EA699130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699130);
  }
  return result;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.init(bundleIdentifier:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin() + 20);
  uint64_t v6 = sub_1D3000F18();
  uint64_t v9 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v5, a3, v6);
  unint64_t v7 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
  return v7(v5, 0, 1, v6);
}

uint64_t type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin()
{
  uint64_t result = qword_1EBD5DC38;
  if (!qword_1EBD5DC38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.bundleIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin() + 20);
  return sub_1D2F5B72C(v3, a1);
}

uint64_t sub_1D2F5B72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.init(bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  uint64_t v3 = (char *)a3 + *(int *)(type metadata accessor for SiriUserFeedbackLearningMLRuntimePlugin() + 20);
  uint64_t v4 = sub_1D3000F18();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 1, 1, v4);
}

uint64_t SiriUserFeedbackLearningMLRuntimePlugin.perform(_:)(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  return MEMORY[0x1F4188298](sub_1D2F5B838, 0, 0);
}

uint64_t sub_1D2F5B838()
{
  uint64_t v19 = v0;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  sub_1D2F3C528(v1, v0 + 16);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 128) = sub_1D2F09508(0x286D726F66726570, 0xEB00000000293A5FLL, &v15);
    sub_1D3002318();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1D2F3C528(v0 + 16, v0 + 72);
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    sub_1D3002438();
    uint64_t v16 = v18[0];
    unint64_t v17 = v18[1];
    sub_1D3001C68();
    strcpy((char *)v18, "triggerType: ");
    HIWORD(v18[1]) = -4864;
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    id v7 = *(id *)(v0 + 80);
    id v8 = objc_msgSend(v7, sel_description);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();

    uint64_t v9 = v16;
    unint64_t v10 = v17;
    sub_1D2F3C584(v0 + 72);
    *(void *)(v0 + 136) = sub_1D2F09508(v9, v10, &v15);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F3C584(v0 + 16);
    _os_log_impl(&dword_1D2F05000, v3, v4, "SiriUserFeedbackLearningMLRuntimePlugin.%s task: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v6, -1, -1);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }
  else
  {
    sub_1D2F3C584(v0 + 16);
  }

  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 168) = v11;
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v0 + 152);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1D2F5BC64;
  uint64_t v13 = *(void *)(v0 + 144);
  return MEMORY[0x1F41880D8](v13, 0, 0, 0x286D726F66726570, 0xEB00000000293A5FLL, sub_1D2F5C5A8, v11, &type metadata for SiriUserFeedbackLearningTaskResult);
}

uint64_t sub_1D2F5BC64()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1D2F5BD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5DC70);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  id v7 = self;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1D2F5D1FC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2F3D6E8;
  aBlock[3] = &block_descriptor_10;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v7, sel_performTask_forPluginID_completionHandler_, v8, v9, v12);
  _Block_release(v12);
}

uint64_t sub_1D2F5BF54(void *a1, void *a2)
{
  id v4 = a1;
  id v5 = a2;
  SiriUserFeedbackLearningTaskResult.init(mlrTaskResult:error:)(a1, a2, (unint64_t *)&v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5DC70);
  return sub_1D3001EE8();
}

void SiriUserFeedbackLearningMLRuntimePlugin.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001918();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65778);
  sub_1D2F3C528(a1, (uint64_t)aBlock);
  long long v7 = sub_1D30018F8();
  os_log_type_t v8 = sub_1D30020A8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v19 = a3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v21 = v18;
    *(_DWORD *)uint64_t v9 = 136315394;
    v20[0] = sub_1D2F09508(0xD000000000000016, 0x80000001D300F590, &v21);
    sub_1D3002318();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1D2F3C528((uint64_t)aBlock, (uint64_t)v20);
    sub_1D3002438();
    sub_1D3001C68();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    id v10 = (id)v20[1];
    id v11 = objc_msgSend(v10, sel_description);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D2F3C584((uint64_t)v20);
    v20[0] = sub_1D2F09508(0, 0xE000000000000000, &v21);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F3C584((uint64_t)aBlock);
    _os_log_impl(&dword_1D2F05000, v7, v8, "SiriUserFeedbackLearningMLRuntimePlugin.%s task: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v18, -1, -1);
    uint64_t v12 = v9;
    a3 = v19;
    MEMORY[0x1D942F2D0](v12, -1, -1);
  }
  else
  {
    sub_1D2F3C584((uint64_t)aBlock);
  }

  uint64_t v13 = self;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  aBlock[4] = sub_1D2F5C5E8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2F3D6E8;
  aBlock[3] = &block_descriptor_4;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_performTask_forPluginID_completionHandler_, v14, v15, v17);
  _Block_release(v17);
}

void sub_1D2F5C408(void *a1, void *a2, void (*a3)(void *))
{
  id v6 = a1;
  id v7 = a2;
  SiriUserFeedbackLearningTaskResult.init(mlrTaskResult:error:)(a1, a2, (unint64_t *)&v13);
  uint64_t v8 = v13;
  unint64_t v9 = v14;
  id v11 = v15;
  id v10 = v16;
  v12[0] = v13;
  v12[1] = v14;
  long long v12[2] = v15;
  uint64_t v12[3] = v16;
  a3(v12);
  sub_1D2F2265C(v8, v9);
}

uint64_t sub_1D2F5C4A8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D2F5C4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2F5B72C(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1D2F5C4E8(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_1D2F1C2F4;
  v6[19] = a2;
  v6[20] = v2;
  v6[18] = a1;
  return MEMORY[0x1F4188298](sub_1D2F5B838, 0, 0);
}

void sub_1D2F5C5A8(uint64_t a1)
{
  sub_1D2F5BD74(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D2F5C5B0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D2F5C5E8(void *a1, void *a2)
{
  sub_1D2F5C408(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.perform(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_1D2F1D1A0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPlugin.perform(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t *initializeBufferWithCopyOfBuffer for SiriUserFeedbackLearningMLRuntimePlugin(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    id v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1D3000F18();
    uint64_t v10 = *(void *)(v9 - 8);
    id v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for SiriUserFeedbackLearningMLRuntimePlugin(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1D3000F18();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for SiriUserFeedbackLearningMLRuntimePlugin(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  id v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1D3000F18();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for SiriUserFeedbackLearningMLRuntimePlugin(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D3000F18();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for SiriUserFeedbackLearningMLRuntimePlugin(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1D3000F18();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for SiriUserFeedbackLearningMLRuntimePlugin(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1D3000F18();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningMLRuntimePlugin(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2F5CF04);
}

uint64_t sub_1D2F5CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningMLRuntimePlugin(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2F5CFCC);
}

uint64_t sub_1D2F5CFCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1D2F5D078()
{
  sub_1D2F5D110();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1D2F5D110()
{
  if (!qword_1EBD5DC30)
  {
    sub_1D3000F18();
    unint64_t v0 = sub_1D30022F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD5DC30);
    }
  }
}

uint64_t sub_1D2F5D168()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5DC70);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2F5D1FC(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5DC70);
  return sub_1D2F5BF54(a1, a2);
}

void *UniversalSuggestionsStoreRuntimeQueryWrapper.__allocating_init()()
{
  uint64_t v0 = static Config.universalSuggestionsStoreFilePath.getter();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for UniversalSuggestionsStoreCoreData();
  swift_allocObject();
  uint64_t v4 = sub_1D2FB000C(v0, v2, 0);
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for UniversalSuggestionsStoreRuntimeQueryWrapper();
    uint64_t result = (void *)swift_allocObject();
    result[5] = v3;
    result[6] = &protocol witness table for UniversalSuggestionsStoreCoreData;
    result[2] = v5;
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1D3001918();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
    uint64_t v8 = sub_1D30018F8();
    os_log_type_t v9 = sub_1D30020B8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1D2F05000, v8, v9, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Failed to initialise Universal Suggestions store", v10, 2u);
      MEMORY[0x1D942F2D0](v10, -1, -1);
    }

    return 0;
  }
  return result;
}

uint64_t *UniversalSuggestionsStoreRuntimeQueryWrapper.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = sub_1D2F5DE64(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v6;
}

uint64_t *UniversalSuggestionsStoreRuntimeQueryWrapper.init(store:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  os_log_type_t v9 = sub_1D2F5DDF4((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t sub_1D2F5D50C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  BOOL v72 = a2;
  uint64_t v64 = sub_1D30018A8();
  uint64_t v75 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v74 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for UniversalCandidate(0);
  MEMORY[0x1F4188790](v66);
  uint64_t v65 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699158);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v68 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  int v12 = (char *)&v62 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v62 - v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = sub_1D3001868();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v73 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  BOOL v23 = (char *)&v62 - v22;
  uint64_t v24 = *a1;
  if (qword_1EA698030 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1D3001898();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EA6A0210);
  sub_1D3001888();
  sub_1D3001838();
  uint64_t v67 = v26;
  uint64_t v71 = sub_1D2F62208("runUniversalSuggestionsQuery", 28, 2, (uint64_t)v23);
  uint64_t v63 = v19;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v76 = v18;
  uint64_t v69 = v27;
  uint64_t v70 = v19 + 8;
  v27(v23, v18);
  uint64_t v28 = v3 + 2;
  uint64_t v29 = v3[5];
  uint64_t v30 = v3[6];
  __swift_project_boxed_opaque_existential_1(v28, v29);
  v77[0] = v24;
  (*(void (**)(void *, uint64_t, uint64_t))(v30 + 24))(v77, v29, v30);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1D3001918();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EBD65778);
  sub_1D2F5DF68((uint64_t)v17, (uint64_t)v15);
  uint64_t v32 = sub_1D30018F8();
  os_log_type_t v33 = sub_1D30020A8();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v78 = v35;
    *(_DWORD *)uint64_t v34 = 136315138;
    sub_1D2F5DF68((uint64_t)v15, (uint64_t)v12);
    uint64_t v36 = type metadata accessor for UniversalSuggestionCandidate(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v12, 1, v36) == 1)
    {
      sub_1D2F5DFD0((uint64_t)v12);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v39 = (uint64_t)&v12[*(int *)(v36 + 24)];
      uint64_t v40 = v65;
      sub_1D2F2EE40(v39, v65);
      sub_1D2F5E098((uint64_t)v12, type metadata accessor for UniversalSuggestionCandidate);
      uint64_t v41 = *(void *)(v40 + *(int *)(v66 + 20));
      swift_retain();
      sub_1D2F5E098(v40, type metadata accessor for UniversalCandidate);
      v77[0] = v41;
      swift_retain();
      uint64_t v37 = sub_1D2F59298();
      uint64_t v38 = v42;
      swift_release_n();
    }
    v77[0] = v37;
    v77[1] = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699160);
    uint64_t v43 = sub_1D3001BC8();
    v77[0] = sub_1D2F09508(v43, v44, &v78);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F5DFD0((uint64_t)v15);
    _os_log_impl(&dword_1D2F05000, v32, v33, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Found %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v35, -1, -1);
    MEMORY[0x1D942F2D0](v34, -1, -1);
  }
  else
  {
    sub_1D2F5DFD0((uint64_t)v15);
  }

  uint64_t v45 = v68;
  sub_1D2F5E030((uint64_t)v17, v68);
  uint64_t v46 = type metadata accessor for UniversalSuggestionCandidate(0);
  int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46);
  uint64_t v48 = v75;
  uint64_t v49 = v76;
  uint64_t v50 = v74;
  if (v47 == 1)
  {
    sub_1D2F5DFD0(v45);
    uint64_t v51 = 0;
  }
  else
  {
    uint64_t v52 = v65;
    sub_1D2F2EE40(v45 + *(int *)(v46 + 24), v65);
    sub_1D2F5E098(v45, type metadata accessor for UniversalSuggestionCandidate);
    uint64_t v51 = *(void *)(v52 + *(int *)(v66 + 20));
    swift_retain();
    sub_1D2F5E098(v52, type metadata accessor for UniversalCandidate);
  }
  *BOOL v72 = v51;
  uint64_t v53 = sub_1D3001888();
  uint64_t v54 = v73;
  sub_1D30018B8();
  os_signpost_type_t v55 = sub_1D30021C8();
  if (sub_1D30022D8())
  {
    swift_retain();
    sub_1D30018E8();
    swift_release();
    uint64_t v56 = v64;
    if ((*(unsigned int (**)(char *, uint64_t))(v48 + 88))(v50, v64) == *MEMORY[0x1E4FBD340])
    {
      os_log_t v57 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v56);
      os_log_t v57 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v23, v54, v49);
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v58 = 0;
    os_signpost_id_t v59 = sub_1D3001848();
    _os_signpost_emit_with_name_impl(&dword_1D2F05000, v53, v55, v59, "runUniversalSuggestionsQuery", v57, v58, 2u);
    MEMORY[0x1D942F2D0](v58, -1, -1);

    uint64_t v60 = v69;
    v69(v54, v49);
    v60(v23, v49);
  }
  else
  {

    v69(v54, v49);
  }
  return swift_release();
}

uint64_t UniversalSuggestionsStoreRuntimeQueryWrapper.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t UniversalSuggestionsStoreRuntimeQueryWrapper.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UniversalSuggestionsStoreRuntimeQueryWrapper()
{
  return self;
}

uint64_t sub_1D2F5DD60@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_1D2F5DD70(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13 = sub_1D3001848();
  _os_signpost_emit_with_name_impl(&dword_1D2F05000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t *sub_1D2F5DDF4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  a2[5] = a3;
  a2[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  return a2;
}

uint64_t *sub_1D2F5DE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UniversalSuggestionsStoreRuntimeQueryWrapper();
  uint64_t v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  v10[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a3);
  return v10;
}

uint64_t sub_1D2F5DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F5DFD0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699158);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2F5E030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F5E098(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t method lookup function for UniversalSuggestionsStoreRuntimeQueryWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UniversalSuggestionsStoreRuntimeQueryWrapper);
}

uint64_t dispatch thunk of UniversalSuggestionsStoreRuntimeQueryWrapper.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreRuntimeQueryWrapper.queryEntityWithLogging(query:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_1D2F5E148(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x1D942E3A0](v8, v4);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_1D30024E8();
          sub_1D3002518();
          unint64_t v4 = v15;
          sub_1D3002528();
          sub_1D30024F8();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_1D30025A8();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t static NlxSELFUtils.getTopNlxUsoGraph(from:)(unint64_t a1)
{
  unint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v6);
  uint64_t v114 = (uint64_t)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v117 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1D30025A8();
    uint64_t v115 = v6;
    if (v9)
    {
LABEL_3:
      if (v9 < 1)
      {
LABEL_136:
        __break(1u);
        goto LABEL_137;
      }
      for (uint64_t i = 0; i != v9; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v11 = (id)MEMORY[0x1D942E3A0](i, a1);
        }
        else {
          id v11 = *(id *)(a1 + 8 * i + 32);
        }
        uint64_t j = (uint64_t)v11;
        if (objc_msgSend(v11, sel_anyEventType) == 18)
        {
          unint64_t v6 = (unint64_t)&v117;
          sub_1D30024E8();
          sub_1D3002518();
          sub_1D3002528();
          sub_1D30024F8();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = v117;
      unint64_t v117 = v8;
      if (v12 < 0) {
        goto LABEL_32;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v115 = v6;
    if (v9) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  unint64_t v117 = v8;
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v12 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    uint64_t v1 = sub_1D30025A8();
    if (!v1) {
      goto LABEL_33;
    }
    goto LABEL_18;
  }
  uint64_t v1 = *(void *)(v12 + 16);
  swift_retain();
  if (!v1)
  {
LABEL_33:
    swift_release();
    unint64_t v4 = (__CFString **)MEMORY[0x1E4FBC860];
    goto LABEL_34;
  }
LABEL_18:
  if (v1 < 1)
  {
LABEL_137:
    __break(1u);
    __break(1u);
    goto LABEL_138;
  }
  uint64_t v3 = 0;
  unint64_t v116 = v12 & 0xC000000000000001;
  uint64_t j = v9;
  do
  {
    if (v116) {
      id v13 = (id)MEMORY[0x1D942E3A0](v3, v12);
    }
    else {
      id v13 = *(id *)(v12 + 8 * v3 + 32);
    }
    unint64_t v6 = (unint64_t)v13;
    unint64_t v14 = a1;
    id v15 = objc_msgSend(v13, sel_payload);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_1D3000F68();
      uint64_t v18 = v1;
      uint64_t v19 = v12;
      unint64_t v21 = v20;

      uint64_t v22 = (void *)sub_1D3000F58();
      unint64_t v23 = v21;
      uint64_t v12 = v19;
      uint64_t v1 = v18;
      sub_1D2F0D1CC(v17, v23);
    }
    else
    {
      uint64_t v22 = 0;
    }
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0C60]), sel_initWithData_, v22);

    a1 = v14;
    uint64_t v9 = j;
    if (v24)
    {
      unint64_t v6 = (unint64_t)&v117;
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
    ++v3;
  }
  while (v1 != v3);
  swift_release();
  unint64_t v4 = (__CFString **)v117;
  unint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_34:
  swift_release();
  unint64_t v117 = v8;
  if (v9)
  {
    swift_bridgeObjectRetain();
    for (uint64_t j = 0; j != v9; ++j)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x1D942E3A0](j, a1);
      }
      else {
        id v25 = *(id *)(a1 + 8 * j + 32);
      }
      uint64_t v3 = (uint64_t)v25;
      if (objc_msgSend(v25, sel_anyEventType) == 19)
      {
        unint64_t v6 = (unint64_t)&v117;
        sub_1D30024E8();
        sub_1D3002518();
        sub_1D3002528();
        sub_1D30024F8();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = v8;
    unint64_t v8 = v117;
    unint64_t v116 = (unint64_t)v4;
    unint64_t v117 = v26;
    if ((v8 & 0x8000000000000000) != 0)
    {
LABEL_62:
      swift_retain();
      uint64_t v27 = sub_1D30025A8();
      if (!v27) {
        goto LABEL_63;
      }
      goto LABEL_48;
    }
  }
  else
  {
    unint64_t v116 = (unint64_t)v4;
    unint64_t v117 = v8;
    if ((v8 & 0x8000000000000000) != 0) {
      goto LABEL_62;
    }
  }
  if ((v8 & 0x4000000000000000) != 0) {
    goto LABEL_62;
  }
  uint64_t v27 = *(void *)(v8 + 16);
  swift_retain();
  if (!v27)
  {
LABEL_63:
    swift_release();
    unint64_t v36 = MEMORY[0x1E4FBC860];
    goto LABEL_64;
  }
LABEL_48:
  if (v27 < 1)
  {
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  uint64_t j = 0;
  a1 = v8 & 0xC000000000000001;
  do
  {
    if (a1) {
      id v28 = (id)MEMORY[0x1D942E3A0](j, v8);
    }
    else {
      id v28 = *(id *)(v8 + 8 * j + 32);
    }
    uint64_t v29 = v28;
    id v30 = objc_msgSend(v28, sel_payload);
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = sub_1D3000F68();
      unint64_t v34 = v33;

      uint64_t v35 = (void *)sub_1D3000F58();
      sub_1D2F0D1CC(v32, v34);
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v3 = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0D40]), sel_initWithData_, v35);

    if (v3)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
    ++j;
  }
  while (v27 != j);
  swift_release();
  unint64_t v4 = (__CFString **)v116;
  unint64_t v36 = v117;
LABEL_64:
  swift_release();
  unint64_t v6 = (unint64_t)sub_1D2F5F570((unint64_t)v4, v36);
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_146;
  }
  uint64_t v1 = v6 & 0xFFFFFFFFFFFFFF8;
  if (!(v6 >> 62))
  {
    uint64_t v37 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v37) {
      goto LABEL_67;
    }
LABEL_140:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_139:
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1D30025A8();
  if (!v37) {
    goto LABEL_140;
  }
LABEL_67:
  unint64_t v38 = v6 & 0xC000000000000001;
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v39 = (id)MEMORY[0x1D942E3A0](0, v6);
  }
  else
  {
    if (!*(void *)(v1 + 16))
    {
      __break(1u);
LABEL_143:
      swift_once();
      goto LABEL_72;
    }
    id v39 = *(id *)(v6 + 32);
  }
  unint64_t v8 = (unint64_t)v39;
  uint64_t v40 = (__CFString **)(v37 - 1);
  if (v37 != 1)
  {
    if (v37 < 2)
    {
      __break(1u);
LABEL_150:
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1D30025A8();
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
    if (!v38)
    {
      unint64_t v46 = *(void *)(v1 + 16);
      if (v46 < 2 || (unint64_t)v40 >= v46)
      {
        __break(1u);
        goto LABEL_152;
      }
    }
    int v47 = 0;
    do
    {
      if (v38) {
        id v48 = (id)MEMORY[0x1D942E3A0]((char *)v47 + 1, v6);
      }
      else {
        id v48 = *(id *)(v6 + 8 * (void)v47 + 40);
      }
      uint64_t v49 = v48;
      objc_msgSend((id)v8, sel_probability);
      double v51 = v50;
      objc_msgSend(v49, sel_probability);
      if (v51 >= v52) {
        uint64_t v53 = v49;
      }
      else {
        uint64_t v53 = (void *)v8;
      }
      if (v51 < v52) {
        unint64_t v8 = (unint64_t)v49;
      }

      int v47 = (__CFString **)((char *)v47 + 1);
    }
    while (v40 != v47);
  }
  swift_bridgeObjectRelease_n();
  if (qword_1EBD63A48 != -1) {
    goto LABEL_143;
  }
LABEL_72:
  uint64_t v41 = sub_1D3001918();
  uint64_t v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1EBD65778);
  a1 = (unint64_t)(id)v8;
  uint64_t v113 = v42;
  unint64_t v6 = sub_1D30018F8();
  LOBYTE(v3) = sub_1D30020A8();
  uint64_t v43 = off_1E6970000;
  if (!os_log_type_enabled((os_log_t)v6, (os_log_type_t)v3))
  {

    goto LABEL_95;
  }
  uint64_t j = swift_slowAlloc();
  unint64_t v4 = (__CFString **)swift_slowAlloc();
  uint64_t v119 = (uint64_t)v4;
  *(_DWORD *)uint64_t j = 136315138;
  unint64_t v8 = a1;
  a1 = (unint64_t)objc_msgSend((id)a1, sel_userDialogActs);
  if (!a1)
  {
    uint64_t v45 = 0;
    goto LABEL_94;
  }
  uint64_t v40 = off_1E6970000;
  sub_1D2F0BCB8(0, &qword_1EBD61470);
  unint64_t v44 = sub_1D3001DC8();

  if (v44 >> 62) {
    goto LABEL_150;
  }
  uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_76:
  swift_bridgeObjectRelease();
  uint64_t v43 = v40;
LABEL_94:
  unint64_t v117 = v45;
  BOOL v118 = a1 == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD613F0);
  uint64_t v54 = sub_1D3001BC8();
  unint64_t v117 = sub_1D2F09508(v54, v55, &v119);
  sub_1D3002318();
  a1 = v8;

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1D2F05000, (os_log_t)v6, (os_log_type_t)v3, "[NlxSELFUtils] Found %s dialog acts in the top NLX parse", (uint8_t *)j, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D942F2D0](v4, -1, -1);
  MEMORY[0x1D942F2D0](j, -1, -1);

LABEL_95:
  id v56 = [(id)a1 (SEL)v43[394]];
  if (!v56)
  {

    swift_bridgeObjectRelease();
    return (uint64_t)v56;
  }
  sub_1D2F0BCB8(0, &qword_1EBD61470);
  unint64_t v6 = sub_1D3001DC8();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1D30025A8();
    if (v3) {
      goto LABEL_98;
    }
    goto LABEL_145;
  }
  uint64_t v3 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_145:
    swift_bridgeObjectRelease_n();

LABEL_146:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_98:
  unint64_t v8 = v6 & 0xC000000000000001;
  uint64_t v1 = 4;
  unint64_t v4 = off_1E6970000;
  while (1)
  {
    if (v8) {
      id v57 = (id)MEMORY[0x1D942E3A0](v1 - 4, v6);
    }
    else {
      id v57 = *(id *)(v6 + 8 * v1);
    }
    uint64_t j = (uint64_t)v57;
    uint64_t v58 = v1 - 3;
    if (__OFADD__(v1 - 4, 1))
    {
      __break(1u);
      goto LABEL_136;
    }
    id v59 = objc_msgSend(v57, sel_reference);

    if (v59)
    {
      id v60 = objc_msgSend((id)j, sel_userStatedTask);

      if (v60) {
        break;
      }
    }

    ++v1;
    if (v58 == v3) {
      goto LABEL_145;
    }
  }
  swift_bridgeObjectRelease_n();
  id v61 = objc_msgSend((id)j, sel_reference);
  if (!v61)
  {
    swift_bridgeObjectRelease();
    id v79 = sub_1D30018F8();
    os_log_type_t v80 = sub_1D30020B8();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_1D2F05000, v79, v80, "[NlxSELFUtils] No USO graph in top dialog act", v81, 2u);
      MEMORY[0x1D942F2D0](v81, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  uint64_t v62 = (uint64_t)v61;
  id v63 = objc_msgSend((id)j, sel_reference);
  os_log_type_t v111 = (void *)v62;
  if (!v63
    || (uint64_t v64 = v63, v65 = objc_msgSend(v63, sel_linkId), v64, !v65))
  {
    swift_bridgeObjectRelease();
    unint64_t v78 = MEMORY[0x1E4FBC860];
LABEL_175:
    swift_bridgeObjectRetain_n();
    uint64_t v106 = sub_1D30018F8();
    os_log_type_t v107 = sub_1D30020A8();
    if (os_log_type_enabled(v106, v107))
    {
      id v108 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v108 = 134217984;
      if (v78 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v109 = sub_1D30025A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v109 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      unint64_t v117 = v109;
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v106, v107, "[NlxSELFUtils] Found %ld NLX redaction events", v108, 0xCu);
      MEMORY[0x1D942F2D0](v108, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    long long v110 = v111;
    id v56 = (id)static SELFUsoRedactionUtils.joinRedactedSELFUsoGraph(graph:redactions:)((uint64_t)v111, v78);
    swift_bridgeObjectRelease();

    return (uint64_t)v56;
  }
  id v66 = v65;
  uint64_t v67 = sub_1D30018F8();
  os_log_type_t v68 = sub_1D30020A8();
  BOOL v69 = os_log_type_enabled(v67, v68);
  id v112 = v66;
  if (v69)
  {
    unint64_t v70 = a1;
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    unint64_t v117 = v72;
    *(_DWORD *)uint64_t v71 = 136315138;
    id v73 = objc_msgSend(v66, sel_value);
    unint64_t v8 = MEMORY[0x1E4FBC860];
    if (v73)
    {
      uint64_t v74 = v73;
      uint64_t v75 = sub_1D3000F68();
      unint64_t v77 = v76;

      sub_1D2F587AC(v75, v77, v114);
      sub_1D2F0D1CC(v75, v77);
    }
    else
    {
      uint64_t v82 = sub_1D30010A8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v114, 1, 1, v82);
    }
    uint64_t v83 = sub_1D3001BC8();
    uint64_t v119 = sub_1D2F09508(v83, v84, (uint64_t *)&v117);
    sub_1D3002318();
    id v85 = v112;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v67, v68, "[NlxSELFUtils] Fetching NLX events for link id=%s to reconstruct the graph", v71, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v72, -1, -1);
    MEMORY[0x1D942F2D0](v71, -1, -1);

    a1 = v70;
  }
  else
  {

    unint64_t v8 = MEMORY[0x1E4FBC860];
  }
  unint64_t v117 = v8;
  if (!(v116 >> 62))
  {
    uint64_t v86 = *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v86) {
      goto LABEL_122;
    }
LABEL_153:
    swift_bridgeObjectRelease();
    unint64_t v95 = MEMORY[0x1E4FBC860];
LABEL_154:
    swift_bridgeObjectRelease();
    unint64_t v117 = v8;
    if (v95 >> 62) {
      goto LABEL_172;
    }
    uint64_t v96 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v96)
    {
LABEL_156:
      unint64_t v97 = 0;
      uint64_t v115 = v95 & 0xFFFFFFFFFFFFFF8;
      unint64_t v116 = v95 & 0xC000000000000001;
      uint64_t v114 = v96;
      while (1)
      {
        if (v116)
        {
          id v98 = (id)MEMORY[0x1D942E3A0](v97, v95);
        }
        else
        {
          if (v97 >= *(void *)(v115 + 16))
          {
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            uint64_t v96 = sub_1D30025A8();
            if (!v96) {
              break;
            }
            goto LABEL_156;
          }
          id v98 = *(id *)(v95 + 8 * v97 + 32);
        }
        uint64_t v99 = v98;
        unint64_t v100 = v97 + 1;
        if (__OFADD__(v97, 1)) {
          goto LABEL_171;
        }
        id v101 = objc_msgSend(v98, sel_linkId);
        if (v101)
        {
          unint64_t v102 = v101;
          unint64_t v103 = a1;
          sub_1D2F0BCB8(0, &qword_1EA6988F0);
          id v104 = v112;
          id v105 = v102;
          LOBYTE(v102) = sub_1D30022B8();

          if (v102)
          {
            sub_1D30024E8();
            sub_1D3002518();
            sub_1D3002528();
            sub_1D30024F8();
          }
          else
          {
          }
          a1 = v103;
          uint64_t v96 = v114;
        }
        else
        {
        }
        ++v97;
        if (v100 == v96)
        {
          unint64_t v78 = v117;
          goto LABEL_174;
        }
      }
    }
    unint64_t v78 = MEMORY[0x1E4FBC860];
LABEL_174:
    swift_bridgeObjectRelease();

    goto LABEL_175;
  }
LABEL_152:
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v86 = result;
  if (!result) {
    goto LABEL_153;
  }
LABEL_122:
  if (v86 >= 1)
  {
    uint64_t v88 = 0;
    unint64_t v89 = v116 & 0xC000000000000001;
    do
    {
      if (v89) {
        id v90 = (id)MEMORY[0x1D942E3A0](v88, v116);
      }
      else {
        id v90 = *(id *)(v116 + 8 * v88 + 32);
      }
      uint64_t v91 = v90;
      id v92 = objc_msgSend(v90, sel_cdmUsoGraphTier1, v111);
      if (v92)
      {
        unint64_t v93 = v92;
        id v94 = objc_msgSend(v92, sel_usoGraphTier1);

        if (v94)
        {
          MEMORY[0x1D942DCC0]();
          if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      else
      {
      }
      ++v88;
    }
    while (v86 != v88);
    swift_bridgeObjectRelease();
    unint64_t v95 = v117;
    unint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_154;
  }
  __break(1u);
  return result;
}

id sub_1D2F5F570(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_1D2F5F794(a1, a2);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = v2;
  unint64_t v18 = v2;
  uint64_t v4 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v2 >> 62) {
    goto LABEL_26;
  }
  for (unint64_t i = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10); i; unint64_t i = v2)
  {
    while (!__OFSUB__(i--, 1))
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x1D942E3A0](i, v3);
      }
      else
      {
        if ((i & 0x8000000000000000) != 0) {
          goto LABEL_24;
        }
        if (i >= *(void *)(v4 + 16)) {
          goto LABEL_25;
        }
        id v7 = *(id *)(v3 + 32 + 8 * i);
      }
      unint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_cdmRequestContext);
      if (v9)
      {
        uint64_t v10 = v9;
        id v11 = objc_msgSend(v9, sel_ended);

        if (v11) {
          goto LABEL_16;
        }
      }
      else
      {
      }
      if (!i) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    unint64_t v2 = sub_1D30025A8();
  }
LABEL_16:
  MEMORY[0x1F4188790](v2);
  id v17[2] = &v18;
  id v13 = sub_1D2F8F1D0((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1D2F6106C, (uint64_t)v17, i, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v14 = objc_msgSend(v13, sel_cdmRequestContext);

    if (!v14) {
      return 0;
    }
    id v13 = objc_msgSend(v14, sel_ended);

    if (v13)
    {
      id v15 = objc_msgSend(v13, sel_parses);

      if (v15)
      {
        sub_1D2F0BCB8(0, &qword_1EBD61408);
        id v13 = (id)sub_1D3001DC8();

        return v13;
      }
      return 0;
    }
  }
  return v13;
}

uint64_t sub_1D2F5F794(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F60454(a2, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    MEMORY[0x1F4188790](v18);
    *(&v90 - 2) = (uint64_t)v11;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1D2F5E148(sub_1D2F61428, (uint64_t)(&v90 - 4), a1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v17;
  }
  sub_1D2F1CD78((uint64_t)v7, &qword_1EBD62AA0);
  char v12 = sub_1D2F61284(a2);
  if (v13)
  {
    uint64_t v14 = (uint64_t)v12;
    uint64_t v15 = v13;
    unint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_1D2F61098(v16, v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  v98[0] = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1D30025A8();
    if (v20) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_8:
      if (v20 < 1)
      {
        __break(1u);
        goto LABEL_140;
      }
      for (uint64_t i = 0; i != v20; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v22 = (id)MEMORY[0x1D942E3A0](i, a1);
        }
        else {
          id v22 = *(id *)(a1 + 8 * i + 32);
        }
        unint64_t v23 = v22;
        id v24 = objc_msgSend(v22, sel_cdmRequestContext);
        if (v24
          && (id v25 = v24,
              id v26 = objc_msgSend(v24, sel_ended),
              v26,
              v25,
              v26))
        {
          sub_1D30024E8();
          sub_1D3002518();
          sub_1D3002528();
          sub_1D30024F8();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v9 = v98[0];
      if ((v98[0] & 0x8000000000000000) != 0) {
        goto LABEL_138;
      }
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_138;
  }
LABEL_22:
  if ((v9 & 0x4000000000000000) != 0) {
    goto LABEL_138;
  }
  uint64_t v27 = *(void *)(v9 + 16);
  swift_retain();
  while (1)
  {
    unint64_t v94 = a1;
    id v28 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v97 = v20;
    if (!v27) {
      break;
    }
    a1 = 0;
    unint64_t v29 = v9 & 0xC000000000000001;
    uint64_t v95 = v9 + 32;
    unint64_t v96 = v9 & 0xC000000000000001;
    uint64_t v91 = (char *)v98 + 2;
    id v92 = (char *)v98 + 3;
    uint64_t v93 = v9;
    while (1)
    {
      id v30 = v29 ? (id)MEMORY[0x1D942E3A0](a1, v9) : *(id *)(v95 + 8 * a1);
      uint64_t v20 = (uint64_t)v30;
      if (__OFADD__(a1++, 1)) {
        break;
      }
      id v32 = objc_msgSend(v30, sel_eventMetadata);
      if (v32)
      {
        unint64_t v33 = v32;
        id v34 = objc_msgSend(v32, sel_resultCandidateId);

        if (v34)
        {
          uint64_t v35 = sub_1D3001B78();
          unint64_t v37 = v36;

          uint64_t v38 = HIBYTE(v37) & 0xF;
          uint64_t v39 = v35 & 0xFFFFFFFFFFFFLL;
          if ((v37 & 0x2000000000000000) != 0) {
            uint64_t v40 = HIBYTE(v37) & 0xF;
          }
          else {
            uint64_t v40 = v35 & 0xFFFFFFFFFFFFLL;
          }
          if (!v40)
          {

            swift_bridgeObjectRelease();
            unint64_t v29 = v96;
            goto LABEL_27;
          }
          if ((v37 & 0x1000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v42 = (uint64_t)sub_1D2F953D8(v35, v37, 10);
            char v59 = v58;
            swift_bridgeObjectRelease_n();

            if ((v59 & 1) == 0) {
              goto LABEL_68;
            }
            goto LABEL_73;
          }
          if ((v37 & 0x2000000000000000) == 0)
          {
            if ((v35 & 0x1000000000000000) != 0) {
              uint64_t v41 = (unsigned __int8 *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else {
              uint64_t v41 = (unsigned __int8 *)sub_1D30024C8();
            }
            uint64_t v42 = (uint64_t)sub_1D2F953C0(v41, v39, 10);
            LOBYTE(v35) = v43 & 1;
LABEL_67:
            swift_bridgeObjectRelease();

            if ((v35 & 1) == 0)
            {
LABEL_68:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v28 = sub_1D2F27CD8(0, v28[2] + 1, 1, v28);
              }
              unint64_t v49 = v28[2];
              unint64_t v48 = v28[3];
              if (v49 >= v48 >> 1) {
                id v28 = sub_1D2F27CD8((void *)(v48 > 1), v49 + 1, 1, v28);
              }
              v28[2] = v49 + 1;
              v28[v49 + 4] = v42;
              uint64_t v9 = v93;
            }
LABEL_73:
            unint64_t v29 = v96;
            goto LABEL_27;
          }
          v98[0] = v35;
          v98[1] = v37 & 0xFFFFFFFFFFFFFFLL;
          if (v35 == 43)
          {
            if (!v38) {
              goto LABEL_137;
            }
            if (v38 == 1 || (BYTE1(v35) - 48) > 9u) {
              goto LABEL_64;
            }
            uint64_t v42 = (BYTE1(v35) - 48);
            if (v38 == 2) {
              goto LABEL_66;
            }
            if ((BYTE2(v35) - 48) <= 9u)
            {
              uint64_t v42 = 10 * (BYTE1(v35) - 48) + (BYTE2(v35) - 48);
              uint64_t v44 = v38 - 3;
              if (v44)
              {
                uint64_t v45 = (unsigned __int8 *)v92;
                while (1)
                {
                  unsigned int v46 = *v45 - 48;
                  if (v46 > 9) {
                    goto LABEL_64;
                  }
                  uint64_t v47 = 10 * v42;
                  if ((unsigned __int128)(v42 * (__int128)10) >> 64 != (10 * v42) >> 63) {
                    goto LABEL_64;
                  }
                  uint64_t v42 = v47 + v46;
                  if (__OFADD__(v47, v46)) {
                    goto LABEL_64;
                  }
                  LOBYTE(v35) = 0;
                  ++v45;
                  if (!--v44) {
                    goto LABEL_67;
                  }
                }
              }
              goto LABEL_66;
            }
          }
          else
          {
            if (v35 == 45)
            {
              if (!v38) {
                goto LABEL_136;
              }
              if (v38 == 1 || (BYTE1(v35) - 48) > 9u) {
                goto LABEL_64;
              }
              if (v38 == 2)
              {
                LOBYTE(v35) = 0;
                uint64_t v42 = -(uint64_t)(BYTE1(v35) - 48);
                goto LABEL_67;
              }
              if ((BYTE2(v35) - 48) > 9u) {
                goto LABEL_64;
              }
              uint64_t v42 = -10 * (BYTE1(v35) - 48) - (BYTE2(v35) - 48);
              uint64_t v54 = v38 - 3;
              if (v54)
              {
                unint64_t v55 = (unsigned __int8 *)v92;
                while (1)
                {
                  unsigned int v56 = *v55 - 48;
                  if (v56 > 9) {
                    goto LABEL_64;
                  }
                  uint64_t v57 = 10 * v42;
                  if ((unsigned __int128)(v42 * (__int128)10) >> 64 != (10 * v42) >> 63) {
                    goto LABEL_64;
                  }
                  uint64_t v42 = v57 - v56;
                  if (__OFSUB__(v57, v56)) {
                    goto LABEL_64;
                  }
                  LOBYTE(v35) = 0;
                  ++v55;
                  if (!--v54) {
                    goto LABEL_67;
                  }
                }
              }
LABEL_66:
              LOBYTE(v35) = 0;
              goto LABEL_67;
            }
            if (v38 && (v35 - 48) <= 9u)
            {
              uint64_t v42 = (v35 - 48);
              if (v38 == 1) {
                goto LABEL_66;
              }
              if ((BYTE1(v35) - 48) <= 9u)
              {
                uint64_t v42 = 10 * (v35 - 48) + (BYTE1(v35) - 48);
                uint64_t v50 = v38 - 2;
                if (v50)
                {
                  double v51 = (unsigned __int8 *)v91;
                  while (1)
                  {
                    unsigned int v52 = *v51 - 48;
                    if (v52 > 9) {
                      goto LABEL_64;
                    }
                    uint64_t v53 = 10 * v42;
                    if ((unsigned __int128)(v42 * (__int128)10) >> 64 != (10 * v42) >> 63) {
                      goto LABEL_64;
                    }
                    uint64_t v42 = v53 + v52;
                    if (__OFADD__(v53, v52)) {
                      goto LABEL_64;
                    }
                    LOBYTE(v35) = 0;
                    ++v51;
                    if (!--v50) {
                      goto LABEL_67;
                    }
                  }
                }
                goto LABEL_66;
              }
            }
          }
LABEL_64:
          uint64_t v42 = 0;
          LOBYTE(v35) = 1;
          goto LABEL_67;
        }
      }

LABEL_27:
      if (a1 == v27) {
        goto LABEL_94;
      }
    }
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1D30025A8();
    swift_release();
  }
LABEL_94:
  swift_release_n();
  unint64_t v60 = v28[2];
  if (v60)
  {
    int64_t v2 = v28[4];
    unint64_t v61 = v60 - 1;
    if (v60 == 1)
    {
      a1 = v94;
      goto LABEL_107;
    }
    a1 = v94;
    if (v60 >= 5)
    {
      unint64_t v62 = v61 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v63 = vdupq_n_s64(v2);
      uint64_t v64 = (int64x2_t *)(v28 + 7);
      unint64_t v65 = v61 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v66 = v63;
      do
      {
        int64x2_t v63 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v63, v64[-1]), (int8x16_t)v63, (int8x16_t)v64[-1]);
        int64x2_t v66 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v66, *v64), (int8x16_t)v66, *(int8x16_t *)v64);
        v64 += 2;
        v65 -= 4;
      }
      while (v65);
      int8x16_t v67 = vbslq_s8((int8x16_t)vcgtq_s64(v63, v66), (int8x16_t)v63, (int8x16_t)v66);
      uint64_t v68 = vextq_s8(v67, v67, 8uLL).u64[0];
      int64_t v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v67.i64[0], v68), *(int8x8_t *)v67.i8, (int8x8_t)v68);
      if (v61 != (v61 & 0xFFFFFFFFFFFFFFFCLL)) {
        goto LABEL_103;
      }
    }
    else
    {
      unint64_t v62 = 1;
LABEL_103:
      unint64_t v69 = v60 - v62;
      unint64_t v70 = &v28[v62 + 4];
      do
      {
        int64_t v72 = *v70++;
        int64_t v71 = v72;
        if (v2 <= v72) {
          int64_t v2 = v71;
        }
        --v69;
      }
      while (v69);
    }
LABEL_107:
    swift_bridgeObjectRelease();
    if (qword_1EBD63A48 == -1)
    {
LABEL_108:
      uint64_t v73 = sub_1D3001918();
      __swift_project_value_buffer(v73, (uint64_t)qword_1EBD65778);
      uint64_t v74 = sub_1D30018F8();
      os_log_type_t v75 = sub_1D30020B8();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v9 = 12;
        unint64_t v76 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v76 = 134217984;
        v98[0] = v2;
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v74, v75, "Using highest integer rcId of %ld to identify primary NLX candidate", v76, 0xCu);
        MEMORY[0x1D942F2D0](v76, -1, -1);
      }

      uint64_t v17 = MEMORY[0x1E4FBC860];
      v98[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      if (!v97)
      {
LABEL_132:
        swift_bridgeObjectRelease();
        return v17;
      }
      unint64_t v77 = 0;
      unint64_t v78 = a1 & 0xC000000000000001;
      uint64_t v79 = a1 & 0xFFFFFFFFFFFFFF8;
      while (2)
      {
        if (v78)
        {
          id v80 = (id)MEMORY[0x1D942E3A0](v77, a1);
        }
        else
        {
          if (v77 >= *(void *)(v79 + 16)) {
            goto LABEL_134;
          }
          id v80 = *(id *)(a1 + 8 * v77 + 32);
        }
        uint64_t v81 = v80;
        uint64_t v9 = v77 + 1;
        if (__OFADD__(v77, 1)) {
          goto LABEL_135;
        }
        id v82 = objc_msgSend(v80, sel_eventMetadata);
        if (v82
          && (uint64_t v83 = v82,
              id v84 = objc_msgSend(v82, sel_resultCandidateId),
              v83,
              v84))
        {
          uint64_t v20 = sub_1D3001B78();
          uint64_t v86 = v85;

          int64_t v99 = v2;
          uint64_t v87 = sub_1D3002738();
          if (v86)
          {
            if (v20 == v87 && v86 == v88)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_127;
            }
            char v89 = sub_1D3002778();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v89)
            {
LABEL_127:
              sub_1D30024E8();
              sub_1D3002518();
              sub_1D3002528();
              sub_1D30024F8();
            }
            else
            {
            }
            a1 = v94;
LABEL_114:
            ++v77;
            if (v9 == v97)
            {
              uint64_t v17 = v98[0];
              goto LABEL_132;
            }
            continue;
          }
          a1 = v94;
        }
        else
        {
          int64_t v99 = v2;
          sub_1D3002738();
        }
        break;
      }

      swift_bridgeObjectRelease();
      goto LABEL_114;
    }
LABEL_140:
    swift_once();
    goto LABEL_108;
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1D2F60278(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_1D2F5F794(a1, a2);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = v2;
  unint64_t v16 = v2;
  uint64_t v4 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v2 >> 62) {
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    do
    {
      while (__OFSUB__(v5--, 1))
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        unint64_t v2 = sub_1D30025A8();
        unint64_t v5 = v2;
        if (!v2) {
          goto LABEL_17;
        }
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x1D942E3A0](v5, v3);
        goto LABEL_10;
      }
      if ((v5 & 0x8000000000000000) != 0) {
        goto LABEL_14;
      }
      if (v5 >= *(void *)(v4 + 16)) {
        goto LABEL_15;
      }
      id v7 = *(id *)(v3 + 32 + 8 * v5);
LABEL_10:
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_cdmMatchingSpanEnded);
    }
    while (!v9 && v5);
  }
LABEL_17:
  MEMORY[0x1F4188790](v2);
  id v15[2] = &v16;
  id v11 = sub_1D2F8F1D0((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1D2F6106C, (uint64_t)v15, v5, v10);
  swift_bridgeObjectRelease();
  if (!v11) {
    return 0;
  }
  id v12 = objc_msgSend(v11, sel_cdmMatchingSpanEnded);

  if (v12)
  {
    id v13 = objc_msgSend(v12, sel_matchingSpans);

    if (v13)
    {
      sub_1D2F0BCB8(0, &qword_1EA699168);
      id v12 = (id)sub_1D3001DC8();

      return v12;
    }
    return 0;
  }
  return v12;
}

void sub_1D2F60454(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = a1;
  unint64_t v23 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    do
    {
      while (__OFSUB__(v4--, 1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        swift_bridgeObjectRetain();
        unint64_t v4 = sub_1D30025A8();
        a1 = swift_bridgeObjectRelease();
        if (!v4) {
          goto LABEL_16;
        }
      }
      if ((v2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x1D942E3A0](v4, v2);
        goto LABEL_9;
      }
      if ((v4 & 0x8000000000000000) != 0) {
        goto LABEL_13;
      }
      if (v4 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_14;
      }
      id v6 = *(id *)(v2 + 32 + 8 * v4);
LABEL_9:
      id v7 = v6;
      id v8 = objc_msgSend(v6, sel_trpFinalized);
    }
    while (!v8 && v4);
  }
LABEL_16:
  MEMORY[0x1F4188790](a1);
  void v22[2] = &v23;
  char v10 = sub_1D2F8F1D0((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1D2F6106C, (uint64_t)v22, v4, v9);
  if (!v10) {
    goto LABEL_22;
  }
  id v11 = v10;
  id v12 = objc_msgSend(v10, sel_trpFinalized);
  if (!v12
    || (v13 = v12, id v14 = objc_msgSend(v12, sel_trpId), v13, !v14))
  {

LABEL_22:
    uint64_t v20 = sub_1D30010A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return;
  }
  id v15 = objc_msgSend(v14, sel_value);
  if (v15)
  {
    unint64_t v16 = v15;
    uint64_t v17 = sub_1D3000F68();
    unint64_t v19 = v18;

    sub_1D2F587AC(v17, v19, a2);
    sub_1D2F0D1CC(v17, v19);
  }
  else
  {
    uint64_t v21 = sub_1D30010A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 1, 1, v21);
  }
}

uint64_t sub_1D2F606E0(id *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699170);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v38 - v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v38 - v15;
  id v17 = objc_msgSend(*a1, sel_eventMetadata);
  if (v17
    && (v18 = v17, id v19 = objc_msgSend(v17, sel_trpId), v18, v19))
  {
    id v20 = objc_msgSend(v19, sel_value);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = sub_1D3000F68();
      uint64_t v38 = a2;
      uint64_t v23 = v22;
      unint64_t v25 = v24;

      sub_1D2F587AC(v23, v25, (uint64_t)v16);
      uint64_t v26 = v23;
      a2 = v38;
      sub_1D2F0D1CC(v26, v25);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, a2, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  uint64_t v27 = v41;
  uint64_t v28 = v41 + *(int *)(v7 + 48);
  sub_1D2F61448((uint64_t)v16, v41);
  sub_1D2F61448((uint64_t)v14, v28);
  unint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v30 = v29(v27, 1, v4);
  uint64_t v31 = v40;
  if (v30 == 1)
  {
    sub_1D2F1CD78((uint64_t)v14, &qword_1EBD62AA0);
    sub_1D2F1CD78((uint64_t)v16, &qword_1EBD62AA0);
    int v32 = v29(v28, 1, v4);
    if (v32 == 1) {
      unint64_t v33 = &qword_1EBD62AA0;
    }
    else {
      unint64_t v33 = &qword_1EA699170;
    }
    if (v32 == 1) {
      char v34 = -1;
    }
    else {
      char v34 = 0;
    }
  }
  else
  {
    sub_1D2F61448(v27, v40);
    if (v29(v28, 1, v4) == 1)
    {
      sub_1D2F1CD78((uint64_t)v14, &qword_1EBD62AA0);
      sub_1D2F1CD78((uint64_t)v16, &qword_1EBD62AA0);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v4);
      char v34 = 0;
      unint64_t v33 = &qword_1EA699170;
    }
    else
    {
      uint64_t v35 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v39, v28, v4);
      sub_1D2F614B0();
      char v34 = sub_1D3001B28();
      unint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
      v36(v35, v4);
      unint64_t v33 = &qword_1EBD62AA0;
      sub_1D2F1CD78((uint64_t)v14, &qword_1EBD62AA0);
      sub_1D2F1CD78((uint64_t)v16, &qword_1EBD62AA0);
      v36((char *)v31, v4);
    }
  }
  sub_1D2F1CD78(v27, v33);
  return v34 & 1;
}

void (*sub_1D2F60B70(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1D2F60DC4(v6, a2, a3);
  return sub_1D2F60BD8;
}

void (*sub_1D2F60BDC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1D2F60E44(v6, a2, a3);
  return sub_1D2F60BD8;
}

void (*sub_1D2F60C44(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1D2F60EDC(v6, a2, a3);
  return sub_1D2F60BD8;
}

void (*sub_1D2F60CAC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1D2F60F64(v6, a2, a3);
  return sub_1D2F60BD8;
}

void (*sub_1D2F60D14(void (**a1)(id *), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1D2F60FEC(v6, a2, a3);
  return sub_1D2F60BD8;
}

void sub_1D2F60D7C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1D2F60DC4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1D942E3A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *unint64_t v3 = v4;
    return sub_1D2F61554;
  }
  __break(1u);
  return result;
}

void (*sub_1D2F60E44(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1D942E3A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return sub_1D2F60EC4;
  }
  __break(1u);
  return result;
}

void sub_1D2F60EC4(id *a1)
{
}

ValueMetadata *type metadata accessor for NlxSELFUtils()
{
  return &type metadata for NlxSELFUtils;
}

uint64_t (*sub_1D2F60EDC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1D942E3A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *unint64_t v3 = v4;
    return sub_1D2F60F5C;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F60F5C()
{
  return swift_release();
}

uint64_t (*sub_1D2F60F64(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1D942E3A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *unint64_t v3 = v4;
    return sub_1D2F60FE4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F60FE4()
{
  return swift_unknownObjectRelease();
}

void (*sub_1D2F60FEC(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1D942E3A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return sub_1D2F61558;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F6106C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D2F61508(a1, (uint64_t (*)(void, void, unsigned char *))sub_1D2F8F15C, a2);
}

uint64_t sub_1D2F61098(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v23 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      while (v6)
      {
        id v8 = (id)MEMORY[0x1D942E3A0](v5, v3);
LABEL_9:
        uint64_t v9 = v8;
        unint64_t v10 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_24;
        }
        id v11 = objc_msgSend(v8, sel_eventMetadata);
        if (v11)
        {
          uint64_t v12 = v11;
          id v13 = objc_msgSend(v11, sel_resultCandidateId);

          if (v13)
          {
            uint64_t v14 = v4;
            uint64_t v15 = v7;
            unint64_t v16 = v6;
            uint64_t v17 = sub_1D3001B78();
            uint64_t v19 = v18;

            if (v17 == a2 && v19 == a3)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v21 = sub_1D3002778();
              swift_bridgeObjectRelease();
              if ((v21 & 1) == 0)
              {

LABEL_20:
                unint64_t v6 = v16;
                uint64_t v7 = v15;
                uint64_t v4 = v14;
                unint64_t v3 = v23;
                goto LABEL_5;
              }
            }
            sub_1D30024E8();
            sub_1D3002518();
            sub_1D3002528();
            sub_1D30024F8();
            goto LABEL_20;
          }
        }

LABEL_5:
        ++v5;
        if (v10 == v4) {
          return v26;
        }
      }
      if (v5 < *(void *)(v7 + 16)) {
        break;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      uint64_t v4 = sub_1D30025A8();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void *sub_1D2F61284(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D30025A8();
  if (!v2) {
    goto LABEL_20;
  }
LABEL_3:
  for (uint64_t i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v4 = (id)MEMORY[0x1D942E3A0](i - 4, a1);
    }
    else {
      id v4 = *(id *)(a1 + 8 * i);
    }
    unint64_t v5 = v4;
    uint64_t v6 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    id v7 = objc_msgSend(v4, sel_resultSelected);
    if (v7)
    {
      id v8 = v7;
      unsigned int v9 = objc_msgSend(v7, sel_exists);

      if (v9) {
        break;
      }
    }

    if (v6 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v5, sel_eventMetadata);
  id v11 = v10;
  if (v10)
  {
    id v12 = objc_msgSend(v10, sel_resultCandidateId);

    if (v12)
    {
      id v11 = (void *)sub_1D3001B78();

      return v11;
    }

    return 0;
  }

  return v11;
}

uint64_t sub_1D2F61428(id *a1)
{
  return sub_1D2F606E0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1D2F61448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2F614B0()
{
  unint64_t result = qword_1EBD610E0;
  if (!qword_1EBD610E0)
  {
    sub_1D30010A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD610E0);
  }
  return result;
}

uint64_t sub_1D2F61508@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void, unsigned char *)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1, **(void **)(v3 + 16), v7);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t CoreAnalyticsMeasurable.payload()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  uint64_t v3 = sub_1D2F61C9C(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t CoreAnalyticsLogger.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 1;
  *(void *)(result + 24) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t CoreAnalyticsLogger.init()()
{
  uint64_t result = v0;
  *(unsigned char *)(v0 + 16) = 1;
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1D2F6160C()
{
  *(unsigned char *)(v0 + 16) = 0;
  swift_beginAccess();
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC860];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F61654()
{
  return swift_bridgeObjectRetain();
}

void sub_1D2F6168C(void *a1)
{
  if (*(unsigned char *)(v1 + 16))
  {
    aBlocuint64_t k = 0xD000000000000027;
    unint64_t v9 = 0x80000001D300FE50;
    uint64_t v3 = a1[3];
    uint64_t v4 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    unint64_t v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    sub_1D2F37950((uint64_t)a1, (uint64_t)v14);
    uint64_t v6 = swift_allocObject();
    sub_1D2F0BE68(v14, v6 + 16);
    id v12 = sub_1D2F61F1C;
    uint64_t v13 = v6;
    aBlocuint64_t k = MEMORY[0x1E4F143A8];
    unint64_t v9 = 1107296256;
    id v10 = sub_1D2F61818;
    id v11 = &block_descriptor_5;
    id v7 = _Block_copy(&aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D2F618A4(a1);
  }
}

id sub_1D2F61818(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1D2F621C8();
    uint64_t v4 = (void *)sub_1D3001A78();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

void sub_1D2F618A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = CoreAnalyticsMeasurable.payload()(v4, v5);
  uint64_t v7 = v6;
  int64_t v8 = 0;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v37 = v6 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  uint64_t v35 = v6;
  unint64_t v36 = (void **)(v2 + 24);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if ((v11 & v9) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v16 = v8 + 1;
    if (!__OFADD__(v8, 1))
    {
      if (v16 < v13)
      {
        unint64_t v17 = *(void *)(v37 + 8 * v16);
        ++v8;
        if (v17) {
          goto LABEL_25;
        }
        int64_t v8 = v16 + 1;
        if (v16 + 1 >= v13) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v37 + 8 * v8);
        if (v17) {
          goto LABEL_25;
        }
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v37 + 8 * v8);
        if (v17) {
          goto LABEL_25;
        }
        int64_t v8 = v16 + 3;
        if (v16 + 3 >= v13) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v37 + 8 * v8);
        if (v17) {
          goto LABEL_25;
        }
        int64_t v8 = v16 + 4;
        if (v16 + 4 >= v13) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v37 + 8 * v8);
        if (v17)
        {
LABEL_25:
          unint64_t v12 = (v17 - 1) & v17;
          for (unint64_t i = __clz(__rbit64(v17)) + (v8 << 6); ; unint64_t i = v14 | (v8 << 6))
          {
            uint64_t v19 = (uint64_t *)(*(void *)(v7 + 48) + 16 * i);
            uint64_t v21 = *v19;
            uint64_t v20 = v19[1];
            uint64_t v22 = a1[3];
            uint64_t v23 = a1[4];
            __swift_project_boxed_opaque_existential_1(a1, v22);
            swift_bridgeObjectRetain();
            uint64_t v24 = CoreAnalyticsMeasurable.payload()(v22, v23);
            if (!*(void *)(v24 + 16)) {
              goto LABEL_6;
            }
            swift_bridgeObjectRetain();
            unint64_t v25 = sub_1D2F0DC98(v21, v20);
            if ((v26 & 1) == 0) {
              break;
            }
            int64_t v27 = v13;
            id v28 = *(id *)(*(void *)(v24 + 56) + 8 * v25);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            unint64_t v29 = *v36;
            id v30 = v28;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *unint64_t v36 = v29;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unint64_t v29 = sub_1D2F28724(0, v29[2] + 1, 1, v29);
              *unint64_t v36 = v29;
            }
            unint64_t v33 = v29[2];
            unint64_t v32 = v29[3];
            if (v33 >= v32 >> 1)
            {
              unint64_t v29 = sub_1D2F28724((void *)(v32 > 1), v33 + 1, 1, v29);
              *unint64_t v36 = v29;
            }
            v29[2] = v33 + 1;
            char v34 = &v29[3 * v33];
            v34[4] = v21;
            v34[5] = v20;
            v34[6] = v30;
            swift_endAccess();

            int64_t v13 = v27;
            uint64_t v7 = v35;
            if (!v12) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v14 = __clz(__rbit64(v12));
            v12 &= v12 - 1;
          }
          swift_bridgeObjectRelease();
LABEL_6:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v12) {
            continue;
          }
          goto LABEL_7;
        }
        int64_t v18 = v16 + 5;
        if (v18 < v13)
        {
          unint64_t v17 = *(void *)(v37 + 8 * v18);
          if (v17)
          {
            int64_t v8 = v18;
            goto LABEL_25;
          }
          while (1)
          {
            int64_t v8 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              goto LABEL_36;
            }
            if (v8 >= v13) {
              break;
            }
            unint64_t v17 = *(void *)(v37 + 8 * v8);
            ++v18;
            if (v17) {
              goto LABEL_25;
            }
          }
        }
      }
LABEL_34:
      swift_release();
      return;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t CoreAnalyticsLogger.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CoreAnalyticsLogger.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL static UFLCoreAnalyticsLogLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t UFLCoreAnalyticsLogLevel.hash(into:)()
{
  return sub_1D3002938();
}

uint64_t UFLCoreAnalyticsLogLevel.hashValue.getter()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F61C9C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCE8);
  uint64_t result = sub_1D30025B8();
  int64_t v3 = 0;
  id v30 = (void *)result;
  uint64_t v31 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v27 = v5;
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v29 = result + 64;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v35 = v3;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(v31 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_1D2F37950(*(void *)(v31 + 56) + 40 * i, (uint64_t)v32);
    uint64_t v19 = v33;
    uint64_t v20 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
    swift_bridgeObjectRetain();
    uint64_t v22 = v21(v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
    uint64_t result = (uint64_t)v30;
    *(void *)(v29 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v23 = (void *)(v30[6] + 16 * i);
    *uint64_t v23 = v17;
    v23[1] = v18;
    *(void *)(v30[7] + 8 * i) = v22;
    uint64_t v24 = v30[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v30[2] = v26;
    int64_t v3 = v35;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v28) {
      return result;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v12);
    int64_t v14 = v3 + 1;
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v28) {
        return result;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v3 + 3;
        if (v3 + 3 >= v28) {
          return result;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
    int64_t v35 = v14;
  }
  uint64_t v15 = v3 + 4;
  if (v3 + 4 >= v28) {
    return result;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v28) {
      return result;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D2F61EE4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D2F61F1C()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return CoreAnalyticsMeasurable.payload()(v2, v3);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1D2F61F78()
{
  unint64_t result = qword_1EA699178;
  if (!qword_1EA699178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699178);
  }
  return result;
}

uint64_t dispatch thunk of CoreAnalyticsMeasurable.eventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoreAnalyticsMeasurable.getLoggableProperties()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D2F61FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for CoreAnalyticsLogger()
{
  return self;
}

uint64_t method lookup function for CoreAnalyticsLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreAnalyticsLogger);
}

uint64_t dispatch thunk of CoreAnalyticsLogger.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.setUpForTesting()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.readInMemoryStore()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.log(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

unsigned char *storeEnumTagSinglePayload for UFLCoreAnalyticsLogLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F62190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UFLCoreAnalyticsLogLevel()
{
  return &type metadata for UFLCoreAnalyticsLogLevel;
}

unint64_t sub_1D2F621C8()
{
  unint64_t result = qword_1EBD5FC90;
  if (!qword_1EBD5FC90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD5FC90);
  }
  return result;
}

uint64_t sub_1D2F62208(const char *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7 = sub_1D3001868();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD5FC08 != -1) {
    swift_once();
  }
  int v11 = byte_1EBD65728;
  int64_t v12 = sub_1D3001888();
  int v13 = sub_1D30021D8();
  uint64_t result = sub_1D30022D8();
  if (v11 == 1)
  {
    if ((result & 1) == 0)
    {
LABEL_12:

      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
LABEL_24:
      sub_1D30018D8();
      swift_allocObject();
      return sub_1D30018C8();
    }
    int v21 = v13;
    if (a3)
    {
      if ((unint64_t)a1 >> 32)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      if (a1 >> 11 == 27)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (a1 >> 16 > 0x10) {
        goto LABEL_27;
      }
      a1 = &v22;
    }
    else if (!a1)
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v15(v10, a4, v7);
    int64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v16 = 0;
    os_signpost_id_t v17 = sub_1D3001848();
    os_signpost_type_t v18 = v21;
    uint64_t v19 = "";
LABEL_23:
    _os_signpost_emit_with_name_impl(&dword_1D2F05000, v12, v18, v17, a1, v19, v16, 2u);
    MEMORY[0x1D942F2D0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v15(v10, a4, v7);
    goto LABEL_24;
  }
LABEL_8:
  if ((result & 1) == 0) {
    goto LABEL_12;
  }
  int v21 = v13;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
      goto LABEL_12;
    }
    goto LABEL_22;
  }
  if ((unint64_t)a1 >> 32) {
    goto LABEL_26;
  }
  if (a1 >> 11 != 27)
  {
    if (a1 >> 16 <= 0x10)
    {
      a1 = &v23;
LABEL_22:
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v15(v10, a4, v7);
      int64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v16 = 0;
      os_signpost_id_t v17 = sub_1D3001848();
      os_signpost_type_t v18 = v21;
      uint64_t v19 = "enableTelemetry=YES";
      goto LABEL_23;
    }
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D2F624FC(uint64_t a1)
{
  return sub_1D2F62568(a1, qword_1EBD65778);
}

uint64_t sub_1D2F62520(uint64_t a1)
{
  return sub_1D2F62568(a1, qword_1EBD65710);
}

uint64_t sub_1D2F62544(uint64_t a1)
{
  return sub_1D2F62568(a1, qword_1EA6A01F8);
}

uint64_t sub_1D2F62568(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1D3001918();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1D3001908();
}

uint64_t sub_1D2F625E0(uint64_t a1)
{
  return sub_1D2F62664(a1, qword_1EBD656F8, &qword_1EBD63A48, (uint64_t)qword_1EBD65778);
}

uint64_t sub_1D2F6260C(uint64_t a1)
{
  return sub_1D2F62664(a1, qword_1EBD656E0, &qword_1EBD5FB00, (uint64_t)qword_1EBD65710);
}

uint64_t sub_1D2F62638(uint64_t a1)
{
  return sub_1D2F62664(a1, qword_1EA6A0210, &qword_1EA698028, (uint64_t)qword_1EA6A01F8);
}

uint64_t sub_1D2F62664(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_1D3001918();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D3001898();
  __swift_allocate_value_buffer(v11, a2);
  __swift_project_value_buffer(v11, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v7, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  return sub_1D3001878();
}

void sub_1D2F62798()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  byte_1EBD65728 = v2;
}

void sub_1D2F62828(const char *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7 = sub_1D3001868();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD5FC08 != -1) {
    swift_once();
  }
  int v11 = byte_1EBD65728;
  uint64_t v20 = sub_1D3001888();
  os_signpost_type_t v12 = sub_1D30021E8();
  char v13 = sub_1D30022D8();
  if (v11 == 1)
  {
    if ((v13 & 1) == 0) {
      goto LABEL_12;
    }
    if (a3)
    {
      if ((unint64_t)a1 >> 32)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (a1 >> 11 == 27)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (a1 >> 16 > 0x10) {
        goto LABEL_28;
      }
      a1 = &v21;
    }
    else if (!a1)
    {
      __break(1u);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    os_signpost_id_t v16 = sub_1D3001848();
    os_signpost_type_t v17 = v12;
    os_signpost_type_t v18 = "";
LABEL_25:
    _os_signpost_emit_with_name_impl(&dword_1D2F05000, v20, v17, v16, a1, v18, v15, 2u);
    MEMORY[0x1D942F2D0](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return;
  }
LABEL_8:
  if (v13)
  {
    if ((a3 & 1) == 0)
    {
      if (!a1)
      {
        __break(1u);
        goto LABEL_12;
      }
      goto LABEL_24;
    }
    if (!((unint64_t)a1 >> 32))
    {
      if (a1 >> 11 == 27)
      {
LABEL_31:
        __break(1u);
        return;
      }
      if (a1 >> 16 <= 0x10)
      {
        a1 = &v22;
LABEL_24:
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        os_signpost_id_t v16 = sub_1D3001848();
        os_signpost_type_t v17 = v12;
        os_signpost_type_t v18 = "enableTelemetry=YES";
        goto LABEL_25;
      }
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_12:
  uint64_t v14 = v20;
}

char *sub_1D2F62AEC()
{
  return &v1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t PluginSchedulerRunResult.bundleName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginSchedulerRunResult.pluginResult.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

__n128 PluginSchedulerRunResult.init(bundleName:pluginResult:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  __n128 result = *a3;
  a4[1] = *a3;
  return result;
}

id sub_1D2F62BAC()
{
  return objc_msgSend(*v0, sel_isLowPowerModeEnabled);
}

uint64_t sub_1D2F62BD0()
{
  uint64_t v0 = sub_1D2F6A32C((uint64_t)&unk_1F2A15928);
  uint64_t result = swift_arrayDestroy();
  qword_1EBD63480 = v0;
  return result;
}

uint64_t PluginScheduler.__allocating_init(queue:)(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1D2F6A4D0(a1);

  return v2;
}

uint64_t PluginScheduler.init(queue:)(void *a1)
{
  uint64_t v2 = sub_1D2F6A4D0(a1);

  return v2;
}

uint64_t PluginScheduler.__allocating_init()()
{
  uint64_t v0 = (void *)sub_1D2F6A774();
  type metadata accessor for PluginScheduler();
  swift_allocObject();
  uint64_t v1 = sub_1D2F6A4D0(v0);

  return v1;
}

uint64_t sub_1D2F62CE4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D3000F18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  if (qword_1EBD616C8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65730);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  char v14 = v10;
  sub_1D2F62E3C(&v14, (uint64_t)v9, a2, a3, 0.0);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D2F62E3C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  v32[0] = a2;
  uint64_t v39 = sub_1D30019A8();
  uint64_t v42 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D3001A08();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v33 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D3000F18();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  char v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D3001A38();
  uint64_t v35 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  char v21 = (char *)v32 - v20;
  LOBYTE(a1) = *a1;
  v32[1] = *(void *)(v5 + 16);
  sub_1D3001A18();
  MEMORY[0x1D942D980](v19, a5);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
  v34(v19, v15);
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, void, uint64_t))(v12 + 16))(v14, v32[0], v11);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v36;
  uint64_t v26 = v37;
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 32) = v26;
  *(unsigned char *)(v24 + 40) = (_BYTE)a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24 + v23, v14, v11);
  aBlock[4] = sub_1D2F6B86C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_58;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  int64_t v28 = v33;
  sub_1D30019D8();
  uint64_t v43 = MEMORY[0x1E4FBC860];
  sub_1D2F6BA14(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  id v30 = v38;
  uint64_t v29 = v39;
  sub_1D30023A8();
  MEMORY[0x1D942E070](v21, v28, v30, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v41);
  v34(v21, v35);
  swift_release();
  return swift_release();
}

uint64_t sub_1D2F632FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v105 = a5;
  uint64_t v107 = a2;
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1D3001898();
  uint64_t v106 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D3001868();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  char v14 = (char *)v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v101 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1D3001918();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EBD65778);
    unint64_t v32 = sub_1D30018F8();
    os_log_type_t v33 = sub_1D30020B8();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_1D2F05000, v32, v33, "The scheduler was deallocated, cancelling the execution of plugins", v34, 2u);
      MEMORY[0x1D942F2D0](v34, -1, -1);
    }

    if (qword_1EBD631E8 != -1) {
      swift_once();
    }
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = v107;
    v35[3] = a3;
    v35[4] = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1D2FE463C((uint64_t)sub_1D2F6B384, (uint64_t)v35);
    return swift_release();
  }
  uint64_t v18 = Strong;
  int v104 = a4;
  __swift_project_boxed_opaque_existential_1((void *)(Strong + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration), *(void *)(Strong + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration + 24));
  if ((sub_1D2FD89CC() & 1) != 0 || !AFDeviceSupportsSiriUOD())
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1D3001918();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EBD65778);
    int64_t v28 = sub_1D30018F8();
    os_log_type_t v29 = sub_1D30020A8();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v30 = 0;
      _os_log_impl(&dword_1D2F05000, v28, v29, "Skipping SiriPrivateLearningAnalytics plugins run - device configuration is not supported", v30, 2u);
      MEMORY[0x1D942F2D0](v30, -1, -1);
    }

    if (qword_1EBD631E8 == -1) {
      goto LABEL_10;
    }
LABEL_73:
    swift_once();
LABEL_10:
    uint64_t v26 = (void *)swift_allocObject();
    void v26[2] = v107;
    v26[3] = a3;
    v26[4] = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1D2FE463C((uint64_t)sub_1D2F6B384, (uint64_t)v26);
    swift_release();
    return swift_release();
  }
  uint64_t v103 = v18;
  uint64_t v19 = (void *)(v18 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector + 24);
  uint64_t v21 = *(void *)(v18 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector + 32);
  __swift_project_boxed_opaque_existential_1(v19, v20);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21))
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1D3001918();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBD65778);
    unint64_t v23 = sub_1D30018F8();
    os_log_type_t v24 = sub_1D30020A8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1D2F05000, v23, v24, "Skipping SiriPrivateLearningAnalytics plugins run - device is in low power mode", v25, 2u);
      MEMORY[0x1D942F2D0](v25, -1, -1);
    }

    if (qword_1EBD631E8 == -1) {
      goto LABEL_10;
    }
    goto LABEL_73;
  }
  if (qword_1EBD63300 != -1) {
    swift_once();
  }
  uint64_t v37 = v103 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath;
  sub_1D2F6FBE0(v103 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath);
  sub_1D2F6DC54(v37, 1, (uint64_t)&v110);
  if (!v111)
  {
    sub_1D2F1CD78((uint64_t)&v110, &qword_1EA6991E0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_1D3001918();
    __swift_project_value_buffer(v59, (uint64_t)qword_1EBD65778);
    unint64_t v60 = sub_1D30018F8();
    os_log_type_t v61 = sub_1D30020A8();
    if (os_log_type_enabled(v60, v61))
    {
      unint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v62 = 0;
      _os_log_impl(&dword_1D2F05000, v60, v61, "The scheduler is not able to acquire the scheduling lock, the plugins might already be running", v62, 2u);
      MEMORY[0x1D942F2D0](v62, -1, -1);
    }

    v112[0] = v104;
    sub_1D2F68640(v112);
    if (qword_1EBD631E8 == -1) {
      goto LABEL_10;
    }
    goto LABEL_73;
  }
  sub_1D2F0BE68(&v110, (uint64_t)v112);
  char v38 = v104;
  LOBYTE(v110) = v104;
  if (sub_1D2F6786C((unsigned __int8 *)&v110))
  {
    if (v38 == 3) {
      uint64_t v39 = "runPluginScheduler";
    }
    else {
      uint64_t v39 = "runPluginEventsScheduler";
    }
    if (v38 == 3) {
      uint64_t v40 = 18;
    }
    else {
      uint64_t v40 = 24;
    }
    if (qword_1EBD5F798 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBD656E0);
    sub_1D3001858();
    uint64_t v41 = sub_1D2F62208(v39, v40, 2, (uint64_t)v16);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v11 + 8);
    v101[1] = v11 + 8;
    v101[0] = v42;
    v42(v16, v10);
    sub_1D2F37950((uint64_t)v112, (uint64_t)&v110);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v39;
    *(void *)(v43 + 24) = v40;
    *(unsigned char *)(v43 + 32) = 2;
    *(void *)(v43 + 40) = v41;
    sub_1D2F0BE68(&v110, v43 + 48);
    *(void *)(v43 + 88) = v107;
    *(void *)(v43 + 96) = a3;
    uint64_t v102 = v43;
    unint64_t v108 = MEMORY[0x1E4FBC860];
    uint64_t v44 = qword_1EBD5F7A0;
    uint64_t v107 = v41;
    swift_retain();
    swift_retain();
    if (v44 != -1) {
      swift_once();
    }
    int v45 = v104;
    uint64_t v46 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBD656F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v9, v46, v7);
    sub_1D3001858();
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    unint64_t v48 = sub_1D3001888();
    os_signpost_type_t v49 = sub_1D30021D8();
    os_signpost_id_t v50 = sub_1D3001848();
    double v51 = v48;
    _os_signpost_emit_with_name_impl(&dword_1D2F05000, v48, v49, v50, "loadPlugins", "", v47, 2u);
    if (v45 == 3)
    {
      id v52 = objc_msgSend(self, sel_defaultManager);
      uint64_t v53 = (void *)sub_1D3000E78();
      *(void *)&long long v110 = 0;
      id v54 = objc_msgSend(v52, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v53, 0, 0, &v110);

      unint64_t v55 = (void *)v110;
      if (v54)
      {
        sub_1D3000F18();
        uint64_t v56 = sub_1D3001DC8();
        id v57 = v55;

        uint64_t v58 = sub_1D2FCAB64(v56, 0);
LABEL_57:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v108 = v58;
        os_signpost_type_t v74 = sub_1D30021C8();
        os_signpost_id_t v75 = sub_1D3001848();
        _os_signpost_emit_with_name_impl(&dword_1D2F05000, v51, v74, v75, "loadPlugins", "", v47, 2u);

        MEMORY[0x1D942F2D0](v47, -1, -1);
        ((void (*)(char *, uint64_t))v101[0])(v14, v10);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v9, v7);
        sub_1D2F69E80();
        if (qword_1EBD63A48 != -1) {
          swift_once();
        }
        uint64_t v76 = sub_1D3001918();
        __swift_project_value_buffer(v76, (uint64_t)qword_1EBD65778);
        unint64_t v77 = sub_1D30018F8();
        os_log_type_t v78 = sub_1D30020A8();
        if (os_log_type_enabled(v77, v78))
        {
          int v79 = v104;
          id v80 = (uint8_t *)swift_slowAlloc();
          uint64_t v81 = swift_slowAlloc();
          uint64_t v109 = v81;
          *(_DWORD *)id v80 = 136315138;
          if (v79 == 3)
          {
            unint64_t v82 = 0xEB0000000065636ELL;
            uint64_t v83 = 0x616E65746E69614DLL;
          }
          else
          {
            *(void *)&long long v110 = 0;
            *((void *)&v110 + 1) = 0xE000000000000000;
            sub_1D3001C68();
            sub_1D2FC895C();
            sub_1D3001C68();
            unint64_t v82 = *((void *)&v110 + 1);
            uint64_t v83 = v110;
          }
          *(void *)&long long v110 = sub_1D2F09508(v83, v82, &v109);
          sub_1D3002318();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D2F05000, v77, v78, "The scheduler is starting to run plugins with context=%s", v80, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v81, -1, -1);
          MEMORY[0x1D942F2D0](v80, -1, -1);
        }

        LOBYTE(v110) = v104;
        unint64_t v100 = v108;
        swift_bridgeObjectRetain();
        sub_1D2F65F70((unsigned __int8 *)&v110, v100, (uint64_t)sub_1D2F6B930, v102);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v112);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v68 = *(void *)(v103 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_eventBasedEnabledPlugins);
      id v69 = objc_msgSend(self, sel_defaultManager);
      unint64_t v70 = (void *)sub_1D3000E78();
      *(void *)&long long v110 = 0;
      id v71 = objc_msgSend(v69, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v70, 0, 0, &v110);

      unint64_t v55 = (void *)v110;
      if (v71)
      {
        sub_1D3000F18();
        uint64_t v72 = sub_1D3001DC8();
        id v73 = v55;

        swift_bridgeObjectRetain();
        uint64_t v58 = sub_1D2FCAB64(v72, v68);
        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
    id v84 = v55;
    uint64_t v85 = (void *)sub_1D3000DF8();

    swift_willThrow();
    sub_1D2F6B948();
    uint64_t v86 = (void *)swift_allocError();
    *(void *)uint64_t v87 = 0;
    *(void *)(v87 + 8) = 0;
    *(unsigned char *)(v87 + 16) = 3;
    swift_willThrow();

    ((void (*)(char *, uint64_t))v101[0])(v14, v10);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v9, v7);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v88 = sub_1D3001918();
    __swift_project_value_buffer(v88, (uint64_t)qword_1EBD65778);
    id v89 = v86;
    id v90 = v86;
    uint64_t v91 = sub_1D30018F8();
    os_log_type_t v92 = sub_1D30020B8();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      uint64_t v109 = (uint64_t)v86;
      *(void *)&long long v110 = v94;
      *(_DWORD *)uint64_t v93 = 136315138;
      id v95 = v86;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v96 = sub_1D3001BC8();
      uint64_t v109 = sub_1D2F09508(v96, v97, (uint64_t *)&v110);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v91, v92, "Error loading plugins: %s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v94, -1, -1);
      MEMORY[0x1D942F2D0](v93, -1, -1);
    }
    else
    {
    }
    if (qword_1EBD631E8 != -1) {
      swift_once();
    }
    id v98 = (void *)swift_allocObject();
    uint64_t v99 = v102;
    void v98[2] = sub_1D2F6B930;
    v98[3] = v99;
    v98[4] = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1D2FE463C((uint64_t)sub_1D2F6B384, (uint64_t)v98);
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v112);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1D3001918();
    __swift_project_value_buffer(v63, (uint64_t)qword_1EBD65778);
    uint64_t v64 = sub_1D30018F8();
    os_log_type_t v65 = sub_1D30020A8();
    if (os_log_type_enabled(v64, v65))
    {
      int64x2_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64x2_t v66 = 0;
      _os_log_impl(&dword_1D2F05000, v64, v65, "The scheduler is skipping running plugins, the current time is outside the threshold", v66, 2u);
      MEMORY[0x1D942F2D0](v66, -1, -1);
    }

    if (qword_1EBD631E8 != -1) {
      swift_once();
    }
    int8x16_t v67 = (void *)swift_allocObject();
    v67[2] = v107;
    v67[3] = a3;
    v67[4] = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1D2FE463C((uint64_t)sub_1D2F6B384, (uint64_t)v67);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v112);
  }
}

uint64_t sub_1D2F64590(uint64_t a1, char *a2, uint64_t a3, int a4, uint64_t a5, void *a6, uint64_t (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v34 = a1;
  uint64_t v35 = a8;
  unint64_t v32 = a7;
  os_log_type_t v33 = a6;
  int v31 = a4;
  uint64_t v9 = sub_1D30018A8();
  uint64_t v30 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1D3001868();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v28[-v17];
  if (qword_1EBD5F798 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D3001898();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBD656E0);
  uint64_t v20 = sub_1D3001888();
  sub_1D30018B8();
  int v29 = sub_1D30021C8();
  uint64_t result = sub_1D30022D8();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  if ((v31 & 1) == 0)
  {
    if (!a2)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
      uint64_t v22 = v32;
LABEL_16:
      __swift_project_boxed_opaque_existential_1(v33, v33[3]);
      sub_1D2F6F4D0();
      return v22(v34);
    }
LABEL_12:
    swift_retain();
    sub_1D30018E8();
    swift_release();
    uint64_t v23 = v30;
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v30 + 88))(v11, v9) == *MEMORY[0x1E4FBD340])
    {
      os_log_type_t v24 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v11, v9);
      os_log_type_t v24 = "";
    }
    uint64_t v22 = v32;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v16, v18, v12);
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    os_signpost_id_t v26 = sub_1D3001848();
    _os_signpost_emit_with_name_impl(&dword_1D2F05000, v20, (os_signpost_type_t)v29, v26, a2, v24, v25, 2u);
    MEMORY[0x1D942F2D0](v25, -1, -1);

    uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v27(v18, v12);
    v27(v16, v12);
    goto LABEL_16;
  }
  if ((unint64_t)a2 >> 32)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2 >> 11 != 27)
  {
    if (a2 >> 16 <= 0x10)
    {
      a2 = sub_1D2F62AEC();
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1D2F6491C(char *a1, uint64_t a2, int a3)
{
  int v25 = a3;
  uint64_t v4 = sub_1D30018A8();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1D3001868();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v22[-v12];
  if (qword_1EBD5F798 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D3001898();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBD656E0);
  uint64_t v15 = sub_1D3001888();
  sub_1D30018B8();
  int v23 = sub_1D30021C8();
  uint64_t result = sub_1D30022D8();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  if ((v25 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a1 >> 11 == 27)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  a1 = sub_1D2F62AEC();
LABEL_12:
  swift_retain();
  sub_1D30018E8();
  swift_release();
  uint64_t v17 = v24;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v24 + 88))(v6, v4) == *MEMORY[0x1E4FBD340])
  {
    uint64_t v18 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v6, v4);
    uint64_t v18 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v19 = 0;
  os_signpost_id_t v20 = sub_1D3001848();
  _os_signpost_emit_with_name_impl(&dword_1D2F05000, v15, (os_signpost_type_t)v23, v20, a1, v18, v19, 2u);
  MEMORY[0x1D942F2D0](v19, -1, -1);

  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  v21(v13, v7);
  return ((uint64_t (*)(unsigned char *, uint64_t))v21)(v11, v7);
}

uint64_t sub_1D2F64C78(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v84 = a8;
  uint64_t v85 = a4;
  uint64_t v86 = a5;
  uint64_t v87 = a6;
  int v80 = a9;
  uint64_t v13 = sub_1D30019A8();
  uint64_t v83 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D3001A08();
  uint64_t v81 = *(void *)(v16 - 8);
  uint64_t v82 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D3000F18();
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  int v23 = (char *)v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    uint64_t v77 = v21;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1D30025A8();
    uint64_t v20 = swift_bridgeObjectRelease();
    uint64_t v21 = v77;
    if (v67 > a1)
    {
LABEL_3:
      uint64_t v77 = v21;
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v25 = Strong;
        uint64_t v76 = a2;
        uint64_t v75 = a7;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v79 = MEMORY[0x1D942E3A0](a1, a3);
LABEL_8:
          uint64_t v78 = v25;
          uint64_t v27 = *(void *)(v25
                          + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector
                          + 24);
          uint64_t v26 = *(void *)(v25
                          + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector
                          + 32);
          __swift_project_boxed_opaque_existential_1((void *)(v25 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector), v27);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26))
          {
            if (qword_1EBD63A48 != -1) {
              swift_once();
            }
            uint64_t v28 = sub_1D3001918();
            __swift_project_value_buffer(v28, (uint64_t)qword_1EBD65778);
            swift_retain_n();
            int v29 = sub_1D30018F8();
            os_log_type_t v30 = sub_1D30020A8();
            if (os_log_type_enabled(v29, v30))
            {
              uint64_t v31 = swift_slowAlloc();
              uint64_t v32 = swift_slowAlloc();
              aBlock[0] = v32;
              *(_DWORD *)uint64_t v31 = 136315394;
              id v33 = objc_msgSend(*(id *)(v79 + 32), sel_bundleURL);
              sub_1D3000EE8();

              uint64_t v34 = sub_1D3000E68();
              unint64_t v36 = v35;
              (*(void (**)(char *, uint64_t))(v77 + 8))(v23, v19);
              uint64_t v88 = sub_1D2F09508(v34, v36, aBlock);
              sub_1D3002318();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v31 + 12) = 2048;
              uint64_t v88 = a1;
              sub_1D3002318();
              _os_log_impl(&dword_1D2F05000, v29, v30, "Stopping SiriPrivateLearningAnalytics plugin (%s) run from index %ld - device is in low power mode", (uint8_t *)v31, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1D942F2D0](v32, -1, -1);
              MEMORY[0x1D942F2D0](v31, -1, -1);
            }
            else
            {

              uint64_t v37 = swift_release_n();
            }
            uint64_t v58 = v75;
            ((void (*)(uint64_t))v85)(v37);
            uint64_t v59 = v76;
            if (qword_1EBD631E8 != -1) {
              swift_once();
            }
            unint64_t v60 = (void *)swift_allocObject();
            void v60[2] = v87;
            v60[3] = v58;
            unsigned char v60[4] = v59;
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1D2FE463C((uint64_t)sub_1D2F6B384, (uint64_t)v60);
            swift_release();
            swift_release();
          }
          else
          {
            uint64_t v43 = v79;
            if (qword_1EBD63A48 != -1) {
              swift_once();
            }
            uint64_t v44 = sub_1D3001918();
            __swift_project_value_buffer(v44, (uint64_t)qword_1EBD65778);
            swift_retain_n();
            int v45 = sub_1D30018F8();
            os_log_type_t v46 = sub_1D3002098();
            int v47 = v46;
            if (os_log_type_enabled(v45, v46))
            {
              os_log_t v74 = v45;
              uint64_t v48 = swift_slowAlloc();
              int v73 = v47;
              os_signpost_type_t v49 = (uint8_t *)v48;
              uint64_t v50 = swift_slowAlloc();
              uint64_t v72 = v50;
              id v71 = v49;
              *(_DWORD *)os_signpost_type_t v49 = 136315138;
              aBlock[0] = v50;
              v70[1] = v49 + 4;
              id v51 = objc_msgSend(*(id *)(v43 + 32), sel_bundleURL);
              sub_1D3000EE8();

              uint64_t v52 = sub_1D3000E68();
              unint64_t v54 = v53;
              (*(void (**)(char *, uint64_t))(v77 + 8))(v23, v19);
              uint64_t v88 = sub_1D2F09508(v52, v54, aBlock);
              sub_1D3002318();
              swift_release_n();
              uint64_t v43 = v79;
              swift_bridgeObjectRelease();
              os_log_t v55 = v74;
              uint64_t v56 = v71;
              _os_log_impl(&dword_1D2F05000, v74, (os_log_type_t)v73, "Starting plugin run for %s", v71, 0xCu);
              uint64_t v57 = v72;
              swift_arrayDestroy();
              MEMORY[0x1D942F2D0](v57, -1, -1);
              MEMORY[0x1D942F2D0](v56, -1, -1);
            }
            else
            {

              swift_release_n();
            }
            uint64_t v61 = v76;
            uint64_t v62 = v75;
            uint64_t v79 = *(void *)(v78 + 16);
            uint64_t v63 = swift_allocObject();
            *(void *)(v63 + 16) = v43;
            *(unsigned char *)(v63 + 24) = v80;
            *(void *)(v63 + 32) = v61;
            *(void *)(v63 + 40) = a3;
            uint64_t v64 = v84;
            uint64_t v65 = v86;
            *(void *)(v63 + 48) = v85;
            *(void *)(v63 + 56) = v65;
            *(void *)(v63 + 64) = v87;
            *(void *)(v63 + 72) = v62;
            *(void *)(v63 + 80) = v64;
            *(void *)(v63 + 88) = a1;
            aBlock[4] = (uint64_t)sub_1D2F6B3EC;
            aBlock[5] = v63;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1D2FD5A90;
            aBlock[3] = (uint64_t)&block_descriptor_6;
            int64x2_t v66 = _Block_copy(aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1D30019D8();
            uint64_t v88 = MEMORY[0x1E4FBC860];
            sub_1D2F6BA14(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
            sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
            sub_1D30023A8();
            MEMORY[0x1D942E090](0, v18, v15, v66);
            _Block_release(v66);
            swift_release();
            (*(void (**)(char *, uint64_t))(v83 + 8))(v15, v13);
            (*(void (**)(char *, uint64_t))(v81 + 8))(v18, v82);
            swift_release();
          }
          return swift_release();
        }
        if (a1 < 0)
        {
          __break(1u);
        }
        else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
        {
          uint64_t v79 = *(void *)(a3 + 8 * a1 + 32);
          swift_retain();
          goto LABEL_8;
        }
        __break(1u);
      }
      else if (qword_1EBD63A48 == -1)
      {
LABEL_14:
        uint64_t v38 = sub_1D3001918();
        __swift_project_value_buffer(v38, (uint64_t)qword_1EBD65778);
        uint64_t v39 = sub_1D30018F8();
        os_log_type_t v40 = sub_1D30020B8();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v41 = 0;
          _os_log_impl(&dword_1D2F05000, v39, v40, "The scheduler was deallocated, cancelling the execution of plugins", v41, 2u);
          MEMORY[0x1D942F2D0](v41, -1, -1);
        }

        v85();
        if (qword_1EBD631E8 != -1) {
          swift_once();
        }
        uint64_t v42 = (void *)swift_allocObject();
        v42[2] = v87;
        v42[3] = a7;
        v42[4] = a2;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1D2FE463C((uint64_t)sub_1D2F6B384, (uint64_t)v42);
        return swift_release();
      }
      swift_once();
      goto LABEL_14;
    }
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    goto LABEL_3;
  }
  ((void (*)(uint64_t))v85)(v20);
  if (qword_1EBD631E8 != -1) {
    swift_once();
  }
  uint64_t v68 = (void *)swift_allocObject();
  v68[2] = v87;
  v68[3] = a7;
  v68[4] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D2FE463C((uint64_t)sub_1D2F6B384, (uint64_t)v68);
  return swift_release();
}

uint64_t sub_1D2F657EC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  char v23 = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = a4;
  *(void *)(v18 + 40) = a5;
  *(void *)(v18 + 48) = a6;
  *(void *)(v18 + 56) = a7;
  *(void *)(v18 + 64) = a8;
  *(void *)(v18 + 72) = a9;
  *(unsigned char *)(v18 + 80) = a2;
  *(void *)(v18 + 88) = a10;
  uint64_t v21 = *(void (**)(char *, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v17 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v21(&v23, sub_1D2F6B4A4, v18, ObjectType, v17);
  return swift_release();
}

uint64_t sub_1D2F65934(uint64_t *a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __CFString **a11)
{
  uint64_t v63 = a6;
  uint64_t v64 = a7;
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  uint64_t v15 = sub_1D3000F18();
  uint64_t v16 = *(uint8_t **)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  uint64_t v21 = a1[1];
  uint64_t v67 = v20;
  unint64_t v68 = a2;
  uint64_t v22 = off_1E6970000;
  uint64_t v66 = v17;
  if (!v21) {
    goto LABEL_6;
  }
  uint64_t v23 = qword_1EBD63A48;
  swift_bridgeObjectRetain();
  if (v23 != -1) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v24 = sub_1D3001918();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EBD65778);
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1D30018F8();
    os_log_type_t v26 = sub_1D30020B8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v59 = (void (*)(void, void))swift_slowAlloc();
      unint64_t v70 = v59;
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v60 = a8;
      id v28 = objc_msgSend(*(id *)(a2 + 32), sel_bundleURL);
      sub_1D3000EE8();

      uint64_t v29 = sub_1D3000E68();
      unint64_t v31 = v30;
      uint64_t v32 = (void (*)(char *, uint64_t))*((void *)v16 + 1);
      uint64_t v65 = v16;
      uint64_t v33 = v66;
      v32(v19, v66);
      v69[0] = sub_1D2F09508(v29, v31, (uint64_t *)&v70);
      sub_1D3002318();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v69[0] = v67;
      v69[1] = (uint64_t)v21;
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1D3001BC8();
      v69[0] = sub_1D2F09508(v34, v35, (uint64_t *)&v70);
      a8 = v60;
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      a2 = v68;
      swift_bridgeObjectRelease();
      os_log_type_t v36 = v26;
      uint64_t v15 = v33;
      uint64_t v16 = v65;
      _os_log_impl(&dword_1D2F05000, v25, v36, "Error running plugin. Bundle: %s; Error: %s", (uint8_t *)v27, 0x16u);
      uint64_t v37 = v59;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v37, -1, -1);
      uint64_t v38 = v27;
      uint64_t v22 = off_1E6970000;
      MEMORY[0x1D942F2D0](v38, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v15 = v66;
    }
LABEL_6:
    uint64_t v39 = *(void **)(a2 + 32);
    id v40 = [v39 (SEL)v22[416]];
    sub_1D3000EE8();

    uint64_t v41 = sub_1D3000E68();
    uint64_t v43 = v42;
    int v45 = (void (*)(void, void))*((void *)v16 + 1);
    uint64_t v44 = v16 + 8;
    uint64_t v59 = v45;
    v45(v19, v15);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a3 = sub_1D2F2884C(0, a3[2] + 1, 1, a3);
    }
    a2 = a3[2];
    unint64_t v46 = a3[3];
    if (a2 >= v46 >> 1) {
      a3 = sub_1D2F2884C((void *)(v46 > 1), a2 + 1, 1, a3);
    }
    uint64_t v65 = v44;
    a3[2] = a2 + 1;
    int v47 = &a3[4 * a2];
    v47[4] = v41;
    v47[5] = v43;
    v47[6] = v67;
    v47[7] = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v22 = a11;
    uint64_t v48 = sub_1D3001918();
    __swift_project_value_buffer(v48, (uint64_t)qword_1EBD65778);
    uint64_t v16 = (uint8_t *)v68;
    swift_retain_n();
    uint64_t v21 = sub_1D30018F8();
    os_log_type_t v49 = sub_1D3002098();
    if (os_log_type_enabled(v21, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v67 = (uint64_t)a11;
      id v51 = (uint8_t *)v50;
      a2 = swift_slowAlloc();
      v69[0] = a2;
      uint64_t v60 = a8;
      *(_DWORD *)id v51 = 136315138;
      uint64_t v16 = v51 + 4;
      id v52 = objc_msgSend(v39, sel_bundleURL);
      sub_1D3000EE8();

      uint64_t v53 = sub_1D3000E68();
      unint64_t v55 = v54;
      v59(v19, v66);
      unint64_t v70 = (void (*)(void, void))sub_1D2F09508(v53, v55, v69);
      a8 = v60;
      sub_1D3002318();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v21, v49, "Finished plugin run for %s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](a2, -1, -1);
      uint64_t v56 = v51;
      uint64_t v22 = (__CFString **)v67;
      MEMORY[0x1D942F2D0](v56, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    if (!__OFADD__(v22, 1)) {
      break;
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  sub_1D2F64C78((char *)v22 + 1, a3, v61, v62, v63, v64, a8, a9, a10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F65F70(unsigned __int8 *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v24 = a2;
  uint64_t v9 = sub_1D3001868();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *a1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v5;
  *(void *)(v14 + 24) = a3;
  *(void *)(v14 + 32) = a4;
  *(unsigned char *)(v14 + 40) = v13;
  uint64_t v15 = qword_1EBD5F798;
  swift_retain();
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  if (v13 == 3) {
    uint64_t v16 = 10;
  }
  else {
    uint64_t v16 = 16;
  }
  if (v13 == 3) {
    uint64_t v17 = "runPlugins";
  }
  else {
    uint64_t v17 = "runPluginsEvents";
  }
  uint64_t v18 = sub_1D3001898();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBD656E0);
  sub_1D3001858();
  uint64_t v19 = sub_1D2F62208(v17, v16, 2, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v16;
  *(unsigned char *)(v20 + 32) = 2;
  *(void *)(v20 + 40) = v19;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1D2F64C78(0, MEMORY[0x1E4FBC860], v24, (void (*)(void))sub_1D2F6B338, v20, (uint64_t)sub_1D2F6B2F0, v14, v21, v13);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D2F661E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63798);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D3001F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = v13;
  *(void *)(v14 + 40) = a3;
  *(void *)(v14 + 48) = a4;
  *(void *)(v14 + 56) = a1;
  *(unsigned char *)(v14 + 64) = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D2F668DC((uint64_t)v11, (uint64_t)&unk_1EA6991B8, v14);
  return swift_release();
}

uint64_t sub_1D2F6635C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 97) = a8;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  return MEMORY[0x1F4188298](sub_1D2F66384, 0, 0);
}

uint64_t sub_1D2F66384()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    *(unsigned char *)(v0 + 96) = *(unsigned char *)(v0 + 97);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D2F66554;
    return sub_1D2F66A80((unsigned char *)(v0 + 96));
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D3001918();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
    uint64_t v5 = sub_1D30018F8();
    os_log_type_t v6 = sub_1D30020B8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1D2F05000, v5, v6, "The scheduler was deallocated, cancelling the execution of the user feedback learning platform", v7, 2u);
      MEMORY[0x1D942F2D0](v7, -1, -1);
    }
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v9 = *(void (**)(uint64_t))(v0 + 48);

    v9(v8);
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1D2F66554(uint64_t a1)
{
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F66654, 0, 0);
}

uint64_t sub_1D2F66654()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (void (*)(uint64_t))v0[6];
  uint64_t v5 = v0[8];
  swift_bridgeObjectRetain();
  sub_1D2F9CF8C(v1);
  v2(v5);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1D2F66700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D3001F48();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D3001F38();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1D2F1CD78(a1, &qword_1EBD63798);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D3001EC8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61710);
  return swift_task_create();
}

uint64_t sub_1D2F668B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2F668DC(a1, a2, a3);
}

uint64_t sub_1D2F668DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D3001F48();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D3001F38();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1D2F1CD78(a1, &qword_1EBD63798);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D3001EC8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D2F66A80(unsigned char *a1)
{
  *(void *)(v2 + 232) = v1;
  uint64_t v4 = sub_1D30018A8();
  *(void *)(v2 + 240) = v4;
  *(void *)(v2 + 248) = *(void *)(v4 - 8);
  *(void *)(v2 + 256) = swift_task_alloc();
  uint64_t v5 = sub_1D3001868();
  *(void *)(v2 + 264) = v5;
  *(void *)(v2 + 272) = *(void *)(v5 - 8);
  *(void *)(v2 + 280) = swift_task_alloc();
  *(void *)(v2 + 288) = swift_task_alloc();
  *(unsigned char *)(v2 + 344) = *a1;
  return MEMORY[0x1F4188298](sub_1D2F66BB8, 0, 0);
}

uint64_t sub_1D2F66BB8()
{
  uint64_t v37 = v0;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D3001918();
  *(void *)(v0 + 296) = __swift_project_value_buffer(v1, (uint64_t)qword_1EBD65778);
  uint64_t v2 = sub_1D30018F8();
  os_log_type_t v3 = sub_1D30020A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v35 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + 224) = sub_1D2F09508(0xD000000000000029, 0x80000001D3010260, &v35);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v2, v3, "PluginScheduler.%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v5, -1, -1);
    MEMORY[0x1D942F2D0](v4, -1, -1);
  }

  uint64_t v6 = (void *)(*(void *)(v0 + 232) + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags);
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  *(void *)(v0 + 96) = &type metadata for SiriPrivateLearningFeatureFlag;
  *(void *)(v0 + 104) = sub_1D2F1DF00();
  *(unsigned char *)(v0 + 72) = 13;
  char v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v0 + 72, v7, v8);
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  if (v9)
  {
    if (*(unsigned char *)(v0 + 344) == 3)
    {
      uint64_t v10 = *(void *)(v0 + 232);
      LOBYTE(v35) = 0;
      sub_1D2F37950(v10 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger, v0 + 112);
      SiriUserFeedbackLearningTask.init(context:usageLogger:)((char *)&v35, (void *)(v0 + 112), v0 + 16);
      if (qword_1EBD5F798 != -1) {
        swift_once();
      }
      uint64_t v21 = *(void *)(v0 + 288);
      uint64_t v22 = *(void *)(v0 + 264);
      uint64_t v23 = *(void *)(v0 + 272);
      uint64_t v24 = *(void *)(v0 + 232);
      uint64_t v25 = sub_1D3001898();
      *(void *)(v0 + 304) = __swift_project_value_buffer(v25, (uint64_t)qword_1EBD656E0);
      sub_1D3001858();
      *(void *)(v0 + 312) = sub_1D2F62208("runUserFeedbackLearningPlatform", 31, 2, v21);
      os_log_type_t v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      *(void *)(v0 + 320) = v26;
      *(void *)(v0 + 328) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v26(v21, v22);
      uint64_t v27 = *(void *)(v24
                      + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform
                      + 24);
      uint64_t v28 = *(void *)(v24
                      + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform
                      + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform), v27);
      uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 + 16) + **(int **)(v28 + 16));
      uint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 336) = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_1D2F6739C;
      return v33(v0 + 152, v0 + 16, v27, v28);
    }
    uint64_t v17 = sub_1D30018F8();
    os_log_type_t v18 = sub_1D30020B8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v34 = v20;
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_1D3001C68();
      sub_1D2FC895C();
      sub_1D3001C68();
      *(void *)(v0 + 176) = sub_1D2F09508(v35, v36, &v34);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v17, v18, "Error: context is %s, only maintenance context is supported by the User Feedback Learning platform", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v20, -1, -1);
      MEMORY[0x1D942F2D0](v19, -1, -1);
    }
  }
  else
  {
    uint64_t v11 = sub_1D30018F8();
    os_log_type_t v12 = sub_1D30020A8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v35 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = sub_1D3002458();
      *(void *)(v0 + 200) = sub_1D2F09508(v15, v16, &v35);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v11, v12, "%s is not enabled", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v14, -1, -1);
      MEMORY[0x1D942F2D0](v13, -1, -1);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v31 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v32 = MEMORY[0x1E4FBC860];
  return v31(v32);
}

uint64_t sub_1D2F6739C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2F67498, 0, 0);
}

uint64_t sub_1D2F67498()
{
  uint64_t v33 = v0;
  uint64_t v2 = v0[19];
  uint64_t v1 = (void *)v0[20];
  os_log_type_t v3 = (void *)v0[21];
  uint64_t v4 = sub_1D3001888();
  sub_1D30018B8();
  os_signpost_type_t v5 = sub_1D30021C8();
  if (sub_1D30022D8())
  {
    unint64_t v31 = v1;
    uint64_t v6 = v0[31];
    uint64_t v7 = v0[32];
    uint64_t v8 = v0[30];
    swift_retain();
    sub_1D30018E8();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v7, v8) == *MEMORY[0x1E4FBD340])
    {
      char v9 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
      char v9 = "";
    }
    uint64_t v29 = (void (*)(uint64_t, uint64_t))v0[40];
    uint64_t v10 = v0 + 36;
    uint64_t v11 = v0[35];
    uint64_t v30 = v2;
    uint64_t v12 = v0[33];
    (*(void (**)(void, uint64_t, uint64_t))(v0[34] + 16))(v0[36], v11, v12);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    os_signpost_id_t v14 = sub_1D3001848();
    _os_signpost_emit_with_name_impl(&dword_1D2F05000, v4, v5, v14, "runUserFeedbackLearningPlatform", v9, v13, 2u);
    MEMORY[0x1D942F2D0](v13, -1, -1);

    uint64_t v15 = v12;
    uint64_t v2 = v30;
    v29(v11, v15);
    uint64_t v1 = v31;
  }
  else
  {
    uint64_t v10 = v0 + 35;
  }
  ((void (*)(void, void))v0[40])(*v10, v0[33]);
  if (v3)
  {
    id v16 = v3;
    id v17 = v3;
    id v18 = v3;
    uint64_t v19 = sub_1D30018F8();
    os_log_type_t v20 = sub_1D30020B8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v32[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      v0[26] = v3;
      id v23 = v3;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v24 = sub_1D3001BC8();
      v0[27] = sub_1D2F09508(v24, v25, v32);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v19, v20, "Error running user feedback platform: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v22, -1, -1);
      MEMORY[0x1D942F2D0](v21, -1, -1);
    }
    else
    {
    }
  }
  v32[0] = v2;
  v32[1] = (uint64_t)v1;
  void v32[2] = (uint64_t)v3;
  uint64_t v26 = SiriUserFeedbackLearningPlatformResult.toSchedulerResult()();
  swift_release();
  sub_1D2F3C584((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(uint64_t))v0[1];
  return v27(v26);
}

uint64_t sub_1D2F6786C(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D3001018();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v56 - v9;
  int v11 = *a1;
  if (v11 != 3)
  {
    uint64_t v64 = v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath;
    uint64_t v12 = sub_1D2F6ACC0(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath);
    if (!v12)
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1D3001918();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EBD65778);
      uint64_t v32 = sub_1D30018F8();
      os_log_type_t v33 = sub_1D30020A8();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_1D2F05000, v32, v33, "Cannot retrieve the scheduler timestamp, the scheduler might not have run before", v34, 2u);
        MEMORY[0x1D942F2D0](v34, -1, -1);
      }

      double v68 = 0.0;
      unint64_t v69 = 0xE000000000000000;
      sub_1D3001C68();
      sub_1D2FC895C();
      sub_1D3001C68();
      uint64_t v35 = *(void *)&v68;
      unint64_t v36 = v69;
      uint64_t v37 = (objc_class *)type metadata accessor for PluginSchedulerTimestamp();
      uint64_t v38 = (char *)objc_allocWithZone(v37);
      uint64_t v39 = (uint64_t *)&v38[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_scheduler];
      *uint64_t v39 = v35;
      v39[1] = v36;
      *(void *)&v38[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_timestamp] = 0;
      v66.receiver = v38;
      v66.super_class = v37;
      id v16 = objc_msgSendSuper2(&v66, sel_init);
      goto LABEL_20;
    }
    uint64_t v13 = (void *)v12;
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D3001918();
    uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EBD65778);
    id v16 = v13;
    uint64_t v63 = v15;
    id v17 = sub_1D30018F8();
    os_log_type_t v18 = sub_1D30020A8();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      os_log_t v61 = v17;
      uint64_t v20 = swift_slowAlloc();
      int v59 = v19;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v60 = swift_slowAlloc();
      double v68 = *(double *)&v60;
      int v62 = v11;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v57 = v21;
      uint64_t v58 = v21 + 4;
      id v22 = objc_msgSend(v16, sel_debugDescription);
      uint64_t v23 = v2;
      uint64_t v24 = sub_1D3001B78();
      unint64_t v26 = v25;

      uint64_t v27 = v24;
      uint64_t v2 = v23;
      uint64_t v65 = sub_1D2F09508(v27, v26, (uint64_t *)&v68);
      int v11 = v62;
      sub_1D3002318();

      swift_bridgeObjectRelease();
      os_log_t v28 = v61;
      uint64_t v29 = v57;
      _os_log_impl(&dword_1D2F05000, v61, (os_log_type_t)v59, "The scheduler retrieved the previous timestamp: %s", v57, 0xCu);
      uint64_t v30 = v60;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v30, -1, -1);
      MEMORY[0x1D942F2D0](v29, -1, -1);
    }
    else
    {
    }
    sub_1D3001008();
    sub_1D3000F88();
    sub_1D3000FA8();
    double v41 = v40;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v5 + 8);
    v42(v8, v4);
    v42(v10, v4);
    if (v41 <= 30.0 || v41 >= 172800.0)
    {
      uint64_t v44 = sub_1D30018F8();
      os_log_type_t v45 = sub_1D30020A8();
      if (os_log_type_enabled(v44, v45))
      {
        unint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v46 = 134217984;
        double v68 = v41;
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v44, v45, "The scheduler time delta is outside the threshold, delta=%f", v46, 0xCu);
        MEMORY[0x1D942F2D0](v46, -1, -1);
      }

LABEL_20:
      sub_1D2F67E90(v64);
      uint64_t v47 = 0;
      goto LABEL_26;
    }
  }
  sub_1D3001008();
  sub_1D3000F98();
  uint64_t v49 = v48;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (v11 == 3)
  {
    unint64_t v50 = 0xEB0000000065636ELL;
    uint64_t v51 = 0x616E65746E69614DLL;
  }
  else
  {
    double v68 = 0.0;
    unint64_t v69 = 0xE000000000000000;
    sub_1D3001C68();
    sub_1D2FC895C();
    sub_1D3001C68();
    uint64_t v51 = *(void *)&v68;
    unint64_t v50 = v69;
  }
  id v52 = (objc_class *)type metadata accessor for PluginSchedulerTimestamp();
  uint64_t v53 = (char *)objc_allocWithZone(v52);
  unint64_t v54 = (uint64_t *)&v53[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_scheduler];
  *unint64_t v54 = v51;
  v54[1] = v50;
  *(void *)&v53[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_timestamp] = v49;
  v67.receiver = v53;
  v67.super_class = v52;
  id v16 = objc_msgSendSuper2(&v67, sel_init);
  sub_1D2F67E90(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath);
  uint64_t v47 = 1;
LABEL_26:

  return v47;
}

void sub_1D2F67E90(uint64_t a1)
{
  v49[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1D3000F18();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  id v8 = v1;
  uint64_t v9 = sub_1D30018F8();
  os_log_type_t v10 = sub_1D30020A8();
  int v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    unint64_t v46 = (void *)swift_slowAlloc();
    v49[0] = v46;
    *(_DWORD *)uint64_t v12 = 136315394;
    id v13 = objc_msgSend(v8, sel_debugDescription, v12 + 4);
    uint64_t v47 = a1;
    id v14 = v13;
    uint64_t v15 = sub_1D3001B78();
    int v45 = v11;
    unint64_t v17 = v16;

    uint64_t v48 = sub_1D2F09508(v15, v17, (uint64_t *)v49);
    sub_1D3002318();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v18 = sub_1D3000F08();
    uint64_t v48 = sub_1D2F09508(v18, v19, (uint64_t *)v49);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_1D2F05000, v9, (os_log_type_t)v45, "Updating timestamp to %s, path=%s", (uint8_t *)v12, 0x16u);
    uint64_t v20 = v46;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v20, -1, -1);
    MEMORY[0x1D942F2D0](v12, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }

  uint64_t v21 = self;
  v49[0] = 0;
  id v22 = objc_msgSend(v21, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, v49);
  id v23 = v49[0];
  if (v22)
  {
    uint64_t v24 = sub_1D3000F68();
    unint64_t v26 = v25;

    sub_1D2F454DC(v24, v26);
    sub_1D3000F78();
    sub_1D2F0D1CC(v24, v26);
    sub_1D2F0D1CC(v24, v26);
  }
  else
  {
    uint64_t v27 = v23;
    os_log_t v28 = (void *)sub_1D3000DF8();

    swift_willThrow();
    id v29 = v8;
    id v30 = v28;
    id v31 = v29;
    id v32 = v28;
    os_log_type_t v33 = sub_1D30018F8();
    os_log_type_t v34 = sub_1D30020B8();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      unint64_t v36 = (void *)swift_slowAlloc();
      v49[0] = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      id v37 = objc_msgSend(v31, sel_debugDescription);
      uint64_t v38 = sub_1D3001B78();
      unint64_t v40 = v39;

      uint64_t v48 = sub_1D2F09508(v38, v40, (uint64_t *)v49);
      sub_1D3002318();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v48 = (uint64_t)v28;
      id v41 = v28;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v42 = sub_1D3001BC8();
      uint64_t v48 = sub_1D2F09508(v42, v43, (uint64_t *)v49);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v33, v34, "Cannot encode timestamp, timestamp=%s, error=%s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v36, -1, -1);
      MEMORY[0x1D942F2D0](v35, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_1D2F68640(unsigned __int8 *a1)
{
  v93[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001018();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v80 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v80 - v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v80 - v16;
  LODWORD(v90) = *a1;
  sub_1D3000F08();
  id v18 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
  unint64_t v19 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v18, sel_initFileURLWithPath_, v19);

  uint64_t v21 = *MEMORY[0x1E4F1C530];
  uint64_t v91 = 0;
  v93[0] = 0;
  unsigned int v22 = objc_msgSend(v20, sel_getResourceValue_forKey_error_, &v91, v21, v93);
  uint64_t v23 = v91;
  if (!v22)
  {
    id v50 = v93[0];
    swift_unknownObjectRetain();
    uint64_t v51 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_1D3001918();
    __swift_project_value_buffer(v52, (uint64_t)qword_1EBD65778);
    id v53 = v51;
    id v54 = v51;
    unint64_t v55 = sub_1D30018F8();
    os_log_type_t v56 = sub_1D30020B8();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 138412290;
      id v59 = v51;
      uint64_t v60 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v91 = v60;
      sub_1D3002318();
      *uint64_t v58 = v60;

      _os_log_impl(&dword_1D2F05000, v55, v56, "The scheduler was not able to retrieve the timestamp, error=%@", v57, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v58, -1, -1);
      MEMORY[0x1D942F2D0](v57, -1, -1);

      return swift_unknownObjectRelease();
    }

LABEL_20:
    return swift_unknownObjectRelease();
  }
  id v24 = v93[0];
  swift_unknownObjectRetain();

  if (!v23)
  {
LABEL_16:
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1D3001918();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EBD65778);
    unint64_t v55 = sub_1D30018F8();
    os_log_type_t v62 = sub_1D30020B8();
    if (os_log_type_enabled(v55, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl(&dword_1D2F05000, v55, v62, "The scheduler was not able to convert the timestamp to Date", v63, 2u);
      MEMORY[0x1D942F2D0](v63, -1, -1);
    }
    goto LABEL_20;
  }
  uint64_t v91 = v23;
  swift_unknownObjectRetain_n();
  int v25 = swift_dynamicCast();
  unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (!v25)
  {
    v26(v4, 1, 1, v5);
    goto LABEL_15;
  }
  v26(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_15:
    swift_unknownObjectRelease();
    sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62A80);
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v17, v4, v5);
  sub_1D3001008();
  sub_1D3000FA8();
  os_log_t v28 = v27;
  uint64_t v29 = v6 + 8;
  id v30 = *(void (**)(char *, uint64_t))(v6 + 8);
  v30(v15, v5);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1D3001918();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EBD65778);
  uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v86(v12, v17, v5);
  uint64_t v87 = v32;
  os_log_type_t v33 = sub_1D30018F8();
  os_log_type_t v34 = sub_1D30020A8();
  LODWORD(v85) = v34;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (_DWORD *)swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    uint64_t v91 = v84;
    *uint64_t v35 = 136315394;
    uint64_t v81 = (uint8_t *)v35;
    uint64_t v82 = v35 + 1;
    id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    uint64_t v89 = v6 + 8;
    id v37 = v36;
    uint64_t v38 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    os_log_t v83 = v33;
    unint64_t v39 = (void *)v38;
    objc_msgSend(v37, sel_setDateFormat_, v38);

    unint64_t v40 = (void *)sub_1D3000FC8();
    id v41 = objc_msgSend(v37, sel_stringFromDate_, v40);

    uint64_t v42 = sub_1D3001B78();
    uint64_t v88 = v30;
    unint64_t v44 = v43;

    uint64_t v29 = v89;
    int v45 = (void *)sub_1D2F09508(v42, v44, &v91);
    unint64_t v46 = v81;
    v93[0] = v45;
    sub_1D3002318();
    id v30 = v88;
    swift_bridgeObjectRelease();
    v30(v12, v5);
    uint64_t v47 = v46;
    *((_WORD *)v46 + 6) = 2048;
    v93[0] = v28;
    sub_1D3002318();
    os_log_t v48 = v83;
    _os_log_impl(&dword_1D2F05000, v83, (os_log_type_t)v85, "The scheduler retrieved the timestamp of the previous run: %s, delta=%f", v47, 0x16u);
    uint64_t v49 = v84;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v49, -1, -1);
    MEMORY[0x1D942F2D0](v47, -1, -1);
  }
  else
  {
    v30(v12, v5);
  }
  if (*(double *)&v28 <= 172800.0)
  {
    v30(v17, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    v86(v9, v17, v5);
    uint64_t v65 = sub_1D30018F8();
    int v66 = sub_1D30020C8();
    if (os_log_type_enabled(v65, (os_log_type_t)v66))
    {
      LODWORD(v87) = v66;
      uint64_t v89 = v29;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v86 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
      v93[0] = v86;
      *(_DWORD *)uint64_t v67 = 136315394;
      uint64_t v88 = v30;
      if (v90 == 3)
      {
        unint64_t v68 = 0xEB0000000065636ELL;
        uint64_t v69 = 0x616E65746E69614DLL;
      }
      else
      {
        uint64_t v91 = 0;
        unint64_t v92 = 0xE000000000000000;
        sub_1D3001C68();
        sub_1D2FC895C();
        sub_1D3001C68();
        uint64_t v69 = v91;
        unint64_t v68 = v92;
      }
      uint64_t v91 = sub_1D2F09508(v69, v68, (uint64_t *)v93);
      id v90 = &v92;
      sub_1D3002318();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2080;
      uint64_t v85 = v67 + 14;
      id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
      id v71 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      objc_msgSend(v70, sel_setDateFormat_, v71);

      uint64_t v72 = (void *)sub_1D3000FC8();
      id v73 = objc_msgSend(v70, sel_stringFromDate_, v72);

      uint64_t v74 = sub_1D3001B78();
      unint64_t v76 = v75;

      uint64_t v91 = sub_1D2F09508(v74, v76, (uint64_t *)v93);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      uint64_t v77 = v9;
      uint64_t v78 = v88;
      v88(v77, v5);
      _os_log_impl(&dword_1D2F05000, v65, (os_log_type_t)v87, "The scheduler with context %s was unable to acquire the scheduling lock, the previous run timestamp: %s", (uint8_t *)v67, 0x16u);
      uint64_t v79 = v86;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v79, -1, -1);
      MEMORY[0x1D942F2D0](v67, -1, -1);
      swift_unknownObjectRelease();

      v78(v17, v5);
    }
    else
    {

      v30(v9, v5);
      swift_unknownObjectRelease();
      v30(v17, v5);
    }
  }
  return swift_unknownObjectRelease();
}

uint64_t PluginScheduler.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath;
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform);
  return v0;
}

uint64_t PluginScheduler.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath;
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F693A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D3000F18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a1;
  if (qword_1EBD616C8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65730);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  char v14 = v10;
  sub_1D2F62E3C(&v14, (uint64_t)v9, a2, a3, 0.0);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1D2F69518(void *a1)
{
  uint64_t v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  uint64_t v4 = (void *)sub_1D3001F98();
  id v5 = (id)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
}

id sub_1D2F69674(void *a1)
{
  uint64_t v2 = v1;
  sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD63380);
  id v4 = v2;
  uint64_t v5 = sub_1D3002288();
  if (!v5) {
    goto LABEL_5;
  }
  uint64_t v6 = (void *)v5;
  uint64_t v7 = sub_1D3001B78();
  uint64_t v9 = v8;

  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63370);
  char v10 = (void *)sub_1D3002288();
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_5:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_doubleValue);
  uint64_t v13 = v12;

  char v14 = (objc_class *)type metadata accessor for PluginSchedulerTimestamp();
  uint64_t v15 = (char *)objc_allocWithZone(v14);
  uint64_t v16 = (uint64_t *)&v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_scheduler];
  *uint64_t v16 = v7;
  v16[1] = v9;
  *(void *)&v15[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24PluginSchedulerTimestamp_timestamp] = v13;
  v19.receiver = v15;
  v19.super_class = v14;
  id v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v17;
}

uint64_t sub_1D2F6989C()
{
  uint64_t v0 = sub_1D3001018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D3000F88();
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_1D3002438();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(v4, sel_setDateFormat_, v5);

  uint64_t v6 = (void *)sub_1D3000FC8();
  id v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  sub_1D3001B78();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  uint64_t v8 = v10[0];
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

id sub_1D2F69B08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PluginSchedulerTimestamp();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2F69B50(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1D2F6BB74;
  return v6(a1);
}

uint64_t sub_1D2F69C2C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1D2F69D08;
  return v6(a1);
}

uint64_t sub_1D2F69D08()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D2F69E00(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2F69E28(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_1D3002318();
  *a1 = v5;
  return result;
}

void sub_1D2F69E80()
{
  if ((unint64_t)*v0 >> 62) {
    goto LABEL_38;
  }
  if (*(uint64_t *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    do
    {
      if ((unint64_t)*v0 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v1 = sub_1D30025A8();
        swift_bridgeObjectRelease();
        uint64_t v2 = v1 - 2;
        if (v1 < 2) {
          return;
        }
      }
      else
      {
        uint64_t v1 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v2 = v1 - 2;
        if (v1 < 2) {
          return;
        }
      }
      unint64_t v3 = 0;
      while (1)
      {
        unint64_t v15 = 0;
        MEMORY[0x1D942F2F0](&v15, 8);
        uint64_t v5 = (v15 * (unsigned __int128)(unint64_t)v1) >> 64;
        if (v1 > v15 * v1)
        {
          unint64_t v6 = -v1 % (unint64_t)v1;
          if (v6 > v15 * v1)
          {
            do
            {
              unint64_t v15 = 0;
              MEMORY[0x1D942F2F0](&v15, 8);
            }
            while (v6 > v15 * v1);
            uint64_t v5 = (v15 * (unsigned __int128)(unint64_t)v1) >> 64;
          }
        }
        unint64_t v7 = v3 + v5;
        if (__OFADD__(v3, v5)) {
          break;
        }
        if (v3 == v7) {
          goto LABEL_6;
        }
        uint64_t v8 = *v0;
        if ((*v0 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x1D942E3A0](v3, *v0);
          uint64_t v8 = *v0;
          if ((*v0 & 0xC000000000000001) == 0) {
            goto LABEL_16;
          }
        }
        else
        {
          if (v3 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_33;
          }
          uint64_t v9 = *(void *)(v8 + 8 * v3 + 32);
          swift_retain();
          if ((v8 & 0xC000000000000001) == 0)
          {
LABEL_16:
            if ((v7 & 0x8000000000000000) != 0) {
              goto LABEL_34;
            }
            if (v7 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_35;
            }
            uint64_t v10 = *(void *)(v8 + 8 * v7 + 32);
            swift_retain();
            goto LABEL_19;
          }
        }
        uint64_t v10 = MEMORY[0x1D942E3A0](v7, v8);
        uint64_t v8 = *v0;
LABEL_19:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        uint64_t *v0 = v8;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v8 < 0 || (v8 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_1D2FA8650(v8);
          uint64_t *v0 = v8;
        }
        *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v10;
        swift_release();
        sub_1D3001DE8();
        uint64_t v12 = *v0;
        int v13 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        uint64_t *v0 = v12;
        if (!v13 || v12 < 0 || (v12 & 0x4000000000000000) != 0)
        {
          uint64_t v12 = sub_1D2FA8650(v12);
          uint64_t *v0 = v12;
        }
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v7 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_37;
        }
        *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v9;
        swift_release();
        sub_1D3001DE8();
LABEL_6:
        --v1;
        if (v3++ == v2) {
          return;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1D30025A8();
      swift_bridgeObjectRelease();
    }
    while (v14 >= 2);
  }
}

uint64_t sub_1D2F6A11C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *unint64_t v3 = v2;
  v3[1] = sub_1D2F6A1FC;
  return v5(v2 + 16);
}

uint64_t sub_1D2F6A1FC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1D2F6A32C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63598);
    uint64_t v3 = sub_1D3002408();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1D3002928();
      swift_bridgeObjectRetain();
      sub_1D3001C28();
      uint64_t result = sub_1D3002968();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1D3002778(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          objc_super v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1D3002778();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1D2F6A4D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D3000F18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 16) = a1;
  id v8 = a1;
  sub_1D3000E58();
  uint64_t v9 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v9(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_lockPath, v7, v4);
  sub_1D3000E58();
  v9(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_timestampPath, v7, v4);
  uint64_t v10 = type metadata accessor for DefaultDeviceConfiguration();
  swift_allocObject();
  uint64_t v11 = sub_1D2FD8820();
  unint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration);
  uint64_t v12[3] = v10;
  void v12[4] = (uint64_t)&off_1F2A1BDB0;
  *unint64_t v12 = v11;
  id v13 = objc_msgSend(self, sel_processInfo);
  uint64_t v14 = (void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceLowPowerModeDetector);
  v14[3] = sub_1D2F0BCB8(0, &qword_1EBD616D0);
  v14[4] = &off_1F2A18AB8;
  *uint64_t v14 = v13;
  if (qword_1EBD63490 != -1) {
    swift_once();
  }
  *(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_eventBasedEnabledPlugins) = qword_1EBD63480;
  *(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_minEventBasedProcessingThreshold) = 0x403E000000000000;
  *(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_maxEventBasedProcessingThreshold) = 0x4105180000000000;
  uint64_t v15 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_featureFlags;
  *(void *)(v15 + 24) = &type metadata for EnvironmentFeatureFlags;
  *(void *)(v15 + 32) = &protocol witness table for EnvironmentFeatureFlags;
  uint64_t v16 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_usageLogger;
  *(void *)(v16 + 24) = &type metadata for UsageLogger;
  *(void *)(v16 + 32) = &protocol witness table for UsageLogger;
  uint64_t v17 = v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_userFeedbackLearningPlatform;
  *(void *)(v17 + 24) = &type metadata for SiriUserFeedbackLearningMLRuntimePlatform;
  *(void *)(v17 + 32) = &protocol witness table for SiriUserFeedbackLearningMLRuntimePlatform;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D2F6A774()
{
  uint64_t v0 = sub_1D3002158();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D3002138();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1D3001A08();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1D2F0BCB8(0, qword_1EBD635E0);
  sub_1D30019E8();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1D2F6BA14(&qword_1EBD635D8, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635C0);
  sub_1D2F6BA5C((unint64_t *)&unk_1EBD635C8, &qword_1EBD635C0);
  sub_1D30023A8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  return sub_1D3002178();
}

uint64_t type metadata accessor for PluginScheduler()
{
  uint64_t result = qword_1EBD634B8;
  if (!qword_1EBD634B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t destroy for Locale()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Locale(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Locale(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Locale(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PluginSchedulerRunResult()
{
  return &type metadata for PluginSchedulerRunResult;
}

uint64_t sub_1D2F6AB4C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PluginScheduling.runAllNow(context:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1D2F6AB74()
{
  return type metadata accessor for PluginScheduler();
}

uint64_t sub_1D2F6AB7C()
{
  uint64_t result = sub_1D3000F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PluginScheduler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PluginScheduler);
}

uint64_t dispatch thunk of PluginScheduler.__allocating_init(queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of PluginScheduler.runAllNow(context:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t type metadata accessor for PluginSchedulerTimestamp()
{
  return self;
}

uint64_t sub_1D2F6ACC0(uint64_t a1)
{
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v20 - v5;
  uint64_t v7 = sub_1D3000F28();
  unint64_t v9 = v8;
  sub_1D2F0BCB8(0, &qword_1EBD63338);
  type metadata accessor for PluginSchedulerTimestamp();
  sub_1D2F454DC(v7, v9);
  uint64_t v10 = sub_1D30020E8();
  uint64_t v18 = v10;
  if (v10)
  {
    sub_1D2F0D1CC(v7, v9);
    sub_1D2F0D1CC(v7, v9);
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D3001918();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBD65778);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    unint64_t v12 = sub_1D30018F8();
    os_log_type_t v13 = sub_1D30020B8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v22[0] = v21;
      *(_DWORD *)uint64_t v14 = 136315138;
      v20[1] = v14 + 4;
      sub_1D2F6BA14((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
      uint64_t v15 = sub_1D3002738();
      v22[3] = sub_1D2F09508(v15, v16, v22);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      _os_log_impl(&dword_1D2F05000, v12, v13, "Cannot decode scheduler timestamp, path=%s", v14, 0xCu);
      uint64_t v17 = v21;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v17, -1, -1);
      MEMORY[0x1D942F2D0](v14, -1, -1);
      sub_1D2F0D1CC(v7, v9);

      sub_1D2F0D1CC(v7, v9);
    }
    else
    {
      sub_1D2F0D1CC(v7, v9);
      sub_1D2F0D1CC(v7, v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    return 0;
  }
  return v18;
}

uint64_t sub_1D2F6B2B0()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1D2F6B2F0(uint64_t a1)
{
  return sub_1D2F661E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_1D2F6B300()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D2F6B338()
{
  return sub_1D2F6491C(*(char **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1D2F6B348()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2F6B38C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1D2F6B3EC()
{
  return sub_1D2F657EC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1D2F6B444()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1D2F6B4A4(uint64_t *a1)
{
  return sub_1D2F65934(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(__CFString ***)(v1 + 88));
}

uint64_t sub_1D2F6B4E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 65, 7);
}

uint64_t sub_1D2F6B538()
{
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1D2F1C2F4;
  *(unsigned char *)(v3 + 97) = v2;
  *(_OWORD *)(v3 + 56) = v5;
  *(_OWORD *)(v3 + 40) = v4;
  return MEMORY[0x1F4188298](sub_1D2F66384, 0, 0);
}

uint64_t sub_1D2F6B5F0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2F6B628(uint64_t a1)
{
  long long v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D2F1D1A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA6991C0 + dword_1EA6991C0);
  return v6(a1, v4);
}

uint64_t sub_1D2F6B6E0(uint64_t a1)
{
  long long v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D2F1C2F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA6991D0 + dword_1EA6991D0);
  return v6(a1, v4);
}

uint64_t sub_1D2F6B798()
{
  uint64_t v1 = sub_1D3000F18();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 41) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2F6B86C()
{
  uint64_t v1 = *(void *)(sub_1D3000F18() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  int v6 = *(unsigned __int8 *)(v0 + 40);
  return sub_1D2F632FC(v2, v3, v4, v6, v5);
}

uint64_t sub_1D2F6B8E8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 48);
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1D2F6B930(uint64_t a1)
{
  return sub_1D2F64590(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), (void *)(v1 + 48), *(uint64_t (**)(uint64_t))(v1 + 88), *(void *)(v1 + 96));
}

unint64_t sub_1D2F6B948()
{
  unint64_t result = qword_1EA6991E8;
  if (!qword_1EA6991E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6991E8);
  }
  return result;
}

uint64_t objectdestroy_20Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D2F6B9E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1D2F6BA14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2F6BA5C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2F6BAAC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1D2F1D1A0;
  int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA6991F0 + dword_1EA6991F0);
  return v6(a1, v4);
}

uint64_t SandboxOperation.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D3002638();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t SandboxOperation.rawValue.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_1D2F6BBEC()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F6BC44()
{
  return sub_1D3001C28();
}

uint64_t sub_1D2F6BC60()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F6BCB4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D3002638();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D2F6BD08(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001D300D9B0;
}

BOOL checkSandbox(operation:path:)()
{
  sub_1D3000F08();
  uint64_t v0 = self;
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_checkOperation_forPath_, v1, v2);

  return v3 != (id)1;
}

SiriPrivateLearningAnalytics::SandboxError __swiftcall SandboxError.init(message:)(SiriPrivateLearningAnalytics::SandboxError message)
{
  *uint64_t v1 = message;
  return message;
}

unint64_t sub_1D2F6BDDC()
{
  unint64_t result = qword_1EA699200;
  if (!qword_1EA699200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699200);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SandboxOperation(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D2F6BECCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxOperation()
{
  return &type metadata for SandboxOperation;
}

ValueMetadata *type metadata accessor for SandboxError()
{
  return &type metadata for SandboxError;
}

id StreamBookmark.__allocating_init(name:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D3000F98();
  uint64_t v7 = v6;
  uint64_t v8 = (objc_class *)type metadata accessor for StreamBookmark();
  unint64_t v9 = (char *)objc_allocWithZone(v8);
  uint64_t v10 = &v9[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  *(void *)&v9[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  uint64_t v11 = &v9[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(void *)uint64_t v11 = v7;
  unsigned __int8 v11[8] = 0;
  v15.receiver = v9;
  v15.super_class = v8;
  id v12 = objc_msgSendSuper2(&v15, sel_init);
  uint64_t v13 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a3, v13);
  return v12;
}

uint64_t type metadata accessor for StreamBookmark()
{
  return self;
}

uint64_t static StreamBookmark.supportsSecureCoding.getter()
{
  return byte_1EA699210;
}

uint64_t static StreamBookmark.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EA699210 = a1;
  return result;
}

uint64_t (*static StreamBookmark.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

uint64_t StreamBookmark.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
  swift_bridgeObjectRetain();
  return v1;
}

id StreamBookmark.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (objc_class *)type metadata accessor for StreamBookmark();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  *(void *)&v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(void *)uint64_t v7 = 0;
  unsigned char v7[8] = 1;
  v9.receiver = v5;
  v9.super_class = v4;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1D2F6C248()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark)) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v0
  }
                              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate
                              + 8);
}

void sub_1D2F6C274(void *a1)
{
  v33[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  unint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  uint64_t v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  if (v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate + 8]) {
    id v7 = 0;
  }
  else {
    id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate]);
  }
  id v8 = v7;
  objc_super v9 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark];
  if (!v10)
  {
LABEL_13:
    uint64_t v14 = 0;
    unint64_t v16 = 0xF000000000000000;
    goto LABEL_14;
  }
  uint64_t v11 = self;
  v33[0] = 0;
  swift_unknownObjectRetain();
  id v12 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v10, 1, v33);
  id v13 = v33[0];
  if (!v12)
  {
    uint64_t v17 = v13;
    uint64_t v18 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EA698038 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D3001918();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EA699218);
    id v20 = v1;
    id v21 = v18;
    uint64_t v22 = v20;
    id v23 = v18;
    uint64_t v24 = sub_1D30018F8();
    os_log_type_t v25 = sub_1D30020B8();
    if (os_log_type_enabled(v24, v25))
    {
      os_log_type_t type = v25;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      v33[0] = v32;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      sub_1D2F09508(v4, v3, (uint64_t *)v33);
      sub_1D3002318();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      id v27 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v28 = sub_1D3001BC8();
      sub_1D2F09508(v28, v29, (uint64_t *)v33);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v24, type, "Unable to encode the bookmark data for %s, error=%s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v32, -1, -1);
      MEMORY[0x1D942F2D0](v26, -1, -1);

      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    uint64_t v10 = 0;
    goto LABEL_13;
  }
  uint64_t v14 = sub_1D3000F68();
  unint64_t v16 = v15;

  swift_unknownObjectRelease();
  sub_1D2F454DC(v14, v16);
  uint64_t v10 = sub_1D3000F58();
  sub_1D2F0D1CC(v14, v16);
LABEL_14:
  id v30 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v10, v30);
  sub_1D2F2276C(v14, v16);
  swift_unknownObjectRelease();
}

void *StreamBookmark.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return StreamBookmark.init(coder:)(a1);
}

void *StreamBookmark.init(coder:)(void *a1)
{
  v47[4] = *(id *)MEMORY[0x1E4F143B8];
  sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD63380);
  id v3 = v1;
  uint64_t v4 = (void *)sub_1D3002288();
  if (!v4)
  {

    goto LABEL_19;
  }
  uint64_t v5 = sub_1D3001B78();
  unint64_t v7 = v6;

  sub_1D2F0BCB8(0, &qword_1EBD63358);
  uint64_t v8 = sub_1D3002288();
  if (v8)
  {
    objc_super v9 = (void *)v8;
    uint64_t v44 = v5;
    uint64_t v10 = sub_1D3000F68();
    unint64_t v12 = v11;

    id v13 = self;
    uint64_t v14 = self;
    sub_1D2F454DC(v10, v12);
    id v15 = objc_msgSend(v14, sel_bm_allowedClassesForSecureCodingBMBookmark);
    sub_1D3001FC8();

    unint64_t v16 = (void *)sub_1D3001FB8();
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)sub_1D3000F58();
    v47[0] = 0;
    id v18 = objc_msgSend(v13, sel_unarchivedObjectOfClasses_fromData_error_, v16, v17, v47);

    if (v18)
    {
      id v19 = v47[0];
      sub_1D3002398();
      sub_1D2F0D1CC(v10, v12);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699248);
      if (swift_dynamicCast()) {
        uint64_t v20 = v45;
      }
      else {
        uint64_t v20 = 0;
      }
      goto LABEL_14;
    }
    id v21 = v47[0];
    uint64_t v22 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EA698038 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1D3001918();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EA699218);
    swift_bridgeObjectRetain();
    id v24 = v22;
    swift_bridgeObjectRetain();
    id v25 = v22;
    uint64_t v26 = sub_1D30018F8();
    os_log_type_t v27 = sub_1D30020B8();
    if (!os_log_type_enabled(v26, v27))
    {
      sub_1D2F0D1CC(v10, v12);

      swift_bridgeObjectRelease_n();
      uint64_t v20 = 0;
LABEL_14:
      uint64_t v5 = v44;
      goto LABEL_15;
    }
    uint64_t v28 = swift_slowAlloc();
    unint64_t v43 = (void *)swift_slowAlloc();
    v47[0] = v43;
    *(_DWORD *)uint64_t v28 = 136315394;
    swift_bridgeObjectRetain();
    sub_1D2F09508(v44, v7, (uint64_t *)v47);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2080;
    id v29 = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    uint64_t v30 = sub_1D3001BC8();
    sub_1D2F09508(v30, v31, (uint64_t *)v47);
    sub_1D3002318();
    swift_bridgeObjectRelease();

    os_log_type_t v32 = v27;
    uint64_t v5 = v44;
    _os_log_impl(&dword_1D2F05000, v26, v32, "Unable to decode the bookmark data for %s, error=%s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v43, -1, -1);
    MEMORY[0x1D942F2D0](v28, -1, -1);
    sub_1D2F0D1CC(v10, v12);

    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v10 = 0;
    unint64_t v12 = 0xF000000000000000;
  }
LABEL_15:
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63370);
  uint64_t v33 = sub_1D3002288();
  if (v33)
  {
    sub_1D3001F88();
    uint64_t v35 = v34;

    id v36 = (void *)v33;
  }
  else
  {

    id v36 = 0;
    uint64_t v35 = 0;
  }
  BOOL v37 = v33 == 0;
  uint64_t v38 = (objc_class *)type metadata accessor for StreamBookmark();
  unint64_t v39 = (char *)objc_allocWithZone(v38);
  unint64_t v40 = (uint64_t *)&v39[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  *unint64_t v40 = v5;
  v40[1] = v7;
  *(void *)&v39[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = v20;
  id v41 = &v39[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
  *(void *)id v41 = v35;
  v41[8] = v37;
  v46.receiver = v39;
  v46.super_class = v38;
  uint64_t v4 = objc_msgSendSuper2(&v46, sel_init);

  sub_1D2F2276C(v10, v12);
LABEL_19:
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v4;
}

unint64_t sub_1D2F6CDF4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v1);
  id v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate + 8))
  {
    uint64_t v4 = sub_1D3001018();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  }
  else
  {
    sub_1D3000F88();
    uint64_t v5 = sub_1D3001018();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 0, 1, v5);
  }
  unint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1D3002438();
  swift_bridgeObjectRelease();
  unint64_t v9 = 0xD000000000000016;
  unint64_t v10 = 0x80000001D3010400;
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  v8[1] = *(void *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699258);
  sub_1D30022E8();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  sub_1D30022E8();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  unint64_t v6 = v9;
  sub_1D2F1CD78((uint64_t)v3, &qword_1EBD62A80);
  return v6;
}

id StreamBookmark.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void StreamBookmark.init()()
{
}

id StreamBookmark.__deallocating_deinit()
{
  return sub_1D2F6D6EC(type metadata accessor for StreamBookmark);
}

uint64_t static StreamBookmarkCollection.supportsSecureCoding.getter()
{
  return byte_1EA699211;
}

uint64_t static StreamBookmarkCollection.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EA699211 = a1;
  return result;
}

uint64_t (*static StreamBookmarkCollection.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t StreamBookmarkCollection.bookmarks.getter()
{
  return swift_bridgeObjectRetain();
}

id StreamBookmarkCollection.__allocating_init(bookmarks:)(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id StreamBookmarkCollection.init(bookmarks:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for StreamBookmarkCollection();
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_1D2F6D330(void *a1)
{
  type metadata accessor for StreamBookmark();
  uint64_t v2 = (void *)sub_1D3001DA8();
  id v3 = (id)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);
}

id StreamBookmarkCollection.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return StreamBookmarkCollection.init(coder:)(a1);
}

id StreamBookmarkCollection.init(coder:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD633C8);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D3004380;
  *(void *)(v3 + 32) = sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD63360);
  *(void *)(v3 + 40) = type metadata accessor for StreamBookmark();
  id v4 = v1;
  sub_1D3002298();
  swift_bridgeObjectRelease();
  if (!v12)
  {

    sub_1D2F1CD78((uint64_t)v11, &qword_1EBD635B8);
LABEL_6:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63320);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_6;
  }

  objc_super v5 = (objc_class *)type metadata accessor for StreamBookmarkCollection();
  unint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = v10;
  v9.receiver = v6;
  v9.super_class = v5;
  id v7 = objc_msgSendSuper2(&v9, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

void StreamBookmarkCollection.init()()
{
}

id StreamBookmarkCollection.__deallocating_deinit()
{
  return sub_1D2F6D6EC(type metadata accessor for StreamBookmarkCollection);
}

id sub_1D2F6D6EC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1D2F6D734()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EA699218);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA699218);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  objc_super v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for StreamBookmarkCollection()
{
  return self;
}

uint64_t method lookup function for StreamBookmark(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StreamBookmark);
}

uint64_t dispatch thunk of StreamBookmark.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of StreamBookmark.isEmpty()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of StreamBookmark.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StreamBookmark.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for StreamBookmarkCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StreamBookmarkCollection);
}

uint64_t dispatch thunk of StreamBookmarkCollection.__allocating_init(bookmarks:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of StreamBookmarkCollection.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of StreamBookmarkCollection.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D2F6D944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1D2F6D958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1D2F6D96C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D2F6D980(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D2F6D994(void *a1)
{
  if (a1 && a1 != (void *)1)
  {
    a1;
    sub_1D3002438();
    swift_bridgeObjectRelease();
    sub_1D3002188();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    sub_1D3002738();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    sub_1D2F1CC9C(a1);
  }
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  return 0x6B636F4C656C6946;
}

uint64_t sub_1D2F6DB20()
{
  uint64_t v0 = type metadata accessor for FileLockDarwinDefault();
  v9[3] = v0;
  v9[4] = &off_1F2A18FF0;
  v9[0] = swift_allocObject();
  type metadata accessor for FileLock();
  uint64_t v1 = (void *)swift_allocObject();
  uint64_t v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v0);
  MEMORY[0x1F4188790](v2);
  id v4 = (void *)((char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v5 + 16))(v4);
  uint64_t v6 = *v4;
  v1[5] = v0;
  v1[6] = &off_1F2A18FF0;
  v1[2] = v6;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  uint64_t result = swift_release();
  qword_1EBD65770 = (uint64_t)v1;
  return result;
}

uint64_t sub_1D2F6DC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v92 = a3;
  uint64_t v5 = sub_1D3001918();
  uint64_t v95 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v91 = (char *)&v88 - v9;
  uint64_t v94 = sub_1D3000F18();
  uint64_t v10 = *(void *)(v94 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v94);
  id v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  unint64_t v16 = (char *)&v88 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v89 = (char *)&v88 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v88 - v19;
  uint64_t v93 = a1;
  sub_1D3000F08();
  sub_1D3001958();
  sub_1D3001978();
  sub_1D3001948();
  sub_1D3001968();
  sub_1D3001BF8();
  swift_bridgeObjectRelease();
  int v21 = sub_1D3001928();
  swift_release();
  if (v21 < 0)
  {
    uint64_t v91 = v8;
    if (qword_1EBD632F8 != -1) {
      swift_once();
    }
    uint64_t v41 = v96;
    uint64_t v42 = __swift_project_value_buffer(v96, (uint64_t)qword_1EBD632E0);
    uint64_t v43 = v95;
    uint64_t v44 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v91, v42, v41);
    uint64_t v45 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v93, v94);
    objc_super v46 = sub_1D30018F8();
    os_log_type_t v47 = sub_1D30020B8();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      v98[0] = v49;
      *(_DWORD *)uint64_t v48 = 136315650;
      sub_1D2F703CC((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
      uint64_t v50 = sub_1D3002738();
      v97[0] = sub_1D2F09508(v50, v51, v98);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      uint64_t v52 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v45);
      *(_WORD *)(v48 + 12) = 2080;
      int v53 = MEMORY[0x1D942D860](v52);
      uint64_t result = (uint64_t)strerror(v53);
      if (!result)
      {
LABEL_27:
        __break(1u);
        return result;
      }
      uint64_t v54 = sub_1D3001C78();
      v97[0] = sub_1D2F09508(v54, v55, v98);
      sub_1D3002318();
      uint64_t v56 = swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 1024;
      LODWORD(v97[0]) = MEMORY[0x1D942D860](v56);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v46, v47, "Cannot open lock file %s: %s, %d", (uint8_t *)v48, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v49, -1, -1);
      MEMORY[0x1D942F2D0](v48, -1, -1);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v91, v96);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v45);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v41);
    }
    id v70 = (_OWORD *)v92;
    *(void *)(v92 + 32) = 0;
    *id v70 = 0u;
    v70[1] = 0u;
    return result;
  }
  if (a2) {
    int v22 = 6;
  }
  else {
    int v22 = 2;
  }
  int v90 = v21;
  if (flock(v21, v22))
  {
    uint64_t v23 = v94;
    uint64_t v24 = v10;
    if (qword_1EBD632F8 != -1) {
      swift_once();
    }
    uint64_t v25 = v96;
    uint64_t v26 = __swift_project_value_buffer(v96, (uint64_t)qword_1EBD632E0);
    uint64_t v27 = v95;
    uint64_t v28 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v91, v26, v25);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v16, v93, v23);
    id v29 = sub_1D30018F8();
    os_log_type_t v30 = sub_1D30020B8();
    if (!os_log_type_enabled(v29, v30))
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v23);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v25);
      goto LABEL_21;
    }
    uint64_t v31 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    v98[0] = v93;
    *(_DWORD *)uint64_t v31 = 136315650;
    uint64_t v32 = sub_1D3000F08();
    v97[0] = sub_1D2F09508(v32, v33, v98);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v23);
    *(_WORD *)(v31 + 12) = 2080;
    int v35 = MEMORY[0x1D942D860](v34);
    uint64_t result = (uint64_t)strerror(v35);
    if (result)
    {
      uint64_t v37 = sub_1D3001C78();
      v97[0] = sub_1D2F09508(v37, v38, v98);
      sub_1D3002318();
      uint64_t v39 = swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 1024;
      LODWORD(v97[0]) = MEMORY[0x1D942D860](v39);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v29, v30, "Failed to acquire lock file: %s, %s, %d", (uint8_t *)v31, 0x1Cu);
      uint64_t v40 = v93;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v40, -1, -1);
      MEMORY[0x1D942F2D0](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v95 + 8))(v28, v96);
LABEL_21:
      unint64_t v68 = (_OWORD *)v92;
      int v69 = v90;
      *(void *)(v92 + 32) = 0;
      _OWORD *v68 = 0u;
      v68[1] = 0u;
      return close(v69);
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v57 = v94;
  uint64_t v58 = v10;
  if (qword_1EBD632F8 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v96, (uint64_t)qword_1EBD632E0);
  id v59 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v60 = v93;
  v59(v20, v93, v57);
  uint64_t v61 = sub_1D30018F8();
  os_log_type_t v62 = sub_1D30020A8();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    v98[0] = v64;
    *(_DWORD *)uint64_t v63 = 136315394;
    uint64_t v65 = sub_1D3000F08();
    v97[0] = sub_1D2F09508(v65, v66, v98);
    uint64_t v57 = v94;
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v57);
    *(_WORD *)(v63 + 12) = 1024;
    LODWORD(v97[0]) = v90;
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v61, v62, "Acquired a file lock for path %s, fd=%d", (uint8_t *)v63, 0x12u);
    swift_arrayDestroy();
    uint64_t v67 = v64;
    uint64_t v60 = v93;
    MEMORY[0x1D942F2D0](v67, -1, -1);
    MEMORY[0x1D942F2D0](v63, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v57);
  }

  uint64_t v71 = v88;
  uint64_t v72 = v89;
  v59(v89, v60, v57);
  sub_1D2F37950(v71 + 16, (uint64_t)v98);
  uint64_t v73 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v98, v98[3]);
  MEMORY[0x1F4188790](v73);
  unint64_t v75 = (uint64_t *)((char *)&v88 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v76 + 16))(v75);
  uint64_t v77 = *v75;
  uint64_t v78 = v57;
  uint64_t v79 = type metadata accessor for FileLockDarwinDefault();
  v97[3] = v79;
  v97[4] = &off_1F2A18FF0;
  v97[0] = v77;
  uint64_t v80 = type metadata accessor for FileLockContextExclusive();
  uint64_t v81 = swift_allocObject();
  uint64_t v82 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v97, v79);
  MEMORY[0x1F4188790](v82);
  uint64_t v84 = (uint64_t *)((char *)&v88 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v85 + 16))(v84);
  uint64_t v86 = *v84;
  *(void *)(v81 + 40) = v79;
  *(void *)(v81 + 48) = &off_1F2A18FF0;
  *(void *)(v81 + 16) = v86;
  *(unsigned char *)(v81 + 60) = 0;
  *(_DWORD *)(v81 + 56) = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v81+ OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_9A16EB635EAE528C9CC424A4A1DE53F824FileLockContextExclusive_path, v72, v78);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v98);
  uint64_t v87 = (uint64_t *)v92;
  *(void *)(v92 + 24) = v80;
  v87[4] = (uint64_t)&off_1F2A18FD8;
  *uint64_t v87 = v81;
  return result;
}

void sub_1D2F6E7A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t), uint64_t (*a6)(uint64_t, unint64_t))
{
  uint64_t v105 = a5;
  uint64_t v106 = a6;
  uint64_t v102 = a3;
  uint64_t v103 = a4;
  uint64_t v95 = sub_1D30019A8();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v92 = &v78[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = sub_1D3001A08();
  uint64_t v91 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  int v90 = &v78[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1D3001988();
  uint64_t v97 = *(void *)(v10 - 8);
  id v98 = (void (*)(void, void))v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v96 = (uint64_t *)&v78[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1D3001A38();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v99 = v12;
  uint64_t v100 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v16 = &v78[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v78[-v17];
  uint64_t v19 = sub_1D3000F18();
  uint64_t v101 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v101 + 64);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = &v78[-v22];
  sub_1D2F6DC54(a1, (uint64_t)a2, (uint64_t)&v111);
  if (v112)
  {
    sub_1D2F0BE68(&v111, (uint64_t)aBlock);
    v105(0, 0);
    uint64_t v24 = *__swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v108);
    uint64_t v112 = type metadata accessor for FileLockContextExclusive();
    uint64_t v113 = &off_1F2A18FD8;
    *(void *)&long long v111 = v24;
    __swift_project_boxed_opaque_existential_1(&v111, v112);
    swift_retain();
    sub_1D2F6F4D0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v111);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    return;
  }
  uint64_t v87 = v23;
  uint64_t v83 = v20;
  uint64_t v84 = v16;
  uint64_t v86 = &v78[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v88 = v19;
  uint64_t v89 = a1;
  uint64_t v85 = v18;
  sub_1D2F6FB48((uint64_t)&v111);
  if (qword_1EBD632F8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1D3001918();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EBD632E0);
  uint64_t v26 = v101;
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v101 + 16);
  uint64_t v28 = v87;
  uint64_t v29 = v88;
  uint64_t v82 = v101 + 16;
  uint64_t v81 = v27;
  v27(v87, v89, v88);
  os_log_type_t v30 = a2;
  uint64_t v31 = v102;
  sub_1D2F2DD1C(a2);
  sub_1D2F2DD1C(a2);
  uint64_t v32 = sub_1D30018F8();
  os_log_type_t v33 = sub_1D30020B8();
  int v34 = v33;
  BOOL v35 = os_log_type_enabled(v32, v33);
  uint64_t v36 = v103;
  if (v35)
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    aBlock[0] = v80;
    *(_DWORD *)uint64_t v37 = 134218498;
    *(void *)&long long v111 = v36;
    int v79 = v34;
    sub_1D3002318();
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v38 = sub_1D2F6D994(v30);
    *(void *)&long long v111 = sub_1D2F09508(v38, v39, aBlock);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F1CC9C(v30);
    sub_1D2F1CC9C(v30);
    *(_WORD *)(v37 + 22) = 2080;
    uint64_t v40 = sub_1D3000F08();
    *(void *)&long long v111 = sub_1D2F09508(v40, v41, aBlock);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v28, v29);
    _os_log_impl(&dword_1D2F05000, v32, (os_log_type_t)v79, "Attempt %ld to acquire lock file (%s) failed: %s", (uint8_t *)v37, 0x20u);
    uint64_t v42 = v80;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v42, -1, -1);
    MEMORY[0x1D942F2D0](v37, -1, -1);
  }
  else
  {
    sub_1D2F1CC9C(v30);
    sub_1D2F1CC9C(v30);
    (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v28, v29);
  }

  uint64_t v43 = v105;
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v44;
  *(void *)(v44 + 16) = 0;
  *(void *)(v44 + 24) = 0;
  if ((unint64_t)v30 < 2)
  {
    unint64_t v46 = sub_1D2F6F258(v44);
    sub_1D2F7002C(v46, v47, v43);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v48 = v30;
  uint64_t v49 = v103;
  if (v103 >= v31)
  {
    unint64_t v76 = sub_1D2F6F258(v45);
    sub_1D2F7002C(v76, v77, v43);
    swift_bridgeObjectRelease();
    sub_1D2F1CC9C(v30);
LABEL_18:
    swift_release();
    return;
  }
  uint64_t v50 = v48;
  unint64_t v51 = v84;
  sub_1D3001A18();
  double v52 = exp2((double)v49);
  if ((~*(void *)&v52 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v87 = v50;
  uint64_t v54 = v98;
  uint64_t v53 = v99;
  uint64_t v55 = v97;
  uint64_t v56 = v96;
  uint64_t v57 = v86;
  if (v52 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v58 = v100;
  if (v52 < 9.22337204e18)
  {
    uint64_t v59 = (uint64_t)v52;
    if ((uint64_t)v52 >= 15) {
      uint64_t v59 = 15;
    }
    *uint64_t v96 = v59;
    (*(void (**)(uint64_t *, void, void (*)(void, void)))(v55 + 104))(v56, *MEMORY[0x1E4FBCAE8], v54);
    MEMORY[0x1D942D970](v51, v56);
    (*(void (**)(uint64_t *, void))(v55 + 8))(v56, v54);
    uint64_t v60 = *(void (**)(void, void))(v58 + 8);
    uint64_t v100 = v58 + 8;
    id v98 = v60;
    v60(v51, v53);
    uint64_t v61 = v88;
    v81(v57, v89, v88);
    uint64_t v62 = v101;
    unint64_t v63 = (*(unsigned __int8 *)(v101 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    unint64_t v64 = (v83 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v104;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v62 + 32))(v66 + v63, v86, v61);
    uint64_t v67 = (void *)(v66 + v64);
    uint64_t v68 = v102;
    *uint64_t v67 = v30;
    v67[1] = v68;
    *(void *)(v66 + v65) = v103;
    int v69 = (uint64_t (**)(uint64_t, unint64_t))(v66 + ((v65 + 15) & 0xFFFFFFFFFFFFFFF8));
    id v70 = v106;
    *int v69 = v105;
    v69[1] = v70;
    uint64_t v109 = sub_1D2F702FC;
    uint64_t v110 = v66;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D2FD5A90;
    unint64_t v108 = &block_descriptor_7;
    uint64_t v71 = _Block_copy(aBlock);
    sub_1D2F2DD1C(v30);
    swift_retain();
    swift_retain();
    uint64_t v72 = v90;
    sub_1D30019D8();
    *(void *)&long long v111 = MEMORY[0x1E4FBC860];
    sub_1D2F703CC(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
    sub_1D2F70414();
    uint64_t v73 = v92;
    uint64_t v74 = v95;
    sub_1D30023A8();
    unint64_t v75 = v85;
    MEMORY[0x1D942E070](v85, v72, v73, v71);
    _Block_release(v71);
    sub_1D2F1CC9C(v30);
    (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v73, v74);
    (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v72, v93);
    v98(v75, v99);
    swift_release();
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
}

unint64_t sub_1D2F6F258(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    unint64_t v2 = *(void *)(a1 + 16);
  }
  else
  {
    sub_1D3002438();
    swift_bridgeObjectRelease();
    sub_1D3000F18();
    sub_1D2F703CC((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
    sub_1D3002738();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    unint64_t v2 = 0xD000000000000022;
    swift_beginAccess();
    *(void *)(a1 + 16) = 0xD000000000000022;
    *(void *)(a1 + 24) = 0x80000001D3010670;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D2F6F388()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileLock()
{
  return self;
}

uint64_t sub_1D2F6F3E4()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EBD632E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD632E0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for FileLockDarwinDefault()
{
  return self;
}

void sub_1D2F6F4D0()
{
  uint64_t v1 = sub_1D3001918();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 60) & 1) == 0)
  {
    *(unsigned char *)(v0 + 60) = 1;
    int v5 = *(_DWORD *)(v0 + 56);
    uint64_t v6 = &unk_1EBD63000;
    if (flock(v5, 12))
    {
      if (qword_1EBD632F8 != -1) {
        swift_once();
      }
      uint64_t v7 = __swift_project_value_buffer(v1, (uint64_t)qword_1EBD632E0);
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v7, v1);
      swift_retain_n();
      uint64_t v8 = sub_1D30018F8();
      os_log_type_t v9 = sub_1D30020B8();
      if (os_log_type_enabled(v8, v9))
      {
        int v26 = v5;
        uint64_t v10 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v28 = v25;
        *(_DWORD *)uint64_t v10 = 136315650;
        uint64_t v11 = sub_1D3000F08();
        uint64_t v27 = sub_1D2F09508(v11, v12, &v28);
        sub_1D3002318();
        swift_release_n();
        uint64_t v13 = swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        int v14 = MEMORY[0x1D942D860](v13);
        if (!strerror(v14))
        {
          __break(1u);
          return;
        }
        uint64_t v15 = sub_1D3001C78();
        uint64_t v27 = sub_1D2F09508(v15, v16, &v28);
        sub_1D3002318();
        uint64_t v17 = swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 22) = 1024;
        LODWORD(v27) = MEMORY[0x1D942D860](v17);
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v8, v9, "Failed to unlock file: %s, %s, %d", (uint8_t *)v10, 0x1Cu);
        uint64_t v18 = v25;
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v18, -1, -1);
        MEMORY[0x1D942F2D0](v10, -1, -1);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        int v5 = v26;
        uint64_t v6 = (void *)&unk_1EBD63000;
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
    close(v5);
    if (v6[95] != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v1, (uint64_t)qword_1EBD632E0);
    swift_retain_n();
    uint64_t v19 = sub_1D30018F8();
    os_log_type_t v20 = sub_1D30020A8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v23 = sub_1D3000F08();
      uint64_t v27 = sub_1D2F09508(v23, v24, &v28);
      sub_1D3002318();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 1024;
      swift_release();
      LODWORD(v27) = v5;
      sub_1D3002318();
      swift_release();
      _os_log_impl(&dword_1D2F05000, v19, v20, "Released the file lock for path %s, fd=%d", (uint8_t *)v21, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v22, -1, -1);
      MEMORY[0x1D942F2D0](v21, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1D2F6F98C()
{
  if ((*(unsigned char *)(v0 + 60) & 1) == 0) {
    sub_1D2F6F4D0();
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = v0
     + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_9A16EB635EAE528C9CC424A4A1DE53F824FileLockContextExclusive_path;
  uint64_t v2 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F6FA40()
{
  return type metadata accessor for FileLockContextExclusive();
}

uint64_t type metadata accessor for FileLockContextExclusive()
{
  uint64_t result = qword_1EBD63078;
  if (!qword_1EBD63078) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2F6FA94()
{
  uint64_t result = sub_1D3000F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D2F6FB48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6991E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2F6FBA8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D2F6FBE0(uint64_t a1)
{
  v34[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v30 - v7;
  id v9 = objc_msgSend(self, sel_defaultManager);
  sub_1D3000ED8();
  uint64_t v10 = (void *)sub_1D3000E78();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  v34[0] = 0;
  unsigned int v12 = objc_msgSend(v9, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v10, 1, 0, v34);

  id v13 = v34[0];
  if (!v12)
  {
    int v14 = v13;
    uint64_t v15 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EBD632F8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D3001918();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBD632E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    id v17 = v15;
    id v18 = v15;
    uint64_t v19 = sub_1D30018F8();
    os_log_type_t v20 = sub_1D30020B8();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      v34[0] = v32;
      *(_DWORD *)uint64_t v22 = 136315394;
      v30[1] = v22 + 4;
      int v31 = v21;
      sub_1D3000ED8();
      sub_1D2F703CC((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
      uint64_t v23 = sub_1D3002738();
      unint64_t v25 = v24;
      v11(v8, v2);
      uint64_t v33 = sub_1D2F09508(v23, v25, (uint64_t *)v34);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      v11(v6, v2);
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v33 = (uint64_t)v15;
      id v26 = v15;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v27 = sub_1D3001BC8();
      uint64_t v33 = sub_1D2F09508(v27, v28, (uint64_t *)v34);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v19, (os_log_type_t)v31, "Cannot create the file lock directory: %s, error=%s", (uint8_t *)v22, 0x16u);
      uint64_t v29 = v32;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v29, -1, -1);
      MEMORY[0x1D942F2D0](v22, -1, -1);
    }
    else
    {

      v11(v6, v2);
    }
  }
}

uint64_t sub_1D2F7002C(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  if (qword_1EBD632F8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001918();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBD632E0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1D30018F8();
  os_log_type_t v8 = sub_1D30020B8();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)id v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2F09508(a1, a2, &v12);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v10, -1, -1);
    MEMORY[0x1D942F2D0](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a3(a1, a2);
}

uint64_t sub_1D2F701F8()
{
  uint64_t v1 = sub_1D3000F18();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v6 = *(void **)(v0 + v5);
  if ((unint64_t)v6 >= 2) {

  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_1D2F702FC()
{
  uint64_t v1 = sub_1D3000F18();
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v0 + v6);
  if (!__OFADD__(v7, 1)) {
    return sub_1D2F6E7A0(v0 + v4, *(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v7 + 1, *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  }
  __break(1u);
  return result;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1D2F703CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2F70414()
{
  unint64_t result = qword_1EBD639E0;
  if (!qword_1EBD639E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBD639D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD639E0);
  }
  return result;
}

void *sub_1D2F70470(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 72);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1D2F0DD14(a1);
  if (v6)
  {
    uint64_t v7 = *(void **)(*(void *)(v4 + 56) + 8 * v5);
    id v8 = v7;
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1D2F70510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  id v17 = &v23[-v16];
  swift_beginAccess();
  uint64_t v18 = *(void *)(v2 + 64);
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  sub_1D2FA0C04((uint64_t (*)(char *))sub_1D2F763B0, v18, (uint64_t)v11);
  swift_bridgeObjectRelease();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v11, 1, v19) == 1)
  {
    sub_1D2F1CD78((uint64_t)v11, &qword_1EA6992E0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, 1, 1, v5);
  }
  else
  {
    uint64_t v20 = *(void *)&v11[*(int *)(v19 + 48) + 8];
    if (*(void *)(v20 + 16))
    {
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v6 + 16))(v17, v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = 1;
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, v21, 1, v5);
    swift_release();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  }
  sub_1D2F56C74((uint64_t)v17, (uint64_t)v15);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a2, v8, v5);
    return sub_1D2F1CD78((uint64_t)v15, &qword_1EBD62AA0);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a2, v15, v5);
  }
}

uint64_t sub_1D2F708B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E8) + 48));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v14 = *(void *)(v11 + 16);
  v26[1] = v3;
  if (v12)
  {
    swift_retain();
    sub_1D2FA9E2C(a2, v13, v14, (void *)(v12 + 16), v12 + 32);
    char v16 = v15;
    swift_release();
    char v17 = (v16 & 1) == 0;
  }
  else if (v14)
  {
    v26[3] = a2;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v20 = v21;
    uint64_t v22 = *(void *)(v19 + 56);
    uint64_t v23 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v24 = v14 - 1;
    do
    {
      uint64_t v25 = v24;
      v20(v9, v13, v6);
      sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
      char v17 = sub_1D3001B28();
      (*v23)(v9, v6);
      if (v17) {
        break;
      }
      uint64_t v24 = v25 - 1;
      v13 += v22;
    }
    while (v25);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

void sub_1D2F70A94(char a1@<W1>, void *a2@<X8>)
{
  id v4 = sub_1D2F38024();
  uint64_t v5 = v4;
  id v25 = v6;
  if ((a1 & 1) != 0 && objc_msgSend(v4, sel_anyEventType) != 17)
  {
LABEL_5:
    uint64_t v7 = sub_1D30010A8();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
LABEL_6:
  }
  else
  {
    switch(objc_msgSend(v5, sel_anyEventType))
    {
      case 1u:
        sub_1D2F73478(v5, v25, a2);
        goto LABEL_6;
      case 9u:
        sub_1D2F71AB8(v5, (uint64_t)a2);
        goto LABEL_6;
      case 0xDu:
        uint64_t KeyPath = (void *)swift_getKeyPath();
        uint64_t v9 = (void *)swift_getKeyPath();
        uint64_t v10 = (void *)swift_getKeyPath();
        sub_1D2F723B0(v5, 3, KeyPath, v9, v10, &qword_1EBD61468, &qword_1EA699280, (uint64_t)a2, &qword_1EA699288);
        goto LABEL_20;
      case 0x11u:
        sub_1D2F71064(v5, v25);

        uint64_t v11 = sub_1D30010A8();
        uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
        v12(a2, 1, 1, v11);
        return;
      case 0x12u:
        uint64_t v13 = (void *)swift_getKeyPath();
        uint64_t v14 = (void *)swift_getKeyPath();
        char v15 = (void *)swift_getKeyPath();
        sub_1D2F723B0(v5, 7, v13, v14, v15, (unint64_t *)&unk_1EBD61450, &qword_1EA699290, (uint64_t)a2, &qword_1EA699298);
        goto LABEL_20;
      case 0x13u:
        sub_1D2F73F50();
        char v16 = (void *)swift_getKeyPath();
        char v17 = (void *)swift_getKeyPath();
        sub_1D2F723B0(v5, 1, v16, v17, 0, (unint64_t *)&qword_1EBD61478, &qword_1EA6992A0, (uint64_t)a2, &qword_1EA6992A8);
        goto LABEL_15;
      case 0x14u:
        uint64_t v18 = (void *)swift_getKeyPath();
        uint64_t v19 = (void *)swift_getKeyPath();
        sub_1D2F723B0(v5, 8, v18, v19, 0, (unint64_t *)&unk_1EBD61438, &qword_1EA699270, (uint64_t)a2, &qword_1EA699278);
LABEL_15:

        swift_release();
        break;
      case 0x17u:
        uint64_t v20 = (void *)swift_getKeyPath();
        sub_1D2F723B0(v5, 9, v20, 0, 0, &qword_1EBD61400, &qword_1EA6992D0, (uint64_t)a2, &qword_1EA6992D8);
        goto LABEL_18;
      case 0x26u:
        uint64_t v21 = (void *)swift_getKeyPath();
        sub_1D2F723B0(v5, 19, v21, 0, 0, &qword_1EA698F40, &qword_1EA6992B0, (uint64_t)a2, &qword_1EA6992B8);
LABEL_18:

        break;
      case 0x3Du:
        uint64_t v22 = (void *)swift_getKeyPath();
        uint64_t v23 = (void *)swift_getKeyPath();
        uint64_t v24 = (void *)swift_getKeyPath();
        sub_1D2F723B0(v5, 31, v22, v23, v24, (unint64_t *)&unk_1EBD61410, &qword_1EA6992C0, (uint64_t)a2, &qword_1EA6992C8);
LABEL_20:

        swift_release();
        swift_release();
        break;
      default:
        goto LABEL_5;
    }
    swift_release();
  }
}

id sub_1D2F71014@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_eventMetadata);
  *a2 = result;
  return result;
}

id sub_1D2F71050(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEventMetadata_, *a1);
}

void sub_1D2F71064(void *a1, void *a2)
{
  uint64_t v4 = sub_1D3001918();
  uint64_t v91 = *(void (***)(void, void, void))(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D30010A8();
  uint64_t v90 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v87 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v88 = (char *)&v84 - v14;
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)&v84 - v15;
  id v17 = objc_msgSend(a1, sel_payload);
  if (v17)
  {
    uint64_t v18 = sub_1D3000F68();
    unint64_t v20 = v19;

    id v17 = (id)sub_1D3000F58();
    sub_1D2F0D1CC(v18, v20);
  }
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA03F0]), sel_initWithData_, v17);

  if (!v21)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v35 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
    uint64_t v36 = v91;
    ((void (**)(char *, uint64_t, uint64_t))v91)[2](v6, v35, v4);
    id v37 = a1;
    uint64_t v38 = sub_1D30018F8();
    int v39 = sub_1D30020A8();
    if (!os_log_type_enabled(v38, (os_log_type_t)v39))
    {

      ((void (*)(char *, uint64_t))v36[1])(v6, v4);
      return;
    }
    LODWORD(v90) = v39;
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    v92[0] = v89;
    *(_DWORD *)uint64_t v40 = 136315138;
    id v41 = objc_msgSend(v37, sel_dictionaryRepresentation);
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v88 = (char *)(v40 + 4);
      sub_1D3001A88();

      uint64_t v43 = sub_1D3001A98();
      unint64_t v45 = v44;
      swift_bridgeObjectRelease();
      uint64_t v93 = sub_1D2F09508(v43, v45, v92);
      sub_1D3002318();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v38, (os_log_type_t)v90, "Expected DIM client event for event: %s", v40, 0xCu);
      uint64_t v46 = v89;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v46, -1, -1);
      MEMORY[0x1D942F2D0](v40, -1, -1);

      ((void (*)(char *, uint64_t))v91[1])(v6, v4);
      return;
    }

    __break(1u);
    goto LABEL_48;
  }
  if (!a2) {
    goto LABEL_19;
  }
  id v22 = objc_msgSend(a2, sel_timestamp);
  if (!v22) {
    goto LABEL_19;
  }
  uint64_t v23 = (void (**)(void, void, void))v22;
  id v24 = objc_msgSend(v22, sel_clockIdentifier);
  if (v24)
  {
    id v25 = v24;
    uint64_t v91 = v23;
    id v26 = objc_msgSend(v24, sel_value);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = sub_1D3000F68();
      id v29 = v21;
      unint64_t v31 = v30;

      sub_1D2F587AC(v28, v31, (uint64_t)v9);
      unint64_t v32 = v31;
      id v21 = v29;
      sub_1D2F0D1CC(v28, v32);
      uint64_t v33 = v10;
      uint64_t v34 = v90;
    }
    else
    {
      uint64_t v34 = v90;
      uint64_t v33 = v10;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v9, 1, 1, v10);
    }

    int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v9, 1, v33);
    uint64_t v23 = v91;
    if (v47 == 1) {
      goto LABEL_18;
    }
    uint64_t v59 = (uint64_t)v16;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v16, v9, v33);
    id v60 = objc_msgSend(v21, sel_wrapAsAnyEvent);
    if (!v60)
    {
      unint64_t v76 = 0;
LABEL_40:
      id v81 = objc_msgSend(v21, sel_deviceFixedContext);
      if (v81)
      {
        uint64_t v82 = v81;
        swift_retain();
        uint64_t v83 = v91;
        sub_1D2F57640(v59, v91, v82);

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v59, v33);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v59, v33);
      }
      sub_1D2F4E508((uint64_t)v76);
      return;
    }
    uint64_t v61 = v60;
    uint64_t v62 = (uint64_t)v88;
    uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    id v86 = v21;
    v85(v88, v59, v33);
    uint64_t v63 = v89;
    unint64_t v64 = (uint64_t *)(v89 + 56);
    swift_beginAccess();
    id v65 = v61;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v93 = *(void *)(v63 + 56);
    uint64_t v67 = v93;
    *(void *)(v63 + 56) = 0x8000000000000000;
    unint64_t v69 = sub_1D2F0DD14(v62);
    uint64_t v70 = *(void *)(v67 + 16);
    BOOL v71 = (v68 & 1) == 0;
    uint64_t v72 = v70 + v71;
    if (__OFADD__(v70, v71))
    {
      __break(1u);
LABEL_45:
      sub_1D3001E28();
LABEL_39:
      sub_1D3001E68();
      sub_1D3001DE8();
      uint64_t v34 = v90;
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v62, v33);
      swift_endAccess();

      unint64_t v76 = sub_1D2F71AA8;
      id v21 = v86;
      goto LABEL_40;
    }
    char v73 = v68;
    if (*(void *)(v67 + 24) >= v72)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v65;
        sub_1D2F13A70();
        uint64_t v67 = v93;
LABEL_36:
        uint64_t *v64 = v67;
        swift_bridgeObjectRelease();
        unint64_t v77 = (void *)*v64;
        swift_bridgeObjectRetain();
        if ((v73 & 1) == 0)
        {
          uint64_t v78 = (uint64_t)v87;
          v85(v87, v62, v33);
          sub_1D2FE6B1C(v69, v78, MEMORY[0x1E4FBC860], v77);
        }
        uint64_t v79 = v77[7];
        uint64_t v80 = swift_bridgeObjectRelease();
        MEMORY[0x1D942DCC0](v80);
        if (*(void *)((*(void *)(v79 + 8 * v69) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)(v79 + 8 * v69) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
          goto LABEL_39;
        goto LABEL_45;
      }
LABEL_35:
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v65;
      goto LABEL_36;
    }
    sub_1D2F0FC7C(v72, isUniquelyReferenced_nonNull_native);
    uint64_t v67 = v93;
    unint64_t v74 = sub_1D2F0DD14(v62);
    if ((v73 & 1) == (v75 & 1))
    {
      unint64_t v69 = v74;
      goto LABEL_35;
    }
LABEL_48:
    sub_1D30028B8();
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v9, 1, 1, v10);
LABEL_18:

  sub_1D2F1CD78((uint64_t)v9, &qword_1EBD62AA0);
LABEL_19:
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
  id v48 = a2;
  uint64_t v49 = sub_1D30018F8();
  os_log_type_t v50 = sub_1D30020A8();
  if (os_log_type_enabled(v49, v50))
  {
    unint64_t v51 = v21;
    double v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    v92[0] = v53;
    *(_DWORD *)double v52 = 136315138;
    if (a2 && (id v54 = objc_msgSend(v48, sel_dictionaryRepresentation)) != 0)
    {
      uint64_t v55 = v54;
      uint64_t v56 = sub_1D3001A88();
    }
    else
    {
      uint64_t v56 = 0;
    }
    uint64_t v93 = v56;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699268);
    uint64_t v57 = sub_1D3001BC8();
    uint64_t v93 = sub_1D2F09508(v57, v58, v92);
    sub_1D3002318();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v49, v50, "Missing logical timestamp for DIM metadata: %s", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v53, -1, -1);
    MEMORY[0x1D942F2D0](v52, -1, -1);
  }
  else
  {
  }
}

void sub_1D2F71AA8(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1D2F71AB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)v58 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v58 - v11;
  uint64_t v13 = sub_1D30010A8();
  uint64_t v66 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v61 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v63 = (uint64_t)v58 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v62 = (char *)v58 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  id v22 = (char *)v58 - v21;
  MEMORY[0x1F4188790](v20);
  id v24 = (char *)v58 - v23;
  unint64_t v64 = a1;
  id v25 = objc_msgSend(a1, sel_payload);
  if (v25)
  {
    uint64_t v26 = sub_1D3000F68();
    unint64_t v28 = v27;

    id v25 = (id)sub_1D3000F58();
    sub_1D2F0D1CC(v26, v28);
  }
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12F8]), sel_initWithData_, v25);

  if (v29)
  {
    uint64_t v60 = v2;
    sub_1D2F0C17C(v29);
    sub_1D2F72124(v29, 1, (uint64_t)v12);
    unint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
    if (v30(v12, 1, v13) == 1)
    {

      sub_1D2F1CD78((uint64_t)v12, &qword_1EBD62AA0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v65, 1, 1, v13);
    }
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
    uint64_t v35 = v12;
    uint64_t v36 = v66 + 32;
    v34(v24, v35, v13);
    sub_1D2F72124(v29, 43, (uint64_t)v10);
    if (v30(v10, 1, v13) != 1)
    {
      v34(v22, v10, v13);
      sub_1D2F74364((uint64_t)v24, (uint64_t)v22);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v22, v13);
      id v37 = 0;
      int v39 = v64;
      uint64_t v38 = v65;
LABEL_22:
      sub_1D2FDA0B4(1, (uint64_t)v24, v39);

      v34((char *)v38, v24, v13);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v38, 0, 1, v13);
      return sub_1D2F4E508((uint64_t)v37);
    }
    uint64_t v59 = v34;
    sub_1D2F1CD78((uint64_t)v10, &qword_1EBD62AA0);
    sub_1D2F72124(v29, 2, (uint64_t)v7);
    if (v30(v7, 1, v13) == 1)
    {
      sub_1D2F1CD78((uint64_t)v7, &qword_1EBD62AA0);
      id v37 = 0;
      int v39 = v64;
      uint64_t v38 = v65;
LABEL_21:
      uint64_t v34 = v59;
      goto LABEL_22;
    }
    uint64_t v40 = v62;
    v58[1] = v36;
    v59(v62, v7, v13);
    uint64_t v41 = v63;
    v58[0] = *(void *)(v66 + 16);
    ((void (*)(uint64_t, char *, uint64_t))v58[0])(v63, v40, v13);
    uint64_t v42 = v60;
    uint64_t v43 = (void *)(v60 + 64);
    swift_beginAccess();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = *(void *)(v42 + 64);
    uint64_t v45 = v67;
    *(void *)(v42 + 64) = 0x8000000000000000;
    unint64_t v47 = sub_1D2F0DD14(v41);
    uint64_t v48 = *(void *)(v45 + 16);
    BOOL v49 = (v46 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49))
    {
      __break(1u);
    }
    else
    {
      LOBYTE(v42) = v46;
      if (*(void *)(v45 + 24) < v50)
      {
        sub_1D2F10828(v50, isUniquelyReferenced_nonNull_native);
        uint64_t v45 = v67;
        unint64_t v51 = sub_1D2F0DD14(v63);
        if ((v42 & 1) != (v52 & 1))
        {
          uint64_t result = sub_1D30028B8();
          __break(1u);
          return result;
        }
        unint64_t v47 = v51;
        goto LABEL_18;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_18:
        int v39 = v64;
        uint64_t v38 = v65;
        *uint64_t v43 = v45;
        swift_bridgeObjectRelease();
        uint64_t v53 = (void *)*v43;
        swift_bridgeObjectRetain();
        if ((v42 & 1) == 0)
        {
          uint64_t v65 = sub_1D2F751A4(MEMORY[0x1E4FBC860]);
          uint64_t v55 = v54;
          uint64_t v56 = (uint64_t)v61;
          ((void (*)(char *, uint64_t, uint64_t))v58[0])(v61, v63, v13);
          sub_1D2FE6B20(v47, v56, v65, v55, v53);
        }
        swift_bridgeObjectRelease();
        sub_1D2F74AB8((uint64_t)v24);
        uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
        v57(v63, v13);
        swift_endAccess();
        v57((uint64_t)v62, v13);
        id v37 = sub_1D2F72380;
        goto LABEL_21;
      }
    }
    sub_1D2F13F2C();
    uint64_t v45 = v67;
    goto LABEL_18;
  }
  uint64_t v32 = v65;
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56);
  return v33(v32, 1, 1, v13);
}

void sub_1D2F72124(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  id v6 = objc_msgSend(a1, sel_source);
  if (v6 && (uint64_t v7 = v6, v8 = objc_msgSend(v6, sel_component), v7, v8 == a2))
  {
    id v9 = objc_msgSend(a1, sel_source);
    if (v9)
    {
      uint64_t v10 = v9;
      id v24 = objc_msgSend(v9, sel_uuid);

      if (v24)
      {
        id v11 = objc_msgSend(v24, sel_value);
        if (v11)
        {
LABEL_6:
          uint64_t v12 = v11;
          uint64_t v13 = sub_1D3000F68();
          unint64_t v15 = v14;

          sub_1D2F587AC(v13, v15, a3);
          sub_1D2F0D1CC(v13, v15);
LABEL_13:

          return;
        }
LABEL_12:
        uint64_t v21 = sub_1D30010A8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a3, 1, 1, v21);
        goto LABEL_13;
      }
    }
  }
  else
  {
    id v16 = objc_msgSend(a1, sel_target);
    if (v16)
    {
      uint64_t v17 = v16;
      unsigned int v18 = objc_msgSend(v16, sel_component);

      if (v18 == a2)
      {
        id v19 = objc_msgSend(a1, sel_target);
        if (v19)
        {
          uint64_t v20 = v19;
          id v24 = objc_msgSend(v19, sel_uuid);

          if (v24)
          {
            id v11 = objc_msgSend(v24, sel_value);
            if (v11) {
              goto LABEL_6;
            }
            goto LABEL_12;
          }
        }
      }
    }
  }
  uint64_t v22 = sub_1D30010A8();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(a3, 1, 1, v22);
}

uint64_t sub_1D2F72380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D2F751A4(MEMORY[0x1E4FBC860]);
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1D2F723B0(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, unint64_t *a6@<X5>, uint64_t *a7@<X7>, uint64_t a8@<X8>, uint64_t *a9)
{
  uint64_t v134 = a7;
  uint64_t v138 = a2;
  uint64_t v144 = a8;
  uint64_t v14 = sub_1D30010A8();
  uint64_t v148 = *(void *)(v14 - 8);
  uint64_t v149 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v135 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  v139 = (char *)&v133 - v17;
  uint64_t v18 = sub_1D3001918();
  uint64_t v141 = *(void *)(v18 - 8);
  uint64_t v142 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  unint64_t v136 = (char *)&v133 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v133 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v137 = (uint64_t)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  unint64_t v28 = (char *)&v133 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  unint64_t v31 = (char *)&v133 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  os_log_t v147 = (os_log_t)((char *)&v133 - v33);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v146 = (uint64_t)&v133 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v145 = (uint64_t)&v133 - v36;
  sub_1D2F0BCB8(0, a6);
  uint64_t v143 = a1;
  id v37 = objc_msgSend(a1, sel_payload);
  if (v37)
  {
    uint64_t v38 = sub_1D3000F68();
    unint64_t v40 = v39;

    id v41 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v37 = (id)sub_1D3000F58();
    sub_1D2F0D1CC(v38, v40);
  }
  else
  {
    id v41 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  }
  id v42 = objc_msgSend(v41, sel_initWithData_, v37);

  if (!v42)
  {
    uint64_t v53 = v149;
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v54 = v142;
    uint64_t v55 = __swift_project_value_buffer(v142, (uint64_t)qword_1EBD65778);
    uint64_t v56 = v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v22, v55, v54);
    uint64_t v57 = v143;
    unint64_t v58 = sub_1D30018F8();
    int v59 = sub_1D30020A8();
    BOOL v60 = os_log_type_enabled(v58, (os_log_type_t)v59);
    uint64_t v61 = v148;
    if (v60)
    {
      LODWORD(v146) = v59;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v145 = swift_slowAlloc();
      v150[0] = v145;
      *(_DWORD *)uint64_t v62 = 136315394;
      if (v138 > 0x3F)
      {
        unint64_t v64 = @"COMPONENTNAME_UNKNOWN";
        uint64_t v65 = @"COMPONENTNAME_UNKNOWN";
      }
      else
      {
        uint64_t v63 = (int)v138;
        unint64_t v64 = off_1E696F498[v63];
        uint64_t v65 = off_1E696F698[v63];
      }
      os_log_t v147 = v58;
      unint64_t v76 = v64;
      unint64_t v77 = v65;
      uint64_t v78 = sub_1D3001B78();
      unint64_t v80 = v79;

      id v151 = (id)sub_1D2F09508(v78, v80, v150);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 2080;
      id v81 = objc_msgSend(v57, sel_dictionaryRepresentation);
      if (!v81)
      {

        __break(1u);
        goto LABEL_57;
      }
      uint64_t v82 = v81;
      sub_1D3001A88();

      uint64_t v83 = sub_1D3001A98();
      unint64_t v85 = v84;
      swift_bridgeObjectRelease();
      id v151 = (id)sub_1D2F09508(v83, v85, v150);
      sub_1D3002318();

      swift_bridgeObjectRelease();
      os_log_t v86 = v147;
      _os_log_impl(&dword_1D2F05000, v147, (os_log_type_t)v146, "Failed to decode event of expected type '%s'; event: %s",
        (uint8_t *)v62,
        0x16u);
      uint64_t v87 = v145;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v87, -1, -1);
      MEMORY[0x1D942F2D0](v62, -1, -1);

      (*(void (**)(char *, uint64_t))(v141 + 8))(v22, v142);
      uint64_t v61 = v148;
      uint64_t v53 = v149;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v54);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v144, 1, 1, v53);
    return;
  }
  v150[0] = (uint64_t)v42;
  id v43 = v42;
  swift_getAtKeyPath();

  id v44 = v151;
  unint64_t v133 = a3;
  if (v151)
  {
    id v45 = objc_msgSend(v151, sel_value);
    char v46 = a5;
    if (v45)
    {
      unint64_t v47 = v45;
      uint64_t v48 = sub_1D3000F68();
      unint64_t v50 = v49;

      sub_1D2F587AC(v48, v50, v145);
      sub_1D2F0D1CC(v48, v50);
      uint64_t v52 = v148;
      uint64_t v51 = v149;
    }
    else
    {
      uint64_t v52 = v148;
      uint64_t v51 = v149;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56))(v145, 1, 1, v149);
    }
    uint64_t v66 = a4;

    if (a4) {
      goto LABEL_19;
    }
LABEL_14:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v146, 1, 1, v51);
    if (!v46) {
      goto LABEL_23;
    }
    goto LABEL_30;
  }
  uint64_t v52 = v148;
  uint64_t v51 = v149;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56))(v145, 1, 1, v149);
  char v46 = a5;
  uint64_t v66 = a4;
  if (!a4) {
    goto LABEL_14;
  }
LABEL_19:
  v150[0] = (uint64_t)v43;
  id v67 = v43;
  swift_retain();
  swift_getAtKeyPath();

  id v68 = v151;
  if (v151)
  {
    id v69 = objc_msgSend(v151, sel_value);
    if (v69)
    {
      uint64_t v70 = v69;
      uint64_t v71 = sub_1D3000F68();
      unint64_t v73 = v72;

      sub_1D2F587AC(v71, v73, v146);
      unint64_t v74 = v73;
      uint64_t v52 = v148;
      sub_1D2F0D1CC(v71, v74);
      uint64_t v51 = v149;
    }
    else
    {
      uint64_t v51 = v149;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v146, 1, 1, v149);
    }
    swift_release();

    if (v46) {
      goto LABEL_30;
    }
LABEL_23:
    os_log_t v75 = v147;
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v147, 1, 1, v51);
    goto LABEL_36;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v146, 1, 1, v51);
  swift_release();
  if (!v46) {
    goto LABEL_23;
  }
LABEL_30:
  v150[0] = (uint64_t)v43;
  id v88 = v43;
  swift_retain();
  swift_getAtKeyPath();

  id v89 = v151;
  if (v151)
  {
    id v90 = objc_msgSend(v151, sel_value);
    if (v90)
    {
      uint64_t v91 = v90;
      uint64_t v92 = sub_1D3000F68();
      unint64_t v94 = v93;

      sub_1D2F587AC(v92, v94, (uint64_t)v147);
      unint64_t v95 = v94;
      uint64_t v52 = v148;
      sub_1D2F0D1CC(v92, v95);
      uint64_t v51 = v149;
    }
    else
    {
      uint64_t v51 = v149;
      (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v147, 1, 1, v149);
    }
    swift_release();

    os_log_t v75 = v147;
  }
  else
  {
    os_log_t v75 = v147;
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v147, 1, 1, v51);
    swift_release();
  }
LABEL_36:
  sub_1D2F61448((uint64_t)v75, (uint64_t)v31);
  uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  if (v96(v31, 1, v51) != 1)
  {
    uint64_t v122 = (uint64_t)v139;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v139, v31, v51);
    uint64_t v123 = v140;
    sub_1D2FDA5BC(v122, v143);
    swift_beginAccess();
    uint64_t v124 = *(void *)(v123 + 48);
    if (*(void *)(v124 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v125 = sub_1D2F0DD14(v122);
      uint64_t v126 = v145;
      uint64_t v127 = v146;
      if (v128)
      {
        uint64_t v129 = v144;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v52 + 16))(v144, *(void *)(v124 + 56) + *(void *)(v52 + 72) * v125, v51);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v129, 0, 1, v51);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v144, 1, 1, v51);
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v144, 1, 1, v51);

      uint64_t v126 = v145;
      uint64_t v127 = v146;
    }
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v122, v51);
    sub_1D2F1CD78((uint64_t)v147, &qword_1EBD62AA0);
    sub_1D2F1CD78(v127, &qword_1EBD62AA0);
    uint64_t v131 = v126;
    goto LABEL_52;
  }
  sub_1D2F1CD78((uint64_t)v31, &qword_1EBD62AA0);
  uint64_t v97 = v146;
  sub_1D2F61448(v146, (uint64_t)v28);
  if (v96(v28, 1, v51) != 1)
  {
    uint64_t v130 = v144;
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v144, v28, v51);
    sub_1D2FDA5BC(v130, v143);

    sub_1D2F1CD78((uint64_t)v147, &qword_1EBD62AA0);
    sub_1D2F1CD78(v97, &qword_1EBD62AA0);
    sub_1D2F1CD78(v145, &qword_1EBD62AA0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v130, 0, 1, v51);
    return;
  }
  sub_1D2F1CD78((uint64_t)v28, &qword_1EBD62AA0);
  uint64_t v98 = v145;
  uint64_t v99 = v137;
  sub_1D2F61448(v145, v137);
  if (v96((char *)v99, 1, v51) != 1)
  {
    uint64_t v132 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v135, v99, v51);
    sub_1D2F73D78(v132, v138, v143, v144);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v132, v51);
    sub_1D2F1CD78((uint64_t)v147, &qword_1EBD62AA0);
    sub_1D2F1CD78(v146, &qword_1EBD62AA0);
    uint64_t v131 = v98;
LABEL_52:
    sub_1D2F1CD78(v131, &qword_1EBD62AA0);
    return;
  }
  sub_1D2F1CD78(v99, &qword_1EBD62AA0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v100 = v142;
  uint64_t v101 = __swift_project_value_buffer(v142, (uint64_t)qword_1EBD65778);
  uint64_t v102 = v141;
  uint64_t v103 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v136, v101, v100);
  swift_retain_n();
  uint64_t v143 = v46;
  uint64_t v104 = v133;
  swift_retain_n();
  id v105 = v43;
  swift_retain_n();
  id v106 = v105;
  uint64_t v107 = v66;
  unint64_t v108 = sub_1D30018F8();
  LODWORD(v140) = sub_1D30020B8();
  if (!os_log_type_enabled(v108, (os_log_type_t)v140))
  {
    swift_release_n();
    swift_release_n();
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v100);
    sub_1D2F1CD78((uint64_t)v147, &qword_1EBD62AA0);
    sub_1D2F1CD78(v146, &qword_1EBD62AA0);
    sub_1D2F1CD78(v98, &qword_1EBD62AA0);
    goto LABEL_55;
  }
  uint64_t v109 = swift_slowAlloc();
  v139 = (char *)swift_slowAlloc();
  v150[0] = (uint64_t)v139;
  *(_DWORD *)uint64_t v109 = 136315906;
  id v151 = v107;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(v134);
  uint64_t v110 = sub_1D3001BC8();
  id v151 = (id)sub_1D2F09508(v110, v111, v150);
  sub_1D3002318();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v109 + 12) = 2080;
  id v151 = v143;
  swift_retain();
  uint64_t v112 = sub_1D3001BC8();
  id v151 = (id)sub_1D2F09508(v112, v113, v150);
  sub_1D3002318();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v109 + 22) = 2080;
  id v151 = v104;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(a9);
  uint64_t v114 = sub_1D3001BC8();
  id v151 = (id)sub_1D2F09508(v114, v115, v150);
  sub_1D3002318();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v109 + 32) = 2080;
  uint64_t v57 = v106;
  id v116 = objc_msgSend(v106, sel_dictionaryRepresentation);
  if (v116)
  {
    unint64_t v117 = v116;
    sub_1D3001A88();

    uint64_t v118 = sub_1D3001A98();
    unint64_t v120 = v119;
    swift_bridgeObjectRelease();
    id v151 = (id)sub_1D2F09508(v118, v120, v150);
    sub_1D3002318();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v108, (os_log_type_t)v140, "    Failed to extract either request ID, sub-request ID or component UUID.\n    Tried keypaths '%s'/'%s'/'%s'.\n    For event: %s\")", (uint8_t *)v109, 0x2Au);
    uint64_t v121 = v139;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v121, -1, -1);
    MEMORY[0x1D942F2D0](v109, -1, -1);

    (*(void (**)(char *, uint64_t))(v141 + 8))(v136, v142);
    sub_1D2F1CD78((uint64_t)v147, &qword_1EBD62AA0);
    sub_1D2F1CD78(v146, &qword_1EBD62AA0);
    sub_1D2F1CD78(v145, &qword_1EBD62AA0);
    uint64_t v52 = v148;
    uint64_t v51 = v149;
LABEL_55:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v144, 1, 1, v51);
    return;
  }
LABEL_57:

  __break(1u);
}

void sub_1D2F73478(void *a1@<X0>, void *a2@<X1>, id a3@<X8>)
{
  id v75 = a2;
  uint64_t v5 = sub_1D3001918();
  unint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v80 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D30010A8();
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v73 - v15;
  MEMORY[0x1F4188790](v14);
  unint64_t v77 = (char *)&v73 - v17;
  id v18 = objc_msgSend(a1, sel_payload);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = sub_1D3000F68();
    unint64_t v22 = v21;

    uint64_t v23 = (void *)sub_1D3000F58();
    sub_1D2F0D1CC(v20, v22);
  }
  else
  {
    uint64_t v23 = 0;
  }
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA1280]), sel_initWithData_, v23);

  uint64_t v78 = v10;
  if (v24)
  {
    id v25 = objc_msgSend(v24, sel_eventMetadata);
    if (v25
      && (uint64_t v26 = v25, v27 = objc_msgSend(v25, sel_turnID), v26, v27))
    {
      uint64_t v28 = sub_1D3000F68();
      unint64_t v30 = v29;

      sub_1D2F587AC(v28, v30, (uint64_t)v9);
      uint64_t v31 = v79;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v9, 1, v10) != 1)
      {
        unint64_t v80 = (char *)v28;
        unint64_t v81 = v30;
        uint64_t v46 = (uint64_t)v77;
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v77, v9, v10);
        id v47 = objc_msgSend(v24, sel_deviceDynamicContext);

        id v48 = v75;
        if (v47)
        {
          if (v75)
          {
            id v49 = objc_msgSend(v75, sel_timestamp);
            if (v49)
            {
              unint64_t v50 = v49;
              uint64_t v51 = *(void *)(v76 + 72);
              uint64_t v52 = v46;
              uint64_t v53 = v78;
              (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v16, v52, v78);
              swift_beginAccess();
              swift_retain();
              id v54 = v50;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              id v84 = *(id *)(v51 + 24);
              *(void *)(v51 + 24) = 0x8000000000000000;
              sub_1D2FE5600((uint64_t)v54, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
              *(void *)(v51 + 24) = v84;
              swift_bridgeObjectRelease();
              uint64_t v56 = v53;
              uint64_t v46 = (uint64_t)v77;
              (*(void (**)(char *, uint64_t))(v79 + 8))(v16, v56);
              swift_endAccess();

              uint64_t v31 = v79;
              swift_release();
            }
          }
        }
        id v57 = sub_1D2F75D38(v24, v48);
        if (v57)
        {
          uint64_t v58 = v31;
          id v59 = v57;
          uint64_t v60 = (uint64_t)v80;
        }
        else
        {
          if (qword_1EBD63A48 != -1) {
            swift_once();
          }
          __swift_project_value_buffer(v82, (uint64_t)qword_1EBD65778);
          uint64_t v61 = v78;
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v13, v46, v78);
          id v62 = v24;
          uint64_t v63 = sub_1D30018F8();
          os_log_type_t v64 = sub_1D30020B8();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = swift_slowAlloc();
            id v75 = a3;
            uint64_t v66 = v65;
            uint64_t v82 = swift_slowAlloc();
            v83[0] = v82;
            *(_DWORD *)uint64_t v66 = 134218242;
            os_log_t v74 = v63;
            id v84 = objc_msgSend(v62, sel_whichEvent_Type);
            sub_1D3002318();

            *(_WORD *)(v66 + 12) = 2080;
            uint64_t v67 = sub_1D3001038();
            id v84 = (id)sub_1D2F09508(v67, v68, v83);
            uint64_t v46 = (uint64_t)v77;
            sub_1D3002318();
            swift_bridgeObjectRelease();
            uint64_t v31 = v79;
            (*(void (**)(char *, uint64_t))(v79 + 8))(v13, v61);
            os_log_t v69 = v74;
            _os_log_impl(&dword_1D2F05000, v74, v64, "Missing timestamp metadata for backfilling UEI event; type: %lu; turn: %s",
              (uint8_t *)v66,
              0x16u);
            uint64_t v70 = v82;
            swift_arrayDestroy();
            MEMORY[0x1D942F2D0](v70, -1, -1);
            uint64_t v71 = v66;
            a3 = v75;
            MEMORY[0x1D942F2D0](v71, -1, -1);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v61);
          }
          uint64_t v58 = v31;
          uint64_t v60 = (uint64_t)v80;
          id v59 = a1;
          id v57 = 0;
        }
        id v72 = v57;
        sub_1D2F73D78(v46, 2, v59, (uint64_t)a3);
        sub_1D2F0D1CC(v60, v81);

        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v46, v78);
        return;
      }
      sub_1D2F0D1CC(v28, v30);

      sub_1D2F1CD78((uint64_t)v9, &qword_1EBD62AA0);
    }
    else
    {
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v32 = v82;
  uint64_t v33 = __swift_project_value_buffer(v82, (uint64_t)qword_1EBD65778);
  uint64_t v34 = v80;
  unint64_t v35 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v80, v33, v32);
  id v36 = a1;
  id v37 = sub_1D30018F8();
  os_log_type_t v38 = sub_1D30020B8();
  if (!os_log_type_enabled(v37, v38))
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v32);
    goto LABEL_16;
  }
  id v75 = a3;
  unint64_t v39 = (uint8_t *)swift_slowAlloc();
  uint64_t v40 = swift_slowAlloc();
  v83[0] = v40;
  *(_DWORD *)unint64_t v39 = 136315138;
  id v41 = objc_msgSend(v36, sel_dictionaryRepresentation);
  if (v41)
  {
    id v42 = v41;
    unint64_t v77 = (char *)(v39 + 4);
    sub_1D3001A88();

    uint64_t v43 = sub_1D3001A98();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    id v84 = (id)sub_1D2F09508(v43, v45, v83);
    sub_1D3002318();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v37, v38, "Failed to UEI data and/or turn ID from event: %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v40, -1, -1);
    MEMORY[0x1D942F2D0](v39, -1, -1);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
    a3 = v75;
LABEL_16:
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v79 + 56))(a3, 1, 1, v78);
    return;
  }

  __break(1u);
}

uint64_t sub_1D2F73D78@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1D2FDA0B4(a2, a1, a3);
  if (a2 == 1)
  {
    uint64_t v7 = sub_1D30010A8();
    uint64_t v15 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a4, a1, v7);
    uint64_t v8 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56);
    return v8(a4, 0, 1, v7);
  }
  else
  {
    uint64_t v10 = sub_1D2F0D008(a2, a1, 1);
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = sub_1D30010A8();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = v13;
    if (v11)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(a4, v10 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v12);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v12);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a4, 1, 1, v12);
    }
    return swift_bridgeObjectRelease();
  }
}

void *sub_1D2F73F50()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v34 - v6;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t result = (void *)sub_1D2F585E4();
  if (result)
  {
    uint64_t v16 = result;
    id v17 = objc_msgSend(result, sel_eventMetadata);
    if (v17
      && (v18 = v17, id v19 = objc_msgSend(v17, sel_requestId), v18, v19))
    {
      id v20 = objc_msgSend(v19, sel_value);
      uint64_t v38 = v1;
      unint64_t v39 = v5;
      if (v20)
      {
        unint64_t v21 = v20;
        uint64_t v22 = sub_1D3000F68();
        unint64_t v24 = v23;

        sub_1D2F587AC(v22, v24, (uint64_t)v7);
        sub_1D2F0D1CC(v22, v24);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      }

      id v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v25(v7, 1, v8) != 1)
      {
        id v37 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v37(v14, v7, v8);
        id v26 = objc_msgSend(v16, sel_subRequestContext);
        if (v26
          && (id v27 = v26,
              id v28 = objc_msgSend(v26, sel_subRequestId),
              v27,
              v28))
        {
          id v29 = objc_msgSend(v28, sel_value);
          if (v29)
          {
            unint64_t v30 = v29;
            uint64_t v31 = sub_1D3000F68();
            unint64_t v35 = v32;
            uint64_t v36 = v31;

            uint64_t v7 = v39;
            sub_1D2F587AC(v36, v35, (uint64_t)v39);
            sub_1D2F0D1CC(v36, v35);
          }
          else
          {
            uint64_t v7 = v39;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v39, 1, 1, v8);
          }

          if (v25(v7, 1, v8) != 1)
          {
            v37(v12, v7, v8);
            sub_1D2F74364((uint64_t)v14, (uint64_t)v12);

            uint64_t v33 = *(void (**)(char *, uint64_t))(v9 + 8);
            v33(v12, v8);
            return (void *)((uint64_t (*)(char *, uint64_t))v33)(v14, v8);
          }
        }
        else
        {
          uint64_t v7 = v39;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v39, 1, 1, v8);
        }

        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return (void *)sub_1D2F1CD78((uint64_t)v7, &qword_1EBD62AA0);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }

    return (void *)sub_1D2F1CD78((uint64_t)v7, &qword_1EBD62AA0);
  }
  return result;
}

void sub_1D2F74364(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  id v57 = (char *)&v50 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v50 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  id v20 = (char *)&v50 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v56 = (uint64_t)&v50 - v21;
  sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
  if (sub_1D3001B28())
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1D3001918();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBD65778);
    uint64_t v23 = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    unint64_t v24 = sub_1D30018F8();
    os_log_type_t v25 = sub_1D30020B8();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v59[0] = v27;
      *(_DWORD *)id v26 = 136315138;
      sub_1D2F13470(&qword_1EA698E08);
      uint64_t v28 = sub_1D3002738();
      uint64_t v58 = sub_1D2F09508(v28, v29, v59);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v8);
      _os_log_impl(&dword_1D2F05000, v24, v25, "Request %s uses the same id for sub-request and request id. Ignoring subrequest linking.", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v27, -1, -1);
      MEMORY[0x1D942F2D0](v26, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v8);
    }

    return;
  }
  uint64_t v52 = v7;
  uint64_t v50 = v9;
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v54 = a1;
  v30(v20, a1, v8);
  uint64_t v51 = a2;
  uint64_t v55 = (void (*)(char *, char *, uint64_t))v30;
  v30(v17, a2, v8);
  uint64_t v31 = (uint64_t *)(v2 + 40);
  swift_beginAccess();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = v2;
  int v34 = isUniquelyReferenced_nonNull_native;
  uint64_t v58 = *(void *)(v2 + 40);
  uint64_t v35 = v58;
  uint64_t v53 = v33;
  *(void *)(v33 + 40) = 0x8000000000000000;
  unint64_t v37 = sub_1D2F0DD14((uint64_t)v20);
  uint64_t v38 = *(void *)(v35 + 16);
  BOOL v39 = (v36 & 1) == 0;
  uint64_t v40 = v38 + v39;
  if (__OFADD__(v38, v39))
  {
    __break(1u);
LABEL_17:
    sub_1D2F13D78();
    uint64_t v35 = v58;
    goto LABEL_13;
  }
  LOBYTE(a1) = v36;
  if (*(void *)(v35 + 24) < v40)
  {
    sub_1D2F10134(v40, v34);
    uint64_t v35 = v58;
    unint64_t v41 = sub_1D2F0DD14((uint64_t)v20);
    a2 = v50;
    if ((a1 & 1) != (v42 & 1))
    {
      sub_1D30028B8();
      __break(1u);
      return;
    }
    unint64_t v37 = v41;
    goto LABEL_13;
  }
  a2 = v50;
  if ((v34 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_13:
  uint64_t v43 = v17;
  uint64_t *v31 = v35;
  swift_bridgeObjectRelease();
  unint64_t v44 = (void *)*v31;
  swift_bridgeObjectRetain();
  uint64_t v45 = (uint64_t)v57;
  if ((a1 & 1) == 0)
  {
    v55(v57, v20, v8);
    sub_1D2FE6B1C(v37, v45, MEMORY[0x1E4FBC870], v44);
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = (void (*)(uint64_t, uint64_t, uint64_t))v55;
  uint64_t v47 = v56;
  sub_1D2FDFDFC(v56, v43);
  id v48 = *(void (**)(uint64_t, uint64_t))(a2 + 8);
  v48(v47, v8);
  v48((uint64_t)v20, v8);
  swift_endAccess();
  v46(v45, v51, v8);
  uint64_t v49 = (uint64_t)v52;
  v46((uint64_t)v52, v54, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(a2 + 56))(v49, 0, 1, v8);
  swift_beginAccess();
  sub_1D2FBE750(v49, v45);
  swift_endAccess();
}

uint64_t sub_1D2F7493C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1D2F74994()
{
  sub_1D2F7493C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EventTables()
{
  return self;
}

void *sub_1D2F749EC()
{
  type metadata accessor for RequestLinkTable();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = sub_1D2F232FC(MEMORY[0x1E4FBC860]);
  v0[2] = v1;
  type metadata accessor for ComponentEventTable();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC868];
  v0[3] = v3;
  unint64_t v5 = sub_1D2F1F404(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62BC0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  v0[4] = v6;
  v0[5] = v4;
  v0[6] = v4;
  v0[7] = v4;
  v0[8] = v4;
  type metadata accessor for LogicalClockTable();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v4;
  v0[9] = v7;
  return v0;
}

uint64_t sub_1D2F74AB8(uint64_t a1)
{
  uint64_t v3 = sub_1D30010A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = *(void *)(v7 + 16);
  if (*v1)
  {
    swift_retain();
    sub_1D2FA9E2C(a1, v9, v10, (void *)(v8 + 16), v8 + 32);
    char v12 = v11;
    swift_release();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    v19[1] = v1;
    uint64_t v14 = 0;
    id v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v16 = v4 + 16;
    uint64_t v15 = v17;
    uint64_t v20 = *(void *)(v16 + 56);
    uint64_t v21 = v10;
    do
    {
      v15(v6, v9, v3);
      sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
      char v18 = sub_1D3001B28();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v6, v3);
      if (v18) {
        return 0;
      }
      ++v14;
      v9 += v20;
    }
    while (v21 != v14);
  }
  sub_1D2F74CB8(a1);
  return 1;
}

uint64_t sub_1D2F74CB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = v2 + 1;
  uint64_t v9 = v2[1];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[1] = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1D2F0A0E0(0, *(void *)(v9 + 16) + 1, 1);
    uint64_t v9 = *v8;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    sub_1D2F0A0E0(v11 > 1, v12 + 1, 1);
    uint64_t v9 = *v8;
  }
  *(void *)(v9 + 16) = v12 + 1;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12, v7, v4);
  v2[1] = v9;
  uint64_t v14 = *(void *)(v9 + 16);
  uint64_t v15 = *v2;
  if (*v2)
  {
    swift_beginAccess();
    if (MEMORY[0x1D942D590](*(void *)(v15 + 16) & 0x3FLL) >= v14)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v16 = *v2;
      if (!result)
      {
        if (!v16)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v16 = sub_1D3001678();
        uint64_t result = swift_release();
        *uint64_t v2 = v16;
      }
      if (v16) {
        return sub_1D3001628();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v14 < 0x10)
  {
    return result;
  }
  return sub_1D2F74EF4();
}

uint64_t sub_1D2F74EF4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = MEMORY[0x1D942D5B0](v4);
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_1D2F74F98(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_1D2F74F98(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1D942D5B0](*(void *)(a1 + 16));
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = MEMORY[0x1D942D5C0]();
    sub_1D2F7502C(v9 + 16, v9 + 32, a1);
  }
  return v9;
}

uint64_t sub_1D2F7502C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v3 = (void *)result;
    sub_1D30010A8();
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t result = sub_1D3001AB8();
      if (__OFSUB__(1 << *v3, 1)) {
        break;
      }
      if (sub_1D3001618())
      {
        while (1)
          sub_1D3001658();
      }
      uint64_t result = sub_1D3001648();
      if (++v4 == v6) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2F751A4(uint64_t a1)
{
  uint64_t v3 = sub_1D30010A8();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v33 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D2F75648();
  uint64_t v13 = sub_1D2F75650(&v45, a1, 0, 1, v12);
  unint64_t v14 = *(void *)(a1 + 16);
  int64_t v15 = v45;
  if (v45 == v14) {
    return v13;
  }
  if ((v45 & 0x8000000000000000) != 0) {
    goto LABEL_26;
  }
  if (v14 < v45)
  {
LABEL_27:
    __break(1u);
  }
  else
  {
    unint64_t v41 = v11;
    unint64_t v1 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    sub_1D3002888();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v16 = swift_dynamicCastClass();
    if (!v16)
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = MEMORY[0x1E4FBC860];
    }
    uint64_t v39 = a1 + v1;
    uint64_t v17 = *(void *)(v16 + 16);
    swift_release();
    if (v17 == v15)
    {
      uint64_t v18 = swift_dynamicCastClass();
      uint64_t v19 = v41;
      if (!v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1D2F9E93C(a1, v39, 0, (2 * v15) | 1);
  uint64_t v19 = v41;
LABEL_9:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v46 = v13;
  uint64_t v47 = v18;
  if (*(void *)(a1 + 16) >= v14)
  {
    uint64_t v43 = v42 + 16;
    uint64_t v40 = v42 + 56;
    uint64_t v38 = v42 + 48;
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v42 + 32);
    unint64_t v36 = v1;
    uint64_t v21 = a1;
    a1 = v42 + 8;
    v33[1] = v21;
    swift_bridgeObjectRetain();
    v33[0] = v13;
    swift_retain();
    unint64_t v1 = (unint64_t)v8;
    unint64_t v37 = v14;
    while (1)
    {
      if (v15 >= (uint64_t)v14)
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v22 = v42;
      uint64_t v23 = *(void *)(v42 + 72);
      int64_t v44 = v15;
      uint64_t v24 = v39 + v23 * v15;
      os_log_type_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
      v25(v19, v24, v3);
      id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v26(v19, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v3) == 1) {
        goto LABEL_23;
      }
      int v34 = v26;
      (*v35)(v8, v19, v3);
      uint64_t v27 = v46;
      uint64_t v13 = (uint64_t)v8;
      uint64_t v28 = v47 + v36;
      uint64_t v29 = *(void *)(v47 + 16);
      if (v46)
      {
        swift_retain();
        sub_1D2FA9E2C(v13, v28, v29, (void *)(v27 + 16), v27 + 32);
        char v31 = v30;
        swift_release();
        if ((v31 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v13 = v43;
        if (v29)
        {
          do
          {
            v25(v6, v28, v3);
            sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
            char v32 = sub_1D3001B28();
            (*(void (**)(char *, uint64_t))a1)(v6, v3);
            if (v32) {
              goto LABEL_12;
            }
            v28 += v23;
          }
          while (--v29);
        }
      }
      sub_1D2F74CB8(v1);
LABEL_12:
      int64_t v15 = v44 + 1;
      uint64_t v8 = (char *)v1;
      (*(void (**)(unint64_t, uint64_t))a1)(v1, v3);
      unint64_t v14 = v37;
      uint64_t v19 = v41;
      if (v15 == v37)
      {
        v34(v41, 1, 1, v3);
LABEL_23:
        swift_release();
        swift_bridgeObjectRelease_n();
        return v46;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F75648()
{
  return 0;
}

uint64_t sub_1D2F75650(unint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D30010A8();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v42 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v56 = (char *)&v42 - v20;
  unint64_t v21 = *(void *)(a2 + 16);
  uint64_t v22 = MEMORY[0x1D942D5B0](v21);
  if (a4) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = a3;
  }
  if (v23 <= v22) {
    uint64_t v23 = v22;
  }
  if (v23 <= a5) {
    uint64_t v24 = a5;
  }
  else {
    uint64_t v24 = v23;
  }
  if (v24 > 4)
  {
    uint64_t v26 = MEMORY[0x1D942D5C0]();
    sub_1D2F75B24(&v57, a2, (void *)(v26 + 16));
    *a1 = v57;
    return v26;
  }
  unint64_t v25 = v21;
  if (v21 < 2)
  {
    uint64_t v26 = 0;
    *a1 = v21;
    return v26;
  }
  uint64_t v43 = a1;
  uint64_t result = sub_1D2F27C98(0, v21, 0, MEMORY[0x1E4FBC860]);
  unint64_t v28 = 0;
  uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v55 + 16);
  unint64_t v48 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v46 = v16;
  unint64_t v47 = a2 + v48;
  uint64_t v53 = *(void *)(v55 + 72);
  uint64_t v54 = v29;
  unint64_t v50 = result;
  uint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  char v30 = (void (**)(char *, char *, uint64_t))(v55 + 32);
  v55 += 16;
  char v31 = (void (**)(char *, uint64_t))(v55 - 8);
  uint64_t v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 40);
  unint64_t v44 = (v55 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  unint64_t v45 = v25;
  while (v28 != v25)
  {
    unint64_t v49 = v28;
    v54(v56, v47 + v53 * v28, v13);
    uint64_t v32 = *(void *)(v50 + 16);
    if (v32)
    {
      unint64_t v33 = v50 + v48;
      swift_bridgeObjectRetain();
      while (1)
      {
        v54(v12, v33, v13);
        int v34 = *v52;
        (*v52)(v12, 0, 1, v13);
        if ((*v51)(v12, 1, v13) == 1) {
          break;
        }
        (*v30)(v19, v12, v13);
        sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
        char v35 = sub_1D3001B28();
        unint64_t v36 = (uint64_t (*)(char *, uint64_t))*v31;
        (*v31)(v19, v13);
        if (v35)
        {
          swift_bridgeObjectRelease();
          v36(v56, v13);
          swift_bridgeObjectRelease();
          uint64_t v26 = 0;
          *uint64_t v43 = v49;
          return v26;
        }
        v33 += v53;
        if (!--v32) {
          goto LABEL_22;
        }
      }
    }
    else
    {
      int v34 = *v52;
      swift_bridgeObjectRetain();
LABEL_22:
      v34(v12, 1, 1, v13);
    }
    swift_bridgeObjectRelease();
    unint64_t v37 = v46;
    v54(v46, (unint64_t)v56, v13);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      unint64_t v25 = v45;
      unint64_t v39 = v49;
      unint64_t v38 = v50;
    }
    else
    {
      unint64_t v38 = sub_1D2F27C98(0, *(void *)(v50 + 16) + 1, 1, v50);
      unint64_t v25 = v45;
      unint64_t v39 = v49;
    }
    unint64_t v41 = *(void *)(v38 + 16);
    unint64_t v40 = *(void *)(v38 + 24);
    if (v41 >= v40 >> 1) {
      unint64_t v38 = sub_1D2F27C98(v40 > 1, v41 + 1, 1, v38);
    }
    unint64_t v28 = v39 + 1;
    *(void *)(v38 + 16) = v41 + 1;
    unint64_t v50 = v38;
    (*v30)((char *)(v38 + v48 + v41 * v53), v37, v13);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v31)(v56, v13);
    if (v28 == v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 0;
      *uint64_t v43 = v25;
      return v26;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1D2F75B24(unint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    sub_1D30010A8();
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t result = sub_1D3001AB8();
      if (__OFSUB__(1 << *a3, 1)) {
        break;
      }
      sub_1D3001618();
      while (1)
      {
        unint64_t result = sub_1D3001638();
        if (v7) {
          break;
        }
        if (result >= v3)
        {
          __break(1u);
          goto LABEL_14;
        }
        sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
        if (sub_1D3001B28())
        {
          unint64_t result = 0;
          *a1 = v5;
          return result;
        }
        sub_1D3001658();
      }
      sub_1D3001648();
      if (++v5 == v3) {
        goto LABEL_11;
      }
    }
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    *a1 = v3;
    return 1;
  }
  return result;
}

id sub_1D2F75D38(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v23 - v8;
  if (!a2) {
    return 0;
  }
  id v10 = objc_msgSend(a2, sel_timestamp);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(v10, sel_timestampInNanoseconds);

  id v13 = objc_msgSend(a2, sel_timestamp);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = v13;
  id v15 = objc_msgSend(v13, sel_clockIdentifier);

  if (!v15) {
    return 0;
  }
  id v16 = objc_msgSend(v15, sel_toSafeNSUUID);

  if (v16)
  {
    sub_1D3001068();

    uint64_t v17 = sub_1D30010A8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 0, 1, v17);
  }
  else
  {
    uint64_t v17 = sub_1D30010A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  }
  sub_1D2F56C74((uint64_t)v7, (uint64_t)v9);
  sub_1D30010A8();
  uint64_t v20 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v17) == 1)
  {
    sub_1D2F1CD78((uint64_t)v9, &qword_1EBD62AA0);
    return 0;
  }
  else
  {
    sub_1D3001038();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v17);
    id v21 = objc_msgSend(a1, sel_eventMetadata);
    if (v21 || (id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA1288]), sel_init)) != 0)
    {
      objc_msgSend(v21, sel_setEventGeneratedRelativeToBootTimeTimestampNs_, v12);
      uint64_t v22 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_setEventGeneratedTimestampRefId_, v22);

      objc_msgSend(a1, sel_setEventMetadata_, v21);
      id v18 = objc_msgSend(a1, sel_wrapAsAnyEvent);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v18;
}

char *keypath_get_selector_eventMetadata()
{
  return sel_eventMetadata;
}

id sub_1D2F76080@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_eventMetadata);
  *a2 = result;
  return result;
}

id sub_1D2F760BC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEventMetadata_, *a1);
}

char *keypath_get_selector_mhId()
{
  return sel_mhId;
}

id sub_1D2F760DC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_mhId);
  *a2 = result;
  return result;
}

id sub_1D2F76118(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMhId_, *a1);
}

char *keypath_get_selector_scId()
{
  return sel_scId;
}

id sub_1D2F76138@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_scId);
  *a2 = result;
  return result;
}

id sub_1D2F76174(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScId_, *a1);
}

char *keypath_get_selector_requestId()
{
  return sel_requestId;
}

id sub_1D2F76194@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_requestId);
  *a2 = result;
  return result;
}

id sub_1D2F761D0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRequestId_, *a1);
}

char *keypath_get_selector_subRequestId()
{
  return sel_subRequestId;
}

id sub_1D2F761F0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_subRequestId);
  *a2 = result;
  return result;
}

id sub_1D2F7622C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSubRequestId_, *a1);
}

char *keypath_get_selector_plusId()
{
  return sel_plusId;
}

id sub_1D2F7624C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_plusId);
  *a2 = result;
  return result;
}

id sub_1D2F76288(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlusId_, *a1);
}

char *keypath_get_selector_nlId()
{
  return sel_nlId;
}

id sub_1D2F762A8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_nlId);
  *a2 = result;
  return result;
}

id sub_1D2F762E4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNlId_, *a1);
}

char *keypath_get_selector_flowId()
{
  return sel_flowId;
}

id sub_1D2F76304@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_flowId);
  *a2 = result;
  return result;
}

id sub_1D2F76340(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFlowId_, *a1);
}

char *keypath_get_selector_asrId()
{
  return sel_asrId;
}

id sub_1D2F76360@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_asrId);
  *a2 = result;
  return result;
}

id sub_1D2F7639C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAsrId_, *a1);
}

uint64_t sub_1D2F763B0(uint64_t a1)
{
  return sub_1D2F708B0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1D2F76438()
{
  id v1 = objc_msgSend(v0, sel_typeName);
  sub_1D3001B78();

  sub_1D2F226C4();
  uint64_t v2 = sub_1D3002348();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(v2 + 16 * v3 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static Config.groundTruthDBLocation.getter()
{
  return sub_1D2F77028(&qword_1EBD5FB98, &qword_1EBD5FB88);
}

unint64_t static Config.baseLocation.getter()
{
  return 0xD000000000000036;
}

unint64_t static Config.pluginSchedulerLockPath.getter()
{
  return 0xD00000000000004BLL;
}

unint64_t static Config.pluginSchedulerTimestamp.getter()
{
  return 0xD000000000000050;
}

unint64_t static Config.inferredGroundTruthPathComponent.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1D2F7659C(uint64_t a1)
{
  return sub_1D2F76EB8(a1, 0xD000000000000014, 0x80000001D3010BF0, &qword_1EBD5FB70, algn_1EBD5FB78);
}

uint64_t static Config.groundTruthDir.getter()
{
  return sub_1D2F77028(&qword_1EBD5FB80, &qword_1EBD5FB70);
}

unint64_t static Config.inferredGroundTruthStoreFilename.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1D2F76608()
{
  if (qword_1EBD5FB80 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBD5FB70;
  uint64_t v2 = *(void *)algn_1EBD5FB78;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D3001C68();
  qword_1EBD5FB88 = v1;
  unk_1EBD5FB90 = v2;
  return result;
}

uint64_t static Config.picsStorePathComponent.getter()
{
  return 1396918608;
}

uint64_t sub_1D2F766B0(uint64_t a1)
{
  return sub_1D2F76EB8(a1, 0x2F53434950, 0xE500000000000000, &qword_1EBD5FBA0, algn_1EBD5FBA8);
}

uint64_t static Config.PICSDir.getter()
{
  return sub_1D2F77028(&qword_1EBD5FBB0, &qword_1EBD5FBA0);
}

uint64_t static Config.picsStoreFilename.getter()
{
  return 0x7461642E73636970;
}

uint64_t sub_1D2F76714()
{
  if (qword_1EBD5FBB0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBD5FBA0;
  uint64_t v2 = *(void *)algn_1EBD5FBA8;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D3001C68();
  qword_1EBD5FB30 = v1;
  unk_1EBD5FB38 = v2;
  return result;
}

uint64_t static Config.PICSDBLocation.getter()
{
  return sub_1D2F77028(&qword_1EBD5FB48, &qword_1EBD5FB30);
}

unint64_t static Config.StreamBookmarkStorePath.getter()
{
  return 0xD000000000000043;
}

uint64_t sub_1D2F767F0@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_defaultManager);
  uint64_t v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v4 = objc_msgSend(v2, sel_containerURLForSecurityApplicationGroupIdentifier_, v3);

  if (v4)
  {
    sub_1D3000EE8();

    uint64_t v5 = sub_1D3000F18();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D3000F18();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

unint64_t static Config.universalSuggestionsStoreDirInContainer.getter()
{
  return 0xD000000000000022;
}

unint64_t static Config.universalSuggestionsStoreFilename.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t static Config.universalSuggestionsStoreDir.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1D3001738();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F767F0((uint64_t)v8);
  uint64_t v9 = sub_1D3000F18();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1D2F346A8((uint64_t)v8);
    uint64_t v11 = 1;
  }
  else
  {
    sub_1D3001728();
    sub_1D3000E98();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v11 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v11, 1, v9);
}

uint64_t static Config.universalSuggestionsStoreFilePath.getter()
{
  uint64_t v0 = sub_1D3001738();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = sub_1D3000F18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F767F0((uint64_t)v7);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v14(v7, 1, v10) == 1)
  {
    sub_1D2F346A8((uint64_t)v7);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  else
  {
    sub_1D3001728();
    sub_1D3000E98();
    id v15 = *(void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v21 = v1 + 8;
    uint64_t v22 = v0;
    uint64_t v20 = v15;
    v15(v3, v0);
    id v16 = *(void (**)(char *, uint64_t))(v11 + 8);
    v16(v7, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if (v14(v9, 1, v10) != 1)
    {
      sub_1D3001718();
      sub_1D3000E98();
      v20(v3, v22);
      v16(v9, v10);
      uint64_t v17 = sub_1D3000EF8();
      v16(v13, v10);
      return v17;
    }
  }
  sub_1D2F346A8((uint64_t)v9);
  return 0;
}

uint64_t static Config.pimsStorePathComponent.getter()
{
  return 1397573968;
}

uint64_t sub_1D2F76E98(uint64_t a1)
{
  return sub_1D2F76EB8(a1, 0x2F534D4950, 0xE500000000000000, qword_1EBD5FBB8, qword_1EBD5FBC0);
}

uint64_t sub_1D2F76EB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t result = sub_1D3001C68();
  *a4 = 0xD000000000000036;
  *a5 = 0x80000001D3010A90;
  return result;
}

uint64_t static Config.PIMSDir.getter()
{
  return sub_1D2F77028(&qword_1EBD5FBD0, qword_1EBD5FBB8);
}

uint64_t static Config.pimsStoreFilename.getter()
{
  return 0x7461642E736D6970;
}

uint64_t sub_1D2F76F68()
{
  if (qword_1EBD5FBD0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBD5FBB8[0];
  uint64_t v2 = qword_1EBD5FBC0[0];
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D3001C68();
  qword_1EBD5FB50 = v1;
  unk_1EBD5FB58 = v2;
  return result;
}

uint64_t static Config.PIMSDBLocation.getter()
{
  return sub_1D2F77028(&qword_1EBD5FB68, &qword_1EBD5FB50);
}

uint64_t sub_1D2F77028(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for Config()
{
  return &type metadata for Config;
}

void sub_1D2F7708C()
{
  qword_1EA6A0228 = (uint64_t)&unk_1F2A159C8;
}

id sub_1D2F771A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthModelWipePhoneCallGroundTruthMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroundTruthModelWipePhoneCallGroundTruthMigration()
{
  return self;
}

void sub_1D2F771FC(void *a1, void *a2, void *a3)
{
  uint64_t v4 = off_1E6970000;
  id v5 = objc_msgSend(a1, sel_entity);
  id v6 = objc_msgSend(v5, sel_name);

  if (v6)
  {
    uint64_t v7 = sub_1D3001B78();
    uint64_t v9 = v8;

    if (v7 == 0xD000000000000011 && v9 == 0x80000001D300F640)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v10 = sub_1D3002778();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0) {
        return;
      }
    }
    uint64_t v11 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    id v12 = objc_msgSend(a1, sel_primitiveValueForKey_, v11);

    if (v12)
    {
      sub_1D3002398();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v36, 0, sizeof(v36));
    }
    sub_1D2F776E4((uint64_t)v36, (uint64_t)v37);
    if (!v38)
    {
      sub_1D2F0BEDC((uint64_t)v37);
      return;
    }
    if (swift_dynamicCast())
    {
      uint64_t v14 = v34;
      id v13 = v35;
      if (qword_1EA698040 != -1) {
LABEL_42:
      }
        swift_once();
      char v15 = sub_1D2FF7514(v14, (uint64_t)v13, (void *)qword_1EA6A0228);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        id v16 = objc_msgSend(a2, sel_destinationEntityName);
        if (v16)
        {
          uint64_t v17 = v16;
          id v18 = self;
          id v19 = objc_msgSend(a3, sel_destinationContext);
          id v13 = objc_msgSend(v18, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v17, v19);

          id v20 = [v13 (SEL)v4[240]];
          id v21 = objc_msgSend(v20, sel_attributesByName);

          sub_1D2F7774C();
          uint64_t v14 = sub_1D3001A88();

          uint64_t v33 = v14 + 64;
          uint64_t v22 = 1 << *(unsigned char *)(v14 + 32);
          uint64_t v23 = -1;
          if (v22 < 64) {
            uint64_t v23 = ~(-1 << v22);
          }
          uint64_t v24 = v23 & *(void *)(v14 + 64);
          int64_t v39 = (unint64_t)(v22 + 63) >> 6;
          swift_bridgeObjectRetain();
          int64_t v25 = 0;
          while (1)
          {
            if (v24)
            {
              v24 &= v24 - 1;
            }
            else
            {
              int64_t v28 = v25 + 1;
              if (__OFADD__(v25, 1))
              {
                __break(1u);
                goto LABEL_42;
              }
              if (v28 >= v39) {
                goto LABEL_39;
              }
              uint64_t v29 = *(void *)(v33 + 8 * v28);
              ++v25;
              if (!v29)
              {
                int64_t v25 = v28 + 1;
                if (v28 + 1 >= v39) {
                  goto LABEL_39;
                }
                uint64_t v29 = *(void *)(v33 + 8 * v25);
                if (!v29)
                {
                  int64_t v25 = v28 + 2;
                  if (v28 + 2 >= v39) {
                    goto LABEL_39;
                  }
                  uint64_t v29 = *(void *)(v33 + 8 * v25);
                  if (!v29)
                  {
                    int64_t v25 = v28 + 3;
                    if (v28 + 3 >= v39) {
                      goto LABEL_39;
                    }
                    uint64_t v29 = *(void *)(v33 + 8 * v25);
                    if (!v29)
                    {
                      int64_t v25 = v28 + 4;
                      if (v28 + 4 >= v39) {
                        goto LABEL_39;
                      }
                      uint64_t v29 = *(void *)(v33 + 8 * v25);
                      if (!v29)
                      {
                        int64_t v30 = v28 + 5;
                        if (v30 >= v39)
                        {
LABEL_39:
                          swift_release();
                          objc_msgSend(a3, sel_associateSourceInstance_withDestinationInstance_forEntityMapping_, a1, v13, a2);

                          swift_bridgeObjectRelease();
                          return;
                        }
                        uint64_t v29 = *(void *)(v33 + 8 * v30);
                        if (!v29)
                        {
                          while (1)
                          {
                            int64_t v25 = v30 + 1;
                            if (__OFADD__(v30, 1)) {
                              break;
                            }
                            if (v25 >= v39) {
                              goto LABEL_39;
                            }
                            uint64_t v29 = *(void *)(v33 + 8 * v25);
                            ++v30;
                            if (v29) {
                              goto LABEL_37;
                            }
                          }
                          __break(1u);
                          return;
                        }
                        int64_t v25 = v30;
                      }
                    }
                  }
                }
              }
LABEL_37:
              uint64_t v24 = (v29 - 1) & v29;
            }
            swift_bridgeObjectRetain();
            uint64_t v26 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
            uint64_t v4 = (__CFString **)objc_msgSend(a1, sel_valueForKey_, v26);

            uint64_t v27 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
            swift_bridgeObjectRelease();
            objc_msgSend(v13, sel_setValue_forKey_, v4, v27);
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
}

uint64_t sub_1D2F776E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2F7774C()
{
  unint64_t result = qword_1EA6992F0;
  if (!qword_1EA6992F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6992F0);
  }
  return result;
}

uint64_t sub_1D2F77790(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for PluginLoadError(uint64_t a1)
{
  return sub_1D2F777B8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1D2F777B8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics15PluginLoadErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1D2F77790(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PluginLoadError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1D2F77790(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1D2F777B8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PluginLoadError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1D2F777B8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginLoadError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginLoadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D2F77948(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1D2F77960(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PluginLoadError()
{
  return &type metadata for PluginLoadError;
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.init()()
{
  return v0;
}

uint64_t sub_1D2F779A0(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(v1, sel_intent);
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    int v4 = (void *)v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1D3004380;
    id v6 = objc_msgSend(v4, sel_typeName);
    uint64_t v7 = sub_1D3001B78();
    uint64_t v9 = v8;

    uint64_t v10 = type metadata accessor for SetTaskAttributeFeature.EventType(0);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v9;
    *(void *)(v5 + 56) = v10;
    *(void *)(v5 + 64) = sub_1D2F77CE8(&qword_1EA6992F8, (void (*)(uint64_t))type metadata accessor for SetTaskAttributeFeature.EventType);
    *(void *)(v5 + 32) = v11;
    LOBYTE(v10) = objc_msgSend(v1, sel__donatedBySiri);
    uint64_t v12 = type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(0);
    uint64_t v13 = swift_allocObject();
    *(unsigned char *)(v13 + 16) = v10;
    *(void *)(v5 + 96) = v12;
    *(void *)(v5 + 104) = sub_1D2F77CE8(&qword_1EA699300, (void (*)(uint64_t))type metadata accessor for SetTaskAttributeFeature.DonatedBySiri);
    *(void *)(v5 + 72) = v13;
    id v14 = objc_msgSend(v4, sel_taskTitle);
    if (v14)
    {
      char v15 = v14;
      id v16 = objc_msgSend(v14, sel_spokenPhrase);
      uint64_t v17 = sub_1D3001B78();
      uint64_t v19 = v18;

      uint64_t v20 = type metadata accessor for SetTaskAttributeFeature.TaskContents(0);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v17;
      *(void *)(v21 + 24) = v19;
      uint64_t v5 = (uint64_t)sub_1D2F27F00((void *)1, 3, 1, (void *)v5);
      uint64_t v24 = v20;
      uint64_t v25 = sub_1D2F77CE8(&qword_1EA699308, (void (*)(uint64_t))type metadata accessor for SetTaskAttributeFeature.TaskContents);
      *(void *)&long long v23 = v21;
      *(void *)(v5 + 16) = 3;
      sub_1D2F0BE68(&v23, v5 + 112);
    }
    else
    {
    }
  }
  else
  {

    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t type metadata accessor for SetTaskAttributeFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699310);
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.deinit()
{
  return v0;
}

uint64_t INSetTaskAttributeIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699320);
}

uint64_t sub_1D2F77CAC(uint64_t *a1)
{
  return sub_1D2F77F4C(a1, (void (*)(void))type metadata accessor for SetTaskAttributeFeature.EventType);
}

uint64_t sub_1D2F77CC4(uint64_t *a1)
{
  return sub_1D2F77FA0(a1, (void (*)(void))type metadata accessor for SetTaskAttributeFeature.EventType);
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2F77CE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SetTaskAttributeFeature.TaskContents(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699330);
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t SetTaskAttributeFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F77E50(char *a1)
{
  char v1 = *a1;
  type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F77E88(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for SetTaskAttributeFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t SetTaskAttributeFeature.TaskContents.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t SetTaskAttributeFeature.TaskContents.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F77F34(uint64_t *a1)
{
  return sub_1D2F77F4C(a1, (void (*)(void))type metadata accessor for SetTaskAttributeFeature.TaskContents);
}

uint64_t sub_1D2F77F4C(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2F77F88(uint64_t *a1)
{
  return sub_1D2F77FA0(a1, (void (*)(void))type metadata accessor for SetTaskAttributeFeature.TaskContents);
}

uint64_t sub_1D2F77FA0(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t type metadata accessor for INSetTaskAttributeIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for INSetTaskAttributeIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for INSetTaskAttributeIntentFeatureExtractor);
}

uint64_t dispatch thunk of INSetTaskAttributeIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INSetTaskAttributeIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

ValueMetadata *type metadata accessor for SetTaskAttributeFeature()
{
  return &type metadata for SetTaskAttributeFeature;
}

void *sub_1D2F780A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v11, a1, a3);
  uint64_t result = (void *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a4;
  result[5] = v10;
  *a5 = &unk_1EA699370;
  a5[1] = result;
  return result;
}

uint64_t sub_1D2F78154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F781C8, 0, 0);
}

uint64_t sub_1D2F781C8()
{
  swift_beginAccess();
  int v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *int v1 = v0;
  v1[1] = sub_1D2F78278;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return MEMORY[0x1F4187C78](v3, v4, v2);
}

uint64_t sub_1D2F78278()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D2F4E1E8, 0, 0);
  }
  else
  {
    swift_endAccess();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

void *sub_1D2F783B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v11, a1, a3);
  uint64_t result = (void *)swift_allocObject();
  result[2] = a2;
  result[3] = a3;
  result[4] = a4;
  result[5] = v10;
  *a5 = &unk_1EA699360;
  a5[1] = result;
  return result;
}

uint64_t sub_1D2F78464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F784D8, 0, 0);
}

uint64_t sub_1D2F784D8()
{
  swift_beginAccess();
  sub_1D3002308();
  swift_endAccess();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AnyAsyncIterator.next()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D2F7859C, 0, 0);
}

uint64_t sub_1D2F7859C()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))(**(void **)(v0 + 24) + ***(int ***)(v0 + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D2F78670;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2);
}

uint64_t sub_1D2F78670()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D2F78764(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1D2F1C2F4;
  return MEMORY[0x1F4188298](sub_1D2F7859C, 0, 0);
}

uint64_t sub_1D2F78810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

void *sub_1D2F78818(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1D2F78848()
{
  return swift_release();
}

void *sub_1D2F78850(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1D2F7888C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s28SiriPrivateLearningAnalytics13LocaleControlVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D2F78908(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyAsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2F7895C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D2F78994(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1D2F1D1A0;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 64) = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F784D8, 0, 0);
}

uint64_t sub_1D2F78A64(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_1D2F1C2F4;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 64) = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1D2F781C8, 0, 0);
}

id _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO24suggestionDomainMetadata0h10GenerationI0So0e14PLUSSuggestioniJ0CSgSo0elkI0V_tFZ_0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FA8]), sel_init);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_setSuggestionGenerationDomain_, a1);
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D3001918();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
    long long v5 = sub_1D30018F8();
    os_log_type_t v6 = sub_1D30020B8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v10 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      sub_1D2F09508(0xD000000000000035, 0x80000001D3010E10, &v10);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v5, v6, "PLUSSchemaEventConstructor.%s:  failed to create PLUS SELF event templates", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v8, -1, -1);
      MEMORY[0x1D942F2D0](v7, -1, -1);
    }

    return 0;
  }
  return v3;
}

id _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO35suggestionChangeDataCaptureMetadata10changeTypeSo0e10PLUSChangejkL0CSgSo0eojkN0V_tFZ_0(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F68]), sel_init);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_setOperationType_, a1);
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1D3001918();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
    long long v5 = sub_1D30018F8();
    os_log_type_t v6 = sub_1D30020B8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v10 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      sub_1D2F09508(0xD000000000000030, 0x80000001D3010DD0, &v10);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v5, v6, "PLUSSchemaMessageConstructor.%s:  failed to create PLUS SELF event templates", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v8, -1, -1);
      MEMORY[0x1D942F2D0](v7, -1, -1);
    }

    return 0;
  }
  return v3;
}

ValueMetadata *type metadata accessor for PLUSSchemaMessageConstructor()
{
  return &type metadata for PLUSSchemaMessageConstructor;
}

id PBCodable.wrapAsAnyEvent(time:turnID:)(uint64_t a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  id v5 = objc_allocWithZone(MEMORY[0x1E4FA1288]);
  id v6 = v1;
  id v7 = objc_msgSend(v5, sel_init);
  uint64_t v8 = v7;
  if (v7)
  {
    id v9 = v7;
    uint64_t v10 = (void *)sub_1D3001048();
    id v11 = (id)AFTurnIdentifierGetBytes();

    if (v11)
    {
      uint64_t v12 = sub_1D3000F68();
      unint64_t v14 = v13;

      id v11 = (id)sub_1D3000F58();
      sub_1D2F0D1CC(v12, v14);
    }
    objc_msgSend(v9, sel_setTurnID_, v11);

    if (a1 < 0)
    {
      __break(1u);
      goto LABEL_24;
    }
    objc_msgSend(v9, sel_setEventGeneratedRelativeToBootTimeTimestampNs_, a1);
  }
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA1280]), sel_init);
  if (!v15)
  {
    if (qword_1EBD63A48 == -1)
    {
LABEL_11:
      uint64_t v19 = sub_1D3001918();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EBD65778);
      uint64_t v20 = sub_1D30018F8();
      os_log_type_t v21 = sub_1D30020B8();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_1D2F05000, v20, v21, "Failed to create a SISchemaClientEvent", v22, 2u);
        MEMORY[0x1D942F2D0](v22, -1, -1);

LABEL_17:
        return 0;
      }

LABEL_20:
      return 0;
    }
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  id v16 = v15;
  objc_msgSend(v15, sel_setEventType_, v4);
  objc_msgSend(v16, sel_setEventMetadata_, v8);
  id v17 = objc_msgSend(v16, sel_wrapAsAnyEvent);
  if (!v17)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1D3001918();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EBD65778);
    uint64_t v20 = sub_1D30018F8();
    os_log_type_t v24 = sub_1D30020B8();
    if (os_log_type_enabled(v20, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1D2F05000, v20, v24, "Failed to wrap SISchemaClientEvent as SISchemaAnyEvent", v25, 2u);
      MEMORY[0x1D942F2D0](v25, -1, -1);

      goto LABEL_17;
    }

    goto LABEL_20;
  }
  id v18 = v17;

  return v18;
}

uint64_t DismissalFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DismissalFeatureExtractor.init()()
{
  return v0;
}

uint64_t DismissalTimestampFeature.__allocating_init(value:)(double a1)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a1;
  return result;
}

uint64_t DismissalReasonFeature.__allocating_init(value:)(int a1)
{
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = a1;
  return result;
}

void sub_1D2F79278()
{
  qword_1EBD612C8 = (uint64_t)&unk_1F2A15A08;
}

uint64_t static DismissalFeatureExtractor.userManualDismissalReasons.getter()
{
  return sub_1D2F793D0(&qword_1EBD612D8);
}

void sub_1D2F792B0()
{
  qword_1EBD612E0 = (uint64_t)&unk_1F2A15A38;
}

uint64_t static DismissalFeatureExtractor.userDismissalReasonsCarPlay.getter()
{
  return sub_1D2F793D0(&qword_1EBD612F0);
}

uint64_t sub_1D2F792E8()
{
  if (qword_1EBD612D8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBD612C8;
  if (qword_1EBD612F0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t result = sub_1D2F9D0E4(v1);
  qword_1EBD612F8 = v0;
  return result;
}

uint64_t static DismissalFeatureExtractor.allUserDismissalEvents.getter()
{
  return sub_1D2F793D0(&qword_1EBD61308);
}

uint64_t sub_1D2F793D0(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t DismissalFeatureExtractor.deinit()
{
  return v0;
}

uint64_t DismissalFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *sub_1D2F79434(uint64_t *a1)
{
  return sub_1D2F79768(*a1);
}

uint64_t DismissalTimestampFeature.init(value:)(double a1)
{
  uint64_t result = v1;
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t DismissalTimestampFeature.__allocating_init(value:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A38);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v4 + 16) = a1;
  }
  return v5;
}

uint64_t DismissalTimestampFeature.init(value:)(uint64_t a1, char a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A38);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v2 + 16) = a1;
  }
  return v2;
}

uint64_t DismissalTimestampFeature.deinit()
{
  return v0;
}

uint64_t DismissalTimestampFeature.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F79528(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for DismissalTimestampFeature(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F79560(uint64_t *a1)
{
  uint64_t v1 = *a1;
  char v2 = *((unsigned char *)a1 + 8);
  type metadata accessor for DismissalTimestampFeature(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698A38);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v3 + 16) = v1;
  }
  return v4;
}

uint64_t DismissalReasonFeature.init(value:)(int a1)
{
  *(_DWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t DismissalReasonFeature.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if ((a1 & 0x100000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699378);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_DWORD *)(v2 + 16) = a1;
  }
  return v3;
}

uint64_t DismissalReasonFeature.init(value:)(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699378);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_DWORD *)(v1 + 16) = a1;
  }
  return v1;
}

uint64_t DismissalReasonFeature.deinit()
{
  return v0;
}

uint64_t DismissalReasonFeature.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F796B8(int *a1)
{
  int v1 = *a1;
  type metadata accessor for DismissalReasonFeature(0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F796F0(int *a1)
{
  int v1 = *a1;
  char v2 = *((unsigned char *)a1 + 4);
  type metadata accessor for DismissalReasonFeature(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699378);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(_DWORD *)(v3 + 16) = v1;
  }
  return v4;
}

void *sub_1D2F79768(uint64_t a1)
{
  uint64_t v4 = a1;
  *(void *)&long long v59 = MEMORY[0x1E4FBC860];
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      char v2 = (void *)a1;
    }
    else {
      char v2 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        uint64_t v6 = 0;
        uint64_t v57 = v4;
        unint64_t v58 = v4 & 0xC000000000000001;
        id v7 = off_1E6970000;
        uint64_t v8 = off_1E6970000;
        unint64_t v9 = 0x1E4FA1000uLL;
        while (1)
        {
          id v10 = v58 ? (id)MEMORY[0x1D942E3A0](v6, v4) : *(id *)(v4 + 8 * v6 + 32);
          id v11 = v10;
          if ([v10 (SEL)v7[254]] != 6) {
            break;
          }
          id v12 = [v11 (SEL)v8[262]];
          if (v12)
          {
            uint64_t v13 = sub_1D3000F68();
            unint64_t v15 = v14;

            id v12 = (id)sub_1D3000F58();
            sub_1D2F0D1CC(v13, v15);
          }
          id v16 = objc_msgSend(objc_allocWithZone(*(Class *)(v9 + 728)), sel_initWithData_, v12);

          id v17 = objc_msgSend(v16, sel_event);
          if (v17) {
            goto LABEL_16;
          }

LABEL_6:
          if (v5 == ++v6)
          {
            uint64_t v32 = swift_bridgeObjectRelease();
            unint64_t v33 = v59;
            goto LABEL_34;
          }
        }
        id v17 = v11;
LABEL_16:
        unint64_t v18 = sub_1D2F2B808();
        [v17 (SEL)v7[254]];
        uint64_t v19 = sub_1D30021F8();
        if (v19 && v18 == v19)
        {
          id v20 = [v17 (SEL)v8[262]];
          if (v20)
          {
            os_log_type_t v21 = v20;
            uint64_t v22 = sub_1D3000F68();
            uint64_t v23 = v7;
            unint64_t v25 = v24;

            id v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            uint64_t v27 = (void *)sub_1D3000F58();
            uint64_t v28 = v22;
            uint64_t v4 = v57;
            unint64_t v29 = v25;
            id v7 = v23;
            sub_1D2F0D1CC(v28, v29);
          }
          else
          {
            id v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            uint64_t v27 = 0;
          }
          id v30 = objc_msgSend(v26, sel_initWithData_, v27);

          if (v30)
          {
            self;
            uint64_t v31 = swift_dynamicCastObjCClass();

            uint64_t v8 = off_1E6970000;
            unint64_t v9 = 0x1E4FA1000;
            if (v31)
            {
              MEMORY[0x1D942DCC0]();
              if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1D3001E28();
              }
              sub_1D3001E68();
              sub_1D3001DE8();
            }
            else
            {
            }
          }
          else
          {

            uint64_t v8 = off_1E6970000;
            unint64_t v9 = 0x1E4FA1000;
          }
        }
        else
        {
        }
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_69;
    }
  }
  uint64_t v32 = swift_bridgeObjectRelease();
  unint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_34:
  *(void *)&long long v59 = v33;
  if (v33 >> 62) {
    goto LABEL_67;
  }
  unint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v34)
  {
    while (!__OFSUB__(v34--, 1))
    {
      if ((v33 & 0xC000000000000001) != 0)
      {
        id v36 = (id)MEMORY[0x1D942E3A0](v34, v33);
      }
      else
      {
        if ((v34 & 0x8000000000000000) != 0) {
          goto LABEL_65;
        }
        if (v34 >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_66;
        }
        id v36 = *(id *)(v33 + 32 + 8 * v34);
      }
      unint64_t v37 = v36;
      id v38 = objc_msgSend(v36, sel_uiStateTransition);
      if (v38)
      {
        int64_t v39 = v38;
        id v40 = objc_msgSend(v38, sel_dismissed);

        if (v40)
        {
          objc_msgSend(v40, sel_dismissalReason);

          goto LABEL_48;
        }
      }

      if (!v34) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_1D30025A8();
    uint64_t v32 = swift_bridgeObjectRelease();
  }
LABEL_48:
  MEMORY[0x1F4188790](v32);
  v56[2] = &v59;
  int v1 = sub_1D2F8F1D0((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1D2F79EA8, (uint64_t)v56, v34, v41);
  swift_bridgeObjectRelease();
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if ((objc_msgSend(v1, sel_hasDeviceDynamicContext) & 1) == 0
    || (getEventTimestampFromContext(from:context:)(v1, v1), (v43 & 1) != 0))
  {
    char v2 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v44 = v42;
    uint64_t v45 = type metadata accessor for DismissalTimestampFeature(0);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v44;
    char v2 = sub_1D2F27F00(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v48 = v2[2];
    unint64_t v47 = v2[3];
    if (v48 >= v47 >> 1) {
      char v2 = sub_1D2F27F00((void *)(v47 > 1), v48 + 1, 1, v2);
    }
    uint64_t v60 = v45;
    uint64_t v61 = sub_1D2F79EEC(&qword_1EA699390, (void (*)(uint64_t))type metadata accessor for DismissalTimestampFeature);
    *(void *)&long long v59 = v46;
    v2[2] = v48 + 1;
    sub_1D2F0BE68(&v59, (uint64_t)&v2[5 * v48 + 4]);
  }
  id v49 = objc_msgSend(v1, sel_uiStateTransition);
  if (v49)
  {
    unint64_t v50 = v49;
    id v51 = objc_msgSend(v49, sel_dismissed);

    if (v51)
    {
      unsigned int v52 = objc_msgSend(v51, sel_dismissalReason);

      uint64_t v5 = type metadata accessor for DismissalReasonFeature(0);
      uint64_t v3 = swift_allocObject();
      *(_DWORD *)(v3 + 16) = v52;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_58:
        unint64_t v54 = v2[2];
        unint64_t v53 = v2[3];
        if (v54 >= v53 >> 1) {
          char v2 = sub_1D2F27F00((void *)(v53 > 1), v54 + 1, 1, v2);
        }
        uint64_t v60 = v5;
        uint64_t v61 = sub_1D2F79EEC(&qword_1EBD61268, (void (*)(uint64_t))type metadata accessor for DismissalReasonFeature);
        *(void *)&long long v59 = v3;
        v2[2] = v54 + 1;
        sub_1D2F0BE68(&v59, (uint64_t)&v2[5 * v54 + 4]);
        goto LABEL_61;
      }
LABEL_69:
      char v2 = sub_1D2F27F00(0, v2[2] + 1, 1, v2);
      goto LABEL_58;
    }
  }
LABEL_61:

  return v2;
}

uint64_t type metadata accessor for DismissalFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for DismissalFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DismissalFeatureExtractor);
}

uint64_t dispatch thunk of DismissalFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DismissalFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t type metadata accessor for DismissalTimestampFeature(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699380);
}

uint64_t type metadata accessor for DismissalReasonFeature(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61270);
}

unint64_t sub_1D2F79EA8@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1D2F8F15C(*a1, **(void **)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1D2F79EEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1D2F79F88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthModelV1toV2CoreDataMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroundTruthModelV1toV2CoreDataMigration()
{
  return self;
}

uint64_t Conversation.init(_:)@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61548);
  uint64_t v4 = (void *)swift_allocObject();
  v4[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1D30025A8();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  unint64_t v7 = sub_1D2F7A0C4();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v6;
  v4[2] = v5;
  v4[3] = v7;
  v4[4] = result;
  v4[5] = v7;
  *a2 = v4;
  return result;
}

unint64_t sub_1D2F7A0C4()
{
  unint64_t result = qword_1EBD61550;
  if (!qword_1EBD61550)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD61560);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD61550);
  }
  return result;
}

uint64_t Conversation.allTurnsChronologically.getter()
{
  return swift_retain();
}

uint64_t sub_1D2F7A12C()
{
  uint64_t v0 = sub_1D30010A8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v141 = (char *)&v140 - v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v154 = (char *)&v140 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v142 = (char *)&v140 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v148 = (uint64_t)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v140 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v143 = (char *)&v140 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v140 - v19;
  MEMORY[0x1F4188790](v18);
  v155 = (char *)&v140 - v21;
  uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v23 = (void *)sub_1D2F1F418(MEMORY[0x1E4FBC860]);
  swift_retain();
  uint64_t v24 = sub_1D3002538();
  swift_release();
  swift_retain();
  uint64_t v149 = v24;
  sub_1D3002608();
  uint64_t v25 = v162;
  if (!v162)
  {
LABEL_89:
    uint64_t v153 = v23;
    swift_release_n();
    int64_t v122 = v22[2];
    uint64_t v123 = MEMORY[0x1E4FBC860];
    if (v122)
    {
      uint64_t v162 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1D2F0A11C(0, v122, 0);
      uint64_t v124 = 0;
      uint64_t v123 = v162;
      do
      {
        unint64_t v125 = v22;
        unint64_t v126 = v22[v124 + 4];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61548);
        uint64_t v127 = (void *)swift_allocObject();
        v127[6] = v126;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
        uint64_t v128 = swift_allocObject();
        *(void *)(v128 + 16) = 0;
        if (v126 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v129 = sub_1D30025A8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v129 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        unint64_t v130 = sub_1D2F7A0C4();
        uint64_t v131 = swift_allocObject();
        *(void *)(v131 + 16) = v129;
        v127[2] = v128;
        v127[3] = v130;
        v127[4] = v131;
        v127[5] = v130;
        uint64_t v162 = v123;
        unint64_t v133 = *(void *)(v123 + 16);
        unint64_t v132 = *(void *)(v123 + 24);
        if (v133 >= v132 >> 1)
        {
          sub_1D2F0A11C(v132 > 1, v133 + 1, 1);
          uint64_t v123 = v162;
        }
        ++v124;
        *(void *)(v123 + 16) = v133 + 1;
        *(void *)(v123 + 8 * v133 + 32) = v127;
        uint64_t v22 = v125;
      }
      while (v122 != v124);
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699398);
    uint64_t v134 = (void *)swift_allocObject();
    v134[6] = v123;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
    uint64_t v135 = swift_allocObject();
    *(void *)(v135 + 16) = 0;
    unint64_t v136 = sub_1D2F7A0C4();
    uint64_t v137 = *(void *)(v123 + 16);
    uint64_t v138 = swift_allocObject();
    *(void *)(v138 + 16) = v137;
    v134[2] = v135;
    v134[3] = v136;
    v134[4] = v138;
    v134[5] = v136;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v134;
  }
  uint64_t v159 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
  uint64_t v160 = (uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48);
  uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))(v1 + 32);
  uint64_t v145 = v1;
  id v151 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v152 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  long long v146 = xmmword_1D3005C00;
  uint64_t v156 = v0;
  uint64_t v158 = v20;
  os_log_t v147 = v4;
  uint64_t v140 = v15;
  while (2)
  {
    uint64_t v153 = v23;
    uint64_t v157 = v25;
    unint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1D30025A8();
      uint64_t v28 = (uint64_t)v154;
      if (!v27)
      {
LABEL_60:
        uint64_t v64 = 1;
        uint64_t v65 = v153;
        goto LABEL_61;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v28 = (uint64_t)v154;
      if (!v27) {
        goto LABEL_60;
      }
    }
    id v150 = v22;
    unint64_t v29 = 0;
    unint64_t v30 = v26 & 0xC000000000000001;
    while (1)
    {
      if (v30)
      {
        swift_bridgeObjectRetain();
        id v31 = (id)MEMORY[0x1D942E3A0](v29, v26);
      }
      else
      {
        uint64_t v32 = *(void **)(v26 + 8 * v29 + 32);
        swift_bridgeObjectRetain();
        id v31 = v32;
      }
      unint64_t v33 = v31;
      if (objc_msgSend(v31, sel_anyEventType, v140) == 6)
      {
        id v34 = objc_msgSend(v33, sel_payload);
        if (v34)
        {
          char v35 = v34;
          uint64_t v36 = sub_1D3000F68();
          unint64_t v38 = v37;

          int64_t v39 = (void *)sub_1D3000F58();
          sub_1D2F0D1CC(v36, v38);
        }
        else
        {
          int64_t v39 = 0;
        }
        id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v39);

        id v40 = objc_msgSend(v41, sel_event);
        id v20 = v158;
        if (!v40) {
          goto LABEL_32;
        }
      }
      else
      {
        id v40 = v33;
      }
      unint64_t v42 = sub_1D2F2B808();
      objc_msgSend(v40, sel_anyEventType);
      uint64_t v43 = sub_1D30021F8();
      if (!v43 || v42 != v43) {
        goto LABEL_31;
      }
      id v44 = objc_msgSend(v40, sel_payload);
      if (v44)
      {
        uint64_t v45 = sub_1D3000F68();
        unint64_t v47 = v46;

        id v48 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        id v44 = (id)sub_1D3000F58();
        unint64_t v49 = v47;
        uint64_t v0 = v156;
        sub_1D2F0D1CC(v45, v49);
      }
      else
      {
        id v48 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      }
      id v50 = objc_msgSend(v48, sel_initWithData_, v44);

      if (!v50) {
        goto LABEL_30;
      }
      self;
      id v51 = (void *)swift_dynamicCastObjCClass();

      if (!v51)
      {
        id v40 = v50;
LABEL_30:
        id v20 = v158;
LABEL_31:

LABEL_32:
        (*v159)(v20, 1, 1, v0);
        swift_bridgeObjectRelease();
        id v50 = v33;
        goto LABEL_33;
      }
      id v52 = objc_msgSend(v51, sel_clientConversationTrace);
      if (v52
        && (unint64_t v53 = v52,
            id v54 = objc_msgSend(v52, sel_previousTurnID),
            v53,
            v54))
      {
        uint64_t v55 = sub_1D3000F68();
        unint64_t v57 = v56;

        uint64_t v58 = (uint64_t)v158;
        sub_1D2F587AC(v55, v57, (uint64_t)v158);
        uint64_t v59 = v55;
        id v20 = (char *)v58;
        unint64_t v60 = v57;
        uint64_t v0 = v156;
        sub_1D2F0D1CC(v59, v60);
      }
      else
      {
        id v20 = v158;
        (*v159)(v158, 1, 1, v0);
      }
      swift_bridgeObjectRelease();

LABEL_33:
      uint64_t v61 = *v160;
      int v62 = (*v160)(v20, 1, v0);
      sub_1D2F0D16C((uint64_t)v20);
      if (v62 != 1) {
        break;
      }
      unint64_t v63 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
        goto LABEL_100;
      }
      ++v29;
      if (v63 == v27) {
        goto LABEL_38;
      }
    }
    if (v27 == v29)
    {
LABEL_38:
      uint64_t v64 = 1;
      uint64_t v22 = v150;
      uint64_t v65 = v153;
      uint64_t v28 = (uint64_t)v154;
      goto LABEL_61;
    }
    uint64_t v65 = v153;
    if (v30)
    {
      id v66 = (id)MEMORY[0x1D942E3A0](v29, v26);
      goto LABEL_44;
    }
    if ((v29 & 0x8000000000000000) != 0) {
      goto LABEL_105;
    }
    if (v29 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_106;
    }
    id v66 = *(id *)(v26 + 8 * v29 + 32);
LABEL_44:
    uint64_t v67 = v66;
    unsigned int v68 = objc_msgSend(v66, sel_anyEventType);
    uint64_t v22 = v150;
    if (v68 == 6)
    {
      id v69 = objc_msgSend(v67, sel_payload);
      if (v69)
      {
        uint64_t v70 = sub_1D3000F68();
        unint64_t v72 = v71;

        id v69 = (id)sub_1D3000F58();
        sub_1D2F0D1CC(v70, v72);
      }
      id v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v69);

      id v74 = objc_msgSend(v73, sel_event);
      if (!v74)
      {
LABEL_54:
        uint64_t v82 = (uint64_t)v143;
        (*v159)(v143, 1, 1, v0);
        goto LABEL_57;
      }
    }
    else
    {
      id v74 = v67;
    }
    id v75 = (void *)sub_1D2F9B024();

    if (!v75) {
      goto LABEL_54;
    }
    id v76 = objc_msgSend(v75, sel_clientConversationTrace);
    if (v76
      && (unint64_t v77 = v76,
          id v78 = objc_msgSend(v76, sel_previousTurnID),
          v77,
          v78))
    {
      uint64_t v79 = sub_1D3000F68();
      unint64_t v81 = v80;

      uint64_t v82 = (uint64_t)v143;
      sub_1D2F587AC(v79, v81, (uint64_t)v143);
      unint64_t v83 = v81;
      uint64_t v0 = v156;
      sub_1D2F0D1CC(v79, v83);
    }
    else
    {
      uint64_t v82 = (uint64_t)v143;
      (*v159)(v143, 1, 1, v0);
    }

    uint64_t v67 = v75;
LABEL_57:

    uint64_t v84 = (uint64_t)v140;
    sub_1D2F61448(v82, (uint64_t)v140);
    int v85 = v61((char *)v84, 1, v0);
    uint64_t v28 = (uint64_t)v154;
    if (v85 == 1) {
      goto LABEL_107;
    }
    uint64_t v86 = v82;
    uint64_t v87 = *v144;
    id v88 = v142;
    (*v144)(v142, v84, v0);
    sub_1D2F0D16C(v86);
    v87(v155, (uint64_t)v88, v0);
    uint64_t v64 = 0;
LABEL_61:
    uint64_t v89 = (uint64_t)v155;
    (*v159)(v155, v64, 1, v0);
    swift_bridgeObjectRelease();
    uint64_t v90 = v89;
    uint64_t v91 = v148;
    sub_1D2F61448(v90, v148);
    if ((*v160)((char *)v91, 1, v0) == 1)
    {
      sub_1D2F0D16C(v91);
      uint64_t v92 = v0;
      uint64_t v93 = (uint64_t)v147;
      goto LABEL_74;
    }
    (*v144)((char *)v28, v91, v0);
    uint64_t v93 = (uint64_t)v147;
    if (!v65[2] || (v94 = sub_1D2F0DD14(v28), uint64_t v28 = (uint64_t)v154, (v95 & 1) == 0))
    {
      (*v151)(v28, v0);
      uint64_t v92 = v0;
LABEL_74:
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
      uint64_t v102 = swift_allocObject();
      *(_OWORD *)(v102 + 16) = v146;
      uint64_t v103 = v157;
      *(void *)(v102 + 32) = v157;
      uint64_t v162 = v102;
      sub_1D3001DE8();
      uint64_t v104 = v162;
      id v105 = *v152;
      (*v152)(v93, v103 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v92);
      uint64_t v106 = v22[2];
      swift_retain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v162 = (uint64_t)v65;
      unint64_t v109 = sub_1D2F0DD14(v93);
      uint64_t v110 = v65[2];
      BOOL v111 = (v108 & 1) == 0;
      uint64_t v112 = v110 + v111;
      if (__OFADD__(v110, v111))
      {
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
      char v113 = v108;
      if (v65[3] >= v112)
      {
        uint64_t v116 = v145;
        if (isUniquelyReferenced_nonNull_native)
        {
LABEL_80:
          uint64_t v23 = (void *)v162;
          if (v113)
          {
            *(void *)(*(void *)(v162 + 56) + 8 * v109) = v106;
          }
          else
          {
            *(void *)(v162 + 8 * (v109 >> 6) + 64) |= 1 << v109;
            v105(v23[6] + *(void *)(v116 + 72) * v109, v93, v156);
            *(void *)(v23[7] + 8 * v109) = v106;
            uint64_t v117 = v23[2];
            BOOL v118 = __OFADD__(v117, 1);
            uint64_t v119 = v117 + 1;
            if (v118) {
              goto LABEL_101;
            }
            v23[2] = v119;
          }
          swift_bridgeObjectRelease();
          uint64_t v0 = v156;
          (*v151)(v93, v156);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_1D2F28A94(0, v22[2] + 1, 1, v22);
          }
          unint64_t v121 = v22[2];
          unint64_t v120 = v22[3];
          if (v121 >= v120 >> 1) {
            uint64_t v22 = sub_1D2F28A94((void *)(v120 > 1), v121 + 1, 1, v22);
          }
          void v22[2] = v121 + 1;
          v22[v121 + 4] = v104;
          swift_release();
LABEL_4:
          sub_1D2F0D16C((uint64_t)v155);
          sub_1D3002608();
          uint64_t v25 = v162;
          id v20 = v158;
          if (!v162) {
            goto LABEL_89;
          }
          continue;
        }
        sub_1D2F1420C();
      }
      else
      {
        sub_1D2F10C60(v112, isUniquelyReferenced_nonNull_native);
        unint64_t v114 = sub_1D2F0DD14(v93);
        if ((v113 & 1) != (v115 & 1)) {
          goto LABEL_108;
        }
        unint64_t v109 = v114;
      }
      uint64_t v116 = v145;
      goto LABEL_80;
    }
    break;
  }
  unint64_t v96 = *(void *)(v65[7] + 8 * v94);
  if ((v96 & 0x8000000000000000) != 0)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v96 >= v22[2])
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  uint64_t v162 = v22[v96 + 4];
  swift_bridgeObjectRetain();
  uint64_t v97 = swift_retain();
  MEMORY[0x1D942DCC0](v97);
  if (*(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D3001E28();
  }
  sub_1D3001E68();
  sub_1D3001DE8();
  uint64_t v98 = v162;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v22 = sub_1D2FA8654(v22);
  }
  if (v96 < v22[2])
  {
    v22[v96 + 4] = v98;
    swift_bridgeObjectRelease();
    uint64_t v99 = (uint64_t)v141;
    (*v152)((uint64_t)v141, v157 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v0);
    char v100 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v161 = v65;
    sub_1D2FE5B24(v96, v99, v100);
    uint64_t v23 = v161;
    swift_bridgeObjectRelease();
    uint64_t v101 = *v151;
    (*v151)(v99, v0);
    swift_release();
    v101((uint64_t)v154, v0);
    goto LABEL_4;
  }
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Conversation()
{
  return &type metadata for Conversation;
}

ValueMetadata *type metadata accessor for ConversationTracing()
{
  return &type metadata for ConversationTracing;
}

uint64_t initializeWithCopy for MigrationStep(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for MigrationStep(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for MigrationStep(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  *(_OWORD *)(a1 + 16) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for MigrationStep(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MigrationStep(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MigrationStep()
{
  return &type metadata for MigrationStep;
}

uint64_t sub_1D2F7B1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  sub_1D2F621C8();
  if ((sub_1D30022B8() & 1) == 0) {
    return 0;
  }
  unsigned int v6 = sub_1D30022B8() & (v3 == v5);
  if (v2 == v4) {
    return v6;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for PLError()
{
  return &type metadata for PLError;
}

uint64_t sub_1D2F7B294()
{
  return 0x726F7272454C5028;
}

uint64_t sub_1D2F7B304()
{
  sub_1D2F7B4AC(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyBiomeEvent()
{
  return self;
}

uint64_t sub_1D2F7B364(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D2F7B378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1D2F7B38C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

unint64_t sub_1D2F7B3A0(char a1)
{
  unint64_t result = 0x6C616D726F6ELL;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for BiomeEventFilteringUtils()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for BiomeEventValue(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1D2F7B488(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1D2F7B488(id result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return result;
  }
  return result;
}

void destroy for BiomeEventValue(uint64_t a1)
{
}

void sub_1D2F7B4AC(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
}
  }

uint64_t assignWithCopy for BiomeEventValue(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1D2F7B488(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1D2F7B4AC(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for BiomeEventValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1D2F7B4AC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeEventValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeEventValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D2F7B5F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1D2F7B5FC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BiomeEventValue()
{
  return &type metadata for BiomeEventValue;
}

uint64_t sub_1D2F7B614(void *a1)
{
  id v2 = objc_msgSend(a1, sel_intentName);
  uint64_t v3 = sub_1D3001B78();
  uint64_t v5 = v4;

  sub_1D2F0BCB8(0, &qword_1EA6993A8);
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_1D3001B78();
  uint64_t v10 = v9;

  if (v3 == v8 && v5 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  id v14 = objc_msgSend(a1, sel_slotValue);
  uint64_t v15 = sub_1D3001B78();
  uint64_t v17 = v16;

  if (v15 == 0x746361746E6F63 && v17 == 0xE700000000000000) {
    goto LABEL_12;
  }
  char v18 = sub_1D3002778();
  swift_bridgeObjectRelease();
  if (v18) {
    return 1;
  }
  id v19 = objc_msgSend(a1, sel_slotValue);
  uint64_t v20 = sub_1D3001B78();
  uint64_t v22 = v21;

  if (v20 == 0x73746361746E6F63 && v22 == 0xE800000000000000)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 1;
  }
  char v23 = sub_1D3002778();
  swift_bridgeObjectRelease();
  return v23 & 1;
}

uint64_t sub_1D2F7B838(void *a1)
{
  id v2 = objc_msgSend(a1, sel_intentName);
  uint64_t v3 = sub_1D3001B78();
  uint64_t v5 = v4;

  sub_1D2F0BCB8(0, &qword_1EA6993A0);
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_1D3001B78();
  uint64_t v10 = v9;

  if (v3 == v8 && v5 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  id v14 = objc_msgSend(a1, sel_slotValue);
  uint64_t v15 = sub_1D3001B78();
  uint64_t v17 = v16;

  if (v15 == 0x6E65697069636572 && v17 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v18 = sub_1D3002778();
    swift_bridgeObjectRelease();
    return v18 & 1;
  }
}

uint64_t sub_1D2F7B9D8()
{
  unint64_t v0 = sub_1D3002638();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D2F7BA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D2F7BA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1D2F7BA50(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1D2F7BA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1D2F7BA78(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D2F7BA8C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699418);
  uint64_t v1 = sub_1D3001BC8();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D2F7BBE0(void **a1, void **a2)
{
  return sub_1D2F806F4(*a1, *a2);
}

uint64_t sub_1D2F7BBEC()
{
  return sub_1D2F7BA8C();
}

uint64_t sub_1D2F7BBF4()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F7BC3C()
{
  return sub_1D3002938();
}

uint64_t sub_1D2F7BC6C()
{
  return sub_1D3002968();
}

void *sub_1D2F7BCB0@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result >= 4uLL) {
    char v2 = 3;
  }
  else {
    char v2 = 0x2010003u >> (8 * *result);
  }
  *a2 = v2;
  return result;
}

void sub_1D2F7BCD8(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_1D2F7BCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = 0;
  uint64_t v7 = (void *)sub_1D2F23610(MEMORY[0x1E4FBC860]);
  uint64_t v47 = *(void *)(a3 + 16);
  if (v47)
  {
    uint64_t v42 = a1;
    uint64_t v43 = a2;
    id v44 = v3;
    uint64_t v46 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    uint64_t v45 = a3;
    while (v9 < *(void *)(a3 + 16))
    {
      sub_1D2F37950(v46 + 40 * v9, (uint64_t)v51);
      uint64_t v10 = v52;
      uint64_t v11 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        id v14 = (unsigned __int8 *)(v12 + 32);
        while (1)
        {
          unsigned __int8 v16 = *v14++;
          unsigned __int8 v15 = v16;
          sub_1D2F37950((uint64_t)v51, (uint64_t)&v49);
          sub_1D2F4E508((uint64_t)v8);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v48 = v7;
          unint64_t v19 = sub_1D2F0DFE4(v16);
          uint64_t v20 = v7[2];
          BOOL v21 = (v18 & 1) == 0;
          uint64_t v22 = v20 + v21;
          if (__OFADD__(v20, v21)) {
            break;
          }
          char v23 = v18;
          if (v7[3] >= v22)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1D2F144A0();
            }
          }
          else
          {
            sub_1D2F11070(v22, isUniquelyReferenced_nonNull_native);
            unint64_t v24 = sub_1D2F0DFE4(v15);
            if ((v23 & 1) != (v25 & 1)) {
              goto LABEL_36;
            }
            unint64_t v19 = v24;
          }
          uint64_t v7 = v48;
          swift_bridgeObjectRelease();
          if (v23)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v7[(v19 >> 6) + 8] |= 1 << v19;
            *(unsigned char *)(v7[6] + v19) = v15;
            *(void *)(v7[7] + 8 * v19) = MEMORY[0x1E4FBC860];
            uint64_t v26 = v7[2];
            uint64_t v27 = v26 + 1;
            BOOL v28 = __OFADD__(v26, 1);
            swift_bridgeObjectRetain();
            if (v28) {
              goto LABEL_34;
            }
            void v7[2] = v27;
          }
          uint64_t v29 = v7[7];
          swift_bridgeObjectRelease();
          unint64_t v30 = *(void **)(v29 + 8 * v19);
          char v31 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v29 + 8 * v19) = v30;
          if ((v31 & 1) == 0)
          {
            unint64_t v30 = sub_1D2F28BC4(0, v30[2] + 1, 1, v30);
            *(void *)(v29 + 8 * v19) = v30;
          }
          unint64_t v33 = v30[2];
          unint64_t v32 = v30[3];
          if (v33 >= v32 >> 1)
          {
            unint64_t v30 = sub_1D2F28BC4((void *)(v32 > 1), v33 + 1, 1, v30);
            *(void *)(v29 + 8 * v19) = v30;
          }
          void v30[2] = v33 + 1;
          sub_1D2F0BE68(&v49, (uint64_t)&v30[5 * v33 + 4]);
          uint64_t v8 = sub_1D2F71AA8;
          if (!--v13) {
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
        break;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      if (qword_1EBD60298 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1D3001918();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EBD5FDE0);
      sub_1D2F37950((uint64_t)v51, (uint64_t)&v49);
      char v35 = sub_1D30018F8();
      os_log_type_t v36 = sub_1D30020A8();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        id v48 = (void *)v38;
        *(_DWORD *)uint64_t v37 = 136315138;
        __swift_project_boxed_opaque_existential_1(&v49, v50);
        swift_getDynamicType();
        uint64_t v39 = sub_1D3002A28();
        *(void *)(v37 + 4) = sub_1D2F09508(v39, v40, (uint64_t *)&v48);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
        _os_log_impl(&dword_1D2F05000, v35, v36, "BiomeSiriEventScenarioProcessor Adding a filter: %s ", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v38, -1, -1);
        MEMORY[0x1D942F2D0](v37, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
      }

      a3 = v45;
      ++v9;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
      if (v9 == v47)
      {
        swift_bridgeObjectRelease();
        a2 = v43;
        uint64_t v3 = v44;
        a1 = v42;
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_36:
    uint64_t result = sub_1D30028B8();
    __break(1u);
  }
  else
  {
    uint64_t v8 = 0;
LABEL_32:
    v3[2] = a1;
    v3[3] = a3;
    v3[4] = v7;
    v3[5] = a2;
    sub_1D2F4E508((uint64_t)v8);
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1D2F7C170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30019A8();
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D3001A08();
  uint64_t v7 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a1;
  void v11[4] = a2;
  aBlock[4] = sub_1D2F80BF8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  uint64_t aBlock[3] = &block_descriptor_103;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1D30019D8();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1D2F81130(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v9, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  swift_release();
  return swift_release();
}

void sub_1D2F7C460(unint64_t a1, unint64_t a2, uint64_t *a3)
{
  if (qword_1EBD60298 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    uint64_t v6 = sub_1D3001918();
    uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBD5FDE0);
    uint64_t v8 = sub_1D30018F8();
    os_log_type_t v9 = sub_1D30020A8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1D2F05000, v8, v9, "BiomeSiriEventScenarioProcessor received a subscribe request", v10, 2u);
      MEMORY[0x1D942F2D0](v10, -1, -1);
    }

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      uint64_t v14 = sub_1D30018F8();
      os_log_type_t v18 = sub_1D30020A8();
      if (os_log_type_enabled(v14, v18))
      {
        unint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v19 = 0;
        _os_log_impl(&dword_1D2F05000, v14, v18, "Skipping BiomeSiriEventScenarioProcessor subscription, the scenario processor was deallocated", v19, 2u);
        MEMORY[0x1D942F2D0](v19, -1, -1);
      }
      goto LABEL_10;
    }
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = *(void *)(Strong + 48);
    uint64_t v14 = sub_1D30018F8();
    os_log_type_t v15 = sub_1D30020A8();
    BOOL v16 = os_log_type_enabled(v14, v15);
    if (v13)
    {
      if (!v16)
      {

        swift_release();
        return;
      }
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1D2F05000, v14, v15, "Skipping BiomeSiriEventScenarioProcessor subscription, the scenario processor is already subscribed", v17, 2u);
      MEMORY[0x1D942F2D0](v17, -1, -1);
      swift_release();
LABEL_10:

      return;
    }
    unint64_t v57 = a1;
    unint64_t v58 = a2;
    uint64_t v59 = a3;
    if (v16)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1D2F05000, v14, v15, "BiomeSiriEventScenarioProcessor is starting to subscribe to Biome streams", v20, 2u);
      MEMORY[0x1D942F2D0](v20, -1, -1);
    }

    uint64_t v21 = v12[5];
    uint64_t v22 = *(void *)(v21 + 64);
    uint64_t v61 = v21 + 64;
    uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
    uint64_t v24 = -1;
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    a1 = v24 & v22;
    unint64_t v25 = (unint64_t)(v23 + 63) >> 6;
    uint64_t v26 = (long long *)v72;
    unint64_t v52 = v25 - 1;
    uint64_t v27 = swift_bridgeObjectRetain();
    a2 = 0;
    int64_t v62 = v25;
    unint64_t v54 = v25 - 5;
    unint64_t v60 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v63 = v27;
    uint64_t v53 = v27 + 104;
    a3 = (uint64_t *)&unk_1EBD60040;
    if (a1) {
      break;
    }
LABEL_20:
    int64_t v31 = a2 + 1;
    if (!__OFADD__(a2, 1))
    {
      if (v31 >= v62)
      {
        unint64_t v33 = a2;
      }
      else
      {
        unint64_t v32 = *(void *)(v61 + 8 * v31);
        if (v32)
        {
LABEL_23:
          a1 = (v32 - 1) & v32;
          unint64_t v29 = __clz(__rbit64(v32)) + (v31 << 6);
          a2 = v31;
          goto LABEL_19;
        }
        unint64_t v33 = a2 + 1;
        if ((uint64_t)(a2 + 2) < v62)
        {
          unint64_t v32 = *(void *)(v61 + 8 * (a2 + 2));
          if (v32)
          {
            int64_t v31 = a2 + 2;
            goto LABEL_23;
          }
          unint64_t v33 = a2 + 2;
          if ((uint64_t)(a2 + 3) < v62)
          {
            unint64_t v32 = *(void *)(v61 + 8 * (a2 + 3));
            if (v32)
            {
              int64_t v31 = a2 + 3;
              goto LABEL_23;
            }
            int64_t v31 = a2 + 4;
            unint64_t v33 = a2 + 3;
            if ((uint64_t)(a2 + 4) < v62)
            {
              unint64_t v32 = *(void *)(v61 + 8 * v31);
              if (v32) {
                goto LABEL_23;
              }
              while (v54 != a2)
              {
                unint64_t v32 = *(void *)(v53 + 8 * a2++);
                if (v32)
                {
                  int64_t v31 = a2 + 4;
                  goto LABEL_23;
                }
              }
              unint64_t v33 = v52;
            }
          }
        }
      }
      a1 = 0;
      long long v69 = 0u;
      long long v70 = 0u;
      a2 = v33;
      long long v68 = 0u;
      goto LABEL_26;
    }
    __break(1u);
  }
  while (1)
  {
    unint64_t v28 = __clz(__rbit64(a1));
    a1 &= a1 - 1;
    unint64_t v29 = v28 | (a2 << 6);
LABEL_19:
    uint64_t v30 = *(void *)(v63 + 56);
    LOBYTE(v68) = *(unsigned char *)(*(void *)(v63 + 48) + v29);
    sub_1D2F37950(v30 + 40 * v29, (uint64_t)&v68 + 8);
LABEL_26:
    sub_1D2F80C04((uint64_t)&v68, (uint64_t)v71, a3);
    if (!v72[3]) {
      break;
    }
    unsigned __int8 v34 = v71[0];
    sub_1D2F0BE68(v26, (uint64_t)&v68);
    if (*(void *)(v12[4] + 16) && (sub_1D2F0DFE4(v34), (v35 & 1) != 0))
    {
      sub_1D2F37950((uint64_t)&v68, (uint64_t)v66);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v60 = sub_1D2F28D08(0, v60[2] + 1, 1, v60);
      }
      unint64_t v49 = v60[2];
      unint64_t v48 = v60[3];
      unint64_t v56 = v26;
      if (v49 >= v48 >> 1) {
        unint64_t v60 = sub_1D2F28D08((void *)(v48 > 1), v49 + 1, 1, v60);
      }
      void v60[2] = v49 + 1;
      sub_1D2F0BE68(v66, (uint64_t)&v60[5 * v49 + 4]);
      uint64_t v50 = v70;
      uint64_t v65 = *((void *)&v69 + 1);
      __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v57;
      *(unsigned char *)(v51 + 24) = v34;
      *(void *)(v51 + 32) = v58;
      *(void *)(v51 + 40) = v59;
      uint64_t v55 = *(void (**)(uint64_t (*)(void *, char), uint64_t, uint64_t, uint64_t))(v50 + 16);
      swift_retain();
      swift_retain();
      v55(sub_1D2F80CA8, v51, v65, v50);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v68);
      uint64_t v26 = v56;
      if (!a1) {
        goto LABEL_20;
      }
    }
    else
    {
      os_log_type_t v36 = sub_1D30018F8();
      os_log_type_t v37 = sub_1D30020A8();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v64 = a1;
        unint64_t v38 = a2;
        uint64_t v39 = a3;
        unint64_t v40 = v12;
        uint64_t v41 = v7;
        uint64_t v42 = v26;
        uint64_t v43 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        *(void *)&v66[0] = v44;
        *(_DWORD *)uint64_t v43 = 136315138;
        unsigned __int8 v67 = v34;
        uint64_t v45 = sub_1D3001BE8();
        *(void *)(v43 + 4) = sub_1D2F09508(v45, v46, (uint64_t *)v66);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v36, v37, "Skipping starting a Biome subscription for stream %s, no filters to process", (uint8_t *)v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v44, -1, -1);
        uint64_t v47 = v43;
        uint64_t v26 = v42;
        uint64_t v7 = v41;
        uint64_t v12 = v40;
        a3 = v39;
        a2 = v38;
        a1 = v64;
        MEMORY[0x1D942F2D0](v47, -1, -1);
      }

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v68);
      if (!a1) {
        goto LABEL_20;
      }
    }
  }
  swift_release();
  v12[6] = v60;
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1D2F7CB64(void *a1, char a2, uint64_t a3, int a4, void (*a5)(uint64_t), uint64_t a6)
{
  unint64_t v25 = a5;
  uint64_t v26 = a6;
  int v24 = a4;
  uint64_t v22 = a3;
  uint64_t v23 = a1;
  uint64_t v7 = sub_1D3001868();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x1F4188790](v7);
  os_log_type_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D3001898();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD5F7A0 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBD656F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_1D3001858();
  os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)os_log_type_t v15 = 0;
  BOOL v16 = sub_1D3001888();
  os_signpost_type_t v17 = sub_1D30021D8();
  os_signpost_id_t v18 = sub_1D3001848();
  _os_signpost_emit_with_name_impl(&dword_1D2F05000, v16, v17, v18, "processBiomeEventFilters", "", v15, 2u);
  sub_1D2F7CE08(v22, v24, v23, a2 & 1, v25);
  os_signpost_type_t v19 = sub_1D30021C8();
  os_signpost_id_t v20 = sub_1D3001848();
  _os_signpost_emit_with_name_impl(&dword_1D2F05000, v16, v19, v20, "processBiomeEventFilters", "", v15, 2u);

  MEMORY[0x1D942F2D0](v15, -1, -1);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1D2F7CE08(uint64_t a1, unsigned __int8 a2, void *a3, char a4, void (*a5)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1EBD60298 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D3001918();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBD5FDE0);
    uint64_t v12 = sub_1D30018F8();
    os_log_type_t v13 = sub_1D30020B8();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v16 = sub_1D3001BE8();
      sub_1D2F09508(v16, v17, &v26);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v12, v13, "Subscriber for %s is dropping a Biome event: the scenario processor does not exist", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v15, -1, -1);
      MEMORY[0x1D942F2D0](v14, -1, -1);
    }

    goto LABEL_14;
  }
  if (!*(void *)(Strong + 48))
  {
    if (qword_1EBD60298 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1D3001918();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBD5FDE0);
    os_signpost_type_t v19 = sub_1D30018F8();
    os_log_type_t v20 = sub_1D30020B8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v23 = sub_1D3001BE8();
      sub_1D2F09508(v23, v24, &v26);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v19, v20, "Subscriber for %s is dropping a Biome event: the scenario processor is not subscribed", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v22, -1, -1);
      MEMORY[0x1D942F2D0](v21, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
LABEL_14:
    uint64_t v10 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
  uint64_t v10 = sub_1D2F7D694(a3, a4 & 1, a2);
  swift_release();
LABEL_15:
  a5(v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F7D1AC()
{
  uint64_t v1 = sub_1D30019A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001A08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 16);
  aBlock[4] = sub_1D2F80B78;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  uint64_t aBlock[3] = &block_descriptor_94;
  os_log_type_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1D30019D8();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1D2F81130(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1D2F7D43C(uint64_t a1)
{
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD5FDE0);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "BiomeSiriEventScenarioProcessor received an unsubscribe request", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  uint64_t v6 = *(void *)(a1 + 48);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D30018F8();
    os_log_type_t v8 = sub_1D30020A8();
    if (os_log_type_enabled(v7, v8))
    {
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v9 = 0;
      _os_log_impl(&dword_1D2F05000, v7, v8, "BiomeSiriEventScenarioProcessor is starting to unsubscribe from Biome streams", v9, 2u);
      MEMORY[0x1D942F2D0](v9, -1, -1);
    }

    uint64_t v10 = *(void *)(v6 + 16);
    if (v10)
    {
      uint64_t v11 = v6 + 32;
      do
      {
        sub_1D2F37950(v11, (uint64_t)v20);
        uint64_t v12 = v21;
        uint64_t v13 = v22;
        __swift_project_boxed_opaque_existential_1(v20, v21);
        (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        v11 += 40;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(a1 + 24);
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = v14 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1D2F37950(v16, (uint64_t)v20);
        uint64_t v17 = v21;
        uint64_t v18 = v22;
        __swift_project_boxed_opaque_existential_1(v20, v21);
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        v16 += 40;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
  }
  *(void *)(a1 + 48) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F7D694(id a1, char a2, unsigned __int8 a3)
{
  if (a2)
  {
    uint64_t v6 = *(void *)(v3 + 32);
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1D2F0DFE4(a3), (v8 & 1) != 0))
    {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v9 = MEMORY[0x1E4FBC860];
    }
    sub_1D2F80B40(a1, 1);
    uint64_t v23 = sub_1D2F80A44(v9, (uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = a1;
    if (qword_1EBD60298 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D3001918();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBD5FDE0);
    id v12 = a1;
    id v13 = a1;
    uint64_t v14 = sub_1D30018F8();
    os_log_type_t v15 = sub_1D30020A8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v18 = sub_1D3001BE8();
      sub_1D2F09508(v18, v19, &v25);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      id v20 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
      uint64_t v21 = sub_1D3001BC8();
      sub_1D2F09508(v21, v22, &v25);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2F80B4C(a1, 0);
      sub_1D2F80B4C(a1, 0);
      _os_log_impl(&dword_1D2F05000, v14, v15, "Subscriber for %s reached completion, error=%s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v17, -1, -1);
      MEMORY[0x1D942F2D0](v16, -1, -1);
    }
    else
    {
      sub_1D2F80B4C(a1, 0);
      sub_1D2F80B4C(a1, 0);
    }

    uint64_t v23 = MEMORY[0x1E4FBC860];
  }
  sub_1D2F80B4C(a1, a2 & 1);
  return v23;
}

void sub_1D2F7D950(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  char v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v6, v7);
  if (v8)
  {
    if (qword_1EBD60298 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1D3001918();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EBD5FDE0);
    sub_1D2F37950((uint64_t)a1, (uint64_t)v20);
    sub_1D2F80B58(v8);
    sub_1D2F80B58(v8);
    id v10 = sub_1D30018F8();
    os_log_type_t v11 = sub_1D30020A8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v21 = v18;
      *(_DWORD *)uint64_t v12 = 136315394;
      sub_1D2F37950((uint64_t)v20, (uint64_t)v19);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FD68);
      uint64_t v13 = sub_1D3001BC8();
      v19[0] = sub_1D2F09508(v13, v14, &v21);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      *(_WORD *)(v12 + 12) = 2080;
      sub_1D2F80B58(v8);
      uint64_t v15 = sub_1D2F7BA8C();
      unint64_t v17 = v16;
      sub_1D2F80B68(v8);
      v19[0] = sub_1D2F09508(v15, v17, &v21);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2F80B68(v8);
      sub_1D2F80B68(v8);
      _os_log_impl(&dword_1D2F05000, v10, v11, "%s detected the Biome scenario %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v18, -1, -1);
      MEMORY[0x1D942F2D0](v12, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      sub_1D2F80B68(v8);
      sub_1D2F80B68(v8);
    }
  }
  *a3 = v8;
}

uint64_t sub_1D2F7DBF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BiomeSiriEventScenarioProcessor()
{
  return self;
}

unint64_t sub_1D2F7DC70()
{
  unint64_t result = sub_1D2F7DC98();
  qword_1EA6993B0 = result;
  *(void *)algn_1EA6993B8 = v1;
  qword_1EA6993C0 = v2;
  return result;
}

unint64_t sub_1D2F7DC98()
{
  sub_1D2F0BCB8(0, &qword_1EA6993A8);
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
  if (v0)
  {
    uint64_t v1 = v0;
    sub_1D2F0BCB8(0, &qword_1EA6993A0);
    id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_typeName);
    if (v2)
    {
      id v3 = v2;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA6982C8);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1D3004380;
      uint64_t v5 = sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD63380);
      *(void *)(v4 + 32) = v1;
      *(void *)(v4 + 88) = v5;
      *(void *)(v4 + 56) = v5;
      *(void *)(v4 + 64) = v3;
      id v6 = objc_allocWithZone(MEMORY[0x1E4F1CAD0]);
      uint64_t v7 = sub_1D3001DA8();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_initWithArray_, v7);
      goto LABEL_9;
    }
  }
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CAD0]), sel_init);
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D3001918();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBD5FDE0);
  uint64_t v7 = sub_1D30018F8();
  os_log_type_t v9 = sub_1D30020B8();
  if (os_log_type_enabled(v7, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v10 = 0;
    _os_log_impl(&dword_1D2F05000, v7, v9, "Cannot retrieve intent type names for INStartCallIntent / INSendMessageIntent", v10, 2u);
    MEMORY[0x1D942F2D0](v10, -1, -1);
  }
LABEL_9:

  return 0xD000000000000014;
}

unint64_t sub_1D2F7DEB0()
{
  unint64_t result = sub_1D2F7DED8();
  qword_1EA6993C8 = result;
  unk_1EA6993D0 = v1;
  qword_1EA6993D8 = v2;
  return result;
}

unint64_t sub_1D2F7DED8()
{
  unint64_t v3 = MEMORY[0x1E4FBC860];
  sub_1D3002508();
  _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  sub_1D30024E8();
  sub_1D3002518();
  sub_1D3002528();
  sub_1D30024F8();
  _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  sub_1D30024E8();
  sub_1D3002518();
  sub_1D3002528();
  sub_1D30024F8();
  _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  sub_1D30024E8();
  sub_1D3002518();
  sub_1D3002528();
  sub_1D30024F8();
  sub_1D2F088CC(v3);
  swift_release();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CAD0]);
  uint64_t v1 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_initWithArray_, v1);

  return 0xD000000000000013;
}

unint64_t sub_1D2F7E180()
{
  unint64_t result = sub_1D2F7E1A8();
  qword_1EA6993E0 = result;
  *(void *)algn_1EA6993E8 = v1;
  qword_1EA6993F0 = v2;
  return result;
}

unint64_t sub_1D2F7E1A8()
{
  sub_1D2F088E0((uint64_t)&unk_1F2A15B10);
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CAD0]);
  uint64_t v1 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_initWithArray_, v1);

  return 0xD000000000000012;
}

void sub_1D2F7E244(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001918();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBD5FDE0);
  uint64_t v7 = sub_1D30018F8();
  os_log_type_t v8 = sub_1D30020A8();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl(&dword_1D2F05000, v7, v8, "BiomeSiriExecutionStreamSubscriber subscribing", v9, 2u);
    MEMORY[0x1D942F2D0](v9, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_siriExecutionStream);
  id v11 = objc_msgSend(v10, sel_publisher);

  if (qword_1EA698050 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v13 = objc_msgSend(v11, sel_filterWithKeyPath_comparison_value_, v12, 3, qword_1EA6993C0);

  if (qword_1EA698058 != -1) {
    swift_once();
  }
  unint64_t v14 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v15 = objc_msgSend(v13, sel_filterWithKeyPath_comparison_value_, v14, 3, qword_1EA6993D8);

  if (qword_1EA698060 != -1) {
    swift_once();
  }
  unint64_t v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v17 = objc_msgSend(v15, sel_filterWithKeyPath_comparison_value_, v16, 3, qword_1EA6993F0);

  id v18 = objc_msgSend(v17, sel_subscribeOn_, *(void *)(v3 + 16));
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  uint64_t v28 = (void (*)(uint64_t))sub_1D2F80968;
  uint64_t v29 = v19;
  uint64_t v24 = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1D2F18864;
  uint64_t v27 = &block_descriptor_83;
  id v20 = _Block_copy(&v24);
  swift_retain();
  swift_release();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a2;
  uint64_t v28 = sub_1D2F80A1C;
  uint64_t v29 = v21;
  uint64_t v24 = MEMORY[0x1E4F143A8];
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_1D2F7E64C;
  uint64_t v27 = &block_descriptor_89;
  unint64_t v22 = _Block_copy(&v24);
  swift_retain();
  swift_release();
  id v23 = objc_msgSend(v18, sel_sinkWithCompletion_receiveInput_, v20, v22);
  _Block_release(v22);
  _Block_release(v20);
}

uint64_t sub_1D2F7E64C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1D2F7E6AC()
{
  uint64_t v1 = v0;
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD5FDE0);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "BiomeSiriExecutionStreamSubscriber unsubscribing", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  id v6 = objc_msgSend(self, sel_siriExecutionStream);
  id v7 = objc_msgSend(v6, sel_publisher);

  id v8 = objc_msgSend(v7, sel_subscribeOn_, *(void *)(v1 + 16));
  unint64_t v16 = nullsub_1;
  uint64_t v17 = 0;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  unint64_t v14 = sub_1D2F18864;
  id v15 = &block_descriptor_74;
  os_log_type_t v9 = _Block_copy(&v12);
  unint64_t v16 = nullsub_1;
  uint64_t v17 = 0;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  unint64_t v14 = sub_1D2F7E64C;
  id v15 = &block_descriptor_77;
  id v10 = _Block_copy(&v12);
  id v11 = objc_msgSend(v8, sel_sinkWithCompletion_receiveInput_, v9, v10);
  _Block_release(v10);
  _Block_release(v9);

  objc_msgSend(v11, sel_cancel);
}

uint64_t type metadata accessor for BiomeSiriExecutionStreamSubscriber()
{
  return self;
}

void sub_1D2F7E924(uint64_t a1, uint64_t a2)
{
}

void sub_1D2F7E948()
{
}

void sub_1D2F7E96C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001918();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBD5FDE0);
  id v7 = sub_1D30018F8();
  os_log_type_t v8 = sub_1D30020A8();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl(&dword_1D2F05000, v7, v8, "BiomeSiriUIStreamSubscriber subscribing", v9, 2u);
    MEMORY[0x1D942F2D0](v9, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_siriUIStream);
  id v11 = objc_msgSend(v10, sel_publisher);

  id v12 = objc_msgSend(v11, sel_subscribeOn_, *(void *)(v3 + 16));
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  unint64_t v22 = (void (*)(uint64_t))sub_1D2F80968;
  uint64_t v23 = v13;
  uint64_t v18 = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  id v20 = sub_1D2F18864;
  uint64_t v21 = &block_descriptor_65;
  unint64_t v14 = _Block_copy(&v18);
  swift_retain();
  swift_release();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  unint64_t v22 = sub_1D2F80994;
  uint64_t v23 = v15;
  uint64_t v18 = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  id v20 = sub_1D2F7E64C;
  uint64_t v21 = &block_descriptor_71;
  unint64_t v16 = _Block_copy(&v18);
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v12, sel_sinkWithCompletion_receiveInput_, v14, v16);
  _Block_release(v16);
  _Block_release(v14);
}

void sub_1D2F7EC20()
{
  uint64_t v1 = v0;
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD5FDE0);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "BiomeSiriUIStreamSubscriber unsubscribing", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  id v6 = objc_msgSend(self, sel_siriUIStream);
  id v7 = objc_msgSend(v6, sel_publisher);

  id v8 = objc_msgSend(v7, sel_subscribeOn_, *(void *)(v1 + 16));
  unint64_t v16 = nullsub_1;
  uint64_t v17 = 0;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  unint64_t v14 = sub_1D2F18864;
  uint64_t v15 = &block_descriptor_56;
  os_log_type_t v9 = _Block_copy(&v12);
  unint64_t v16 = nullsub_1;
  uint64_t v17 = 0;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  unint64_t v14 = sub_1D2F7E64C;
  uint64_t v15 = &block_descriptor_59;
  id v10 = _Block_copy(&v12);
  id v11 = objc_msgSend(v8, sel_sinkWithCompletion_receiveInput_, v9, v10);
  _Block_release(v10);
  _Block_release(v9);

  objc_msgSend(v11, sel_cancel);
}

uint64_t type metadata accessor for BiomeSiriUIStreamSubscriber()
{
  return self;
}

void sub_1D2F7EE98(uint64_t a1, uint64_t a2)
{
}

void sub_1D2F7EEBC()
{
}

uint64_t sub_1D2F7EEE0()
{
  sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD63380);
  uint64_t result = sub_1D30022C8();
  qword_1EA6993F8 = result;
  return result;
}

void sub_1D2F7EF34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001918();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBD5FDE0);
  id v7 = sub_1D30018F8();
  os_log_type_t v8 = sub_1D30020A8();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl(&dword_1D2F05000, v7, v8, "BiomeIntentStreamSubscriber subscribing", v9, 2u);
    MEMORY[0x1D942F2D0](v9, -1, -1);
  }

  id v10 = objc_msgSend(self, sel_intent);
  id v11 = objc_msgSend(v10, sel_publisher);

  uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  if (qword_1EA698068 != -1) {
    swift_once();
  }
  id v13 = objc_msgSend(v11, sel_filterWithKeyPath_comparison_value_, v12, 0, qword_1EA6993F8);

  id v14 = objc_msgSend(v13, sel_subscribeOn_, *(void *)(v3 + 16));
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v24 = (void (*)(uint64_t))sub_1D2F80968;
  uint64_t v25 = v15;
  uint64_t v20 = MEMORY[0x1E4F143A8];
  uint64_t v21 = 1107296256;
  unint64_t v22 = sub_1D2F18864;
  uint64_t v23 = &block_descriptor_47;
  unint64_t v16 = _Block_copy(&v20);
  swift_retain();
  swift_release();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  uint64_t v24 = sub_1D2F8096C;
  uint64_t v25 = v17;
  uint64_t v20 = MEMORY[0x1E4F143A8];
  uint64_t v21 = 1107296256;
  unint64_t v22 = sub_1D2F7E64C;
  uint64_t v23 = &block_descriptor_53;
  uint64_t v18 = _Block_copy(&v20);
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v14, sel_sinkWithCompletion_receiveInput_, v16, v18);
  _Block_release(v18);
  _Block_release(v16);
}

void sub_1D2F7F26C(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, char a4, const char *a5)
{
  swift_unknownObjectRetain();
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = v8;
    type metadata accessor for AnyBiomeEvent();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(unsigned char *)(v10 + 24) = a4;
    swift_unknownObjectRetain();
    a2(v10, 1);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    if (qword_1EBD60298 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D3001918();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBD5FDE0);
    oslog = sub_1D30018F8();
    os_log_type_t v12 = sub_1D30020A8();
    if (os_log_type_enabled(oslog, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl(&dword_1D2F05000, oslog, v12, a5, v13, 2u);
      MEMORY[0x1D942F2D0](v13, -1, -1);
    }
  }
}

void sub_1D2F7F40C()
{
  uint64_t v1 = v0;
  if (qword_1EBD60298 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD5FDE0);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "BiomeIntentStreamSubscriber unsubscribing", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  id v6 = objc_msgSend(self, sel_intent);
  id v7 = objc_msgSend(v6, sel_publisher);

  id v8 = objc_msgSend(v7, sel_subscribeOn_, *(void *)(v1 + 16));
  unint64_t v16 = nullsub_1;
  uint64_t v17 = 0;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  id v14 = sub_1D2F18864;
  uint64_t v15 = &block_descriptor_8;
  uint64_t v9 = _Block_copy(&v12);
  unint64_t v16 = nullsub_1;
  uint64_t v17 = 0;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  id v14 = sub_1D2F7E64C;
  uint64_t v15 = &block_descriptor_44;
  uint64_t v10 = _Block_copy(&v12);
  id v11 = objc_msgSend(v8, sel_sinkWithCompletion_receiveInput_, v9, v10);
  _Block_release(v10);
  _Block_release(v9);

  objc_msgSend(v11, sel_cancel);
}

uint64_t type metadata accessor for BiomeIntentStreamSubscriber()
{
  return self;
}

void sub_1D2F7F684(uint64_t a1, uint64_t a2)
{
}

void sub_1D2F7F6A8()
{
}

void sub_1D2F7F6CC()
{
  qword_1EBD5FE00 = (uint64_t)&unk_1F2A15A70;
}

void *sub_1D2F7F6E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D3001868();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699420);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  id v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v74 - v12;
  if (*(unsigned char *)(a1 + 24))
  {
    if (qword_1EA698070 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D3001918();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EA699400);
    uint64_t v15 = sub_1D30018F8();
    os_log_type_t v16 = sub_1D30020A8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1D2F05000, v15, v16, "BiomeFilter: received non-intent Biome event", v17, 2u);
      MEMORY[0x1D942F2D0](v17, -1, -1);
    }

    return 0;
  }
  id v18 = *(id *)(a1 + 16);
  sub_1D2F7B488(v18, 0);
  id v19 = objc_msgSend(v18, sel_eventBody);
  if (!v19)
  {
    if (qword_1EA698070 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1D3001918();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EA699400);
    uint64_t v27 = sub_1D30018F8();
    os_log_type_t v28 = sub_1D30020B8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1D2F05000, v27, v28, "BiomeFilter: could not unwrap event body", v29, 2u);
      MEMORY[0x1D942F2D0](v29, -1, -1);
    }
    goto LABEL_47;
  }
  uint64_t v20 = v19;
  uint64_t v78 = v5;
  id v21 = objc_msgSend(v19, sel_intentClass);
  if (!v21) {
    goto LABEL_25;
  }
  unint64_t v22 = v21;
  id v79 = v18;
  uint64_t v23 = sub_1D3001B78();
  uint64_t v25 = v24;

  if (v23 == 0xD000000000000011 && v25 == 0x80000001D3011360)
  {
    swift_bridgeObjectRelease();
    id v18 = v79;
    goto LABEL_17;
  }
  char v30 = sub_1D3002778();
  swift_bridgeObjectRelease();
  id v18 = v79;
  if ((v30 & 1) == 0)
  {
LABEL_25:
    if (qword_1EA698070 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1D3001918();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EA699400);
    uint64_t v27 = sub_1D30018F8();
    os_log_type_t v45 = sub_1D30020A8();
    if (os_log_type_enabled(v27, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v46 = 0;
      uint64_t v47 = "BiomeFilter received Biome intent event that's not INStartCallIntent, skipping";
LABEL_29:
      _os_log_impl(&dword_1D2F05000, v27, v45, v47, v46, 2u);
      MEMORY[0x1D942F2D0](v46, -1, -1);
      sub_1D2F7B4AC(v18, 0);

LABEL_48:
      return 0;
    }
    goto LABEL_46;
  }
LABEL_17:
  if (qword_1EA698070 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1D3001918();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1EA699400);
  unint64_t v33 = sub_1D30018F8();
  os_log_type_t v34 = sub_1D30020A8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = v2;
    uint64_t v36 = v32;
    os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v37 = 0;
    _os_log_impl(&dword_1D2F05000, v33, v34, "BiomeFilter received Biome intent event INStartCallIntent", v37, 2u);
    unint64_t v38 = v37;
    uint64_t v32 = v36;
    uint64_t v2 = v35;
    id v18 = v79;
    MEMORY[0x1D942F2D0](v38, -1, -1);
  }

  if (objc_msgSend(v20, sel_donatedBySiri))
  {
    uint64_t v39 = sub_1D30018F8();
    os_log_type_t v40 = sub_1D30020A8();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_1D2F05000, v39, v40, "BiomeFilter: event donated by Siri", v41, 2u);
      MEMORY[0x1D942F2D0](v41, -1, -1);
    }

    objc_msgSend(v20, sel_absoluteTimestamp);
    uint64_t v43 = v42;

    sub_1D2F7B4AC(v18, 0);
    uint64_t v20 = 0;
    *(void *)(v2 + 32) = v43;
    *(unsigned char *)(v2 + 40) = 0;
    *(void *)(v2 + 48) = 0;
    *(unsigned char *)(v2 + 56) = 1;
    return v20;
  }
  if (objc_msgSend(v20, sel_interactionDirection) != (id)2)
  {
    uint64_t v27 = sub_1D30018F8();
    os_log_type_t v45 = sub_1D30020A8();
    if (os_log_type_enabled(v27, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v46 = 0;
      uint64_t v47 = "BiomeFilter: direction incoming, skipping";
      goto LABEL_29;
    }
    goto LABEL_46;
  }
  if (*(unsigned char *)(v2 + 40))
  {
    uint64_t v27 = sub_1D30018F8();
    os_log_type_t v45 = sub_1D30020A8();
    if (os_log_type_enabled(v27, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v46 = 0;
      uint64_t v47 = "BiomeFilter: no lastSiriCallTimestamp, skipping";
      goto LABEL_29;
    }
    goto LABEL_46;
  }
  double v48 = *(double *)(v2 + 32);
  id v49 = objc_msgSend(v20, sel_interaction);
  uint64_t v77 = sub_1D3000F68();
  unint64_t v51 = v50;

  id v75 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
  sub_1D2F454DC(v77, v51);
  unint64_t v76 = v51;
  id v68 = sub_1D2F807F8();
  id v75 = (id)v32;
  sub_1D2F0D1CC(v77, v76);
  sub_1D2F0BCB8(0, &qword_1EA699428);
  sub_1D3001B78();
  long long v69 = (void *)sub_1D3002288();
  swift_bridgeObjectRelease();
  if (v69)
  {
    objc_msgSend(v68, sel_finishDecoding);

    sub_1D2F0D1CC(v77, v76);
    id v70 = objc_msgSend(v69, sel_dateInterval);

    if (v70)
    {
      sub_1D3000D38();

      uint64_t v71 = sub_1D3000D78();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v11, 0, 1, v71);
    }
    else
    {
      uint64_t v71 = sub_1D3000D78();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v11, 1, 1, v71);
    }
    sub_1D2F80C04((uint64_t)v11, (uint64_t)v13, &qword_1EA699420);
    sub_1D3000D78();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 48))(v13, 1, v71))
    {
      sub_1D2F808B8((uint64_t)v13);
      double v72 = 0.0;
    }
    else
    {
      sub_1D3000D68();
      double v72 = v73;
      sub_1D2F808B8((uint64_t)v13);
    }
  }
  else
  {

    sub_1D2F0D1CC(v77, v76);
    double v72 = 0.0;
  }
  objc_msgSend(v20, sel_absoluteTimestamp);
  if (v52 - v48 > 5.0 || v72 != 0.0)
  {
    if ((*(unsigned char *)(v2 + 56) & 1) == 0) {
      goto LABEL_51;
    }
    uint64_t v27 = sub_1D30018F8();
    os_log_type_t v45 = sub_1D30020A8();
    if (os_log_type_enabled(v27, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v46 = 0;
      uint64_t v47 = "BiomeFilter: no lastUserHangupTimeStamp, skipping";
      goto LABEL_29;
    }
LABEL_46:

LABEL_47:
    sub_1D2F7B4AC(v18, 0);
    goto LABEL_48;
  }
  if (*(unsigned char *)(v2 + 56) == 1)
  {
    uint64_t v53 = sub_1D30018F8();
    os_log_type_t v54 = sub_1D30020A8();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl(&dword_1D2F05000, v53, v54, "BiomeFilter: event user hangup", v55, 2u);
      MEMORY[0x1D942F2D0](v55, -1, -1);
    }

    objc_msgSend(v20, sel_absoluteTimestamp);
    uint64_t v57 = v56;

    sub_1D2F7B4AC(v18, 0);
    uint64_t v20 = 0;
    *(void *)(v2 + 48) = v57;
    *(unsigned char *)(v2 + 56) = 0;
    return v20;
  }
LABEL_51:
  double v59 = *(double *)(v2 + 48);
  objc_msgSend(v20, sel_absoluteTimestamp);
  BOOL v61 = v72 > 0.0 && v60 - v59 <= 60.0;
  int64_t v62 = sub_1D30018F8();
  os_log_type_t v63 = sub_1D30020A8();
  if (os_log_type_enabled(v62, v63))
  {
    unint64_t v64 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v64 = 67109120;
    id v18 = v79;
    BOOL v80 = v61;
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v62, v63, "BiomeFilter decided isUserCallAfterHangupSiriCall:%{BOOL}d", v64, 8u);
    MEMORY[0x1D942F2D0](v64, -1, -1);
  }

  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = 1;
  *(void *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 56) = 1;
  if (!v61)
  {

    sub_1D2F7B4AC(v18, 0);
    return 0;
  }
  uint64_t v65 = qword_1EBD5F798;
  id v66 = v20;
  if (v65 != -1) {
    swift_once();
  }
  uint64_t v67 = sub_1D3001898();
  __swift_project_value_buffer(v67, (uint64_t)qword_1EBD656E0);
  sub_1D3001858();
  sub_1D2F62828("events.filters.UserCallAfterHangupSiriCall", 42, 2, (uint64_t)v7);
  sub_1D2F7B4AC(v79, 0);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v7, v4);
  return v20;
}

uint64_t sub_1D2F8028C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BiomeFilterUserCallAfterHangupSiriCall()
{
  return self;
}

uint64_t getEnumTagSinglePayload for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus()
{
  return &type metadata for BiomeSiriEventScenarioProcessor.BiomeSiriEventScenarioProcessorStatus;
}

unsigned char *storeEnumTagSinglePayload for BiomeSiriEventProcessingInputStream(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F80440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeSiriEventProcessingInputStream()
{
  return &type metadata for BiomeSiriEventProcessingInputStream;
}

unint64_t sub_1D2F8047C()
{
  unint64_t result = qword_1EBD60048;
  if (!qword_1EBD60048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD60048);
  }
  return result;
}

void sub_1D2F804D0()
{
  uint64_t v1 = *v0;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 56) = 1;
}

void *sub_1D2F804EC(uint64_t a1)
{
  return sub_1D2F7F6E0(a1);
}

uint64_t sub_1D2F80510()
{
  if (qword_1EBD5FE10 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2F8056C()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EBD5FDE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD5FDE0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1D2F80634()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EA699400);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA699400);
  return sub_1D3001908();
}

uint64_t sub_1D2F806B8(void (*a1)(void))
{
  a1();
  return sub_1D3002A28();
}

uint64_t sub_1D2F806F4(void *a1, void *a2)
{
  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2) {
        goto LABEL_13;
      }
      goto LABEL_7;
    case 1uLL:
      if (a2 == (void *)1) {
        goto LABEL_7;
      }
      goto LABEL_13;
    case 2uLL:
      if (a2 != (void *)2) {
        goto LABEL_13;
      }
      goto LABEL_7;
    case 3uLL:
      if (a2 != (void *)3) {
        goto LABEL_13;
      }
      goto LABEL_7;
    case 4uLL:
      if (a2 != (void *)4) {
        goto LABEL_13;
      }
LABEL_7:
      uint64_t result = 1;
      break;
    default:
      if ((unint64_t)a2 < 5)
      {
LABEL_13:
        uint64_t result = 0;
      }
      else
      {
        sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD5FC90);
        sub_1D2F80B58(a1);
        sub_1D2F80B58(a2);
        char v4 = sub_1D30022B8();
        sub_1D2F80B68(a2);
        sub_1D2F80B68(a1);
        uint64_t result = v4 & 1;
      }
      break;
  }
  return result;
}

id sub_1D2F807F8()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1D3000F58();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1D3000DF8();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D2F808B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699420);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_1D2F80930()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D2F8096C(uint64_t a1)
{
  sub_1D2F7F26C(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), 0, "BiomeIntentStreamSubscriber received non-intent Biome event");
}

void sub_1D2F80994(uint64_t a1)
{
  sub_1D2F7F26C(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), 1, "BiomeSiriUIStreamSubscriber received non-ui Biome event");
}

void sub_1D2F809BC(void *a1)
{
  uint64_t v2 = *(void (**)(void))(v1 + 16);
  id v3 = objc_msgSend(a1, sel_error);
  v2();
}

void sub_1D2F80A1C(uint64_t a1)
{
  sub_1D2F7F26C(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), 2, "BiomeSiriExecutionStreamSubscriber received non-execution Biome event");
}

uint64_t sub_1D2F80A44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1D2F0A13C(0, v4, 0);
    uint64_t v5 = v14;
    for (unint64_t i = (void *)(a1 + 32); ; i += 5)
    {
      sub_1D2F7D950(i, a2, &v13);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v9 = v13;
      uint64_t v14 = v5;
      unint64_t v11 = *(void *)(v5 + 16);
      unint64_t v10 = *(void *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1D2F0A13C(v10 > 1, v11 + 1, 1);
        uint64_t v5 = v14;
      }
      *(void *)(v5 + 16) = v11 + 1;
      *(void *)(v5 + 8 * v11 + 32) = v9;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
  }
  return v5;
}

id sub_1D2F80B40(void *a1, char a2)
{
  if (a2) {
    return (id)swift_retain();
  }
  else {
    return a1;
  }
}

void sub_1D2F80B4C(void *a1, char a2)
{
  if (a2) {
    swift_release();
  }
  else {
}
  }

id sub_1D2F80B58(id result)
{
  if ((unint64_t)result >= 5) {
    return result;
  }
  return result;
}

void sub_1D2F80B68(id a1)
{
  if ((unint64_t)a1 >= 5) {
}
  }

uint64_t sub_1D2F80B78()
{
  return sub_1D2F7D43C(v0);
}

uint64_t sub_1D2F80B80()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2F80BB8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D2F80BF8()
{
  sub_1D2F7C460(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1D2F80C04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2F80C68()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D2F80CA8(void *a1, char a2)
{
  return sub_1D2F7CB64(a1, a2 & 1, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void (**)(uint64_t))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1D2F80CBC(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v1 = sub_1D3002158();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  int64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3002138();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1D3001A08();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1D2F0BCB8(0, qword_1EBD635E0);
  sub_1D30019F8();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1D2F81130(&qword_1EBD635D8, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635C0);
  sub_1D2F6BA5C((unint64_t *)&unk_1EBD635C8, &qword_1EBD635C0);
  sub_1D30023A8();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v1);
  id v7 = (void *)sub_1D3002178();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FD78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D30083F0;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v9 = type metadata accessor for BiomeIntentStreamSubscriber();
  uint64_t v10 = swift_allocObject();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F502E8]);
  id v12 = v7;
  uint64_t v13 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v14 = objc_msgSend(v11, sel_initWithIdentifier_targetQueue_, v13, v12);

  *(void *)(v10 + 16) = v14;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = &off_1F2A19530;
  *(void *)(inited + 40) = v10;
  *(unsigned char *)(inited + 80) = 1;
  uint64_t v15 = type metadata accessor for BiomeSiriUIStreamSubscriber();
  uint64_t v16 = swift_allocObject();
  id v17 = objc_allocWithZone(MEMORY[0x1E4F502E8]);
  id v18 = v12;
  id v19 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v20 = objc_msgSend(v17, sel_initWithIdentifier_targetQueue_, v19, v18);

  *(void *)(v16 + 16) = v20;
  *(void *)(inited + 112) = v15;
  *(void *)(inited + 120) = &off_1F2A19550;
  *(void *)(inited + 88) = v16;
  *(unsigned char *)(inited + 128) = 2;
  uint64_t v21 = type metadata accessor for BiomeSiriExecutionStreamSubscriber();
  uint64_t v22 = swift_allocObject();
  id v23 = objc_allocWithZone(MEMORY[0x1E4F502E8]);
  id v24 = v18;
  uint64_t v25 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v26 = objc_msgSend(v23, sel_initWithIdentifier_targetQueue_, v25, v24);

  *(void *)(v22 + 16) = v26;
  *(void *)(inited + 160) = v21;
  *(void *)(inited + 168) = &off_1F2A19570;
  *(void *)(inited + 136) = v22;
  unint64_t v27 = sub_1D2F23714(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD60050);
  swift_arrayDestroy();
  type metadata accessor for BiomeSiriEventScenarioProcessor();
  uint64_t v28 = swift_allocObject();
  sub_1D2F7BCE8((uint64_t)v24, v27, v31);
  return v28;
}

uint64_t sub_1D2F81130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s18SubscriptionStatusOwCP(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void _s18SubscriptionStatusOwxx(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **_s18SubscriptionStatusOwca(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for BiomeSiriEventScenario(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeSiriEventScenario(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BiomeSiriEventScenario(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_1D2F81350(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1D2F81368(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for BiomeSiriEventScenario()
{
  return &type metadata for BiomeSiriEventScenario;
}

void makePLUSEventLogTarget()(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  unsigned int v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  unsigned int v5 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v4) {
    unsigned int v5 = &type metadata for DisabledPLUSEventLogTarget;
  }
  id v6 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v4) {
    id v6 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  }
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
}

uint64_t PLUSEventLogTarget.emitMessage(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v11 = 0;
  char v12 = 1;
  (*(void (**)(uint64_t, char *, uint64_t *, uint64_t, uint64_t))(a3 + 8))(a1, v8, &v11, a2, a3);
  return sub_1D2F0D16C((uint64_t)v8);
}

uint64_t PLUSEventLogTarget.emitMessage(_:isolatedStreamId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D30010A8();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  uint64_t v14 = 0;
  char v15 = 1;
  (*(void (**)(uint64_t, char *, uint64_t *, uint64_t, uint64_t))(a4 + 8))(a1, v10, &v14, a3, a4);
  return sub_1D2F0D16C((uint64_t)v10);
}

uint64_t PLUSEventLogTarget.emitMessage(_:timeStamp:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_1D30010A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  uint64_t v14 = v11;
  char v15 = 0;
  (*(void (**)(uint64_t, char *, uint64_t *, uint64_t, uint64_t))(a4 + 8))(a1, v10, &v14, a3, a4);
  return sub_1D2F0D16C((uint64_t)v10);
}

uint64_t PLUSEventLogTimestamp.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = mach_absolute_time();
  *a1 = result;
  return result;
}

uint64_t PLUSEventLogTimestamp.init(machAbsoluteTime:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t PLUSEventLogTimestamp.hash(into:)()
{
  return sub_1D3002958();
}

BOOL static PLUSEventLogTimestamp.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1D2F818A4()
{
  return 0xD000000000000010;
}

uint64_t sub_1D2F818C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D2F82548(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D2F818EC(uint64_t a1)
{
  unint64_t v2 = sub_1D2F81A98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F81928(uint64_t a1)
{
  unint64_t v2 = sub_1D2F81A98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PLUSEventLogTimestamp.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699430);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F81A98();
  sub_1D30029B8();
  sub_1D30026F8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1D2F81A98()
{
  unint64_t result = qword_1EA699438;
  if (!qword_1EA699438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699438);
  }
  return result;
}

uint64_t PLUSEventLogTimestamp.hashValue.getter()
{
  return sub_1D3002968();
}

uint64_t PLUSEventLogTimestamp.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699440);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F81A98();
  sub_1D3002998();
  if (!v2)
  {
    uint64_t v9 = sub_1D3002698();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1D2F81C84()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F81CCC()
{
  return sub_1D3002958();
}

uint64_t sub_1D2F81CF8()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F81D3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PLUSEventLogTimestamp.init(from:)(a1, a2);
}

uint64_t sub_1D2F81D54(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699430);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F81A98();
  sub_1D30029B8();
  sub_1D30026F8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void SiriAnalyticsSharedPLUSEventLogTarget.emitMessage(_:isolatedStreamId:timeStamp:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *a3;
  char v13 = *((unsigned char *)a3 + 8);
  id v14 = objc_msgSend(self, sel_sharedAnalytics);
  id v15 = objc_msgSend(v14, sel_defaultMessageStream);

  if (v13)
  {
    sub_1D2F61448(a2, (uint64_t)v9);
    uint64_t v16 = sub_1D30010A8();
    uint64_t v17 = *(void *)(v16 - 8);
    id v18 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) != 1)
    {
      id v18 = (void *)sub_1D3001048();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    }
    objc_msgSend(v15, sel_emitMessage_isolatedStreamUUID_, a1, v18);
  }
  else
  {
    sub_1D2F61448(a2, (uint64_t)v11);
    uint64_t v19 = sub_1D30010A8();
    uint64_t v20 = *(void *)(v19 - 8);
    id v18 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) != 1)
    {
      id v18 = (void *)sub_1D3001048();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    }
    objc_msgSend(v15, sel_emitMessage_timestamp_isolatedStreamUUID_, a1, v12, v18);
  }
}

void sub_1D2F820E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

void DisabledPLUSEventLogTarget.emitMessage(_:isolatedStreamId:timeStamp:)()
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1D3001918();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  oslog = sub_1D30018F8();
  os_log_type_t v1 = sub_1D30020A8();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_1D2F05000, oslog, v1, "Omitting SELF logging call as logging disabled", v2, 2u);
    MEMORY[0x1D942F2D0](v2, -1, -1);
  }
}

void sub_1D2F821E8()
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1D3001918();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  oslog = sub_1D30018F8();
  os_log_type_t v1 = sub_1D30020A8();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_1D2F05000, oslog, v1, "Omitting SELF logging call as logging disabled", v2, 2u);
    MEMORY[0x1D942F2D0](v2, -1, -1);
  }
}

unint64_t sub_1D2F822D4()
{
  unint64_t result = qword_1EA699448;
  if (!qword_1EA699448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699448);
  }
  return result;
}

uint64_t dispatch thunk of PLUSEventLogTarget.emitMessage(_:isolatedStreamId:timeStamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for PLUSEventLogTimestamp()
{
  return &type metadata for PLUSEventLogTimestamp;
}

ValueMetadata *type metadata accessor for SiriAnalyticsSharedPLUSEventLogTarget()
{
  return &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
}

ValueMetadata *type metadata accessor for DisabledPLUSEventLogTarget()
{
  return &type metadata for DisabledPLUSEventLogTarget;
}

unsigned char *storeEnumTagSinglePayload for PLUSEventLogTimestamp.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D2F82408);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PLUSEventLogTimestamp.CodingKeys()
{
  return &type metadata for PLUSEventLogTimestamp.CodingKeys;
}

unint64_t sub_1D2F82444()
{
  unint64_t result = qword_1EA699450;
  if (!qword_1EA699450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699450);
  }
  return result;
}

unint64_t sub_1D2F8249C()
{
  unint64_t result = qword_1EA699458;
  if (!qword_1EA699458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699458);
  }
  return result;
}

unint64_t sub_1D2F824F4()
{
  unint64_t result = qword_1EA699460;
  if (!qword_1EA699460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699460);
  }
  return result;
}

uint64_t sub_1D2F82548(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001D3011580)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1D3002778();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

id static GroundTruthRecord.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  os_log_type_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_id()
{
  return sel_id;
}

id sub_1D2F82648@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timestamp);
  *a2 = v4;
  return result;
}

id sub_1D2F8267C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

void sub_1D2F82690(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_id);
  sub_1D3001068();
}

void sub_1D2F826F4(uint64_t a1, void **a2)
{
  id v2 = *a2;
  id v3 = (id)sub_1D3001048();
  objc_msgSend(v2, sel_setId_, v3);
}

char *keypath_get_selector_payload()
{
  return sel_payload;
}

void sub_1D2F8275C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_payload);
  uint64_t v4 = sub_1D3000F68();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1D2F827B8(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_type()
{
  return sel_type;
}

void sub_1D2F827E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_type);
  uint64_t v4 = sub_1D3001B78();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1D2F82840(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void keypath_set_2Tm(void *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void), SEL *a6)
{
  uint64_t v7 = *a2;
  id v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);
}

id sub_1D2F828C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timestamp);
  *a2 = v4;
  return result;
}

id sub_1D2F828FC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

uint64_t SiriUserFeedbackLearningTask.init(context:usageLogger:)@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_1D3001BB8();
  MEMORY[0x1F4188790](v7 - 8);
  char v8 = *a1;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D3001918();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBD65778);
  uint64_t v10 = sub_1D30018F8();
  os_log_type_t v11 = sub_1D30020A8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v42 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_1D2F09508(0xD00000000000001ALL, 0x80000001D3011620, &v42);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v10, v11, "SiriUserFeedbackLearningTask.%s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v13, -1, -1);
    id v14 = v12;
    uint64_t v4 = v3;
    MEMORY[0x1D942F2D0](v14, -1, -1);
  }

  v39[0] = v8;
  sub_1D2F37950((uint64_t)a2, (uint64_t)v41);
  sub_1D3000CF8();
  swift_allocObject();
  sub_1D3000CE8();
  LOBYTE(v42) = v8;
  sub_1D2F82D94();
  uint64_t v15 = sub_1D3000CD8();
  if (v4) {
    goto LABEL_6;
  }
  uint64_t v18 = v15;
  unint64_t v19 = v16;
  sub_1D3001BA8();
  uint64_t v20 = sub_1D3001B98();
  if (!v21)
  {
    sub_1D2F82DE8();
    swift_allocError();
    *(_OWORD *)uint64_t v35 = xmmword_1D30089F0;
    *(unsigned char *)(v35 + 16) = 1;
    swift_willThrow();
    sub_1D2F0D1CC(v18, v19);
LABEL_6:
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  }
  uint64_t v22 = v21;
  uint64_t v36 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD637A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D3004380;
  uint64_t v24 = a2[3];
  uint64_t v25 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v24);
  unint64_t v37 = v19;
  *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  *(void *)(inited + 40) = v26;
  uint64_t v27 = a2[3];
  uint64_t v28 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v27);
  char v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
  uint64_t v30 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = v29 & 1;
  *(void *)(inited + 72) = v30;
  *(void *)(inited + 80) = 0x747865746E6F63;
  *(void *)(inited + 120) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 88) = 0xE700000000000000;
  *(void *)(inited + 96) = v36;
  *(void *)(inited + 104) = v22;
  unint64_t v31 = sub_1D2F1F1AC(inited);
  sub_1D2F82FD8(v31);
  swift_bridgeObjectRelease();
  id v32 = objc_allocWithZone(MEMORY[0x1E4F737C0]);
  unint64_t v33 = (void *)sub_1D3001A78();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v32, sel_initWithParametersDict_, v33);

  sub_1D2F0D1CC(v18, v37);
  swift_release();
  id v40 = v34;
  sub_1D2F3C528((uint64_t)v39, a3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return sub_1D2F3C584((uint64_t)v39);
}

unint64_t sub_1D2F82D94()
{
  unint64_t result = qword_1EBD5F788;
  if (!qword_1EBD5F788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5F788);
  }
  return result;
}

unint64_t sub_1D2F82DE8()
{
  unint64_t result = qword_1EA699468;
  if (!qword_1EA699468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699468);
  }
  return result;
}

void SiriUserFeedbackLearningTask.context.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

id SiriUserFeedbackLearningTask.mlrTask.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t SiriUserFeedbackLearningTask.description.getter()
{
  v4[2] = 0;
  v4[3] = 0xE000000000000000;
  sub_1D3002438();
  sub_1D3001C68();
  strcpy((char *)v4, "triggerType: ");
  HIWORD(v4[1]) = -4864;
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  id v1 = *(id *)(v0 + 8);
  id v2 = objc_msgSend(v1, sel_description, v4[0], v4[1]);
  sub_1D3001B78();

  sub_1D3001C68();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D2F82FD8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FCF0);
    uint64_t v2 = sub_1D30025D8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1D2F0BD44(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    void v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1D2F0B9B4(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1D2F0B9B4(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1D2F0B9B4(v36, v37);
    sub_1D2F0B9B4(v37, &v33);
    uint64_t result = sub_1D30023D8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1D2F0B9B4(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1D2F843C0();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t SiriUserFeedbackLearningTask.init(mlrTask:usageLogger:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v5 = sub_1D3001BB8();
  uint64_t v67 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  MEMORY[0x1F4188790](v5);
  id v66 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1D3000D28();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  os_log_type_t v63 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D3001918();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBD65778);
  id v10 = a1;
  long long v69 = (unsigned char *)v9;
  unint64_t v11 = sub_1D30018F8();
  os_log_type_t v12 = sub_1D30020A8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    double v60 = a2;
    int64_t v15 = (void *)v14;
    uint64_t v59 = swift_slowAlloc();
    v74[0] = v59;
    *(_DWORD *)uint64_t v13 = 136315394;
    v71[0] = sub_1D2F09508(0xD00000000000001ALL, 0x80000001D3011640, v74);
    sub_1D3002318();
    *(_WORD *)(v13 + 12) = 2112;
    v71[0] = v10;
    id v16 = v10;
    sub_1D3002318();
    *int64_t v15 = v10;

    _os_log_impl(&dword_1D2F05000, v11, v12, "SiriUserFeedbackLearningTask.%s mlrTask:%@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
    swift_arrayDestroy();
    uint64_t v17 = v15;
    a2 = v60;
    MEMORY[0x1D942F2D0](v17, -1, -1);
    uint64_t v18 = v59;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v18, -1, -1);
    MEMORY[0x1D942F2D0](v13, -1, -1);
  }
  else
  {
  }
  id v78 = v10;
  uint64_t v19 = v79;
  sub_1D2F37950((uint64_t)a2, (uint64_t)v79);
  id v20 = v10;
  unint64_t v21 = off_1E6970000;
  id v22 = objc_msgSend(v20, sel_parameters);
  uint64_t v23 = a2[3];
  uint64_t v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  BOOL v25 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v22, sel_BOOLValueForKey_defaultValue_, v25, 0);

  uint64_t v27 = a2[3];
  uint64_t v28 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v27);
  (*(void (**)(id, uint64_t, uint64_t))(v28 + 16))(v26, v27, v28);
  sub_1D2F37950((uint64_t)a2, (uint64_t)v74);
  sub_1D2F37950((uint64_t)a2, (uint64_t)v71);
  long long v29 = sub_1D30018F8();
  os_log_type_t v30 = sub_1D30020A8();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    double v60 = v20;
    uint64_t v33 = v32;
    uint64_t v80 = v32;
    *(_DWORD *)uint64_t v31 = 136315394;
    long long v34 = a2;
    long long v69 = v79;
    uint64_t v35 = v75;
    uint64_t v36 = v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    uint64_t v70 = sub_1D2F09508(v37, v38, &v80);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
    *(_WORD *)(v31 + 12) = 1024;
    uint64_t v39 = v72;
    uint64_t v40 = v73;
    __swift_project_boxed_opaque_existential_1(v71, v72);
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 24);
    uint64_t v42 = v40;
    a2 = v34;
    unint64_t v21 = off_1E6970000;
    int v43 = v41(v39, v42) & 1;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
    LODWORD(v70) = v43;
    uint64_t v19 = v69;
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v29, v30, "%s = %{BOOL}d", (uint8_t *)v31, 0x12u);
    swift_arrayDestroy();
    uint64_t v44 = v33;
    id v20 = v60;
    MEMORY[0x1D942F2D0](v44, -1, -1);
    MEMORY[0x1D942F2D0](v31, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v71);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
  }

  id v45 = [v20 (SEL)v21[483]];
  unint64_t v46 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v47 = objc_msgSend(v45, sel_stringValueForKey_defaultValue_, v46, 0);

  if (!v47) {
    goto LABEL_11;
  }
  uint64_t v48 = sub_1D3001B78();
  uint64_t v50 = v49;

  v74[0] = v48;
  v74[1] = v50;
  unint64_t v51 = v63;
  sub_1D3000D08();
  sub_1D2F226C4();
  sub_1D3002368();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v51, v65);
  swift_bridgeObjectRelease();
  double v52 = v66;
  sub_1D3001BA8();
  uint64_t v53 = sub_1D3001B88();
  unint64_t v55 = v54;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v68);
  if (v55 >> 60 == 15)
  {
LABEL_11:
    sub_1D2F82DE8();
    swift_allocError();
    *(_OWORD *)uint64_t v56 = xmmword_1D30089F0;
    *(unsigned char *)(v56 + 16) = 0;
    swift_willThrow();

LABEL_13:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);

    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  sub_1D3000C98();
  swift_allocObject();
  sub_1D3000C88();
  sub_1D2F83D48();
  uint64_t v57 = v62;
  sub_1D3000C78();
  swift_release();

  sub_1D2F2276C(v53, v55);
  if (v57) {
    goto LABEL_13;
  }
  v77[0] = v74[0];
  sub_1D2F3C528((uint64_t)v77, v61);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return sub_1D2F3C584((uint64_t)v77);
}

uint64_t sub_1D2F83BD4(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1D2F83C00(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2F83C28@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t _s28SiriPrivateLearningAnalytics0a12UserFeedbackC9TaskErrorO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_1D3002778();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  sub_1D2F83DA0();
  sub_1D2F83DA0();
  sub_1D2F83DB8();
  sub_1D2F83DB8();
  return v7 & 1;
}

unint64_t sub_1D2F83D48()
{
  unint64_t result = qword_1EBD63708[0];
  if (!qword_1EBD63708[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBD63708);
  }
  return result;
}

uint64_t sub_1D2F83DA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for SiriUserFeedbackLearningTaskError()
{
  return sub_1D2F83DB8();
}

uint64_t sub_1D2F83DB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s28SiriPrivateLearningAnalytics33SiriUserFeedbackLearningTaskErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1D2F83DA0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SiriUserFeedbackLearningTaskError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1D2F83DA0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1D2F83DB8();
  return a1;
}

uint64_t assignWithTake for SiriUserFeedbackLearningTaskError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1D2F83DB8();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTaskError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D2F83F38(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskError()
{
  return &type metadata for SiriUserFeedbackLearningTaskError;
}

uint64_t destroy for SiriUserFeedbackLearningTask(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1 + 16);
}

uint64_t initializeWithCopy for SiriUserFeedbackLearningTask(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

uint64_t assignWithCopy for SiriUserFeedbackLearningTask(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unsigned int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *unsigned int v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unsigned int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SiriUserFeedbackLearningTask(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriUserFeedbackLearningTask(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriUserFeedbackLearningTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTask()
{
  return &type metadata for SiriUserFeedbackLearningTask;
}

uint64_t sub_1D2F843C0()
{
  return swift_release();
}

uint64_t INDeleteNoteIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INDeleteNoteIntentFeatureExtractor.init()()
{
  return v0;
}

uint64_t sub_1D2F843E0(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(v1, sel_intent);
  id v3 = objc_msgSend(v2, sel_typeName);
  uint64_t v4 = sub_1D3001B78();
  uint64_t v6 = v5;

  if (v4 == 0x49636972656E6547 && v6 == 0xED0000746E65746ELL)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_22;
    }
  }
  id v9 = objc_msgSend(v2, sel_verb);
  uint64_t v10 = sub_1D3001B78();
  uint64_t v12 = v11;

  if (v10 == 0x6F4E6574656C6544 && v12 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_22;
    }
  }
  id v15 = objc_msgSend(v2, sel_parametersByName);
  if (!v15)
  {
LABEL_22:

    return MEMORY[0x1E4FBC860];
  }
  id v16 = v15;
  uint64_t v17 = sub_1D3001A88();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1D3004380;
  uint64_t v19 = type metadata accessor for DeleteNoteEventFeature.EventType(0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0xD000000000000010;
  *(void *)(v20 + 24) = 0x80000001D3011660;
  *(void *)(v18 + 56) = v19;
  *(void *)(v18 + 64) = sub_1D2F848B4(&qword_1EA699470, (void (*)(uint64_t))type metadata accessor for DeleteNoteEventFeature.EventType);
  *(void *)(v18 + 32) = v20;
  LOBYTE(v19) = objc_msgSend(v1, sel__donatedBySiri);
  uint64_t v21 = type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(0);
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = v19;
  *(void *)(v18 + 96) = v21;
  *(void *)(v18 + 104) = sub_1D2F848B4(&qword_1EA699478, (void (*)(uint64_t))type metadata accessor for DeleteNoteEventFeature.DonatedBySiri);
  *(void *)(v18 + 72) = v22;
  if (!*(void *)(v17 + 16) || (unint64_t v23 = sub_1D2F0DC98(0x656C746974, 0xE500000000000000), (v24 & 1) == 0))
  {
    long long v30 = 0u;
    long long v31 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  sub_1D2F0BD44(*(void *)(v17 + 56) + 32 * v23, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  if (!*((void *)&v31 + 1))
  {
LABEL_24:

    sub_1D2F0BEDC((uint64_t)&v30);
    return v18;
  }
  if (swift_dynamicCast())
  {
    uint64_t v25 = v33;
    uint64_t v26 = v34;
    uint64_t v27 = type metadata accessor for DeleteNoteEventFeature.NoteTextContent(0);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v25;
    *(void *)(v28 + 24) = v26;
    uint64_t v18 = (uint64_t)sub_1D2F27F00((void *)1, 3, 1, (void *)v18);
    *((void *)&v31 + 1) = v27;
    uint64_t v32 = sub_1D2F848B4(&qword_1EA699480, (void (*)(uint64_t))type metadata accessor for DeleteNoteEventFeature.NoteTextContent);
    *(void *)&long long v30 = v28;
    *(void *)(v18 + 16) = 3;
    sub_1D2F0BE68(&v30, v18 + 112);
  }

  return v18;
}

uint64_t type metadata accessor for DeleteNoteEventFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699488);
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t INDeleteNoteIntentFeatureExtractor.deinit()
{
  return v0;
}

uint64_t INDeleteNoteIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699498);
}

uint64_t sub_1D2F84878(uint64_t *a1)
{
  return sub_1D2F84AF8(a1, (void (*)(void))type metadata accessor for DeleteNoteEventFeature.EventType);
}

uint64_t sub_1D2F84890(uint64_t *a1)
{
  return sub_1D2F84B4C(a1, (void (*)(void))type metadata accessor for DeleteNoteEventFeature.EventType);
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2F848B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t DeleteNoteEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F849FC(char *a1)
{
  char v1 = *a1;
  type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F84A34(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for DeleteNoteEventFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t DeleteNoteEventFeature.NoteTextContent.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t DeleteNoteEventFeature.NoteTextContent.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F84AE0(uint64_t *a1)
{
  return sub_1D2F84AF8(a1, (void (*)(void))type metadata accessor for DeleteNoteEventFeature.NoteTextContent);
}

uint64_t sub_1D2F84AF8(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2F84B34(uint64_t *a1)
{
  return sub_1D2F84B4C(a1, (void (*)(void))type metadata accessor for DeleteNoteEventFeature.NoteTextContent);
}

uint64_t sub_1D2F84B4C(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t type metadata accessor for DeleteNoteEventFeature.NoteTextContent(uint64_t a1)
{
  return sub_1D2F25FA4(a1, qword_1EA6994A8);
}

uint64_t type metadata accessor for INDeleteNoteIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for INDeleteNoteIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for INDeleteNoteIntentFeatureExtractor);
}

uint64_t dispatch thunk of INDeleteNoteIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INDeleteNoteIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

ValueMetadata *type metadata accessor for DeleteNoteEventFeature()
{
  return &type metadata for DeleteNoteEventFeature;
}

uint64_t PredicateEvictor.__allocating_init(predicateConverter:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t PredicateEvictor.init(predicateConverter:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

id sub_1D2F84CBC(uint64_t a1, void *a2)
{
  uint64_t v6 = *((void *)*v2 + 10);
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  char v8 = (void *)v2[2](a1);
  objc_msgSend(v7, sel_setPredicate_, v8);

  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699520);
  sub_1D3002238();
  if (v3)
  {

    return (id)v9;
  }
  uint64_t v9 = sub_1D3002628();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    uint64_t v9 = sub_1D3001E38();

    return (id)v9;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1D942DDC0](v10, v6))
  {
LABEL_12:

    swift_bridgeObjectRelease();
    return (id)v9;
  }
  uint64_t v11 = 4;
  while (1)
  {
    char v12 = sub_1D3001E58();
    sub_1D3001E08();
    id result = (v12 & 1) != 0 ? *(id *)(v9 + 8 * v11) : (id)sub_1D3002468();
    char v14 = result;
    uint64_t v15 = v11 - 3;
    if (__OFADD__(v11 - 4, 1)) {
      break;
    }
    objc_msgSend(a2, sel_deleteObject_, result);

    ++v11;
    if (v15 == MEMORY[0x1D942DDC0](v9, v6)) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t PredicateEvictor.deinit()
{
  swift_release();
  return v0;
}

uint64_t PredicateEvictor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

id sub_1D2F84EE0(uint64_t a1, void *a2)
{
  return sub_1D2F84CBC(a1, a2);
}

uint64_t sub_1D2F84F04()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PredicateEvictor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PredicateEvictor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PredicateEvictor);
}

uint64_t dispatch thunk of PredicateEvictor.__allocating_init(predicateConverter:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PredicateEvictor.evictRecord(record:context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t NLXFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t NLXFeatureExtractor.init()()
{
  return v0;
}

uint64_t NLXSpanLabels.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (a1)
  {
    *(void *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t NLXFeatureExtractor.deinit()
{
  return v0;
}

uint64_t NLXFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *sub_1D2F85030(unint64_t *a1)
{
  return sub_1D2F851FC(*a1);
}

uint64_t NLXSpanLabels.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(void *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t NLXSpanLabels.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NLXSpanLabels.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F85158(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for NLXSpanLabels();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F85190(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for NLXSpanLabels();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1)
  {
    *(void *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

void *sub_1D2F851FC(unint64_t a1)
{
  uint64_t v3 = a1;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)&long long v58 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    id v7 = off_1E6970000;
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_81;
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v9 = (id)MEMORY[0x1D942E3A0](i, v3);
        }
        else {
          id v9 = *(id *)(v3 + 8 * i + 32);
        }
        unint64_t j = (unint64_t)v9;
        if ([v9 (SEL)v7[254]] == 18)
        {
          sub_1D30024E8();
          sub_1D3002518();
          sub_1D3002528();
          sub_1D30024F8();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      int64_t v1 = v58;
      *(void *)&long long v58 = v4;
      if (v1 < 0) {
        goto LABEL_32;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v7 = off_1E6970000;
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  int64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)&long long v58 = v4;
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v1 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    uint64_t v10 = sub_1D30025A8();
    if (!v10) {
      goto LABEL_33;
    }
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v1 + 16);
  swift_retain();
  if (!v10)
  {
LABEL_33:
    swift_release();
    unint64_t v26 = MEMORY[0x1E4FBC860];
    goto LABEL_34;
  }
LABEL_18:
  if (v10 < 1)
  {
LABEL_81:
    __break(1u);
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v11 = 0;
  uint64_t v55 = v10;
  unint64_t v56 = v1 & 0xC000000000000001;
  do
  {
    if (v56) {
      id v12 = (id)MEMORY[0x1D942E3A0](v11, v1);
    }
    else {
      id v12 = *(id *)(v1 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    id v14 = objc_msgSend(v12, sel_payload);
    if (v14)
    {
      uint64_t v15 = v14;
      unint64_t j = v3;
      uint64_t v16 = v5;
      uint64_t v17 = sub_1D3000F68();
      int64_t v18 = v1;
      uint64_t v19 = v7;
      unint64_t v21 = v20;

      uint64_t v22 = (void *)sub_1D3000F58();
      uint64_t v23 = v17;
      uint64_t v5 = v16;
      uint64_t v3 = j;
      unint64_t v24 = v21;
      id v7 = v19;
      int64_t v1 = v18;
      uint64_t v10 = v55;
      sub_1D2F0D1CC(v23, v24);
    }
    else
    {
      uint64_t v22 = 0;
    }
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0C60]), sel_initWithData_, v22);

    if (v25)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
    ++v11;
  }
  while (v10 != v11);
  swift_release();
  unint64_t v26 = v58;
LABEL_34:
  unint64_t v57 = v26;
  swift_release();
  int64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)&long long v58 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (unint64_t j = 0; j != v5; ++j)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x1D942E3A0](j, v3);
      }
      else {
        id v27 = *(id *)(v3 + 8 * j + 32);
      }
      uint64_t v28 = v27;
      if ([v27 (SEL)v7[254]] == 19)
      {
        sub_1D30024E8();
        sub_1D3002518();
        sub_1D3002528();
        sub_1D30024F8();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = v58;
    *(void *)&long long v58 = v1;
    if (v3 < 0)
    {
LABEL_62:
      swift_retain();
      uint64_t v29 = sub_1D30025A8();
      if (!v29) {
        goto LABEL_63;
      }
      goto LABEL_48;
    }
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    *(void *)&long long v58 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_62;
    }
  }
  if ((v3 & 0x4000000000000000) != 0) {
    goto LABEL_62;
  }
  uint64_t v29 = *(void *)(v3 + 16);
  swift_retain();
  if (!v29)
  {
LABEL_63:
    swift_release();
    uint64_t v39 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_64;
  }
LABEL_48:
  if (v29 < 1)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  unint64_t j = 0;
  int64_t v1 = 0x1E4FA0000uLL;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v30 = (id)MEMORY[0x1D942E3A0](j, v3);
    }
    else {
      id v30 = *(id *)(v3 + 8 * j + 32);
    }
    long long v31 = v30;
    id v32 = objc_msgSend(v30, sel_payload);
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = sub_1D3000F68();
      unint64_t v36 = v35;

      uint64_t v37 = (void *)sub_1D3000F58();
      sub_1D2F0D1CC(v34, v36);
    }
    else
    {
      uint64_t v37 = 0;
    }
    id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0D40]), sel_initWithData_, v37);

    if (v38)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
    ++j;
  }
  while (v29 != j);
  swift_release();
  uint64_t v39 = (void *)v58;
LABEL_64:
  swift_release();
  uint64_t v3 = (uint64_t)sub_1D2F60278(v57, (unint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v3 >> 62)
  {
LABEL_83:
    if (v3 >= 0) {
      uint64_t v39 = (void *)v6;
    }
    else {
      uint64_t v39 = (void *)v3;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1D30025A8();
    if (v40) {
      goto LABEL_67;
    }
LABEL_87:
    int v43 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_88;
  }
  uint64_t v40 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v40) {
    goto LABEL_87;
  }
LABEL_67:
  if (v40 < 1)
  {
    __break(1u);
    goto LABEL_95;
  }
  uint64_t v42 = 0;
  int v43 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v44 = (id)MEMORY[0x1D942E3A0](v42, v3);
    }
    else {
      id v44 = *(id *)(v3 + 8 * v42 + 32);
    }
    id v45 = v44;
    id v46 = objc_msgSend(v44, sel_label);
    if (v46)
    {
      id v47 = v46;
      uint64_t v48 = sub_1D3001B78();
      uint64_t v50 = v49;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v43 = sub_1D2F27B88(0, v43[2] + 1, 1, v43);
      }
      unint64_t v52 = v43[2];
      unint64_t v51 = v43[3];
      if (v52 >= v51 >> 1) {
        int v43 = sub_1D2F27B88((void *)(v51 > 1), v52 + 1, 1, v43);
      }
      uint64_t v43[2] = v52 + 1;
      uint64_t v53 = &v43[2 * v52];
      v53[4] = v48;
      v53[5] = v50;
    }
    else
    {
    }
    ++v42;
  }
  while (v40 != v42);
LABEL_88:
  swift_bridgeObjectRelease_n();
  if (!v43[2])
  {
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = type metadata accessor for NLXSpanLabels();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v43;
  uint64_t v39 = sub_1D2F27F00(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t j = v39[2];
  unint64_t v41 = v39[3];
  int64_t v1 = j + 1;
  if (j >= v41 >> 1) {
LABEL_95:
  }
    uint64_t v39 = sub_1D2F27F00((void *)(v41 > 1), v1, 1, v39);
  uint64_t v59 = v3;
  unint64_t v60 = sub_1D2F85A00();
  *(void *)&long long v58 = v40;
  v39[2] = v1;
  sub_1D2F0BE68(&v58, (uint64_t)&v39[5 * j + 4]);
  return v39;
}

uint64_t type metadata accessor for NLXFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for NLXFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NLXFeatureExtractor);
}

uint64_t dispatch thunk of NLXFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of NLXFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t type metadata accessor for NLXSpanLabels()
{
  uint64_t result = qword_1EA699528;
  if (!qword_1EA699528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D2F85A00()
{
  unint64_t result = qword_1EA699538;
  if (!qword_1EA699538)
  {
    type metadata accessor for NLXSpanLabels();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699538);
  }
  return result;
}

id sub_1D2F85A58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for UniversalCandidate(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1D3000CB8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UniversalCandidateCoreDataRecord();
  id v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  uint64_t v11 = (void *)sub_1D3001048();
  objc_msgSend(v10, sel_setId_, v11);

  objc_msgSend(v10, sel_setScore_, *(double *)(v2 + v4[6]));
  objc_msgSend(v10, sel_setLastSurfaced_, *(double *)(v2 + v4[7]));
  sub_1D3000FF8();
  sub_1D3000FE8();
  double v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v10, sel_setLastUpdated_, v13);
  sub_1D3000CF8();
  swift_allocObject();
  sub_1D3000CE8();
  sub_1D3000CA8();
  sub_1D3000CC8();
  v19[4] = *(void *)(v2 + v4[5]);
  sub_1D2F87D04();
  swift_retain();
  uint64_t v14 = sub_1D3000CD8();
  unint64_t v16 = v15;
  swift_release();
  uint64_t v17 = (void *)sub_1D3000F58();
  objc_msgSend(v10, sel_setCandidateEntity_, v17);

  sub_1D2F0D1CC(v14, v16);
  swift_release();
  return v10;
}

uint64_t sub_1D2F85F00@<X0>(char *a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v10 = (char *)v47 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  double v13 = (char *)v47 - v12;
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)v47 - v14;
  id v16 = objc_msgSend(v1, sel_id);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_6;
  }
  uint64_t v17 = v16;
  sub_1D3001068();

  int64_t v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v18(v4, v13, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_6:
    sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1D3001918();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBD65778);
    uint64_t v29 = sub_1D30018F8();
    os_log_type_t v30 = sub_1D30020B8();
    BOOL v31 = os_log_type_enabled(v29, v30);
    id v32 = v48;
    if (v31)
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_1D2F05000, v29, v30, "UniversalSuggestionsCoreData: Failed to retrieve ID when reading UniversalCandidate.", v33, 2u);
      MEMORY[0x1D942F2D0](v33, -1, -1);
    }

    goto LABEL_17;
  }
  v18(v15, v4, v5);
  objc_msgSend(v1, sel_score);
  uint64_t v20 = v19;
  objc_msgSend(v1, sel_lastSurfaced);
  uint64_t v22 = v21;
  id v23 = objc_msgSend(v1, sel_candidateEntity);
  if (v23)
  {
    unint64_t v24 = v23;
    uint64_t v25 = sub_1D3000F68();
    unint64_t v27 = v26;

    sub_1D3000C98();
    swift_allocObject();
    sub_1D3000C88();
    sub_1D2F87CB0();
    sub_1D3000C78();
    sub_1D2F0D1CC(v25, v27);
    swift_release();
    uint64_t v42 = v50;
    int v43 = v48;
    v18(v48, v15, v5);
    id v44 = (int *)type metadata accessor for UniversalCandidate(0);
    *(void *)&v43[v44[5]] = v42;
    *(void *)&v43[v44[6]] = v20;
    *(void *)&v43[v44[7]] = v22;
    return (*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v44 - 1) + 56))(v43, 0, 1, v44);
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1D3001918();
  __swift_project_value_buffer(v34, (uint64_t)qword_1EBD65778);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v15, v5);
  unint64_t v35 = sub_1D30018F8();
  os_log_type_t v36 = sub_1D30020B8();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v50 = v38;
    *(_DWORD *)uint64_t v37 = 136315138;
    v47[3] = v37 + 4;
    sub_1D2F87D98(&qword_1EA698E08, MEMORY[0x1E4F27990]);
    uint64_t v39 = sub_1D3002738();
    uint64_t v49 = sub_1D2F09508(v39, v40, &v50);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    unint64_t v41 = *(void (**)(char *, uint64_t))(v6 + 8);
    v41(v10, v5);
    _os_log_impl(&dword_1D2F05000, v35, v36, "UniversalSuggestionsCoreData: Failed to retrieve entity when reading UniversalCandidate with ID: %s.", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v38, -1, -1);
    MEMORY[0x1D942F2D0](v37, -1, -1);
  }
  else
  {

    unint64_t v41 = *(void (**)(char *, uint64_t))(v6 + 8);
    v41(v10, v5);
  }
  v41(v15, v5);
  id v32 = v48;
LABEL_17:
  uint64_t v46 = type metadata accessor for UniversalCandidate(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v32, 1, 1, v46);
}

uint64_t sub_1D2F8675C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v74 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UniversalCandidate(0);
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = (uint8_t *)v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D30010A8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v70 = (char *)&v69 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v69 - v20;
  MEMORY[0x1F4188790](v19);
  id v23 = (char *)&v69 - v22;
  id v24 = objc_msgSend(v2, sel_id);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_8;
  }
  uint64_t v25 = v24;
  uint64_t v73 = v23;
  sub_1D3001068();

  unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v26(v11, v21, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_8:
    sub_1D2F1CD78((uint64_t)v11, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1D3001918();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EBD65778);
    os_log_type_t v36 = sub_1D30018F8();
    os_log_type_t v37 = sub_1D30020B8();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_1D2F05000, v36, v37, "UniversalSuggestionsCoreData: Failed to retrieve ID when reading UniversalRuntimeSuggestion.", v38, 2u);
      MEMORY[0x1D942F2D0](v38, -1, -1);
    }

    goto LABEL_25;
  }
  v26(v73, v11, v12);
  id v27 = objc_msgSend(v2, sel_queryEntityName);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v69 = sub_1D3001B78();
    os_log_type_t v30 = v29;

    id v31 = objc_msgSend(v2, sel_topCandidate);
    if (v31)
    {
      id v32 = v31;
      uint64_t v70 = v30;
      sub_1D2F85F00(v5);
      uint64_t v34 = v71;
      uint64_t v33 = v72;
      if ((*(unsigned int (**)(char *, uint64_t, uint8_t *))(v71 + 48))(v5, 1, v72) != 1)
      {
        sub_1D2F2EEA4((uint64_t)v5, (uint64_t)v8);
        unsigned __int8 v58 = objc_msgSend(v2, sel_needsDisambiguation);
        uint64_t v59 = v33;
        unsigned __int8 v60 = v58;

        uint64_t v61 = v74;
        v26(v74, v73, v12);
        uint64_t v62 = (int *)type metadata accessor for UniversalRuntimeSuggestion(0);
        uint64_t v63 = (uint64_t)&v61[v62[6]];
        sub_1D2F2EEA4((uint64_t)v8, v63);
        (*(void (**)(uint64_t, void, uint64_t, uint8_t *))(v34 + 56))(v63, 0, 1, v59);
        uint64_t v64 = (uint64_t *)&v61[v62[5]];
        uint64_t v65 = v70;
        uint64_t *v64 = v69;
        v64[1] = (uint64_t)v65;
        v61[v62[7]] = v60;
        return (*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v62 - 1) + 56))(v61, 0, 1, v62);
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v73, v12);
      swift_bridgeObjectRelease();

      sub_1D2F1CD78((uint64_t)v5, &qword_1EA698AC0);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1D3001918();
      __swift_project_value_buffer(v48, (uint64_t)qword_1EBD65778);
      uint64_t v49 = v70;
      uint64_t v50 = v73;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v70, v73, v12);
      unint64_t v51 = sub_1D30018F8();
      os_log_type_t v52 = sub_1D30020B8();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        uint64_t v76 = v54;
        *(_DWORD *)uint64_t v53 = 136315138;
        uint64_t v72 = v53 + 4;
        sub_1D2F87D98(&qword_1EA698E08, MEMORY[0x1E4F27990]);
        uint64_t v55 = sub_1D3002738();
        uint64_t v75 = sub_1D2F09508(v55, v56, &v76);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        unint64_t v57 = *(void (**)(char *, uint64_t))(v13 + 8);
        v57(v49, v12);
        _os_log_impl(&dword_1D2F05000, v51, v52, "UniversalSuggestionsCoreData: Failed to retrieve top candidate when reading UniversalRuntimeSuggestion with ID: %s.", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v54, -1, -1);
        MEMORY[0x1D942F2D0](v53, -1, -1);
      }
      else
      {

        unint64_t v57 = *(void (**)(char *, uint64_t))(v13 + 8);
        v57(v49, v12);
      }
      v57(v50, v12);
    }
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1D3001918();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EBD65778);
    unint64_t v40 = v73;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v73, v12);
    unint64_t v41 = sub_1D30018F8();
    os_log_type_t v42 = sub_1D30020B8();
    if (os_log_type_enabled(v41, v42))
    {
      int v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v76 = v44;
      *(_DWORD *)int v43 = 136315138;
      sub_1D2F87D98(&qword_1EA698E08, MEMORY[0x1E4F27990]);
      uint64_t v45 = sub_1D3002738();
      uint64_t v75 = sub_1D2F09508(v45, v46, &v76);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      id v47 = *(void (**)(char *, uint64_t))(v13 + 8);
      v47(v16, v12);
      _os_log_impl(&dword_1D2F05000, v41, v42, "UniversalSuggestionsCoreData: Failed to retrieve name of key entity when reading UniversalRuntimeSuggestion with ID: %s.", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v44, -1, -1);
      MEMORY[0x1D942F2D0](v43, -1, -1);

      v47(v73, v12);
    }
    else
    {

      uint64_t v67 = *(void (**)(char *, uint64_t))(v13 + 8);
      v67(v16, v12);
      v67(v40, v12);
    }
  }
LABEL_25:
  uint64_t v68 = type metadata accessor for UniversalRuntimeSuggestion(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v74, 1, 1, v68);
}

uint64_t sub_1D2F870C8(uint64_t a1, unint64_t a2)
{
  type metadata accessor for UniversalSuggestionCoreDataRecord();
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a1);
  uint64_t v5 = (void *)sub_1D3001048();
  objc_msgSend(v4, sel_setId_, v5);

  type metadata accessor for UniversalSuggestion(0);
  uint64_t v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  objc_msgSend(v4, sel_setQueryEntityName_, v6);

  if (!(a2 >> 62))
  {
    uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v7 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1D942E3A0](i, a2);
      }
      else {
        id v10 = *(id *)(a2 + 8 * i + 32);
      }
      uint64_t v11 = v10;
      objc_msgSend(v4, sel_addCandidatesObject_, v10);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F87228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for UniversalCandidate(0);
  uint64_t v74 = *(void *)(v76 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v76);
  uint64_t v75 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v73 = (uint64_t)&v64 - v7;
  uint64_t v8 = sub_1D3000E08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D30010A8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v70 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v64 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v71 = (char *)&v64 - v22;
  id v23 = objc_msgSend(v1, sel_id);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_16;
  }
  id v24 = v23;
  uint64_t v69 = v9;
  sub_1D3001068();

  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v25(v14, v21, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_16:
    sub_1D2F1CD78((uint64_t)v14, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1D3001918();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EBD65778);
    uint64_t v34 = sub_1D30018F8();
    os_log_type_t v35 = sub_1D30020B8();
    if (os_log_type_enabled(v34, v35))
    {
      os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v36 = 0;
      _os_log_impl(&dword_1D2F05000, v34, v35, "UniversalSuggestionsCoreData: Failed to retrieve ID when reading UniversalSuggestion.", v36, 2u);
      MEMORY[0x1D942F2D0](v36, -1, -1);
    }

    goto LABEL_21;
  }
  uint64_t v26 = v15;
  v25(v71, v14, v15);
  id v27 = objc_msgSend(v1, sel_queryEntityName);
  if (!v27)
  {
    if (qword_1EBD63A48 == -1) {
      goto LABEL_38;
    }
    goto LABEL_45;
  }
  uint64_t v28 = v27;
  uint64_t v70 = (char *)v15;
  uint64_t v67 = sub_1D3001B78();
  uint64_t v66 = v29;

  id v30 = objc_msgSend(v1, sel_candidates);
  if (!v30)
  {
    sub_1D2F87D58();
    id v30 = (id)MEMORY[0x1D942DFA0](MEMORY[0x1E4FBC860]);
  }
  unint64_t v82 = MEMORY[0x1E4FBC860];
  id v31 = v30;
  sub_1D3002088();
  id v65 = v31;

  sub_1D2F87D98(&qword_1EBD610D8, MEMORY[0x1E4F27660]);
  sub_1D3002308();
  if (v81)
  {
    uint64_t v16 = MEMORY[0x1E4FBC840] + 8;
    do
    {
      sub_1D2F0B9B4(&v80, v79);
      sub_1D2F0BD44((uint64_t)v79, (uint64_t)v77);
      type metadata accessor for UniversalCandidateCoreDataRecord();
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v78 = 0;
      }
      uint64_t v32 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      uint64_t v26 = v78;
      if (v78)
      {
        MEMORY[0x1D942DCC0](v32);
        if (*(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D3001E28();
        }
        sub_1D3001E68();
        sub_1D3001DE8();
      }
      sub_1D3002308();
    }
    while (v81);
  }
  (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v8);
  unint64_t v39 = v82;
  uint64_t v68 = (void (*)(uint64_t, char *, char *))v25;
  if (v82 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1D30025A8();
    if (v40) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v40 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v40)
    {
LABEL_24:
      if (v40 >= 1)
      {
        uint64_t v41 = 0;
        os_log_type_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
        unint64_t v43 = MEMORY[0x1E4FBC860];
        do
        {
          if ((v39 & 0xC000000000000001) != 0) {
            id v44 = (id)MEMORY[0x1D942E3A0](v41, v39);
          }
          else {
            id v44 = *(id *)(v39 + 8 * v41 + 32);
          }
          uint64_t v45 = v44;
          sub_1D2F85F00(v4);

          if ((*v42)(v4, 1, v76) == 1)
          {
            sub_1D2F1CD78((uint64_t)v4, &qword_1EA698AC0);
          }
          else
          {
            uint64_t v46 = v73;
            sub_1D2F2EEA4((uint64_t)v4, v73);
            sub_1D2F2EEA4(v46, v75);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v43 = sub_1D2F28D1C(0, *(void *)(v43 + 16) + 1, 1, v43);
            }
            unint64_t v48 = *(void *)(v43 + 16);
            unint64_t v47 = *(void *)(v43 + 24);
            if (v48 >= v47 >> 1) {
              unint64_t v43 = sub_1D2F28D1C(v47 > 1, v48 + 1, 1, v43);
            }
            *(void *)(v43 + 16) = v48 + 1;
            sub_1D2F2EEA4(v75, v43+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v48);
          }
          ++v41;
        }
        while (v40 != v41);
        goto LABEL_43;
      }
      __break(1u);
LABEL_45:
      swift_once();
LABEL_38:
      uint64_t v49 = sub_1D3001918();
      __swift_project_value_buffer(v49, (uint64_t)qword_1EBD65778);
      uint64_t v50 = v70;
      unint64_t v51 = v71;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v70, v71, v26);
      os_log_type_t v52 = sub_1D30018F8();
      os_log_type_t v53 = sub_1D30020B8();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        *(void *)&long long v80 = v55;
        *(_DWORD *)uint64_t v54 = 136315138;
        uint64_t v76 = (uint64_t)(v54 + 4);
        sub_1D2F87D98(&qword_1EA698E08, MEMORY[0x1E4F27990]);
        uint64_t v56 = sub_1D3002738();
        *(void *)&v79[0] = sub_1D2F09508(v56, v57, (uint64_t *)&v80);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        unsigned __int8 v58 = *(void (**)(char *, uint64_t))(v16 + 8);
        v58(v50, v26);
        _os_log_impl(&dword_1D2F05000, v52, v53, "UniversalSuggestionsCoreData: Failed to retrieve name of key entity when reading UniversalSuggestion with ID: %s.", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v55, -1, -1);
        MEMORY[0x1D942F2D0](v54, -1, -1);

        v58(v51, v26);
      }
      else
      {

        uint64_t v59 = *(void (**)(char *, uint64_t))(v16 + 8);
        v59(v50, v26);
        v59(v51, v26);
      }
LABEL_21:
      uint64_t v37 = type metadata accessor for UniversalSuggestion(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v72, 1, 1, v37);
    }
  }
  unint64_t v43 = MEMORY[0x1E4FBC860];
LABEL_43:

  swift_bridgeObjectRelease_n();
  uint64_t v60 = v72;
  v68(v72, v71, v70);
  uint64_t v61 = type metadata accessor for UniversalSuggestion(0);
  uint64_t v62 = (uint64_t *)(v60 + *(int *)(v61 + 20));
  uint64_t v63 = v66;
  *uint64_t v62 = v67;
  v62[1] = v63;
  *(void *)(v60 + *(int *)(v61 + 24)) = v43;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 0, 1, v61);
}

unint64_t sub_1D2F87CB0()
{
  unint64_t result = qword_1EA699540;
  if (!qword_1EA699540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699540);
  }
  return result;
}

unint64_t sub_1D2F87D04()
{
  unint64_t result = qword_1EA699548;
  if (!qword_1EA699548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699548);
  }
  return result;
}

unint64_t sub_1D2F87D58()
{
  unint64_t result = qword_1EA699550;
  if (!qword_1EA699550)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA699550);
  }
  return result;
}

uint64_t sub_1D2F87D98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TypedNamedFeature.init(value:)(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 96), a1);
  return v1;
}

uint64_t TypedNamedFeature.init(value:)(char *a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v11 - v6;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    uint64_t v8 = sub_1D30022F8();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    type metadata accessor for TypedNamedFeature();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v9(v7, a1, v3);
    v9((char *)(v1 + *(void *)(*(void *)v1 + 96)), v7, v3);
  }
  return v1;
}

uint64_t type metadata accessor for TypedNamedFeature()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TypedNamedFeature.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

unint64_t sub_1D2F880B4()
{
  return static TypedNamedFeature.name.getter();
}

unint64_t sub_1D2F880FC()
{
  unint64_t v2 = static TypedNamedFeature.name.getter();
  uint64_t v0 = sub_1D3001C68();
  sub_1D2F88190(v0);
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D2F88190(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = v1 + *(void *)(v7 + 96);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)v14 - v10, v8, v2);
  sub_1D3001408();
  if (swift_dynamicCast())
  {
    sub_1D30013F8();
    uint64_t v11 = sub_1D3001498();
    swift_release();
    v14[1] = v11;
    sub_1D3001608();
    sub_1D2F88978();
    uint64_t v12 = sub_1D3002738();
    swift_release();
    swift_release();
  }
  else
  {
    v9(v6, v8, v2);
    return sub_1D3001BC8();
  }
  return v12;
}

uint64_t sub_1D2F88354(uint64_t a1)
{
  sub_1D2F37950(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61140);
  if (!swift_dynamicCast()) {
    return 2;
  }
  type metadata accessor for TypedNamedFeature();
  char v1 = static TypedNamedFeature.== infix(_:_:)();
  swift_release();
  return v1 & 1;
}

uint64_t TypedNamedFeature.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 96), a1);
  return v2;
}

uint64_t TypedNamedFeature.__allocating_init(value:)(char *a1)
{
  return TypedNamedFeature.init(value:)(a1);
}

unint64_t static TypedNamedFeature.name.getter()
{
  uint64_t v45 = sub_1D30029E8();
  uint64_t v1 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  id v44 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v0;
  type metadata accessor for TypedNamedFeature();
  swift_getMetatypeMetadata();
  uint64_t v49 = sub_1D3001BE8();
  uint64_t v50 = v3;
  sub_1D2F226C4();
  uint64_t v4 = sub_1D3002388();
  swift_bridgeObjectRelease();
  unint64_t v46 = *(void *)(v4 + 16);
  uint64_t v48 = v46 != 0;
  uint64_t v5 = v46 - v48;
  if (v46 == v48)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_32:
    uint64_t v49 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
    sub_1D2F37FC8();
    uint64_t v41 = sub_1D3001B18();
    swift_bridgeObjectRelease();
    return v41;
  }
  uint64_t v55 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1D2F09B08(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = 0;
    uint64_t v42 = v4;
    unint64_t v43 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v9 = (uint64_t *)(v4 + 32 * v48 + 56);
    unint64_t v10 = v46;
    uint64_t v47 = v5;
    do
    {
      if (v48 + v8 >= v10 || v8 >= v5)
      {
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v12 = *(v9 - 3);
      uint64_t v13 = *(v9 - 2);
      uint64_t v14 = *(v9 - 1);
      uint64_t v15 = *v9;
      swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x1D942DB30](v12, v13, v14, v15);
      uint64_t v17 = v16;
      unint64_t v19 = v18;
      uint64_t v20 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0) {
        uint64_t v20 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (v20)
      {
        swift_bridgeObjectRetain();
        unint64_t v21 = sub_1D3001CF8();
        unint64_t v23 = v22;
        swift_bridgeObjectRelease();
        if (sub_1D3001AF8())
        {
          unint64_t result = sub_1D2F88C7C(v21, v23);
          if ((result & 0x100000000) != 0) {
            goto LABEL_34;
          }
          id v24 = v44;
          sub_1D30029F8();
          char v25 = sub_1D30029C8();
          (*v43)(v24, v45);
          if (v25) {
            goto LABEL_23;
          }
        }
        if ((sub_1D3001AE8() & 1) == 0) {
          goto LABEL_22;
        }
        if (sub_1D3001AF8())
        {
          unint64_t result = sub_1D2F88C7C(v21, v23);
          if ((result & 0x100000000) != 0) {
            goto LABEL_35;
          }
          uint64_t v26 = v44;
          sub_1D30029F8();
          char v27 = sub_1D30029D8();
          (*v43)(v26, v45);
          if (v27) {
            goto LABEL_23;
          }
        }
        if ((sub_1D3001AE8() & 1) == 0 || (sub_1D3001AD8() & 1) == 0)
        {
LABEL_23:
          uint64_t v28 = sub_1D3001BD8();
          unint64_t v30 = v29;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          unint64_t v31 = sub_1D2F9FF34(1uLL, v17, v19);
          uint64_t v33 = v32;
          uint64_t v35 = v34;
          uint64_t v37 = v36;
          swift_bridgeObjectRelease();
          uint64_t v53 = v28;
          unint64_t v54 = v30;
          uint64_t v49 = v31;
          uint64_t v50 = v33;
          uint64_t v51 = v35;
          uint64_t v52 = v37;
          sub_1D2F375B4();
          swift_bridgeObjectRetain();
          sub_1D3001C58();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v10 = v46;
          swift_bridgeObjectRelease();
          uint64_t v17 = v53;
          unint64_t v19 = v54;
        }
        else
        {
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v5 = v47;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v6 = v55;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = sub_1D2F09B08(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v55;
      }
      unint64_t v39 = *(void *)(v6 + 16);
      unint64_t v38 = *(void *)(v6 + 24);
      if (v39 >= v38 >> 1)
      {
        unint64_t result = sub_1D2F09B08(v38 > 1, v39 + 1, 1);
        uint64_t v6 = v55;
      }
      ++v8;
      *(void *)(v6 + 16) = v39 + 1;
      unint64_t v40 = v6 + 16 * v39;
      *(void *)(v40 + 32) = v17;
      *(void *)(v40 + 40) = v19;
      v9 += 4;
    }
    while (v5 != v8);
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_1D2F88978()
{
  unint64_t result = qword_1EA699558;
  if (!qword_1EA699558)
  {
    sub_1D3001608();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699558);
  }
  return result;
}

uint64_t TypedNamedFeature.value.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 96));
}

uint64_t static TypedNamedFeature.== infix(_:_:)()
{
  unint64_t v0 = static TypedNamedFeature.name.getter();
  uint64_t v2 = v1;
  if (v0 == static TypedNamedFeature.name.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return 0;
    }
  }
  return sub_1D3001B28() & 1;
}

uint64_t TypedNamedFeature.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return swift_deallocClassInstance();
}

unint64_t sub_1D2F88C04()
{
  return sub_1D2F880B4();
}

uint64_t sub_1D2F88C28(uint64_t a1)
{
  return sub_1D2F88354(a1);
}

uint64_t sub_1D2F88C4C()
{
  return static TypedNamedFeature.== infix(_:_:)();
}

unint64_t sub_1D2F88C58()
{
  return sub_1D2F880FC();
}

unint64_t sub_1D2F88C7C(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1D2F88D5C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1D3002428();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_1D30024C8();
      }
      unsigned int v5 = sub_1D30024D8();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1D2F88D5C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_1D2F88DFC(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1D2F88E6C(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1D2F88DFC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_1D2F95344(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1D2F88E6C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1D30024C8();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

uint64_t sub_1D2F88F90(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of NamedFeature.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NamedFeature.equalTo(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D2F88FF4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TypedNamedFeature(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TypedNamedFeature);
}

uint64_t dispatch thunk of TypedNamedFeature.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TypedNamedFeature.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of TypedNamedFeature.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TypedNamedFeature.valueDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of TypedNamedFeature.equalTo(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

void **_s18SubscriptionStatusOwta(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s18SubscriptionStatusOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s18SubscriptionStatusOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s18SubscriptionStatusOMa()
{
  return &_s18SubscriptionStatusON;
}

uint64_t sub_1D2F8927C(uint64_t a1)
{
  return a1;
}

uint64_t KeyPathEvictor.init(keyPathGenerator:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t KeyPathEvictor.deinit()
{
  swift_release();
  return v0;
}

uint64_t sub_1D2F892D4(void *a1, void *a2)
{
  uint64_t v5 = *v2;
  ((void (*)(void))v2[2])();
  id v6 = a1;
  swift_getAtKeyPath();

  if (v10)
  {
    objc_msgSend(a2, sel_deleteObject_, v10);
    sub_1D2F89498(*(void *)(v5 + 88), *(void *)(v5 + 88));
    swift_allocObject();
    uint64_t v7 = sub_1D3001DF8();
    *int v8 = v10;
    swift_release();
    sub_1D3001EA8();
  }
  else
  {
    uint64_t v7 = sub_1D3001E38();
    swift_release();
  }
  return v7;
}

uint64_t KeyPathEvictor.__allocating_init(keyPathGenerator:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t KeyPathEvictor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F89474(void *a1, void *a2)
{
  return sub_1D2F892D4(a1, a2);
}

uint64_t sub_1D2F89498(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  }
  else
  {
    return MEMORY[0x1F4185768](0, a2);
  }
}

uint64_t sub_1D2F89508()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for KeyPathEvictor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for KeyPathEvictor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeyPathEvictor);
}

uint64_t dispatch thunk of KeyPathEvictor.__allocating_init(keyPathGenerator:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of KeyPathEvictor.evictRecord(record:context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1D2F895CC(uint64_t a1)
{
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A90);
  uint64_t v3 = MEMORY[0x1F4188790](v51);
  uint64_t v50 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v49 = (char *)&v40 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v48 = (char *)&v40 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AC0);
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v55 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (!v10) {
    return v11;
  }
  uint64_t v40 = v1;
  uint64_t v56 = MEMORY[0x1E4FBC860];
  sub_1D2F0A17C(0, v10, 0);
  uint64_t result = sub_1D2FCEF90(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v41 = a1 + 80;
  int64_t v42 = v10;
  uint64_t v44 = a1 + 64;
  uint64_t v45 = a1;
  uint64_t v43 = v13;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v19 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v52 = v15;
    uint64_t v53 = 1 << v14;
    uint64_t v20 = v51;
    uint64_t v54 = *(int *)(v51 + 48);
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = sub_1D30010A8();
    uint64_t v23 = *(void *)(v22 - 8);
    id v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v25 = (uint64_t)v48;
    v24(v48, v21 + *(void *)(v23 + 72) * v14, v22);
    uint64_t v26 = *(void *)(*(void *)(a1 + 56) + 8 * v14);
    *(void *)(v25 + v54) = v26;
    char v27 = v49;
    v24(v49, v25, v22);
    *(void *)&v27[*(int *)(v20 + 48)] = v26;
    uint64_t v28 = (uint64_t)v27;
    uint64_t v29 = v50;
    sub_1D2F80C04(v28, v50, &qword_1EBD62A90);
    swift_bridgeObjectRetain_n();
    sub_1D2F1CD78(v25, &qword_1EBD62A90);
    uint64_t v30 = *(void *)(v29 + *(int *)(v20 + 48));
    uint64_t v31 = *(int *)(v47 + 48);
    uint64_t v32 = (uint64_t)v55;
    v24(v55, v29, v22);
    *(void *)(v32 + v31) = v30;
    swift_bridgeObjectRetain();
    sub_1D2F1CD78(v29, &qword_1EBD62A90);
    uint64_t v11 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D2F0A17C(0, *(void *)(v11 + 16) + 1, 1);
      uint64_t v11 = v56;
    }
    unint64_t v34 = *(void *)(v11 + 16);
    unint64_t v33 = *(void *)(v11 + 24);
    a1 = v45;
    if (v34 >= v33 >> 1)
    {
      sub_1D2F0A17C(v33 > 1, v34 + 1, 1);
      uint64_t v11 = v56;
    }
    *(void *)(v11 + 16) = v34 + 1;
    uint64_t result = sub_1D2F80C04((uint64_t)v55, v11+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v34, &qword_1EBD62AC0);
    int64_t v17 = 1 << *(unsigned char *)(a1 + 32);
    if (v14 >= v17) {
      goto LABEL_27;
    }
    uint64_t v16 = v44;
    uint64_t v35 = *(void *)(v44 + 8 * v19);
    if ((v35 & v53) == 0) {
      goto LABEL_28;
    }
    LODWORD(v13) = v43;
    if (*(_DWORD *)(a1 + 36) != v43) {
      goto LABEL_29;
    }
    unint64_t v36 = v35 & (-2 << (v14 & 0x3F));
    if (v36)
    {
      int64_t v17 = __clz(__rbit64(v36)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v42;
    }
    else
    {
      unint64_t v37 = v19 + 1;
      unint64_t v38 = (unint64_t)(v17 + 63) >> 6;
      int64_t v18 = v42;
      if (v19 + 1 < v38)
      {
        unint64_t v39 = *(void *)(v44 + 8 * v37);
        if (v39)
        {
LABEL_22:
          int64_t v17 = __clz(__rbit64(v39)) + (v37 << 6);
        }
        else
        {
          while (v38 - 2 != v19)
          {
            unint64_t v39 = *(void *)(v41 + 8 * v19++);
            if (v39)
            {
              unint64_t v37 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v15 = v52 + 1;
    uint64_t v14 = v17;
    if (v52 + 1 == v18) {
      return v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1D2F89A40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D3001018();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_turnsStartDateTime);
  objc_allocWithZone((Class)type metadata accessor for ScanTurnsSubscriber(0));
  uint64_t v6 = swift_unknownObjectRetain();
  id v7 = sub_1D2F8C638(v6, (uint64_t)v4);
  swift_unknownObjectRelease();
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_inner);
  *(void *)(v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_inner) = v7;
  id v9 = v7;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers9ScanTurns_upstream), sel_subscribe_, v9);
}

id sub_1D2F89C0C()
{
  return sub_1D2F8C258(_s9ScanTurnsCMa);
}

uint64_t sub_1D2F89CB4()
{
  return _s9ScanTurnsCMa(0);
}

uint64_t _s9ScanTurnsCMa(uint64_t a1)
{
  return sub_1D2F25FA4(a1, qword_1EBD62B30);
}

uint64_t sub_1D2F89CDC()
{
  uint64_t result = sub_1D3001018();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1D2F89D84(void *a1)
{
  uint64_t v2 = *(void *)(v1
                 + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = a1;
  id v5 = a1;
  sub_1D2F1CC9C(v4);
  uint64_t v6 = *(void *)(v2 + 16);
  id v7 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62F10);
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[qword_1EA6990C0] = v6;
  v10.receiver = v8;
  v10.super_class = v7;
  swift_retain();
  id v9 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(*(id *)(*(void *)(v2 + 16) + 16), sel_receiveSubscription_, v9, v10.receiver, v10.super_class);
}

uint64_t sub_1D2F89EA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  id v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  objc_super v10 = (char *)&v71 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  long long v80 = (char *)&v71 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v71 - v13;
  uint64_t v15 = sub_1D30010A8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v19 = (uint8_t *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v71 - v21;
  MEMORY[0x1F4188790](v20);
  id v24 = (char *)&v71 - v23;
  sub_1D2F0BD44(a1, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD602F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v76 = v7;
  uint64_t v77 = (unsigned int (*)(char *, uint64_t, uint64_t))a1;
  uint64_t v75 = v19;
  uint64_t v78 = v24;
  uint64_t v79 = v16;
  id v25 = v82;
  id v26 = objc_msgSend(v82, sel_eventBody);
  char v27 = v26;
  if (v26)
  {
    uint64_t v28 = v14;
    id v29 = v25;
    uint64_t v30 = v15;
    uint64_t v31 = v2;
    id v32 = objc_msgSend(v26, sel_eventData);

    uint64_t v33 = sub_1D3000F68();
    unint64_t v35 = v34;

    uint64_t v2 = v31;
    uint64_t v15 = v30;
    id v25 = v29;
    uint64_t v14 = v28;
    char v27 = (void *)sub_1D3000F58();
    sub_1D2F0D1CC(v33, v35);
  }
  unint64_t v36 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA1248]), sel_initWithData_, v27);

  if (!v36)
  {

    a1 = (uint64_t)v77;
LABEL_8:
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1D3001918();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EBD65778);
    sub_1D2F0BD44(a1, (uint64_t)v83);
    uint64_t v45 = sub_1D30018F8();
    os_log_type_t v46 = sub_1D30020A8();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      id v82 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      __swift_project_boxed_opaque_existential_1(v83, v83[3]);
      uint64_t DynamicType = swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699780);
      uint64_t v49 = sub_1D3001BC8();
      uint64_t DynamicType = sub_1D2F09508(v49, v50, (uint64_t *)&v82);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
      _os_log_impl(&dword_1D2F05000, v45, v46, "ScanTurnsSubscriber ignored unexpected input type %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v48, -1, -1);
      MEMORY[0x1D942F2D0](v47, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    }

    return BPSDemandMax();
  }
  objc_msgSend(v25, sel_timestamp);
  double v38 = v37;
  sub_1D3000F98();
  char v40 = v38 < v39;
  uint64_t v73 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables;
  uint64_t v74 = v2;
  swift_retain();
  uint64_t v41 = (uint64_t)v80;
  sub_1D2F70A94(v40, v80);
  sub_1D2F1CCAC(v41, (uint64_t)v10, &qword_1EBD62AA0);
  uint64_t v42 = v79;
  uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  if (v77(v10, 1, v15) == 1)
  {
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v43(v14, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v22, v10, v15);
    swift_retain();
    sub_1D2F70510((uint64_t)v22, (uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v15);
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v43(v14, 0, 1, v15);
    swift_release();
  }
  sub_1D2F1CD78(v41, &qword_1EBD62AA0);
  swift_release();
  if (v77(v14, 1, v15) == 1)
  {
    sub_1D2F1CD78((uint64_t)v14, &qword_1EBD62AA0);
    uint64_t v51 = BPSDemandMax();

    return v51;
  }
  long long v80 = v36;
  uint64_t v53 = (uint64_t)v78;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v72 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v43;
  v71(v78, v14, v15);
  uint64_t v54 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_endpointer;
  uint64_t v55 = v74;
  swift_retain();
  objc_msgSend(v25, sel_timestamp);
  sub_1D2FDF784(v53, v56);
  swift_release();
  swift_retain();
  objc_msgSend(v25, sel_timestamp);
  unsigned __int8 v58 = v25;
  uint64_t v59 = v42;
  BOOL v60 = sub_1D2FDF970(v57);
  swift_release();
  if (!v60)
  {
LABEL_24:
    uint64_t v51 = BPSDemandMax();

    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v53, v15);
    return v51;
  }
  uint64_t v61 = *(void **)(*(void *)(v55 + v54) + 32);
  uint64_t v62 = v61[2];
  if (v62)
  {
    uint64_t v63 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v76, v62 + *(void *)(*(void *)v62 + 88), v15);
    uint64_t v64 = 0;
    id v65 = v58;
  }
  else
  {
    uint64_t v64 = 1;
    id v65 = v58;
    uint64_t v63 = (uint64_t)v76;
  }
  v72(v63, v64, 1, v15);
  swift_retain();
  sub_1D2F8C4CC(v61);
  swift_release();
  if (v77((char *)v63, 1, v15) == 1)
  {
    sub_1D2F1CD78(v63, &qword_1EBD62AA0);
    unsigned __int8 v58 = v65;
    uint64_t v53 = (uint64_t)v78;
    uint64_t v59 = v79;
    goto LABEL_24;
  }
  uint64_t v66 = v75;
  v71((char *)v75, (char *)v63, v15);
  type metadata accessor for SignalExtracting();
  uint64_t v67 = swift_retain();
  uint64_t v68 = sub_1D2FA10A8(v67, v66);
  swift_release();
  sub_1D2F8BD60(v68);
  if (v68)
  {
    uint64_t v51 = (uint64_t)sub_1D2F9B16C(v68);

    uint64_t v69 = *(void (**)(uint8_t *, uint64_t))(v79 + 8);
    v69(v66, v15);
    v69((uint8_t *)v78, v15);
    swift_release();
  }
  else
  {
    uint64_t v51 = BPSDemandMax();

    uint64_t v70 = *(void (**)(uint8_t *, uint64_t))(v79 + 8);
    v70(v66, v15);
    v70((uint8_t *)v78, v15);
  }
  return v51;
}

uint64_t sub_1D2F8A7C4(void *a1)
{
  sub_1D2F8AB90(a1);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  id v3 = a1;
  uint64_t v4 = sub_1D30018F8();
  os_log_type_t v5 = sub_1D30020A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    objc_msgSend(v3, sel_state);
    type metadata accessor for BPSCompletionState(0);
    uint64_t v8 = sub_1D3001BC8();
    sub_1D2F09508(v8, v9, &v11);
    sub_1D3002318();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v4, v5, "ScanTurns received a completion, state=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v7, -1, -1);
    MEMORY[0x1D942F2D0](v6, -1, -1);
  }
  else
  {
  }
  return sub_1D2F8B04C((__CFString *)2);
}

uint64_t sub_1D2F8AA08()
{
  uint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream)
                 + 16);
  uint64_t v2 = *(void **)(v1 + 24);
  if ((unint64_t)v2 >= 2) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  *(void *)(v1 + 24) = 1;
  sub_1D2F1CC9C(v2);
  objc_msgSend(v3, sel_cancel);

  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D3001918();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
  os_log_type_t v5 = sub_1D30018F8();
  os_log_type_t v6 = sub_1D30020A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D2F05000, v5, v6, "ScanTurns received a cancellation", v7, 2u);
    MEMORY[0x1D942F2D0](v7, -1, -1);
  }

  return sub_1D2F8B04C((__CFString *)2);
}

uint64_t sub_1D2F8AB90(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  os_log_type_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  objc_super v10 = (uint8_t *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_state) == (id)1)
  {
    uint64_t v11 = a1;
    return sub_1D2F9B26C(v11);
  }
  else
  {
    id v32 = a1;
    uint64_t v39 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables;
    uint64_t v12 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream;
    unint64_t v36 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    char v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v41 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_endpointer;
    uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v37 = *MEMORY[0x1E4F501C0];
    double v38 = (void (**)(uint8_t *, char *, uint64_t))(v8 + 32);
    id v34 = (id)*MEMORY[0x1E4F501C8];
    uint64_t v14 = (void (**)(uint8_t *, uint64_t))(v8 + 8);
    long long v33 = xmmword_1D3004380;
    uint64_t v35 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream;
    while (1)
    {
      uint64_t v15 = *(void **)(*(void *)(v2 + v41) + 32);
      uint64_t v16 = v15[2];
      if (v16)
      {
        (*v36)(v6, v16 + *(void *)(*(void *)v16 + 88), v7);
        (*v40)(v6, 0, 1, v7);
        uint64_t v17 = swift_retain();
      }
      else
      {
        (*v40)(v6, 1, 1, v7);
        uint64_t v17 = 0;
      }
      id v15[2] = v17;
      swift_retain();
      uint64_t result = swift_release();
      uint64_t v19 = v15[4];
      BOOL v20 = __OFSUB__(v19, 1);
      uint64_t v21 = v19 - 1;
      if (v20) {
        break;
      }
      v15[4] = v21 & ~(v21 >> 63);
      if (!v15[2])
      {
        v15[3] = 0;
        swift_release();
      }
      swift_release();
      if ((*v13)(v6, 1, v7) == 1)
      {
        sub_1D2F1CD78((uint64_t)v6, &qword_1EBD62AA0);
        uint64_t v11 = v32;
        return sub_1D2F9B26C(v11);
      }
      (*v38)(v10, v6, v7);
      type metadata accessor for SignalExtracting();
      uint64_t v22 = swift_retain();
      uint64_t v23 = sub_1D2FA10A8(v22, v10);
      swift_release();
      sub_1D2F8BD60(v23);
      if (v23)
      {
        uint64_t v24 = *(void *)(v2 + v12);
        uint64_t v25 = *(void *)(v24 + 16);
        if (*(void *)(v25 + 32) == v37)
        {
          swift_retain();
          sub_1D2FDF698(v23);
          swift_release();
          (*v14)(v10, v7);
          swift_release();
        }
        else
        {
          id v26 = objc_msgSend(*(id *)(v25 + 16), sel_receiveInput_, v23);
          uint64_t v27 = *(void *)(v24 + 16);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633A0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v33;
          *(void *)(inited + 32) = v26;
          id v29 = *(id *)(v27 + 32);
          *(void *)(inited + 40) = v29;
          if (v26 == v34 || v29 == v34)
          {
            uint64_t v30 = (uint64_t)v34;
            swift_retain();
          }
          else
          {
            swift_retain();
            uint64_t v30 = BPSDemandMax();
          }
          swift_bridgeObjectRelease();
          *(void *)(v27 + 32) = v30;
          swift_release();
          (*v14)(v10, v7);
          swift_release();
          uint64_t v12 = v35;
        }
      }
      else
      {
        (*v14)(v10, v7);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2F8B04C(__CFString *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D30010A8();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v90 = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v82 = (char *)v80 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AC0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v89 = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v88 = (unint64_t)v80 - v14;
  uint64_t v15 = *(void *)(*(void *)(v1
                              + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables)
                  + 24);
  swift_beginAccess();
  if (*(void *)(*(void *)(v15 + 16) + 16) && (sub_1D2F0DD10((int)a1), (v16 & 1) != 0))
  {
    swift_retain();
  }
  else
  {
    unint64_t v17 = sub_1D2F1F404(MEMORY[0x1E4FBC860]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62BC0);
    *(void *)(swift_allocObject() + 16) = v17;
  }
  swift_beginAccess();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1D2F895CC(v18);
  v80[2] = 0;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v81 = a1;
  if (v20)
  {
    uint64_t v21 = v19 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v22 = *(void *)(v11 + 72);
    uint64_t v86 = (void (**)(char *, uint64_t, uint64_t))(v83 + 16);
    uint64_t v87 = v22;
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(v83 + 32);
    uint64_t v84 = (unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
    int v85 = (void (**)(char *, void, uint64_t, uint64_t))(v83 + 56);
    v80[1] = v19;
    swift_bridgeObjectRetain();
    uint64_t v24 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v25 = v88;
      sub_1D2F1CCAC(v21, v88, &qword_1EBD62AC0);
      id v26 = v89;
      (*v86)(v89, v25, v6);
      uint64_t v27 = *v23;
      (*v23)(v5, v26, v6);
      (*v85)(v5, 0, 1, v6);
      sub_1D2F1CD78(v25, &qword_1EBD62AC0);
      if ((*v84)(v5, 1, v6) == 1)
      {
        sub_1D2F1CD78((uint64_t)v5, &qword_1EBD62AA0);
      }
      else
      {
        uint64_t v28 = v82;
        v27(v82, v5, v6);
        v27(v90, v28, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v24 = sub_1D2F27C98(0, *(void *)(v24 + 16) + 1, 1, v24);
        }
        unint64_t v30 = *(void *)(v24 + 16);
        unint64_t v29 = *(void *)(v24 + 24);
        if (v30 >= v29 >> 1) {
          uint64_t v24 = sub_1D2F27C98(v29 > 1, v30 + 1, 1, v24);
        }
        *(void *)(v24 + 16) = v30 + 1;
        v27((char *)(v24+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v30), v90, v6);
      }
      v21 += v87;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease_n();
    LODWORD(a1) = v81;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = MEMORY[0x1E4FBC860];
  }
  uint64_t v31 = sub_1D2F15980(v24);
  swift_bridgeObjectRelease();
  int64_t v32 = sub_1D2F9EB7C(v31);
  swift_bridgeObjectRelease();
  if (qword_1EBD63A48 != -1) {
    goto LABEL_100;
  }
  while (1)
  {
    uint64_t v33 = sub_1D3001918();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EBD65778);
    swift_retain();
    id v34 = sub_1D30018F8();
    os_log_type_t v35 = sub_1D30020A8();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v89 = (char *)v32;
    if (v36)
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 134218242;
      uint64_t v91 = *(void *)(v32 + 16);
      uint64_t v92 = v38;
      sub_1D3002318();
      swift_release();
      *(_WORD *)(v37 + 12) = 2080;
      if (a1 > 0x3F)
      {
        char v40 = @"COMPONENTNAME_UNKNOWN";
        uint64_t v41 = @"COMPONENTNAME_UNKNOWN";
      }
      else
      {
        uint64_t v39 = (int)a1;
        char v40 = off_1E696F950[v39];
        uint64_t v41 = off_1E696FB50[v39];
      }
      uint64_t v42 = v40;
      a1 = v41;
      uint64_t v43 = sub_1D3001B78();
      unint64_t v45 = v44;

      uint64_t v91 = sub_1D2F09508(v43, v45, &v92);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v34, v35, "ScanTurns found %ld unmatched %s id(s) remaining in the event table", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v38, -1, -1);
      MEMORY[0x1D942F2D0](v37, -1, -1);

      LODWORD(a1) = v81;
      int64_t v32 = (int64_t)v89;
    }
    else
    {

      swift_release();
    }
    os_log_type_t v46 = *(char **)(v32 + 16);
    uint64_t v90 = v46;
    if (v46)
    {
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      while (1)
      {
        uint64_t v49 = v47 + 1;
        if (__OFADD__(v47, 1)) {
          break;
        }
        BOOL v50 = __OFADD__(v48, 8);
        v48 += 8;
        if (v50) {
          uint64_t v48 = 0x7FFFFFFFFFFFFFFFLL;
        }
        ++v47;
        if (v48 >= (uint64_t)v46) {
          goto LABEL_32;
        }
      }
      __break(1u);
      goto LABEL_92;
    }
    uint64_t v49 = 0;
LABEL_32:
    uint64_t v92 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1D2F0A15C(0, v49 & ~(v49 >> 63), 0);
    if (v49 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v52 = v92;
    if (!v49) {
      break;
    }
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    a1 = (__CFString *)v89;
    uint64_t v55 = v90;
    unint64_t v88 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v87 = (uint64_t)&v89[v88];
    uint64_t v56 = 8;
    while (1)
    {
      uint64_t v57 = (uint64_t)v55 >= v56 ? v56 : (uint64_t)v55;
      if (v54 >= (unint64_t)v55) {
        break;
      }
      if (v54 == 0x7FFFFFFFFFFFFFF8) {
        goto LABEL_93;
      }
      if ((uint64_t)v55 >= v54 + 8) {
        int64_t v32 = v54 + 8;
      }
      else {
        int64_t v32 = (int64_t)v55;
      }
      if (v32 < v54) {
        goto LABEL_94;
      }
      int64_t data = (int64_t)a1->data;
      if (data < (unint64_t)v54 || data < v32) {
        goto LABEL_95;
      }
      sub_1D3002888();
      swift_retain_n();
      uint64_t v59 = swift_dynamicCastClass();
      if (!v59)
      {
        swift_release();
        uint64_t v59 = MEMORY[0x1E4FBC860];
      }
      uint64_t v60 = v57 + v53;
      uint64_t v61 = *(void *)(v59 + 16);
      swift_release();
      if (v60 == v61)
      {
        uint64_t v62 = swift_dynamicCastClass();
        if (!v62)
        {
          swift_release();
          uint64_t v62 = MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        swift_release();
        uint64_t v62 = sub_1D2F9E93C((uint64_t)a1, v87, v54, (2 * v32) | 1);
      }
      swift_release();
      uint64_t v92 = v52;
      int64_t v32 = *(void *)(v52 + 16);
      unint64_t v63 = *(void *)(v52 + 24);
      if (v32 >= v63 >> 1)
      {
        sub_1D2F0A15C(v63 > 1, v32 + 1, 1);
        uint64_t v52 = v92;
      }
      *(void *)(v52 + 16) = v32 + 1;
      *(void *)(v52 + 8 * v32 + 32) = v62;
      v56 += 8;
      v53 -= 8;
      v54 += 8;
      --v49;
      uint64_t v55 = v90;
      if (!v49)
      {
        if (v54 < (uint64_t)v90)
        {
          unint64_t v64 = v88;
          goto LABEL_60;
        }
LABEL_84:
        swift_release();
        LODWORD(a1) = v81;
        uint64_t v77 = *(void *)(v52 + 16);
        if (!v77) {
          return swift_release();
        }
        goto LABEL_85;
      }
    }
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    swift_once();
  }
  uint64_t v55 = v90;
  if (v90)
  {
    uint64_t v54 = 0;
    unint64_t v64 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    a1 = (__CFString *)v89;
LABEL_60:
    unint64_t v88 = (unint64_t)a1 + v64;
    int64_t v32 = v54 + 8;
    uint64_t v65 = -v54;
    uint64_t v66 = v54;
    while (1)
    {
      int64_t v67 = (uint64_t)v55 >= v32 ? v32 : (int64_t)v55;
      uint64_t v68 = v66 + 8;
      if (__OFADD__(v66, 8)) {
        goto LABEL_96;
      }
      if ((uint64_t)v55 >= v68) {
        uint64_t v69 = v66 + 8;
      }
      else {
        uint64_t v69 = (uint64_t)v55;
      }
      if (v69 < v66) {
        goto LABEL_97;
      }
      if (v54 < 0) {
        goto LABEL_98;
      }
      unint64_t v70 = (unint64_t)a1->data;
      if (v70 < v66 || (uint64_t)v70 < v69) {
        goto LABEL_99;
      }
      sub_1D3002888();
      swift_retain_n();
      uint64_t v72 = swift_dynamicCastClass();
      if (!v72)
      {
        swift_release();
        uint64_t v72 = MEMORY[0x1E4FBC860];
      }
      uint64_t v73 = *(void *)(v72 + 16);
      swift_release();
      if (v67 + v65 == v73)
      {
        a1 = (__CFString *)v89;
        uint64_t v74 = swift_dynamicCastClass();
        if (!v74)
        {
          swift_release();
          uint64_t v74 = MEMORY[0x1E4FBC860];
        }
      }
      else
      {
        a1 = (__CFString *)v89;
        swift_release();
        uint64_t v74 = sub_1D2F9E93C((uint64_t)a1, v88, v66, (2 * v69) | 1);
      }
      swift_release();
      uint64_t v92 = v52;
      unint64_t v76 = *(void *)(v52 + 16);
      unint64_t v75 = *(void *)(v52 + 24);
      if (v76 >= v75 >> 1)
      {
        sub_1D2F0A15C(v75 > 1, v76 + 1, 1);
        uint64_t v52 = v92;
      }
      *(void *)(v52 + 16) = v76 + 1;
      *(void *)(v52 + 8 * v76 + 32) = v74;
      v32 += 8;
      v65 -= 8;
      v66 += 8;
      uint64_t v55 = v90;
      if (v68 >= (uint64_t)v90) {
        goto LABEL_84;
      }
    }
  }
  swift_release();
  uint64_t v77 = *(void *)(v52 + 16);
  if (v77)
  {
LABEL_85:
    swift_retain();
    for (uint64_t i = 0; i != v77; ++i)
    {
      uint64_t v79 = *(void *)(v52 + 8 * i + 32);
      uint64_t v92 = v79;
      sub_1D2F8BAE0((uint64_t)&v92, a1);
    }
    swift_release();
  }
  return swift_release();
}

void sub_1D2F8BAE0(uint64_t a1, unsigned int a2)
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D3001918();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1D30018F8();
  os_log_type_t v5 = sub_1D30020A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v21 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    if (a2 > 0x3F)
    {
      uint64_t v9 = @"COMPONENTNAME_UNKNOWN";
      uint64_t v10 = @"COMPONENTNAME_UNKNOWN";
    }
    else
    {
      uint64_t v8 = (int)a2;
      uint64_t v9 = off_1E696FD50[v8];
      uint64_t v10 = off_1E696FF50[v8];
    }
    uint64_t v11 = v9;
    uint64_t v12 = v10;
    uint64_t v13 = sub_1D3001B78();
    unint64_t v15 = v14;

    sub_1D2F09508(v13, v15, &v21);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v16 = sub_1D30010A8();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x1D942DD00](v17, v16);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    sub_1D2F09508(v18, v20, &v21);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v4, v5, "  Could not find a matching request (%s): %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v7, -1, -1);
    MEMORY[0x1D942F2D0](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1D2F8BD60(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v38 = (char *)&v31 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = sub_1D30010A8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v37 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v31 - v18;
  uint64_t v36 = v1;
  uint64_t v20 = v1
      + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_previousTurnId;
  swift_beginAccess();
  sub_1D2F1CCAC(v20, (uint64_t)v13, &qword_1EBD62AA0);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v21(v13, 1, v14) == 1)
  {
    sub_1D2F1CD78((uint64_t)v13, &qword_1EBD62AA0);
    if (a1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v6, a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v14);
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v6, v22, 1, v14);
    swift_beginAccess();
    sub_1D2F8C464((uint64_t)v6, v20);
    return swift_endAccess();
  }
  id v34 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  os_log_type_t v35 = v19;
  v34(v19, v13, v14);
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    goto LABEL_12;
  }
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v33(v11, a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v14);
  uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  v23(v11, 0, 1, v14);
  if (v21(v11, 1, v14) == 1)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v35, v14);
    return sub_1D2F1CD78((uint64_t)v11, &qword_1EBD62AA0);
  }
  uint64_t v32 = v20;
  uint64_t v24 = v37;
  v34(v37, v11, v14);
  sub_1D2F614B0();
  uint64_t v25 = (uint64_t)v35;
  if ((sub_1D3001B28() & 1) == 0)
  {
    swift_beginAccess();
    swift_retain();
    swift_retain();
    id v26 = (void *)sub_1D2FDA994(v25);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  uint64_t v27 = (uint64_t)v38;
  v33(v38, (uint64_t)v24, v14);
  v23((char *)v27, 0, 1, v14);
  uint64_t v28 = v32;
  swift_beginAccess();
  sub_1D2F8C464(v27, v28);
  swift_endAccess();
  unint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v24, v14);
  return ((uint64_t (*)(uint64_t, uint64_t))v29)(v25, v14);
}

id sub_1D2F8C240()
{
  return sub_1D2F8C258(type metadata accessor for ScanTurnsSubscriber);
}

id sub_1D2F8C258(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1D2F8C354()
{
  return type metadata accessor for ScanTurnsSubscriber(0);
}

uint64_t type metadata accessor for ScanTurnsSubscriber(uint64_t a1)
{
  return sub_1D2F25FA4(a1, &qword_1EBD62FF8);
}

void sub_1D2F8C37C()
{
  sub_1D3001018();
  if (v0 <= 0x3F)
  {
    sub_1D2F56B58();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1D2F8C464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2F8C4CC(void *a1)
{
  if (a1[2]) {
    uint64_t v2 = swift_retain();
  }
  else {
    uint64_t v2 = 0;
  }
  a1[2] = v2;
  uint64_t result = swift_release();
  uint64_t v4 = a1[4];
  BOOL v5 = __OFSUB__(v4, 1);
  uint64_t v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    a1[4] = v6 & ~(v6 >> 63);
    if (!a1[2])
    {
      a1[3] = 0;
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1D2F8C568(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(a5 + 48);
  uint64_t v8 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a2, v8);
  return swift_bridgeObjectRetain();
}

id sub_1D2F8C638(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_innerSubscription] = 0;
  uint64_t v4 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_eventTables;
  type metadata accessor for EventTables();
  swift_allocObject();
  BOOL v5 = v2;
  *(void *)&v2[v4] = sub_1D2F749EC();
  uint64_t v6 = OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_endpointer;
  type metadata accessor for RequestStreamEndpointer();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBC870];
  void v7[2] = 0x404E000000000000;
  v7[3] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD632A8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[3] = 0;
  v9[4] = 0;
  v9[2] = 0;
  uint64_t v10 = MEMORY[0x1E4FBC868];
  v7[4] = v9;
  v7[5] = v10;
  *(void *)&v5[v6] = v7;
  uint64_t v11 = &v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_previousTurnId];
  uint64_t v12 = sub_1D30010A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD62D60);
  uint64_t v13 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD62E78);
  swift_allocObject();
  uint64_t v14 = swift_unknownObjectRetain();
  *(void *)(v13 + 16) = sub_1D2F9B374(v14);
  *(void *)&v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_downstream] = v13;
  uint64_t v15 = &v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_95987ADD223C83697EEA450CF0CC3A3519ScanTurnsSubscriber_turnsStartDateTime];
  uint64_t v16 = sub_1D3001018();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);

  v20.receiver = v5;
  v20.super_class = (Class)type metadata accessor for ScanTurnsSubscriber(0);
  id v18 = objc_msgSendSuper2(&v20, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
  return v18;
}

uint64_t sub_1D2F8C858(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return v6;
  }
  uint64_t v7 = a1;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1D2F09F3C(0, v5, 0);
  uint64_t v6 = v32;
  uint64_t result = sub_1D2F95E9C(v7);
  uint64_t v9 = result;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  uint64_t v23 = v7;
  uint64_t v24 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
  {
    if (((*(void *)(v24 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_14;
    }
    char v28 = v13;
    uint64_t v14 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = a3(0);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v15;
    *(void *)(v18 + 24) = v16;
    uint64_t v32 = v6;
    unint64_t v19 = *(void *)(v6 + 16);
    unint64_t v20 = *(void *)(v6 + 24);
    swift_bridgeObjectRetain();
    if (v19 >= v20 >> 1)
    {
      sub_1D2F09F3C(v20 > 1, v19 + 1, 1);
      uint64_t v6 = v32;
    }
    uint64_t v30 = v17;
    uint64_t v31 = sub_1D2F8FB5C(a4, a5);
    *(void *)&long long v29 = v18;
    *(void *)(v6 + 16) = v19 + 1;
    sub_1D2F0BE68(&v29, v6 + 40 * v19 + 32);
    uint64_t v7 = v23;
    uint64_t result = sub_1D2F95F40(v9, v11, v28 & 1, v23);
    uint64_t v9 = result;
    uint64_t v11 = v21;
    char v13 = v22 & 1;
    if (!--v5)
    {
      sub_1D2F92B98(result, v21, v13);
      return v6;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1D2F8CA38(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1D2F09B08(0, v2, 0);
    uint64_t v4 = (unsigned char *)(a1 + 32);
    uint64_t result = v10;
    do
    {
      if (*v4) {
        uint64_t v5 = 0x746E65746E6F63;
      }
      else {
        uint64_t v5 = 0x6E65697069636572;
      }
      if (*v4) {
        unint64_t v6 = 0xE700000000000000;
      }
      else {
        unint64_t v6 = 0xE900000000000074;
      }
      uint64_t v11 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1D2F09B08(v7 > 1, v8 + 1, 1);
        uint64_t result = v11;
      }
      *(void *)(result + 16) = v8 + 1;
      uint64_t v9 = result + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_1D2F8CB64(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D30025A8();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v22 = v1 & 0xC000000000000001;
      objc_super v3 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v4 = 4;
      unint64_t v21 = v1;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if (v22)
        {
          id v6 = (id)MEMORY[0x1D942E3A0](v4 - 4, v1);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v6 = *(id *)(v1 + 8 * v4);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        id v8 = v6;
        id v9 = objc_msgSend(v8, sel_flowState);
        if (v9)
        {
          id v10 = v9;
          id v11 = objc_msgSend(v10, sel_currentTaskName);
          if (v11)
          {
            char v12 = v11;
            uint64_t v13 = v2;
            uint64_t v14 = sub_1D3001B78();
            uint64_t v16 = v15;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              objc_super v3 = sub_1D2F27B88(0, v3[2] + 1, 1, v3);
            }
            unint64_t v18 = v3[2];
            unint64_t v17 = v3[3];
            if (v18 >= v17 >> 1) {
              objc_super v3 = sub_1D2F27B88((void *)(v17 > 1), v18 + 1, 1, v3);
            }
            v3[2] = v18 + 1;
            unint64_t v19 = &v3[2 * v18];
            v19[4] = v14;
            void v19[5] = v16;
            uint64_t v2 = v13;
            unint64_t v1 = v21;
          }
          else
          {
          }
        }
        else
        {
        }
        ++v4;
        if (v7 == v2) {
          goto LABEL_22;
        }
      }
    }
  }
  objc_super v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1D2F8CD60(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1D2F09B08(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1D2F0BD44(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2F09B08(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D2F09B08(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1D2F8CEA8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1D2F09F8C(0, v2, 0);
  uint64_t v3 = v10;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1D2F0BD44(i, (uint64_t)v9);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2F09F8C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1D2F09F8C(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v6 + 1;
      *(unsigned char *)(v3 + v6 + 32) = v8 & 1;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    return 0;
  }
  return v3;
}

uint64_t FlowClientEventFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FlowClientEventFeatureExtractor.init()()
{
  return v0;
}

unint64_t PromptEventType.Ending.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0xD000000000000010;
  }
}

unint64_t PromptEventType.Beginning.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000012;
  }
}

unint64_t FlowTaskStateType.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000019;
  }
  else {
    return 0xD00000000000001FLL;
  }
}

void sub_1D2F8D0C0(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    goto LABEL_16;
  }
  unint64_t v4 = *(void *)(a1 + 8 * v3 + 24);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D30025A8();
  if (!v5)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    char v10 = 2;
LABEL_17:
    *a2 = v10;
    return;
  }
LABEL_4:
  unint64_t v6 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_19:
    id v7 = (id)MEMORY[0x1D942E3A0](v6, v4);
LABEL_9:
    char v8 = v7;
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v8, sel_gaveOptions);

    if (v9)
    {

      char v10 = 1;
    }
    else
    {
      id v11 = objc_msgSend(v8, sel_offered);

      if (v11) {
        char v10 = 0;
      }
      else {
        char v10 = 3;
      }
    }
    goto LABEL_17;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v4 + 8 * v6 + 32);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1D2F8D200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1D3002928();
    sub_1D3001C28();
    uint64_t v6 = sub_1D3002968();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      id v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1D3002778() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1D3002778() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t PromptResult.rawValue.getter()
{
  if (*v0) {
    return 0x454C4C45434E4143;
  }
  else {
    return 0x414D5249464E4F43;
  }
}

SiriPrivateLearningAnalytics::FlowTaskResolvedSlotType_optional __swiftcall FlowTaskResolvedSlotType.init(rawValue:)(Swift::String rawValue)
{
  return (SiriPrivateLearningAnalytics::FlowTaskResolvedSlotType_optional)sub_1D2F8EEF0(v1);
}

uint64_t FlowTaskResolvedSlotType.rawValue.getter()
{
  if (*v0) {
    return 0x746E65746E6F63;
  }
  else {
    return 0x6E65697069636572;
  }
}

uint64_t ResolvedSlots.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_1D2F8D424(unint64_t a1)
{
  unint64_t v4 = a1;
  uint64_t v86 = *(long long **)v1;
  *(void *)&long long v91 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    uint64_t v6 = off_1E6970000;
    if (v5)
    {
LABEL_3:
      uint64_t v7 = sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD61450);
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_132;
      }
      uint64_t v8 = v7;
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          uint64_t v9 = (long long *)MEMORY[0x1D942E3A0](i, v4);
        }
        else {
          uint64_t v9 = (long long *)*(id *)(v4 + 8 * i + 32);
        }
        unint64_t v1 = v9;
        [v9 (SEL)v6[254]];
        uint64_t v10 = sub_1D30021F8();
        if (v10 && v8 == v10)
        {
          id v11 = objc_msgSend(v1, sel_payload);
          if (v11)
          {
            BOOL v12 = v11;
            uint64_t v13 = sub_1D3000F68();
            unint64_t v15 = v14;

            id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            BOOL v17 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v13, v15);
          }
          else
          {
            id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            BOOL v17 = 0;
          }
          id v18 = objc_msgSend(v16, sel_initWithData_, v17);

          if (v18)
          {
            self;
            uint64_t v19 = swift_dynamicCastObjCClass();

            if (v19)
            {
              MEMORY[0x1D942DCC0]();
              if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1D3001E28();
              }
              sub_1D3001E68();
              unint64_t v1 = &v91;
              sub_1D3001DE8();
            }
            else
            {
            }
          }
          else
          {
          }
          uint64_t v6 = off_1E6970000;
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = v91;
      if (!((unint64_t)v91 >> 62)) {
        goto LABEL_24;
      }
      goto LABEL_82;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v6 = off_1E6970000;
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!(MEMORY[0x1E4FBC860] >> 62))
  {
LABEL_24:
    uint64_t v20 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
LABEL_82:
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1D30025A8();
LABEL_25:
  uint64_t v89 = v20;
  uint64_t v90 = v3;
  if (!v20)
  {
    unint64_t v88 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_47;
  }
  if (v20 < 1)
  {
LABEL_132:
    __break(1u);
    __break(1u);
    goto LABEL_133;
  }
  uint64_t v21 = 0;
  unint64_t v22 = v3 & 0xC000000000000001;
  unint64_t v88 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v23 = off_1E6970000;
  uint64_t v24 = off_1E6970000;
  uint64_t v25 = off_1E6970000;
  do
  {
    if (v22) {
      id v26 = (id)MEMORY[0x1D942E3A0](v21, v3);
    }
    else {
      id v26 = *(id *)(v3 + 8 * v21 + 32);
    }
    uint64_t v27 = v26;
    id v28 = [v26 (SEL)v23[401]];
    if (v28
      && (long long v29 = v28, v30 = [v28 (SEL)v24[502]], v29, v30)
      && (id v31 = [v30 (SEL)v25[503]], v30, v31)
      && (id v32 = objc_msgSend(v31, sel_turnContext), v31, v32))
    {
      uint64_t v33 = v25;
      id v34 = v24;
      id v35 = objc_msgSend(v32, sel_nlContext);

      if (v35
        && (id v36 = objc_msgSend(v35, sel_systemDialogActs), v35, v36))
      {
        sub_1D2F0BCB8(0, &qword_1EA699578);
        uint64_t v37 = sub_1D3001DC8();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v88 = sub_1D2F2823C(0, v88[2] + 1, 1, v88);
        }
        unint64_t v39 = v88[2];
        unint64_t v38 = v88[3];
        if (v39 >= v38 >> 1) {
          unint64_t v88 = sub_1D2F2823C((void *)(v38 > 1), v39 + 1, 1, v88);
        }
        v88[2] = v39 + 1;
        v88[v39 + 4] = v37;
      }
      else
      {
      }
      uint64_t v24 = v34;
      uint64_t v25 = v33;
      uint64_t v23 = off_1E6970000;
    }
    else
    {
    }
    ++v21;
    uint64_t v3 = v90;
  }
  while (v89 != v21);
LABEL_47:
  swift_bridgeObjectRelease();
  unint64_t v1 = v86;
  sub_1D2F8D0C0((uint64_t)v88, (char *)&v91);
  swift_bridgeObjectRelease();
  char v87 = v91;
  uint64_t i = MEMORY[0x1E4FBC860];
  *(void *)&long long v91 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v40 = sub_1D2F0BCB8(0, &qword_1EBD61468);
    swift_bridgeObjectRetain();
    uint64_t v41 = 0;
    uint64_t v42 = off_1E6970000;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        uint64_t v43 = (long long *)MEMORY[0x1D942E3A0](v41, v4);
      }
      else {
        uint64_t v43 = (long long *)*(id *)(v4 + 8 * v41 + 32);
      }
      unint64_t v1 = v43;
      [v43 (SEL)v42[254]];
      uint64_t v44 = sub_1D30021F8();
      if (!v44 || v40 != v44) {
        goto LABEL_49;
      }
      id v45 = objc_msgSend(v1, sel_payload);
      if (v45)
      {
        uint64_t v46 = sub_1D3000F68();
        unint64_t v48 = v47;

        id v49 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        id v45 = (id)sub_1D3000F58();
        unint64_t v50 = v48;
        uint64_t v42 = off_1E6970000;
        sub_1D2F0D1CC(v46, v50);
      }
      else
      {
        id v49 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      }
      id v51 = objc_msgSend(v49, sel_initWithData_, v45);

      if (v51)
      {
        self;
        uint64_t v52 = swift_dynamicCastObjCClass();

        if (v52)
        {
          MEMORY[0x1D942DCC0]();
          if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          unint64_t v1 = &v91;
          sub_1D3001DE8();
        }
        else
        {
        }
      }
      else
      {
LABEL_49:
      }
      ++v41;
    }
    while (v5 != v41);
    swift_bridgeObjectRelease();
    uint64_t v5 = v91;
    uint64_t i = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v91 = i;
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v3 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_69;
    }
LABEL_84:
    swift_bridgeObjectRelease();
    unint64_t v4 = MEMORY[0x1E4FBC860];
    goto LABEL_85;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D30025A8();
  if (!v3) {
    goto LABEL_84;
  }
LABEL_69:
  if (v3 < 1)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  for (uint64_t j = 0; j != v3; ++j)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v54 = (id)MEMORY[0x1D942E3A0](j, v5);
    }
    else {
      id v54 = *(id *)(v5 + 8 * j + 32);
    }
    uint64_t v55 = v54;
    id v56 = objc_msgSend(v54, sel_flowEntityContextTier1);

    if (v56)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      unint64_t v1 = &v91;
      sub_1D3001DE8();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = v91;
  uint64_t i = MEMORY[0x1E4FBC860];
LABEL_85:
  *(void *)&long long v91 = i;
  if (!(v4 >> 62))
  {
    uint64_t v57 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v57) {
      goto LABEL_87;
    }
LABEL_98:
    swift_bridgeObjectRelease();
    uint64_t v61 = MEMORY[0x1E4FBC860];
    goto LABEL_99;
  }
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1D30025A8();
  swift_bridgeObjectRelease();
  if (!v57) {
    goto LABEL_98;
  }
LABEL_87:
  if (v57 < 1)
  {
LABEL_134:
    __break(1u);
    __break(1u);
    goto LABEL_135;
  }
  for (uint64_t k = 0; k != v57; ++k)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v59 = (id)MEMORY[0x1D942E3A0](k, v4);
    }
    else {
      id v59 = *(id *)(v4 + 8 * k + 32);
    }
    uint64_t v60 = v59;
    if (objc_msgSend(v59, sel_hasLinkId))
    {
      sub_1D30024E8();
      sub_1D3002518();
      sub_1D3002528();
      sub_1D30024F8();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v61 = v91;
  uint64_t i = MEMORY[0x1E4FBC860];
LABEL_99:
  *(void *)&long long v91 = MEMORY[0x1E4FBC868];
  if (v61 < 0 || (v61 & 0x4000000000000000) != 0)
  {
LABEL_123:
    swift_retain();
    uint64_t v62 = sub_1D30025A8();
    if (v62)
    {
LABEL_102:
      uint64_t i = 4;
      do
      {
        if ((v61 & 0xC000000000000001) != 0) {
          id v63 = (id)MEMORY[0x1D942E3A0](i - 4, v61);
        }
        else {
          id v63 = *(id *)(v61 + 8 * i);
        }
        unint64_t v64 = v63;
        uint64_t v65 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_123;
        }
        uint64_t v94 = (uint64_t)v63;
        sub_1D2F8F780((uint64_t *)&v91, (id *)&v94);

        ++i;
      }
      while (v65 != v62);
      swift_release_n();
      unint64_t v4 = v91;
      uint64_t i = MEMORY[0x1E4FBC860];
      *(void *)&long long v91 = MEMORY[0x1E4FBC860];
      if (!v3) {
        goto LABEL_125;
      }
      goto LABEL_109;
    }
  }
  else
  {
    uint64_t v62 = *(void *)(v61 + 16);
    swift_retain();
    if (v62) {
      goto LABEL_102;
    }
  }
  swift_release_n();
  unint64_t v4 = MEMORY[0x1E4FBC868];
  *(void *)&long long v91 = i;
  if (!v3)
  {
LABEL_125:
    swift_bridgeObjectRelease();
    uint64_t v94 = i;
    swift_bridgeObjectRelease();
    uint64_t v3 = i;
    if (!v89) {
      goto LABEL_130;
    }
LABEL_126:
    uint64_t v75 = i;
    uint64_t i = type metadata accessor for HasNLXEvents(0);
    unint64_t v1 = (long long *)swift_allocObject();
    *((unsigned char *)v1 + 16) = 1;
    uint64_t v5 = v75;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_127:
      unint64_t v77 = *(void *)(v5 + 16);
      unint64_t v76 = *(void *)(v5 + 24);
      if (v77 >= v76 >> 1) {
        uint64_t v5 = (uint64_t)sub_1D2F27F00((void *)(v76 > 1), v77 + 1, 1, (void *)v5);
      }
      uint64_t v92 = i;
      uint64_t v93 = sub_1D2F8FB5C(&qword_1EBD61120, (void (*)(uint64_t))type metadata accessor for HasNLXEvents);
      *(void *)&long long v91 = v1;
      *(void *)(v5 + 16) = v77 + 1;
      sub_1D2F0BE68(&v91, v5 + 40 * v77 + 32);
      uint64_t v94 = v5;
      goto LABEL_130;
    }
LABEL_135:
    uint64_t v5 = (uint64_t)sub_1D2F27F00(0, *(void *)(v5 + 16) + 1, 1, (void *)v5);
    goto LABEL_127;
  }
LABEL_109:
  swift_bridgeObjectRetain();
  for (uint64_t m = 0; m != v3; ++m)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v67 = (id)MEMORY[0x1D942E3A0](m, v5);
    }
    else {
      id v67 = *(id *)(v5 + 8 * m + 32);
    }
    uint64_t v68 = v67;
    id v69 = objc_msgSend(v67, sel_flowStep);

    if (v69)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = v91;
  swift_bridgeObjectRelease();
  unint64_t v70 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v94 = MEMORY[0x1E4FBC860];
  uint64_t HasFlowEvents = type metadata accessor for HasFlowEvents(0);
  uint64_t v72 = swift_allocObject();
  *(unsigned char *)(v72 + 16) = 1;
  uint64_t i = (uint64_t)sub_1D2F27F00(0, 1, 1, v70);
  unint64_t v74 = *(void *)(i + 16);
  unint64_t v73 = *(void *)(i + 24);
  if (v74 >= v73 >> 1) {
    uint64_t i = (uint64_t)sub_1D2F27F00((void *)(v73 > 1), v74 + 1, 1, (void *)i);
  }
  uint64_t v92 = HasFlowEvents;
  uint64_t v93 = sub_1D2F8FB5C(&qword_1EBD61148, (void (*)(uint64_t))type metadata accessor for HasFlowEvents);
  *(void *)&long long v91 = v72;
  *(void *)(i + 16) = v74 + 1;
  sub_1D2F0BE68(&v91, i + 40 * v74 + 32);
  swift_bridgeObjectRelease();
  uint64_t v94 = i;
  if (v89) {
    goto LABEL_126;
  }
LABEL_130:
  uint64_t v78 = sub_1D2F8FD14(v3);
  sub_1D2F9CE20(v78);
  uint64_t v79 = sub_1D2F90308(v3, v4);
  swift_bridgeObjectRelease();
  sub_1D2F9CE20((uint64_t)v79);
  LOBYTE(v91) = v87;
  long long v80 = sub_1D2F90AE8(v3, (unsigned __int8 *)&v91);
  sub_1D2F9CE20((uint64_t)v80);
  uint64_t v81 = sub_1D2F911F8(v3);
  sub_1D2F9CE20((uint64_t)v81);
  uint64_t v82 = sub_1D2F91834(v3);
  sub_1D2F9CE20(v82);
  uint64_t v83 = sub_1D2F91BE8(v3);
  sub_1D2F9CE20(v83);
  uint64_t v84 = sub_1D2F91FD8(v3);
  swift_bridgeObjectRelease();
  sub_1D2F9CE20(v84);
  return v94;
}

uint64_t HasNLXEvents.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t FlowClientEventFeatureExtractor.deinit()
{
  return v0;
}

uint64_t FlowClientEventFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F8E1A4(unint64_t *a1)
{
  return sub_1D2F8D424(*a1);
}

uint64_t sub_1D2F8E1D8(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptBeginEventType);
}

uint64_t sub_1D2F8E1F0(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptBeginEventType);
}

uint64_t sub_1D2F8E214(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptEndEventType);
}

uint64_t sub_1D2F8E22C(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2F8E268(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptEndEventType);
}

uint64_t sub_1D2F8E280(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t sub_1D2F8E304(uint64_t *a1)
{
  return sub_1D2F8E358(a1, (void (*)(void))type metadata accessor for PromptBeginCandidates);
}

uint64_t sub_1D2F8E31C(uint64_t *a1)
{
  return sub_1D2F8E3AC(a1, (void (*)(void))type metadata accessor for PromptBeginCandidates);
}

uint64_t sub_1D2F8E340(uint64_t *a1)
{
  return sub_1D2F8E358(a1, (void (*)(void))type metadata accessor for PromptEndCandidates);
}

uint64_t sub_1D2F8E358(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  return result;
}

uint64_t sub_1D2F8E394(uint64_t *a1)
{
  return sub_1D2F8E3AC(a1, (void (*)(void))type metadata accessor for PromptEndCandidates);
}

uint64_t sub_1D2F8E3AC(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  a2(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2)
  {
    *(void *)(v3 + 16) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698848);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v4;
}

uint64_t sub_1D2F8E428(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptEndResultAction);
}

uint64_t sub_1D2F8E440(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptEndResultAction);
}

uint64_t sub_1D2F8E464(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptEndResultEntity);
}

uint64_t sub_1D2F8E47C(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptEndResultEntity);
}

uint64_t sub_1D2F8E4A0(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptBeginSlotName);
}

uint64_t sub_1D2F8E4B8(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptBeginSlotName);
}

uint64_t PromptEndSlotName.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t PromptEndSlotName.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F8E508(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptEndSlotName);
}

uint64_t sub_1D2F8E520(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptEndSlotName);
}

uint64_t sub_1D2F8E544(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptBeginTaskName);
}

uint64_t sub_1D2F8E55C(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptBeginTaskName);
}

uint64_t sub_1D2F8E580(uint64_t *a1)
{
  return sub_1D2F8E22C(a1, (void (*)(void))type metadata accessor for PromptEndTaskName);
}

uint64_t sub_1D2F8E598(uint64_t *a1)
{
  return sub_1D2F8E280(a1, (void (*)(void))type metadata accessor for PromptEndTaskName);
}

uint64_t sub_1D2F8E5BC(uint64_t *a1)
{
  return sub_1D2F8E358(a1, (void (*)(void))type metadata accessor for TurnTaskNames);
}

uint64_t sub_1D2F8E5D4(uint64_t *a1)
{
  return sub_1D2F8E3AC(a1, (void (*)(void))type metadata accessor for TurnTaskNames);
}

uint64_t sub_1D2F8E5F8(uint64_t *a1)
{
  return sub_1D2F8E358(a1, (void (*)(void))type metadata accessor for FlowTaskStateNames);
}

uint64_t sub_1D2F8E610(uint64_t *a1)
{
  return sub_1D2F8E3AC(a1, (void (*)(void))type metadata accessor for FlowTaskStateNames);
}

uint64_t ResolvedSlots.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t ResolvedSlots.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F8E660(uint64_t *a1)
{
  return sub_1D2F8E358(a1, (void (*)(void))type metadata accessor for ResolvedSlots);
}

uint64_t sub_1D2F8E678(uint64_t *a1)
{
  return sub_1D2F8E3AC(a1, (void (*)(void))type metadata accessor for ResolvedSlots);
}

uint64_t HasFlowEvents.deinit()
{
  return v0;
}

uint64_t sub_1D2F8E6A0(char *a1)
{
  return sub_1D2F8E7F0(a1, (void (*)(void))type metadata accessor for HasFlowEvents);
}

uint64_t sub_1D2F8E6B8(unsigned __int8 *a1)
{
  return sub_1D2F8E844(a1, (void (*)(void))type metadata accessor for HasFlowEvents);
}

uint64_t HasNLXEvents.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t _s28SiriPrivateLearningAnalytics13HasFlowEventsC5valueACSgSbSg_tcfC_0(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t _s28SiriPrivateLearningAnalytics13HasFlowEventsC5valueACSgSbSg_tcfc_0(char a1)
{
  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t HasNLXEvents.deinit()
{
  return v0;
}

uint64_t HasNLXEvents.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F8E7D8(char *a1)
{
  return sub_1D2F8E7F0(a1, (void (*)(void))type metadata accessor for HasNLXEvents);
}

uint64_t sub_1D2F8E7F0(char *a1, void (*a2)(void))
{
  char v2 = *a1;
  a2(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v2;
  return result;
}

uint64_t sub_1D2F8E82C(unsigned __int8 *a1)
{
  return sub_1D2F8E844(a1, (void (*)(void))type metadata accessor for HasNLXEvents);
}

uint64_t sub_1D2F8E844(unsigned __int8 *a1, void (*a2)(void))
{
  int v2 = *a1;
  a2(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = v2 & 1;
  }
  return v4;
}

uint64_t sub_1D2F8E8C8(uint64_t *a1)
{
  return sub_1D2F8E358(a1, (void (*)(void))type metadata accessor for BundleIds);
}

uint64_t sub_1D2F8E8E0(uint64_t *a1)
{
  return sub_1D2F8E3AC(a1, (void (*)(void))type metadata accessor for BundleIds);
}

SiriPrivateLearningAnalytics::PromptEventType::PreviousTurn_optional __swiftcall PromptEventType.PreviousTurn.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_1D3002638();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

unint64_t PromptEventType.PreviousTurn.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x4B4E552D56455250;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D2F8E9EC(unsigned __int8 *a1, char *a2)
{
  return sub_1D2FBC728(*a1, *a2);
}

uint64_t sub_1D2F8E9F8()
{
  return sub_1D2FD52B8();
}

uint64_t sub_1D2F8EA00()
{
  return sub_1D2FD55DC();
}

uint64_t sub_1D2F8EA08()
{
  return sub_1D2FD5780();
}

SiriPrivateLearningAnalytics::PromptEventType::PreviousTurn_optional sub_1D2F8EA10(Swift::String *a1)
{
  return PromptEventType.PreviousTurn.init(rawValue:)(*a1);
}

unint64_t sub_1D2F8EA1C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PromptEventType.PreviousTurn.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

SiriPrivateLearningAnalytics::PromptEventType::Beginning_optional __swiftcall PromptEventType.Beginning.init(rawValue:)(Swift::String rawValue)
{
  return (SiriPrivateLearningAnalytics::PromptEventType::Beginning_optional)sub_1D2F8EEF0(v1);
}

uint64_t sub_1D2F8EA50(char *a1, char *a2)
{
  return sub_1D2FBC5D0(*a1, *a2);
}

uint64_t sub_1D2F8EA5C()
{
  return sub_1D2FD539C();
}

uint64_t sub_1D2F8EA64()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F8EAD8()
{
  return sub_1D2FD58E4();
}

SiriPrivateLearningAnalytics::PromptEventType::Beginning_optional sub_1D2F8EAE0(Swift::String *a1)
{
  return PromptEventType.Beginning.init(rawValue:)(*a1);
}

void sub_1D2F8EAEC(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000014;
  }
  else {
    unint64_t v2 = 0xD000000000000012;
  }
  unint64_t v3 = 0x80000001D300DA80;
  if (*v1) {
    unint64_t v3 = 0x80000001D300DAA0;
  }
  *a1 = v2;
  a1[1] = v3;
}

SiriPrivateLearningAnalytics::PromptEventType::Ending_optional __swiftcall PromptEventType.Ending.init(rawValue:)(Swift::String rawValue)
{
  return (SiriPrivateLearningAnalytics::PromptEventType::Ending_optional)sub_1D2F8EEF0(v1);
}

uint64_t sub_1D2F8EB3C(char *a1, char *a2)
{
  return sub_1D2FBC67C(*a1, *a2);
}

uint64_t sub_1D2F8EB48()
{
  return sub_1D2FD5424();
}

uint64_t sub_1D2F8EB50()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F8EBC4()
{
  return sub_1D2FD5860();
}

SiriPrivateLearningAnalytics::PromptEventType::Ending_optional sub_1D2F8EBCC(Swift::String *a1)
{
  return PromptEventType.Ending.init(rawValue:)(*a1);
}

void sub_1D2F8EBD8(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000012;
  }
  else {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x80000001D300DAC0;
  if (*v1) {
    unint64_t v3 = 0x80000001D300DAE0;
  }
  *a1 = v2;
  a1[1] = v3;
}

SiriPrivateLearningAnalytics::FlowTaskStateType_optional __swiftcall FlowTaskStateType.init(rawValue:)(Swift::String rawValue)
{
  return (SiriPrivateLearningAnalytics::FlowTaskStateType_optional)sub_1D2F8EEF0(v1);
}

uint64_t sub_1D2F8EC28(char *a1, char *a2)
{
  return sub_1D2FBC484(*a1, *a2);
}

uint64_t sub_1D2F8EC34()
{
  return sub_1D2FD54AC();
}

uint64_t sub_1D2F8EC3C()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F8ECB0()
{
  return sub_1D2FD5968();
}

SiriPrivateLearningAnalytics::FlowTaskStateType_optional sub_1D2F8ECB8(Swift::String *a1)
{
  return FlowTaskStateType.init(rawValue:)(*a1);
}

void sub_1D2F8ECC4(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000019;
  }
  else {
    unint64_t v2 = 0xD00000000000001FLL;
  }
  unint64_t v3 = 0x80000001D300DB00;
  if (*v1) {
    unint64_t v3 = 0x80000001D300DB20;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D2F8ED08(char *a1, char *a2)
{
  return sub_1D2FBC3D8(*a1, *a2);
}

uint64_t sub_1D2F8ED14()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F8ED9C()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F8EE10()
{
  return sub_1D3002968();
}

SiriPrivateLearningAnalytics::FlowTaskResolvedSlotType_optional sub_1D2F8EE94(Swift::String *a1)
{
  return FlowTaskResolvedSlotType.init(rawValue:)(*a1);
}

void sub_1D2F8EEA0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E65697069636572;
  if (*v1) {
    uint64_t v2 = 0x746E65746E6F63;
  }
  unint64_t v3 = 0xE900000000000074;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

SiriPrivateLearningAnalytics::PromptResult_optional __swiftcall PromptResult.init(rawValue:)(Swift::String rawValue)
{
  return (SiriPrivateLearningAnalytics::PromptResult_optional)sub_1D2F8EEF0(v1);
}

uint64_t sub_1D2F8EEF0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D3002638();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D2F8EF50(char *a1, char *a2)
{
  return sub_1D2FBC8B0(*a1, *a2);
}

uint64_t sub_1D2F8EF5C()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F8EFF0()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F8F070()
{
  return sub_1D3002968();
}

SiriPrivateLearningAnalytics::PromptResult_optional sub_1D2F8F100(Swift::String *a1)
{
  return PromptResult.init(rawValue:)(*a1);
}

void sub_1D2F8F10C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x414D5249464E4F43;
  if (*v1) {
    uint64_t v2 = 0x454C4C45434E4143;
  }
  unint64_t v3 = 0xEF4F4E5F4E4F4954;
  if (*v1) {
    unint64_t v3 = 0xE900000000000044;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1D2F8F15C(unint64_t a1, uint64_t a2)
{
  return sub_1D2F8F174(a1, a2);
}

unint64_t sub_1D2F8F174(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0) {
    return MEMORY[0x1D942E3A0]();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

void *sub_1D2F8F1D0(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D2F8F1E8(a1, a2, a3, a4);
}

void *sub_1D2F8F1E8(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v6 = a3;
  uint64_t result = a1(&v7, &v6);
  if (!v4) {
    return (void *)v7;
  }
  return result;
}

void sub_1D2F8F244(void *a1)
{
  uint64_t v2 = sub_1D3000E08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v6 <= 0)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v10 = *(void *)(MEMORY[0x1E4FBC860] + 24);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA6982C8);
    uint64_t v7 = (void *)swift_allocObject();
    int64_t v8 = _swift_stdlib_malloc_size(v7);
    uint64_t v9 = v8 - 32;
    if (v8 < 32) {
      uint64_t v9 = v8 - 1;
    }
    unint64_t v10 = 2 * (v9 >> 5);
    void v7[2] = v6;
    v7[3] = v10;
  }
  id v11 = a1;
  sub_1D3002088();

  if (v6 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v12 = v10 >> 1;
  uint64_t v13 = v7 + 4;
  if (v6)
  {
    v12 -= v6;
    sub_1D2F8FB5C(&qword_1EBD610D8, MEMORY[0x1E4F27660]);
    do
    {
      sub_1D3002308();
      if (!v33) {
        goto LABEL_38;
      }
      sub_1D2F0B9B4(&v32, v13);
      v13 += 2;
    }
    while (--v6);
  }
  uint64_t v29 = v3;
  sub_1D2F8FB5C(&qword_1EBD610D8, MEMORY[0x1E4F27660]);
  sub_1D3002308();
  if (v31)
  {
    while (1)
    {
      sub_1D2F0B9B4(&v30, &v32);
      if (!v12)
      {
        unint64_t v14 = v7[3];
        if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
        if (v15 <= 1) {
          uint64_t v16 = 1;
        }
        else {
          uint64_t v16 = v15;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA6982C8);
        BOOL v17 = (void *)swift_allocObject();
        int64_t v18 = _swift_stdlib_malloc_size(v17);
        uint64_t v19 = v18 - 32;
        if (v18 < 32) {
          uint64_t v19 = v18 - 1;
        }
        uint64_t v20 = v19 >> 5;
        id v17[2] = v16;
        v17[3] = 2 * (v19 >> 5);
        unint64_t v21 = (unint64_t)(v17 + 4);
        uint64_t v22 = v7[3] >> 1;
        if (v7[2])
        {
          if (v17 != v7 || v21 >= (unint64_t)&v7[4 * v22 + 4]) {
            memmove(v17 + 4, v7 + 4, 32 * v22);
          }
          void v7[2] = 0;
        }
        uint64_t v13 = (_OWORD *)(v21 + 32 * v22);
        unint64_t v12 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        swift_release();
        uint64_t v7 = v17;
      }
      BOOL v24 = __OFSUB__(v12--, 1);
      if (v24) {
        break;
      }
      sub_1D2F0B9B4(&v32, v13);
      v13 += 2;
      sub_1D3002308();
      if (!v31) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
  sub_1D2F1CD78((uint64_t)&v30, &qword_1EBD635B8);
  unint64_t v25 = v7[3];
  if (v25 >= 2)
  {
    unint64_t v26 = v25 >> 1;
    BOOL v24 = __OFSUB__(v26, v12);
    unint64_t v27 = v26 - v12;
    if (v24)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    void v7[2] = v27;
  }
}

uint64_t sub_1D2F8F5AC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_entitiesPresenteds);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_1D2F0BCB8(0, &qword_1EA6996B0);
  unint64_t v3 = sub_1D3001DC8();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_4:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1D942E3A0](v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_entityId);
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = sub_1D3001B78();
        uint64_t v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1D2F27B88(0, v7[2] + 1, 1, v7);
        }
        unint64_t v16 = v7[2];
        unint64_t v15 = v7[3];
        if (v16 >= v15 >> 1) {
          uint64_t v7 = sub_1D2F27B88((void *)(v15 > 1), v16 + 1, 1, v7);
        }
        void v7[2] = v16 + 1;
        BOOL v17 = &v7[2 * v16];
        v17[4] = v12;
        void v17[5] = v14;
      }
      else
      {
      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id sub_1D2F8F780(uint64_t *a1, id *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *a2;
  id result = objc_msgSend(*a2, sel_linkId);
  if (result)
  {
    uint64_t v9 = result;
    id v10 = objc_msgSend(result, sel_value);
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = sub_1D3000F68();
      unint64_t v14 = v13;

      sub_1D2F587AC(v12, v14, (uint64_t)v6);
      sub_1D2F0D1CC(v12, v14);
    }
    else
    {
      uint64_t v15 = sub_1D30010A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }

    uint64_t v16 = sub_1D30010A8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1) {
      return (id)sub_1D2F1CD78((uint64_t)v6, &qword_1EBD62AA0);
    }
    uint64_t v18 = sub_1D3001038();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    uint64_t v21 = sub_1D2F8F5AC(v7);
    if (!v21)
    {
      uint64_t v22 = *a1;
      if (*(void *)(*a1 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_1D2F0DC98(v18, v20);
        if (v24)
        {
          uint64_t v21 = *(void *)(*(void *)(v22 + 56) + 24 * v23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRelease();
          sub_1D2F92BA4(v21);
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v21 = 0;
    }
LABEL_13:
    id v25 = objc_msgSend(v7, sel_entitySelected);
    if (v25)
    {
      unint64_t v26 = v25;
      id v27 = objc_msgSend(v25, sel_entityId);

      if (v27)
      {
        uint64_t v28 = sub_1D3001B78();
        uint64_t v30 = v29;

LABEL_21:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v38 = *a1;
        *a1 = 0x8000000000000000;
        sub_1D2FE5E64(v21, v28, v30, v18, v20, isUniquelyReferenced_nonNull_native);
        *a1 = v38;
        swift_bridgeObjectRelease();
        return (id)swift_bridgeObjectRelease();
      }
    }
    uint64_t v31 = *a1;
    if (*(void *)(*a1 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1D2F0DC98(v18, v20);
      if (v33)
      {
        id v34 = (uint64_t *)(*(void *)(v31 + 56) + 24 * v32);
        uint64_t v35 = *v34;
        uint64_t v28 = v34[1];
        uint64_t v30 = v34[2];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1D2F92BA4(v35);
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = 0;
    uint64_t v30 = 0;
    goto LABEL_21;
  }
  return result;
}

uint64_t type metadata accessor for HasFlowEvents(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61150);
}

uint64_t type metadata accessor for HasNLXEvents(uint64_t a1)
{
  return sub_1D2F25FA4(a1, qword_1EBD61128);
}

uint64_t sub_1D2F8FB5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D2F8FBA4(uint64_t *a1, id *a2)
{
  id v3 = *a2;
  id v4 = objc_msgSend(*a2, sel_flowState);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_resolvedSlotName);

    if (v6)
    {
      uint64_t v7 = sub_1D3001B78();
      uint64_t v9 = v8;

      id v10 = objc_msgSend(v3, sel_flowState);
      if (!v10)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return;
      }
      id v11 = v10;
      unsigned int v12 = objc_msgSend(v10, sel_flowStateType);

      if (v12 <= 0x29)
      {
        if (((1 << v12) & 0x43408) != 0 || ((1 << v12) & 0x34000000024) != 0)
        {
LABEL_7:
          sub_1D2FDFC4C(&v13, v7, v9);
          goto LABEL_13;
        }
        if (v12 == 11)
        {
          if (sub_1D2F8D200(v7, v9, *a1) & 1) != 0 || (sub_1D2F8D200(v7, v9, a1[1])) {
            goto LABEL_13;
          }
          goto LABEL_7;
        }
      }
      if (v12 != 136) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
}

uint64_t sub_1D2F8FD14(unint64_t a1)
{
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v18 = MEMORY[0x1E4FBC870];
  uint64_t v19 = MEMORY[0x1E4FBC870];
  uint64_t v20 = MEMORY[0x1E4FBC870];
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1D30025A8())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D942E3A0](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v17 = v4;
      sub_1D2F8FBA4(&v18, &v17);

      ++v3;
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v18;
        uint64_t v8 = v19;
        uint64_t v9 = v20;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = MEMORY[0x1E4FBC870];
  uint64_t v8 = MEMORY[0x1E4FBC870];
  uint64_t v7 = MEMORY[0x1E4FBC870];
LABEL_13:
  uint64_t v10 = sub_1D2F8C858(v7, (uint64_t)v16, type metadata accessor for PromptBeginSlotName, &qword_1EA6996A8, (void (*)(uint64_t))type metadata accessor for PromptBeginSlotName);
  sub_1D2F9CE20(v10);
  uint64_t v11 = sub_1D2F8C858(v8, (uint64_t)v15, type metadata accessor for PromptEndSlotName, &qword_1EBD611C0, (void (*)(uint64_t))type metadata accessor for PromptEndSlotName);
  sub_1D2F9CE20(v11);
  uint64_t v12 = sub_1D2F8C858(v9, (uint64_t)v14, type metadata accessor for PromptBeginSlotName, &qword_1EA6996A8, (void (*)(uint64_t))type metadata accessor for PromptBeginSlotName);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2F9CE20(v12);
  return v21;
}

unint64_t sub_1D2F8FF44(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_26;
  }
  unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      if (__OFSUB__(v4--, 1)) {
        goto LABEL_23;
      }
      if ((a1 & 0xC000000000000001) != 0) {
        break;
      }
      if ((v4 & 0x8000000000000000) != 0)
      {
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain();
        unint64_t v4 = sub_1D30025A8();
        swift_bridgeObjectRelease();
        if (!v4) {
          return v4;
        }
      }
      else
      {
        if (v4 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_25;
        }
        id v6 = *(id *)(a1 + 32 + 8 * v4);
LABEL_11:
        uint64_t v7 = v6;
        id v8 = objc_msgSend(v6, sel_flowState);
        if (v8)
        {
          uint64_t v9 = v8;
          unsigned int v10 = objc_msgSend(v8, sel_flowStateType);

          uint64_t v11 = *(void *)(a2 + 16);
          if (v11)
          {
            if (*(_DWORD *)(a2 + 32) == v10)
            {
LABEL_20:

              return v4;
            }
            if (v11 != 1)
            {
              uint64_t v12 = 9;
              while (1)
              {
                uint64_t v13 = v12 - 7;
                if (__OFADD__(v12 - 8, 1)) {
                  break;
                }
                if (*(_DWORD *)(a2 + 4 * v12) == v10) {
                  goto LABEL_20;
                }
                ++v12;
                if (v13 == v11) {
                  goto LABEL_4;
                }
              }
              __break(1u);
LABEL_23:
              __break(1u);
              goto LABEL_24;
            }
          }
        }
LABEL_4:

        if (!v4) {
          return v4;
        }
      }
    }
    id v6 = (id)MEMORY[0x1D942E3A0](v4, a1);
    goto LABEL_11;
  }
  return v4;
}

id sub_1D2F900DC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(a1, sel_platformRelatedContext);
  if (!v5) {
    return 0;
  }
  id v6 = v5;
  id v7 = objc_msgSend(v5, sel_entityContextValue);

  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_linkId);

    if (v8)
    {
      id v9 = objc_msgSend(v8, sel_value);
      if (v9)
      {
        unsigned int v10 = v9;
        uint64_t v11 = sub_1D3000F68();
        unint64_t v13 = v12;

        sub_1D2F587AC(v11, v13, (uint64_t)v4);
        sub_1D2F0D1CC(v11, v13);
      }
      else
      {
        uint64_t v14 = sub_1D30010A8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
      }

      uint64_t v15 = sub_1D30010A8();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15) != 1)
      {
        id v7 = (id)sub_1D3001038();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v15);
        return v7;
      }
      sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62AA0);
    }
    return 0;
  }
  return v7;
}

void *sub_1D2F90308(unint64_t a1, uint64_t a2)
{
  unint64_t v49 = a1;
  unint64_t v4 = sub_1D2F8FF44(a1, (uint64_t)&unk_1F2A15588);
  if ((v5 & 1) == 0)
  {
    unint64_t v50 = v4;
    sub_1D2F92A94(&v50, (unint64_t *)&v46);
    id v6 = (void *)v46;
    if ((void)v46)
    {
      id v7 = sub_1D2F900DC((void *)v46);
      if (v8)
      {
        if (*(void *)(a2 + 16))
        {
          unint64_t v9 = sub_1D2F0DC98((uint64_t)v7, v8);
          if (v10)
          {
            uint64_t v11 = (uint64_t *)(*(void *)(a2 + 56) + 24 * v9);
            uint64_t v12 = *v11;
            uint64_t v13 = v11[1];
            uint64_t v14 = v11[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v12)
            {
              uint64_t v45 = v13;
              uint64_t v15 = type metadata accessor for PromptBeginCandidates(0);
              uint64_t v16 = swift_allocObject();
              *(void *)(v16 + 16) = v12;
              swift_bridgeObjectRetain();
              id v17 = sub_1D2F27F00(0, 1, 1, MEMORY[0x1E4FBC860]);
              unint64_t v19 = v17[2];
              unint64_t v18 = v17[3];
              if (v19 >= v18 >> 1) {
                id v17 = sub_1D2F27F00((void *)(v18 > 1), v19 + 1, 1, v17);
              }
              uint64_t v47 = v15;
              uint64_t v48 = sub_1D2F8FB5C(&qword_1EA6996A0, (void (*)(uint64_t))type metadata accessor for PromptBeginCandidates);
              *(void *)&long long v46 = v16;
              id v17[2] = v19 + 1;
              sub_1D2F0BE68(&v46, (uint64_t)&v17[5 * v19 + 4]);
              swift_bridgeObjectRelease();
              uint64_t v13 = v45;
              if (!v14) {
                goto LABEL_42;
              }
            }
            else
            {
              id v17 = (void *)MEMORY[0x1E4FBC860];
              if (!v14)
              {
LABEL_42:

                goto LABEL_14;
              }
            }
            uint64_t v41 = type metadata accessor for PromptEndResultEntity(0);
            uint64_t v42 = swift_allocObject();
            *(void *)(v42 + 16) = v13;
            *(void *)(v42 + 24) = v14;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v17 = sub_1D2F27F00(0, v17[2] + 1, 1, v17);
            }
            unint64_t v44 = v17[2];
            unint64_t v43 = v17[3];
            if (v44 >= v43 >> 1) {
              id v17 = sub_1D2F27F00((void *)(v43 > 1), v44 + 1, 1, v17);
            }
            uint64_t v47 = v41;
            uint64_t v48 = sub_1D2F8FB5C(&qword_1EA699690, (void (*)(uint64_t))type metadata accessor for PromptEndResultEntity);
            *(void *)&long long v46 = v42;
            id v17[2] = v44 + 1;
            sub_1D2F0BE68(&v46, (uint64_t)&v17[5 * v44 + 4]);
            goto LABEL_42;
          }
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
  }
  id v17 = (void *)MEMORY[0x1E4FBC860];
LABEL_14:
  unint64_t v49 = a1;
  unint64_t v20 = sub_1D2F8FF44(a1, (uint64_t)&unk_1F2A155B0);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  if ((v22 & 1) == 0)
  {
    unint64_t v50 = v21;
    sub_1D2F92A94(&v50, (unint64_t *)&v46);
    unint64_t v23 = (void *)v46;
    if ((void)v46)
    {
      id v24 = sub_1D2F900DC((void *)v46);
      if (v25)
      {
        if (!*(void *)(a2 + 16) || (unint64_t v26 = sub_1D2F0DC98((uint64_t)v24, v25), (v27 & 1) == 0))
        {

          swift_bridgeObjectRelease();
          return v17;
        }
        uint64_t v28 = (uint64_t *)(*(void *)(a2 + 56) + 24 * v26);
        uint64_t v29 = *v28;
        uint64_t v30 = v28[1];
        uint64_t v31 = v28[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v29)
        {
          uint64_t v32 = type metadata accessor for PromptEndCandidates(0);
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = v29;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v17 = sub_1D2F27F00(0, v17[2] + 1, 1, v17);
          }
          unint64_t v35 = v17[2];
          unint64_t v34 = v17[3];
          if (v35 >= v34 >> 1) {
            id v17 = sub_1D2F27F00((void *)(v34 > 1), v35 + 1, 1, v17);
          }
          uint64_t v47 = v32;
          uint64_t v48 = sub_1D2F8FB5C(&qword_1EA699698, (void (*)(uint64_t))type metadata accessor for PromptEndCandidates);
          *(void *)&long long v46 = v33;
          id v17[2] = v35 + 1;
          sub_1D2F0BE68(&v46, (uint64_t)&v17[5 * v35 + 4]);
          swift_bridgeObjectRelease();
        }
        if (v31)
        {
          uint64_t v36 = type metadata accessor for PromptEndResultEntity(0);
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = v30;
          *(void *)(v37 + 24) = v31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v17 = sub_1D2F27F00(0, v17[2] + 1, 1, v17);
          }
          unint64_t v39 = v17[2];
          unint64_t v38 = v17[3];
          if (v39 >= v38 >> 1) {
            id v17 = sub_1D2F27F00((void *)(v38 > 1), v39 + 1, 1, v17);
          }
          uint64_t v47 = v36;
          uint64_t v48 = sub_1D2F8FB5C(&qword_1EA699690, (void (*)(uint64_t))type metadata accessor for PromptEndResultEntity);
          *(void *)&long long v46 = v37;
          id v17[2] = v39 + 1;
          sub_1D2F0BE68(&v46, (uint64_t)&v17[5 * v39 + 4]);
        }
      }
    }
  }
  return v17;
}

unint64_t sub_1D2F90880(uint64_t a1, int *a2, char a3)
{
  int v3 = *a2;
  int v4 = *a2 - 10;
  unint64_t v5 = 0xD000000000000010;
  uint64_t v6 = 0xD000000000000014;
  unint64_t v7 = 0x80000001D300DAA0;
  unint64_t v8 = 0x80000001D300DAC0;
  unint64_t result = 0x80000001D300DA80;
  switch(v4)
  {
    case 0:
      goto LABEL_7;
    case 2:
    case 3:
    case 8:
      goto LABEL_3;
    case 28:
    case 29:
      unint64_t result = 0x80000001D300DAE0;
LABEL_3:
      if ((v3 - 12) < 2) {
        goto LABEL_6;
      }
      if (v3 == 38)
      {
        unint64_t v8 = result;
        unint64_t v5 = 0xD000000000000012;
LABEL_13:
        uint64_t v6 = v5;
        uint64_t v10 = v8;
      }
      else
      {
        if (v3 != 18) {
          return swift_bridgeObjectRelease();
        }
LABEL_6:
        unint64_t v7 = result;
        uint64_t v6 = 0xD000000000000012;
LABEL_7:
        uint64_t v10 = v7;
      }
      sub_1D2FDFC4C(&v12, v6, v10);
      return swift_bridgeObjectRelease();
    case 30:
      goto LABEL_13;
    case 31:
      switch(a3)
      {
        case 1:
        case 2:
        case 3:
          char v11 = sub_1D3002778();
          unint64_t result = swift_bridgeObjectRelease();
          if (v11) {
            goto LABEL_12;
          }
          break;
        default:
          swift_bridgeObjectRelease();
LABEL_12:
          unint64_t v8 = 0x80000001D300DAC0;
          goto LABEL_13;
      }
      return result;
    default:
      return result;
  }
}

void *sub_1D2F90AE8(uint64_t a1, unsigned __int8 *a2)
{
  LODWORD(v7) = *a2;
  uint64_t v52 = (void *)MEMORY[0x1E4FBC860];
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&long long v46 = MEMORY[0x1E4FBC870];
    *((void *)&v46 + 1) = MEMORY[0x1E4FBC870];
    uint64_t v18 = *((void *)v10 + 2);
    if (v18)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v18; ++i)
      {
        int v51 = *(_DWORD *)&v10[4 * i + 32];
        sub_1D2F90880((uint64_t)&v46, &v51, v7);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v20 = *((void *)&v46 + 1);
      uint64_t j = v46;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = MEMORY[0x1E4FBC870];
      uint64_t j = MEMORY[0x1E4FBC870];
    }
    uint64_t v21 = sub_1D2F8C858(j, (uint64_t)v50, type metadata accessor for PromptBeginEventType, &qword_1EA699688, (void (*)(uint64_t))type metadata accessor for PromptBeginEventType);
    sub_1D2F9CE20(v21);
    uint64_t v22 = sub_1D2F8C858(v20, (uint64_t)v49, type metadata accessor for PromptEndEventType, &qword_1EA699680, (void (*)(uint64_t))type metadata accessor for PromptEndEventType);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2F9CE20(v22);
    if (!v8) {
      return v52;
    }
    unint64_t v5 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    uint64_t v23 = 4;
    while (1)
    {
      uint64_t v3 = v23 - 4;
      if (v5) {
        id v24 = (void *)MEMORY[0x1D942E3A0](v23 - 4, a1);
      }
      else {
        id v24 = *(id *)(a1 + 8 * v23);
      }
      uint64_t v2 = v24;
      uint64_t v25 = v23 - 3;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      id v26 = objc_msgSend(v24, sel_flowState);
      if (v26)
      {
        char v27 = v26;
        uint64_t j = (uint64_t)objc_msgSend(v26, sel_flowStateType);

        if (j == 5)
        {
          swift_bridgeObjectRelease();
          uint64_t j = type metadata accessor for PromptEndResultAction(0);
          uint64_t v3 = swift_allocObject();
          *(void *)(v3 + 16) = 0x454C4C45434E4143;
          *(void *)(v3 + 24) = 0xE900000000000044;
          uint64_t v2 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_66;
          }
          goto LABEL_37;
        }
      }
      else
      {
      }
      ++v23;
      if (v25 == v8) {
        goto LABEL_47;
      }
    }
  }
  if (a1 < 0) {
    uint64_t v2 = (void *)a1;
  }
  else {
    uint64_t v2 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1D30025A8();
  if (!v8) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x1D942E3A0](v9, a1);
      }
      else {
        id v11 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_flowState);
      if (v13)
      {
        uint64_t v14 = v13;
        unsigned int v15 = objc_msgSend(v13, sel_flowStateType);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1D2F28134(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v17 = *((void *)v10 + 2);
        unint64_t v16 = *((void *)v10 + 3);
        if (v17 >= v16 >> 1) {
          uint64_t v10 = sub_1D2F28134((char *)(v16 > 1), v17 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v17 + 1;
        *(_DWORD *)&v10[4 * v17 + 32] = v15;
      }
      else
      {
      }
      ++v9;
    }
    while (v8 != v9);
    goto LABEL_21;
  }
LABEL_65:
  __break(1u);
LABEL_66:
  uint64_t v2 = sub_1D2F27F00(0, v2[2] + 1, 1, v2);
LABEL_37:
  unint64_t v29 = v2[2];
  unint64_t v28 = v2[3];
  if (v29 >= v28 >> 1) {
    uint64_t v2 = sub_1D2F27F00((void *)(v28 > 1), v29 + 1, 1, v2);
  }
  uint64_t v47 = j;
  uint64_t v48 = sub_1D2F8FB5C(&qword_1EA699678, (void (*)(uint64_t))type metadata accessor for PromptEndResultAction);
  *(void *)&long long v46 = v3;
  v2[2] = v29 + 1;
  sub_1D2F0BE68(&v46, (uint64_t)&v2[5 * v29 + 4]);
  uint64_t v52 = v2;
  if (v7 == 1)
  {
    uint64_t v7 = type metadata accessor for PromptEndEventType(0);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v30;
    unint64_t v32 = 0xD000000000000012;
    uint64_t v33 = "END-DISAMBIGUATION";
  }
  else
  {
    if (v7) {
      goto LABEL_46;
    }
    uint64_t v7 = type metadata accessor for PromptEndEventType(0);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v30;
    unint64_t v32 = 0xD000000000000010;
    uint64_t v33 = "END-CONFIRMATION";
  }
  *(void *)(v30 + 16) = v32;
  *(void *)(v30 + 24) = (unint64_t)(v33 - 32) | 0x8000000000000000;
  unint64_t v35 = v2[2];
  unint64_t v34 = v2[3];
  if (v35 >= v34 >> 1) {
    uint64_t v2 = sub_1D2F27F00((void *)(v34 > 1), v35 + 1, 1, v2);
  }
  uint64_t v47 = v7;
  uint64_t v48 = sub_1D2F8FB5C(&qword_1EA699680, (void (*)(uint64_t))type metadata accessor for PromptEndEventType);
  *(void *)&long long v46 = v31;
  v2[2] = v35 + 1;
  sub_1D2F0BE68(&v46, (uint64_t)&v2[5 * v35 + 4]);
  uint64_t v52 = v2;
LABEL_46:
  swift_bridgeObjectRetain();
LABEL_47:
  for (uint64_t j = 4; ; ++j)
  {
    uint64_t v3 = j - 4;
    if (v5) {
      uint64_t v36 = (void *)MEMORY[0x1D942E3A0](j - 4, a1);
    }
    else {
      uint64_t v36 = *(id *)(a1 + 8 * j);
    }
    uint64_t v2 = v36;
    uint64_t v37 = j - 3;
    if (__OFADD__(v3, 1)) {
      goto LABEL_64;
    }
    id v38 = objc_msgSend(v36, sel_flowState);
    if (v38) {
      break;
    }

LABEL_49:
    if (v37 == v8)
    {
      swift_bridgeObjectRelease();
      return v52;
    }
  }
  unint64_t v39 = v38;
  LODWORD(v7) = objc_msgSend(v38, sel_flowStateType);

  if (v7 != 41) {
    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = type metadata accessor for PromptEndResultAction(0);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = 0x414D5249464E4F43;
  *(void *)(v41 + 24) = 0xEF4F4E5F4E4F4954;
  uint64_t v42 = v52;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v42 = sub_1D2F27F00(0, v42[2] + 1, 1, v42);
  }
  unint64_t v44 = v42[2];
  unint64_t v43 = v42[3];
  if (v44 >= v43 >> 1) {
    uint64_t v42 = sub_1D2F27F00((void *)(v43 > 1), v44 + 1, 1, v42);
  }
  uint64_t v47 = v40;
  uint64_t v48 = sub_1D2F8FB5C(&qword_1EA699678, (void (*)(uint64_t))type metadata accessor for PromptEndResultAction);
  *(void *)&long long v46 = v41;
  v42[2] = v44 + 1;
  sub_1D2F0BE68(&v46, (uint64_t)&v42[5 * v44 + 4]);
  return v42;
}

void *sub_1D2F911F8(uint64_t a1)
{
  unint64_t v3 = a1;
  unint64_t v52 = MEMORY[0x1E4FBC860];
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v1 = a1;
    }
    else {
      uint64_t v1 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D30025A8();
    unint64_t v5 = (SEL *)&selRef_flowState;
    if (v4) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    unint64_t v15 = MEMORY[0x1E4FBC860];
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v5 = (SEL *)&selRef_flowState;
  if (!v4) {
    goto LABEL_21;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
LABEL_53:
    uint64_t v2 = sub_1D2F27F00(0, v2[2] + 1, 1, v2);
    goto LABEL_47;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1D942E3A0](i, v3);
    }
    else {
      id v7 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    id v9 = [v7 *v5];
    if (v9
      && (uint64_t v10 = v9,
          id v11 = objc_msgSend(v9, sel_currentTaskName),
          v10,
          v11))
    {
      uint64_t v12 = sub_1D3001B78();
      uint64_t v14 = v13;

      *(void *)&long long v49 = v12;
      *((void *)&v49 + 1) = v14;
      strcpy((char *)v48, "sirikit.intent");
      HIBYTE(v48[1]) = -18;
      sub_1D2F92AF0();
      sub_1D2F92B44();
      LOBYTE(v12) = sub_1D3001B08();
      swift_bridgeObjectRelease();
      if (v12)
      {
        sub_1D30024E8();
        sub_1D3002518();
        sub_1D3002528();
        sub_1D30024F8();
      }
      else
      {
      }
      unint64_t v5 = (SEL *)&selRef_flowState;
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v15 = v52;
LABEL_22:
  unint64_t v52 = v15;
  unint64_t v16 = sub_1D2F8FF44(v15, (uint64_t)&unk_1F2A155D8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  if (v18) {
    goto LABEL_32;
  }
  v48[0] = v17;
  sub_1D2F92A94(v48, (unint64_t *)&v49);
  unint64_t v19 = (void *)v49;
  if (!(void)v49) {
    goto LABEL_32;
  }
  id v20 = [(id)v49 *v5];
  if (!v20
    || (uint64_t v21 = v20,
        id v22 = objc_msgSend(v20, sel_currentTaskName),
        v21,
        !v22))
  {

LABEL_32:
    uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_33;
  }
  uint64_t v23 = sub_1D3001B78();
  uint64_t v25 = v24;

  uint64_t v26 = type metadata accessor for PromptBeginTaskName(0);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v23;
  *(void *)(v27 + 24) = v25;
  uint64_t v2 = sub_1D2F27F00(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v29 = v2[2];
  unint64_t v28 = v2[3];
  if (v29 >= v28 >> 1) {
    uint64_t v2 = sub_1D2F27F00((void *)(v28 > 1), v29 + 1, 1, v2);
  }
  uint64_t v50 = v26;
  uint64_t v51 = sub_1D2F8FB5C(&qword_1EA699670, (void (*)(uint64_t))type metadata accessor for PromptBeginTaskName);
  *(void *)&long long v49 = v27;
  v2[2] = v29 + 1;
  sub_1D2F0BE68(&v49, (uint64_t)&v2[5 * v29 + 4]);

  unint64_t v5 = (SEL *)&selRef_flowState;
LABEL_33:
  unint64_t v52 = v15;
  unint64_t v30 = sub_1D2F8FF44(v15, (uint64_t)&unk_1F2A15610);
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  if (v32)
  {
    uint64_t v33 = 0;
  }
  else
  {
    v48[0] = v31;
    sub_1D2F92A94(v48, (unint64_t *)&v49);
    uint64_t v33 = (void *)v49;
  }
  swift_release();
  if (v33)
  {
    id v34 = [v33 *v5];
    if (v34)
    {
      unint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_currentTaskName);

      if (v36)
      {
        uint64_t v37 = sub_1D3001B78();
        uint64_t v39 = v38;

        uint64_t v40 = type metadata accessor for PromptEndTaskName(0);
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = v37;
        *(void *)(v41 + 24) = v39;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v2 = sub_1D2F27F00(0, v2[2] + 1, 1, v2);
        }
        unint64_t v43 = v2[2];
        unint64_t v42 = v2[3];
        if (v43 >= v42 >> 1) {
          uint64_t v2 = sub_1D2F27F00((void *)(v42 > 1), v43 + 1, 1, v2);
        }
        uint64_t v50 = v40;
        uint64_t v51 = sub_1D2F8FB5C(&qword_1EA699668, (void (*)(uint64_t))type metadata accessor for PromptEndTaskName);
        *(void *)&long long v49 = v41;
        v2[2] = v43 + 1;
        sub_1D2F0BE68(&v49, (uint64_t)&v2[5 * v43 + 4]);
      }
    }
  }
  unint64_t v44 = sub_1D2F8CB64(v3);
  if (!v44[2])
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v1 = type metadata accessor for TurnTaskNames(0);
  unint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v44;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_53;
  }
LABEL_47:
  unint64_t v46 = v2[2];
  unint64_t v45 = v2[3];
  if (v46 >= v45 >> 1) {
    uint64_t v2 = sub_1D2F27F00((void *)(v45 > 1), v46 + 1, 1, v2);
  }
  uint64_t v50 = v1;
  uint64_t v51 = sub_1D2F8FB5C(&qword_1EBD61188, (void (*)(uint64_t))type metadata accessor for TurnTaskNames);
  *(void *)&long long v49 = v3;
  v2[2] = v46 + 1;
  sub_1D2F0BE68(&v49, (uint64_t)&v2[5 * v46 + 4]);
  return v2;
}

uint64_t sub_1D2F91834(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_17:
    unint64_t v5 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1D942E3A0](v4, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v7 = v6;
      id v8 = objc_msgSend(v6, sel_flowState);
      if (v8)
      {
        id v9 = v8;
        unsigned int v10 = objc_msgSend(v8, sel_flowStateType);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v5 = sub_1D2F28134(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v12 = *((void *)v5 + 2);
        unint64_t v11 = *((void *)v5 + 3);
        if (v12 >= v11 >> 1) {
          unint64_t v5 = sub_1D2F28134((char *)(v11 > 1), v12 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v12 + 1;
        *(_DWORD *)&v5[4 * v12 + 32] = v10;
      }
      else
      {
      }
      ++v4;
    }
    while (v2 != v4);
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v13 = *((void *)v5 + 2);
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      unint64_t v15 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        int v17 = *(_DWORD *)&v5[4 * v14 + 32];
        if (v17 == 26) {
          break;
        }
        if (v17 == 11)
        {
          unint64_t v18 = 0x80000001D300DB20;
          unint64_t v19 = 0xD000000000000019;
LABEL_26:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v15 = sub_1D2F27B88(0, v15[2] + 1, 1, v15);
          }
          unint64_t v21 = v15[2];
          unint64_t v20 = v15[3];
          if (v21 >= v20 >> 1) {
            unint64_t v15 = sub_1D2F27B88((void *)(v20 > 1), v21 + 1, 1, v15);
          }
          id v15[2] = v21 + 1;
          unint64_t v16 = &v15[2 * v21];
          v16[4] = v19;
          v16[5] = v18;
        }
        if (v13 == ++v14)
        {
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
      unint64_t v19 = 0xD00000000000001FLL;
      unint64_t v18 = 0x80000001D300DB00;
      goto LABEL_26;
    }
    unint64_t v15 = (void *)MEMORY[0x1E4FBC860];
LABEL_32:
    swift_bridgeObjectRelease();
    sub_1D2F08680((uint64_t)v15);
    swift_bridgeObjectRelease();
    id v22 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
    uint64_t v23 = (void *)sub_1D3001DA8();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(v22, sel_initWithArray_, v23);

    sub_1D2F8F244(v24);
    uint64_t v26 = v25;

    uint64_t v27 = sub_1D2F8CD60(v26);
    swift_release();
    if (v27)
    {
      if (*(void *)(v27 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1D3004370;
        uint64_t v29 = type metadata accessor for FlowTaskStateNames(0);
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v27;
        *(void *)(v28 + 56) = v29;
        *(void *)(v28 + 64) = sub_1D2F8FB5C(&qword_1EA699660, (void (*)(uint64_t))type metadata accessor for FlowTaskStateNames);
        *(void *)(v28 + 32) = v30;
        return v28;
      }
      swift_bridgeObjectRelease();
    }
    return MEMORY[0x1E4FBC860];
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F91BE8(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1D942E3A0](v4, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v7 = v6;
      id v8 = objc_msgSend(v6, sel_flowState);
      if (v8
        && (id v9 = v8,
            id v10 = objc_msgSend(v8, sel_resolvedSlotName),
            v9,
            v10))
      {
        uint64_t v11 = sub_1D3001B78();
        uint64_t v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v5 = sub_1D2F27B88(0, v5[2] + 1, 1, v5);
        }
        unint64_t v15 = v5[2];
        unint64_t v14 = v5[3];
        if (v15 >= v14 >> 1) {
          unint64_t v5 = sub_1D2F27B88((void *)(v14 > 1), v15 + 1, 1, v5);
        }
        uint64_t v5[2] = v15 + 1;
        unint64_t v16 = &v5[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
      }
      else
      {
      }
      ++v4;
    }
    while (v2 != v4);
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v17 = v5[2];
    if (v17)
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = v5 + 5;
      unint64_t v19 = (char *)MEMORY[0x1E4FBC860];
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1D3002638();
        swift_bridgeObjectRelease();
        if (!v20) {
          break;
        }
        if (v20 == 1)
        {
          char v21 = 1;
LABEL_27:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v19 = sub_1D2F28140(0, *((void *)v19 + 2) + 1, 1, v19);
          }
          unint64_t v23 = *((void *)v19 + 2);
          unint64_t v22 = *((void *)v19 + 3);
          if (v23 >= v22 >> 1) {
            unint64_t v19 = sub_1D2F28140((char *)(v22 > 1), v23 + 1, 1, v19);
          }
          *((void *)v19 + 2) = v23 + 1;
          v19[v23 + 32] = v21;
        }
        v18 += 2;
        if (!--v17)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
      char v21 = 0;
      goto LABEL_27;
    }
    unint64_t v19 = (char *)MEMORY[0x1E4FBC860];
LABEL_33:
    swift_bridgeObjectRelease();
    sub_1D2F087A8((uint64_t)v19);
    swift_bridgeObjectRelease();
    id v24 = objc_allocWithZone(MEMORY[0x1E4F1CAA0]);
    uint64_t v25 = (void *)sub_1D3001DA8();
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(v24, sel_initWithArray_, v25);

    sub_1D2F8F244(v26);
    uint64_t v28 = v27;

    uint64_t v29 = sub_1D2F8CEA8(v28);
    swift_release();
    if (v29)
    {
      if (*(void *)(v29 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1D3004370;
        uint64_t v31 = sub_1D2F8CA38(v29);
        swift_bridgeObjectRelease();
        uint64_t v32 = type metadata accessor for ResolvedSlots(0);
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v31;
        *(void *)(v30 + 56) = v32;
        *(void *)(v30 + 64) = sub_1D2F8FB5C(&qword_1EA699658, (void (*)(uint64_t))type metadata accessor for ResolvedSlots);
        *(void *)(v30 + 32) = v33;
        return v30;
      }
      swift_bridgeObjectRelease();
    }
    return MEMORY[0x1E4FBC860];
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2F91FD8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D30025A8();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_18:
    unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_18;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1D942E3A0](v4, a1);
    }
    else {
      id v6 = *(id *)(a1 + 8 * v4 + 32);
    }
    id v7 = v6;
    id v8 = objc_msgSend(v6, sel_appContext);
    if (v8
      && (id v9 = v8, v10 = objc_msgSend(v8, sel_bundleId), v9, v10))
    {
      uint64_t v11 = sub_1D3001B78();
      uint64_t v13 = v12;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v5 = sub_1D2F27B88(0, v5[2] + 1, 1, v5);
      }
      unint64_t v15 = v5[2];
      unint64_t v14 = v5[3];
      if (v15 >= v14 >> 1) {
        unint64_t v5 = sub_1D2F27B88((void *)(v14 > 1), v15 + 1, 1, v5);
      }
      uint64_t v5[2] = v15 + 1;
      unint64_t v16 = &v5[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    else
    {
    }
    ++v4;
  }
  while (v2 != v4);
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v17 = v5[2];
  if (v17)
  {
    unint64_t v18 = v5 + 5;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v23 = *(v18 - 1);
      uint64_t v24 = *v18;
      BOOL v25 = v23 == 0x6C7070615F746F6ELL && v24 == 0xEE00656C62616369;
      if (!v25 && (sub_1D3002778() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1D2F09B08(0, *(void *)(v19 + 16) + 1, 1);
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1) {
          sub_1D2F09B08(v20 > 1, v21 + 1, 1);
        }
        *(void *)(v19 + 16) = v21 + 1;
        uint64_t v22 = v19 + 16 * v21;
        *(void *)(v22 + 32) = v23;
        *(void *)(v22 + 40) = v24;
      }
      v18 += 2;
      --v17;
    }
    while (v17);
  }
  else
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1D2F158E8(v19);
  swift_release();
  if (*(void *)(v26 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1D3004370;
    uint64_t v28 = sub_1D2F9E854(v26);
    swift_bridgeObjectRelease();
    uint64_t v29 = type metadata accessor for BundleIds(0);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v28;
    *(void *)(v27 + 56) = v29;
    *(void *)(v27 + 64) = sub_1D2F8FB5C(&qword_1EA699650, (void (*)(uint64_t))type metadata accessor for BundleIds);
    *(void *)(v27 + 32) = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v27;
}

unint64_t sub_1D2F92364()
{
  unint64_t result = qword_1EA699580;
  if (!qword_1EA699580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699580);
  }
  return result;
}

unint64_t sub_1D2F923BC()
{
  unint64_t result = qword_1EA699588;
  if (!qword_1EA699588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699588);
  }
  return result;
}

unint64_t sub_1D2F92414()
{
  unint64_t result = qword_1EA699590;
  if (!qword_1EA699590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699590);
  }
  return result;
}

unint64_t sub_1D2F9246C()
{
  unint64_t result = qword_1EA699598;
  if (!qword_1EA699598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699598);
  }
  return result;
}

unint64_t sub_1D2F924C4()
{
  unint64_t result = qword_1EA6995A0;
  if (!qword_1EA6995A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6995A0);
  }
  return result;
}

unint64_t sub_1D2F9251C()
{
  unint64_t result = qword_1EA6995A8;
  if (!qword_1EA6995A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6995A8);
  }
  return result;
}

uint64_t type metadata accessor for FlowClientEventFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for FlowClientEventFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlowClientEventFeatureExtractor);
}

uint64_t dispatch thunk of FlowClientEventFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FlowClientEventFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t type metadata accessor for PromptBeginEventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6995B0);
}

uint64_t type metadata accessor for PromptEndEventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6995C0);
}

uint64_t type metadata accessor for PromptBeginCandidates(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6995D0);
}

uint64_t type metadata accessor for PromptEndCandidates(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6995E0);
}

uint64_t type metadata accessor for PromptEndResultAction(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6995F0);
}

uint64_t type metadata accessor for PromptEndResultEntity(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699600);
}

uint64_t type metadata accessor for PromptBeginSlotName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699610);
}

uint64_t type metadata accessor for PromptEndSlotName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, qword_1EBD611C8);
}

uint64_t type metadata accessor for PromptBeginTaskName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61258);
}

uint64_t type metadata accessor for PromptEndTaskName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699620);
}

uint64_t type metadata accessor for TurnTaskNames(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61190);
}

uint64_t type metadata accessor for FlowTaskStateNames(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699630);
}

uint64_t type metadata accessor for ResolvedSlots(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EBD61160);
}

uint64_t type metadata accessor for BundleIds(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699640);
}

ValueMetadata *type metadata accessor for PromptEventType()
{
  return &type metadata for PromptEventType;
}

uint64_t getEnumTagSinglePayload for PromptEventType.PreviousTurn(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PromptEventType.PreviousTurn(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F92910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptEventType.PreviousTurn()
{
  return &type metadata for PromptEventType.PreviousTurn;
}

ValueMetadata *type metadata accessor for PromptEventType.Beginning()
{
  return &type metadata for PromptEventType.Beginning;
}

ValueMetadata *type metadata accessor for PromptEventType.Ending()
{
  return &type metadata for PromptEventType.Ending;
}

ValueMetadata *type metadata accessor for FlowTaskStateType()
{
  return &type metadata for FlowTaskStateType;
}

ValueMetadata *type metadata accessor for FlowTaskResolvedSlotType()
{
  return &type metadata for FlowTaskResolvedSlotType;
}

unsigned char *_s28SiriPrivateLearningAnalytics15PromptEventTypeO9BeginningOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F92A5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptResult()
{
  return &type metadata for PromptResult;
}

unint64_t sub_1D2F92A94@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1D2F92AAC(a1, a2);
}

unint64_t sub_1D2F92AAC@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1D2F8F174(*a1, **(void **)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1D2F92AF0()
{
  unint64_t result = qword_1EBD613E0;
  if (!qword_1EBD613E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD613E0);
  }
  return result;
}

unint64_t sub_1D2F92B44()
{
  unint64_t result = qword_1EBD613D8;
  if (!qword_1EBD613D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD613D8);
  }
  return result;
}

uint64_t sub_1D2F92B98(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2F92BA4(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t IncrementalMigrationManager.__allocating_init(bundle:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_1D2F92CA4(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  char v3 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = 1 << v3;
  uint64_t v5 = -1;
  if (1 << v3 < 64) {
    uint64_t v5 = ~(-1 << (1 << v3));
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  if (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = __clz(__rbit64(v6));
    unint64_t v9 = (v6 - 1) & v6;
    int64_t v10 = (unint64_t)(v4 + 63) >> 6;
    while (2)
    {
      uint64_t v11 = 8 * v8;
      uint64_t v12 = *(void *)(*(void *)(a1 + 48) + v11);
      uint64_t v13 = *(void **)(*(void *)(a1 + 56) + v11);
      swift_bridgeObjectRetain();
      id v15 = v13;
      if (v9)
      {
LABEL_6:
        unint64_t v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v17 = v16 | (v7 << 6);
        goto LABEL_7;
      }
      while (1)
      {
        int64_t v19 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          break;
        }
        if (v19 >= v10) {
          goto LABEL_27;
        }
        unint64_t v20 = *(void *)(v2 + 8 * v19);
        ++v7;
        if (!v20)
        {
          uint64_t v7 = v19 + 1;
          if (v19 + 1 >= v10) {
            goto LABEL_27;
          }
          unint64_t v20 = *(void *)(v2 + 8 * v7);
          if (!v20)
          {
            uint64_t v7 = v19 + 2;
            if (v19 + 2 >= v10) {
              goto LABEL_27;
            }
            unint64_t v20 = *(void *)(v2 + 8 * v7);
            if (!v20)
            {
              uint64_t v7 = v19 + 3;
              if (v19 + 3 >= v10) {
                goto LABEL_27;
              }
              unint64_t v20 = *(void *)(v2 + 8 * v7);
              if (!v20)
              {
                int64_t v21 = v19 + 4;
                if (v21 >= v10)
                {
LABEL_27:
                  swift_release();
                  return v12;
                }
                unint64_t v20 = *(void *)(v2 + 8 * v21);
                if (!v20)
                {
                  while (1)
                  {
                    uint64_t v7 = v21 + 1;
                    if (__OFADD__(v21, 1)) {
                      break;
                    }
                    if (v7 >= v10) {
                      goto LABEL_27;
                    }
                    unint64_t v20 = *(void *)(v2 + 8 * v7);
                    ++v21;
                    if (v20) {
                      goto LABEL_24;
                    }
                  }
                  __break(1u);
LABEL_44:
                  uint64_t v24 = 0;
                  uint64_t v25 = 6;
                  if (v10 > 6) {
                    uint64_t v25 = v10;
                  }
                  uint64_t v26 = v25 - 6;
                  while (v26 != v24)
                  {
                    unint64_t v23 = *(void *)(a1 + 112 + 8 * v24++);
                    if (v23)
                    {
                      uint64_t v7 = v24 + 5;
                      goto LABEL_31;
                    }
                  }
                  return 0;
                }
                uint64_t v7 = v21;
              }
            }
          }
        }
LABEL_24:
        unsigned int v14 = v20 - 1;
        unint64_t v9 = (v20 - 1) & v20;
        unint64_t v17 = __clz(__rbit64(v20)) + (v7 << 6);
LABEL_7:
        uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v17);
        if (v18 < v12)
        {
          id v22 = *(id *)(*(void *)(a1 + 56) + 8 * v17);

          id v15 = v22;
          uint64_t v12 = v18;
          if (v9) {
            goto LABEL_6;
          }
        }
        else if (v9)
        {
          goto LABEL_6;
        }
      }
      __break(1u);
LABEL_38:
      if (v14 >= 9)
      {
        unint64_t v23 = *(void *)(a1 + 96);
        if (v23)
        {
          uint64_t v7 = 4;
        }
        else
        {
          unint64_t v23 = *(void *)(a1 + 104);
          if (!v23) {
            goto LABEL_44;
          }
          uint64_t v7 = 5;
        }
LABEL_31:
        unint64_t v9 = (v23 - 1) & v23;
        unint64_t v8 = __clz(__rbit64(v23)) + (v7 << 6);
        continue;
      }
      break;
    }
  }
  else
  {
    unsigned int v14 = v3 & 0x3F;
    if (v14 > 6)
    {
      int64_t v10 = (unint64_t)(v4 + 63) >> 6;
      unint64_t v23 = *(void *)(a1 + 72);
      if (v23)
      {
        uint64_t v7 = 1;
        goto LABEL_31;
      }
      if (v14 >= 8)
      {
        unint64_t v23 = *(void *)(a1 + 80);
        if (v23)
        {
          uint64_t v7 = 2;
        }
        else
        {
          unint64_t v23 = *(void *)(a1 + 88);
          if (!v23) {
            goto LABEL_38;
          }
          uint64_t v7 = 3;
        }
        goto LABEL_31;
      }
    }
  }
  return 0;
}

uint64_t IncrementalMigrationManager.init(bundle:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

void sub_1D2F92F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_1D3000F08();
  uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  unsigned __int8 v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if (v13)
  {
    sub_1D2F0BCB8(0, &qword_1EBD5FC88);
    uint64_t v14 = sub_1D3002268();
    if (v5) {
      return;
    }
    uint64_t v19 = v14;
    uint64_t v61 = v6;
    id v20 = sub_1D2F94BDC();
    if (!v20)
    {
      swift_bridgeObjectRelease();
      sub_1D2F95288();
      swift_allocError();
      *(void *)uint64_t v42 = 0;
      *(void *)(v42 + 8) = 0;
      *(unsigned char *)(v42 + 16) = 1;
      swift_willThrow();
      return;
    }
    int64_t v21 = v20;
    id v22 = (void *)sub_1D3001A78();
    unsigned int v23 = objc_msgSend(v21, sel_isConfiguration_compatibleWithStoreMetadata_, 0, v22);

    if (v23)
    {
      uint64_t v24 = sub_1D2F96244(v19);
      if ((v25 & 1) != 0 || (uint64_t v26 = v24, v27 = sub_1D2F935F0(), (v28 & 1) == 0) && v26 == v27)
      {
        uint64_t v29 = v21;
        swift_bridgeObjectRelease();
        if (qword_1EBD632D8 != -1) {
          swift_once();
        }
        uint64_t v30 = sub_1D3001918();
        __swift_project_value_buffer(v30, (uint64_t)qword_1EBD632B8);
        uint64_t v31 = sub_1D30018F8();
        os_log_type_t v32 = sub_1D30020A8();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v33 = 0;
          _os_log_impl(&dword_1D2F05000, v31, v32, "Model does not require migration. Skipping migration.", v33, 2u);
          MEMORY[0x1D942F2D0](v33, -1, -1);
        }

        return;
      }
    }
    if (qword_1EBD632D8 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1D3001918();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EBD632B8);
    unint64_t v35 = sub_1D30018F8();
    os_log_type_t v36 = sub_1D30020A8();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v60 = v21;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1D2F05000, v35, v36, "Latest model is not compatible with store. Migration required.", v37, 2u);
      uint64_t v38 = v37;
      int64_t v21 = v60;
      MEMORY[0x1D942F2D0](v38, -1, -1);
    }

    uint64_t v39 = sub_1D2F935F0();
    if (v40)
    {
      swift_bridgeObjectRelease();
      sub_1D2F95288();
      swift_allocError();
      *(_OWORD *)uint64_t v43 = xmmword_1D3009680;
    }
    else
    {
      int64_t v41 = v39;
      unint64_t v44 = sub_1D2F965F8(a3, a4, *(void **)(v61 + 16));
      uint64_t v45 = sub_1D2F96244(v19);
      if (v46)
      {
        int64_t v58 = v41;
        swift_bridgeObjectRetain();
        uint64_t v49 = swift_bridgeObjectRetain();
        uint64_t v50 = sub_1D2F9735C(v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v47 = sub_1D2F92CA4(v50);
        unint64_t v52 = v51;
        swift_release();
        if (v52)
        {
          swift_bridgeObjectRelease();

          int64_t v41 = v58;
          goto LABEL_34;
        }
      }
      else if (*(void *)(v44 + 16))
      {
        int64_t v47 = v45;
        sub_1D2F0DEA4(v45);
        if (v48)
        {
          swift_bridgeObjectRelease();
LABEL_34:
          uint64_t v53 = sub_1D30018F8();
          os_log_type_t v54 = sub_1D30020A8();
          if (os_log_type_enabled(v53, v54))
          {
            int64_t v59 = v41;
            uint64_t v55 = swift_slowAlloc();
            *(_DWORD *)uint64_t v55 = 134218240;
            sub_1D3002318();
            *(_WORD *)(v55 + 12) = 2048;
            sub_1D3002318();
            _os_log_impl(&dword_1D2F05000, v53, v54, "Store needs updating from model version %ld to %ld", (uint8_t *)v55, 0x16u);
            uint64_t v56 = v55;
            int64_t v41 = v59;
            MEMORY[0x1D942F2D0](v56, -1, -1);
          }

          if (v47 >= v41) {
            unint64_t v57 = MEMORY[0x1E4FBC860];
          }
          else {
            unint64_t v57 = sub_1D2F96080(v47, v41 - 1, v44);
          }
          swift_bridgeObjectRelease();
          sub_1D2F93A30(a1, v57, a2);

          swift_bridgeObjectRelease();
          return;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D2F95288();
      swift_allocError();
      *(void *)uint64_t v43 = 0;
      *(void *)(v43 + 8) = 0;
    }
    *(unsigned char *)(v43 + 16) = 1;
    swift_willThrow();

    return;
  }
  if (qword_1EBD632D8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1D3001918();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBD632B8);
  unint64_t v16 = sub_1D30018F8();
  os_log_type_t v17 = sub_1D30020A8();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1D2F05000, v16, v17, "No store at provided url. Skipping migration steps.", v18, 2u);
    MEMORY[0x1D942F2D0](v18, -1, -1);
  }
}

uint64_t sub_1D2F935F0()
{
  uint64_t v3 = (uint64_t)objc_msgSend(v0, sel_versionIdentifiers);
  uint64_t v4 = sub_1D3001FC8();

  uint64_t result = sub_1D2F95EA0(v4);
  if (v9)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    int v13 = v7;
  }
  else
  {
    uint64_t v3 = result;
    uint64_t v1 = v6;
    uint64_t v2 = v4 + 56;
    while (1)
    {
      int v7 = *(_DWORD *)(v4 + 36);
      if (v7 != v1) {
        break;
      }
      char v8 = *(unsigned char *)(v4 + 32);
      if (v3 == 1 << v8) {
        goto LABEL_13;
      }
      if (v3 < 0 || v3 >= 1 << v8) {
        goto LABEL_15;
      }
      if (((*(void *)(v2 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3) & 1) == 0) {
        goto LABEL_16;
      }
      sub_1D2F9770C(*(void *)(v4 + 48) + 40 * v3, (uint64_t)&v24);
      sub_1D2F9770C((uint64_t)&v24, (uint64_t)&v22);
      swift_bridgeObjectRetain();
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
      }
      sub_1D2F97768((uint64_t)&v24);
      swift_bridgeObjectRelease();
      uint64_t v10 = v27;
      uint64_t result = swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_17;
      }
      uint64_t result = sub_1D2F95F44(v3, v1, 0, v4);
      uint64_t v3 = result;
      uint64_t v1 = v11;
      if (v12) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    int v13 = *(_DWORD *)(v4 + 36);
    char v8 = *(unsigned char *)(v4 + 32);
    int v7 = v1;
  }
  if (v7 != v13)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v3 != 1 << v8)
  {
    sub_1D2F96028(v3, v1, v4, (uint64_t)&v24);
    sub_1D2F9770C((uint64_t)&v24, (uint64_t)&v22);
    swift_bridgeObjectRetain();
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
    }
    uint64_t result = sub_1D2F97768((uint64_t)&v24);
    if (!v27) {
      goto LABEL_53;
    }
    uint64_t v24 = v26;
    uint64_t v25 = v27;
    sub_1D2F94EE0(&v24, (uint64_t)&v22);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int v7 = *(_DWORD *)(v4 + 36);
    if (v23)
    {
      if (v7 == v1)
      {
        if (v3 != 1 << *(unsigned char *)(v4 + 32))
        {
          while (1)
          {
            uint64_t v15 = v1;
            uint64_t v16 = v3;
            uint64_t v3 = sub_1D2F95F44(v3, v1, 0, v4);
            uint64_t v1 = v17;
            char v19 = v18;
            uint64_t result = sub_1D2F92B98(v16, v15, 0);
            if (v19) {
              goto LABEL_52;
            }
            int v7 = *(_DWORD *)(v4 + 36);
            if (v7 != v1)
            {
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
              goto LABEL_48;
            }
            uint64_t v20 = 1 << *(unsigned char *)(v4 + 32);
            if (v3 == v20) {
              goto LABEL_36;
            }
            if (v3 < 0 || v3 >= v20) {
              goto LABEL_46;
            }
            if (((*(void *)(v2 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3) & 1) == 0) {
              goto LABEL_47;
            }
            sub_1D2F9770C(*(void *)(v4 + 48) + 40 * v3, (uint64_t)&v24);
            sub_1D2F9770C((uint64_t)&v24, (uint64_t)&v22);
            swift_bridgeObjectRetain();
            if ((swift_dynamicCast() & 1) == 0)
            {
              uint64_t v26 = 0;
              uint64_t v27 = 0;
            }
            sub_1D2F97768((uint64_t)&v24);
            swift_bridgeObjectRelease();
            uint64_t v14 = v27;
            uint64_t result = swift_bridgeObjectRelease();
            if (v14) {
              goto LABEL_17;
            }
          }
        }
      }
      else
      {
LABEL_48:
        __break(1u);
      }
      __break(1u);
      goto LABEL_50;
    }
  }
LABEL_36:
  if (v7 != v1)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v3 == 1 << *(unsigned char *)(v4 + 32))
  {
    uint64_t v21 = 0;
LABEL_44:
    swift_bridgeObjectRelease();
    return v21;
  }
  sub_1D2F96028(v3, v1, v4, (uint64_t)&v24);
  sub_1D2F9770C((uint64_t)&v24, (uint64_t)&v22);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
  }
  uint64_t result = sub_1D2F97768((uint64_t)&v24);
  if (!v27) {
    goto LABEL_54;
  }
  uint64_t v24 = v26;
  uint64_t v25 = v27;
  sub_1D2F94EE0(&v24, (uint64_t)&v22);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    uint64_t v21 = v22;
    goto LABEL_44;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1D2F93A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v102 = a3;
  v118[1] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1D3000F18();
  uint64_t v6 = *(char **)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  char v113 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v104 = (char *)&v94 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int v13 = (char *)&v94 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v103 = (char *)&v94 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  char v18 = (char *)&v94 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v94 - v19;
  if (qword_1EBD632D8 != -1) {
    swift_once();
  }
  uint64_t v106 = v18;
  uint64_t v21 = sub_1D3001918();
  uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EBD632B8);
  char v23 = (void (*)(char *, uint64_t, uint64_t))*((void *)v6 + 2);
  uint64_t v105 = a1;
  char v115 = v6 + 16;
  uint64_t v112 = v23;
  v23(v20, a1, v5);
  swift_bridgeObjectRetain();
  uint64_t v101 = v22;
  uint64_t v24 = sub_1D30018F8();
  os_log_type_t v25 = sub_1D30020A8();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v107 = v5;
  uint64_t v95 = a2;
  uint64_t v110 = v6;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    BOOL v111 = v13;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v109 = v29;
    *(_DWORD *)uint64_t v28 = 134218242;
    uint64_t v116 = *(void *)(a2 + 16);
    uint64_t v117 = v29;
    sub_1D3002318();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    sub_1D2F9763C((unint64_t *)&qword_1EBD5F778);
    uint64_t v30 = sub_1D3002738();
    uint64_t v116 = sub_1D2F09508(v30, v31, &v117);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    os_log_type_t v32 = (void (*)(char *, uint64_t))*((void *)v6 + 1);
    uint64_t v33 = (unint64_t)(v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v32(v20, v5);
    _os_log_impl(&dword_1D2F05000, v24, v25, "Performing %ld migrations to store at %s", (uint8_t *)v28, 0x16u);
    uint64_t v34 = v109;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v34, -1, -1);
    uint64_t v35 = v28;
    int v13 = v111;
    os_log_type_t v36 = v32;
    MEMORY[0x1D942F2D0](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v37 = (unint64_t)(v6 + 8);
    os_log_type_t v36 = (void (*)(char *, uint64_t))*((void *)v6 + 1);
    uint64_t v33 = v37 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v36(v20, v5);
  }

  uint64_t v38 = v103;
  uint64_t v39 = v105;
  sub_1D3000ED8();
  uint64_t v117 = 0x6974617267696D2ELL;
  v118[0] = 0xEB000000005F6E6FLL;
  sub_1D3000E88();
  sub_1D3000E68();
  char v40 = v13;
  uint64_t v41 = v107;
  v36(v40, v107);
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  uint64_t v42 = v106;
  sub_1D3000EB8();
  swift_bridgeObjectRelease();
  v36(v38, v41);
  id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C120]), sel_init);
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C188]), sel_initWithManagedObjectModel_, v43);

  id v45 = objc_msgSend(self, sel_defaultManager);
  char v46 = (void *)sub_1D3000E78();
  uint64_t v117 = 0;
  unsigned int v47 = objc_msgSend(v45, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v46, 1, 0, &v117);

  id v48 = (id)v117;
  uint64_t v49 = v104;
  if (v47)
  {
    id v98 = v44;
    uint64_t v50 = v107;
    v112(v104, v39, v107);
    uint64_t v51 = v95;
    uint64_t v52 = *(void *)(v95 + 16);
    if (v52)
    {
      uint64_t v112 = (void (*)(char *, uint64_t, uint64_t))v36;
      uint64_t v97 = v118;
      uint64_t v99 = (void (**)(char *, char *, uint64_t))(v110 + 32);
      swift_bridgeObjectRetain();
      id v53 = v48;
      os_log_type_t v54 = (void **)(v51 + 56);
      *(void *)&long long v55 = 134218240;
      long long v96 = v55;
      uint64_t v56 = v114;
      BOOL v111 = (char *)v33;
      do
      {
        char v108 = v54;
        uint64_t v109 = v52;
        uint64_t v57 = v56;
        int64_t v58 = *(v54 - 3);
        int64_t v59 = *(v54 - 2);
        uint64_t v60 = (uint64_t)*(v54 - 1);
        char v115 = *v54;
        id v61 = v58;
        id v62 = v59;
        id v63 = v61;
        unint64_t v64 = (char *)v62;
        uint64_t v65 = sub_1D30018F8();
        os_log_type_t v66 = sub_1D30020A8();
        BOOL v67 = os_log_type_enabled(v65, v66);
        uint64_t v114 = v57;
        uint64_t v110 = v64;
        if (v67)
        {
          uint64_t v68 = swift_slowAlloc();
          *(_DWORD *)uint64_t v68 = v96;
          uint64_t v117 = v60;
          sub_1D3002318();
          *(_WORD *)(v68 + 12) = 2048;
          uint64_t v117 = (uint64_t)v115;
          sub_1D3002318();

          _os_log_impl(&dword_1D2F05000, v65, v66, "Migration step v%ld to v%ld", (uint8_t *)v68, 0x16u);
          MEMORY[0x1D942F2D0](v68, -1, -1);
        }
        else
        {

          uint64_t v65 = v63;
        }
        uint64_t v69 = v60;

        uint64_t v116 = v60;
        uint64_t v117 = sub_1D3002738();
        v118[0] = v70;
        sub_1D3001C68();
        uint64_t v116 = (uint64_t)v115;
        sub_1D3002738();
        sub_1D3001C68();
        swift_bridgeObjectRelease();
        uint64_t v71 = v103;
        sub_1D3000EB8();
        swift_bridgeObjectRelease();
        sub_1D3000E38();
        sub_1D3000EC8();
        swift_bridgeObjectRelease();
        uint64_t v72 = v107;
        uint64_t v73 = ((uint64_t (*)(char *, uint64_t))v112)(v71, v107);
        unint64_t v74 = (void *)MEMORY[0x1D942EA50](v73);
        uint64_t v75 = v110;
        uint64_t v76 = v114;
        uint64_t v49 = v104;
        sub_1D2F94778(v63, v110, v69, (uint64_t)v115, v100);
        uint64_t v56 = v76;
        if (v76)
        {

          uint64_t v83 = (void (*)(char *, uint64_t))v112;
          ((void (*)(char *, uint64_t))v112)(v113, v72);
          swift_bridgeObjectRelease();
          v83(v49, v72);
          uint64_t v84 = v106;
          sub_1D2F9452C();

          return ((uint64_t (*)(char *, uint64_t))v83)(v84, v72);
        }
        sub_1D2F9763C(&qword_1EA6996C0);
        if ((sub_1D3001B28() & 1) == 0) {
          sub_1D3002248();
        }
        os_log_type_t v54 = v108 + 4;
        ((void (*)(char *, uint64_t))v112)(v49, v72);

        (*v99)(v49, v113, v72);
        uint64_t v52 = v109 - 1;
      }
      while (v109 != 1);
      uint64_t v79 = v72;
      uint64_t v82 = 0;
      swift_bridgeObjectRelease();
      long long v80 = (void (*)(char *, uint64_t))v112;
    }
    else
    {
      uint64_t v79 = v50;
      long long v80 = v36;
      id v81 = v48;
      uint64_t v82 = v114;
    }
    int v85 = sub_1D30018F8();
    os_log_type_t v86 = sub_1D30020A8();
    BOOL v87 = os_log_type_enabled(v85, v86);
    unint64_t v88 = v106;
    if (v87)
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v89 = 0;
      _os_log_impl(&dword_1D2F05000, v85, v86, "Migration complete. Replacing existing store.", v89, 2u);
      MEMORY[0x1D942F2D0](v89, -1, -1);
    }

    id v90 = v98;
    sub_1D3002258();
    if (!v82)
    {
      long long v91 = sub_1D30018F8();
      uint64_t v92 = sub_1D30020A8();
      if (os_log_type_enabled(v91, (os_log_type_t)v92))
      {
        uint64_t v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v93 = 0;
        _os_log_impl(&dword_1D2F05000, v91, (os_log_type_t)v92, "Cleaning up migrated store", v93, 2u);
        MEMORY[0x1D942F2D0](v93, -1, -1);
      }

      id v90 = v98;
      sub_1D3002248();
    }
    v80(v49, v79);
    sub_1D2F9452C();

    return ((uint64_t (*)(char *, uint64_t))v80)(v88, v79);
  }
  else
  {
    id v77 = (id)v117;
    sub_1D3000DF8();

    swift_willThrow();
    return ((uint64_t (*)(char *, uint64_t))v36)(v42, v107);
  }
}

void sub_1D2F9452C()
{
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1D3000E78();
  v14[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v14);

  if (v2)
  {
    uint64_t v3 = qword_1EBD632D8;
    id v4 = v14[0];
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D3001918();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBD632B8);
    uint64_t v6 = sub_1D30018F8();
    os_log_type_t v7 = sub_1D30020A8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1D2F05000, v6, v7, "Migration storage cleanup completed!", v8, 2u);
      MEMORY[0x1D942F2D0](v8, -1, -1);
    }
  }
  else
  {
    id v9 = v14[0];
    uint64_t v10 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EBD632D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1D3001918();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBD632B8);
    uint64_t v6 = sub_1D30018F8();
    os_log_type_t v12 = sub_1D30020B8();
    if (os_log_type_enabled(v6, v12))
    {
      int v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v13 = 0;
      _os_log_impl(&dword_1D2F05000, v6, v12, "Failed to cleanup migration directory! State may be left on the device.", v13, 2u);
      MEMORY[0x1D942F2D0](v13, -1, -1);
    }
  }
}

void sub_1D2F94778(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = *(void **)(a5 + 16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D3005C00;
  *(void *)(v10 + 32) = v9;
  sub_1D3001DE8();
  sub_1D2F0BCB8(0, &qword_1EA6996C8);
  id v11 = v9;
  id v12 = a1;
  id v13 = a2;
  uint64_t v14 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_mappingModelFromBundles_forSourceModel_destinationModel_, v14, v12, v13);

  if (v15)
  {
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C138]), sel_initWithSourceModel_destinationModel_, v12, v13);
    swift_getKeyPath();
    uint64_t v17 = (void *)swift_allocObject();
    id v17[2] = v12;
    v17[3] = v13;
    v17[4] = a3;
    void v17[5] = a4;
    id v18 = v12;
    id v19 = v13;
    uint64_t v20 = (void *)sub_1D3000E18();
    swift_release();
    swift_release();
    sub_1D30021A8();
    if (!v22) {
      sub_1D3000DD8();
    }
  }
  else
  {
    sub_1D2F95288();
    swift_allocError();
    *(void *)uint64_t v21 = a3;
    *(void *)(v21 + 8) = a4;
    *(unsigned char *)(v21 + 16) = 0;
    swift_willThrow();
  }
}

void sub_1D2F949B4(void **a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = *a1;
  if (qword_1EBD632D8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBD632B8);
  id v8 = a3;
  id v9 = a4;
  id v15 = v8;
  id v10 = v9;
  id v11 = v6;
  id v12 = sub_1D30018F8();
  os_log_type_t v13 = sub_1D30020A8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134218496;
    sub_1D3002318();
    *(_WORD *)(v14 + 12) = 2048;

    sub_1D3002318();
    *(_WORD *)(v14 + 22) = 2048;
    objc_msgSend(v11, sel_migrationProgress);
    sub_1D3002318();

    _os_log_impl(&dword_1D2F05000, v12, v13, "Migration %ld -> %ld progress: %f%%", (uint8_t *)v14, 0x20u);
    MEMORY[0x1D942F2D0](v14, -1, -1);
  }
  else
  {
  }
}

id sub_1D2F94BDC()
{
  uint64_t v1 = sub_1D3000F18();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  id v11 = (char *)&v22 - v10;
  MEMORY[0x1F4188790](v9);
  os_log_type_t v13 = (char *)&v22 - v12;
  uint64_t v14 = *(void **)(v0 + 16);
  id v15 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v17 = objc_msgSend(v14, sel_URLForResource_withExtension_, v15, v16);

  if (v17)
  {
    sub_1D3000EE8();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v11, 1, 1, v1);
  }
  sub_1D2F46394((uint64_t)v11, (uint64_t)v13);
  sub_1D2F5B72C((uint64_t)v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    id v18 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    id v19 = objc_allocWithZone(MEMORY[0x1E4F1C120]);
    uint64_t v20 = (void *)sub_1D3000E78();
    id v18 = objc_msgSend(v19, sel_initWithContentsOfURL_, v20);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_1D2F346A8((uint64_t)v13);
  return v18;
}

uint64_t IncrementalMigrationManager.deinit()
{
  return v0;
}

uint64_t IncrementalMigrationManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t *sub_1D2F94EE0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  unint64_t v4 = result[1];
  uint64_t v5 = HIBYTE(v4) & 0xF;
  uint64_t v6 = *result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v4) & 0xF;
  }
  else {
    uint64_t v7 = *result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    char v20 = 1;
LABEL_47:
    *(void *)a2 = v7;
    *(unsigned char *)(a2 + 8) = v20 & 1;
    return result;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t)sub_1D2F953D8(v3, v4, 10);
    LOBYTE(v3) = v24;
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
LABEL_44:
    char v20 = v3 & 1;
    if (v3) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = v9;
    }
    goto LABEL_47;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0) {
      id v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      id v8 = (unsigned __int8 *)sub_1D30024C8();
    }
    uint64_t result = (uint64_t *)sub_1D2F954C0(v8, v6, 10);
    uint64_t v9 = (uint64_t)result;
    LOBYTE(v3) = v10 & 1;
    goto LABEL_44;
  }
  v25[0] = *result;
  v25[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5) {
      goto LABEL_58;
    }
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      uint64_t v11 = v5 - 3;
      if (v11)
      {
        uint64_t v12 = (unsigned __int8 *)v25 + 3;
        while (1)
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            goto LABEL_31;
          }
          uint64_t v14 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v14 + v13;
          if (__OFADD__(v14, v13)) {
            goto LABEL_31;
          }
          LOBYTE(v3) = 0;
          ++v12;
          if (!--v11) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    LOBYTE(v3) = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      uint64_t v15 = v5 - 2;
      if (v15)
      {
        id v16 = (unsigned __int8 *)v25 + 2;
        while (1)
        {
          unsigned int v17 = *v16 - 48;
          if (v17 > 9) {
            goto LABEL_31;
          }
          uint64_t v18 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v18 + v17;
          if (__OFADD__(v18, v17)) {
            goto LABEL_31;
          }
          LOBYTE(v3) = 0;
          ++v16;
          if (!--v15) {
            goto LABEL_44;
          }
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        LOBYTE(v3) = 0;
        uint64_t v9 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        uint64_t v9 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        uint64_t v19 = v5 - 3;
        if (!v19) {
          goto LABEL_43;
        }
        uint64_t v21 = (unsigned __int8 *)v25 + 3;
        while (1)
        {
          unsigned int v22 = *v21 - 48;
          if (v22 > 9) {
            break;
          }
          uint64_t v23 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            break;
          }
          uint64_t v9 = v23 - v22;
          if (__OFSUB__(v23, v22)) {
            break;
          }
          LOBYTE(v3) = 0;
          ++v21;
          if (!--v19) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = 0;
    LOBYTE(v3) = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1D2F951C0()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EBD632B8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD632B8);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

unint64_t sub_1D2F95288()
{
  unint64_t result = qword_1EA6996B8;
  if (!qword_1EA6996B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6996B8);
  }
  return result;
}

void *sub_1D2F952DC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A38);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D2F95344(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1D3001CE8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1D942DBE0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1D2F953C0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2F954C0(a1, a2, a3);
}

unsigned __int8 *sub_1D2F953D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D3001D08();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1D2F9573C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1D30024C8();
  }
LABEL_7:
  uint64_t v11 = sub_1D2F954C0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1D2F954C0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1D2F9573C()
{
  unint64_t v0 = sub_1D3001D18();
  uint64_t v4 = sub_1D2F957BC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D2F957BC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1D2F95914(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1D2F952DC(v9, 0);
      unint64_t v12 = sub_1D2F95A14((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1D30024C8();
LABEL_4:
        JUMPOUT(0x1D942DB40);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1D942DB40](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D942DB40]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1D2F95914(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1D2F95344(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1D2F95344(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1D2F95A14(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1D2F95344(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1D3001CD8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1D30024C8();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1D2F95344(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1D3001CA8();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D2F95C28(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698688);
  uint64_t result = sub_1D30025D8();
  uint64_t v9 = result;
  unint64_t v31 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v31[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v31[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v31[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v31[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v31[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    char v20 = *(void **)(*(void *)(v4 + 56) + v18);
    uint64_t result = sub_1D3002918();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v9 + 48) + v29) = v19;
    *(void *)(*(void *)(v9 + 56) + v29) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = v20;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D2F95EA0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1D2F95F44(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D2F96028@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2) {
    return sub_1D2F9770C(*(void *)(a3 + 48) + 40 * result, a4);
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1D2F96080(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v3 == -1) {
    return v5;
  }
  uint64_t v7 = a2;
  uint64_t v8 = result;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1D2F0A008(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = v7;
    BOOL v9 = 0;
    uint64_t v5 = v25;
    uint64_t v10 = v8 - 1;
    uint64_t v23 = a3;
    while (v7 != v10)
    {
      if (v9) {
        goto LABEL_26;
      }
      if (!*(void *)(a3 + 16)) {
        goto LABEL_19;
      }
      uint64_t result = sub_1D2F0DEA4(v8);
      if ((v11 & 1) == 0) {
        goto LABEL_19;
      }
      if (__OFADD__(v8, 1)) {
        goto LABEL_22;
      }
      uint64_t v12 = *(void *)(a3 + 56);
      unint64_t v13 = *(void **)(v12 + 8 * result);
      unint64_t v14 = sub_1D2F0DEA4(v8 + 1);
      if ((v15 & 1) == 0)
      {
LABEL_19:
        sub_1D2F95288();
        swift_allocError();
        *(void *)uint64_t v21 = 0;
        *(void *)(v21 + 8) = 0;
        *(unsigned char *)(v21 + 16) = 1;
        swift_willThrow();
        swift_release();
        return v5;
      }
      unint64_t v16 = *(void **)(v12 + 8 * v14);
      unint64_t v18 = *(void *)(v25 + 16);
      unint64_t v17 = *(void *)(v25 + 24);
      id v24 = v13;
      uint64_t result = v16;
      unint64_t v19 = result;
      if (v18 >= v17 >> 1) {
        uint64_t result = sub_1D2F0A008(v17 > 1, v18 + 1, 1);
      }
      *(void *)(v25 + 16) = v18 + 1;
      char v20 = (void *)(v25 + 32 * v18);
      a3 = v23;
      v20[4] = v24;
      v20[5] = v19;
      v20[6] = v8;
      void v20[7] = v8 + 1;
      uint64_t v7 = v22;
      BOOL v9 = v8 == v22;
      if (v8 == v22) {
        uint64_t v8 = 0;
      }
      else {
        ++v8;
      }
      if (v22 == ++v10) {
        return v5;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D2F96244(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_1D2F0DC98(0xD00000000000001ELL, 0x80000001D3012260);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1D2F0BD44(*(void *)(a1 + 56) + 32 * v2, (uint64_t)v28);
  sub_1D2F0B9B4(v28, v29);
  sub_1D2F0BD44((uint64_t)v29, (uint64_t)v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
    return 0;
  }
  if (!v27[2]
    || ((uint64_t v5 = v27[4],
         unint64_t v4 = v27[5],
         swift_bridgeObjectRetain(),
         uint64_t result = swift_bridgeObjectRelease(),
         uint64_t v7 = HIBYTE(v4) & 0xF,
         uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL,
         (v4 & 0x2000000000000000) != 0)
      ? (uint64_t v9 = HIBYTE(v4) & 0xF)
      : (uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL),
        !v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
LABEL_56:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
    return v13;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (uint64_t)sub_1D2F953D8(v5, v4, 10);
    LOBYTE(v5) = v26;
    swift_bridgeObjectRelease_n();
LABEL_53:
    if (v5) {
      uint64_t v13 = 0;
    }
    else {
      uint64_t v13 = v11;
    }
    goto LABEL_56;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v5 & 0x1000000000000000) != 0) {
      uint64_t v10 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v10 = (unsigned __int8 *)sub_1D30024C8();
    }
    uint64_t v11 = (uint64_t)sub_1D2F954C0(v10, v8, 10);
    LOBYTE(v5) = v12 & 1;
    goto LABEL_52;
  }
  *(void *)&v28[0] = v5;
  *((void *)&v28[0] + 1) = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v5 == 43)
  {
    if (!v7) {
      goto LABEL_67;
    }
    if (v7 == 1 || (BYTE1(v5) - 48) > 9u) {
      goto LABEL_39;
    }
    uint64_t v11 = (BYTE1(v5) - 48);
    if (v7 != 2)
    {
      if ((BYTE2(v5) - 48) > 9u) {
        goto LABEL_39;
      }
      uint64_t v11 = 10 * (BYTE1(v5) - 48) + (BYTE2(v5) - 48);
      uint64_t v14 = v7 - 3;
      if (v14)
      {
        char v15 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_39;
          }
          uint64_t v17 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
            goto LABEL_39;
          }
          uint64_t v11 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_39;
          }
          LOBYTE(v5) = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_52;
          }
        }
      }
    }
LABEL_51:
    LOBYTE(v5) = 0;
    goto LABEL_52;
  }
  if (v5 != 45)
  {
    if (!v7 || (v5 - 48) > 9u) {
      goto LABEL_39;
    }
    uint64_t v11 = (v5 - 48);
    if (v7 != 1)
    {
      if ((BYTE1(v5) - 48) > 9u) {
        goto LABEL_39;
      }
      uint64_t v11 = 10 * (v5 - 48) + (BYTE1(v5) - 48);
      uint64_t v18 = v7 - 2;
      if (v18)
      {
        unint64_t v19 = (unsigned __int8 *)v28 + 2;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_39;
          }
          uint64_t v21 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
            goto LABEL_39;
          }
          uint64_t v11 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_39;
          }
          LOBYTE(v5) = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_52;
          }
        }
      }
    }
    goto LABEL_51;
  }
  if (v7)
  {
    if (v7 != 1 && (BYTE1(v5) - 48) <= 9u)
    {
      if (v7 == 2)
      {
        LOBYTE(v5) = 0;
        uint64_t v11 = -(uint64_t)(BYTE1(v5) - 48);
LABEL_52:
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
      if ((BYTE2(v5) - 48) <= 9u)
      {
        uint64_t v11 = -10 * (BYTE1(v5) - 48) - (BYTE2(v5) - 48);
        uint64_t v22 = v7 - 3;
        if (!v22) {
          goto LABEL_51;
        }
        uint64_t v23 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          unsigned int v24 = *v23 - 48;
          if (v24 > 9) {
            break;
          }
          uint64_t v25 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
            break;
          }
          uint64_t v11 = v25 - v24;
          if (__OFSUB__(v25, v24)) {
            break;
          }
          LOBYTE(v5) = 0;
          ++v23;
          if (!--v22) {
            goto LABEL_52;
          }
        }
      }
    }
LABEL_39:
    uint64_t v11 = 0;
    LOBYTE(v5) = 1;
    goto LABEL_52;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

unint64_t sub_1D2F965F8(uint64_t a1, uint64_t a2, void *a3)
{
  v94[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v84 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v79 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v79 - v10;
  uint64_t v12 = sub_1D3000F18();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  int v85 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  os_log_type_t v86 = (char *)&v79 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v89 = (char *)&v79 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v79 - v21;
  MEMORY[0x1F4188790](v20);
  long long v80 = (char *)&v79 - v23;
  unint64_t v24 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v25 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v26 = objc_msgSend(a3, sel_URLForResource_withExtension_, v24, v25);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_20;
  }
  sub_1D3000EE8();

  BOOL v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v27(v11, v22, v12);
  id v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v91 = v13 + 56;
  v90(v11, 0, 1, v12);
  BOOL v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v88 = v13 + 48;
  if (v87(v11, 1, v12) == 1)
  {
LABEL_20:
    sub_1D2F346A8((uint64_t)v11);
    return sub_1D2F23408(MEMORY[0x1E4FBC860]);
  }
  uint64_t v28 = v80;
  uint64_t v92 = v13 + 32;
  uint64_t v93 = v27;
  v27(v80, v11, v12);
  id v29 = objc_msgSend(self, sel_defaultManager);
  uint64_t v30 = (void *)sub_1D3000E78();
  v94[0] = 0;
  id v31 = objc_msgSend(v29, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v30, 0, 0, v94);

  id v32 = v94[0];
  if (v31)
  {
    uint64_t v33 = sub_1D3001DC8();
    id v34 = v32;

    v94[0] = (id)MEMORY[0x1E4FBC860];
    uint64_t v35 = *(void **)(v33 + 16);
    uint64_t v81 = v13;
    uint64_t v83 = v35;
    if (v35)
    {
      unint64_t v36 = 0;
      uint64_t v82 = v13 + 16;
      uint64_t v79 = (void (**)(char *, uint64_t))(v13 + 8);
      while (1)
      {
        if (v36 >= *(void *)(v33 + 16))
        {
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        unint64_t v37 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        unint64_t v24 = *(void *)(v13 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v9, v33 + v37 + v24 * v36, v12);
        v90(v9, 0, 1, v12);
        if (v87(v9, 1, v12) == 1) {
          goto LABEL_23;
        }
        v93(v89, v9, v12);
        if (sub_1D3000E38() == 7171949 && v38 == 0xE300000000000000) {
          break;
        }
        char v39 = sub_1D3002778();
        swift_bridgeObjectRelease();
        if (v39) {
          goto LABEL_14;
        }
        (*v79)(v89, v12);
LABEL_7:
        if (v83 == (void *)++v36) {
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
LABEL_14:
      v93(v86, v89, v12);
      char v40 = (char *)v94[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2F09FCC(0, *((void *)v40 + 2) + 1, 1);
        char v40 = (char *)v94[0];
      }
      unint64_t v42 = *((void *)v40 + 2);
      unint64_t v41 = *((void *)v40 + 3);
      if (v42 >= v41 >> 1)
      {
        sub_1D2F09FCC(v41 > 1, v42 + 1, 1);
        char v40 = (char *)v94[0];
      }
      *((void *)v40 + 2) = v42 + 1;
      v93(&v40[v37 + v42 * v24], v86, v12);
      v94[0] = v40;
      uint64_t v13 = v81;
      goto LABEL_7;
    }
LABEL_22:
    v90(v9, 1, 1, v12);
LABEL_23:
    swift_bridgeObjectRelease();
    sub_1D2F346A8((uint64_t)v9);
    id v44 = v94[0];
    v94[0] = (id)MEMORY[0x1E4FBC860];
    uint64_t v45 = v44[2];
    uint64_t v83 = v44;
    if (v45)
    {
      uint64_t v89 = *(char **)(v81 + 16);
      char v46 = (char *)v44 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
      os_log_type_t v86 = *(char **)(v81 + 72);
      unsigned int v47 = (uint64_t (**)(char *, uint64_t))(v81 + 8);
      swift_retain();
      uint64_t v49 = v84;
      id v48 = v85;
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v89)(v49, v46, v12);
        v90(v49, 0, 1, v12);
        if (v87(v49, 1, v12) == 1) {
          break;
        }
        v93(v48, v49, v12);
        id v50 = objc_allocWithZone(MEMORY[0x1E4F1C120]);
        uint64_t v51 = (void *)sub_1D3000E78();
        id v52 = objc_msgSend(v50, sel_initWithContentsOfURL_, v51);

        uint64_t v53 = (*v47)(v48, v12);
        if (v52)
        {
          MEMORY[0x1D942DCC0](v53);
          if (*(void *)(((unint64_t)v94[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v94[0] & 0xFFFFFFFFFFFFFF8)
                                                                                                 + 0x18) >> 1)
            sub_1D3001E28();
          sub_1D3001E68();
          sub_1D3001DE8();
          uint64_t v49 = v84;
        }
        char v46 = &v86[(void)v46];
        if (!--v45) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      swift_retain();
      uint64_t v49 = v84;
LABEL_33:
      v90(v49, 1, 1, v12);
    }
    swift_release();
    unint64_t v24 = (unint64_t)v94[0];
    swift_release();
    if (v24 >> 62)
    {
LABEL_58:
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1D30025A8();
      if (v55) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v55 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v55)
      {
LABEL_36:
        uint64_t v93 = (void (*)(char *, char *, uint64_t))(v24 & 0xC000000000000001);
        uint64_t v22 = (char *)MEMORY[0x1E4FBC868];
        uint64_t v56 = 4;
        while (1)
        {
          if (v93) {
            id v59 = (id)MEMORY[0x1D942E3A0](v56 - 4, v24);
          }
          else {
            id v59 = *(id *)(v24 + 8 * v56);
          }
          uint64_t v60 = v59;
          uint64_t v61 = v56 - 3;
          if (__OFADD__(v56 - 4, 1)) {
            goto LABEL_57;
          }
          uint64_t v62 = sub_1D2F935F0();
          if (v63) {
            break;
          }
          uint64_t v64 = v62;
          if (*((void *)v22 + 2))
          {
            sub_1D2F0DEA4(v62);
            if (v65)
            {
              if (qword_1EBD632D8 != -1) {
                swift_once();
              }
              uint64_t v66 = sub_1D3001918();
              __swift_project_value_buffer(v66, (uint64_t)qword_1EBD632B8);
              BOOL v67 = sub_1D30018F8();
              os_log_type_t v68 = sub_1D30020B8();
              BOOL v69 = os_log_type_enabled(v67, v68);
              uint64_t v70 = v81;
              if (v69)
              {
                uint64_t v71 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v71 = 0;
                _os_log_impl(&dword_1D2F05000, v67, v68, "Duplicate model number found between two models.", v71, 2u);
                MEMORY[0x1D942F2D0](v71, -1, -1);
              }

              sub_1D2F95288();
              swift_allocError();
              uint64_t v73 = 2;
LABEL_55:
              *(void *)uint64_t v72 = v73;
              *(void *)(v72 + 8) = 0;
              *(unsigned char *)(v72 + 16) = 1;
              swift_willThrow();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v70 + 8))(v80, v12);
              swift_bridgeObjectRelease();
              return (unint64_t)v22;
            }
          }
          id v57 = v60;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v94[0] = v22;
          sub_1D2FE6008((uint64_t)v57, v64, isUniquelyReferenced_nonNull_native);
          uint64_t v22 = (char *)v94[0];

          swift_bridgeObjectRelease();
          ++v56;
          if (v61 == v55) {
            goto LABEL_60;
          }
        }
        if (qword_1EBD632D8 != -1) {
          swift_once();
        }
        uint64_t v74 = sub_1D3001918();
        __swift_project_value_buffer(v74, (uint64_t)qword_1EBD632B8);
        uint64_t v75 = sub_1D30018F8();
        os_log_type_t v76 = sub_1D30020A8();
        BOOL v77 = os_log_type_enabled(v75, v76);
        uint64_t v70 = v81;
        if (v77)
        {
          uint64_t v78 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v78 = 0;
          _os_log_impl(&dword_1D2F05000, v75, v76, "Missing version number for model", v78, 2u);
          MEMORY[0x1D942F2D0](v78, -1, -1);
        }

        sub_1D2F95288();
        swift_allocError();
        uint64_t v73 = 1;
        goto LABEL_55;
      }
    }
    uint64_t v22 = (char *)MEMORY[0x1E4FBC868];
LABEL_60:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v54 = v94[0];
    sub_1D3000DF8();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);
  }
  return (unint64_t)v22;
}

void sub_1D2F97140(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = 0;
  int64_t v4 = 0;
  uint64_t v20 = a3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 64);
  int64_t v21 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v21) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v20 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v21) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v21) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v20 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    id v10 = *(id *)(*(void *)(a3 + 56) + 8 * v9);
    uint64_t v11 = (void *)sub_1D3001A78();
    unsigned int v12 = objc_msgSend(v10, sel_isConfiguration_compatibleWithStoreMetadata_, 0, v11);

    if (v12)
    {
      *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      if (__OFADD__(v19++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1D2F95C28(a1, a2, v19, a3);
        return;
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v21) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v20 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v21) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v20 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1D2F9735C(uint64_t a1)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(a1 + 32);
  unsigned int v4 = v3 & 0x3F;
  unint64_t v5 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v6 = 8 * v5;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v4 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    swift_bridgeObjectRetain();
    sub_1D2F97140((void *)((char *)v13 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a1);
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    if (v1) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v10 = (void *)swift_slowAlloc();
    bzero(v10, v6);
    swift_bridgeObjectRetain();
    sub_1D2F97140((unint64_t *)v10, v5, a1);
    uint64_t v9 = v11;
    swift_bridgeObjectRelease();
    MEMORY[0x1D942F2D0](v10, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v9;
}

uint64_t type metadata accessor for IncrementalMigrationManager()
{
  return self;
}

uint64_t method lookup function for IncrementalMigrationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IncrementalMigrationManager);
}

uint64_t dispatch thunk of IncrementalMigrationManager.__allocating_init(bundle:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of IncrementalMigrationManager.migrateToLatest(url:storeType:modelName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t getEnumTagSinglePayload for MigrationManagerError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MigrationManagerError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_1D2F975F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D2F9760C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MigrationManagerError()
{
  return &type metadata for MigrationManagerError;
}

uint64_t sub_1D2F9763C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D3000F18();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_migrationProgress()
{
  return sel_migrationProgress;
}

id sub_1D2F9768C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_migrationProgress);
  *a2 = v4;
  return result;
}

uint64_t sub_1D2F976C0()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D2F97700(void **a1, uint64_t a2)
{
  sub_1D2F949B4(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1D2F9770C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D2F97768(uint64_t a1)
{
  return a1;
}

uint64_t INCreateNoteIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INCreateNoteIntentFeatureExtractor.init()()
{
  return v0;
}

uint64_t sub_1D2F977D4(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(v1, sel_intent);
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {

    return MEMORY[0x1E4FBC860];
  }
  int v4 = (void *)v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D3004380;
  id v6 = objc_msgSend(v4, sel_typeName);
  uint64_t v7 = sub_1D3001B78();
  uint64_t v9 = v8;

  uint64_t NoteEvent = type metadata accessor for CreateNoteEventFeature.EventType(0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v7;
  *(void *)(v11 + 24) = v9;
  *(void *)(v5 + 56) = NoteEvent;
  *(void *)(v5 + 64) = sub_1D2F97B60(&qword_1EA6996D0, (void (*)(uint64_t))type metadata accessor for CreateNoteEventFeature.EventType);
  *(void *)(v5 + 32) = v11;
  LOBYTE(NoteEvent) = objc_msgSend(v1, sel__donatedBySiri);
  uint64_t v12 = type metadata accessor for CreateNoteEventFeature.DonatedBySiri(0);
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = NoteEvent;
  *(void *)(v5 + 96) = v12;
  *(void *)(v5 + 104) = sub_1D2F97B60(&qword_1EA6996D8, (void (*)(uint64_t))type metadata accessor for CreateNoteEventFeature.DonatedBySiri);
  *(void *)(v5 + 72) = v13;
  id v14 = objc_msgSend(v4, sel_content);
  if (!v14)
  {
LABEL_8:

    return v5;
  }
  int64_t v15 = v14;
  self;
  uint64_t v16 = (void *)swift_dynamicCastObjCClass();
  if (!v16)
  {

    goto LABEL_8;
  }
  id v17 = objc_msgSend(v16, sel_text);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1D3001B78();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  uint64_t v22 = type metadata accessor for CreateNoteEventFeature.NoteTextContent(0);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = v21;
  uint64_t v26 = v23;
  BOOL v27 = sub_1D2F27F00((void *)1, 3, 1, (void *)v5);
  uint64_t v24 = sub_1D2F97B60(&qword_1EA6996E0, (void (*)(uint64_t))type metadata accessor for CreateNoteEventFeature.NoteTextContent);
  swift_retain();
  sub_1D2F2916C(2, (uint64_t)&v26, (uint64_t *)&v27, v22, v24);
  swift_release();
  uint64_t v5 = (uint64_t)v27;

  return v5;
}

uint64_t CreateNoteEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t type metadata accessor for CreateNoteEventFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6996E8);
}

uint64_t INCreateNoteIntentFeatureExtractor.deinit()
{
  return v0;
}

uint64_t INCreateNoteIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CreateNoteEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6996F8);
}

uint64_t sub_1D2F97B24(uint64_t *a1)
{
  return sub_1D2F97DC4(a1, (void (*)(void))type metadata accessor for CreateNoteEventFeature.EventType);
}

uint64_t sub_1D2F97B3C(uint64_t *a1)
{
  return sub_1D2F97E18(a1, (void (*)(void))type metadata accessor for CreateNoteEventFeature.EventType);
}

uint64_t CreateNoteEventFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2F97B60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CreateNoteEventFeature.NoteTextContent(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699708);
}

uint64_t CreateNoteEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t CreateNoteEventFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t CreateNoteEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F97CC8(char *a1)
{
  char v1 = *a1;
  type metadata accessor for CreateNoteEventFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2F97D00(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for CreateNoteEventFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t CreateNoteEventFeature.NoteTextContent.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t CreateNoteEventFeature.NoteTextContent.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2F97DAC(uint64_t *a1)
{
  return sub_1D2F97DC4(a1, (void (*)(void))type metadata accessor for CreateNoteEventFeature.NoteTextContent);
}

uint64_t sub_1D2F97DC4(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2F97E00(uint64_t *a1)
{
  return sub_1D2F97E18(a1, (void (*)(void))type metadata accessor for CreateNoteEventFeature.NoteTextContent);
}

uint64_t sub_1D2F97E18(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t type metadata accessor for INCreateNoteIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for INCreateNoteIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for INCreateNoteIntentFeatureExtractor);
}

uint64_t dispatch thunk of INCreateNoteIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INCreateNoteIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

ValueMetadata *type metadata accessor for CreateNoteEventFeature()
{
  return &type metadata for CreateNoteEventFeature;
}

uint64_t dispatch thunk of InferredGroundTruth.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of InferredGroundTruth.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InferredGroundTruth.payload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext __swiftcall SiriUserFeedbackLearningTaskContext.init(triggerType:)(SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext triggerType)
{
  *int v1 = *(unsigned char *)triggerType.triggerType;
  return triggerType;
}

uint64_t SiriUserFeedbackLearningTaskContext.TriggerType.description.getter()
{
  if (*v0) {
    return 0x6D69742D6C616572;
  }
  else {
    return 0x616E65746E69616DLL;
  }
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext::TriggerType_optional __swiftcall SiriUserFeedbackLearningTaskContext.TriggerType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D3002638();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SiriUserFeedbackLearningTaskContext.TriggerType.rawValue.getter()
{
  if (*v0) {
    return 0x656D69746C616572;
  }
  else {
    return 0x616E65746E69616DLL;
  }
}

uint64_t sub_1D2F98054(char *a1, char *a2)
{
  return sub_1D2FBCA14(*a1, *a2);
}

uint64_t sub_1D2F98060()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F980EC()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F98164()
{
  return sub_1D3002968();
}

SiriPrivateLearningAnalytics::SiriUserFeedbackLearningTaskContext::TriggerType_optional sub_1D2F981EC(Swift::String *a1)
{
  return SiriUserFeedbackLearningTaskContext.TriggerType.init(rawValue:)(*a1);
}

void sub_1D2F981F8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x616E65746E69616DLL;
  if (*v1) {
    uint64_t v2 = 0x656D69746C616572;
  }
  unint64_t v3 = 0xEB0000000065636ELL;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D2F98240()
{
  return sub_1D3001D78();
}

uint64_t sub_1D2F982A0()
{
  return sub_1D3001D58();
}

uint64_t sub_1D2F982F0()
{
  if (*v0) {
    return 0x6D69742D6C616572;
  }
  else {
    return 0x616E65746E69616DLL;
  }
}

void SiriUserFeedbackLearningTaskContext.triggerType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t SiriUserFeedbackLearningTaskContext.description.getter()
{
  strcpy((char *)v1, "triggerType: ");
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1D2F983EC()
{
  return 0x5472656767697274;
}

uint64_t sub_1D2F9840C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5472656767697274 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1D3002778();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D2F984BC(uint64_t a1)
{
  unint64_t v2 = sub_1D2F9898C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2F984F8(uint64_t a1)
{
  unint64_t v2 = sub_1D2F9898C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriUserFeedbackLearningTaskContext.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD00);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F9898C();
  sub_1D30029B8();
  char v10 = v7;
  sub_1D2F989E0();
  sub_1D30026E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SiriUserFeedbackLearningTaskContext.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61740);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2F9898C();
  sub_1D3002998();
  if (!v2)
  {
    sub_1D2F98A34();
    sub_1D3002688();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1D2F987E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SiriUserFeedbackLearningTaskContext.init(from:)(a1, a2);
}

uint64_t sub_1D2F987FC(void *a1)
{
  return SiriUserFeedbackLearningTaskContext.encode(to:)(a1);
}

uint64_t sub_1D2F98814()
{
  return 0;
}

uint64_t _s28SiriPrivateLearningAnalytics0a12UserFeedbackC11TaskContextV2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x656D69746C616572;
  }
  else {
    uint64_t v3 = 0x616E65746E69616DLL;
  }
  if (v2) {
    unint64_t v4 = 0xEB0000000065636ELL;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x656D69746C616572;
  }
  else {
    uint64_t v5 = 0x616E65746E69616DLL;
  }
  if (*a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEB0000000065636ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1D2F9898C()
{
  unint64_t result = qword_1EBD636E8;
  if (!qword_1EBD636E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636E8);
  }
  return result;
}

unint64_t sub_1D2F989E0()
{
  unint64_t result = qword_1EBD5F780;
  if (!qword_1EBD5F780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5F780);
  }
  return result;
}

unint64_t sub_1D2F98A34()
{
  unint64_t result = qword_1EBD616E8;
  if (!qword_1EBD616E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD616E8);
  }
  return result;
}

unint64_t sub_1D2F98A8C()
{
  unint64_t result = qword_1EA699718;
  if (!qword_1EA699718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699718);
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskContext()
{
  return &type metadata for SiriUserFeedbackLearningTaskContext;
}

unsigned char *_s28SiriPrivateLearningAnalytics35SiriUserFeedbackLearningTaskContextV11TriggerTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F98BC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskContext.TriggerType()
{
  return &type metadata for SiriUserFeedbackLearningTaskContext.TriggerType;
}

unsigned char *storeEnumTagSinglePayload for SiriUserFeedbackLearningTaskContext.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D2F98C94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningTaskContext.CodingKeys()
{
  return &type metadata for SiriUserFeedbackLearningTaskContext.CodingKeys;
}

unint64_t sub_1D2F98CD0()
{
  unint64_t result = qword_1EA699720;
  if (!qword_1EA699720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699720);
  }
  return result;
}

unint64_t sub_1D2F98D28()
{
  unint64_t result = qword_1EBD636F8;
  if (!qword_1EBD636F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636F8);
  }
  return result;
}

unint64_t sub_1D2F98D80()
{
  unint64_t result = qword_1EBD636F0;
  if (!qword_1EBD636F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD636F0);
  }
  return result;
}

unint64_t sub_1D2F98DD4()
{
  unint64_t result = qword_1EBD63700;
  if (!qword_1EBD63700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD63700);
  }
  return result;
}

void sub_1D2F98E28()
{
  qword_1EA699728 = (uint64_t)&unk_1F2A15A98;
}

uint64_t sub_1D2F98E3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D3001868();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v37 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = *(void **)(v1 + 16);
  uint64_t v7 = *(void **)(v2 + 24);
  char v8 = *(void **)(v2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(v2 + 40);
  sub_1D2F995D0(v6, v7, v8, v9);
  uint64_t v10 = sub_1D2F9929C(a1, v6, v7, v8, v9);
  uint64_t v12 = v11;
  id v14 = v13;
  char v16 = v15;
  sub_1D2F99630(v6, v7, v8, v9);
  id v17 = *(void **)(v2 + 16);
  uint64_t v18 = *(void **)(v2 + 24);
  uint64_t v19 = *(void **)(v2 + 32);
  LOBYTE(v7) = *(unsigned char *)(v2 + 40);
  sub_1D2F995D0(v17, v18, v19, v7);
  LOBYTE(v8) = sub_1D2F9A4FC(v17, v18, v19, (char)v7, (unint64_t)v10, (unint64_t)v12, (unint64_t)v14, v16);
  sub_1D2F99630(v17, v18, v19, v7);
  if ((v8 & 1) == 0)
  {
    if (qword_1EA698088 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1D3001918();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EA699730);
    sub_1D2F995D0(v10, v12, v14, v16);
    sub_1D2F995D0(v10, v12, v14, v16);
    unint64_t v21 = sub_1D30018F8();
    os_log_type_t v22 = sub_1D30020A8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v41 = v36;
      *(_DWORD *)uint64_t v23 = 136315138;
      v35[1] = v23 + 4;
      unint64_t v24 = sub_1D2F9944C((char)v10, (uint64_t)v12, (uint64_t)v14, v16);
      uint64_t v40 = sub_1D2F09508(v24, v25, &v41);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2F99630(v10, v12, v14, v16);
      sub_1D2F99630(v10, v12, v14, v16);
      _os_log_impl(&dword_1D2F05000, v21, v22, "UserDisambiguatesPhoneCallOrMessagesContact state will be updated to %s", v23, 0xCu);
      uint64_t v26 = v36;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v26, -1, -1);
      MEMORY[0x1D942F2D0](v23, -1, -1);
    }
    else
    {
      sub_1D2F99630(v10, v12, v14, v16);
      sub_1D2F99630(v10, v12, v14, v16);
    }
  }
  BOOL v27 = *(void **)(v2 + 16);
  uint64_t v28 = *(void **)(v2 + 24);
  id v29 = *(void **)(v2 + 32);
  *(void *)(v2 + 16) = v10;
  *(void *)(v2 + 24) = v12;
  *(void *)(v2 + 32) = v14;
  unsigned __int8 v30 = *(unsigned char *)(v2 + 40);
  *(unsigned char *)(v2 + 40) = v16;
  sub_1D2F995D0(v10, v12, v14, v16);
  sub_1D2F99630(v27, v28, v29, v30);
  if (*(unsigned char *)(v2 + 40) == 2)
  {
    if (*(unsigned char *)(v2 + 16)) {
      uint64_t v31 = 4;
    }
    else {
      uint64_t v31 = 3;
    }
    if (qword_1EBD5F798 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1D3001898();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EBD656E0);
    uint64_t v33 = (uint64_t)v37;
    sub_1D3001858();
    sub_1D2F62828("events.filters.UserDisambiguatesPhoneCallOrMessagesContact", 58, 2, v33);
    sub_1D2F99630(v10, v12, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v33, v39);
  }
  else
  {
    sub_1D2F99630(v10, v12, v14, v16);
    return 0;
  }
  return v31;
}

void *sub_1D2F9929C(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  if (*(unsigned char *)(a1 + 24))
  {
    unsigned __int8 v9 = *(void **)(a1 + 16);
    if (*(unsigned char *)(a1 + 24) == 1)
    {
      sub_1D2F7B488(v9, 1u);
      a2 = (void *)sub_1D2F99F88(v9, a2, a3, a4, a5);
      uint64_t v10 = v9;
      unsigned __int8 v11 = 1;
    }
    else
    {
      sub_1D2F7B488(v9, 2u);
      a2 = sub_1D2F99B78(v9, a2, a3, a4, a5);
      uint64_t v10 = v9;
      unsigned __int8 v11 = 2;
    }
    sub_1D2F7B4AC(v10, v11);
  }
  else
  {
    if (qword_1EA698088 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1D3001918();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EA699730);
    uint64_t v13 = sub_1D30018F8();
    os_log_type_t v14 = sub_1D30020A8();
    if (os_log_type_enabled(v13, v14))
    {
      char v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v15 = 0;
      _os_log_impl(&dword_1D2F05000, v13, v14, "UserDisambiguatesPhoneCallOrMessagesContact received a non Siri UI / Execution event", v15, 2u);
      MEMORY[0x1D942F2D0](v15, -1, -1);
    }

    sub_1D2F995D0(a2, a3, a4, a5);
  }
  return a2;
}

unint64_t sub_1D2F9944C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t result = 0xD000000000000015;
  switch(a4)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      BYTE8(v6) = 0;
      sub_1D3002438();
      sub_1D3001C68();
      *(void *)&long long v6 = a1 & 1;
      sub_1D3002568();
      sub_1D3001C68();
      unint64_t result = *(void *)((char *)&v6 + 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D2F9956C()
{
  sub_1D2F99630(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserDisambiguatesPhoneCallOrMessagesContactFilter()
{
  return self;
}

id sub_1D2F995D0(id result, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 != 2) {
      return result;
    }
    id v6 = a2;
    unint64_t result = a3;
  }
  return result;
}

void destroy for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1)
{
}

void sub_1D2F99630(void *a1, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 != 2) {
      return;
    }

    a1 = a3;
  }
}

uint64_t initializeWithCopy for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1D2F995D0(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1D2F995D0(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  char v8 = *(void **)(a1 + 8);
  unsigned __int8 v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1D2F99630(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  unsigned __int8 v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1D2F99630(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDisambiguatesPhoneCallOrMessagesContactFilterState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D2F99840(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1D2F99858(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UserDisambiguatesPhoneCallOrMessagesContactFilterState()
{
  return &type metadata for UserDisambiguatesPhoneCallOrMessagesContactFilterState;
}

void sub_1D2F99884()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 16);
  unsigned int v3 = *(void **)(*v0 + 24);
  int v4 = *(void **)(*v0 + 32);
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = 0;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(v1 + 40) = 3;
  sub_1D2F99630(v2, v3, v4, v5);
}

uint64_t sub_1D2F998A8(uint64_t a1)
{
  return sub_1D2F98E3C(a1);
}

uint64_t sub_1D2F998CC()
{
  if (qword_1EA698080 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2F99928()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F999B8()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2F99A34()
{
  return sub_1D3002968();
}

uint64_t sub_1D2F99AC0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D3002638();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D2F99B20(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65646E6F70736572;
  if (*v1) {
    uint64_t v2 = 0x6D6E6F646E616261;
  }
  unint64_t v3 = 0xE900000000000064;
  if (*v1) {
    unint64_t v3 = 0xEB00000000746E65;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D2F99B6C(char *a1, char *a2)
{
  return sub_1D2FBC168(*a1, *a2);
}

void *sub_1D2F99B78(void *a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  id v10 = objc_msgSend(a1, sel_eventBody);
  if (v10)
  {
    unsigned __int8 v11 = v10;
    if (a5 - 2 >= 2)
    {
      if (a5)
      {
        id v23 = a2;
        objc_msgSend(v23, sel_timestamp);
        double v25 = v24;
        objc_msgSend(a1, sel_timestamp);
        double v27 = v26;

        sub_1D2F99630(a2, a3, a4, 1u);
        if (v27 - v25 <= 300.0)
        {
          id v28 = v23;
          return a2;
        }
      }
      else
      {
        id v18 = a2;
        id v19 = objc_msgSend(v18, sel_eventBody);
        if (v19)
        {
          uint64_t v20 = v19;
          if (sub_1D2F9A1F0(v11))
          {
            id v21 = objc_msgSend(v11, sel_taskStep);
            if (v21 == (id)4)
            {
              id v30 = objc_msgSend(v11, sel_statusReason);
              uint64_t v31 = sub_1D3001B78();
              uint64_t v33 = v32;

              if (v31 == 0xD000000000000014 && v33 == 0x80000001D3011020)
              {

                sub_1D2F99630(a2, a3, a4, 0);
                swift_bridgeObjectRelease();

                goto LABEL_6;
              }
              char v35 = sub_1D3002778();

              sub_1D2F99630(a2, a3, a4, 0);
              swift_bridgeObjectRelease();

              if (v35) {
                goto LABEL_6;
              }
            }
            else
            {
              id v22 = v21;
              if (v21 == (id)41 || v21 == (id)15)
              {

                sub_1D2F99630(a2, a3, a4, 0);
                goto LABEL_6;
              }

              sub_1D2F99630(a2, a3, a4, 0);
              if (v22 == (id)39)
              {
                id v34 = v18;
                return a2;
              }
            }
          }
          else
          {

            sub_1D2F99630(a2, a3, a4, 0);
          }
        }
        else
        {

          sub_1D2F99630(a2, a3, a4, 0);
        }
      }
    }
    else if (sub_1D2F7B614(v10) & 1) != 0 || (sub_1D2F7B838(v11))
    {
      id v12 = objc_msgSend(v11, sel_taskStep);

      if (v12 == (id)15)
      {
LABEL_6:
        id v13 = a1;
        return a1;
      }
    }
    else
    {
    }
    return 0;
  }
  if (qword_1EA698088 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D3001918();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EA699730);
  char v15 = sub_1D30018F8();
  os_log_type_t v16 = sub_1D30020A8();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v17 = 0;
    _os_log_impl(&dword_1D2F05000, v15, v16, "UserDisambiguatesPhoneCallOrMessagesContact cannot unwrap execution store event body", v17, 2u);
    MEMORY[0x1D942F2D0](v17, -1, -1);
  }

  sub_1D2F995D0(a2, a3, a4, a5);
  return a2;
}

uint64_t sub_1D2F99F88(void *a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  id v10 = objc_msgSend(a1, sel_eventBody);
  if (v10)
  {
    unsigned __int8 v11 = v10;
    switch(a5)
    {
      case 1u:
        id v18 = a2;
        unsigned __int8 v19 = objc_msgSend(v11, sel_isStarting);

        if (v19) {
          return (uint64_t)a2;
        }
        id v22 = a1;
        return 0;
      case 2u:
      case 3u:

        goto LABEL_4;
      default:
        id v17 = a2;
        if (objc_msgSend(v11, sel_isStarting))
        {

          return (uint64_t)a2;
        }
        id v20 = objc_msgSend(v11, sel_dismissalReason);
        sub_1D3001B78();

        LOBYTE(v20) = sub_1D2F7B9D8();
        if (v20 - 1 >= 0xC)
        {
          sub_1D2F99630(a2, a3, a4, 0);
LABEL_4:
          uint64_t result = 0;
        }
        else
        {
          id v21 = a1;
          uint64_t result = 1;
        }
        break;
    }
  }
  else
  {
    if (qword_1EA698088 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D3001918();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EA699730);
    uint64_t v14 = sub_1D30018F8();
    os_log_type_t v15 = sub_1D30020A8();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v16 = 0;
      _os_log_impl(&dword_1D2F05000, v14, v15, "UserDisambiguatesPhoneCallOrMessagesContact cannot unwrap UI store event body", v16, 2u);
      MEMORY[0x1D942F2D0](v16, -1, -1);
    }

    sub_1D2F995D0(a2, a3, a4, a5);
    return (uint64_t)a2;
  }
  return result;
}

uint64_t sub_1D2F9A1F0(void *a1)
{
  id v3 = objc_msgSend(a1, sel_taskId);
  uint64_t v4 = sub_1D3001B78();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(v1, sel_taskId);
  uint64_t v8 = sub_1D3001B78();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v13 = 0;
    if ((v12 & 1) == 0) {
      return v13 & 1;
    }
  }
  id v14 = objc_msgSend(a1, sel_intentName);
  uint64_t v15 = sub_1D3001B78();
  uint64_t v17 = v16;

  id v18 = objc_msgSend(v1, sel_intentName);
  uint64_t v19 = sub_1D3001B78();
  uint64_t v21 = v20;

  if (v15 == v19 && v17 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v13 = 0;
    if ((v22 & 1) == 0) {
      return v13 & 1;
    }
  }
  id v23 = objc_msgSend(a1, sel_slotValue);
  uint64_t v24 = sub_1D3001B78();
  uint64_t v26 = v25;

  id v27 = objc_msgSend(v1, sel_slotValue);
  uint64_t v28 = sub_1D3001B78();
  uint64_t v30 = v29;

  if (v24 == v28 && v26 == v30) {
    char v13 = 1;
  }
  else {
    char v13 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}