BOOL sub_1D2F9A410(uint64_t a1, uint64_t a2)
{
  return sub_1D2F9A4FC(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1D2F9A434()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EA699730);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA699730);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

BOOL sub_1D2F9A4FC(void *a1, void *a2, void *a3, char a4, unint64_t a5, unint64_t a6, unint64_t a7, char a8)
{
  switch(a4)
  {
    case 1:
      if (a8 != 1) {
        return 0;
      }
      sub_1D2F621C8();
      sub_1D2F995D0(a1, a2, a3, 1u);
      sub_1D2F995D0((id)a5, (void *)a6, (void *)a7, 1u);
      char v14 = sub_1D30022B8();
      sub_1D2F99630((void *)a5, (void *)a6, (void *)a7, 1u);
      v15 = a1;
      v16 = a2;
      v17 = a3;
      unsigned __int8 v18 = 1;
      goto LABEL_6;
    case 2:
      if (a8 != 2) {
        return 0;
      }
      if (a1) {
        uint64_t v20 = 0x6D6E6F646E616261;
      }
      else {
        uint64_t v20 = 0x65646E6F70736572;
      }
      if (a1) {
        unint64_t v21 = 0xEB00000000746E65;
      }
      else {
        unint64_t v21 = 0xE900000000000064;
      }
      if (a5) {
        uint64_t v22 = 0x6D6E6F646E616261;
      }
      else {
        uint64_t v22 = 0x65646E6F70736572;
      }
      if (a5) {
        unint64_t v23 = 0xEB00000000746E65;
      }
      else {
        unint64_t v23 = 0xE900000000000064;
      }
      if (v20 == v22 && v21 == v23)
      {
        id v24 = a2;
        id v25 = a3;
        id v26 = (id)a6;
        id v27 = (id)a7;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v28 = sub_1D3002778();
        id v29 = a2;
        id v33 = a3;
        id v30 = (id)a6;
        id v31 = (id)a7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
        {

          return 0;
        }
      }
      sub_1D2F621C8();
      if (sub_1D30022B8())
      {
        char v32 = sub_1D30022B8();

        return v32 & 1;
      }

      return 0;
    case 3:
      return a8 == 3 && !(a6 | a5 | a7);
    default:
      if (a8) {
        return 0;
      }
      sub_1D2F621C8();
      sub_1D2F995D0(a1, a2, a3, 0);
      sub_1D2F995D0((id)a5, (void *)a6, (void *)a7, 0);
      char v14 = sub_1D30022B8();
      sub_1D2F99630((void *)a5, (void *)a6, (void *)a7, 0);
      v15 = a1;
      v16 = a2;
      v17 = a3;
      unsigned __int8 v18 = 0;
LABEL_6:
      sub_1D2F99630(v15, v16, v17, v18);
      return v14 & 1;
  }
}

unsigned char *storeEnumTagSinglePayload for UserDisambiguatesPhoneCallOrMessagesContactFilterState.DisambiguationStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2F9A8ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDisambiguatesPhoneCallOrMessagesContactFilterState.DisambiguationStatus()
{
  return &type metadata for UserDisambiguatesPhoneCallOrMessagesContactFilterState.DisambiguationStatus;
}

unint64_t sub_1D2F9A8E8()
{
  unint64_t result = qword_1EA699748;
  if (!qword_1EA699748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699748);
  }
  return result;
}

uint64_t Turn.__allocating_init(turnID:events:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  uint64_t v8 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  *(void *)(v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = a2;
  sub_1D2F4E518(a3, v6 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return v6;
}

uint64_t Turn.turnID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t Turn.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Turn.date.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F39578(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, a1);
}

uint64_t Turn.__allocating_init(turnID:events:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v12 = sub_1D3001018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, char *))(v2 + 104))(v11, a2, v7);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v13;
}

uint64_t Turn.init(turnID:events:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  uint64_t v8 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a1, v8);
  *(void *)(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = a2;
  sub_1D2F4E518(a3, v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return v3;
}

uint64_t Turn.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1D2F9AD54(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return v0;
}

uint64_t sub_1D2F9AD54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Turn.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_1D2F9AD54(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2F9AE74()
{
  return type metadata accessor for Turn();
}

uint64_t type metadata accessor for Turn()
{
  uint64_t result = qword_1EBD63218;
  if (!qword_1EBD63218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D2F9AEC8()
{
  sub_1D30010A8();
  if (v0 <= 0x3F)
  {
    sub_1D2F9AFCC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for Turn(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Turn);
}

uint64_t dispatch thunk of Turn.__allocating_init(turnID:events:date:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1D2F9AFCC()
{
  if (!qword_1EBD62A88)
  {
    sub_1D3001018();
    unint64_t v0 = sub_1D30022F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD62A88);
    }
  }
}

uint64_t sub_1D2F9B024()
{
  return sub_1D2F9B04C((unint64_t *)&qword_1EA699770);
}

uint64_t sub_1D2F9B038()
{
  return sub_1D2F9B04C((unint64_t *)&qword_1EBD61478);
}

uint64_t sub_1D2F9B04C(unint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D2F0BCB8(0, a1);
  objc_msgSend(v2, sel_anyEventType);
  uint64_t result = sub_1D30021F8();
  if (result)
  {
    if (v3 != result) {
      return 0;
    }
    id v5 = objc_msgSend(v2, sel_payload);
    if (v5)
    {
      uint64_t v6 = sub_1D3000F68();
      unint64_t v8 = v7;

      id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v5 = (id)sub_1D3000F58();
      sub_1D2F0D1CC(v6, v8);
    }
    else
    {
      id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    id v10 = objc_msgSend(v9, sel_initWithData_, v5);

    if (!v10) {
      return 0;
    }
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

id sub_1D2F9B16C(uint64_t a1)
{
  return sub_1D2F9B184(a1, (void (*)(uint64_t))sub_1D2FDF698);
}

id sub_1D2F9B184(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(v2 + 16);
  id v5 = *(id *)(v4 + 32);
  if (v5 == (id)*MEMORY[0x1E4F501C0])
  {
    swift_retain();
    a2(a1);
  }
  else
  {
    id v5 = objc_msgSend(*(id *)(v4 + 16), sel_receiveInput_, a1);
    uint64_t v7 = *(void *)(v2 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D3004380;
    *(void *)(inited + 32) = v5;
    *(void *)(inited + 40) = *(void *)(v7 + 32);
    swift_retain();
    uint64_t v9 = sub_1D2F56CE0(-1, inited);
    swift_setDeallocating();
    *(void *)(v7 + 32) = v9;
  }
  swift_release();
  return v5;
}

void sub_1D2F9B270(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = 1;
  sub_1D2F1CC9C(v4);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v5 + 32);
  if (v6 != *MEMORY[0x1E4F501C8] && (v6 >= 1 ? (BOOL v7 = v6 == *MEMORY[0x1E4F501C0]) : (BOOL v7 = 1), v7))
  {
    id v11 = *(id *)(v5 + 40);
    *(void *)(v5 + 40) = a1;
    id v8 = a1;
  }
  else
  {
    if (objc_msgSend(a1, sel_state))
    {
      uint64_t v9 = *(void *)(v1 + 16);
    }
    else
    {
      uint64_t v9 = *(void *)(v1 + 16);
      if (*(void *)(*(void *)(v9 + 48) + 16)) {
        return;
      }
    }
    id v10 = *(void **)(v9 + 16);
    objc_msgSend(v10, sel_receiveCompletion_, a1);
  }
}

void *sub_1D2F9B374(uint64_t a1)
{
  return sub_1D2F9B380(a1, &qword_1EBD632B0);
}

void *sub_1D2F9B380(uint64_t a1, uint64_t *a2)
{
  v2[3] = 0;
  v2[4] = BPSDemandMax();
  v2[5] = 0;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = (void *)swift_allocObject();
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = 0;
  v2[6] = v5;
  v2[2] = a1;
  return v2;
}

void sub_1D2F9B3E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (objc_class *)type metadata accessor for ScanConversationsSubscriber();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_currentConversation] = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5F8B8);
  uint64_t v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5F8C0);
  swift_allocObject();
  swift_unknownObjectRetain();
  BOOL v7 = v5;
  *(void *)(v6 + 16) = sub_1D2F9B380(a1, &qword_1EBD5FB28);
  *(void *)&v7[OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_downstream] = v6;

  v11.receiver = v7;
  v11.super_class = v4;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_inner);
  *(void *)(v2 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_inner) = v8;
  id v10 = v8;

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCO28SiriPrivateLearningAnalytics15BiomePublishers17ScanConversations_upstream), sel_subscribe_, v10);
}

id sub_1D2F9B5A0(uint64_t a1)
{
  return sub_1D2F9C7D0(a1, _s17ScanConversationsCMa);
}

uint64_t _s17ScanConversationsCMa()
{
  return self;
}

void sub_1D2F9B628(void *a1)
{
  uint64_t v2 = *(void *)(v1
                 + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_downstream);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = a1;
  id v5 = a1;
  sub_1D2F1CC9C(v4);
  uint64_t v6 = *(void *)(v2 + 16);
  BOOL v7 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(qword_1EBD5F8D0);
  id v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[qword_1EA6990C0] = v6;
  v10.receiver = v8;
  v10.super_class = v7;
  swift_retain();
  id v9 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(*(id *)(*(void *)(v2 + 16) + 16), sel_receiveSubscription_, v9, v10.receiver, v10.super_class);
}

uint64_t sub_1D2F9B744(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F0BD44(a1, (uint64_t)v34);
  type metadata accessor for Turn();
  if (swift_dynamicCast())
  {
    uint64_t v7 = v32[0];
    id v8 = (uint64_t *)(v1
                   + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_currentConversation);
    swift_beginAccess();
    if ((unint64_t)*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1D30025A8();
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_13;
      }
    }
    else if (!*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_13;
    }
    sub_1D2F9C09C(v7, v6);
    uint64_t v9 = sub_1D30010A8();
    int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9);
    sub_1D2F0D16C((uint64_t)v6);
    if (v10 == 1)
    {
      uint64_t v11 = *v8;
      if ((unint64_t)*v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1D30025A8();
        if (v12)
        {
LABEL_7:
          unint64_t v13 = v12 - 1;
          if (__OFSUB__(v12, 1))
          {
            __break(1u);
          }
          else if ((v11 & 0xC000000000000001) == 0)
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v13 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              swift_retain();
              goto LABEL_12;
            }
            __break(1u);
            goto LABEL_35;
          }
          MEMORY[0x1D942E3A0](v13, v11);
LABEL_12:
          char v14 = sub_1D3001058();
          swift_bridgeObjectRelease();
          swift_release();
          if (v14) {
            goto LABEL_13;
          }
LABEL_26:
          unint64_t v25 = *v8;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61548);
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 48) = v25;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
          uint64_t v2 = swift_allocObject();
          *(void *)(v2 + 16) = 0;
          if (!(v25 >> 62))
          {
            uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
LABEL_28:
            unint64_t v27 = sub_1D2F7A0C4();
            uint64_t v28 = swift_allocObject();
            *(void *)(v28 + 16) = v26;
            *(void *)(v11 + 16) = v2;
            *(void *)(v11 + 24) = v27;
            *(void *)(v11 + 32) = v28;
            *(void *)(v11 + 40) = v27;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD613D0);
            uint64_t v29 = swift_allocObject();
            *(void *)(v29 + 16) = v11;
            __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
            uint64_t v30 = swift_allocObject();
            *(_OWORD *)(v30 + 16) = xmmword_1D3005C00;
            *(void *)(v30 + 32) = v7;
            v32[0] = v30;
            sub_1D3001DE8();
            *id v8 = v32[0];
            swift_retain();
            swift_bridgeObjectRelease();
            uint64_t v16 = (uint64_t)sub_1D2F9B184(v29, (void (*)(uint64_t))sub_1D2FDF6A4);
            swift_release();
LABEL_29:
            swift_release();
            return v16;
          }
LABEL_35:
          swift_bridgeObjectRetain_n();
          uint64_t v26 = sub_1D30025A8();
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v12) {
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
LABEL_13:
    swift_beginAccess();
    uint64_t v15 = swift_retain();
    MEMORY[0x1D942DCC0](v15);
    if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D3001E28();
    }
    sub_1D3001E68();
    sub_1D3001DE8();
    swift_endAccess();
    uint64_t v16 = BPSDemandMax();
    goto LABEL_29;
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1D3001918();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBD65778);
  sub_1D2F0BD44(a1, (uint64_t)v34);
  unsigned __int8 v18 = sub_1D30018F8();
  os_log_type_t v19 = sub_1D30020A8();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v32[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    __swift_project_boxed_opaque_existential_1(v34, v34[3]);
    uint64_t DynamicType = swift_getDynamicType();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699780);
    uint64_t v22 = sub_1D3001BC8();
    uint64_t DynamicType = sub_1D2F09508(v22, v23, v32);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    _os_log_impl(&dword_1D2F05000, v18, v19, "ScanConversationsSubscriber ignored unexpected input type %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v21, -1, -1);
    MEMORY[0x1D942F2D0](v20, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  }

  return BPSDemandMax();
}

void sub_1D2F9BD8C(void *a1)
{
  uint64_t v3 = (unint64_t *)(v1
                          + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_currentConversation);
  swift_beginAccess();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v11) {
      goto LABEL_6;
    }
  }
  else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_6;
  }
  unint64_t v4 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61548);
  uint64_t v5 = (void *)swift_allocObject();
  v5[6] = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v8 = sub_1D2F7A0C4();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  v5[2] = v6;
  v5[3] = v8;
  v5[4] = v9;
  v5[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD613D0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v5;
  sub_1D2F9B184(v10, (void (*)(uint64_t))sub_1D2FDF6A4);
  swift_release();
  *uint64_t v3 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1D2F9B270(a1);
}

void sub_1D2F9BFD0()
{
  uint64_t v1 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalyticsP33_1C28A16D52A6DDC29A328441443490A627ScanConversationsSubscriber_downstream)
                 + 16);
  uint64_t v2 = *(void **)(v1 + 24);
  if ((unint64_t)v2 >= 2) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  *(void *)(v1 + 24) = 1;
  sub_1D2F1CC9C(v2);
  objc_msgSend(v3, sel_cancel);
}

uint64_t sub_1D2F9C09C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v66 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  v62 = (char *)&v61 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v61 - v11;
  unint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
  uint64_t v64 = v14;
  v65 = a2;
  v63 = v6;
  if (v13 >> 62)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D30025A8();
    if (v15) {
      goto LABEL_3;
    }
LABEL_33:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v65, 1, 1, v4);
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_33;
  }
LABEL_3:
  unint64_t v16 = 0;
  uint64_t v67 = v4;
  v68 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
  v69 = (uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  unint64_t v70 = v13 & 0xC000000000000001;
  while (1)
  {
    if (v70)
    {
      swift_bridgeObjectRetain();
      id v17 = (id)MEMORY[0x1D942E3A0](v16, v13);
    }
    else
    {
      unsigned __int8 v18 = *(void **)(v13 + 8 * v16 + 32);
      swift_bridgeObjectRetain();
      id v17 = v18;
    }
    os_log_type_t v19 = v17;
    if (objc_msgSend(v17, sel_anyEventType) == 6)
    {
      id v20 = objc_msgSend(v19, sel_payload);
      if (v20)
      {
        uint64_t v21 = sub_1D3000F68();
        unint64_t v23 = v22;

        id v20 = (id)sub_1D3000F58();
        sub_1D2F0D1CC(v21, v23);
      }
      id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v20);

      id v25 = objc_msgSend(v24, sel_event);
      uint64_t v4 = v67;
      if (!v25) {
        goto LABEL_27;
      }
    }
    else
    {
      id v25 = v19;
    }
    uint64_t v26 = sub_1D2F0BCB8(0, (unint64_t *)&qword_1EA699770);
    objc_msgSend(v25, sel_anyEventType);
    uint64_t v27 = sub_1D30021F8();
    if (!v27 || v26 != v27) {
      goto LABEL_26;
    }
    id v28 = objc_msgSend(v25, sel_payload);
    if (v28)
    {
      uint64_t v29 = sub_1D3000F68();
      unint64_t v31 = v30;

      id v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v28 = (id)sub_1D3000F58();
      sub_1D2F0D1CC(v29, v31);
    }
    else
    {
      id v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    id v33 = objc_msgSend(v32, sel_initWithData_, v28);

    if (!v33) {
      goto LABEL_25;
    }
    self;
    v34 = (void *)swift_dynamicCastObjCClass();

    if (!v34)
    {
      id v25 = v33;
LABEL_25:
      uint64_t v4 = v67;
LABEL_26:

LABEL_27:
      (*v68)(v12, 1, 1, v4);
      swift_bridgeObjectRelease();
      id v33 = v19;
      goto LABEL_28;
    }
    id v35 = objc_msgSend(v34, sel_clientConversationTrace);
    if (v35
      && (v36 = v35,
          id v37 = objc_msgSend(v35, sel_previousTurnID),
          v36,
          v37))
    {
      uint64_t v38 = sub_1D3000F68();
      unint64_t v40 = v39;

      sub_1D2F587AC(v38, v40, (uint64_t)v12);
      sub_1D2F0D1CC(v38, v40);
      swift_bridgeObjectRelease();

      uint64_t v4 = v67;
    }
    else
    {
      uint64_t v4 = v67;
      (*v68)(v12, 1, 1, v67);
      swift_bridgeObjectRelease();
    }
LABEL_28:

    v41 = *v69;
    int v42 = (*v69)(v12, 1, v4);
    uint64_t result = sub_1D2F0D16C((uint64_t)v12);
    if (v42 != 1) {
      break;
    }
    unint64_t v44 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    ++v16;
    if (v44 == v15) {
      goto LABEL_33;
    }
  }
  if (v15 == v16) {
    goto LABEL_33;
  }
  if (v70)
  {
    id v45 = (id)MEMORY[0x1D942E3A0](v16, v13);
LABEL_40:
    v46 = v45;
    v47 = (void *)sub_1D2F585CC();
    uint64_t v48 = v64;
    if (v47)
    {
      v49 = v47;
      id v50 = objc_msgSend(v47, sel_clientConversationTrace);
      if (v50
        && (v51 = v50,
            id v52 = objc_msgSend(v50, sel_previousTurnID),
            v51,
            v52))
      {
        uint64_t v53 = sub_1D3000F68();
        unint64_t v55 = v54;

        uint64_t v56 = (uint64_t)v62;
        sub_1D2F587AC(v53, v55, (uint64_t)v62);
        sub_1D2F0D1CC(v53, v55);
      }
      else
      {
        uint64_t v56 = (uint64_t)v62;
        (*v68)(v62, 1, 1, v4);
      }

      v46 = v49;
    }
    else
    {
      uint64_t v56 = (uint64_t)v62;
      (*v68)(v62, 1, 1, v4);
    }

    sub_1D2F61448(v56, v48);
    uint64_t result = v41((char *)v48, 1, v4);
    if (result != 1)
    {
      uint64_t v58 = v66 + 32;
      v57 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 32);
      v59 = v63;
      v57(v63, v48, v4);
      sub_1D2F0D16C(v56);
      v60 = v65;
      v57(v65, (uint64_t)v59, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 24))(v60, 0, 1, v4);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v45 = *(id *)(v13 + 8 * v16 + 32);
      goto LABEL_40;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1D2F9C7B4()
{
  return sub_1D2F9C7D0(0, type metadata accessor for ScanConversationsSubscriber);
}

id sub_1D2F9C7D0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for ScanConversationsSubscriber()
{
  return self;
}

uint64_t static ORCHEvents.orchEvent(from:)()
{
  return sub_1D2F585E4();
}

id static ORCHEvents.requestID(_:)()
{
  uint64_t v0 = (void *)sub_1D2F585E4();
  id v1 = objc_msgSend(v0, sel_eventMetadata);

  id v2 = objc_msgSend(v1, sel_requestId);
  return v2;
}

ValueMetadata *type metadata accessor for ORCHEvents()
{
  return &type metadata for ORCHEvents;
}

uint64_t sub_1D2F9C914(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1D2F09B08(0, v1, 0);
    uint64_t v2 = v16;
    objc_super v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x1D942DB30](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_1D2F09B08(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void __swiftcall WakeWordTrimmer.init(localeHandler:)(SiriPrivateLearningAnalytics::WakeWordTrimmer *__return_ptr retstr, SiriPrivateLearningAnalytics::CurrentLocales *localeHandler)
{
  Swift::String region = localeHandler->device.region;
  Swift::String language = localeHandler->siri.language;
  Swift::String v4 = localeHandler->siri.region;
  Swift::String v5 = localeHandler->siriVoice.language;
  Swift::String v6 = localeHandler->siriVoice.region;
  uint64_t countAndFlagsBits = localeHandler->emptyIdentifier._countAndFlagsBits;
  object = localeHandler->emptyIdentifier._object;
  retstr->localeHandler.device.Swift::String language = localeHandler->device.language;
  retstr->localeHandler.device.Swift::String region = region;
  retstr->localeHandler.siri.Swift::String language = language;
  retstr->localeHandler.siri.Swift::String region = v4;
  retstr->localeHandler.siriVoice.Swift::String language = v5;
  retstr->localeHandler.siriVoice.Swift::String region = v6;
  retstr->localeHandler.emptyIdentifier._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->localeHandler.emptyIdentifier._object = object;
}

uint64_t sub_1D2F9CA38(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  id v3 = sub_1D2F27CD8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9CB84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1D2F27CCC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9CCCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1D2F27DF0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9CE20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1D2F27F00(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61140);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9CF8C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  id v3 = sub_1D2F2884C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9D0E4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  id v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  id v3 = sub_1D2F2897C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = &v3[4 * v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[4 * v8] && (unint64_t)v10 < a1 + 32 + 4 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 4 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9D230(unint64_t a1)
{
  return sub_1D2F9D7D4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1D2F9EECC);
}

uint64_t sub_1D2F9D248(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1D2F27C98(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_1D30010A8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9D3EC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1D942E3B0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1D2F9F0EC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1, MEMORY[0x1E4FA2B98], (unint64_t *)&unk_1EA699840, &qword_1EA699838, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1D2F60C44);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1D3001DE8();
}

uint64_t sub_1D2F9D5F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1D942E3B0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1D2F9F310(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1D3001DE8();
}

uint64_t sub_1D2F9D7BC(unint64_t a1)
{
  return sub_1D2F9D7D4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1D2F9F524);
}

uint64_t sub_1D2F9D7D4(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1D942E3B0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1D3001DE8();
}

uint64_t WakeWordTrimmer.trim(tokens:)(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 48);
  long long v6 = *(_OWORD *)(v1 + 64);
  long long v7 = *(_OWORD *)(v1 + 80);
  uint64_t v8 = *(void *)(v1 + 96);
  uint64_t v9 = *(void *)(v1 + 104);
  v102[0] = *(_OWORD *)v1;
  v102[1] = v3;
  v102[2] = v4;
  v102[3] = v5;
  v102[4] = v6;
  v102[5] = v7;
  uint64_t v103 = v8;
  uint64_t v104 = v9;
  Swift::String_optional v10 = WakeWordTrimmer.getLocale()();
  if (!v10.value._object)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1D3001918();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBD65778);
    uint64_t v19 = sub_1D30018F8();
    os_log_type_t v20 = sub_1D30020B8();
    if (!os_log_type_enabled(v19, v20)) {
      goto LABEL_53;
    }
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_1D2F05000, v19, v20, "[ASRFeatureExtractor] #TrimWakeWords: Siri Locale was nil. Not attempting to trim wake words", v21, 2u);
    int64_t v22 = v21;
LABEL_52:
    MEMORY[0x1D942F2D0](v22, -1, -1);
LABEL_53:

LABEL_67:
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t countAndFlagsBits = v10.value._countAndFlagsBits;
  object = v10.value._object;
  if (qword_1EBD63A48 != -1) {
LABEL_72:
  }
    swift_once();
  uint64_t v13 = sub_1D3001918();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D3002098();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(void *)&v102[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2F09508(countAndFlagsBits, (unint64_t)object, (uint64_t *)v102);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v14, v15, "[ASRFeatureExtractor] #TrimWakeWords: Trimming wake words for locale %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v17, -1, -1);
    MEMORY[0x1D942F2D0](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v23 = (char *)_s28SiriPrivateLearningAnalytics15WakeWordTrimmerV17getTriggerPhrases6localeSaySSGSS_tFZ_0(countAndFlagsBits, (unint64_t)object);
  swift_bridgeObjectRetain_n();
  id v24 = sub_1D30018F8();
  os_log_type_t v25 = sub_1D3002098();
  uint64_t v94 = a1;
  v98 = v23;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(void *)&v102[0] = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x1D942DD00](v28, MEMORY[0x1E4FBB1A0]);
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v32 = v29;
    unint64_t v23 = v98;
    sub_1D2F09508(v32, v31, (uint64_t *)v102);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    a1 = v94;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v24, v25, "[ASRFeatureExtractor] #TrimWakeWords: Wake words: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v27, -1, -1);
    MEMORY[0x1D942F2D0](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = MEMORY[0x1E4FBC860];
  uint64_t v101 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    swift_bridgeObjectRetain();
    sub_1D2F226C4();
    id v35 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v36 = *v35;
      *(void *)&v102[0] = *(v35 - 1);
      *((void *)&v102[0] + 1) = v36;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1D3002388();
      swift_bridgeObjectRelease();
      sub_1D2F9CCCC(v37);
      v35 += 2;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v33 = v101;
    unint64_t v23 = v98;
  }
  uint64_t v38 = sub_1D2F9C914(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v100 = (void *)sub_1D2F9FFE4(v38, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease_n();
  uint64_t v96 = *((void *)v23 + 2);
  if (!v96)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1D30018F8();
    os_log_type_t v67 = sub_1D3002098();
    if (!os_log_type_enabled(v19, v67))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_67;
    }
    v68 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    *(void *)&v102[0] = v69;
    *(_DWORD *)v68 = 136315138;
    uint64_t v70 = swift_bridgeObjectRetain();
    uint64_t v71 = MEMORY[0x1D942DD00](v70, MEMORY[0x1E4FBB1A0]);
    unint64_t v73 = v72;
    swift_bridgeObjectRelease();
    sub_1D2F09508(v71, v73, (uint64_t *)v102);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v19, v67, "[ASRFeatureExtractor] #TrimWakeWords: No wake words detected. Utterance used: %s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v69, -1, -1);
    int64_t v22 = v68;
    goto LABEL_52;
  }
  unint64_t v39 = 0;
  v97 = v23 + 32;
  uint64_t v93 = v38;
  uint64_t countAndFlagsBits = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v39 >= *((void *)v23 + 2)) {
      goto LABEL_70;
    }
    unint64_t v40 = (uint64_t *)&v97[16 * v39];
    unint64_t v41 = v40[1];
    uint64_t v95 = *v40;
    *(void *)&v102[0] = *v40;
    *((void *)&v102[0] + 1) = v41;
    sub_1D2F226C4();
    unint64_t v99 = v41;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1D3002388();
    int64_t v43 = *(void *)(v42 + 16);
    if (v43)
    {
      *(void *)&v102[0] = countAndFlagsBits;
      sub_1D2F09B08(0, v43, 0);
      object = *(void **)&v102[0];
      unint64_t v44 = (uint64_t *)(v42 + 56);
      do
      {
        uint64_t v45 = *(v44 - 3);
        uint64_t v46 = *(v44 - 2);
        uint64_t v47 = *(v44 - 1);
        uint64_t v48 = *v44;
        swift_bridgeObjectRetain();
        uint64_t v49 = MEMORY[0x1D942DB30](v45, v46, v47, v48);
        uint64_t v51 = v50;
        swift_bridgeObjectRelease();
        *(void *)&v102[0] = object;
        unint64_t v53 = object[2];
        unint64_t v52 = object[3];
        if (v53 >= v52 >> 1)
        {
          sub_1D2F09B08(v52 > 1, v53 + 1, 1);
          object = *(void **)&v102[0];
        }
        object[2] = v53 + 1;
        unint64_t v54 = &object[2 * v53];
        v54[4] = v49;
        v54[5] = v51;
        v44 += 4;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease();
      a1 = v94;
      unint64_t v23 = v98;
      uint64_t countAndFlagsBits = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      object = (void *)countAndFlagsBits;
    }
    unint64_t v55 = v100[2];
    if (v55)
    {
      uint64_t v56 = object[2];
      if (!v56) {
        break;
      }
      if ((v100[4] != object[4] || v100[5] != object[5]) && (sub_1D3002778() & 1) == 0)
      {
LABEL_45:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      unint64_t v57 = v55 - 1;
      if (v55 != 1)
      {
        uint64_t v59 = v56 - 1;
        v60 = object + 7;
        uint64_t v61 = v100 + 7;
        while (v57)
        {
          if (!v59) {
            goto LABEL_48;
          }
          BOOL v62 = *(v61 - 1) == *(v60 - 1) && *v61 == *v60;
          if (!v62 && (sub_1D3002778() & 1) == 0) {
            goto LABEL_45;
          }
          --v59;
          v61 += 2;
          v60 += 2;
          if (!--v57) {
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
    }
LABEL_33:
    unint64_t v58 = object[2];
    if (v55 == v58) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v55 >= v58) {
      goto LABEL_71;
    }
LABEL_46:
    if (++v39 == v96) {
      goto LABEL_50;
    }
  }
LABEL_48:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v63 = sub_1D30018F8();
  os_log_type_t v64 = sub_1D3002098();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(void *)&v102[0] = v66;
    *(_DWORD *)v65 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2F09508(v95, v99, (uint64_t *)v102);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v63, v64, "[ASRFeatureExtractor] #TrimWakeWords: Trigger phrase %s detected. Removing from utterance", v65, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v66, -1, -1);
    MEMORY[0x1D942F2D0](v65, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v74 = object[2];
  swift_bridgeObjectRelease();
  uint64_t v75 = sub_1D2F9E570(v74, v93);
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  unint64_t v81 = v80;
  if ((v80 & 1) == 0)
  {
LABEL_56:
    a1 = sub_1D2F9E6E0(v75, v77, v79, v81);
    goto LABEL_63;
  }
  sub_1D3002888();
  swift_unknownObjectRetain_n();
  uint64_t v82 = swift_dynamicCastClass();
  if (!v82)
  {
    swift_unknownObjectRelease();
    uint64_t v82 = MEMORY[0x1E4FBC860];
  }
  uint64_t v83 = *(void *)(v82 + 16);
  swift_release();
  if (__OFSUB__(v81 >> 1, v79))
  {
    __break(1u);
    goto LABEL_74;
  }
  if (v83 != (v81 >> 1) - v79)
  {
LABEL_74:
    swift_unknownObjectRelease();
    goto LABEL_56;
  }
  a1 = swift_dynamicCastClass();
  if (!a1)
  {
    swift_unknownObjectRelease();
    a1 = MEMORY[0x1E4FBC860];
  }
LABEL_63:
  swift_unknownObjectRelease();
  swift_bridgeObjectRetain_n();
  v84 = sub_1D30018F8();
  os_log_type_t v85 = sub_1D3002098();
  if (os_log_type_enabled(v84, v85))
  {
    v86 = (uint8_t *)swift_slowAlloc();
    uint64_t v87 = swift_slowAlloc();
    *(void *)&v102[0] = v87;
    *(_DWORD *)v86 = 136315138;
    uint64_t v88 = swift_bridgeObjectRetain();
    uint64_t v89 = MEMORY[0x1D942DD00](v88, MEMORY[0x1E4FBB1A0]);
    unint64_t v91 = v90;
    swift_release();
    sub_1D2F09508(v89, v91, (uint64_t *)v102);
    sub_1D3002318();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v84, v85, "[ASRFeatureExtractor] #TrimWakeWords: New utterance: %s", v86, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v87, -1, -1);
    MEMORY[0x1D942F2D0](v86, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return a1;
}

uint64_t sub_1D2F9E570(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v4 = v3;
    }
    else {
      unint64_t v4 = 0;
    }
    if (v2 >= v4) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

Swift::String_optional __swiftcall WakeWordTrimmer.getLocale()()
{
  uint64_t v7 = *(void *)(v0 + 32);
  unint64_t v8 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v2 = v7;
  uint64_t v1 = (void *)v8;
  uint64_t v3 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v3 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3
    || (sub_1D2F226C4(), (sub_1D3002378() & 1) != 0)
    || v7 == 95 && v8 == 0xE100000000000000
    || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = 0;
    uint64_t v1 = 0;
  }
  uint64_t v4 = v2;
  long long v5 = v1;
  result.value._object = v5;
  result.value._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t sub_1D2F9E6E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

void *sub_1D2F9E854(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1D2F9F744((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1D2F843C0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1D2F9E93C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x1E4FBC860];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(sub_1D30010A8() - 8);
      os_log_type_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614D8);
  uint64_t v8 = *(void *)(sub_1D30010A8() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

size_t sub_1D2F9EB7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614D8);
  uint64_t v3 = *(void *)(sub_1D30010A8() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1D2F9F944(&v10, (char *)v6 + v5, v1, a1);
      sub_1D2F843C0();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1D2F9ECB0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1D2F9F0EC((unint64_t)(v3 + 4), v2, v1, (void (*)(void))type metadata accessor for Turn, &qword_1EA699850, &qword_1EA698A08, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1D2F60B70);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

void *sub_1D2F9EDE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  unint64_t v6 = sub_1D2F9FD38(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1D2F843C0();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1D2F9EECC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D2FA09A4(&qword_1EA699798, &qword_1EA699790);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699790);
          size_t v12 = sub_1D2F60BDC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D2F0BCB8(0, &qword_1EBD613F8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9F0EC(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1D2FA09A4(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          int64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9F310(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D2FA09A4(&qword_1EA699830, &qword_1EA699828);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699828);
          size_t v12 = sub_1D2F60CAC(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699820);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9F524(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D2FA09A4((unint64_t *)&unk_1EA6997B0, &qword_1EA6997A8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6997A8);
          size_t v12 = sub_1D2F60D14(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D2F0BCB8(0, (unint64_t *)&qword_1EA6997A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2F9F744(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D2F9F944(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D30010A8();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x1F4188790](v11);
  unint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  int64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  unint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  id v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  unint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    uint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_1D2F1CD78((uint64_t)v10, &qword_1EBD62AA0);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1D2F9FD38(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    void *v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1D2F9FF34(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1D3001C48();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1D3001D18();
}

uint64_t sub_1D2F9FFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[2] = a2;
  v20[3] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699858);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v20[1] = v3;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1D2F09B08(0, v8, 0);
    uint64_t v9 = v21;
    uint64_t v10 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v11 = *v10;
      v20[4] = *(v10 - 1);
      v20[5] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D30010B8();
      uint64_t v12 = sub_1D3001158();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
      sub_1D2F226C4();
      uint64_t v13 = sub_1D3002358();
      uint64_t v15 = v14;
      sub_1D2F1CD78((uint64_t)v7, &qword_1EA699858);
      swift_bridgeObjectRelease();
      uint64_t v21 = v9;
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D2F09B08(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v21;
      }
      v10 += 2;
      *(void *)(v9 + 16) = v17 + 1;
      uint64_t v18 = v9 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void *_s28SiriPrivateLearningAnalytics15WakeWordTrimmerV17getTriggerPhrases6localeSaySSGSS_tFZ_0(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x53555F6E65 && a2 == 0xE500000000000000) {
    return &unk_1F2A15538;
  }
  char v5 = sub_1D3002778();
  BOOL v7 = a1 == 0x55415F6E65 && a2 == 0xE500000000000000;
  uint64_t result = &unk_1F2A15538;
  if ((v5 & 1) == 0 && !v7)
  {
    char v8 = sub_1D3002778();
    BOOL v9 = a1 == 0x41435F6E65 && a2 == 0xE500000000000000;
    BOOL v10 = v9;
    uint64_t result = &unk_1F2A15538;
    if ((v8 & 1) == 0 && !v10)
    {
      char v11 = sub_1D3002778();
      BOOL v12 = a1 == 0x42475F6E65 && a2 == 0xE500000000000000;
      BOOL v13 = v12;
      uint64_t result = &unk_1F2A15538;
      if ((v11 & 1) == 0 && !v13)
      {
        char v14 = sub_1D3002778();
        BOOL v15 = a1 == 0x45495F6E65 && a2 == 0xE500000000000000;
        BOOL v16 = v15;
        uint64_t result = &unk_1F2A15538;
        if ((v14 & 1) == 0 && !v16)
        {
          char v17 = sub_1D3002778();
          BOOL v18 = a1 == 0x4E495F6E65 && a2 == 0xE500000000000000;
          BOOL v19 = v18;
          uint64_t result = &unk_1F2A15538;
          if ((v17 & 1) == 0 && !v19)
          {
            char v20 = sub_1D3002778();
            BOOL v21 = a1 == 0x5A4E5F6E65 && a2 == 0xE500000000000000;
            BOOL v22 = v21;
            uint64_t result = &unk_1F2A15538;
            if ((v20 & 1) == 0 && !v22)
            {
              char v23 = sub_1D3002778();
              BOOL v24 = a1 == 0x47535F6E65 && a2 == 0xE500000000000000;
              BOOL v25 = v24;
              uint64_t result = &unk_1F2A15538;
              if ((v23 & 1) == 0 && !v25)
              {
                char v26 = sub_1D3002778();
                BOOL v27 = a1 == 0x415A5F6E65 && a2 == 0xE500000000000000;
                BOOL v28 = v27;
                uint64_t result = &unk_1F2A15538;
                if ((v26 & 1) == 0 && !v28)
                {
                  if (sub_1D3002778()) {
                    return &unk_1F2A15538;
                  }
                  if (qword_1EBD63A48 != -1) {
                    swift_once();
                  }
                  uint64_t v29 = sub_1D3001918();
                  __swift_project_value_buffer(v29, (uint64_t)qword_1EBD65778);
                  swift_bridgeObjectRetain_n();
                  int64_t v30 = sub_1D30018F8();
                  os_log_type_t v31 = sub_1D30020B8();
                  if (os_log_type_enabled(v30, v31))
                  {
                    uint64_t v32 = (uint8_t *)swift_slowAlloc();
                    uint64_t v33 = swift_slowAlloc();
                    uint64_t v34 = v33;
                    *(_DWORD *)uint64_t v32 = 136315138;
                    swift_bridgeObjectRetain();
                    sub_1D2F09508(a1, a2, &v34);
                    sub_1D3002318();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_1D2F05000, v30, v31, "[ASRFeatureExtractor] #getTriggerPhrase: locale %s not enabled", v32, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x1D942F2D0](v33, -1, -1);
                    MEMORY[0x1D942F2D0](v32, -1, -1);
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                  }
                  return (void *)MEMORY[0x1E4FBC860];
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t destroy for CurrentLocales()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CurrentLocales(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CurrentLocales(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

void *assignWithTake for CurrentLocales(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentLocales(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrentLocales(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WakeWordTrimmer()
{
  return &type metadata for WakeWordTrimmer;
}

uint64_t sub_1D2FA09A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2FA09F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1D2F09ECC(0, v1, 0);
  uint64_t v2 = v25;
  uint64_t result = sub_1D2FCEF90(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v5;
  uint64_t v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    int v24 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v6);
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    unint64_t v14 = *(void *)(v25 + 16);
    unint64_t v13 = *(void *)(v25 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      uint64_t result = sub_1D2F09ECC(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v25 + 16) = v14 + 1;
    uint64_t v15 = v25 + 16 * v14;
    *(_DWORD *)(v15 + 32) = v24;
    *(void *)(v15 + 40) = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v21;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v21;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D2FA0C04@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v33 = a3;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E8);
  uint64_t v32 = *(void *)(v37 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v37);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  int64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v34 = a2 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = sub_1D30010A8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v9, v21 + *(void *)(*(void *)(v22 - 8) + 72) * i, v22);
    uint64_t v23 = (uint64_t *)(*(void *)(a2 + 56) + 16 * i);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    char v26 = &v9[*(int *)(v37 + 48)];
    *(void *)char v26 = v25;
    *((void *)v26 + 1) = v24;
    sub_1D2F80C04((uint64_t)v9, (uint64_t)v7, &qword_1EA6992E8);
    swift_retain();
    swift_retain();
    char v27 = v36(v7);
    if (v3)
    {
      sub_1D2F1CD78((uint64_t)v7, &qword_1EA6992E8);
      return swift_release();
    }
    if (v27)
    {
      swift_release();
      uint64_t v28 = v33;
      sub_1D2F80C04((uint64_t)v7, v33, &qword_1EA6992E8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v37);
    }
    uint64_t result = sub_1D2F1CD78((uint64_t)v7, &qword_1EA6992E8);
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v15 >= v35) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v15);
    if (!v19) {
      break;
    }
LABEL_17:
    unint64_t v13 = (v19 - 1) & v19;
  }
  int64_t v20 = v15 + 1;
  if (v15 + 1 >= v35) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 2;
  if (v15 + 2 >= v35) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 3;
  if (v15 + 3 >= v35) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 4;
  if (v15 + 4 >= v35)
  {
LABEL_28:
    uint64_t v30 = v32;
    uint64_t v29 = v33;
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v29, 1, 1, v37);
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v35) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D2FA0F80(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1D30025A8())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D942E3A0](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      int64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D2FA10A8(uint64_t a1, uint8_t *a2)
{
  v277 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v254 = (uint64_t)&v237 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  v244 = (char *)&v237 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v273 = (char *)&v237 - v9;
  MEMORY[0x1F4188790](v8);
  v263 = (char *)&v237 - v10;
  uint64_t v269 = sub_1D30010A8();
  uint64_t v281 = *(void *)(v269 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v269);
  v243 = (char *)&v237 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v251 = (char *)&v237 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v253 = (char *)&v237 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v252 = (char *)&v237 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v237 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v237 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  v261 = (char *)&v237 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v266 = (char *)&v237 - v28;
  MEMORY[0x1F4188790](v27);
  v271 = (char *)&v237 - v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E0);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v237 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E8);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v264 = (uint64_t)&v237 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  os_log_t v260 = (os_log_t)((char *)&v237 - v38);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v259 = (uint64_t)&v237 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v250 = (uint64_t)&v237 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v248 = (char *)&v237 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v258 = (uint64_t)&v237 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v257 = (uint64_t)&v237 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  v247 = (char *)&v237 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  uint64_t v249 = (uint64_t)&v237 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  v246 = (char *)&v237 - v54;
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  v272 = (char *)&v237 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  uint64_t v59 = (char *)&v237 - v58;
  uint64_t v60 = MEMORY[0x1F4188790](v57);
  v268 = (uint64_t *)((char *)&v237 - v61);
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v270 = (uint64_t)&v237 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  uint64_t v66 = (char *)&v237 - v65;
  MEMORY[0x1F4188790](v64);
  v68 = (char *)&v237 - v67;
  swift_beginAccess();
  uint64_t v274 = a1;
  uint64_t v69 = *(void *)(a1 + 64);
  v282 = v277;
  swift_bridgeObjectRetain();
  sub_1D2FA0C04((uint64_t (*)(char *))sub_1D2FAF7FC, v69, (uint64_t)v32);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) != 1)
  {
    v241 = v24;
    v240 = v21;
    uint64_t v279 = 0;
    v245 = v59;
    uint64_t v74 = *(int *)(v33 + 48);
    uint64_t v267 = v33;
    uint64_t v75 = &v68[v74];
    uint64_t v76 = &v32[v74];
    uint64_t v77 = v281;
    uint64_t v78 = v269;
    v275 = *(void (**)(char *, char *, uint64_t))(v281 + 32);
    uint64_t v276 = v281 + 32;
    v275(v68, v32, v269);
    uint64_t v79 = *(void *)v76;
    uint64_t v80 = *((void *)v76 + 1);
    *(void *)uint64_t v75 = *(void *)v76;
    *((void *)v75 + 1) = v80;
    uint64_t v81 = qword_1EBD63A48;
    swift_retain();
    swift_retain();
    if (v81 != -1) {
      swift_once();
    }
    uint64_t v82 = sub_1D3001918();
    uint64_t v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EBD65778);
    v84 = v77 + 2;
    isa = (void (*)(char *, uint8_t *, uint64_t))v77[2].isa;
    isa(v271, v277, v78);
    uint64_t v86 = v78;
    uint64_t v87 = v77;
    uint64_t v88 = v267;
    uint64_t v89 = &v66[*(int *)(v267 + 48)];
    v278 = (void (*)(char *, uint64_t, uint64_t))isa;
    isa(v66, (uint8_t *)v68, v86);
    *(void *)uint64_t v89 = v79;
    *((void *)v89 + 1) = v80;
    sub_1D2FAF81C((uint64_t)v66, v270);
    uint64_t v90 = (uint64_t)v66;
    unint64_t v91 = (void (*)(void, void, void, void))v268;
    sub_1D2F80C04(v90, (uint64_t)v268, &qword_1EA6992E8);
    uint64_t v256 = v79;
    swift_retain();
    uint64_t v255 = v80;
    swift_retain();
    v92 = sub_1D30018F8();
    os_log_type_t v93 = sub_1D30020A8();
    int v94 = v93;
    BOOL v95 = os_log_type_enabled(v92, v93);
    os_log_t v280 = v84;
    v262 = v68;
    uint64_t v242 = v83;
    if (v95)
    {
      uint64_t v96 = swift_slowAlloc();
      uint64_t v265 = swift_slowAlloc();
      v283 = (char *)v265;
      *(_DWORD *)uint64_t v96 = 136315394;
      sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
      LODWORD(v239) = v94;
      v97 = v271;
      uint64_t v98 = v269;
      uint64_t v99 = sub_1D3002738();
      unint64_t v284 = sub_1D2F09508(v99, v100, (uint64_t *)&v283);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      os_log_t v238 = v92;
      uint64_t v101 = *(void (**)(char *, uint64_t))(v281 + 8);
      v101(v97, v98);
      *(_WORD *)(v96 + 12) = 2080;
      uint64_t v237 = v96 + 14;
      v102 = v245;
      uint64_t v103 = v270;
      v278(v245, v270, v98);
      uint64_t v104 = v266;
      v275(v266, v102, v98);
      uint64_t v105 = sub_1D3002738();
      unint64_t v107 = v106;
      v271 = (char *)v101;
      v101(v104, v98);
      unint64_t v284 = sub_1D2F09508(v105, v107, (uint64_t *)&v283);
      uint64_t v108 = v281;
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2F1CD78((uint64_t)v268, &qword_1EA6992E8);
      sub_1D2F1CD78(v103, &qword_1EA6992E8);
      os_log_t v109 = v238;
      _os_log_impl(&dword_1D2F05000, v238, (os_log_type_t)v239, "#extractTurn: Called for request %s and turn %s", (uint8_t *)v96, 0x16u);
      uint64_t v110 = v265;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v110, -1, -1);
      uint64_t v88 = v267;
      MEMORY[0x1D942F2D0](v96, -1, -1);
    }
    else
    {
      uint64_t v108 = (uint64_t)v87;
      v111 = (char *)v87[1].isa;
      v112 = v271;
      uint64_t v98 = v269;
      v271 = v111;
      ((void (*)(char *, uint64_t))v111)(v112, v269);
      sub_1D2F1CD78((uint64_t)v91, &qword_1EA6992E8);
      sub_1D2F1CD78(v270, &qword_1EA6992E8);
    }
    uint64_t v113 = v88;
    v114 = &v272[*(int *)(v88 + 48)];
    v115 = (void (*)(char *))v278;
    ((void (*)(void))v278)();
    uint64_t v116 = v256;
    uint64_t v117 = v255;
    *(void *)v114 = v256;
    *((void *)v114 + 1) = v117;
    uint64_t v239 = *(void *)(v117 + 16);
    if (v239)
    {
      uint64_t v118 = (uint64_t)v263;
      uint64_t v265 = v117 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
      v115(v263);
      v119 = *(uint64_t **)(v108 + 56);
      uint64_t v270 = v108 + 56;
      v268 = v119;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v119)(v118, 0, 1, v98);
      uint64_t v267 = *(void *)(v108 + 48);
      int v120 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v267)(v118, 1, v98);
      v121 = (void (*)(char *, uint64_t))v271;
      if (v120 != 1)
      {
        uint64_t v264 = v108 + 48;
        uint64_t v122 = v118;
        v123 = (void (*)(char *, uint64_t))v271;
        v275(v261, (char *)v122, v98);
        v124 = v272;
        v272 = (char *)(v108 + 8);
        v123(v124, v98);
        sub_1D2FAF884((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
        uint64_t v125 = v98;
        v126 = v277;
        char v127 = sub_1D3001B28();
        uint64_t v128 = *(int *)(v88 + 48);
        if (v127)
        {
          uint64_t v129 = (uint64_t)v247;
          v130 = &v247[v128];
          uint64_t v131 = (uint64_t)v262;
          ((void (*)(char *, char *, uint64_t))v115)(v247, v262, v125);
          *(void *)v130 = v116;
          *((void *)v130 + 1) = v117;
          sub_1D2FAF81C(v129, v257);
          sub_1D2F80C04(v129, v258, &qword_1EA6992E8);
          uint64_t v132 = v117;
          uint64_t v133 = (uint64_t)v248;
          v134 = &v248[*(int *)(v88 + 48)];
          v278(v248, v131, v125);
          *(void *)v134 = v116;
          *((void *)v134 + 1) = v132;
          v135 = (void (*)(char *, char *, uint64_t))v278;
          uint64_t v136 = v250;
          sub_1D2FAF81C(v133, v250);
          sub_1D2F80C04(v133, v259, &qword_1EA6992E8);
          v137 = v252;
          v135(v252, v261, v125);
          swift_retain_n();
          swift_retain_n();
          v138 = sub_1D30018F8();
          os_log_type_t v139 = sub_1D30020A8();
          int v140 = v139;
          uint64_t v141 = v125;
          if (os_log_type_enabled(v138, v139))
          {
            v142 = (void (*)(char *, uint64_t, uint64_t))v135;
            uint64_t v143 = swift_slowAlloc();
            v263 = (char *)swift_slowAlloc();
            v283 = v263;
            *(_DWORD *)uint64_t v143 = 134218498;
            uint64_t v249 = v143 + 4;
            uint64_t v144 = *(int *)(v88 + 48);
            v145 = v245;
            v146 = &v245[v144];
            LODWORD(v277) = v140;
            uint64_t v147 = v257;
            v148 = (void *)(v257 + v144);
            v142(v245, v257, v141);
            uint64_t v149 = v148[1];
            *(void *)v146 = *v148;
            *((void *)v146 + 1) = v149;
            unint64_t v150 = *(void *)(v149 + 16);
            os_log_t v260 = v138;
            ((void (*)(char *, uint64_t))v271)(v145, v141);
            sub_1D2F1CD78(v147, &qword_1EA6992E8);
            unint64_t v284 = v150;
            sub_1D3002318();
            sub_1D2F1CD78(v258, &qword_1EA6992E8);
            *(_WORD *)(v143 + 12) = 2080;
            uint64_t v258 = v143 + 14;
            v142(v145, v136, v141);
            v151 = v266;
            v275(v266, v145, v141);
            sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
            uint64_t v152 = sub_1D3002738();
            unint64_t v154 = v153;
            v155 = v151;
            v156 = (void (*)(char *, uint64_t))v271;
            ((void (*)(char *, uint64_t))v271)(v155, v141);
            unint64_t v284 = sub_1D2F09508(v152, v154, (uint64_t *)&v283);
            sub_1D3002318();
            swift_bridgeObjectRelease();
            sub_1D2F1CD78(v259, &qword_1EA6992E8);
            sub_1D2F1CD78(v136, &qword_1EA6992E8);
            *(_WORD *)(v143 + 22) = 2080;
            v157 = v252;
            uint64_t v158 = sub_1D3002738();
            unint64_t v284 = sub_1D2F09508(v158, v159, (uint64_t *)&v283);
            sub_1D3002318();
            swift_bridgeObjectRelease();
            v156(v157, v141);
            os_log_t v160 = v260;
            _os_log_impl(&dword_1D2F05000, v260, (os_log_type_t)v277, "#extractTurn: Extracting %ld requests as part of Turn %s (Primary Request: %s)", (uint8_t *)v143, 0x20u);
            v161 = v263;
            swift_arrayDestroy();
            MEMORY[0x1D942F2D0](v161, -1, -1);
            MEMORY[0x1D942F2D0](v143, -1, -1);
          }
          else
          {
            sub_1D2F1CD78(v257, &qword_1EA6992E8);
            sub_1D2F1CD78(v258, &qword_1EA6992E8);
            sub_1D2F1CD78(v259, &qword_1EA6992E8);
            sub_1D2F1CD78(v136, &qword_1EA6992E8);
            v156 = (void (*)(char *, uint64_t))v271;
            ((void (*)(char *, uint64_t))v271)(v137, v125);
          }
          uint64_t v203 = (uint64_t)v251;
          uint64_t v204 = v239;
          v283 = (char *)MEMORY[0x1E4FBC860];
          uint64_t v205 = *(void *)(v255 + 16);
          swift_retain();
          swift_retain();
          uint64_t v206 = 0;
          v207 = v273;
          uint64_t v208 = v281;
          while (v205 != v206)
          {
            v278(v207, v265 + *(void *)(v208 + 72) * v206, v141);
            ((void (*)(char *, void, uint64_t, uint64_t))v268)(v207, 0, 1, v141);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v267)(v207, 1, v141) == 1) {
              goto LABEL_33;
            }
            v275((char *)v203, v207, v141);
            uint64_t v209 = v279;
            sub_1D2FA7C60(v203, v274, &v284);
            uint64_t v279 = v209;
            if (v209)
            {
              v156((char *)v203, v141);
              swift_release();
              swift_release();
              uint64_t result = swift_bridgeObjectRelease();
              __break(1u);
              return result;
            }
            ++v206;
            v156((char *)v203, v141);
            sub_1D2F9D230(v284);
            v207 = v273;
            uint64_t v208 = v281;
            if (v204 == v206)
            {
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v268)(v273, 1, 1, v141);
LABEL_33:
              swift_release();
              swift_release();
              uint64_t v210 = (uint64_t)v283;
              v211 = v245;
              v278(v245, (uint64_t)v262, v141);
              swift_release();
              swift_release();
              uint64_t v212 = (uint64_t)v253;
              v275(v253, v211, v141);
              swift_retain();
              sub_1D2F578C8(v212, v254);
              swift_release();
              v213 = sub_1D2F70470(v212);
              if (v213)
              {
                v214 = v213;
                id v215 = objc_msgSend(v213, sel_clockIdentifier);
                if (!v215)
                {
                  uint64_t v218 = (uint64_t)v244;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v268)(v244, 1, 1, v141);
                  goto LABEL_42;
                }
                v216 = v215;
                id v217 = objc_msgSend(v215, sel_value);
                uint64_t v218 = (uint64_t)v244;
                if (v217)
                {
                  v219 = v217;
                  uint64_t v220 = sub_1D3000F68();
                  unint64_t v222 = v221;

                  sub_1D2F587AC(v220, v222, v218);
                  sub_1D2F0D1CC(v220, v222);
                }
                else
                {
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v268)(v244, 1, 1, v141);
                }
                uint64_t v227 = (uint64_t)v243;

                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v267)(v218, 1, v141) == 1)
                {
LABEL_42:

                  sub_1D2F1CD78(v218, &qword_1EBD62AA0);
                  unint64_t v225 = MEMORY[0x1E4FBC860];
                  v226 = v261;
                }
                else
                {
                  v275((char *)v227, (char *)v218, v141);
                  uint64_t v228 = v274;
                  swift_beginAccess();
                  uint64_t v229 = *(void *)(v228 + 56);
                  v226 = v261;
                  if (*(void *)(v229 + 16))
                  {
                    swift_bridgeObjectRetain();
                    unint64_t v230 = sub_1D2F0DD14(v227);
                    v231 = (void (*)(char *, uint64_t))v271;
                    if (v232)
                    {
                      unint64_t v225 = *(void *)(*(void *)(v229 + 56) + 8 * v230);
                      swift_bridgeObjectRetain();

                      swift_bridgeObjectRelease();
                    }
                    else
                    {

                      swift_bridgeObjectRelease();
                      unint64_t v225 = MEMORY[0x1E4FBC860];
                    }
                    v231(v243, v141);
                  }
                  else
                  {

                    unint64_t v225 = MEMORY[0x1E4FBC860];
                    ((void (*)(char *, uint64_t))v271)(v243, v141);
                  }
                }
              }
              else
              {
                unint64_t v225 = MEMORY[0x1E4FBC860];
                v226 = v261;
              }
              v233 = v266;
              v234 = v253;
              v278(v266, (uint64_t)v253, v141);
              unint64_t v284 = v210;
              sub_1D2F9D230(v225);
              unint64_t v235 = v284;
              v236 = (void (*)(char *, uint64_t))v271;
              ((void (*)(char *, uint64_t))v271)(v234, v141);
              v236(v226, v141);
              sub_1D2F1CD78((uint64_t)v262, &qword_1EA6992E8);
              type metadata accessor for Turn();
              uint64_t v177 = swift_allocObject();
              v275((char *)(v177 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID), v233, v141);
              *(void *)(v177 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v235;
              sub_1D2F80C04(v254, v177 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, &qword_1EBD62A80);
              return v177;
            }
          }
          __break(1u);
          goto LABEL_51;
        }
        uint64_t v179 = (uint64_t)v246;
        v180 = &v246[v128];
        uint64_t v181 = (uint64_t)v262;
        ((void (*)(char *, char *, uint64_t))v115)(v246, v262, v125);
        *(void *)v180 = v116;
        *((void *)v180 + 1) = v117;
        uint64_t v182 = v249;
        sub_1D2F80C04(v179, v249, &qword_1EA6992E8);
        v183 = v261;
        ((void (*)(char *, char *, uint64_t))v115)(v241, v261, v125);
        v184 = v240;
        ((void (*)(char *, uint8_t *, uint64_t))v115)(v240, v126, v125);
        v185 = sub_1D30018F8();
        os_log_type_t v186 = sub_1D30020A8();
        int v187 = v186;
        if (os_log_type_enabled(v185, v186))
        {
          uint64_t v188 = swift_slowAlloc();
          LODWORD(v279) = v187;
          uint64_t v189 = v188;
          uint64_t v281 = swift_slowAlloc();
          v283 = (char *)v281;
          *(_DWORD *)uint64_t v189 = 136315650;
          v277 = (uint8_t *)(v189 + 4);
          v190 = v245;
          ((void (*)(char *, uint64_t, uint64_t))v115)(v245, v182, v125);
          os_log_t v280 = v185;
          v191 = v266;
          v275(v266, v190, v125);
          sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
          uint64_t v192 = sub_1D3002738();
          unint64_t v194 = v193;
          ((void (*)(char *, uint64_t))v271)(v191, v125);
          unint64_t v284 = sub_1D2F09508(v192, v194, (uint64_t *)&v283);
          sub_1D3002318();
          swift_bridgeObjectRelease();
          sub_1D2F1CD78(v182, &qword_1EA6992E8);
          *(_WORD *)(v189 + 12) = 2080;
          v195 = v241;
          uint64_t v196 = sub_1D3002738();
          unint64_t v284 = sub_1D2F09508(v196, v197, (uint64_t *)&v283);
          sub_1D3002318();
          swift_bridgeObjectRelease();
          v198 = (void (*)(char *, uint64_t))v271;
          ((void (*)(char *, uint64_t))v271)(v195, v125);
          *(_WORD *)(v189 + 22) = 2080;
          uint64_t v199 = sub_1D3002738();
          unint64_t v284 = sub_1D2F09508(v199, v200, (uint64_t *)&v283);
          sub_1D3002318();
          swift_bridgeObjectRelease();
          v198(v184, v125);
          os_log_t v201 = v280;
          _os_log_impl(&dword_1D2F05000, v280, (os_log_type_t)v279, "#extractTurn: Turn %s (Primary Request: %s) has multiple requests. Skipping non primary request %s.", (uint8_t *)v189, 0x20u);
          uint64_t v202 = v281;
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v202, -1, -1);
          MEMORY[0x1D942F2D0](v189, -1, -1);

          v198(v261, v125);
          uint64_t v176 = (uint64_t)v262;
        }
        else
        {

          v223 = v184;
          v224 = (void (*)(char *, uint64_t))v271;
          ((void (*)(char *, uint64_t))v271)(v223, v125);
          v224(v241, v125);
          sub_1D2F1CD78(v182, &qword_1EA6992E8);
          v224(v183, v125);
          uint64_t v176 = v181;
        }
LABEL_21:
        sub_1D2F1CD78(v176, &qword_1EA6992E8);
        return 0;
      }
    }
    else
    {
      uint64_t v118 = (uint64_t)v263;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v263, 1, 1, v98);
      v121 = (void (*)(char *, uint64_t))v271;
    }
    sub_1D2F1CD78(v118, &qword_1EBD62AA0);
    uint64_t v281 = v108 + 8;
    v121(v272, v98);
    os_log_t v162 = v260;
    v163 = (Class *)((char *)&v260->isa + *(int *)(v113 + 48));
    uint64_t v164 = (uint64_t)v262;
    ((void (*)(os_log_t, char *, uint64_t))v115)(v260, v262, v98);
    void *v163 = v116;
    v163[1] = v117;
    uint64_t v165 = v264;
    sub_1D2F80C04((uint64_t)v162, v264, &qword_1EA6992E8);
    v166 = sub_1D30018F8();
    os_log_type_t v167 = sub_1D30020B8();
    if (os_log_type_enabled(v166, v167))
    {
      v168 = (uint8_t *)swift_slowAlloc();
      uint64_t v169 = swift_slowAlloc();
      v271 = (char *)v121;
      uint64_t v279 = v169;
      v283 = (char *)v169;
      *(_DWORD *)v168 = 136315138;
      v277 = v168 + 4;
      v170 = v245;
      ((void (*)(char *, uint64_t, uint64_t))v115)(v245, v165, v98);
      v171 = v266;
      v275(v266, v170, v98);
      sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
      uint64_t v172 = sub_1D3002738();
      unint64_t v174 = v173;
      ((void (*)(char *, uint64_t))v271)(v171, v98);
      unint64_t v284 = sub_1D2F09508(v172, v174, (uint64_t *)&v283);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2F1CD78(v264, &qword_1EA6992E8);
      _os_log_impl(&dword_1D2F05000, v166, v167, "#extractTurn: Turn %s has no associated request id.", v168, 0xCu);
      uint64_t v175 = v279;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v175, -1, -1);
      MEMORY[0x1D942F2D0](v168, -1, -1);
    }
    else
    {

      sub_1D2F1CD78(v165, &qword_1EA6992E8);
    }
    uint64_t v176 = v164;
    goto LABEL_21;
  }
  sub_1D2F1CD78((uint64_t)v32, &qword_1EA6992E0);
  if (qword_1EBD63A48 != -1) {
LABEL_51:
  }
    swift_once();
  uint64_t v70 = sub_1D3001918();
  __swift_project_value_buffer(v70, (uint64_t)qword_1EBD65778);
  uint64_t v71 = sub_1D30018F8();
  os_log_type_t v72 = sub_1D30020B8();
  if (os_log_type_enabled(v71, v72))
  {
    unint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v73 = 0;
    _os_log_impl(&dword_1D2F05000, v71, v72, "#extractTurn: Request does not have a UEI turn ID. Skipping", v73, 2u);
    MEMORY[0x1D942F2D0](v73, -1, -1);
  }

  return 0;
}

uint64_t InteractionReader.appInteractions(since:intentTypes:until:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1D2FA2EA4()
{
  uint64_t v0 = sub_1D3001828();
  uint64_t v1 = sub_1D3001818();
  uint64_t v5 = v0;
  uint64_t v6 = MEMORY[0x1E4FA3D80];
  *(void *)&long long v4 = v1;
  type metadata accessor for FlatFileSignalReader();
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_1D2F0BE68(&v4, v2 + 16);
  qword_1EBD63008 = v2;
  return result;
}

uint64_t static FlatFileSignalReader.shared.getter()
{
  if (qword_1EBD63010 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t FlatFileSignalReader.__allocating_init(path:)(uint64_t a1)
{
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  uint64_t v5 = sub_1D3001828();
  swift_allocObject();
  uint64_t v6 = sub_1D3001808();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  uint64_t v11 = v5;
  uint64_t v12 = MEMORY[0x1E4FA3D80];
  *(void *)&long long v10 = v6;
  type metadata accessor for FlatFileSignalReader();
  uint64_t v7 = swift_allocObject();
  sub_1D2F0BE68(&v10, v7 + 16);
  return v7;
}

uint64_t type metadata accessor for FlatFileSignalReader()
{
  return self;
}

uint64_t sub_1D2FA30D8()
{
  sub_1D2FA317C();
  sub_1D3002538();
  sub_1D3002608();
  uint64_t v0 = v2;
  if (v2)
  {
    while ((sub_1D3001058() & 1) == 0)
    {
      swift_release();
      sub_1D3002608();
      uint64_t v0 = v2;
    }
  }
  swift_release();
  swift_release();
  return v0;
}

void *sub_1D2FA317C()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  unint64_t v1 = sub_1D30017F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699878);
  uint64_t v2 = (void *)swift_allocObject();
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = sub_1D2F1D154((unint64_t *)&qword_1EBD61550, (uint64_t *)&unk_1EBD61560);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  v2[2] = v3;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v5;
  uint64_t v7 = sub_1D2FADFA0();
  swift_release();
  return v7;
}

uint64_t sub_1D2FA32AC()
{
  sub_1D2FA317C();
  uint64_t v0 = sub_1D2F7A12C();
  swift_release();
  return v0;
}

uint64_t FlatFileSignalReader.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t FlatFileSignalReader.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FA333C()
{
  return sub_1D2FA30D8();
}

void *sub_1D2FA3360()
{
  return sub_1D2FA317C();
}

uint64_t sub_1D2FA3384()
{
  sub_1D2FA317C();
  uint64_t v0 = sub_1D2F7A12C();
  swift_release();
  return v0;
}

void *FlatFileSignalReader.turns()@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1D2FA317C();
  *a1 = sub_1D2FAE90C;
  a1[1] = result;
  return result;
}

uint64_t FlatFileSignalReader.conversations()@<X0>(void *a1@<X8>)
{
  sub_1D2FA317C();
  uint64_t v2 = sub_1D2F7A12C();
  uint64_t result = swift_release();
  *a1 = sub_1D2FAE934;
  a1[1] = v2;
  return result;
}

void *sub_1D2FA344C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1D2FA317C();
  *a1 = sub_1D2FAFA74;
  a1[1] = result;
  return result;
}

uint64_t sub_1D2FA3488@<X0>(void *a1@<X8>)
{
  sub_1D2FA317C();
  uint64_t v2 = sub_1D2F7A12C();
  uint64_t result = swift_release();
  *a1 = sub_1D2FAFA70;
  a1[1] = v2;
  return result;
}

uint64_t sub_1D2FA34E0()
{
  if (qword_1EBD63018 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBD65750;
  uint64_t v11 = type metadata accessor for BiomePLSELFStoreReader();
  uint64_t v12 = &off_1F2A1BA88;
  v10[0] = v0;
  type metadata accessor for BiomeSignalReader();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (void *)((char *)&v10[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v5 + 16))(v4);
  uint64_t v6 = *v4;
  swift_retain_n();
  uint64_t v7 = sub_1D2FAA23C(v6, v1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  uint64_t result = swift_release();
  qword_1EBD65748 = v7;
  return result;
}

uint64_t sub_1D2FA3650(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v4 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    uint64_t v7 = *(void *)a1;
    uint64_t v8 = v3;
    char v9 = 1;
    swift_bridgeObjectRetain();
    a2(&v7);
    return sub_1D2FAEEB0(v4, v3, 1);
  }
  else
  {
    swift_retain();
    sub_1D3002538();
    sub_1D3002608();
    uint64_t v6 = v7;
    if (v7)
    {
      while ((sub_1D3001058() & 1) == 0)
      {
        swift_release();
        sub_1D3002608();
        uint64_t v6 = v7;
      }
    }
    swift_release();
    uint64_t v7 = v6;
    uint64_t v8 = 0;
    char v9 = 0;
    a2(&v7);
    sub_1D2FAEEB0(v4, v3, 0);
    return swift_release();
  }
}

uint64_t sub_1D2FA376C(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1D2FADFA0();
  if (qword_1EA698090 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1D3001918();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EA699860);
  swift_retain();
  char v9 = sub_1D30018F8();
  os_log_type_t v10 = sub_1D30020A8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134217984;
    v13[0] = sub_1D3002588();
    sub_1D3002318();
    swift_release();
    _os_log_impl(&dword_1D2F05000, v9, v10, "Extracted %ld turn(s) from Biome", v11, 0xCu);
    MEMORY[0x1D942F2D0](v11, -1, -1);
  }
  else
  {

    swift_release();
  }
  v13[0] = v7;
  v13[1] = 0;
  char v14 = 0;
  swift_retain();
  a2(v13);
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1D2FA545C(a5);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1D2FA3958(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = a2;
  uint64_t v48 = a1;
  uint64_t v44 = sub_1D30019A8();
  uint64_t v47 = *(void **)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v41 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001A08();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D30010A8();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v9 = v49;
  uint64_t v10 = *(void *)(v49 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v14 = (char *)v39 - v13;
  uint64_t v52 = (char *)v39 - v13;
  sub_1D3001098();
  v39[1] = *(void *)(v2 + 56);
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v55 = v9 + 16;
  uint64_t v40 = v8;
  v54(v12, v14, v8);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v53 = v15 | 7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v3;
  uint64_t v42 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  uint64_t v43 = v9 + 32;
  v42(v16 + ((v15 + 24) & ~v15), v12, v8);
  aBlock[4] = sub_1D2FAF20C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_80;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1D30019D8();
  uint64_t v56 = MEMORY[0x1E4FBC860];
  sub_1D2FAF884(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F1D154((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  uint64_t v18 = v41;
  uint64_t v19 = v44;
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v7, v18, v17);
  _Block_release(v17);
  ((void (*)(char *, uint64_t))v47[1])(v18, v19);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v46);
  swift_release();
  uint64_t v20 = *(void *)(v3 + 40);
  uint64_t v51 = v3;
  uint64_t v47 = __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), v20);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = (uint64_t)v52;
  uint64_t v23 = v40;
  v54(v12, v52, v40);
  uint64_t v24 = (v15 + 40) & ~v15;
  uint64_t v46 = v24 + v10;
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = v48;
  uint64_t v27 = v50;
  v25[2] = v48;
  v25[3] = v27;
  v25[4] = v21;
  uint64_t v28 = v23;
  uint64_t v29 = v23;
  uint64_t v30 = (void (*)(char *, char *, uint64_t))v42;
  v42((uint64_t)v25 + v24, v12, v28);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = v22;
  uint64_t v33 = v29;
  v54(v12, (char *)v32, v29);
  uint64_t v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = v26;
  *((void *)v34 + 3) = v27;
  *((void *)v34 + 4) = v31;
  v30(&v34[v24], v12, v33);
  swift_retain_n();
  swift_retain();
  uint64_t v35 = (void *)sub_1D2FCE908((uint64_t)sub_1D2FAF2A4, (uint64_t)v25, (uint64_t)sub_1D2FAF758, (uint64_t)v34);
  swift_release();
  swift_release();
  swift_release();
  id v36 = v35;
  uint64_t v37 = (uint64_t)v52;
  sub_1D2FAA4E8((uint64_t)v52, (uint64_t)v36, v51);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v37, v33);
}

uint64_t sub_1D2FA3F1C(void *a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = off_1E6970000;
  if (objc_msgSend(a1, sel_state))
  {
    if (qword_1EA698090 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1D3001918();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EA699860);
    id v10 = a1;
    uint64_t v11 = sub_1D30018F8();
    os_log_type_t v12 = sub_1D30020B8();
    uint64_t v13 = off_1E6970000;
    if (os_log_type_enabled(v11, v12))
    {
      char v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v22[0] = v15;
      *(_DWORD *)char v14 = 136315138;
      id v16 = objc_msgSend(v10, sel_error);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
      uint64_t v17 = sub_1D3001BC8();
      sub_1D2F09508(v17, v18, v22);
      sub_1D3002318();

      uint64_t v8 = off_1E6970000;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v11, v12, "Failed to extract turns from SiriPrivateLearningSELFEvent stream, error=%s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v15, -1, -1);
      uint64_t v19 = v14;
      uint64_t v13 = off_1E6970000;
      MEMORY[0x1D942F2D0](v19, -1, -1);
    }
    else
    {
    }
    v22[0] = (uint64_t)[v10 (SEL)v13[292]];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
    v22[0] = sub_1D3001BC8();
    v22[1] = v20;
    char v23 = 1;
    a2(v22);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D2FA5C14(a5, [a1 (SEL)v8[291]] == 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2FA41D0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v70 = a5;
  uint64_t v69 = a4;
  uint64_t v68 = a3;
  uint64_t v67 = a2;
  uint64_t v83 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61100);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v74 = v7;
  uint64_t v75 = v8;
  MEMORY[0x1F4188790](v7);
  unint64_t v73 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699888);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v76 = v10;
  uint64_t v77 = v11;
  MEMORY[0x1F4188790](v10);
  os_log_type_t v72 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1D30019A8();
  uint64_t v66 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  char v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1D3001A08();
  uint64_t v63 = *(void **)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  id v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D30010A8();
  uint64_t v71 = *(void *)(v17 - 8);
  uint64_t v18 = v71;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = v20;
  MEMORY[0x1F4188790](v19);
  char v23 = (char *)&v58 - v22;
  uint64_t v79 = (uint64_t)&v58 - v22;
  sub_1D3001098();
  uint64_t v58 = *(void *)(v5 + 56);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v61 = v18 + 16;
  uint64_t v78 = v24;
  v24(v21, (uint64_t)v23, v17);
  uint64_t v59 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v25 = (v59 + 24) & ~v59;
  uint64_t v81 = v59 | 7;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v6;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v60 = v18 + 32;
  uint64_t v82 = v27;
  v27((char *)(v26 + v25), v21, v17);
  aBlock[4] = sub_1D2FAF20C;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_55;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  sub_1D30019D8();
  uint64_t v84 = MEMORY[0x1E4FBC860];
  sub_1D2FAF884(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F1D154((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  uint64_t v29 = v62;
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v16, v14, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v29);
  ((void (*)(char *, uint64_t))v63[1])(v16, v64);
  swift_release();
  uint64_t v63 = __swift_project_boxed_opaque_existential_1((void *)(v6 + 16), *(void *)(v6 + 40));
  uint64_t v66 = *(void *)&v83[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark];
  uint64_t v30 = swift_allocObject();
  uint64_t v65 = v6;
  swift_weakInit();
  uint64_t v31 = v79;
  uint64_t v32 = v17;
  v78(v21, v79, v17);
  uint64_t v33 = v59;
  uint64_t v34 = (char *)swift_allocObject();
  uint64_t v64 = (uint64_t)v34;
  uint64_t v35 = v67;
  uint64_t v36 = v68;
  *((void *)v34 + 2) = v67;
  *((void *)v34 + 3) = v36;
  *((void *)v34 + 4) = v30;
  uint64_t v37 = v32;
  v82(&v34[(v33 + 40) & ~v33], v21, v32);
  uint64_t v38 = swift_allocObject();
  swift_weakInit();
  uint64_t v39 = v31;
  uint64_t v40 = v37;
  v78(v21, v39, v37);
  uint64_t v41 = (v33 + 64) & ~v33;
  uint64_t v42 = (void *)swift_allocObject();
  v42[2] = v35;
  v42[3] = v36;
  uint64_t v43 = v70;
  v42[4] = v69;
  v42[5] = v43;
  uint64_t v44 = (char *)v42 + v41;
  uint64_t v45 = v82;
  uint64_t v46 = v83;
  v42[6] = v83;
  v42[7] = v38;
  v45(v44, v21, v40);
  swift_retain_n();
  swift_retain();
  id v47 = v46;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AD0);
  sub_1D2F1D154(&qword_1EA699890, &qword_1EBD62AD0);
  uint64_t v48 = v73;
  sub_1D3001228();
  sub_1D2F1D154(&qword_1EA699898, &qword_1EBD61100);
  uint64_t v49 = v72;
  uint64_t v50 = v74;
  sub_1D30011A8();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v48, v50);
  uint64_t v51 = swift_allocObject();
  uint64_t v52 = v64;
  *(void *)(v51 + 16) = sub_1D2FAF2A4;
  *(void *)(v51 + 24) = v52;
  sub_1D2F1D154(&qword_1EA6998A0, &qword_1EA699888);
  swift_retain();
  uint64_t v53 = v76;
  uint64_t v54 = (void *)sub_1D30011B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v53);
  swift_release();
  swift_release();
  swift_release();
  id v55 = v54;
  uint64_t v56 = v79;
  sub_1D2FAA4E8(v79, (uint64_t)v55, v65);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v56, v40);
}

uint64_t sub_1D2FA4ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0x8000000000000000;
  sub_1D2FE6188(0, 0, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_endAccess();
}

uint64_t sub_1D2FA4C04(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = off_1E6970000;
  if (objc_msgSend(a1, sel_state))
  {
    uint64_t v38 = a5;
    if (qword_1EA698090 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D3001918();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EA699860);
    id v17 = a1;
    uint64_t v18 = sub_1D30018F8();
    os_log_type_t v19 = sub_1D30020B8();
    uint64_t v20 = off_1E6970000;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v36 = a4;
      uint64_t v37 = a3;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v41[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      id v23 = objc_msgSend(v17, sel_error);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
      uint64_t v24 = sub_1D3001BC8();
      uint64_t v40 = sub_1D2F09508(v24, v25, v41);
      uint64_t v15 = off_1E6970000;
      sub_1D3002318();

      uint64_t v20 = off_1E6970000;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v18, v19, "Failed to extract turns from SiriPrivateLearningSELFEvent stream, error=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v22, -1, -1);
      uint64_t v26 = v21;
      a3 = v37;
      MEMORY[0x1D942F2D0](v26, -1, -1);
    }
    else
    {
    }
    v41[0] = (uint64_t)objc_msgSend(v17, (SEL)v20[292], v36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
    v41[0] = sub_1D3001BC8();
    v41[1] = v34;
    char v42 = 1;
    a3(v41);
    swift_bridgeObjectRelease();
    ((void (*)(void))v38)(0);
  }
  else
  {
    uint64_t v28 = *(void *)(a7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name);
    uint64_t v27 = *(void *)(a7 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8);
    uint64_t v29 = (objc_class *)type metadata accessor for StreamBookmark();
    uint64_t v30 = (char *)objc_allocWithZone(v29);
    uint64_t v31 = &v30[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
    *(void *)uint64_t v31 = v28;
    *((void *)v31 + 1) = v27;
    *(void *)&v30[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_bookmark] = a2;
    uint64_t v32 = &v30[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_timeIntervalSinceReferenceDate];
    *(void *)uint64_t v32 = 0;
    v32[8] = 1;
    v39.receiver = v30;
    v39.super_class = v29;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v33 = objc_msgSendSuper2(&v39, sel_init);
    a5();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D2FA5C14(a9, [a1 (SEL)v15[291]] == 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2FA4F6C(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v4 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    uint64_t v6 = *(void *)a1;
    uint64_t v7 = v3;
    char v8 = 1;
    swift_bridgeObjectRetain();
    a2(&v6);
    return sub_1D2FAEEB0(v4, v3, 1);
  }
  else
  {
    sub_1D2FAEEA0(*(void *)a1, v3, 0);
    uint64_t v6 = sub_1D2F7A12C();
    uint64_t v7 = 0;
    char v8 = 0;
    a2(&v6);
    sub_1D2FAEEB0(v4, v3, 0);
    return swift_release();
  }
}

void sub_1D2FA5030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v40[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v40[-1] - v11;
  uint64_t v13 = (uint64_t *)(a1 + 64);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 64);
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1D2F0DD14(a2);
    if (v16)
    {
      id v17 = (unsigned __int8 *)(*(void *)(v14 + 56) + 16 * v15);
      int v18 = v17[1];
      int v19 = v17[2];
      int v20 = v17[3];
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
      swift_beginAccess();
      swift_unknownObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v41 = *v13;
      *uint64_t v13 = 0x8000000000000000;
      if (v18) {
        int v22 = 257;
      }
      else {
        int v22 = 1;
      }
      if (v19) {
        int v23 = 0x10000;
      }
      else {
        int v23 = 0;
      }
      int v24 = v23 | v22;
      if (v20) {
        int v25 = 0x1000000;
      }
      else {
        int v25 = 0;
      }
      sub_1D2FE6188(v24 | v25, a3, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
      *uint64_t v13 = v41;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_endAccess();
      if (v19)
      {
        swift_beginAccess();
        uint64_t v26 = sub_1D2FDAD74(a2);
        uint64_t v28 = v27;
        swift_endAccess();
        sub_1D2FAF18C(v26, v28);
      }
      if (v20)
      {
        if (v18)
        {
          swift_beginAccess();
          uint64_t v29 = sub_1D2FDAD74(a2);
          uint64_t v31 = v30;
          swift_endAccess();
          sub_1D2FAF18C(v29, v31);
        }
      }
      swift_unknownObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EA698090 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1D3001918();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EA699860);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
  id v33 = sub_1D30018F8();
  os_log_type_t v34 = sub_1D30020B8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v40[0] = v36;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v37 = sub_1D3001038();
    uint64_t v41 = sub_1D2F09508(v37, v38, v40);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl(&dword_1D2F05000, v33, v34, "Attempting to mark non-existing subscription for key=%s as started", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v36, -1, -1);
    MEMORY[0x1D942F2D0](v35, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_1D2FA545C(uint64_t a1)
{
  uint64_t v3 = sub_1D30019A8();
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D3001A08();
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D30010A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  v16[1] = *(void *)(v1 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1D2FAF1A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_49_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1D30019D8();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1D2FAF884(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F1D154((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  return swift_release();
}

void sub_1D2FA57E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v37[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v37[-1] - v9;
  uint64_t v11 = (uint64_t *)(a1 + 64);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 64);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1D2F0DD14(a2);
    if (v14)
    {
      unint64_t v15 = (unsigned __int8 *)(*(void *)(v12 + 56) + 16 * v13);
      int v16 = *v15;
      int v17 = v15[2];
      int v18 = v15[3];
      uint64_t v19 = *((void *)v15 + 1);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
      swift_beginAccess();
      swift_unknownObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = *v11;
      uint64_t *v11 = 0x8000000000000000;
      if (v17) {
        int v21 = 0x10000;
      }
      else {
        int v21 = 0;
      }
      if (v18) {
        int v22 = 0x1000000;
      }
      else {
        int v22 = 0;
      }
      sub_1D2FE6188(v21 | v16 | v22 | 0x100, v19, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
      uint64_t *v11 = v38;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      swift_endAccess();
      if (v17 && v16)
      {
        swift_beginAccess();
        uint64_t v23 = sub_1D2FDAD74(a2);
        uint64_t v25 = v24;
        swift_endAccess();
        sub_1D2FAF18C(v23, v25);
      }
      if (v18)
      {
        if (v16)
        {
          swift_beginAccess();
          uint64_t v26 = sub_1D2FDAD74(a2);
          uint64_t v28 = v27;
          swift_endAccess();
          sub_1D2FAF18C(v26, v28);
        }
      }
      swift_unknownObjectRelease_n();
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EA698090 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1D3001918();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EA699860);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
  uint64_t v30 = sub_1D30018F8();
  os_log_type_t v31 = sub_1D30020B8();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v37[0] = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v34 = sub_1D3001038();
    uint64_t v38 = sub_1D2F09508(v34, v35, v37);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl(&dword_1D2F05000, v30, v31, "Attempting to mark non-existing subscription for key=%s as received", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v33, -1, -1);
    MEMORY[0x1D942F2D0](v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_1D2FA5C14(uint64_t a1, int a2)
{
  int v18 = a2;
  uint64_t v4 = sub_1D30019A8();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1D3001A08();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1D30010A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v19 = *(void *)(v2 + 56);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(&v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v2;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v11 + 32))(v14 + v13, &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], v10);
  *(unsigned char *)(v14 + v13 + v12) = v18;
  aBlock[4] = sub_1D2FAF0EC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_9;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1D30019D8();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1D2FAF884(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F1D154((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v9, v21);
  return swift_release();
}

void sub_1D2FA5FA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v36[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v36[-1] - v11;
  unint64_t v13 = (uint64_t *)(a1 + 64);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 64);
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1D2F0DD14(a2);
    if (v16)
    {
      int v17 = (unsigned __int8 *)(*(void *)(v14 + 56) + 16 * v15);
      int v18 = *v17;
      int v19 = v17[1];
      uint64_t v20 = *((void *)v17 + 1);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
      swift_beginAccess();
      swift_unknownObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v37 = *v13;
      *unint64_t v13 = 0x8000000000000000;
      if (v19) {
        int v22 = 256;
      }
      else {
        int v22 = 0;
      }
      int v23 = a3 & 1;
      if (v23) {
        int v24 = 0x1000000;
      }
      else {
        int v24 = 0x10000;
      }
      sub_1D2FE6188(v24 | v18 | v22, v20, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
      *unint64_t v13 = v37;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_endAccess();
      if (v23)
      {
        if (!v19 || (v18 & 1) == 0) {
          goto LABEL_22;
        }
      }
      else if (!v18)
      {
LABEL_22:
        swift_unknownObjectRelease_n();
        return;
      }
      swift_beginAccess();
      uint64_t v32 = sub_1D2FDAD74(a2);
      uint64_t v34 = v33;
      swift_endAccess();
      sub_1D2FAF18C(v32, v34);
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EA698090 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1D3001918();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EA699860);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a2, v6);
  uint64_t v26 = sub_1D30018F8();
  os_log_type_t v27 = sub_1D30020B8();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v36[0] = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v30 = sub_1D3001038();
    uint64_t v37 = sub_1D2F09508(v30, v31, v36);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl(&dword_1D2F05000, v26, v27, "Attempting to mark non-existing subscription for key=%s as completed", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v29, -1, -1);
    MEMORY[0x1D942F2D0](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_1D2FA63A4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FA63EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  sub_1D2FA3958((uint64_t)sub_1D2FAEFA8, v10);
  return swift_release();
}

uint64_t sub_1D2FA6544(uint64_t a1, uint64_t a2)
{
  return sub_1D2FA3958(a1, a2);
}

uint64_t sub_1D2FA6568(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D2FA41D0(a1, a2, a3, a4, a5);
}

uint64_t sub_1D2FA658C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_1D2FA3958((uint64_t)sub_1D2FAEEC0, v4);
  return swift_release();
}

uint64_t sub_1D2FA6610(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  swift_retain();
  sub_1D2FA41D0(a1, (uint64_t)sub_1D2FAFAA4, v10, a4, a5);
  return swift_release();
}

uint64_t sub_1D2FA66BC()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EA699860);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA699860);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1D2FA6784()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (void *)sub_1D2F585CC();
  if (!v3)
  {
    uint64_t v11 = sub_1D30010A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
LABEL_8:
    uint64_t v14 = 0;
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(v3, sel_eventMetadata);
  if (v5 && (uint64_t v6 = v5, v7 = objc_msgSend(v5, sel_turnID), v6, v7))
  {
    uint64_t v8 = sub_1D3000F68();
    unint64_t v10 = v9;

    sub_1D2F587AC(v8, v10, (uint64_t)v2);
    sub_1D2F0D1CC(v8, v10);
  }
  else
  {
    uint64_t v12 = sub_1D30010A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  }

  uint64_t v13 = sub_1D30010A8();
  uint64_t v14 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v2, 1, v13) == 1) {
    goto LABEL_8;
  }
LABEL_9:
  sub_1D2F1CD78((uint64_t)v2, &qword_1EBD62AA0);
  return v14;
}

uint64_t sub_1D2FA696C(void **a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D30010A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)v48 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v52 = (char *)v48 - v17;
  int v18 = *a1;
  int v19 = (void *)sub_1D2F585CC();
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return sub_1D2F1CD78((uint64_t)v8, &qword_1EBD62AA0);
  }
  uint64_t v20 = v19;
  uint64_t v50 = v13;
  uint64_t v51 = a2;
  id v21 = objc_msgSend(v19, sel_eventMetadata);
  if (v21
    && (int v22 = v21, v23 = objc_msgSend(v21, sel_turnID), v22, v23))
  {
    uint64_t v24 = sub_1D3000F68();
    uint64_t v49 = v16;
    unint64_t v26 = v25;

    sub_1D2F587AC(v24, v26, (uint64_t)v8);
    unint64_t v27 = v26;
    uint64_t v3 = v2;
    uint64_t v16 = v49;
    sub_1D2F0D1CC(v24, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1D2F1CD78((uint64_t)v8, &qword_1EBD62AA0);
  }
  uint64_t v49 = v3;
  uint64_t v28 = v52;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v52, v8, v9);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v29(v16, v28, v9);
  v48[1] = v18;
  uint64_t v30 = v51;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = *v30;
  uint64_t v32 = v53;
  *uint64_t v30 = 0x8000000000000000;
  unint64_t v34 = sub_1D2F0DD14((uint64_t)v16);
  uint64_t v35 = *(void *)(v32 + 16);
  BOOL v36 = (v33 & 1) == 0;
  uint64_t v37 = v35 + v36;
  if (__OFADD__(v35, v36))
  {
    __break(1u);
LABEL_20:
    sub_1D3001E28();
LABEL_18:
    sub_1D3001E68();
    sub_1D3001DE8();
    id v47 = *(void (**)(char *, uint64_t))(v10 + 8);
    v47(v16, v9);
    return ((uint64_t (*)(char *, uint64_t))v47)(v52, v9);
  }
  char v38 = v33;
  if (*(void *)(v32 + 24) >= v37)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D2F13A70();
      uint64_t v32 = v53;
    }
LABEL_15:
    char v42 = v51;
    uint64_t *v51 = v32;
    swift_bridgeObjectRelease();
    uint64_t v43 = (void *)*v42;
    swift_bridgeObjectRetain();
    if ((v38 & 1) == 0)
    {
      uint64_t v44 = (uint64_t)v50;
      v29(v50, v16, v9);
      sub_1D2FE6B1C(v34, v44, MEMORY[0x1E4FBC860], v43);
    }
    uint64_t v45 = v43[7];
    uint64_t v46 = swift_bridgeObjectRelease();
    MEMORY[0x1D942DCC0](v46);
    if (*(void *)((*(void *)(v45 + 8 * v34) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)(v45 + 8 * v34) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      goto LABEL_18;
    goto LABEL_20;
  }
  sub_1D2F0FC7C(v37, isUniquelyReferenced_nonNull_native);
  uint64_t v32 = v53;
  unint64_t v39 = sub_1D2F0DD14((uint64_t)v16);
  if ((v38 & 1) == (v40 & 1))
  {
    unint64_t v34 = v39;
    goto LABEL_15;
  }
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

uint64_t sub_1D2FA6DA4(unint64_t *a1)
{
  unint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_1D2FA8668(v2);
    unint64_t v2 = v4;
    *a1 = v4;
  }
  uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v7[1] = v5;
  sub_1D2FA86E4(v7);
  return sub_1D3001DE8();
}

uint64_t sub_1D2FA6E2C@<X0>(unint64_t a1@<X0>, __CFString **a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (uint64_t)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (__CFString **)sub_1D30010A8();
  uint64_t v10 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString **))*(v9 - 1);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v98 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v90 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v101 = (__CFString **)((char *)&v90 - v16);
  if (!(a1 >> 62))
  {
    uint64_t v17 = *(__CFString ***)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_3;
    }
LABEL_56:
    swift_bridgeObjectRelease();
    v10[7](v8, 1, 1, v9);
LABEL_57:
    sub_1D2F1CD78(v8, &qword_1EBD62AA0);
    if (qword_1EA698090 != -1) {
      swift_once();
    }
    uint64_t v86 = sub_1D3001918();
    __swift_project_value_buffer(v86, (uint64_t)qword_1EA699860);
    uint64_t v87 = sub_1D30018F8();
    os_log_type_t v88 = sub_1D30020A8();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v89 = 0;
      _os_log_impl(&dword_1D2F05000, v87, v88, "Cannot retrieve timestamp, unable to extract turn ID", v89, 2u);
      MEMORY[0x1D942F2D0](v89, -1, -1);
    }

    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
    unint64_t v73 = *(uint64_t (**)(__CFString **, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56);
    uint64_t v74 = a2;
    return v73(v74, 1, 1, v72);
  }
LABEL_55:
  swift_bridgeObjectRetain();
  uint64_t v17 = (__CFString **)sub_1D30025A8();
  if (!v17) {
    goto LABEL_56;
  }
LABEL_3:
  unint64_t v99 = a1 & 0xC000000000000001;
  BOOL v95 = v15;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v18 = (id)MEMORY[0x1D942E3A0](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_65:
      swift_once();
      goto LABEL_44;
    }
    id v18 = *(id *)(a1 + 32);
  }
  int v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1D2F585CC();
  unint64_t v100 = v17;
  if (v20)
  {
    id v21 = v20;
    id v22 = objc_msgSend(v20, sel_eventMetadata);
    if (v22
      && (unint64_t v2 = v22, v23 = objc_msgSend(v22, sel_turnID), v2, v23))
    {
      unint64_t v2 = (void *)sub_1D3000F68();
      unint64_t v25 = v24;

      sub_1D2F587AC((uint64_t)v2, v25, v8);
      unint64_t v26 = v25;
      uint64_t v17 = v100;
      sub_1D2F0D1CC((uint64_t)v2, v26);
    }
    else
    {
      v10[7](v8, 1, 1, v9);
    }

    int v19 = v21;
  }
  else
  {
    v10[7](v8, 1, 1, v9);
  }

  if (((unsigned int (*)(uint64_t, uint64_t, __CFString **))v10[6])(v8, 1, v9) == 1) {
    goto LABEL_57;
  }
  uint64_t v96 = a2;
  os_log_type_t v93 = v10;
  int v94 = v9;
  unint64_t v91 = v10[4];
  v92 = (char *)(v10 + 4);
  ((void (*)(__CFString **, uint64_t, __CFString **))v91)(v101, v8, v9);
  swift_bridgeObjectRetain();
  uint64_t v8 = 4;
  uint64_t v3 = off_1E6970000;
  uint64_t v9 = off_1E6970000;
  uint64_t v15 = (char *)v99;
  v97 = (id *)a1;
  while (1)
  {
    if (v15) {
      unint64_t v27 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString **))MEMORY[0x1D942E3A0](v8 - 4, a1);
    }
    else {
      unint64_t v27 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString **))*(id *)(a1 + 8 * v8);
    }
    uint64_t v10 = v27;
    a2 = (__CFString **)(v8 - 3);
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if ([v27 (SEL)v3[254]] == 6)
    {
      id v28 = objc_msgSend(v10, sel_payload);
      if (v28)
      {
        uint64_t v29 = sub_1D3000F68();
        unint64_t v31 = v30;

        id v28 = (id)sub_1D3000F58();
        unint64_t v32 = v31;
        uint64_t v3 = off_1E6970000;
        sub_1D2F0D1CC(v29, v32);
      }
      id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v28);

      unint64_t v34 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString **))objc_msgSend(v33, sel_event);
      if (!v34) {
        goto LABEL_28;
      }
    }
    else
    {
      unint64_t v34 = v10;
    }
    uint64_t v35 = sub_1D2F0BCB8(0, (unint64_t *)&qword_1EA699770);
    [v34 (SEL)v3[254]];
    uint64_t v36 = sub_1D30021F8();
    if (!v36 || v35 != v36) {
      goto LABEL_27;
    }
    id v38 = objc_msgSend(v34, sel_payload);
    if (v38)
    {
      unint64_t v39 = v38;
      char v40 = v9;
      uint64_t v41 = sub_1D3000F68();
      unint64_t v43 = v42;

      id v44 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v45 = (void *)sub_1D3000F58();
      uint64_t v46 = v41;
      uint64_t v9 = v40;
      a1 = (unint64_t)v97;
      unint64_t v47 = v43;
      uint64_t v15 = (char *)v99;
      sub_1D2F0D1CC(v46, v47);
    }
    else
    {
      id v44 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      uint64_t v45 = 0;
    }
    uint64_t v48 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString **))objc_msgSend(v44, sel_initWithData_, v45);

    if (!v48)
    {
      uint64_t v17 = v100;
      uint64_t v3 = off_1E6970000;
LABEL_27:

LABEL_28:
      unint64_t v2 = 0;
      goto LABEL_29;
    }
    self;
    unint64_t v2 = (void *)swift_dynamicCastObjCClass();

    unint64_t v34 = v48;
    uint64_t v17 = v100;
    uint64_t v3 = off_1E6970000;
    if (!v2) {
      goto LABEL_27;
    }
LABEL_29:
    id v37 = [v2 (SEL)v9[285]];

    if (v37) {
      break;
    }

    ++v8;
    if (a2 == v17)
    {
      swift_bridgeObjectRelease();
      a1 = 0;
      uint64_t v3 = v96;
      uint64_t v10 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString **))v94;
      uint64_t v9 = v101;
      unint64_t v2 = v98;
      goto LABEL_43;
    }
  }
  swift_bridgeObjectRelease();
  a1 = v10;
  uint64_t v49 = (void *)sub_1D2F585CC();
  unint64_t v2 = v98;
  if (v49)
  {
    uint64_t v50 = v49;
    id v51 = [v49 (SEL)v9[285]];
    uint64_t v52 = v96;
    uint64_t v53 = v94;
    uint64_t v54 = v101;
    if (v51)
    {
      id v55 = v51;
      objc_msgSend(v51, sel_timeIntervalSince1970);
      uint64_t v57 = v56;

      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
      uint64_t v59 = *(int *)(v58 + 48);
      ((void (*)(__CFString **, __CFString **, __CFString **))v91)(v52, v54, v53);
      *(__CFString **)((char *)v52 + v59) = v57;
      return (*(uint64_t (**)(__CFString **, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v52, 0, 1, v58);
    }
    if (qword_1EA698090 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_1D3001918();
    __swift_project_value_buffer(v75, (uint64_t)qword_1EA699860);
    uint64_t v76 = v93;
    uint64_t v77 = v95;
    ((void (*)(char *, __CFString **, __CFString **))v93[2])(v95, v54, v53);
    uint64_t v78 = sub_1D30018F8();
    os_log_type_t v79 = sub_1D30020A8();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v103 = v81;
      *(_DWORD *)uint64_t v80 = 136315138;
      unint64_t v100 = (__CFString **)(v80 + 4);
      sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
      uint64_t v82 = sub_1D3002738();
      uint64_t v102 = sub_1D2F09508(v82, v83, &v103);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      uint64_t v84 = v93[1];
      ((void (*)(char *, __CFString **))v84)(v77, v53);
      _os_log_impl(&dword_1D2F05000, v78, v79, "Cannot retrieve timestamp for the turn %s, unable to extract timestamp", v80, 0xCu);
      swift_arrayDestroy();
      uint64_t v52 = v96;
      MEMORY[0x1D942F2D0](v81, -1, -1);
      MEMORY[0x1D942F2D0](v80, -1, -1);

      ((void (*)(__CFString **, __CFString **))v84)(v101, v53);
    }
    else
    {

      os_log_type_t v85 = v76[1];
      ((void (*)(char *, __CFString **))v85)(v77, v53);

      ((void (*)(__CFString **, __CFString **))v85)(v54, v53);
    }
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
    unint64_t v73 = *(uint64_t (**)(__CFString **, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56);
    uint64_t v74 = v52;
    return v73(v74, 1, 1, v72);
  }

  uint64_t v3 = v96;
  uint64_t v10 = (void (**)(uint64_t, uint64_t, uint64_t, __CFString **))v94;
  uint64_t v9 = v101;
LABEL_43:
  if (qword_1EA698090 != -1) {
    goto LABEL_65;
  }
LABEL_44:
  uint64_t v61 = sub_1D3001918();
  __swift_project_value_buffer(v61, (uint64_t)qword_1EA699860);
  uint64_t v62 = v93;
  ((void (*)(void *, __CFString **, void (**)(uint64_t, uint64_t, uint64_t, __CFString **)))v93[2])(v2, v9, v10);
  uint64_t v63 = sub_1D30018F8();
  os_log_type_t v64 = sub_1D30020A8();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    uint64_t v103 = v66;
    *(_DWORD *)uint64_t v65 = 136315138;
    unint64_t v100 = (__CFString **)a1;
    sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
    uint64_t v67 = sub_1D3002738();
    uint64_t v102 = sub_1D2F09508(v67, v68, &v103);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    uint64_t v69 = v62[1];
    ((void (*)(void *, void (**)(uint64_t, uint64_t, uint64_t, __CFString **)))v69)(v2, v10);
    _os_log_impl(&dword_1D2F05000, v63, v64, "Cannot retrieve timestamp for the turn %s, unable to find DeviceDynamicContext", v65, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v66, -1, -1);
    uint64_t v70 = v65;
    uint64_t v3 = v96;
    MEMORY[0x1D942F2D0](v70, -1, -1);

    ((void (*)(__CFString **, void (**)(uint64_t, uint64_t, uint64_t, __CFString **)))v69)(v101, v10);
  }
  else
  {

    uint64_t v71 = v62[1];
    ((void (*)(void *, void (**)(uint64_t, uint64_t, uint64_t, __CFString **)))v71)(v2, v10);

    ((void (*)(__CFString **, void (**)(uint64_t, uint64_t, uint64_t, __CFString **)))v71)(v9, v10);
  }
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
  unint64_t v73 = *(uint64_t (**)(__CFString **, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56);
  uint64_t v74 = v3;
  return v73(v74, 1, 1, v72);
}

uint64_t sub_1D2FA7A68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E8) + 48));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v14 = *(void *)(v11 + 16);
  v26[1] = v3;
  if (v12)
  {
    swift_retain();
    sub_1D2FA9E2C(a2, v13, v14, (void *)(v12 + 16), v12 + 32);
    char v16 = v15;
    swift_release();
    char v17 = (v16 & 1) == 0;
  }
  else if (v14)
  {
    v26[3] = a2;
    id v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v20 = v21;
    uint64_t v22 = *(void *)(v19 + 56);
    id v23 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v24 = v14 - 1;
    do
    {
      uint64_t v25 = v24;
      v20(v9, v13, v6);
      sub_1D2FAF884((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
      char v17 = sub_1D3001B28();
      (*v23)(v9, v6);
      if (v17) {
        break;
      }
      uint64_t v24 = v25 - 1;
      v13 += v22;
    }
    while (v25);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

void sub_1D2FA7C60(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_1D2FABBA4(a2, a1);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D3001918();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBD65778);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1D30018F8();
  int v14 = sub_1D30020A8();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    id v23 = a3;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v21;
    *(_DWORD *)uint64_t v15 = 134218242;
    uint64_t v24 = v3;
    int v22 = v14;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1D30025A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = v16;
    sub_1D3002318();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
    uint64_t v17 = sub_1D3002738();
    uint64_t v25 = sub_1D2F09508(v17, v18, &v26);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl(&dword_1D2F05000, v13, (os_log_type_t)v22, "#extractTurn: Found %ld events for request id %s", (uint8_t *)v15, 0x16u);
    uint64_t v19 = v21;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v19, -1, -1);
    MEMORY[0x1D942F2D0](v15, -1, -1);

    a3 = v23;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *a3 = v11;
}

uint64_t sub_1D2FA7FAC()
{
  uint64_t v0 = type metadata accessor for DefaultInteractionReader();
  uint64_t v1 = swift_allocObject();
  type metadata accessor for BiomeQuerying();
  uint64_t v2 = swift_allocObject();
  sub_1D2F0BCB8(0, &qword_1EBD63328);
  uint64_t result = sub_1D3001218();
  *(void *)(v1 + 16) = v2;
  qword_1EBD63050 = v0;
  unk_1EBD63058 = &protocol witness table for DefaultInteractionReader;
  qword_1EBD63038 = v1;
  return result;
}

uint64_t DefaultInteractionReader.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for BiomeQuerying();
  uint64_t v1 = swift_allocObject();
  sub_1D2F0BCB8(0, &qword_1EBD63328);
  sub_1D3001218();
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t static DefaultInteractionReader.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBD63068 != -1) {
    swift_once();
  }
  return sub_1D2F37950((uint64_t)&qword_1EBD63038, a1);
}

uint64_t DefaultInteractionReader.init()()
{
  type metadata accessor for BiomeQuerying();
  uint64_t v1 = swift_allocObject();
  sub_1D2F0BCB8(0, &qword_1EBD63328);
  sub_1D3001218();
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t DefaultInteractionReader.__allocating_init(biomeBasePath:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  type metadata accessor for BiomeQuerying();
  swift_allocObject();
  *(void *)(v4 + 16) = sub_1D2FF75DC(a1, a2);
  return v4;
}

uint64_t DefaultInteractionReader.init(biomeBasePath:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for BiomeQuerying();
  swift_allocObject();
  *(void *)(v3 + 16) = sub_1D2FF75DC(a1, a2);
  return v3;
}

void *sub_1D2FA8280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D2FF77BC(a1, a2, a3);
  if (v3)
  {
    id v5 = v3;
    if (qword_1EA698090 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D3001918();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EA699860);
    id v7 = v3;
    id v8 = v3;
    uint64_t v9 = sub_1D30018F8();
    os_log_type_t v10 = sub_1D30020B8();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v27 = v12;
      *(_DWORD *)unint64_t v11 = 136315138;
      id v13 = v3;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v14 = sub_1D3001BC8();
      sub_1D2F09508(v14, v15, &v27);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v9, v10, "Cannot read interactions, error=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v12, -1, -1);
      MEMORY[0x1D942F2D0](v11, -1, -1);
    }
    else
    {
    }
    uint64_t v27 = (uint64_t)v3;
    id v22 = v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    uint64_t v23 = sub_1D3001BC8();
    uint64_t v17 = v24;
    sub_1D2FAE95C();
    swift_allocError();
    *uint64_t v25 = v23;
    v25[1] = (uint64_t)v17;
    swift_willThrow();
  }
  else
  {
    uint64_t v16 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61540);
    uint64_t v17 = (void *)swift_allocObject();
    v17[6] = v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 0;
    uint64_t v19 = sub_1D2F1D154((unint64_t *)&qword_1EBD61550, (uint64_t *)&unk_1EBD61560);
    uint64_t v20 = *(void *)(v16 + 16);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    v17[2] = v18;
    v17[3] = v19;
    unsigned char v17[4] = v21;
    v17[5] = v19;
  }
  return v17;
}

uint64_t sub_1D2FA8574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1D2FF7E1C(a1, a2, a3);
}

uint64_t DefaultInteractionReader.deinit()
{
  swift_release();
  return v0;
}

uint64_t DefaultInteractionReader.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_1D2FA85F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2FA8280(a1, a2, a3);
}

uint64_t sub_1D2FA8614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1D2FF7E1C(a1, a2, a3);
}

char *sub_1D2FA863C(uint64_t a1)
{
  return sub_1D2F28628(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1D2FA8654(void *a1)
{
  return sub_1D2F28A94(0, a1[2], 0, a1);
}

void sub_1D2FA8668(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1D942E3B0);
}

uint64_t sub_1D2FA86E4(uint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998C8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (__CFString **)((char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v158 = (__CFString **)((char *)&v143 - v8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (__CFString **)((char *)&v143 - v10);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (__CFString **)((char *)&v143 - v13);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (__CFString **)((char *)&v143 - v16);
  MEMORY[0x1F4188790](v15);
  v155 = (__CFString **)((char *)&v143 - v18);
  uint64_t v19 = a1[1];
  uint64_t result = sub_1D3002718();
  if (result >= v19)
  {
    if (v19 < 0) {
      goto LABEL_154;
    }
    if (v19) {
      return sub_1D2FA9434(0, v19, 1, a1);
    }
  }
  else
  {
    if (v19 >= 0) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = v19 + 1;
    }
    if (v19 < -1)
    {
LABEL_162:
      uint64_t result = sub_1D3002598();
      __break(1u);
      return result;
    }
    uint64_t v22 = result;
    v145 = v17;
    unint64_t v150 = v14;
    v148 = v11;
    uint64_t v152 = v19;
    uint64_t v156 = v1;
    uint64_t v143 = a1;
    if (v19 >= 2)
    {
      uint64_t v23 = a1;
      uint64_t v24 = v21 >> 1;
      type metadata accessor for Turn();
      uint64_t v25 = sub_1D3001E48();
      *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
      a1 = v23;
      unint64_t v154 = (char *)((v25 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v164 = v25;
LABEL_12:
      uint64_t v27 = 0;
      uint64_t v28 = *a1;
      uint64_t v144 = *a1 - 8;
      uint64_t v26 = (char *)MEMORY[0x1E4FBC860];
      v157 = v6;
      uint64_t v29 = v152;
      unint64_t v30 = v155;
      uint64_t v147 = v22;
      uint64_t v160 = v28;
LABEL_15:
      uint64_t v32 = v27;
      uint64_t v33 = v27 + 1;
      uint64_t v151 = v27;
      if (v27 + 1 >= v29) {
        goto LABEL_50;
      }
      v146 = v26;
      uint64_t v34 = *(void *)(v28 + 8 * v33);
      uint64_t v35 = *(void *)(v28 + 8 * v32);
      type metadata accessor for SignalJoining();
      unint64_t v36 = *(void *)(v34 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
      swift_retain();
      uint64_t v163 = v35;
      swift_retain();
      sub_1D2FA6E2C(v36, v30);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
      uint64_t v38 = *(void *)(v37 - 8);
      unint64_t v39 = *(unsigned int (**)(__CFString **, uint64_t, uint64_t))(v38 + 48);
      char v40 = (void (*)(__CFString **, uint64_t))(v38 + 48);
      unsigned int v41 = v39(v30, 1, v37);
      unint64_t v153 = (void *)v37;
      uint64_t v149 = v39;
      os_log_t v162 = v40;
      if (v41 == 1)
      {
        sub_1D2F1CD78((uint64_t)v30, &qword_1EA6998C8);
        swift_release();
        swift_release();
        uint64_t v42 = v32 + 2;
        if (v32 + 2 >= v152)
        {
          uint64_t v33 = v32 + 2;
          goto LABEL_49;
        }
        LODWORD(v161) = 0;
        uint64_t v43 = v160;
      }
      else
      {
        uint64_t v159 = v33;
        double v44 = *(double *)((char *)v30 + *(int *)(v37 + 48));
        uint64_t v45 = sub_1D30010A8();
        uint64_t v46 = *(void (**)(__CFString **, uint64_t))(*(void *)(v45 - 8) + 8);
        v46(v30, v45);
        unint64_t v47 = v39;
        uint64_t v48 = v145;
        sub_1D2FA6E2C(*(void *)(v163 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v145);
        if (v47(v48, 1, v37) == 1)
        {
          sub_1D2F1CD78((uint64_t)v48, &qword_1EA6998C8);
          swift_release();
          swift_release();
          uint64_t v42 = v151 + 2;
          if (v151 + 2 >= v152)
          {
            uint64_t v26 = v146;
            uint64_t v22 = v147;
            uint64_t v43 = v160;
            uint64_t v32 = v151;
            if (v151 >= v42)
            {
LABEL_48:
              uint64_t v33 = v42;
              goto LABEL_50;
            }
LABEL_42:
            uint64_t v61 = (uint64_t *)(v144 + 8 * v42);
            uint64_t v62 = v42;
            uint64_t v63 = v32;
            os_log_type_t v64 = (uint64_t *)(v43 + 8 * v32);
            while (1)
            {
              if (v63 != --v62)
              {
                if (!v43) {
                  goto LABEL_160;
                }
                uint64_t v65 = *v64;
                *os_log_type_t v64 = *v61;
                *uint64_t v61 = v65;
              }
              ++v63;
              --v61;
              ++v64;
              if (v63 >= v62) {
                goto LABEL_48;
              }
            }
          }
          LODWORD(v161) = 1;
          uint64_t v33 = v159;
          uint64_t v43 = v160;
          unint64_t v39 = v149;
        }
        else
        {
          double v49 = *(double *)((char *)v48 + *(int *)(v37 + 48));
          v46(v48, v45);
          swift_release();
          swift_release();
          LODWORD(v161) = v44 < v49;
          uint64_t v42 = v151 + 2;
          uint64_t v33 = v159;
          uint64_t v43 = v160;
          unint64_t v39 = v149;
          if (v151 + 2 >= v152) {
            goto LABEL_34;
          }
        }
      }
      uint64_t v50 = v42;
      id v51 = v153;
      do
      {
        uint64_t v163 = v50;
        uint64_t v52 = *(void *)(v43 + 8 * v33);
        unint64_t v53 = *(void *)(*(void *)(v43 + 8 * v50) + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
        swift_retain();
        swift_retain();
        uint64_t v54 = v150;
        sub_1D2FA6E2C(v53, v150);
        if (v39(v54, 1, (uint64_t)v51) == 1)
        {
          sub_1D2F1CD78((uint64_t)v54, &qword_1EA6998C8);
          swift_release();
          swift_release();
          if (v161)
          {
            uint64_t v26 = v146;
            uint64_t v22 = v147;
            uint64_t v43 = v160;
            uint64_t v32 = v151;
            uint64_t v42 = v163;
            if (v163 >= v151) {
              goto LABEL_37;
            }
            goto LABEL_157;
          }
        }
        else
        {
          double v55 = *(double *)((char *)v54 + *((int *)v51 + 12));
          uint64_t v56 = sub_1D30010A8();
          uint64_t v57 = v39;
          uint64_t v58 = *(void (**)(__CFString **, uint64_t))(*(void *)(v56 - 8) + 8);
          v58(v54, v56);
          id v51 = v153;
          uint64_t v59 = v148;
          sub_1D2FA6E2C(*(void *)(v52 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v148);
          if (v57(v59, 1, (uint64_t)v51) == 1)
          {
            sub_1D2F1CD78((uint64_t)v59, &qword_1EA6998C8);
            swift_release();
            swift_release();
            unint64_t v39 = v149;
            if (!v161)
            {
              uint64_t v33 = v163;
LABEL_49:
              uint64_t v26 = v146;
              uint64_t v22 = v147;
              uint64_t v32 = v151;
LABEL_50:
              if (v33 >= v152) {
                goto LABEL_72;
              }
              uint64_t v66 = v158;
              if (__OFSUB__(v33, v32)) {
                goto LABEL_153;
              }
              if (v33 - v32 >= v22) {
                goto LABEL_72;
              }
              if (__OFADD__(v32, v22)) {
                goto LABEL_155;
              }
              if (v32 + v22 >= v152) {
                uint64_t v67 = (unsigned int (*)(__CFString **, uint64_t, uint64_t))v152;
              }
              else {
                uint64_t v67 = (unsigned int (*)(__CFString **, uint64_t, uint64_t))(v32 + v22);
              }
              if ((uint64_t)v67 < v32)
              {
LABEL_156:
                __break(1u);
                goto LABEL_157;
              }
              if ((unsigned int (*)(__CFString **, uint64_t, uint64_t))v33 == v67) {
                goto LABEL_72;
              }
              v146 = v26;
              type metadata accessor for SignalJoining();
              uint64_t v68 = v160;
              uint64_t v69 = (void *)(v144 + 8 * v33);
              uint64_t v70 = v66;
              uint64_t v149 = v67;
              while (2)
              {
                uint64_t v72 = *(void *)(v68 + 8 * v33);
                uint64_t v73 = v151;
                unint64_t v153 = v69;
                uint64_t v159 = v33;
                while (2)
                {
                  uint64_t v163 = v73;
                  uint64_t v74 = *v69;
                  unint64_t v75 = *(void *)(v72 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
                  swift_retain();
                  swift_retain();
                  sub_1D2FA6E2C(v75, v70);
                  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
                  uint64_t v77 = *(unsigned int (**)(__CFString **, uint64_t, uint64_t))(*(void *)(v76 - 8) + 48);
                  if (v77(v70, 1, v76) == 1)
                  {
                    sub_1D2F1CD78((uint64_t)v70, &qword_1EA6998C8);
                    swift_release();
                    swift_release();
                    uint64_t v71 = v159;
                    uint64_t v68 = v160;
                    goto LABEL_61;
                  }
                  double v78 = *(double *)((char *)v70 + *(int *)(v76 + 48));
                  uint64_t v79 = sub_1D30010A8();
                  uint64_t v80 = *(void *)(v79 - 8);
                  uint64_t v81 = *(void (**)(__CFString **, uint64_t))(v80 + 8);
                  uint64_t v161 = v80 + 8;
                  os_log_t v162 = v81;
                  v81(v70, v79);
                  uint64_t v82 = v157;
                  sub_1D2FA6E2C(*(void *)(v74 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v157);
                  if (v77(v82, 1, v76) == 1)
                  {
                    sub_1D2F1CD78((uint64_t)v82, &qword_1EA6998C8);
                    swift_release();
                    swift_release();
                    uint64_t v71 = v159;
                    goto LABEL_67;
                  }
                  double v83 = *(double *)((char *)v82 + *(int *)(v76 + 48));
                  v162(v82, v79);
                  swift_release();
                  swift_release();
                  uint64_t v71 = v159;
                  if (v78 < v83)
                  {
LABEL_67:
                    uint64_t v70 = v158;
                    uint64_t v68 = v160;
                    if (!v160) {
                      goto LABEL_158;
                    }
                    uint64_t v84 = *v69;
                    uint64_t v72 = v69[1];
                    *uint64_t v69 = v72;
                    v69[1] = v84;
                    --v69;
                    uint64_t v73 = v163 + 1;
                    if (v71 == v163 + 1) {
                      goto LABEL_61;
                    }
                    continue;
                  }
                  break;
                }
                uint64_t v70 = v158;
                uint64_t v68 = v160;
LABEL_61:
                uint64_t v33 = v71 + 1;
                uint64_t v69 = v153 + 1;
                if ((unsigned int (*)(__CFString **, uint64_t, uint64_t))v33 != v149) {
                  continue;
                }
                break;
              }
              uint64_t v33 = (uint64_t)v149;
              uint64_t v26 = v146;
              uint64_t v32 = v151;
LABEL_72:
              if (v33 < v32) {
                goto LABEL_148;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v26 = sub_1D2F5AAA4(0, *((void *)v26 + 2) + 1, 1, v26);
              }
              unint64_t v30 = v155;
              unint64_t v86 = *((void *)v26 + 2);
              unint64_t v85 = *((void *)v26 + 3);
              unint64_t v31 = v86 + 1;
              uint64_t v28 = v160;
              if (v86 >= v85 >> 1)
              {
                v135 = sub_1D2F5AAA4((char *)(v85 > 1), v86 + 1, 1, v26);
                uint64_t v28 = v160;
                uint64_t v26 = v135;
              }
              *((void *)v26 + 2) = v31;
              uint64_t v87 = v26 + 32;
              os_log_type_t v88 = &v26[16 * v86 + 32];
              *(void *)os_log_type_t v88 = v151;
              *((void *)v88 + 1) = v33;
              uint64_t v27 = v33;
              if (v86)
              {
                while (2)
                {
                  unint64_t v89 = v31 - 1;
                  if (v31 >= 4)
                  {
                    int v94 = &v87[16 * v31];
                    uint64_t v95 = *((void *)v94 - 8);
                    uint64_t v96 = *((void *)v94 - 7);
                    BOOL v100 = __OFSUB__(v96, v95);
                    uint64_t v97 = v96 - v95;
                    if (v100) {
                      goto LABEL_137;
                    }
                    uint64_t v99 = *((void *)v94 - 6);
                    uint64_t v98 = *((void *)v94 - 5);
                    BOOL v100 = __OFSUB__(v98, v99);
                    uint64_t v92 = v98 - v99;
                    char v93 = v100;
                    if (v100) {
                      goto LABEL_138;
                    }
                    unint64_t v101 = v31 - 2;
                    uint64_t v102 = &v87[16 * v31 - 32];
                    uint64_t v104 = *(void *)v102;
                    uint64_t v103 = *((void *)v102 + 1);
                    BOOL v100 = __OFSUB__(v103, v104);
                    uint64_t v105 = v103 - v104;
                    if (v100) {
                      goto LABEL_140;
                    }
                    BOOL v100 = __OFADD__(v92, v105);
                    uint64_t v106 = v92 + v105;
                    if (v100) {
                      goto LABEL_143;
                    }
                    if (v106 >= v97)
                    {
                      v124 = &v87[16 * v89];
                      uint64_t v126 = *(void *)v124;
                      uint64_t v125 = *((void *)v124 + 1);
                      BOOL v100 = __OFSUB__(v125, v126);
                      uint64_t v127 = v125 - v126;
                      if (v100) {
                        goto LABEL_147;
                      }
                      BOOL v117 = v92 < v127;
                    }
                    else
                    {
LABEL_91:
                      if (v93) {
                        goto LABEL_139;
                      }
                      unint64_t v101 = v31 - 2;
                      unint64_t v107 = &v87[16 * v31 - 32];
                      uint64_t v109 = *(void *)v107;
                      uint64_t v108 = *((void *)v107 + 1);
                      BOOL v110 = __OFSUB__(v108, v109);
                      uint64_t v111 = v108 - v109;
                      char v112 = v110;
                      if (v110) {
                        goto LABEL_142;
                      }
                      uint64_t v113 = &v87[16 * v89];
                      uint64_t v115 = *(void *)v113;
                      uint64_t v114 = *((void *)v113 + 1);
                      BOOL v100 = __OFSUB__(v114, v115);
                      uint64_t v116 = v114 - v115;
                      if (v100) {
                        goto LABEL_145;
                      }
                      if (__OFADD__(v111, v116)) {
                        goto LABEL_146;
                      }
                      if (v111 + v116 < v92) {
                        goto LABEL_103;
                      }
                      BOOL v117 = v92 < v116;
                    }
                    if (v117) {
                      unint64_t v89 = v101;
                    }
                  }
                  else
                  {
                    if (v31 == 3)
                    {
                      uint64_t v91 = *((void *)v26 + 4);
                      uint64_t v90 = *((void *)v26 + 5);
                      BOOL v100 = __OFSUB__(v90, v91);
                      uint64_t v92 = v90 - v91;
                      char v93 = v100;
                      goto LABEL_91;
                    }
                    uint64_t v118 = *((void *)v26 + 4);
                    uint64_t v119 = *((void *)v26 + 5);
                    BOOL v100 = __OFSUB__(v119, v118);
                    uint64_t v111 = v119 - v118;
                    char v112 = v100;
LABEL_103:
                    if (v112) {
                      goto LABEL_141;
                    }
                    int v120 = &v87[16 * v89];
                    uint64_t v122 = *(void *)v120;
                    uint64_t v121 = *((void *)v120 + 1);
                    BOOL v100 = __OFSUB__(v121, v122);
                    uint64_t v123 = v121 - v122;
                    if (v100) {
                      goto LABEL_144;
                    }
                    if (v123 < v111) {
                      goto LABEL_14;
                    }
                  }
                  unint64_t v128 = v89 - 1;
                  if (v89 - 1 >= v31)
                  {
                    __break(1u);
LABEL_134:
                    __break(1u);
LABEL_135:
                    __break(1u);
LABEL_136:
                    __break(1u);
LABEL_137:
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    __break(1u);
LABEL_144:
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
                    goto LABEL_156;
                  }
                  if (!v28) {
                    goto LABEL_159;
                  }
                  uint64_t v129 = &v87[16 * v128];
                  uint64_t v130 = *(void *)v129;
                  uint64_t v131 = &v87[16 * v89];
                  uint64_t v132 = *((void *)v131 + 1);
                  uint64_t v133 = v156;
                  sub_1D2FA972C((char *)(v28 + 8 * *(void *)v129), (char *)(v28 + 8 * *(void *)v131), (char *)(v28 + 8 * v132), v154);
                  uint64_t v156 = v133;
                  if (v133) {
                    goto LABEL_131;
                  }
                  if (v132 < v130) {
                    goto LABEL_134;
                  }
                  if (v89 > *((void *)v26 + 2)) {
                    goto LABEL_135;
                  }
                  *(void *)uint64_t v129 = v130;
                  *(void *)&v87[16 * v128 + 8] = v132;
                  unint64_t v134 = *((void *)v26 + 2);
                  if (v89 >= v134) {
                    goto LABEL_136;
                  }
                  unint64_t v31 = v134 - 1;
                  memmove(&v87[16 * v89], v131 + 16, 16 * (v134 - 1 - v89));
                  *((void *)v26 + 2) = v134 - 1;
                  unint64_t v30 = v155;
                  uint64_t v28 = v160;
                  if (v134 <= 2) {
                    goto LABEL_14;
                  }
                  continue;
                }
              }
              unint64_t v31 = 1;
LABEL_14:
              uint64_t v29 = v152;
              uint64_t v22 = v147;
              if (v27 >= v152) {
                goto LABEL_120;
              }
              goto LABEL_15;
            }
          }
          else
          {
            double v60 = *(double *)((char *)v59 + *((int *)v51 + 12));
            v58(v59, v56);
            swift_release();
            swift_release();
            unint64_t v39 = v149;
            if (((v161 ^ (v55 >= v60)) & 1) == 0)
            {
              uint64_t v26 = v146;
              uint64_t v22 = v147;
              uint64_t v43 = v160;
              uint64_t v42 = v163;
              goto LABEL_35;
            }
          }
        }
        uint64_t v33 = v163;
        uint64_t v50 = v163 + 1;
        uint64_t v43 = v160;
      }
      while (v163 + 1 < v152);
      uint64_t v42 = v163 + 1;
LABEL_34:
      uint64_t v26 = v146;
      uint64_t v22 = v147;
LABEL_35:
      uint64_t v33 = v42;
      uint64_t v32 = v151;
      if (!v161) {
        goto LABEL_50;
      }
      if (v42 >= v151)
      {
LABEL_37:
        if (v32 >= v42) {
          goto LABEL_48;
        }
        goto LABEL_42;
      }
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    uint64_t v26 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v164 = MEMORY[0x1E4FBC860];
    unint64_t v154 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v19 == 1) {
      goto LABEL_12;
    }
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_120:
    if (v31 >= 2)
    {
      uint64_t v136 = *v143;
      do
      {
        unint64_t v137 = v31 - 2;
        if (v31 < 2) {
          goto LABEL_149;
        }
        if (!v136) {
          goto LABEL_161;
        }
        uint64_t v138 = *(void *)&v26[16 * v137 + 32];
        uint64_t v139 = *(void *)&v26[16 * v31 + 24];
        uint64_t v140 = v156;
        sub_1D2FA972C((char *)(v136 + 8 * v138), (char *)(v136 + 8 * *(void *)&v26[16 * v31 + 16]), (char *)(v136 + 8 * v139), v154);
        uint64_t v156 = v140;
        if (v140) {
          break;
        }
        if (v139 < v138) {
          goto LABEL_150;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1D2F5AD18((uint64_t)v26);
        }
        if (v137 >= *((void *)v26 + 2)) {
          goto LABEL_151;
        }
        uint64_t v141 = &v26[16 * v137 + 32];
        *(void *)uint64_t v141 = v138;
        *((void *)v141 + 1) = v139;
        unint64_t v142 = *((void *)v26 + 2);
        if (v31 > v142) {
          goto LABEL_152;
        }
        memmove(&v26[16 * v31 + 16], &v26[16 * v31 + 32], 16 * (v142 - v31));
        *((void *)v26 + 2) = v142 - 1;
        unint64_t v31 = v142 - 1;
      }
      while (v142 > 2);
    }
LABEL_131:
    swift_bridgeObjectRelease();
    *(void *)((v164 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1D3001DE8();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2FA9434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v35 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998C8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (__CFString **)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (__CFString **)((char *)&v33 - v12);
  uint64_t v34 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *a4;
    type metadata accessor for SignalJoining();
    uint64_t v39 = v14;
    uint64_t v15 = (uint64_t *)(v14 + 8 * a3 - 8);
    uint64_t v37 = v10;
    uint64_t v38 = v13;
LABEL_6:
    uint64_t result = *(void *)(v39 + 8 * a3);
    uint64_t v16 = v35;
    unint64_t v36 = v15;
    uint64_t v40 = a3;
    while (1)
    {
      uint64_t v42 = v16;
      uint64_t v17 = *v15;
      unint64_t v18 = *(void *)(result + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
      uint64_t v43 = result;
      swift_retain();
      uint64_t v19 = v17;
      swift_retain();
      sub_1D2FA6E2C(v18, v13);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
      uint64_t v21 = *(unsigned int (**)(__CFString **, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
      if (v21(v13, 1, v20) == 1)
      {
        sub_1D2F1CD78((uint64_t)v13, &qword_1EA6998C8);
        swift_release();
        uint64_t result = swift_release();
LABEL_5:
        ++a3;
        uint64_t v15 = v36 + 1;
        if (a3 == v34) {
          return result;
        }
        goto LABEL_6;
      }
      double v22 = *(double *)((char *)v13 + *(int *)(v20 + 48));
      uint64_t v23 = sub_1D30010A8();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(void (**)(__CFString **, uint64_t))(v24 + 8);
      uint64_t v26 = v13;
      uint64_t v27 = v25;
      uint64_t v41 = v24 + 8;
      v25(v26, v23);
      unint64_t v28 = *(void *)(v19 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
      uint64_t v29 = v37;
      sub_1D2FA6E2C(v28, v37);
      if (v21(v29, 1, v20) == 1)
      {
        sub_1D2F1CD78((uint64_t)v29, &qword_1EA6998C8);
        swift_release();
        uint64_t result = swift_release();
        a3 = v40;
        uint64_t v13 = v38;
        uint64_t v30 = v42;
      }
      else
      {
        double v31 = *(double *)((char *)v29 + *(int *)(v20 + 48));
        v27(v29, v23);
        swift_release();
        uint64_t result = swift_release();
        a3 = v40;
        uint64_t v13 = v38;
        uint64_t v30 = v42;
        if (v22 >= v31) {
          goto LABEL_5;
        }
      }
      if (!v39) {
        break;
      }
      uint64_t v32 = *v15;
      uint64_t result = v15[1];
      uint64_t *v15 = result;
      v15[1] = v32;
      --v15;
      uint64_t v16 = v30 + 1;
      if (a3 == v16) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2FA972C(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998C8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v61 = (__CFString **)((char *)&v57 - v11);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (__CFString **)((char *)&v57 - v15);
  uint64_t v16 = a2 - a1;
  uint64_t v17 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v17 = a2 - a1;
  }
  uint64_t v18 = v17 >> 3;
  uint64_t v19 = a2;
  uint64_t v65 = a3;
  uint64_t v20 = a3 - a2;
  uint64_t v21 = v20 / 8;
  uint64_t v72 = a1;
  uint64_t v71 = a4;
  if (v17 >> 3 >= v20 / 8)
  {
    if (v20 < -7) {
      goto LABEL_51;
    }
    uint64_t v58 = v13;
    uint64_t v34 = v19;
    if (a4 != v19 || &v19[8 * v21] <= a4) {
      memmove(a4, v19, 8 * v21);
    }
    uint64_t v35 = &a4[8 * v21];
    uint64_t v70 = v35;
    uint64_t v72 = v19;
    unint64_t v36 = v61;
    if (v20 < 8 || a1 >= v19)
    {
LABEL_50:
      sub_1D2F5AC5C((void **)&v72, (const void **)&v71, &v70);
      return 1;
    }
    type metadata accessor for SignalJoining();
    uint64_t v37 = &OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events;
    uint64_t v38 = v65 - 8;
    uint64_t v39 = v19;
    uint64_t v67 = a4;
    uint64_t v68 = a1;
    while (1)
    {
      uint64_t v69 = v34;
      unint64_t v66 = (unint64_t)v35;
      uint64_t v40 = *((void *)v35 - 1);
      uint64_t v65 = v38 + 8;
      uint64_t v41 = (char *)*((void *)v39 - 1);
      uint64_t v62 = (__CFString **)(v39 - 8);
      uint64_t v63 = v35 - 8;
      unint64_t v42 = *(void *)(v40 + *v37);
      swift_retain();
      os_log_type_t v64 = v41;
      swift_retain();
      sub_1D2FA6E2C(v42, v36);
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
      double v44 = v37;
      uint64_t v45 = *(unsigned int (**)(__CFString **, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48);
      if (v45(v36, 1, v43) == 1)
      {
        sub_1D2F1CD78((uint64_t)v36, &qword_1EA6998C8);
        swift_release();
        swift_release();
        uint64_t v46 = v67;
        uint64_t v37 = v44;
        unint64_t v47 = v65;
      }
      else
      {
        double v49 = *(double *)((char *)v36 + *(int *)(v43 + 48));
        uint64_t v50 = sub_1D30010A8();
        uint64_t v51 = *(void *)(v50 - 8);
        uint64_t v52 = *(void (**)(__CFString **, uint64_t))(v51 + 8);
        uint64_t v59 = v51 + 8;
        double v60 = v52;
        v52(v36, v50);
        unint64_t v53 = v58;
        sub_1D2FA6E2C(*(void *)&v64[*v44], v58);
        if (v45(v53, 1, v43) == 1)
        {
          sub_1D2F1CD78((uint64_t)v53, &qword_1EA6998C8);
          swift_release();
          swift_release();
          uint64_t v46 = v67;
          a1 = v68;
          uint64_t v37 = &OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events;
          unint64_t v47 = v65;
LABEL_43:
          BOOL v55 = v47 == v69;
          uint64_t v35 = (char *)v66;
          uint64_t v39 = (char *)v62;
          if (!v55 || v38 >= v69) {
            *(void *)uint64_t v38 = *v62;
          }
          uint64_t v72 = v39;
          goto LABEL_48;
        }
        double v54 = *(double *)((char *)v53 + *(int *)(v43 + 48));
        v60(v53, v50);
        swift_release();
        swift_release();
        uint64_t v46 = v67;
        a1 = v68;
        uint64_t v37 = &OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events;
        unint64_t v47 = v65;
        if (v49 < v54) {
          goto LABEL_43;
        }
      }
      uint64_t v35 = v63;
      uint64_t v70 = v63;
      uint64_t v48 = v69;
      if ((unint64_t)v47 < v66 || (unint64_t)v38 >= v66 || v47 != (char *)v66) {
        *(void *)uint64_t v38 = *(void *)v63;
      }
      uint64_t v39 = v48;
LABEL_48:
      unint64_t v36 = v61;
      if (v35 > v46)
      {
        v38 -= 8;
        uint64_t v34 = v39;
        if (v39 > a1) {
          continue;
        }
      }
      goto LABEL_50;
    }
  }
  if (v16 >= -7)
  {
    uint64_t v61 = v14;
    if (a4 != a1 || &a1[8 * v18] <= a4) {
      memmove(a4, a1, 8 * v18);
    }
    os_log_type_t v64 = &a4[8 * v18];
    uint64_t v70 = v64;
    double v22 = v62;
    if (v16 >= 8)
    {
      uint64_t v23 = v19;
      if (v19 < v65)
      {
        type metadata accessor for SignalJoining();
        while (1)
        {
          uint64_t v68 = a1;
          unint64_t v24 = *(void *)a4;
          unint64_t v25 = *(void *)(*(void *)v23 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
          swift_retain();
          unint64_t v66 = v24;
          swift_retain();
          sub_1D2FA6E2C(v25, v22);
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6998D0);
          uint64_t v27 = *(unsigned int (**)(__CFString **, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
          if (v27(v22, 1, v26) == 1)
          {
            sub_1D2F1CD78((uint64_t)v22, &qword_1EA6998C8);
            swift_release();
            swift_release();
          }
          else
          {
            uint64_t v69 = v23;
            uint64_t v67 = a4;
            double v30 = *(double *)((char *)v22 + *(int *)(v26 + 48));
            uint64_t v31 = sub_1D30010A8();
            uint64_t v63 = *(char **)(*(void *)(v31 - 8) + 8);
            ((void (*)(__CFString **, uint64_t))v63)(v22, v31);
            uint64_t v32 = v61;
            sub_1D2FA6E2C(*(void *)(v66 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events), v61);
            if (v27(v32, 1, v26) == 1)
            {
              sub_1D2F1CD78((uint64_t)v32, &qword_1EA6998C8);
              swift_release();
              swift_release();
              a4 = v67;
              uint64_t v23 = v69;
              double v22 = v62;
LABEL_19:
              uint64_t v29 = v23 + 8;
              unint64_t v28 = v68;
              if (v68 < v23 || v68 >= v29 || v68 != v23) {
                *(void *)uint64_t v68 = *(void *)v23;
              }
              goto LABEL_23;
            }
            double v33 = *(double *)((char *)v32 + *(int *)(v26 + 48));
            ((void (*)(__CFString **, uint64_t))v63)(v32, v31);
            swift_release();
            swift_release();
            a4 = v67;
            uint64_t v23 = v69;
            double v22 = v62;
            if (v30 < v33) {
              goto LABEL_19;
            }
          }
          unint64_t v28 = v68;
          if (v68 != a4) {
            *(void *)uint64_t v68 = *(void *)a4;
          }
          a4 += 8;
          uint64_t v71 = a4;
          uint64_t v29 = v23;
LABEL_23:
          a1 = v28 + 8;
          uint64_t v72 = a1;
          if (a4 < v64)
          {
            uint64_t v23 = v29;
            if (v29 < v65) {
              continue;
            }
          }
          goto LABEL_50;
        }
      }
    }
    goto LABEL_50;
  }
LABEL_51:
  uint64_t result = sub_1D30025E8();
  __break(1u);
  return result;
}

uint64_t sub_1D2FA9E2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v27 = a2;
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2FAF884((unint64_t *)&qword_1EBD62A98, MEMORY[0x1E4F27990]);
  uint64_t result = sub_1D3001AB8();
  uint64_t v12 = 1 << *a4;
  BOOL v13 = __OFSUB__(v12, 1);
  uint64_t v14 = v12 - 1;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = v14 & result;
    uint64_t v16 = sub_1D3001618();
    *(void *)&long long v36 = a4;
    *((void *)&v36 + 1) = a5;
    *(void *)&long long v37 = v15;
    *((void *)&v37 + 1) = v16;
    *(void *)&long long v38 = v17;
    *((void *)&v38 + 1) = v18;
    char v39 = 0;
    uint64_t v19 = sub_1D3001638();
    long long v28 = v36;
    long long v29 = v37;
    long long v30 = v38;
    char v31 = v39;
    if ((v20 & 1) == 0)
    {
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      uint64_t v21 = v8 + 16;
      double v22 = v23;
      uint64_t v24 = *(void *)(v21 + 56);
      do
      {
        v22(v10, v27 + v24 * v19, v7);
        sub_1D2FAF884((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
        char v25 = sub_1D3001B28();
        (*(void (**)(char *, uint64_t))(v21 - 8))(v10, v7);
        if (v25) {
          break;
        }
        sub_1D3001658();
        long long v32 = v28;
        long long v33 = v29;
        long long v34 = v30;
        char v35 = v31;
        uint64_t v19 = sub_1D3001638();
      }
      while ((v26 & 1) == 0);
    }
    return v19;
  }
  return result;
}

uint64_t sub_1D2FAA09C@<X0>(void *a1@<X8>)
{
  swift_retain();
  uint64_t v2 = sub_1D3002538();
  swift_release();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *a1 = &unk_1EA6998B8;
  a1[1] = result;
  return result;
}

uint64_t sub_1D2FAA10C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x1F4188298](sub_1D2FAA12C, 0, 0);
}

uint64_t sub_1D2FAA12C()
{
  uint64_t v1 = (void *)v0[6];
  swift_beginAccess();
  sub_1D3002608();
  uint64_t v2 = v0[5];
  swift_endAccess();
  *uint64_t v1 = v2;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1D2FAA1CC@<X0>(void *a1@<X8>)
{
  swift_retain();
  uint64_t v2 = sub_1D3002538();
  swift_release();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *a1 = &unk_1EA6998A8;
  a1[1] = result;
  return result;
}

uint64_t sub_1D2FAA23C(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = sub_1D3002158();
  uint64_t v4 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D3002138();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1D3001A08();
  MEMORY[0x1F4188790](v8 - 8);
  v14[3] = type metadata accessor for BiomePLSELFStoreReader();
  v14[4] = &off_1F2A1BA88;
  v14[0] = a1;
  sub_1D2F0BCB8(0, qword_1EBD635E0);
  sub_1D30019C8();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1D2FAF884(&qword_1EBD635D8, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635C0);
  sub_1D2F1D154((unint64_t *)&unk_1EBD635C8, &qword_1EBD635C0);
  sub_1D30023A8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v12);
  *(void *)(a2 + 56) = sub_1D3002178();
  sub_1D2F37950((uint64_t)v14, a2 + 16);
  unint64_t v9 = sub_1D2F1F60C(MEMORY[0x1E4FBC860]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  *(void *)(a2 + 64) = v9;
  return a2;
}

uint64_t sub_1D2FAA4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[0] = a2;
  uint64_t v5 = sub_1D30019A8();
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D3001A08();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D30010A8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  v20[1] = *(void *)(a3 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = (void *)v20[0];
  *(void *)(v15 + ((v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20[0];
  aBlock[4] = sub_1D2FAF51C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_74_0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  id v18 = v16;
  sub_1D30019D8();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1D2FAF884(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F1D154((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v10, v7, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
  return swift_release();
}

uint64_t sub_1D2FAA88C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v92 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v81 = (char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D30010A8();
  uint64_t v78 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v96 = (uint64_t)v77 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v80 = (char *)v77 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v79 = (char *)v77 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v77 - v22;
  if (a1 >> 62) {
    goto LABEL_65;
  }
  uint64_t v24 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t result = MEMORY[0x1E4FBC860];
  if (!v24) {
    return result;
  }
  uint64_t v91 = v23;
  uint64_t v119 = MEMORY[0x1E4FBC860];
  uint64_t v23 = (char *)&v119;
  uint64_t v83 = v24;
  uint64_t result = sub_1D3002508();
  uint64_t v26 = v83;
  if (v83 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v105 = v12;
  v77[0] = v4;
  uint64_t v27 = 0;
  unint64_t v82 = a1 & 0xC000000000000001;
  uint64_t v106 = (uint64_t *)(v92 + 16);
  uint64_t v86 = a2;
  uint64_t v100 = a2 + 16;
  v77[2] = a1;
  v77[1] = a1 + 32;
  uint64_t v113 = (void (**)(char *, uint64_t, uint64_t))(v78 + 16);
  uint64_t v111 = (unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  uint64_t v109 = (void (**)(uint64_t, char *, uint64_t))(v78 + 32);
  a1 = v78 + 8;
  uint64_t v114 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
  v77[3] = (v78 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  do
  {
    if (v27 == v26)
    {
      __break(1u);
LABEL_65:
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1D30025A8();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    uint64_t v88 = v27;
    if (v82) {
      uint64_t v34 = MEMORY[0x1D942E3A0]();
    }
    else {
      uint64_t v34 = swift_retain();
    }
    uint64_t v35 = (uint64_t)v105;
    unint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v87 = v34;
    uint64_t v85 = v34 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID;
    uint64_t v37 = sub_1D2F0D008(2, v34 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, 1);
    unint64_t v118 = v36;
    uint64_t v90 = *(void *)(v37 + 16);
    uint64_t v84 = v37;
    if (v90)
    {
      uint64_t v38 = v78;
      unint64_t v98 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      unint64_t v89 = v37 + v98;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v108 = *(void *)(v38 + 72);
      char v112 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      uint64_t v39 = 0;
      while (1)
      {
        unint64_t v42 = v91;
        v112(v91, v89 + v108 * v39, v9);
        uint64_t v115 = *v114;
        v115(v42, 0, 1, v9);
        BOOL v110 = *v111;
        if (v110(v42, 1, v9) == 1) {
          goto LABEL_8;
        }
        uint64_t v95 = v39 + 1;
        uint64_t v43 = v96;
        unint64_t v107 = *v109;
        v107(v96, v42, v9);
        uint64_t v44 = v92;
        uint64_t v94 = sub_1D2FDA2A4(1, v43);
        uint64_t v45 = *(void *)(v44 + 16);
        unint64_t v117 = v36;
        uint64_t v46 = *(void *)(v45 + 64);
        uint64_t v97 = v45 + 64;
        uint64_t v47 = -1 << *(unsigned char *)(v45 + 32);
        uint64_t v93 = ~v47;
        if (-v47 < 64) {
          uint64_t v48 = ~(-1 << -(char)v47);
        }
        else {
          uint64_t v48 = -1;
        }
        unint64_t v49 = v48 & v46;
        uint64_t v101 = v45;
        swift_bridgeObjectRetain_n();
        swift_beginAccess();
        int64_t v102 = 0;
        int64_t v99 = (unint64_t)(63 - v47) >> 6;
        while (v49)
        {
          uint64_t v104 = (v49 - 1) & v49;
          unint64_t v50 = __clz(__rbit64(v49)) | (v102 << 6);
LABEL_38:
          int v55 = *(_DWORD *)(*(void *)(v101 + 48) + 4 * v50);
          uint64_t v56 = *(void *)v100;
          if (*(void *)(*(void *)v100 + 16))
          {
            unint64_t v57 = sub_1D2F0DD10(1);
            unint64_t v58 = v36;
            if ((v59 & 1) == 0) {
              goto LABEL_48;
            }
            uint64_t v60 = *(void *)(*(void *)(v56 + 56) + 8 * v57);
            if (*(void *)(v60 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v61 = sub_1D2F0DD14(v96);
              if (v62)
              {
                uint64_t v63 = *(void *)(*(void *)(v60 + 56) + 8 * v61);
                swift_retain();
                swift_bridgeObjectRelease();
                swift_beginAccess();
                uint64_t v64 = *(void *)(v63 + 16);
                if (*(void *)(v64 + 16))
                {
                  unint64_t v65 = sub_1D2F0DD10(v55);
                  if (v66)
                  {
                    unint64_t v67 = *(void *)(*(void *)(v64 + 56) + 8 * v65);
                    swift_bridgeObjectRetain();
                    swift_release();
                    unint64_t v58 = v67;
                    goto LABEL_48;
                  }
                }
                swift_release();
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
          }
          unint64_t v58 = v36;
LABEL_48:
          unint64_t v116 = v36;
          uint64_t v68 = *(void *)(v58 + 16);
          unint64_t v103 = v58;
          if (v68)
          {
            unint64_t v69 = v58 + v98;
            swift_bridgeObjectRetain();
            while (1)
            {
              v112(v21, v69, v9);
              v115(v21, 0, 1, v9);
              if (v110(v21, 1, v9) == 1) {
                break;
              }
              v107(v35, v21, v9);
              uint64_t v70 = *v106;
              if (*(void *)(*v106 + 16))
              {
                unint64_t v71 = sub_1D2F0DD10(v55);
                if (v72)
                {
                  uint64_t v73 = *(void *)(*(void *)(v70 + 56) + 8 * v71);
                  swift_beginAccess();
                  uint64_t v74 = *(void *)(v73 + 16);
                  if (*(void *)(v74 + 16))
                  {
                    swift_retain();
                    swift_bridgeObjectRetain();
                    unint64_t v75 = sub_1D2F0DD14((uint64_t)v105);
                    unint64_t v36 = MEMORY[0x1E4FBC860];
                    if (v76)
                    {
                      unint64_t v36 = *(void *)(*(void *)(v74 + 56) + 8 * v75);
                      swift_bridgeObjectRetain();
                    }
                    swift_release();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    unint64_t v36 = MEMORY[0x1E4FBC860];
                  }
                  uint64_t v35 = (uint64_t)v105;
                }
              }
              (*(void (**)(uint64_t, uint64_t))a1)(v35, v9);
              sub_1D2F9D230(v36);
              v69 += v108;
              --v68;
              unint64_t v36 = MEMORY[0x1E4FBC860];
              if (!v68) {
                goto LABEL_22;
              }
            }
          }
          else
          {
            swift_bridgeObjectRetain();
LABEL_22:
            v115(v21, 1, 1, v9);
          }
          swift_bridgeObjectRelease_n();
          sub_1D2F9D230(v116);
          unint64_t v49 = v104;
        }
        int64_t v51 = v102 + 1;
        if (__OFADD__(v102, 1))
        {
          __break(1u);
LABEL_61:
          __break(1u);
          return v119;
        }
        if (v51 >= v99) {
          goto LABEL_15;
        }
        unint64_t v52 = *(void *)(v97 + 8 * v51);
        int64_t v53 = v102 + 1;
        if (v52) {
          goto LABEL_37;
        }
        int64_t v53 = v102 + 2;
        if (v102 + 2 >= v99) {
          goto LABEL_15;
        }
        unint64_t v52 = *(void *)(v97 + 8 * v53);
        if (v52) {
          goto LABEL_37;
        }
        int64_t v54 = v102 + 3;
        if (v102 + 3 < v99) {
          break;
        }
LABEL_15:
        sub_1D2F843C0();
        swift_bridgeObjectRelease();
        unint64_t v40 = v117;
        unint64_t v117 = v94;
        sub_1D2F9D230(v40);
        unint64_t v41 = v117;
        (*(void (**)(uint64_t, uint64_t))a1)(v96, v9);
        sub_1D2F9D230(v41);
        uint64_t v39 = v95;
        if (v95 == v90) {
          goto LABEL_7;
        }
      }
      unint64_t v52 = *(void *)(v97 + 8 * v54);
      if (!v52)
      {
        while (1)
        {
          int64_t v53 = v54 + 1;
          if (__OFADD__(v54, 1)) {
            goto LABEL_61;
          }
          if (v53 >= v99) {
            goto LABEL_15;
          }
          unint64_t v52 = *(void *)(v97 + 8 * v53);
          ++v54;
          if (v52) {
            goto LABEL_37;
          }
        }
      }
      int64_t v53 = v102 + 3;
LABEL_37:
      uint64_t v104 = (v52 - 1) & v52;
      unint64_t v50 = __clz(__rbit64(v52)) + (v53 << 6);
      int64_t v102 = v53;
      goto LABEL_38;
    }
    uint64_t v115 = *v114;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
LABEL_7:
    v115(v91, 1, 1, v9);
LABEL_8:
    ++v88;
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    long long v28 = *v113;
    long long v29 = v79;
    (*v113)(v79, v85, v9);
    unint64_t v118 = *(void *)(v87 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events);
    swift_bridgeObjectRetain();
    unint64_t v30 = swift_bridgeObjectRetain();
    sub_1D2F9D230(v30);
    unint64_t v31 = v118;
    long long v32 = v80;
    v28(v80, (uint64_t)v29, v9);
    uint64_t v33 = sub_1D3001018();
    uint64_t v12 = v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v81, 1, 1, v33);
    type metadata accessor for Turn();
    a2 = swift_allocObject();
    (*v109)(a2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v32, v9);
    *(void *)(a2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v31;
    sub_1D2F80C04((uint64_t)v12, a2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, &qword_1EBD62A80);
    (*(void (**)(char *, uint64_t))a1)(v29, v9);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = (char *)&v119;
    sub_1D30024E8();
    uint64_t v4 = *(void *)(v119 + 16);
    sub_1D3002518();
    sub_1D3002528();
    sub_1D30024F8();
    uint64_t v27 = v88;
    uint64_t v26 = v83;
  }
  while (v88 != v83);
  return v119;
}

uint64_t sub_1D2FAB4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v49 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (char *)&v36 - v11;
  uint64_t v38 = sub_1D2FDA1E0(1, a2);
  uint64_t v46 = a1;
  swift_beginAccess();
  uint64_t v37 = sub_1D2FDAAB4(a2);
  swift_endAccess();
  char v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v8 += 16;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v43 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  unint64_t v42 = (void (**)(uint64_t, uint64_t))(v8 - 8);
  unint64_t v47 = 0x80000001D300D930;
  uint64_t v48 = v14;
  *(void *)&long long v16 = 136315138;
  long long v40 = v16;
  uint64_t v39 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v41 = a2;
  uint64_t v45 = v8;
  do
  {
    char v18 = v12;
    int v19 = *((unsigned __int8 *)&unk_1F2A15B60 + v13 + 32);
    uint64_t v20 = (uint64_t)v49;
    v48(v49, a2, v7);
    if (v19) {
      uint64_t v21 = 0x6964654D73756C50;
    }
    else {
      uint64_t v21 = 0xD000000000000018;
    }
    if (v19) {
      unint64_t v22 = 0xE900000000000061;
    }
    else {
      unint64_t v22 = v47;
    }
    sub_1D2F47F74(v20, (uint64_t)v6);
    if ((*v15)(v6, 1, v7) == 1)
    {
      sub_1D2F1CD78((uint64_t)v6, &qword_1EBD62AA0);
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1D3001918();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EBD65778);
      uint64_t v24 = sub_1D30018F8();
      os_log_type_t v25 = sub_1D30020B8();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        v50[0] = v27;
        *(_DWORD *)uint64_t v26 = v40;
        *(void *)(v26 + 4) = sub_1D2F09508(v21, v22, v50);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v24, v25, "Failed to generate a plus id for domain %s", (uint8_t *)v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v27, -1, -1);
        uint64_t v28 = v26;
        a2 = v41;
        MEMORY[0x1D942F2D0](v28, -1, -1);
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)v44;
      (*v43)(v44, v6, v7);
      sub_1D2F0C8D4(1, a2, 19, v17);
      sub_1D2F0C8D4(19, v17, 1, a2);
      (*v42)(v17, v7);
    }
    char v12 = 1;
    uint64_t v13 = 1u;
  }
  while ((v18 & 1) == 0);
  if (v37) {
    unint64_t v29 = v37;
  }
  else {
    unint64_t v29 = MEMORY[0x1E4FBC860];
  }
  unint64_t v30 = sub_1D2F0CB40(1, a2);
  uint64_t v31 = a2;
  uint64_t v32 = v30;
  unint64_t v33 = sub_1D2F0CB40(43, v31);
  v50[0] = v38;
  sub_1D2F9D230(v29);
  uint64_t v34 = v50[0];
  sub_1D2FF453C(v33, v32);
  swift_release();
  swift_release();
  return v34;
}

uint64_t sub_1D2FAB93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unint64_t v30 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v29 = (char *)v23 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a2;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    unint64_t v17 = v13 + 40;
    uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v27 = v14;
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v25 = v16;
    uint64_t v28 = v13;
    char v18 = (void (**)(uint64_t, uint64_t))(v13 - 8);
    v23[1] = v17 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v20 = (uint64_t)v29;
    int v19 = v30;
    while (1)
    {
      v27(v11, v15, v4);
      uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v17;
      (*(void (**)(char *, void, uint64_t, uint64_t))v17)(v11, 0, 1, v4);
      if ((*v26)(v11, 1, v4) == 1) {
        break;
      }
      (*v24)(v19, v11, v4);
      sub_1D2FDFDFC(v20, v19);
      (*v18)(v20, v4);
      v15 += v25;
      if (!--v12) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_7:
    v21(v11, 1, 1, v4);
  }
  return v31;
}

uint64_t sub_1D2FABBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v144 = (char *)v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v133 = (char *)v123 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v131 = (char *)v123 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v138 = (uint64_t)v123 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v147 = (char *)v123 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  char v18 = (char *)v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v130 = (char *)v123 - v20;
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)v123 - v21;
  uint64_t v129 = a2;
  uint64_t v23 = sub_1D2FAB4B4(a1, a2);
  uint64_t v25 = v24;
  uint64_t v165 = v23;
  int64_t v135 = v24 + 16;
  swift_beginAccess();
  v123[0] = v25;
  swift_retain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1D2FA09F4(v26);
  uint64_t v137 = 0;
  swift_bridgeObjectRelease();
  uint64_t v163 = MEMORY[0x1E4FBC860];
  uint64_t v28 = *(NSObject **)(v27 + 16);
  uint64_t v145 = a1;
  uint64_t v139 = v5;
  os_log_t v141 = v28;
  if (v28)
  {
    uint64_t v140 = v27 + 32;
    uint64_t v152 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v5 + 16);
    unint64_t v29 = v5 + 56;
    uint64_t v151 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    unint64_t v150 = (void (*)(char *, unint64_t, uint64_t))(v5 + 32);
    v155 = (void (*)(char *, uint64_t))(v5 + 8);
    uint64_t v134 = v27;
    swift_bridgeObjectRetain();
    os_log_t v30 = 0;
    uint64_t v31 = (uint64_t)v147;
    unint64_t v32 = MEMORY[0x1E4FBC860];
    unint64_t v154 = v29;
    unint64_t v142 = v22;
    do
    {
      v146 = (char *)v30;
      uint64_t v34 = v140 + 16 * (void)v30;
      LODWORD(v149) = *(_DWORD *)v34;
      uint64_t v35 = *(void *)(v34 + 8);
      unint64_t v159 = v32;
      uint64_t v36 = *(void *)(v35 + 16);
      uint64_t v143 = v35;
      if (v36)
      {
        unint64_t v136 = v29 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        unint64_t v37 = v35 + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80));
        uint64_t v156 = *(void (***)(char *, uint64_t))(v139 + 72);
        unint64_t v153 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v139 + 16);
        swift_bridgeObjectRetain();
        while (1)
        {
          ((void (*)(char *, unint64_t, uint64_t))v153)(v22, v37, v4);
          unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v29;
          (*(void (**)(char *, void, uint64_t, uint64_t))v29)(v22, 0, 1, v4);
          if ((*v151)(v22, 1, v4) == 1) {
            break;
          }
          (*(void (**)(uint64_t, char *, uint64_t))v150)(v31, v22, v4);
          uint64_t v39 = *(void *)(a1 + 24);
          swift_beginAccess();
          uint64_t v40 = *(void *)(v39 + 16);
          if (*(void *)(v40 + 16))
          {
            unint64_t v41 = sub_1D2F0DD10(v149);
            unint64_t v38 = v32;
            if (v42)
            {
              uint64_t v43 = (uint64_t *)(*(void *)(*(void *)(v40 + 56) + 8 * v41) + 16);
              swift_beginAccess();
              swift_retain();
              swift_bridgeObjectRetain();
              unint64_t v148 = sub_1D2F0DD14(v31);
              char v45 = v44;
              swift_bridgeObjectRelease();
              if (v45)
              {
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v47 = *v43;
                uint64_t v158 = *v43;
                *uint64_t v43 = 0x8000000000000000;
                if (!isUniquelyReferenced_nonNull_native)
                {
                  sub_1D2F13A70();
                  uint64_t v47 = v158;
                }
                int64_t v48 = v148;
                (*(void (**)(unint64_t, uint64_t))v155)(*(void *)(v47 + 48) + v148 * (void)v156, v4);
                uint64_t v49 = v158;
                unint64_t v38 = *(void *)(*(void *)(v158 + 56) + 8 * v48);
                sub_1D2FDB1B8(v48, v158);
                *uint64_t v43 = v49;
                swift_bridgeObjectRelease();
                swift_endAccess();
                unint64_t v32 = MEMORY[0x1E4FBC860];
                unint64_t v22 = (char *)v142;
              }
              else
              {
                swift_endAccess();
                unint64_t v32 = MEMORY[0x1E4FBC860];
                unint64_t v38 = MEMORY[0x1E4FBC860];
              }
              swift_release();
              uint64_t v31 = (uint64_t)v147;
            }
          }
          else
          {
            unint64_t v38 = v32;
          }
          (*(void (**)(uint64_t, uint64_t))v155)(v31, v4);
          sub_1D2F9D230(v38);
          v37 += (unint64_t)v156;
          --v36;
          a1 = v145;
          unint64_t v29 = v154;
          if (!v36) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v29;
        swift_bridgeObjectRetain();
LABEL_4:
        v33(v22, 1, 1, v4);
      }
      swift_bridgeObjectRelease();
      os_log_t v30 = (os_log_t)(v146 + 1);
      sub_1D2F9D230(v159);
      unint64_t v29 = v154;
    }
    while (v30 != v141);
    swift_bridgeObjectRelease_n();
    uint64_t v50 = v163;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = MEMORY[0x1E4FBC860];
  }
  uint64_t v164 = v50;
  swift_beginAccess();
  uint64_t v51 = *(void *)(a1 + 40);
  unint64_t v52 = v133;
  int64_t v53 = v131;
  uint64_t v54 = v138;
  int v55 = v130;
  if (*(void *)(v51 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v56 = sub_1D2F0DD14(v129);
    if (v57)
    {
      uint64_t v58 = *(void *)(*(void *)(v51 + 56) + 8 * v56);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v58 = MEMORY[0x1E4FBC870];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = MEMORY[0x1E4FBC870];
  }
  uint64_t v59 = *(void *)v135;
  if (*(void *)(*(void *)v135 + 16))
  {
    unint64_t v60 = sub_1D2F0DD10(43);
    if (v61)
    {
      uint64_t v62 = *(void *)(*(void *)(v59 + 56) + 8 * v60);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v62 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v62 = MEMORY[0x1E4FBC860];
  }
  swift_release();
  uint64_t v63 = sub_1D2FAB93C(v62, v58);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v63 + 16) != 1)
  {
    swift_bridgeObjectRelease();
LABEL_86:
    uint64_t v158 = v165;
    swift_bridgeObjectRetain();
    unint64_t v122 = swift_bridgeObjectRetain();
    sub_1D2F9D230(v122);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v158;
  }
  int64_t v66 = 0;
  uint64_t v67 = *(void *)(v63 + 56);
  uint64_t v126 = v63 + 56;
  uint64_t v68 = 1 << *(unsigned char *)(v63 + 32);
  uint64_t v69 = -1;
  if (v68 < 64) {
    uint64_t v69 = ~(-1 << v68);
  }
  unint64_t v70 = v69 & v67;
  int64_t v127 = (unint64_t)(v68 + 63) >> 6;
  uint64_t v71 = v139;
  uint64_t v151 = (unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 16);
  unint64_t v153 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56);
  uint64_t v149 = v139 + 48;
  uint64_t v147 = (char *)(v139 + 32);
  uint64_t v156 = (void (**)(char *, uint64_t))(v139 + 8);
  uint64_t v125 = &v162;
  *(void *)&long long v65 = 136315394;
  long long v124 = v65;
  v123[1] = MEMORY[0x1E4FBC840] + 8;
  uint64_t v128 = v63;
  while (1)
  {
    if (v70)
    {
      unint64_t v136 = (v70 - 1) & v70;
      unint64_t v73 = __clz(__rbit64(v70)) | (v66 << 6);
      goto LABEL_52;
    }
    if (__OFADD__(v66++, 1))
    {
      __break(1u);
      goto LABEL_88;
    }
    if (v66 >= v127) {
      goto LABEL_84;
    }
    unint64_t v75 = *(void *)(v126 + 8 * v66);
    if (!v75) {
      break;
    }
LABEL_51:
    unint64_t v136 = (v75 - 1) & v75;
    unint64_t v73 = __clz(__rbit64(v75)) + (v66 << 6);
LABEL_52:
    uint64_t v77 = *(void *)(v63 + 48);
    unint64_t v154 = *(void *)(v71 + 72);
    uint64_t v78 = v71;
    unint64_t v150 = *(void (**)(char *, unint64_t, uint64_t))(v71 + 16);
    v150(v55, v77 + v154 * v73, v4);
    uint64_t v152 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
    v152(v55, 0, 1, v4);
    unint64_t v148 = *(void *)(v78 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v148)(v55, 1, v4) == 1) {
      goto LABEL_85;
    }
    int64_t v135 = v66;
    v146 = *(char **)v147;
    ((void (*)(uint64_t, char *, uint64_t))v146)(v54, v55, v4);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_1D3001918();
    __swift_project_value_buffer(v79, (uint64_t)qword_1EBD65778);
    uint64_t v80 = v54;
    uint64_t v81 = (void (*)(char *, uint64_t, uint64_t))v150;
    v150(v53, v80, v4);
    v81(v52, v129, v4);
    unint64_t v82 = sub_1D30018F8();
    os_log_type_t v83 = sub_1D30020A8();
    int v84 = v83;
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v85 = swift_slowAlloc();
      uint64_t v143 = swift_slowAlloc();
      uint64_t v158 = v143;
      *(_DWORD *)uint64_t v85 = v124;
      sub_1D2FAF884(&qword_1EA698E08, MEMORY[0x1E4F27990]);
      LODWORD(v142) = v84;
      uint64_t v86 = sub_1D3002738();
      uint64_t v161 = sub_1D2F09508(v86, v87, &v158);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      os_log_t v141 = v82;
      uint64_t v88 = *v156;
      (*v156)(v53, v4);
      *(_WORD *)(v85 + 12) = 2080;
      unint64_t v89 = v133;
      uint64_t v90 = sub_1D3002738();
      uint64_t v161 = sub_1D2F09508(v90, v91, &v158);
      a1 = v145;
      sub_1D3002318();
      swift_bridgeObjectRelease();
      v155 = v88;
      v88(v89, v4);
      os_log_t v92 = v141;
      _os_log_impl(&dword_1D2F05000, v141, (os_log_type_t)v142, "#extractTurn: Found sub-request ID: %s for request id %s.", (uint8_t *)v85, 0x16u);
      uint64_t v93 = v143;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v93, -1, -1);
      MEMORY[0x1D942F2D0](v85, -1, -1);
    }
    else
    {
      uint64_t v94 = *v156;
      (*v156)(v53, v4);
      v155 = v94;
      v94(v52, v4);
    }
    uint64_t v95 = v144;
    unint64_t v96 = MEMORY[0x1E4FBC860];
    unint64_t v97 = sub_1D2FAB4B4(a1, v138);
    uint64_t v99 = v98;
    sub_1D2F9D230(v97);
    swift_beginAccess();
    uint64_t v134 = v99;
    uint64_t v100 = swift_bridgeObjectRetain();
    uint64_t v101 = v137;
    uint64_t v102 = sub_1D2FA09F4(v100);
    uint64_t v137 = v101;
    swift_bridgeObjectRelease();
    uint64_t v161 = v96;
    os_log_t v141 = *(os_log_t *)(v102 + 16);
    if (v141)
    {
      uint64_t v140 = v102 + 32;
      uint64_t v132 = v102;
      swift_bridgeObjectRetain();
      os_log_t v103 = 0;
      do
      {
        uint64_t v104 = v140 + 16 * (void)v103;
        int v105 = *(_DWORD *)v104;
        uint64_t v106 = *(void *)(v104 + 8);
        unint64_t v160 = v96;
        uint64_t v107 = *(void *)(v106 + 16);
        uint64_t v143 = v106;
        if (v107)
        {
          unint64_t v142 = v103;
          unint64_t v108 = v106 + ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80));
          swift_bridgeObjectRetain();
          do
          {
            v150(v18, v108, v4);
            v152(v18, 0, 1, v4);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v148)(v18, 1, v4) == 1)
            {
              os_log_t v103 = v142;
              goto LABEL_61;
            }
            ((void (*)(char *, char *, uint64_t))v146)(v95, v18, v4);
            uint64_t v110 = *(void *)(a1 + 24);
            swift_beginAccess();
            uint64_t v111 = *(void *)(v110 + 16);
            if (*(void *)(v111 + 16))
            {
              unint64_t v112 = sub_1D2F0DD10(v105);
              unint64_t v109 = v96;
              if (v113)
              {
                uint64_t v114 = (uint64_t)v95;
                uint64_t v115 = (uint64_t *)(*(void *)(*(void *)(v111 + 56) + 8 * v112) + 16);
                swift_beginAccess();
                swift_retain();
                swift_bridgeObjectRetain();
                unint64_t v116 = sub_1D2F0DD14(v114);
                char v118 = v117;
                swift_bridgeObjectRelease();
                if (v118)
                {
                  int v119 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v120 = *v115;
                  uint64_t v157 = *v115;
                  *uint64_t v115 = 0x8000000000000000;
                  if (!v119)
                  {
                    sub_1D2F13A70();
                    uint64_t v120 = v157;
                  }
                  v155((char *)(*(void *)(v120 + 48) + v116 * v154), v4);
                  uint64_t v121 = v157;
                  unint64_t v109 = *(void *)(*(void *)(v157 + 56) + 8 * v116);
                  sub_1D2FDB1B8(v116, v157);
                  *uint64_t v115 = v121;
                  swift_bridgeObjectRelease();
                  swift_endAccess();
                }
                else
                {
                  swift_endAccess();
                  unint64_t v109 = MEMORY[0x1E4FBC860];
                }
                swift_release();
                a1 = v145;
                uint64_t v95 = v144;
                unint64_t v96 = MEMORY[0x1E4FBC860];
              }
            }
            else
            {
              unint64_t v109 = v96;
            }
            v155(v95, v4);
            sub_1D2F9D230(v109);
            v108 += v154;
            --v107;
          }
          while (v107);
          os_log_t v103 = v142;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        v152(v18, 1, 1, v4);
LABEL_61:
        swift_bridgeObjectRelease();
        os_log_t v103 = (os_log_t)((char *)v103 + 1);
        sub_1D2F9D230(v160);
      }
      while (v103 != v141);
      swift_bridgeObjectRelease_n();
      unint64_t v72 = v161;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v72 = v96;
    }
    sub_1D2F9D230(v72);
    swift_release();
    uint64_t v54 = v138;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v155)(v138, v4);
    uint64_t v71 = v139;
    unint64_t v52 = v133;
    int64_t v53 = v131;
    int v55 = v130;
    uint64_t v63 = v128;
    int64_t v66 = v135;
    unint64_t v70 = v136;
  }
  int64_t v76 = v66 + 1;
  if (v66 + 1 >= v127) {
    goto LABEL_84;
  }
  unint64_t v75 = *(void *)(v126 + 8 * v76);
  if (v75) {
    goto LABEL_50;
  }
  int64_t v76 = v66 + 2;
  if (v66 + 2 >= v127) {
    goto LABEL_84;
  }
  unint64_t v75 = *(void *)(v126 + 8 * v76);
  if (v75) {
    goto LABEL_50;
  }
  int64_t v76 = v66 + 3;
  if (v66 + 3 >= v127)
  {
LABEL_84:
    (*v153)(v55, 1, 1, v4);
LABEL_85:
    swift_release();
    goto LABEL_86;
  }
  unint64_t v75 = *(void *)(v126 + 8 * v76);
  if (v75)
  {
LABEL_50:
    int64_t v66 = v76;
    goto LABEL_51;
  }
  while (1)
  {
    int64_t v66 = v76 + 1;
    if (__OFADD__(v76, 1)) {
      break;
    }
    if (v66 >= v127) {
      goto LABEL_84;
    }
    unint64_t v75 = *(void *)(v126 + 8 * v66);
    ++v76;
    if (v75) {
      goto LABEL_51;
    }
  }
LABEL_88:
  __break(1u);
  return result;
}

uint64_t sub_1D2FACD64(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v170 = (uint64_t)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v153 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v153 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v153 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v153 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v166 = (uint64_t)&v153 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v165 = (uint64_t)&v153 - v19;
  uint64_t v175 = sub_1D30010A8();
  uint64_t v20 = *(void *)(v175 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v175);
  uint64_t v157 = (char *)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v156 = (char *)&v153 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v155 = (char *)&v153 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  unint64_t v154 = (char *)&v153 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v158 = (char *)&v153 - v30;
  MEMORY[0x1F4188790](v29);
  unint64_t v153 = (char *)&v153 - v31;
  type metadata accessor for RequestLinkTable();
  uint64_t v32 = swift_allocObject();
  unint64_t v33 = sub_1D2F232FC(MEMORY[0x1E4FBC860]);
  uint64_t v168 = v32;
  *(void *)(v32 + 16) = v33;
  type metadata accessor for ComponentEventTable();
  uint64_t v169 = swift_allocObject();
  *(void *)(v169 + 16) = MEMORY[0x1E4FBC868];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1D30025A8();
    if (v34) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v34)
    {
LABEL_3:
      if (v34 < 1)
      {
        __break(1u);
        JUMPOUT(0x1D2FADF28);
      }
      unint64_t v160 = v10;
      uint64_t v161 = v7;
      uint64_t v35 = 0;
      uint64_t v172 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
      unint64_t v173 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
      char v162 = (void (**)(uint64_t, uint64_t))(v20 + 8);
      uint64_t v163 = (void (**)(void))(v20 + 32);
      uint64_t v36 = off_1E6970000;
      unint64_t v159 = v13;
      os_log_type_t v167 = v16;
      unint64_t v37 = a1 & 0xC000000000000001;
      uint64_t v171 = v34;
      unint64_t v174 = a1 & 0xC000000000000001;
      while (1)
      {
        if (v37) {
          id v38 = (id)MEMORY[0x1D942E3A0](v35, a1);
        }
        else {
          id v38 = *(id *)(a1 + 8 * v35 + 32);
        }
        uint64_t v39 = v38;
        id v40 = [v38 (SEL)v36[264]];
        if (!v40) {
          goto LABEL_6;
        }
        unint64_t v41 = v40;
        id v42 = objc_msgSend(v40, sel_payload);
        if (!v42) {
          break;
        }
        uint64_t v43 = v42;
        uint64_t v44 = sub_1D3000F68();
        unint64_t v46 = v45;

        switch(objc_msgSend(v41, sel_anyEventType))
        {
          case 9u:
            id v47 = objc_msgSend(v41, sel_payload);
            if (v47)
            {
              uint64_t v48 = sub_1D3000F68();
              unint64_t v50 = v49;

              id v47 = (id)sub_1D3000F58();
              unint64_t v51 = v50;
              uint64_t v34 = v171;
              sub_1D2F0D1CC(v48, v51);
            }
            id v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12F8]), sel_initWithData_, v47);

            if (v52)
            {
              sub_1D2F0C17C(v52);
              sub_1D2F0D1CC(v44, v46);
            }
            else
            {
              sub_1D2F0D1CC(v44, v46);
            }

            goto LABEL_63;
          case 0xDu:
            id v53 = objc_allocWithZone(MEMORY[0x1E4FA0458]);
            sub_1D2F454DC(v44, v46);
            uint64_t v54 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v44, v46);
            id v55 = objc_msgSend(v53, sel_initWithData_, v54);

            uint64_t v164 = (unint64_t)v172 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
            if (v55
              && (id v56 = objc_msgSend(v55, sel_eventMetadata), v55, v56)
              && (id v57 = objc_msgSend(v56, sel_flowId), v56, v57))
            {
              id v58 = objc_msgSend(v57, sel_value);
              if (v58)
              {
                uint64_t v59 = v58;
                uint64_t v60 = sub_1D3000F68();
                unint64_t v62 = v61;

                uint64_t v63 = (uint64_t)v167;
                sub_1D2F587AC(v60, v62, (uint64_t)v167);
                sub_1D2F0D1CC(v60, v62);
                uint64_t v64 = v175;
              }
              else
              {
                uint64_t v63 = (uint64_t)v167;
                uint64_t v64 = v175;
                (*v173)((uint64_t)v167, 1, 1, v175);
              }

              uint64_t v134 = *v172;
              if ((*v172)(v63, 1, v64) != 1)
              {
                uint64_t v132 = v166;
                uint64_t v135 = v175;
                (*v163)();
                (*v173)(v132, 0, 1, v135);
                goto LABEL_90;
              }
            }
            else
            {
              (*v173)((uint64_t)v167, 1, 1, v175);
            }
            id v122 = objc_allocWithZone(MEMORY[0x1E4FA0458]);
            sub_1D2F454DC(v44, v46);
            uint64_t v123 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v44, v46);
            id v124 = objc_msgSend(v122, sel_initWithData_, v123);

            if (v124
              && (id v125 = objc_msgSend(v124, sel_eventMetadata),
                  v124,
                  v125)
              && (id v126 = objc_msgSend(v125, sel_taskId), v125, v126))
            {
              id v127 = objc_msgSend(v126, sel_value);
              if (v127)
              {
                uint64_t v128 = v127;
                uint64_t v129 = sub_1D3000F68();
                unint64_t v131 = v130;

                uint64_t v132 = v166;
                sub_1D2F587AC(v129, v131, v166);
                sub_1D2F0D1CC(v129, v131);
              }
              else
              {
                uint64_t v132 = v166;
                (*v173)(v166, 1, 1, v175);
              }
            }
            else
            {
              uint64_t v132 = v166;
              (*v173)(v166, 1, 1, v175);
            }
            sub_1D2F1CD78((uint64_t)v167, &qword_1EBD62AA0);
            uint64_t v134 = *v172;
LABEL_90:
            uint64_t v149 = v175;
            if (v134(v132, 1, v175) == 1)
            {
              sub_1D2F0D1CC(v44, v46);

              sub_1D2F1CD78(v132, &qword_1EBD62AA0);
            }
            else
            {
              unint64_t v150 = *v163;
              uint64_t v164 = a1;
              uint64_t v151 = (uint64_t)v158;
              ((void (*)(char *, uint64_t, uint64_t))v150)(v158, v132, v149);
              sub_1D2FDA0B4(3, v151, v41);

              sub_1D2F0D1CC(v44, v46);
              a1 = v164;
              (*v162)(v151, v149);
            }
            uint64_t v34 = v171;
            goto LABEL_63;
          case 0x12u:
            id v65 = objc_allocWithZone(MEMORY[0x1E4FA0C60]);
            sub_1D2F454DC(v44, v46);
            int64_t v66 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v44, v46);
            id v67 = objc_msgSend(v65, sel_initWithData_, v66);

            if (!v67
              || (id v68 = objc_msgSend(v67, sel_eventMetadata), v67,
                                                                                                  !v68)
              || (id v69 = objc_msgSend(v68, sel_nlId), v68, !v69))
            {
              uint64_t v75 = (uint64_t)v159;
              (*v173)((uint64_t)v159, 1, 1, v175);
              goto LABEL_61;
            }
            id v70 = objc_msgSend(v69, sel_value);
            if (v70)
            {
              uint64_t v71 = v70;
              uint64_t v72 = sub_1D3000F68();
              unint64_t v74 = v73;

              uint64_t v75 = (uint64_t)v159;
              sub_1D2F587AC(v72, v74, (uint64_t)v159);
              sub_1D2F0D1CC(v72, v74);
              uint64_t v76 = v175;
            }
            else
            {
              uint64_t v75 = (uint64_t)v159;
              uint64_t v76 = v175;
              (*v173)((uint64_t)v159, 1, 1, v175);
            }

            int v136 = (*v172)(v75, 1, v76);
            uint64_t v34 = v171;
            if (v136 == 1) {
              goto LABEL_61;
            }
            uint64_t v137 = (uint64_t)v154;
            uint64_t v138 = v75;
            uint64_t v110 = v175;
            ((void (*)(char *, uint64_t, uint64_t))*v163)(v154, v138, v175);
            int v139 = 7;
            goto LABEL_85;
          case 0x13u:
            id v77 = objc_allocWithZone(MEMORY[0x1E4FA0D40]);
            sub_1D2F454DC(v44, v46);
            uint64_t v78 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v44, v46);
            id v79 = objc_msgSend(v77, sel_initWithData_, v78);

            if (!v79
              || (id v80 = objc_msgSend(v79, sel_eventMetadata), v79,
                                                                                                  !v80)
              || (id v81 = objc_msgSend(v80, sel_requestId), v80, !v81))
            {
              uint64_t v75 = (uint64_t)v160;
              (*v173)((uint64_t)v160, 1, 1, v175);
              goto LABEL_61;
            }
            id v82 = objc_msgSend(v81, sel_value);
            if (v82)
            {
              os_log_type_t v83 = v82;
              uint64_t v84 = sub_1D3000F68();
              unint64_t v86 = v85;

              uint64_t v75 = (uint64_t)v160;
              sub_1D2F587AC(v84, v86, (uint64_t)v160);
              sub_1D2F0D1CC(v84, v86);
              uint64_t v87 = v175;
            }
            else
            {
              uint64_t v75 = (uint64_t)v160;
              uint64_t v87 = v175;
              (*v173)((uint64_t)v160, 1, 1, v175);
            }

            int v140 = (*v172)(v75, 1, v87);
            uint64_t v34 = v171;
            if (v140 == 1) {
              goto LABEL_61;
            }
            uint64_t v137 = (uint64_t)v155;
            uint64_t v141 = v75;
            uint64_t v110 = v175;
            ((void (*)(char *, uint64_t, uint64_t))*v163)(v155, v141, v175);
            int v139 = 1;
            goto LABEL_85;
          case 0x14u:
            id v88 = objc_allocWithZone(MEMORY[0x1E4F9FFE0]);
            sub_1D2F454DC(v44, v46);
            unint64_t v89 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v44, v46);
            id v90 = objc_msgSend(v88, sel_initWithData_, v89);

            if (!v90
              || (id v91 = objc_msgSend(v90, sel_eventMetadata), v90,
                                                                                                  !v91)
              || (id v92 = objc_msgSend(v91, sel_asrId), v91, !v92))
            {
              uint64_t v75 = v165;
              (*v173)(v165, 1, 1, v175);
              goto LABEL_61;
            }
            id v93 = objc_msgSend(v92, sel_value);
            if (v93)
            {
              uint64_t v94 = v93;
              uint64_t v95 = sub_1D3000F68();
              unint64_t v97 = v96;

              uint64_t v75 = v165;
              sub_1D2F587AC(v95, v97, v165);
              sub_1D2F0D1CC(v95, v97);
              uint64_t v98 = v175;
            }
            else
            {
              uint64_t v75 = v165;
              uint64_t v98 = v175;
              (*v173)(v165, 1, 1, v175);
            }

            int v142 = (*v172)(v75, 1, v98);
            uint64_t v34 = v171;
            if (v142 == 1) {
              goto LABEL_61;
            }
            uint64_t v143 = (uint64_t)v153;
            uint64_t v144 = v75;
            uint64_t v145 = v175;
            ((void (*)(char *, uint64_t, uint64_t))*v163)(v153, v144, v175);
            sub_1D2FDA0B4(8, v143, v41);

            sub_1D2F0D1CC(v44, v46);
            (*v162)(v143, v145);
            goto LABEL_63;
          case 0x17u:
            id v99 = objc_allocWithZone(MEMORY[0x1E4FA0880]);
            sub_1D2F454DC(v44, v46);
            uint64_t v100 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v44, v46);
            id v101 = objc_msgSend(v99, sel_initWithData_, v100);

            if (!v101
              || (id v102 = objc_msgSend(v101, sel_eventMetadata),
                  v101,
                  !v102)
              || (id v103 = objc_msgSend(v102, sel_mhId), v102, !v103))
            {
              (*v173)(v170, 1, 1, v175);
LABEL_59:

              sub_1D2F0D1CC(v44, v46);
              uint64_t v133 = v170;
              goto LABEL_62;
            }
            id v104 = objc_msgSend(v103, sel_value);
            if (v104)
            {
              int v105 = v104;
              uint64_t v106 = sub_1D3000F68();
              unint64_t v108 = v107;

              sub_1D2F587AC(v106, v108, v170);
              uint64_t v109 = v106;
              uint64_t v34 = v171;
              sub_1D2F0D1CC(v109, v108);
              uint64_t v110 = v175;
            }
            else
            {
              uint64_t v110 = v175;
              (*v173)(v170, 1, 1, v175);
            }

            if ((*v172)(v170, 1, v110) == 1) {
              goto LABEL_59;
            }
            uint64_t v137 = (uint64_t)v157;
            ((void (*)(char *, uint64_t, uint64_t))*v163)(v157, v170, v110);
            int v139 = 9;
LABEL_85:
            sub_1D2FDA0B4(v139, v137, v41);

            sub_1D2F0D1CC(v44, v46);
            uint64_t v148 = v137;
            uint64_t v34 = v171;
            (*v162)(v148, v110);
LABEL_63:
            unint64_t v37 = v174;
            uint64_t v36 = off_1E6970000;
            break;
          case 0x26u:
            id v111 = objc_allocWithZone(MEMORY[0x1E4FA0F70]);
            sub_1D2F454DC(v44, v46);
            unint64_t v112 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v44, v46);
            id v113 = objc_msgSend(v111, sel_initWithData_, v112);

            if (v113
              && (id v114 = objc_msgSend(v113, sel_eventMetadata),
                  v113,
                  v114)
              && (id v115 = objc_msgSend(v114, sel_plusId), v114, v115))
            {
              id v116 = objc_msgSend(v115, sel_value);
              if (v116)
              {
                char v117 = v116;
                uint64_t v118 = sub_1D3000F68();
                unint64_t v120 = v119;

                uint64_t v75 = (uint64_t)v161;
                sub_1D2F587AC(v118, v120, (uint64_t)v161);
                sub_1D2F0D1CC(v118, v120);
                uint64_t v121 = v175;
              }
              else
              {
                uint64_t v75 = (uint64_t)v161;
                uint64_t v121 = v175;
                (*v173)((uint64_t)v161, 1, 1, v175);
              }

              int v146 = (*v172)(v75, 1, v121);
              uint64_t v34 = v171;
              if (v146 != 1)
              {
                uint64_t v137 = (uint64_t)v156;
                uint64_t v147 = v75;
                uint64_t v110 = v175;
                ((void (*)(char *, uint64_t, uint64_t))*v163)(v156, v147, v175);
                int v139 = 19;
                goto LABEL_85;
              }
            }
            else
            {
              uint64_t v75 = (uint64_t)v161;
              (*v173)((uint64_t)v161, 1, 1, v175);
            }
LABEL_61:

            sub_1D2F0D1CC(v44, v46);
            uint64_t v133 = v75;
LABEL_62:
            sub_1D2F1CD78(v133, &qword_1EBD62AA0);
            goto LABEL_63;
          default:
            sub_1D2F0D1CC(v44, v46);

            uint64_t v36 = off_1E6970000;
            break;
        }
LABEL_7:
        if (v34 == ++v35) {
          goto LABEL_95;
        }
      }

LABEL_6:
      goto LABEL_7;
    }
  }
LABEL_95:
  swift_bridgeObjectRelease();
  return v168;
}

void *sub_1D2FADFA0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v0 - 8);
  id v80 = (char *)v67 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  id v79 = (char *)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A90);
  uint64_t v4 = MEMORY[0x1F4188790](v78);
  id v77 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v76 = (char *)v67 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v75 = (uint64_t)v67 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v74 = (char *)v67 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v73 = (uint64_t)v67 - v12;
  swift_retain();
  uint64_t v13 = 0;
  unint64_t v14 = sub_1D3002548();
  swift_release();
  if (v14 >> 62) {
    goto LABEL_34;
  }
  while (1)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699790);
    sub_1D2FAF884((unint64_t *)&qword_1EBD62A98, MEMORY[0x1E4F27990]);
    uint64_t v86 = sub_1D3001AA8();
    MEMORY[0x1F4188790](v86);
    v67[-2] = &v86;
    swift_retain();
    sub_1D3002558();
    swift_release();
    unint64_t v15 = MEMORY[0x1E4FBC860];
    unint64_t v85 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1D3002538();
    swift_release();
    sub_1D3002608();
    uint64_t v16 = v84;
    v67[1] = v13;
    if (v84)
    {
      uint64_t v83 = v2;
      uint64_t v17 = sub_1D2F0BCB8(0, &qword_1EA6998C0);
      uint64_t v18 = v17;
      do
      {
        objc_msgSend(v16, sel_anyEventType);
        uint64_t v19 = sub_1D30021F8();
        if (v19 && v17 == v19)
        {
          id v20 = objc_msgSend(v16, sel_payload);
          if (v20)
          {
            uint64_t v21 = v20;
            uint64_t v22 = sub_1D3000F68();
            unint64_t v24 = v23;

            id v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            uint64_t v26 = (void *)sub_1D3000F58();
            sub_1D2F0D1CC(v22, v24);
          }
          else
          {
            id v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            uint64_t v26 = 0;
          }
          id v27 = objc_msgSend(v25, sel_initWithData_, v26);

          if (v27)
          {
            self;
            uint64_t v28 = swift_dynamicCastObjCClass();

            uint64_t v17 = v18;
            if (v28)
            {
              MEMORY[0x1D942DCC0]();
              if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1D3001E28();
              }
              sub_1D3001E68();
              sub_1D3001DE8();
            }
            else
            {
            }
          }
          else
          {

            uint64_t v17 = v18;
          }
        }
        else
        {
        }
        sub_1D3002608();
        uint64_t v16 = v84;
      }
      while (v84);
      unint64_t v15 = v85;
      uint64_t v2 = v83;
    }
    swift_release();
    uint64_t v29 = v86;
    uint64_t v30 = *(void *)(v86 + 16);
    unint64_t v31 = MEMORY[0x1E4FBC860];
    if (!v30) {
      break;
    }
    v67[0] = v15;
    unint64_t v85 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1D3002508();
    uint64_t v32 = sub_1D2FCEF90(v29);
    uint64_t v34 = v33;
    char v36 = v35 & 1;
    uint64_t v68 = v29 + 64;
    uint64_t v69 = v2 + 16;
    id v70 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v71 = (void (**)(uint64_t, char *, uint64_t))(v2 + 32);
    uint64_t v82 = v30 - 1;
    uint64_t v72 = v29;
    unint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v2 = v81;
    id v38 = v77;
    while (1)
    {
      uint64_t v39 = v78;
      uint64_t v40 = *(int *)(v78 + 48);
      uint64_t v41 = v73;
      uint64_t v83 = v34;
      uint64_t v42 = sub_1D2F8C568(v73, v32, v34, v36 & 1, v29);
      *(void *)(v41 + v40) = v42;
      uint64_t v43 = *v37;
      uint64_t v44 = v74;
      (*v37)(v74, v41, v2);
      *(void *)&v44[*(int *)(v39 + 48)] = v42;
      uint64_t v45 = (uint64_t)v44;
      uint64_t v13 = v75;
      sub_1D2F80C04(v45, v75, &qword_1EBD62A90);
      swift_bridgeObjectRetain();
      sub_1D2F1CD78(v41, &qword_1EBD62A90);
      uint64_t v46 = *(int *)(v39 + 48);
      id v47 = v76;
      v43(v76, v13, v2);
      uint64_t v48 = *(void *)(v13 + v46);
      *(void *)&v47[v46] = v48;
      uint64_t v49 = *(int *)(v39 + 48);
      v43(v38, v13, v2);
      *(void *)&v38[v49] = v48;
      unint64_t v50 = v79;
      v43(v79, (uint64_t)v47, v2);
      uint64_t v51 = sub_1D3001018();
      uint64_t v52 = (uint64_t)v80;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v80, 1, 1, v51);
      type metadata accessor for Turn();
      uint64_t v53 = swift_allocObject();
      (*v71)(v53 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_turnID, v50, v2);
      *(void *)(v53 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_events) = v48;
      sub_1D2F80C04(v52, v53 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics4Turn_date, &qword_1EBD62A80);
      uint64_t v54 = *v70;
      swift_bridgeObjectRetain();
      v54(v47, v2);
      v54(v38, v2);
      sub_1D2F1CD78(v13, &qword_1EBD62A90);
      sub_1D30024E8();
      sub_1D3002518();
      uint64_t v29 = v72;
      sub_1D3002528();
      sub_1D30024F8();
      if (v32 < 0 || v32 >= -(-1 << *(unsigned char *)(v29 + 32))) {
        break;
      }
      if (((*(void *)(v68 + (((unint64_t)v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
        goto LABEL_32;
      }
      if (*(_DWORD *)(v29 + 36) != v83) {
        goto LABEL_33;
      }
      uint64_t v55 = sub_1D30023C8();
      if (!v82)
      {
        unint64_t v31 = v85;
        swift_bridgeObjectRelease();
        unint64_t v15 = v67[0];
        goto LABEL_28;
      }
      uint64_t v32 = v55;
      char v36 = 0;
      uint64_t v34 = *(unsigned int *)(v29 + 36);
      --v82;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
LABEL_28:
  uint64_t v56 = sub_1D2FACD64(v15);
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  uint64_t v59 = sub_1D2FAA88C(v31, v56, v58);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  unint64_t v85 = v59;
  sub_1D2FA6DA4(&v85);
  unint64_t v60 = v85;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61548);
  unint64_t v61 = (void *)swift_allocObject();
  v61[6] = v60;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = 0;
  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v63 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v64 = sub_1D2F1D154((unint64_t *)&qword_1EBD61550, (uint64_t *)&unk_1EBD61560);
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v63;
  swift_release();
  swift_release();
  v61[2] = v62;
  v61[3] = v64;
  v61[4] = v65;
  v61[5] = v64;
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_1D2FAE90C@<X0>(void *a1@<X8>)
{
  return sub_1D2FAA09C(a1);
}

uint64_t sub_1D2FAE934@<X0>(void *a1@<X8>)
{
  return sub_1D2FAA1CC(a1);
}

unint64_t sub_1D2FAE95C()
{
  unint64_t result = qword_1EA699880;
  if (!qword_1EA699880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699880);
  }
  return result;
}

uint64_t dispatch thunk of SignalReader.turn(turnID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SignalReader.turns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SignalReader.conversations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AsyncSignalReader.turns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AsyncSignalReader.conversations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.turns(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.turnsBookmarked(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.conversations(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AsyncBookmarkingSignalReader.conversationsBookmarked(startBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of StreamSignalReader.turn(turnID:receiveTurn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of StreamSignalReader.turns(receiveTurns:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of StreamSignalReader.turns(bookmark:receiveTurns:receiveBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of StreamSignalReader.conversations(receiveConversations:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of StreamSignalReader.conversations(bookmark:receiveConversations:receiveBookmark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

ValueMetadata *type metadata accessor for SignalReadError()
{
  return &type metadata for SignalReadError;
}

uint64_t dispatch thunk of InteractionReader.appInteractions(since:intentTypes:until:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of InteractionReader.appInteractionsAsync(since:intentTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

ValueMetadata *type metadata accessor for InteractionReaderError()
{
  return &type metadata for InteractionReaderError;
}

uint64_t dispatch thunk of BiomeEventReader.readEvents(_:types:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BiomeEventReader.readEventsAsync<A>(from:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

ValueMetadata *type metadata accessor for BiomeEventReaderError()
{
  return &type metadata for BiomeEventReaderError;
}

uint64_t method lookup function for FlatFileSignalReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlatFileSignalReader);
}

uint64_t dispatch thunk of FlatFileSignalReader.turn(turnID:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of FlatFileSignalReader.turns()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of FlatFileSignalReader.conversations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t type metadata accessor for BiomeSignalReader()
{
  return self;
}

uint64_t type metadata accessor for SignalJoining()
{
  return self;
}

uint64_t type metadata accessor for SignalExtracting()
{
  return self;
}

uint64_t type metadata accessor for DefaultInteractionReader()
{
  return self;
}

uint64_t method lookup function for DefaultInteractionReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultInteractionReader);
}

uint64_t dispatch thunk of DefaultInteractionReader.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DefaultInteractionReader.__allocating_init(biomeBasePath:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DefaultInteractionReader.appInteractions(since:intentTypes:until:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DefaultInteractionReader.appInteractionsAsync(since:intentTypes:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t initializeBufferWithCopyOfBuffer for BiomeSignalReader.SubscriptionState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for BiomeSignalReader.SubscriptionState()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for BiomeSignalReader.SubscriptionState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for BiomeSignalReader.SubscriptionState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BiomeSignalReader.SubscriptionState()
{
  return &type metadata for BiomeSignalReader.SubscriptionState;
}

uint64_t sub_1D2FAEE68()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2FAEEA0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_1D2FAEEB0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_1D2FAEEC0(uint64_t a1)
{
  return sub_1D2FA4F6C(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1D2FAEEDC()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2FAEFA8(uint64_t a1)
{
  sub_1D30010A8();
  uint64_t v3 = *(void (**)(uint64_t *))(v1 + 16);
  return sub_1D2FA3650(a1, v3);
}

uint64_t sub_1D2FAF01C()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1D2FAF0EC()
{
  uint64_t v1 = *(void *)(sub_1D30010A8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64));
  sub_1D2FA5FA8(v3, v0 + v2, v4);
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1D2FAF18C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1D2FAF1A4()
{
  uint64_t v1 = *(void *)(sub_1D30010A8() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_1D2FA57E0(v2, v3);
}

uint64_t sub_1D2FAF210()
{
  uint64_t v1 = *(void *)(sub_1D30010A8() - 8);
  return sub_1D2FA4ABC(*(void *)(v0 + 16), v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1D2FAF268()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FAF2A4(uint64_t a1)
{
  return sub_1D2FAF770(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_1D2FA376C);
}

uint64_t sub_1D2FAF2BC()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2FAF3A0(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1D30010A8() - 8);
  return sub_1D2FA4C04(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), v2 + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_1D2FAF42C(uint64_t a1)
{
  return sub_1D2FCEC94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D2FAF434()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1D2FAF51C()
{
  uint64_t v1 = *(void *)(sub_1D30010A8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1D2FA5030(v3, v0 + v2, v4);
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t objectdestroy_60Tm()
{
  uint64_t v1 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2FAF758(uint64_t a1)
{
  return sub_1D2FAF770(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_1D2FA3F1C);
}

uint64_t sub_1D2FAF770(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v4 = *(void *)(sub_1D30010A8() - 8);
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (char *)v2 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5, v6, v7, v8);
}

uint64_t sub_1D2FAF7FC(uint64_t a1)
{
  return sub_1D2FA7A68(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1D2FAF81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6992E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2FAF884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2FAF8CC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FAF904(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1C2F4;
  return sub_1D2F1A418(a1, v1);
}

uint64_t sub_1D2FAF9A0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1D1A0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA6998B0 + dword_1EA6998B0);
  return v5(a1, v1);
}

uint64_t sub_1D2FAFA50(void **a1)
{
  return sub_1D2FA696C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t UniversalSuggestionsStoreCoreData.__allocating_init()()
{
  uint64_t v1 = static Config.universalSuggestionsStoreFilePath.getter();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 120);
  return v2(v1);
}

void sub_1D2FAFAE8()
{
  qword_1EA6998D8 = 0xBFF0000000000000;
}

id sub_1D2FAFAF8()
{
  id result = sub_1D2FAFB18();
  qword_1EBD5EA50 = (uint64_t)result;
  return result;
}

id sub_1D2FAFB18()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D3000F18();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  type metadata accessor for UniversalSuggestionsStoreCoreData();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v13 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    sub_1D3000EE8();

    unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v2, v7, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v15(v9, v2, v3);
      id v16 = objc_allocWithZone(MEMORY[0x1E4F1C120]);
      uint64_t v17 = (void *)sub_1D3000E78();
      id v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      if (v18) {
        return v18;
      }
      goto LABEL_7;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_1D2F1CD78((uint64_t)v2, &qword_1EBD63688);
LABEL_7:
  if (qword_1EA6980B0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1D3001918();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EA6998E0);
  id v20 = sub_1D30018F8();
  os_log_type_t v21 = sub_1D30020B8();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_1D2F05000, v20, v21, "UniversalSuggestionsCoreData: Error loading data base model from bundle", v22, 2u);
    MEMORY[0x1D942F2D0](v22, -1, -1);
  }

  return 0;
}

uint64_t sub_1D2FAFEAC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  if (!a2)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1D3001918();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBD65778);
    uint64_t v9 = sub_1D30018F8();
    os_log_type_t v10 = sub_1D30020B8();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_1D2F05000, v9, v10, "Store path unavailable, possibly no access to data container", v11, 2u);
      MEMORY[0x1D942F2D0](v11, -1, -1);
    }

    goto LABEL_9;
  }
  id v7 = sub_1D2FBA0C8(a1, a2, a3 & 1);
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(void *)(v6 + 16) = v7;
  *(void *)(v6 + 24) = objc_msgSend(v7, sel_newBackgroundContext);
  return v6;
}

uint64_t sub_1D2FB000C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  if (!a2)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D3001918();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65778);
    id v7 = sub_1D30018F8();
    os_log_type_t v8 = sub_1D30020B8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1D2F05000, v7, v8, "Store path unavailable, possibly no access to data container", v9, 2u);
      MEMORY[0x1D942F2D0](v9, -1, -1);
    }

    goto LABEL_9;
  }
  id v5 = sub_1D2FBA0C8(a1, a2, a3 & 1);
  swift_bridgeObjectRelease();
  if (!v5)
  {
LABEL_9:
    type metadata accessor for UniversalSuggestionsStoreCoreData();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(void *)(v3 + 16) = v5;
  *(void *)(v3 + 24) = objc_msgSend(v5, sel_newBackgroundContext);
  return v4;
}

uint64_t UniversalSuggestionsStoreCoreData.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 120))(a1, a2, 0);
}

uint64_t sub_1D2FB015C()
{
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = off_1E6970000;
  id v2 = objc_msgSend(*(id *)(v0 + 16), sel_persistentStoreCoordinator);
  id v3 = objc_msgSend(v2, sel_persistentStores);

  sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD5FC58);
  unint64_t v4 = sub_1D3001DC8();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      if (v5 < 1) {
        __break(1u);
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          id v8 = (id)MEMORY[0x1D942E3A0](i, v4);
        }
        else {
          id v8 = *(id *)(v4 + 8 * i + 32);
        }
        uint64_t v9 = v8;
        id v10 = [*(id *)(v17 + 16) (SEL)v1[367]];
        v18[0] = 0;
        unsigned int v11 = objc_msgSend(v10, sel_removePersistentStore_error_, v9, v18);

        if (v11)
        {
          id v7 = v18[0];
        }
        else
        {
          id v12 = v18[0];
          uint64_t v13 = v1;
          uint64_t v14 = sub_1D3000DF8();

          swift_willThrow();
          unint64_t v15 = (void *)v14;
          uint64_t v1 = v13;
        }
      }
      return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_1D2FB0394(void *a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    swift_beginAccess();
    *(unsigned char *)(a3 + 16) = 0;
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D3001918();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EA6998E0);
    id v7 = a2;
    id v8 = a1;
    id v9 = a2;
    id v10 = v8;
    unsigned int v11 = sub_1D30018F8();
    os_log_type_t v12 = sub_1D30020B8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)uint64_t v13 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
      uint64_t v16 = sub_1D30022E8();
      sub_1D2F09508(v16, v17, &v19);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      *(_WORD *)(v13 + 12) = 2112;
      id v18 = v10;
      sub_1D3002318();
      *uint64_t v14 = v10;

      _os_log_impl(&dword_1D2F05000, v11, v12, "UniversalSuggestionsCoreData: Unable to load persistent stores: %s : %@", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v15, -1, -1);
      MEMORY[0x1D942F2D0](v13, -1, -1);
    }
    else
    {
    }
  }
}

id sub_1D2FB0610()
{
  return *(id *)(v0 + 16);
}

id sub_1D2FB0618()
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 24);
  v17[0] = 0;
  id v2 = objc_msgSend(v1, sel_save_, v17);
  if (v2)
  {
    id v3 = v17[0];
  }
  else
  {
    id v4 = v17[0];
    uint64_t v5 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D3001918();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EA6998E0);
    id v7 = v5;
    id v8 = v5;
    id v9 = sub_1D30018F8();
    os_log_type_t v10 = sub_1D30020B8();
    if (os_log_type_enabled(v9, v10))
    {
      unsigned int v11 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v12 = (void *)swift_slowAlloc();
      v17[0] = v12;
      *(_DWORD *)unsigned int v11 = 136315138;
      id v13 = v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v14 = sub_1D3001BC8();
      sub_1D2F09508(v14, v15, (uint64_t *)v17);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v9, v10, "UniversalSuggestionsCoreData: Unresolved error in saveChanges error=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v12, -1, -1);
      MEMORY[0x1D942F2D0](v11, -1, -1);
    }
    else
    {
    }
  }
  return v2;
}

uint64_t sub_1D2FB0878()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1D2FB09C0;
  *(void *)(v2 + 24) = v0;
  v6[4] = sub_1D2FB09D4;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1D2F3FE34;
  v6[3] = &block_descriptor_10;
  id v3 = _Block_copy(v6);
  id v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_performBlockAndWait_, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2FB09C4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2FB09D4()
{
  return sub_1D2F3FE0C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_1D2FB09F4()
{
  v25[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C018]), sel_initWithFetchRequest_, v3);
  uint64_t v5 = *(void **)(v0 + 24);
  v25[0] = 0;
  id v6 = objc_msgSend(v5, sel_executeRequest_error_, v4, v25);
  if (v6)
  {
    id v7 = v6;
    id v8 = v25[0];

    if ((sub_1D2FB0618() & 1) == 0)
    {
      if (qword_1EA6980B0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1D3001918();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EA6998E0);
      os_log_type_t v10 = sub_1D30018F8();
      os_log_type_t v11 = sub_1D30020B8();
      if (os_log_type_enabled(v10, v11))
      {
        os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v12 = 0;
        _os_log_impl(&dword_1D2F05000, v10, v11, "UniversalSuggestionsCoreData: Cannot reset store, failed to save", v12, 2u);
        MEMORY[0x1D942F2D0](v12, -1, -1);

        return;
      }
    }
  }
  else
  {
    id v13 = v25[0];
    uint64_t v14 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D3001918();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EA6998E0);
    id v16 = v14;
    id v17 = v14;
    id v18 = sub_1D30018F8();
    os_log_type_t v19 = sub_1D30020B8();
    if (!os_log_type_enabled(v18, v19))
    {

      return;
    }
    id v20 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v21 = (void *)swift_slowAlloc();
    v25[0] = v21;
    *(_DWORD *)id v20 = 136315138;
    id v22 = v14;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    uint64_t v23 = sub_1D3001BC8();
    sub_1D2F09508(v23, v24, (uint64_t *)v25);
    sub_1D3002318();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D2F05000, v18, v19, "UniversalSuggestionsCoreData: Cannot reset store, error=%s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v21, -1, -1);
    MEMORY[0x1D942F2D0](v20, -1, -1);
  }
}

uint64_t sub_1D2FB0DAC()
{
  uint64_t v1 = type metadata accessor for UniversalCandidate(0);
  uint64_t v26 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1D30010A8();
  uint64_t v4 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  id v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for UniversalSuggestion(0);
  uint64_t v7 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(id *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA88);
  sub_1D3002228();

  uint64_t v11 = v37;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v29 = *(void *)(v11 + 16);
  if (v29)
  {
    uint64_t v28 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v34 = v4 + 32;
    uint64_t v27 = *(void *)(v7 + 72);
    v24[1] = v11;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    char v35 = v6;
    id v25 = v9;
    do
    {
      sub_1D2FB9E54(v28 + v27 * v12, (uint64_t)v9, type metadata accessor for UniversalSuggestion);
      uint64_t v13 = *(void *)&v9[*(int *)(v30 + 24)];
      int64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        uint64_t v32 = v12;
        uint64_t v36 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1D2F0A0E0(0, v14, 0);
        uint64_t v15 = *(unsigned __int8 *)(v26 + 80);
        uint64_t v31 = v13;
        uint64_t v16 = v13 + ((v15 + 32) & ~v15);
        uint64_t v17 = *(void *)(v26 + 72);
        uint64_t v18 = v33;
        do
        {
          sub_1D2FB9E54(v16, (uint64_t)v3, type metadata accessor for UniversalCandidate);
          (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v3, v18);
          sub_1D2FB9EBC((uint64_t)v3, type metadata accessor for UniversalCandidate);
          uint64_t v19 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D2F0A0E0(0, *(void *)(v19 + 16) + 1, 1);
            uint64_t v18 = v33;
            uint64_t v19 = v36;
          }
          unint64_t v21 = *(void *)(v19 + 16);
          unint64_t v20 = *(void *)(v19 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_1D2F0A0E0(v20 > 1, v21 + 1, 1);
            uint64_t v18 = v33;
            uint64_t v19 = v36;
          }
          *(void *)(v19 + 16) = v21 + 1;
          unint64_t v22 = v19
              + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
              + *(void *)(v4 + 72) * v21;
          id v6 = v35;
          (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22, v35, v18);
          uint64_t v36 = v19;
          v16 += v17;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        uint64_t v9 = v25;
        uint64_t v12 = v32;
      }
      else
      {
        uint64_t v19 = MEMORY[0x1E4FBC860];
      }
      ++v12;
      sub_1D2FB9EBC((uint64_t)v9, type metadata accessor for UniversalSuggestion);
      sub_1D2F9D248(v19);
    }
    while (v12 != v29);
    swift_bridgeObjectRelease_n();
    return v37;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t sub_1D2FB11F4()
{
  id v1 = *(id *)(v0 + 24);
  sub_1D3002228();

  return v3;
}

uint64_t sub_1D2FB1264(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2FB29F4(a1);
  if (!v7) {
    goto LABEL_9;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_candidateForUniversalSuggestion);
  if (!v9)
  {

LABEL_9:
    unsigned __int8 v21 = 0;
    return v21 & 1;
  }
  uint64_t v10 = qword_1EA6980B0;
  id v11 = v9;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D3001918();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EA6998E0);
  id v13 = v11;
  int64_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D30020A8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    id v18 = objc_msgSend(v13, sel_id);
    if (v18)
    {
      uint64_t v19 = v18;
      sub_1D3001068();

      uint64_t v20 = sub_1D30010A8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 0, 1, v20);
    }
    else
    {
      uint64_t v22 = sub_1D30010A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
    }
    uint64_t v23 = sub_1D3001BC8();
    uint64_t v26 = sub_1D2F09508(v23, v24, &v27);
    sub_1D3002318();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v14, v15, "Deleting universal suggestion candidate: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v17, -1, -1);
    MEMORY[0x1D942F2D0](v16, -1, -1);
  }
  else
  {
  }
  objc_msgSend(*(id *)(v2 + 24), sel_deleteObject_, v13);
  unsigned __int8 v21 = sub_1D2FB0618();

  return v21 & 1;
}

uint64_t sub_1D2FB156C()
{
  return sub_1D2FB1BFC(&qword_1EBD5EA88);
}

uint64_t sub_1D2FB158C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D2FB15BC();
  *a1 = result;
  return result;
}

uint64_t sub_1D2FB15BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBD5E810);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UniversalSuggestion(0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v34 - v9;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D3005C00;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v17 = objc_msgSend(v15, sel_initWithKey_ascending_, v16, 1);

  *(void *)(v14 + 32) = v17;
  uint64_t v39 = v14;
  sub_1D3001DE8();
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63330);
  id v18 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v18);

  uint64_t v19 = *(void **)(v1 + 24);
  type metadata accessor for UniversalSuggestionCoreDataRecord();
  id v20 = v19;
  unint64_t v21 = sub_1D3002238();
  uint64_t v22 = v38;

  if (!(v21 >> 62))
  {
    uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_3;
    }
LABEL_18:

    swift_bridgeObjectRelease();
    unint64_t v28 = MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease();
    return v28;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v23 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v23 >= 1)
  {
    uint64_t v25 = v22;
    id v35 = v13;
    uint64_t v36 = v10;
    uint64_t v26 = 0;
    uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    unint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v37 = v5;
    do
    {
      if ((v21 & 0xC000000000000001) != 0) {
        id v29 = (id)MEMORY[0x1D942E3A0](v26, v21);
      }
      else {
        id v29 = *(id *)(v21 + 8 * v26 + 32);
      }
      uint64_t v30 = v29;
      sub_1D2F87228((uint64_t)v4);

      if ((*v27)(v4, 1, v5) == 1)
      {
        sub_1D2F1CD78((uint64_t)v4, qword_1EBD5E810);
      }
      else
      {
        uint64_t v31 = (uint64_t)v36;
        sub_1D2FB9F84((uint64_t)v4, (uint64_t)v36, type metadata accessor for UniversalSuggestion);
        sub_1D2FB9F84(v31, (uint64_t)v8, type metadata accessor for UniversalSuggestion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v28 = sub_1D2F28D50(0, *(void *)(v28 + 16) + 1, 1, v28);
        }
        unint64_t v33 = *(void *)(v28 + 16);
        unint64_t v32 = *(void *)(v28 + 24);
        if (v33 >= v32 >> 1) {
          unint64_t v28 = sub_1D2F28D50(v32 > 1, v33 + 1, 1, v28);
        }
        *(void *)(v28 + 16) = v33 + 1;
        sub_1D2FB9F84((uint64_t)v8, v28+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v33, type metadata accessor for UniversalSuggestion);
        uint64_t v5 = v37;
      }
      ++v26;
    }
    while (v23 != v26);

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2FB1BDC()
{
  return sub_1D2FB1BFC(&qword_1EA6998F8);
}

uint64_t sub_1D2FB1BFC(uint64_t *a1)
{
  id v3 = *(id *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_1D3002228();

  return v5;
}

uint64_t sub_1D2FB1C68()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699900);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UniversalRuntimeSuggestion(0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v34 - v9;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D3005C00;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v17 = objc_msgSend(v15, sel_initWithKey_ascending_, v16, 1);

  *(void *)(v14 + 32) = v17;
  uint64_t v39 = v14;
  sub_1D3001DE8();
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63330);
  id v18 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v18);

  uint64_t v19 = *(void **)(v1 + 24);
  type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  id v20 = v19;
  unint64_t v21 = sub_1D3002238();
  uint64_t v22 = v38;

  if (!(v21 >> 62))
  {
    uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_3;
    }
LABEL_18:

    swift_bridgeObjectRelease();
    unint64_t v28 = MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease();
    return v28;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v23 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v23 >= 1)
  {
    uint64_t v25 = v22;
    id v35 = v13;
    uint64_t v36 = v10;
    uint64_t v26 = 0;
    uint64_t v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    unint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v37 = v5;
    do
    {
      if ((v21 & 0xC000000000000001) != 0) {
        id v29 = (id)MEMORY[0x1D942E3A0](v26, v21);
      }
      else {
        id v29 = *(id *)(v21 + 8 * v26 + 32);
      }
      uint64_t v30 = v29;
      sub_1D2F8675C(v4);

      if ((*v27)(v4, 1, v5) == 1)
      {
        sub_1D2F1CD78((uint64_t)v4, &qword_1EA699900);
      }
      else
      {
        uint64_t v31 = (uint64_t)v36;
        sub_1D2FB9F84((uint64_t)v4, (uint64_t)v36, type metadata accessor for UniversalRuntimeSuggestion);
        sub_1D2FB9F84(v31, (uint64_t)v8, type metadata accessor for UniversalRuntimeSuggestion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v28 = sub_1D2F28D84(0, *(void *)(v28 + 16) + 1, 1, v28);
        }
        unint64_t v33 = *(void *)(v28 + 16);
        unint64_t v32 = *(void *)(v28 + 24);
        if (v33 >= v32 >> 1) {
          unint64_t v28 = sub_1D2F28D84(v32 > 1, v33 + 1, 1, v28);
        }
        *(void *)(v28 + 16) = v33 + 1;
        sub_1D2FB9F84((uint64_t)v8, v28+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v33, type metadata accessor for UniversalRuntimeSuggestion);
        uint64_t v5 = v37;
      }
      ++v26;
    }
    while (v23 != v26);

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_1D2FB2288(uint64_t a1)
{
}

void sub_1D2FB22A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v5 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  uint64_t v28 = v3;
  swift_retain();
  uint64_t v7 = sub_1D2F59298();
  unint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D3001918();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EA6998E0);
    uint64_t v16 = sub_1D30018F8();
    os_log_type_t v17 = sub_1D30020B8();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_16;
    }
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    uint64_t v19 = "UniversalSuggestionsCoreData: Unable to extract name from key entity. Skipping suggestion search.";
    goto LABEL_15;
  }
  if (qword_1EA6980B0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D3001918();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EA6998E0);
  swift_bridgeObjectRetain_n();
  id v11 = sub_1D30018F8();
  os_log_type_t v12 = sub_1D30020A8();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = v14;
    *(_DWORD *)id v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2F09508(v7, v9, &v28);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v11, v12, "UniversalSuggestionsCoreData: Searching for universal suggestion with name==%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v14, -1, -1);
    MEMORY[0x1D942F2D0](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D2F0BCB8(0, &qword_1EBD5FC50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD20);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1D3004370;
  *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v20 + 64) = sub_1D2F458C8();
  *(void *)(v20 + 32) = v7;
  *(void *)(v20 + 40) = v9;
  unint64_t v21 = (void *)sub_1D3002058();
  objc_msgSend(v6, sel_setPredicate_, v21);

  uint64_t v22 = *(void **)(v2 + 24);
  type metadata accessor for UniversalSuggestionCoreDataRecord();
  id v23 = v22;
  unint64_t v24 = sub_1D3002238();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v26 > 1) {
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v25 > 1)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_1D30018F8();
      os_log_type_t v17 = sub_1D30020B8();
      if (!os_log_type_enabled(v16, v17))
      {
LABEL_16:

        return;
      }
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      uint64_t v19 = "More than one suggestion records have been found with the same key name. Skipping search.";
LABEL_15:
      _os_log_impl(&dword_1D2F05000, v16, v17, v19, v18, 2u);
      MEMORY[0x1D942F2D0](v18, -1, -1);
      goto LABEL_16;
    }
  }
  if (!v25) {
    goto LABEL_23;
  }
  if ((v24 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D942E3A0](0, v24);
    goto LABEL_23;
  }
  if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v27 = *(id *)(v24 + 32);
LABEL_23:
    swift_bridgeObjectRelease();

    return;
  }
  __break(1u);
}

void sub_1D2FB28EC()
{
  id v1 = *(id *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
  sub_1D3002228();
}

void sub_1D2FB2964(uint64_t a1@<X1>, char *a2@<X8>)
{
  sub_1D2FB29F4(a1);
  if (v3)
  {
    id v4 = v3;
    sub_1D2F85F00(a2);
  }
  else
  {
    uint64_t v5 = type metadata accessor for UniversalCandidate(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

void sub_1D2FB29F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v9 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  if (qword_1EA6980B0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1D3001918();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA6998E0);
  id v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v37 = a1;
  v13(v7, a1, v4);
  uint64_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D30020A8();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v36 = v12;
  if (v16)
  {
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v39 = v18;
    uint64_t v34 = v2;
    id v35 = v10;
    *(_DWORD *)os_log_type_t v17 = 136315138;
    sub_1D2FB9E0C(&qword_1EA698E08, MEMORY[0x1E4F27990]);
    uint64_t v19 = sub_1D3002738();
    uint64_t v38 = sub_1D2F09508(v19, v20, &v39);
    uint64_t v2 = v34;
    id v10 = v35;
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1D2F05000, v14, v15, "UniversalSuggestionsCoreData: Searching for universal candidate with id==%s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v18, -1, -1);
    MEMORY[0x1D942F2D0](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  sub_1D2F0BCB8(0, &qword_1EBD5FC50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD20);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1D3004370;
  uint64_t v22 = sub_1D3001048();
  *(void *)(v21 + 56) = sub_1D2F0BCB8(0, &qword_1EA698DF8);
  *(void *)(v21 + 64) = sub_1D2FB9F1C();
  *(void *)(v21 + 32) = v22;
  id v23 = (void *)sub_1D3002058();
  objc_msgSend(v10, sel_setPredicate_, v23);

  unint64_t v24 = *(void **)(v2 + 24);
  type metadata accessor for UniversalCandidateCoreDataRecord();
  id v25 = v24;
  unint64_t v26 = sub_1D3002238();

  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v31 > 1) {
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1D30025A8();
    swift_bridgeObjectRelease();
LABEL_13:
    if (v27)
    {
      if ((v26 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1D942E3A0](0, v26);
      }
      else
      {
        if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v32 = *(id *)(v26 + 32);
      }
    }
    swift_bridgeObjectRelease();

    return;
  }
  unint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v27 <= 1) {
    goto LABEL_13;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1D30018F8();
  os_log_type_t v29 = sub_1D30020B8();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_1D2F05000, v28, v29, "More than one candidate records have been found with the same id. Skipping search.", v30, 2u);
    MEMORY[0x1D942F2D0](v30, -1, -1);
  }
}

void sub_1D2FB3070(uint64_t a1)
{
}

void sub_1D2FB3090(uint64_t a1, uint64_t *a2)
{
  id v4 = *(id *)(v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1D3002228();
}

void sub_1D2FB3100(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t *)@<X2>, void (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v8 = a2(&v11);
  if (v8)
  {
    unint64_t v9 = (void *)v8;
    a3();
  }
  else
  {
    uint64_t v10 = a4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a5, 1, 1, v10);
  }
}

uint64_t sub_1D2FB31B0()
{
  swift_retain();
  uint64_t v0 = sub_1D2F59298();
  unint64_t v2 = v1;
  swift_release();
  if (v2)
  {
    sub_1D2FB32E8(v0, v2);
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1D3001918();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EA6998E0);
    uint64_t v7 = sub_1D30018F8();
    os_log_type_t v8 = sub_1D30020B8();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v9 = 0;
      _os_log_impl(&dword_1D2F05000, v7, v8, "UniversalSuggestionsCoreData: Unable to extract name from key entity. Skipping suggestion search.", v9, 2u);
      MEMORY[0x1D942F2D0](v9, -1, -1);
    }

    return 0;
  }
}

void sub_1D2FB32E8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v7 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  if (qword_1EA6980B0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1D3001918();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EA6998E0);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1D30018F8();
  os_log_type_t v11 = sub_1D30020A8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2F09508(a1, a2, &v25);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v10, v11, "UniversalSuggestionsCoreData: Searching for universal runtime suggestion with name==%s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v13, -1, -1);
    MEMORY[0x1D942F2D0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D2F0BCB8(0, &qword_1EBD5FC50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD5FD20);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D3004370;
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 64) = sub_1D2F458C8();
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  swift_bridgeObjectRetain();
  os_log_type_t v15 = (void *)sub_1D3002058();
  objc_msgSend(v8, sel_setPredicate_, v15);

  BOOL v16 = *(void **)(v3 + 24);
  type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  id v17 = v16;
  unint64_t v18 = sub_1D3002238();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v23 > 1) {
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1D30025A8();
    swift_bridgeObjectRelease();
LABEL_13:
    if (v19)
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1D942E3A0](0, v18);
      }
      else
      {
        if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v24 = *(id *)(v18 + 32);
      }
    }
    swift_bridgeObjectRelease();

    return;
  }
  unint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v19 <= 1) {
    goto LABEL_13;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  unint64_t v20 = sub_1D30018F8();
  os_log_type_t v21 = sub_1D30020B8();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_1D2F05000, v20, v21, "More than one runtime suggestion records have been found with the same key name. Skipping search.", v22, 2u);
    MEMORY[0x1D942F2D0](v22, -1, -1);
  }
}

void sub_1D2FB3880()
{
  unint64_t v1 = *(void **)(v0 + 24);
  type metadata accessor for UniversalSuggestionCandidateDonationResult();
  id v2 = v1;
  sub_1D3002228();
}

uint64_t sub_1D2FB3908@<X0>(uint64_t *a1@<X0>, unsigned int (**a2)(uint64_t *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v348 = a2;
  uint64_t v336 = a3;
  uint64_t v315 = type metadata accessor for UniversalSuggestion(0);
  MEMORY[0x1F4188790](v315);
  v341 = (char *)&v292 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = type metadata accessor for UniversalSuggestionCandidateDonationResult();
  MEMORY[0x1F4188790](v335);
  uint64_t v311 = (uint64_t)&v292 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v320 = type metadata accessor for UniversalSuggestionCandidate(0);
  MEMORY[0x1F4188790](v320);
  v310 = (char *)&v292 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v328 = type metadata accessor for UniversalRuntimeSuggestion(0);
  MEMORY[0x1F4188790](v328);
  v329 = (char *)&v292 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v345 = sub_1D30010A8();
  uint64_t v331 = *(void *)(v345 - 8);
  MEMORY[0x1F4188790](v345);
  v302 = (char *)&v292 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699170);
  uint64_t v11 = MEMORY[0x1F4188790](v319);
  uint64_t v308 = (uint64_t)&v292 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v318 = (uint64_t)&v292 - v13;
  uint64_t v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v14 = MEMORY[0x1F4188790](v343);
  BOOL v16 = (char *)&v292 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  v305 = (char *)&v292 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v313 = (char *)&v292 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v307 = (char *)&v292 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v303 = (uint64_t)&v292 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v304 = (char *)&v292 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v314 = (uint64_t)&v292 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v321 = (uint64_t)&v292 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v301 = (char *)&v292 - v32;
  MEMORY[0x1F4188790](v31);
  v342 = (char *)&v292 - v33;
  uint64_t v317 = sub_1D3001018();
  v338.n128_u64[0] = *(void *)(v317 - 8);
  MEMORY[0x1F4188790](v317);
  v316 = (char *)&v292 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699910);
  uint64_t v337 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  v344 = (char *)&v292 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699918);
  uint64_t v38 = MEMORY[0x1F4188790](v37 - 8);
  v346 = (char *)&v292 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v41 = (uint64_t *)((char *)&v292 - v40);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
  uint64_t v43 = MEMORY[0x1F4188790](v42 - 8);
  uint64_t v309 = (uint64_t)&v292 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v325 = (uint64_t)&v292 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  v306 = (char *)&v292 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v334 = (uint64_t)&v292 - v50;
  MEMORY[0x1F4188790](v49);
  uint64_t v52 = (char *)&v292 - v51;
  uint64_t v347 = type metadata accessor for UniversalCandidate(0);
  uint64_t v351 = *(void *)(v347 - 8);
  uint64_t v53 = MEMORY[0x1F4188790](v347);
  uint64_t v55 = (char *)&v292 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x1F4188790](v53);
  v323 = (char *)&v292 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  uint64_t v324 = (uint64_t)&v292 - v59;
  uint64_t v60 = MEMORY[0x1F4188790](v58);
  uint64_t v312 = (uint64_t)&v292 - v61;
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  uint64_t v332 = (uint64_t)&v292 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  v352 = (char *)&v292 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  v350 = (unint64_t *)((char *)&v292 - v67);
  MEMORY[0x1F4188790](v66);
  v349 = (char *)&v292 - v68;
  uint64_t v69 = sub_1D3000E08();
  uint64_t v339 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v71 = (char *)&v292 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = *a1;
  v333 = *v348;
  *(void *)&long long v356 = v72;
  swift_retain();
  uint64_t v327 = sub_1D2F59298();
  uint64_t v74 = v73;
  swift_release();
  if (!v74)
  {
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v80 = sub_1D3001918();
    __swift_project_value_buffer(v80, (uint64_t)qword_1EA6998E0);
    uint64_t v81 = sub_1D30018F8();
    os_log_type_t v82 = sub_1D30020A8();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl(&dword_1D2F05000, v81, v82, "UniversalSuggestionsCoreData: Unable to extract name from key entity. Skipping suggestion donation.", v83, 2u);
      MEMORY[0x1D942F2D0](v83, -1, -1);
    }

    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v326 = v74;
  uint64_t v322 = v72;
  *(void *)&long long v356 = v72;
  sub_1D2FB22A8((uint64_t *)&v356);
  if (!v75)
  {
    sub_1D3001098();
    uint64_t v95 = v347;
    *(void *)&v55[*(int *)(v347 + 20)] = v333;
    *(void *)&v55[*(int *)(v95 + 24)] = 0x3FC999999999999ALL;
    *(void *)&v55[*(int *)(v95 + 28)] = 0;
    unint64_t v96 = *(void **)(v4 + 24);
    swift_retain();
    id v97 = v96;
    id v98 = sub_1D2F85A58((uint64_t)v97);

    if (v98)
    {
      id v99 = v341;
      sub_1D3001098();
      uint64_t v100 = v315;
      id v101 = (uint64_t *)&v99[*(int *)(v315 + 20)];
      uint64_t v102 = v327;
      uint64_t v103 = v326;
      *id v101 = v327;
      v101[1] = v103;
      *(void *)&v99[*(int *)(v100 + 24)] = MEMORY[0x1E4FBC860];
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D3005C00;
      *(void *)(inited + 32) = v98;
      *(void *)&long long v356 = inited;
      swift_bridgeObjectRetain();
      uint64_t v330 = v4;
      sub_1D3001DE8();
      unint64_t v105 = v356;
      id v106 = v97;
      id v107 = v98;
      unint64_t v108 = (void *)sub_1D2F870C8((uint64_t)v106, v105);
      swift_bridgeObjectRelease();

      sub_1D2FB9EBC((uint64_t)v99, type metadata accessor for UniversalSuggestion);
      uint64_t v109 = (uint64_t)v329;
      sub_1D3001098();
      uint64_t v110 = v328;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v351 + 56))(v109 + *(int *)(v328 + 24), 1, 1, v95);
      id v111 = (uint64_t *)(v109 + *(int *)(v110 + 20));
      uint64_t *v111 = v102;
      v111[1] = v103;
      *(unsigned char *)(v109 + *(int *)(v110 + 28)) = 1;
      type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
      id v112 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v113 = v106;
      id v114 = objc_msgSend(v112, sel_initWithContext_, v113);
      id v115 = (void *)sub_1D3001048();
      objc_msgSend(v114, sel_setId_, v115);

      uint64_t v116 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      objc_msgSend(v114, sel_setQueryEntityName_, v116);

      objc_msgSend(v114, sel_setTopCandidate_, v107);
      objc_msgSend(v107, sel_setTopCandidateForUniversalRuntimeSuggestion_, v114);
      objc_msgSend(v114, sel_setNeedsDisambiguation_, 1);

      sub_1D2FB9EBC(v109, type metadata accessor for UniversalRuntimeSuggestion);
      LOBYTE(v116) = sub_1D2FB0618();

      if (v116)
      {
        uint64_t v117 = v336;
        sub_1D2FB9F84((uint64_t)v55, v336 + *(int *)(v320 + 24), type metadata accessor for UniversalCandidate);
        *(void *)(v117 + 8) = v322;
        *(unsigned char *)uint64_t v117 = 1;
LABEL_124:
        swift_storeEnumTagMultiPayload();
        return swift_retain();
      }
      sub_1D2FB9EBC((uint64_t)v55, type metadata accessor for UniversalCandidate);
    }
    else
    {
      sub_1D2FB9EBC((uint64_t)v55, type metadata accessor for UniversalCandidate);
      swift_bridgeObjectRelease();
    }
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v340 = v35;
  uint64_t v330 = v4;
  v341 = v75;
  id v76 = objc_msgSend(v341, sel_candidates);
  unint64_t v77 = MEMORY[0x1E4FBC860];
  v299 = v16;
  if (v76)
  {
    unint64_t v358 = MEMORY[0x1E4FBC860];
    id v78 = v76;
    sub_1D3002088();

    sub_1D2FB9E0C(&qword_1EBD610D8, MEMORY[0x1E4F27660]);
    sub_1D3002308();
    while (v357)
    {
      sub_1D2F0B9B4(&v356, &v355);
      sub_1D2F0BD44((uint64_t)&v355, (uint64_t)v353);
      type metadata accessor for UniversalCandidateCoreDataRecord();
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v354 = 0;
      }
      uint64_t v79 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v355);
      if (v354)
      {
        MEMORY[0x1D942DCC0](v79);
        if (*(void *)((v358 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v358 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D3001E28();
        }
        sub_1D3001E68();
        sub_1D3001DE8();
      }
      sub_1D3002308();
    }
    (*(void (**)(char *, uint64_t))(v339 + 8))(v71, v69);
    unint64_t v85 = v358;

    if (v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_1D30025A8();
      if (v86) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v86 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v86)
      {
LABEL_22:
        if (v86 < 1)
        {
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
          goto LABEL_185;
        }
        uint64_t v87 = 0;
        id v88 = (unsigned int (**)(char *, uint64_t, uint64_t))(v351 + 48);
        unint64_t v77 = MEMORY[0x1E4FBC860];
        do
        {
          if ((v85 & 0xC000000000000001) != 0) {
            id v89 = (id)MEMORY[0x1D942E3A0](v87, v85);
          }
          else {
            id v89 = *(id *)(v85 + 8 * v87 + 32);
          }
          id v90 = v89;
          sub_1D2F85F00(v52);

          if ((*v88)(v52, 1, v347) == 1)
          {
            sub_1D2F1CD78((uint64_t)v52, &qword_1EA698AC0);
          }
          else
          {
            id v91 = v349;
            sub_1D2FB9F84((uint64_t)v52, (uint64_t)v349, type metadata accessor for UniversalCandidate);
            sub_1D2FB9F84((uint64_t)v91, (uint64_t)v350, type metadata accessor for UniversalCandidate);
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v92 = v77;
            }
            else {
              unint64_t v92 = sub_1D2F28D1C(0, *(void *)(v77 + 16) + 1, 1, v77);
            }
            unint64_t v94 = *(void *)(v92 + 16);
            unint64_t v93 = *(void *)(v92 + 24);
            if (v94 >= v93 >> 1) {
              unint64_t v92 = sub_1D2F28D1C(v93 > 1, v94 + 1, 1, v92);
            }
            *(void *)(v92 + 16) = v94 + 1;
            unint64_t v77 = v92;
            sub_1D2FB9F84((uint64_t)v350, v92+ ((*(unsigned __int8 *)(v351 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v351 + 80))+ *(void *)(v351 + 72) * v94, type metadata accessor for UniversalCandidate);
          }
          ++v87;
        }
        while (v86 != v87);
        goto LABEL_43;
      }
    }
    unint64_t v77 = MEMORY[0x1E4FBC860];
LABEL_43:
    swift_bridgeObjectRelease_n();
  }
  unint64_t v118 = *(void *)(v77 + 16);
  uint64_t v52 = v341;
  unint64_t v119 = (unint64_t *)v346;
  if (!v118)
  {
    swift_bridgeObjectRelease();
    unint64_t v193 = v323;
    sub_1D3001098();
    uint64_t v194 = v347;
    *(void *)&v193[*(int *)(v347 + 20)] = v333;
    *(void *)&v193[*(int *)(v194 + 24)] = 0x3FC999999999999ALL;
    *(void *)&v193[*(int *)(v194 + 28)] = 0;
    v195 = *(void **)(v330 + 24);
    swift_retain();
    id v196 = v195;
    id v197 = sub_1D2F85A58((uint64_t)v196);

    if (v197)
    {
      objc_msgSend(v52, sel_addCandidatesObject_, v197);
      uint64_t v198 = (uint64_t)v329;
      sub_1D3001098();
      uint64_t v199 = v328;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v351 + 56))(v198 + *(int *)(v328 + 24), 1, 1, v194);
      unint64_t v200 = (uint64_t *)(v198 + *(int *)(v199 + 20));
      uint64_t v201 = v326;
      *unint64_t v200 = v327;
      v200[1] = v201;
      *(unsigned char *)(v198 + *(int *)(v199 + 28)) = 1;
      type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
      id v202 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v203 = v196;
      id v204 = objc_msgSend(v202, sel_initWithContext_, v203);
      uint64_t v205 = (void *)sub_1D3001048();
      objc_msgSend(v204, sel_setId_, v205);

      uint64_t v206 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      objc_msgSend(v204, sel_setQueryEntityName_, v206);

      objc_msgSend(v204, sel_setTopCandidate_, v197);
      objc_msgSend(v197, sel_setTopCandidateForUniversalRuntimeSuggestion_, v204);
      objc_msgSend(v204, sel_setNeedsDisambiguation_, 1);

      sub_1D2FB9EBC(v198, type metadata accessor for UniversalRuntimeSuggestion);
      LOBYTE(v206) = sub_1D2FB0618();

      if (v206)
      {
        uint64_t v207 = v336;
        sub_1D2FB9F84((uint64_t)v323, v336 + *(int *)(v320 + 24), type metadata accessor for UniversalCandidate);
        *(void *)(v207 + 8) = v322;
        *(unsigned char *)uint64_t v207 = 1;
        goto LABEL_124;
      }
      sub_1D2FB9EBC((uint64_t)v323, type metadata accessor for UniversalCandidate);
    }
    else
    {
      sub_1D2FB9EBC((uint64_t)v193, type metadata accessor for UniversalCandidate);
      swift_bridgeObjectRelease();
    }
    return swift_storeEnumTagMultiPayload();
  }
  v350 = (unint64_t *)v77;
  *(void *)&long long v356 = v322;
  v323 = (char *)sub_1D2FB31B0();
  unint64_t v120 = *(__n128 (**)(void, void, void, void))(v351 + 56);
  uint64_t v315 = 1;
  uint64_t v295 = v351 + 56;
  v294 = (void (*)(void, void, void, void))v120;
  __n128 v121 = v120(v334, 1, 1, v347);
  v300 = 0;
  unint64_t v122 = 0;
  v349 = (char *)(v337 + 56);
  v348 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v337 + 48);
  uint64_t v339 = v331 + 56;
  v298 = (void (**)(char *, uint64_t))(v338.n128_u64[0] + 8);
  double v123 = 0.0;
  v121.n128_u64[0] = 134218242;
  __n128 v338 = v121;
  uint64_t v337 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v124 = v340;
LABEL_46:
  id v125 = v350;
  if (v122 == v118)
  {
LABEL_51:
    uint64_t v128 = 1;
    unint64_t v122 = v118;
    goto LABEL_52;
  }
  while (1)
  {
    if (v122 >= v125[2])
    {
      __break(1u);
      goto LABEL_182;
    }
    uint64_t v126 = (uint64_t)&v344[*(int *)(v124 + 48)];
    sub_1D2FB9E54((uint64_t)v125+ ((*(unsigned __int8 *)(v351 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v351 + 80))+ *(void *)(v351 + 72) * v122, v126, type metadata accessor for UniversalCandidate);
    uint64_t v127 = (uint64_t)v119 + *(int *)(v124 + 48);
    unint64_t *v119 = v122;
    sub_1D2FB9F84(v126, v127, type metadata accessor for UniversalCandidate);
    uint64_t v128 = 0;
    ++v122;
LABEL_52:
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))v349)(v119, v128, 1, v124);
    sub_1D2F80C04((uint64_t)v119, (uint64_t)v41, &qword_1EA699918);
    if ((*v348)(v41, 1, v124) == 1) {
      break;
    }
    uint64_t v129 = *v41;
    sub_1D2FB9F84((uint64_t)v41 + *(int *)(v124 + 48), (uint64_t)v352, type metadata accessor for UniversalCandidate);
    id v130 = objc_msgSend(v52, sel_candidates);
    if (v130)
    {
      unint64_t v131 = v130;
      id v132 = objc_msgSend(v130, sel_objectAtIndex_, v129);

      sub_1D3002398();
      swift_unknownObjectRelease();
      type metadata accessor for UniversalCandidateCoreDataRecord();
      if (swift_dynamicCast())
      {
        v297 = (char *)v355;
        uint64_t v148 = *(void *)&v352[*(int *)(v347 + 20)];
        swift_retain();
        unint64_t v149 = sub_1D30013D8();
        if (v149)
        {
          unint64_t v150 = v149;
          uint64_t v151 = v149 & 0xFFFFFFFFFFFFFF8;
          if (v149 >> 62)
          {
            if (sub_1D30025A8())
            {
LABEL_66:
              if ((v150 & 0xC000000000000001) != 0)
              {
                MEMORY[0x1D942E3A0](0, v150);
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v152 = *(void *)(v151 + 16);
                swift_bridgeObjectRelease();
                if (!v152) {
                  goto LABEL_183;
                }
              }
              unint64_t v292 = sub_1D2F593BC();
              if (v153)
              {
                uint64_t v296 = v153;
                *(void *)&long long v356 = v148;
                uint64_t v154 = sub_1D2F5970C();
                if (v155)
                {
                  *(void *)&long long v356 = v154;
                  *((void *)&v356 + 1) = v155;
                  swift_bridgeObjectRetain();
                  sub_1D3001C68();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v296 = *((void *)&v356 + 1);
                  unint64_t v292 = v356;
                }
LABEL_75:
                swift_retain();
                unint64_t v156 = sub_1D30013D8();
                unint64_t v293 = v118;
                if (v156)
                {
                  unint64_t v157 = v156;
                  uint64_t v158 = v156 & 0xFFFFFFFFFFFFFF8;
                  if (v156 >> 62)
                  {
                    if (sub_1D30025A8()) {
                      goto LABEL_78;
                    }
                  }
                  else if (*(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
LABEL_78:
                    if ((v157 & 0xC000000000000001) != 0)
                    {
                      MEMORY[0x1D942E3A0](0, v157);
                      swift_unknownObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      uint64_t v159 = *(void *)(v158 + 16);
                      swift_bridgeObjectRelease();
                      if (!v159) {
                        goto LABEL_184;
                      }
                    }
                    unint64_t v160 = v333;
                    unint64_t v161 = sub_1D2F593BC();
                    uint64_t v163 = v162;
                    if (v162 && (*(void *)&v356 = v160, uint64_t v164 = sub_1D2F5970C(), v165))
                    {
                      *(void *)&long long v356 = v164;
                      *((void *)&v356 + 1) = v165;
                      swift_bridgeObjectRetain();
                      sub_1D3001C68();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v163 = *((void *)&v356 + 1);
                      unint64_t v161 = v356;
                    }
                    else
                    {
                      swift_release();
                    }
                    uint64_t v52 = v341;
LABEL_89:
                    uint64_t v166 = v297;
                    if (v296)
                    {
                      if (v163)
                      {
                        if (v292 == v161 && v296 == v163)
                        {
                          swift_release();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
LABEL_104:
                          objc_msgSend(v166, sel_score, v292);
                          double v172 = v171 + 0.2;
                          if (v172 > 1.0) {
                            double v172 = 1.0;
                          }
                          objc_msgSend(v166, sel_setScore_, v172);
                          unint64_t v173 = v306;
                          sub_1D2F85F00(v306);
                          uint64_t v174 = v334;
                          sub_1D2F1CD78(v334, &qword_1EA698AC0);
                          uint64_t v166 = v297;
                          sub_1D2F80C04((uint64_t)v173, v174, &qword_1EA698AC0);
                          goto LABEL_107;
                        }
                        char v170 = sub_1D3002778();
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if (v170) {
                          goto LABEL_104;
                        }
LABEL_98:
                        if (qword_1EA6980A0 != -1) {
                          swift_once();
                        }
                        double v167 = *(double *)&qword_1EA6998D8;
                        objc_msgSend(v166, sel_score, v292);
                        double v169 = v168 + -0.2;
                        if (v167 > v169) {
                          double v169 = v167;
                        }
                        objc_msgSend(v166, sel_setScore_, v169);
LABEL_107:
                        unint64_t v119 = (unint64_t *)v346;
                        uint64_t v175 = v316;
                        sub_1D3000FF8();
                        sub_1D3000FE8();
                        double v177 = v176;
                        (*v298)(v175, v317);
                        objc_msgSend(v166, sel_setLastUpdated_, v177);
                        objc_msgSend(v52, sel_replaceObjectInCandidatesAtIndex_withObject_, v129, v166);
                        objc_msgSend(v166, sel_score);
                        if (v315)
                        {
                          double v123 = v178;
                          id v179 = v300;
                          unint64_t v118 = v293;
                        }
                        else
                        {
                          unint64_t v118 = v293;
                          if (v123 >= v178)
                          {
                            sub_1D2FB9EBC((uint64_t)v352, type metadata accessor for UniversalCandidate);

                            uint64_t v315 = 0;
                            goto LABEL_46;
                          }
                          objc_msgSend(v166, sel_score);
                          double v123 = v180;
                          id v179 = v300;
                          if (!v300) {
                            goto LABEL_114;
                          }
                          objc_msgSend(v300, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);
                        }

LABEL_114:
                        sub_1D2FB9EBC((uint64_t)v352, type metadata accessor for UniversalCandidate);
                        uint64_t v315 = 0;
                        v300 = v166;
                        goto LABEL_46;
                      }
                      swift_release();
                    }
                    else
                    {
                      swift_release();
                      if (!v163) {
                        goto LABEL_104;
                      }
                    }
                    swift_bridgeObjectRelease();
                    goto LABEL_98;
                  }
                  swift_release();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_release();
                }
                unint64_t v161 = 0;
                uint64_t v163 = 0;
                goto LABEL_89;
              }
LABEL_74:
              uint64_t v296 = 0;
              goto LABEL_75;
            }
          }
          else if (*(void *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_66;
          }
          swift_bridgeObjectRelease();
        }
        unint64_t v292 = 0;
        goto LABEL_74;
      }
    }
    unint64_t v133 = v118;
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v134 = sub_1D3001918();
    __swift_project_value_buffer(v134, (uint64_t)qword_1EA6998E0);
    uint64_t v135 = v52;
    int v136 = sub_1D30018F8();
    os_log_type_t v137 = sub_1D30020B8();
    if (os_log_type_enabled(v136, v137))
    {
      unint64_t v138 = v122;
      int v139 = v41;
      uint64_t v140 = swift_slowAlloc();
      uint64_t v141 = swift_slowAlloc();
      *(void *)&long long v356 = v141;
      *(_DWORD *)uint64_t v140 = v338.n128_u32[0];
      *(void *)(v140 + 4) = v129;
      *(_WORD *)(v140 + 12) = 2080;
      id v142 = objc_msgSend(v135, sel_id);
      if (v142)
      {
        uint64_t v143 = v142;
        uint64_t v144 = v342;
        sub_1D3001068();

        uint64_t v145 = 0;
      }
      else
      {
        uint64_t v145 = 1;
        uint64_t v144 = v342;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v339)(v144, v145, 1, v345);
      uint64_t v146 = sub_1D3001BC8();
      *(void *)(v140 + 14) = sub_1D2F09508(v146, v147, (uint64_t *)&v356);

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v136, v137, "UniversalSuggestionsCoreData: Could not retrieve the candidate record at position %ld in suggestion record with ID %s", (uint8_t *)v140, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v141, -1, -1);
      MEMORY[0x1D942F2D0](v140, -1, -1);

      sub_1D2FB9EBC((uint64_t)v352, type metadata accessor for UniversalCandidate);
      uint64_t v52 = v341;
      unint64_t v119 = (unint64_t *)v346;
      id v125 = v350;
      unint64_t v118 = v133;
      uint64_t v41 = v139;
      unint64_t v122 = v138;
      uint64_t v124 = v340;
      if (v122 == v133) {
        goto LABEL_51;
      }
    }
    else
    {

      sub_1D2FB9EBC((uint64_t)v352, type metadata accessor for UniversalCandidate);
      id v125 = v350;
      unint64_t v118 = v133;
      if (v122 == v133) {
        goto LABEL_51;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v181 = v325;
  sub_1D2F1CCAC(v334, v325, &qword_1EA698AC0);
  uint64_t v182 = *(unint64_t **)(v351 + 48);
  v183 = (int *)v347;
  v351 += 48;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v182)(v181, 1, v347) != 1)
  {
    uint64_t v208 = v181;
    uint64_t v209 = v312;
    sub_1D2FB9F84(v208, v312, type metadata accessor for UniversalCandidate);
    sub_1D2FB9F84(v209, v332, type metadata accessor for UniversalCandidate);
    uint64_t v185 = v330;
    uint64_t v192 = v321;
    uint64_t v190 = v326;
    v191 = v300;
    if (!v300)
    {
LABEL_173:
      v350 = v182;
      swift_bridgeObjectRelease();
      uint64_t v188 = 0;
      unsigned __int8 v219 = 1;
      goto LABEL_174;
    }
LABEL_126:
    uint64_t v188 = v191;
    goto LABEL_127;
  }
  sub_1D2F1CD78(v181, &qword_1EA698AC0);
  uint64_t v184 = v324;
  sub_1D3001098();
  *(void *)(v184 + v183[5]) = v333;
  *(void *)(v184 + v183[6]) = 0x3FC999999999999ALL;
  *(void *)(v184 + v183[7]) = 0;
  sub_1D2FB9E54(v184, v332, type metadata accessor for UniversalCandidate);
  uint64_t v185 = v330;
  os_log_type_t v186 = *(void **)(v330 + 24);
  swift_retain();
  id v187 = v186;
  uint64_t v188 = (char *)sub_1D2F85A58((uint64_t)v187);

  if (!v188)
  {
    swift_bridgeObjectRelease();
    if (qword_1EA6980B0 == -1)
    {
LABEL_134:
      uint64_t v228 = sub_1D3001918();
      __swift_project_value_buffer(v228, (uint64_t)qword_1EA6998E0);
      uint64_t v229 = v52;
      unint64_t v230 = sub_1D30018F8();
      os_log_type_t v231 = sub_1D30020B8();
      BOOL v232 = os_log_type_enabled(v230, v231);
      v233 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v339;
      if (v232)
      {
        v234 = (uint8_t *)swift_slowAlloc();
        uint64_t v235 = swift_slowAlloc();
        *(void *)&long long v356 = v235;
        *(_DWORD *)v234 = 136315138;
        id v236 = objc_msgSend(v229, sel_id);
        if (v236)
        {
          uint64_t v237 = v236;
          os_log_t v238 = v301;
          sub_1D3001068();

          uint64_t v239 = 0;
        }
        else
        {
          uint64_t v239 = 1;
          os_log_t v238 = v301;
        }
        (*v233)(v238, v239, 1, v345);
        uint64_t v290 = sub_1D3001BC8();
        *(void *)&long long v355 = sub_1D2F09508(v290, v291, (uint64_t *)&v356);
        sub_1D3002318();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v230, v231, "UniversalSuggestionsCoreData: Could not add candidate to suggestion record with ID %s", v234, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v235, -1, -1);
        MEMORY[0x1D942F2D0](v234, -1, -1);
      }
      else
      {
      }
      sub_1D2FB9EBC(v324, type metadata accessor for UniversalCandidate);
      uint64_t v289 = v332;
      goto LABEL_180;
    }
LABEL_185:
    swift_once();
    goto LABEL_134;
  }
  objc_msgSend(v52, sel_addCandidatesObject_, v188);
  objc_msgSend(v188, sel_score);
  uint64_t v190 = v326;
  v191 = v300;
  if (v315)
  {

    sub_1D2FB9EBC(v324, type metadata accessor for UniversalCandidate);
    uint64_t v192 = v321;
    goto LABEL_127;
  }
  uint64_t v192 = v321;
  if (v123 >= v189)
  {
    objc_msgSend(v188, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);

    sub_1D2FB9EBC(v324, type metadata accessor for UniversalCandidate);
    if (!v191) {
      goto LABEL_173;
    }
    goto LABEL_126;
  }
  objc_msgSend(v188, sel_score);
  if (v191)
  {
    objc_msgSend(v191, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);
  }
  sub_1D2FB9EBC(v324, type metadata accessor for UniversalCandidate);
LABEL_127:
  uint64_t v210 = v188;
  v350 = v182;
  v352 = v210;
  if (v323)
  {
    v211 = v210;
    uint64_t v212 = v323;
    swift_bridgeObjectRelease();
    id v213 = objc_msgSend(v211, sel_id);
    if (v213)
    {
      v214 = v213;
      sub_1D3001068();

      id v215 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v339;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v339)(v192, 0, 1, v345);
    }
    else
    {
      id v215 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v339;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v339)(v192, 1, 1, v345);
    }
    uint64_t v240 = v314;
    id v241 = objc_msgSend(v212, sel_topCandidate);
    v349 = v212;
    v346 = v188;
    if (v241)
    {
      uint64_t v242 = v241;
      id v243 = objc_msgSend(v241, sel_id);

      if (v243)
      {
        uint64_t v244 = (uint64_t)v304;
        sub_1D3001068();

        uint64_t v245 = 0;
        uint64_t v246 = v318;
      }
      else
      {
        uint64_t v245 = 1;
        uint64_t v246 = v318;
        uint64_t v244 = (uint64_t)v304;
      }
      uint64_t v247 = v345;
      v215((char *)v244, v245, 1, v345);
      sub_1D2F80C04(v244, v240, &qword_1EBD62AA0);
    }
    else
    {
      uint64_t v247 = v345;
      v215((char *)v240, 1, 1, v345);
      uint64_t v246 = v318;
    }
    uint64_t v248 = v246 + *(int *)(v319 + 48);
    sub_1D2F1CCAC(v192, v246, &qword_1EBD62AA0);
    sub_1D2F1CCAC(v240, v248, &qword_1EBD62AA0);
    uint64_t v249 = *(unsigned int (***)(uint64_t *, uint64_t, uint64_t))(v331 + 48);
    unsigned int v250 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v249)(v246, 1, v247);
    v348 = v249;
    if (v250 == 1)
    {
      sub_1D2F1CD78(v240, &qword_1EBD62AA0);
      sub_1D2F1CD78(v192, &qword_1EBD62AA0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v249)(v248, 1, v247) == 1)
      {
        sub_1D2F1CD78(v318, &qword_1EBD62AA0);
        v251 = v349;
        uint64_t v252 = (uint64_t)v307;
        v253 = off_1E6970000;
        goto LABEL_157;
      }
LABEL_154:
      sub_1D2F1CD78(v318, &qword_1EA699170);
      v251 = v349;
      uint64_t v252 = (uint64_t)v307;
      v253 = off_1E6970000;
      goto LABEL_156;
    }
    uint64_t v254 = v303;
    sub_1D2F1CCAC(v246, v303, &qword_1EBD62AA0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v249)(v248, 1, v247) == 1)
    {
      sub_1D2F1CD78(v314, &qword_1EBD62AA0);
      sub_1D2F1CD78(v192, &qword_1EBD62AA0);
      (*(void (**)(uint64_t, uint64_t))(v331 + 8))(v254, v247);
      goto LABEL_154;
    }
    uint64_t v255 = v331;
    uint64_t v256 = v254;
    uint64_t v257 = v302;
    (*(void (**)(char *, uint64_t, uint64_t))(v331 + 32))(v302, v248, v247);
    sub_1D2FB9E0C((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
    char v258 = sub_1D3001B28();
    uint64_t v259 = *(void (**)(void, void))(v255 + 8);
    v259(v257, v247);
    sub_1D2F1CD78(v314, &qword_1EBD62AA0);
    sub_1D2F1CD78(v321, &qword_1EBD62AA0);
    v259(v256, v247);
    uint64_t v252 = (uint64_t)v307;
    uint64_t v52 = v341;
    sub_1D2F1CD78(v246, &qword_1EBD62AA0);
    v251 = v349;
    v253 = off_1E6970000;
    if ((v258 & 1) == 0)
    {
LABEL_156:
      os_log_t v260 = v352;
      objc_msgSend(v251, sel_setTopCandidate_, v352, v292);
      objc_msgSend(v260, sel_setTopCandidateForUniversalRuntimeSuggestion_, v251);
      objc_msgSend(v251, sel_setNeedsDisambiguation_, 1);
    }
LABEL_157:
    uint64_t v261 = v345;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v331 + 16))(v252, v332, v345);
    v215((char *)v252, 0, 1, v261);
    id v262 = [v251 (SEL)v253[498]];
    if (v262)
    {
      v263 = v262;
      id v264 = objc_msgSend(v262, sel_id);

      if (v264)
      {
        uint64_t v265 = (uint64_t)v305;
        sub_1D3001068();

        uint64_t v266 = 0;
        uint64_t v267 = (uint64_t)v313;
      }
      else
      {
        uint64_t v266 = 1;
        uint64_t v267 = (uint64_t)v313;
        uint64_t v265 = (uint64_t)v305;
      }
      uint64_t v261 = v345;
      v215((char *)v265, v266, 1, v345);
      sub_1D2F80C04(v265, v267, &qword_1EBD62AA0);
    }
    else
    {
      uint64_t v267 = (uint64_t)v313;
      v215(v313, 1, 1, v261);
    }
    uint64_t v268 = v308;
    uint64_t v269 = v308 + *(int *)(v319 + 48);
    sub_1D2F1CCAC(v252, v308, &qword_1EBD62AA0);
    sub_1D2F1CCAC(v267, v269, &qword_1EBD62AA0);
    uint64_t v270 = v348;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v348)(v268, 1, v261) == 1)
    {
      sub_1D2F1CD78(v267, &qword_1EBD62AA0);
      sub_1D2F1CD78(v252, &qword_1EBD62AA0);
      int v271 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v270)(v269, 1, v261);
      v183 = (int *)v347;
      uint64_t v188 = v346;
      v272 = v349;
      if (v271 == 1)
      {
        sub_1D2F1CD78(v268, &qword_1EBD62AA0);
        v273 = v352;
        goto LABEL_170;
      }
LABEL_168:
      sub_1D2F1CD78(v268, &qword_1EA699170);
      v273 = v352;
      goto LABEL_171;
    }
    uint64_t v274 = (uint64_t)v299;
    sub_1D2F1CCAC(v268, (uint64_t)v299, &qword_1EBD62AA0);
    int v275 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v270)(v269, 1, v261);
    v272 = v349;
    if (v275 == 1)
    {
      sub_1D2F1CD78((uint64_t)v313, &qword_1EBD62AA0);
      sub_1D2F1CD78(v252, &qword_1EBD62AA0);
      (*(void (**)(uint64_t, uint64_t))(v331 + 8))(v274, v261);
      v183 = (int *)v347;
      uint64_t v188 = v346;
      goto LABEL_168;
    }
    uint64_t v276 = v331;
    uint64_t v277 = v252;
    uint64_t v278 = v274;
    uint64_t v279 = v302;
    (*(void (**)(char *, uint64_t, uint64_t))(v331 + 32))(v302, v269, v261);
    sub_1D2FB9E0C((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
    char v280 = sub_1D3001B28();
    uint64_t v281 = v268;
    v282 = *(void (**)(void, void))(v276 + 8);
    v282(v279, v261);
    sub_1D2F1CD78((uint64_t)v313, &qword_1EBD62AA0);
    sub_1D2F1CD78(v277, &qword_1EBD62AA0);
    v282(v278, v261);
    sub_1D2F1CD78(v281, &qword_1EBD62AA0);
    v183 = (int *)v347;
    uint64_t v188 = v346;
    v273 = v352;
    if (v280)
    {
LABEL_170:
      unsigned __int8 v219 = objc_msgSend(v272, sel_needsDisambiguation, v292);
    }
    else
    {
LABEL_171:

      unsigned __int8 v219 = 1;
    }
  }
  else
  {
    uint64_t v216 = (uint64_t)v329;
    sub_1D3001098();
    uint64_t v217 = v190;
    uint64_t v218 = v328;
    unsigned __int8 v219 = 1;
    v294(v216 + *(int *)(v328 + 24), 1, 1, v183);
    uint64_t v220 = (uint64_t *)(v216 + *(int *)(v218 + 20));
    *uint64_t v220 = v327;
    v220[1] = v217;
    *(unsigned char *)(v216 + *(int *)(v218 + 28)) = 1;
    unint64_t v221 = *(void **)(v185 + 24);
    type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
    id v222 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v223 = v221;
    id v224 = objc_msgSend(v222, sel_initWithContext_, v223);
    unint64_t v225 = (void *)sub_1D3001048();
    objc_msgSend(v224, sel_setId_, v225);

    v226 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    objc_msgSend(v224, sel_setQueryEntityName_, v226);

    uint64_t v227 = v352;
    objc_msgSend(v224, sel_setTopCandidate_, v352);
    objc_msgSend(v227, sel_setTopCandidateForUniversalRuntimeSuggestion_, v224);
    objc_msgSend(v224, sel_setNeedsDisambiguation_, 1);

    sub_1D2FB9EBC(v216, type metadata accessor for UniversalRuntimeSuggestion);
  }
LABEL_174:
  if ((sub_1D2FB0618() & 1) == 0)
  {

    uint64_t v289 = v332;
LABEL_180:
    sub_1D2FB9EBC(v289, type metadata accessor for UniversalCandidate);
    sub_1D2F1CD78(v334, &qword_1EA698AC0);
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v283 = (uint64_t)v310;
  uint64_t v284 = v332;
  sub_1D2FB9E54(v332, (uint64_t)&v310[*(int *)(v320 + 24)], type metadata accessor for UniversalCandidate);
  *(void *)(v283 + 8) = v322;
  *(unsigned char *)uint64_t v283 = v219;
  uint64_t v285 = v334;
  v286 = v188;
  uint64_t v287 = v309;
  sub_1D2F1CCAC(v334, v309, &qword_1EA698AC0);
  ((void (*)(uint64_t, uint64_t, int *))v350)(v287, 1, v183);
  swift_retain();
  sub_1D2F1CD78(v287, &qword_1EA698AC0);
  uint64_t v288 = v311;
  sub_1D2FB9E54(v283, v311, type metadata accessor for UniversalSuggestionCandidate);
  swift_storeEnumTagMultiPayload();

  sub_1D2FB9EBC(v283, type metadata accessor for UniversalSuggestionCandidate);
  sub_1D2FB9EBC(v284, type metadata accessor for UniversalCandidate);
  sub_1D2F1CD78(v285, &qword_1EA698AC0);
  return sub_1D2FB9F84(v288, v336, (uint64_t (*)(void))type metadata accessor for UniversalSuggestionCandidateDonationResult);
}

uint64_t sub_1D2FB67C0()
{
  id v1 = *(id *)(v0 + 24);
  sub_1D3002228();

  return v3;
}

void sub_1D2FB6838(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = v2;
  uint64_t v178 = sub_1D3001018();
  uint64_t v6 = *(char **)(v178 - 8);
  MEMORY[0x1F4188790](v178);
  double v177 = (char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_1D30010A8();
  double v189 = *(char **)(v187 - 8);
  MEMORY[0x1F4188790](v187);
  unint64_t v173 = (char *)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699170);
  uint64_t v9 = MEMORY[0x1F4188790](v186);
  uint64_t v164 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v183 = (uint64_t)&v152 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v185 = (uint64_t)&v152 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v161 = (uint64_t)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v162 = (char *)&v152 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v165 = (char *)&v152 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v163 = (char *)&v152 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v172 = (uint64_t)&v152 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v180 = (uint64_t)&v152 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v179 = (uint64_t)&v152 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v174 = (uint64_t)&v152 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v184 = (uint64_t)&v152 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v182 = (uint64_t)&v152 - v33;
  uint64_t v34 = type metadata accessor for UniversalSuggestionSurfaced(0);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1D3000E08();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v40 = (char *)&v152 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v190 = *a2;
  sub_1D2FB29F4(a1);
  if (!v41)
  {
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1D3001918();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EA6998E0);
    uint64_t v46 = sub_1D30018F8();
    os_log_type_t v47 = sub_1D30020A8();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_1D2F05000, v46, v47, "UniversalSuggestionsCoreData: Unable to find candidate record. Skipping feedback update.", v48, 2u);
      MEMORY[0x1D942F2D0](v48, -1, -1);
    }

    return;
  }
  uint64_t v42 = v41;
  uint64_t v43 = *(int *)(v34 + 20);
  uint64_t v181 = a1;
  uint64_t v44 = a1 + v43;
  if ((*(unsigned char *)(v44 + 8) & 1) == 0) {
    objc_msgSend(v41, sel_setLastSurfaced_, *(double *)v44);
  }
  if (v190 == 2)
  {
    sub_1D2FB0618();

    return;
  }
  id v49 = objc_msgSend(v42, sel_candidateForUniversalSuggestion);
  if (!v49)
  {
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v66 = sub_1D3001918();
    __swift_project_value_buffer(v66, (uint64_t)qword_1EA6998E0);
    uint64_t v67 = sub_1D30018F8();
    os_log_type_t v68 = sub_1D30020A8();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v69 = 0;
      _os_log_impl(&dword_1D2F05000, v67, v68, "UniversalSuggestionsCoreData: Unable to find corresponding suggestion record. Skipping feedback update.", v69, 2u);
      MEMORY[0x1D942F2D0](v69, -1, -1);
    }

    return;
  }
  double v171 = v6;
  id v157 = v49;
  id v50 = objc_msgSend(v49, sel_queryEntityName);
  if (!v50) {
    goto LABEL_24;
  }
  uint64_t v51 = v50;
  uint64_t v52 = sub_1D3001B78();
  unint64_t v54 = v53;

  int v55 = v190;
  sub_1D2FB32E8(v52, v54);
  uint64_t v57 = v56;
  swift_bridgeObjectRelease();
  id v154 = v57;
  if (!v57)
  {
LABEL_24:
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_1D3001918();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EA6998E0);
    uint64_t v63 = sub_1D30018F8();
    os_log_type_t v64 = sub_1D30020A8();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl(&dword_1D2F05000, v63, v64, "UniversalSuggestionsCoreData: Unable to find runtime suggestion record to update. Skipping feedback update.", v65, 2u);
      MEMORY[0x1D942F2D0](v65, -1, -1);
    }

    return;
  }
  id v58 = objc_msgSend(v157, sel_candidates);
  unint64_t v59 = MEMORY[0x1E4FBC860];
  uint64_t v153 = v3;
  uint64_t v152 = v42;
  if (v58)
  {
    unint64_t v196 = MEMORY[0x1E4FBC860];
    id v60 = v58;
    sub_1D3002088();
    id v188 = v60;

    sub_1D2FB9E0C(&qword_1EBD610D8, MEMORY[0x1E4F27660]);
    sub_1D3002308();
    while (v195)
    {
      sub_1D2F0B9B4(&v194, &v193);
      sub_1D2F0BD44((uint64_t)&v193, (uint64_t)v191);
      type metadata accessor for UniversalCandidateCoreDataRecord();
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v192 = 0;
      }
      uint64_t v61 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v193);
      if (v192)
      {
        MEMORY[0x1D942DCC0](v61);
        if (*(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D3001E28();
        }
        sub_1D3001E68();
        sub_1D3001DE8();
      }
      sub_1D3002308();
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
    unint64_t v59 = v196;

    uint64_t v42 = v152;
    int v70 = v190;
  }
  else
  {
    int v70 = v55;
  }
  uint64_t v71 = v181;
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v72) {
      goto LABEL_38;
    }
LABEL_112:
    swift_bridgeObjectRelease();
    id v133 = 0;
    goto LABEL_113;
  }
  uint64_t v72 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v72) {
    goto LABEL_112;
  }
LABEL_38:
  if (v72 < 1)
  {
    __break(1u);
    return;
  }
  id v188 = 0;
  uint64_t v73 = 0;
  unint64_t v175 = v59 & 0xC000000000000001;
  double v167 = (void (**)(uint64_t, uint64_t, uint64_t))(v189 + 16);
  double v169 = v189 + 48;
  unint64_t v156 = (void (**)(char *, uint64_t, uint64_t))(v189 + 32);
  uint64_t v158 = v189 + 8;
  uint64_t v159 = (void (**)(char *, uint64_t))(v171 + 8);
  int v74 = 1;
  double v75 = 0.0;
  double v171 = v189 + 56;
  unint64_t v166 = (unint64_t)(v189 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  id v76 = off_1E6970000;
  uint64_t v77 = v182;
  unint64_t v160 = v36;
  unint64_t v168 = v59;
  uint64_t v176 = v72;
  do
  {
    LODWORD(v189) = v74;
    if (v175) {
      id v78 = (id)MEMORY[0x1D942E3A0](v73, v59);
    }
    else {
      id v78 = *(id *)(v59 + 8 * v73 + 32);
    }
    id v79 = v78;
    sub_1D2FB9E54(v71, (uint64_t)v36, type metadata accessor for UniversalSuggestionSurfaced);
    if (v70)
    {
      sub_1D2FB9EBC((uint64_t)v36, type metadata accessor for UniversalSuggestionSurfaced);
      if (v70 != 1) {
        goto LABEL_77;
      }
      id v80 = objc_msgSend(v79, sel_id);
      if (v80)
      {
        uint64_t v81 = v80;
        uint64_t v82 = v179;
        sub_1D3001068();

        uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v171;
        uint64_t v84 = v82;
        uint64_t v85 = 0;
      }
      else
      {
        uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v171;
        uint64_t v82 = v179;
        uint64_t v84 = v179;
        uint64_t v85 = 1;
      }
      uint64_t v101 = v187;
      v83(v84, v85, 1, v187);
      uint64_t v102 = v180;
      (*v167)(v180, v71, v101);
      v83(v102, 0, 1, v101);
      uint64_t v103 = v183;
      uint64_t v104 = v183 + *(int *)(v186 + 48);
      sub_1D2F1CCAC(v82, v183, &qword_1EBD62AA0);
      sub_1D2F1CCAC(v102, v104, &qword_1EBD62AA0);
      unint64_t v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v169;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v169)(v103, 1, v101) == 1)
      {
        sub_1D2F1CD78(v102, &qword_1EBD62AA0);
        sub_1D2F1CD78(v82, &qword_1EBD62AA0);
        unsigned int v106 = v105(v104, 1, v101);
        uint64_t v71 = v181;
        unint64_t v59 = v168;
        if (v106 == 1)
        {
          sub_1D2F1CD78(v183, &qword_1EBD62AA0);
          uint64_t v77 = v182;
          uint64_t v36 = v160;
          id v76 = off_1E6970000;
          goto LABEL_74;
        }
      }
      else
      {
        uint64_t v107 = v172;
        sub_1D2F1CCAC(v103, v172, &qword_1EBD62AA0);
        if (v105(v104, 1, v101) != 1)
        {
          uint64_t v116 = v173;
          (*v156)(v173, v104, v101);
          sub_1D2FB9E0C((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
          int v155 = sub_1D3001B28();
          uint64_t v117 = *(void (**)(uint64_t, uint64_t))v158;
          (*(void (**)(char *, uint64_t))v158)(v116, v101);
          sub_1D2F1CD78(v180, &qword_1EBD62AA0);
          sub_1D2F1CD78(v179, &qword_1EBD62AA0);
          v117(v107, v101);
          sub_1D2F1CD78(v103, &qword_1EBD62AA0);
          uint64_t v71 = v181;
          uint64_t v77 = v182;
          uint64_t v36 = v160;
          unint64_t v59 = v168;
          id v76 = off_1E6970000;
          if (v155)
          {
LABEL_74:
            objc_msgSend(v79, (SEL)v76[488], v152, v153);
            double v110 = v118 + 0.2;
            if (v110 > 1.0) {
              double v110 = 1.0;
            }
LABEL_76:
            objc_msgSend(v79, sel_setScore_, v110);
            unint64_t v119 = v177;
            sub_1D3000FF8();
            sub_1D3000FE8();
            double v121 = v120;
            (*v159)(v119, v178);
            objc_msgSend(v79, sel_setLastUpdated_, v121);
            goto LABEL_77;
          }
          goto LABEL_63;
        }
        sub_1D2F1CD78(v180, &qword_1EBD62AA0);
        sub_1D2F1CD78(v179, &qword_1EBD62AA0);
        (*(void (**)(uint64_t, uint64_t))v158)(v107, v101);
        uint64_t v71 = v181;
        unint64_t v59 = v168;
      }
      sub_1D2F1CD78(v183, &qword_1EA699170);
      uint64_t v77 = v182;
      uint64_t v36 = v160;
      id v76 = off_1E6970000;
LABEL_63:
      if (qword_1EA6980A0 != -1) {
        swift_once();
      }
      double v108 = *(double *)&qword_1EA6998D8;
      objc_msgSend(v79, sel_score, v152, v153);
      double v110 = v109 + -0.2;
LABEL_70:
      if (v108 > v110) {
        double v110 = v108;
      }
      goto LABEL_76;
    }
    id v86 = objc_msgSend(v79, sel_id);
    id v170 = v79;
    if (v86)
    {
      uint64_t v87 = v86;
      sub_1D3001068();

      id v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v171;
      uint64_t v89 = v77;
      uint64_t v90 = 0;
    }
    else
    {
      id v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v171;
      uint64_t v89 = v77;
      uint64_t v90 = 1;
    }
    uint64_t v91 = v187;
    v88(v89, v90, 1, v187);
    uint64_t v92 = v184;
    (*v167)(v184, (uint64_t)v36, v91);
    v88(v92, 0, 1, v91);
    uint64_t v93 = (uint64_t)v36;
    uint64_t v94 = v185;
    uint64_t v95 = v185 + *(int *)(v186 + 48);
    sub_1D2F1CCAC(v77, v185, &qword_1EBD62AA0);
    sub_1D2F1CCAC(v92, v95, &qword_1EBD62AA0);
    uint64_t v96 = v77;
    uint64_t v97 = v92;
    id v98 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v169;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v169)(v94, 1, v91) == 1)
    {
      sub_1D2F1CD78(v97, &qword_1EBD62AA0);
      sub_1D2F1CD78(v96, &qword_1EBD62AA0);
      sub_1D2FB9EBC(v93, type metadata accessor for UniversalSuggestionSurfaced);
      int v99 = v98(v95, 1, v91);
      uint64_t v77 = v96;
      unint64_t v59 = v168;
      uint64_t v36 = (char *)v93;
      id v76 = off_1E6970000;
      id v79 = v170;
      if (v99 != 1) {
        goto LABEL_55;
      }
      sub_1D2F1CD78(v185, &qword_1EBD62AA0);
      uint64_t v71 = v181;
LABEL_67:
      if (qword_1EA6980A0 != -1) {
        swift_once();
      }
      double v108 = *(double *)&qword_1EA6998D8;
      objc_msgSend(v79, (SEL)v76[488], v152, v153);
      double v110 = v115 + -1.0;
      goto LABEL_70;
    }
    uint64_t v100 = v174;
    sub_1D2F1CCAC(v94, v174, &qword_1EBD62AA0);
    if (v98(v95, 1, v91) == 1)
    {
      sub_1D2F1CD78(v184, &qword_1EBD62AA0);
      uint64_t v77 = v182;
      sub_1D2F1CD78(v182, &qword_1EBD62AA0);
      uint64_t v36 = v160;
      sub_1D2FB9EBC((uint64_t)v160, type metadata accessor for UniversalSuggestionSurfaced);
      (*(void (**)(uint64_t, uint64_t))v158)(v100, v91);
      unint64_t v59 = v168;
      id v76 = off_1E6970000;
      id v79 = v170;
LABEL_55:
      sub_1D2F1CD78(v185, &qword_1EA699170);
      uint64_t v71 = v181;
      goto LABEL_77;
    }
    uint64_t v111 = v100;
    id v112 = v173;
    (*v156)(v173, v95, v91);
    sub_1D2FB9E0C((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
    int v155 = sub_1D3001B28();
    id v113 = *(void (**)(uint64_t, uint64_t))v158;
    (*(void (**)(char *, uint64_t))v158)(v112, v91);
    sub_1D2F1CD78(v184, &qword_1EBD62AA0);
    uint64_t v77 = v182;
    sub_1D2F1CD78(v182, &qword_1EBD62AA0);
    uint64_t v114 = (uint64_t)v160;
    sub_1D2FB9EBC((uint64_t)v160, type metadata accessor for UniversalSuggestionSurfaced);
    v113(v111, v91);
    sub_1D2F1CD78(v94, &qword_1EBD62AA0);
    uint64_t v71 = v181;
    unint64_t v59 = v168;
    uint64_t v36 = (char *)v114;
    id v76 = off_1E6970000;
    id v79 = v170;
    if (v155) {
      goto LABEL_67;
    }
LABEL_77:
    objc_msgSend(v79, (SEL)v76[488], v152, v153);
    if (v189)
    {
      double v123 = v79;
      id v79 = v188;
      id v188 = v123;
      double v75 = v122;
LABEL_82:
      int v70 = v190;
LABEL_84:

      goto LABEL_85;
    }
    int v70 = v190;
    if (v75 >= v122)
    {
      objc_msgSend(v79, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);
      goto LABEL_84;
    }
    [v79 (SEL)v76[488]];
    double v75 = v124;
    id v125 = v79;
    id v79 = v188;
    if (v188)
    {
      uint64_t v126 = v125;
      objc_msgSend(v188, sel_setTopCandidateForUniversalRuntimeSuggestion_, 0);
      id v188 = v126;
      goto LABEL_82;
    }
    id v188 = v125;
LABEL_85:
    int v74 = 0;
    ++v73;
  }
  while (v176 != v73);
  swift_bridgeObjectRelease();
  if (!v188)
  {
    id v133 = 0;
    uint64_t v42 = v152;
LABEL_113:
    id v145 = v154;
    goto LABEL_114;
  }
  double v189 = (char *)v188;
  id v127 = objc_msgSend(v189, sel_id);
  uint64_t v42 = v152;
  if (v127)
  {
    uint64_t v128 = v127;
    uint64_t v129 = (uint64_t)v163;
    sub_1D3001068();

    id v130 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v171;
    unint64_t v131 = (char *)v129;
    uint64_t v132 = 0;
  }
  else
  {
    id v130 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v171;
    uint64_t v129 = (uint64_t)v163;
    unint64_t v131 = v163;
    uint64_t v132 = 1;
  }
  uint64_t v134 = v187;
  v130(v131, v132, 1, v187);
  uint64_t v135 = (uint64_t)v164;
  id v136 = objc_msgSend(v154, sel_topCandidate);
  if (v136)
  {
    os_log_type_t v137 = v136;
    id v138 = objc_msgSend(v136, sel_id);

    if (v138)
    {
      int v139 = v162;
      sub_1D3001068();

      uint64_t v140 = 0;
    }
    else
    {
      uint64_t v140 = 1;
      int v139 = v162;
    }
    uint64_t v134 = v187;
    v130(v139, v140, 1, v187);
    uint64_t v142 = (uint64_t)v139;
    uint64_t v141 = (uint64_t)v165;
    sub_1D2F80C04(v142, (uint64_t)v165, &qword_1EBD62AA0);
  }
  else
  {
    uint64_t v141 = (uint64_t)v165;
    v130(v165, 1, 1, v134);
  }
  uint64_t v143 = v135 + *(int *)(v186 + 48);
  sub_1D2F1CCAC(v129, v135, &qword_1EBD62AA0);
  sub_1D2F1CCAC(v141, v143, &qword_1EBD62AA0);
  uint64_t v144 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v169;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v169)(v135, 1, v134) == 1)
  {
    sub_1D2F1CD78(v141, &qword_1EBD62AA0);
    sub_1D2F1CD78(v129, &qword_1EBD62AA0);
    if (v144(v143, 1, v134) == 1)
    {
      sub_1D2F1CD78(v135, &qword_1EBD62AA0);
      id v145 = v154;
      if (!v190) {
        goto LABEL_106;
      }
LABEL_109:
      objc_msgSend(v145, sel_setNeedsDisambiguation_, 0);

      goto LABEL_110;
    }
LABEL_105:
    sub_1D2F1CD78(v135, &qword_1EA699170);
    id v145 = v154;
    goto LABEL_106;
  }
  uint64_t v146 = v161;
  sub_1D2F1CCAC(v135, v161, &qword_1EBD62AA0);
  if (v144(v143, 1, v134) == 1)
  {
    sub_1D2F1CD78((uint64_t)v165, &qword_1EBD62AA0);
    sub_1D2F1CD78(v129, &qword_1EBD62AA0);
    (*(void (**)(uint64_t, uint64_t))v158)(v146, v134);
    goto LABEL_105;
  }
  uint64_t v148 = v146;
  unint64_t v149 = v173;
  (*v156)(v173, v143, v134);
  sub_1D2FB9E0C((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
  char v150 = sub_1D3001B28();
  uint64_t v151 = *(void (**)(uint64_t, uint64_t))v158;
  (*(void (**)(char *, uint64_t))v158)(v149, v134);
  sub_1D2F1CD78((uint64_t)v165, &qword_1EBD62AA0);
  sub_1D2F1CD78(v129, &qword_1EBD62AA0);
  v151(v148, v134);
  sub_1D2F1CD78(v135, &qword_1EBD62AA0);
  id v145 = v154;
  if (v190 && (v150 & 1) != 0) {
    goto LABEL_109;
  }
LABEL_106:
  unint64_t v147 = v189;
  objc_msgSend(v145, sel_setTopCandidate_, v189);
  objc_msgSend(v147, sel_setTopCandidateForUniversalRuntimeSuggestion_, v145);
  objc_msgSend(v145, sel_setNeedsDisambiguation_, 1);

LABEL_110:
  id v133 = v188;
LABEL_114:
  sub_1D2FB0618();
}

BOOL static UniversalSuggestionFeedbackAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D2FB8148@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for UniversalCandidate(0);
  uint64_t v7 = *(void *)(v46 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v46);
  uint64_t v45 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699900);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UniversalRuntimeSuggestion(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  uint64_t v20 = *(void **)(v2 + 24);
  uint64_t v49 = v2;
  uint64_t v50 = v19;
  uint64_t v47 = v19;
  id v21 = v20;
  sub_1D3002228();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1D2F1CD78((uint64_t)v14, &qword_1EA699900);
    uint64_t v22 = type metadata accessor for UniversalSuggestionCandidate(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v24 = v48;
  }
  else
  {
    sub_1D2FB9F84((uint64_t)v14, (uint64_t)v18, type metadata accessor for UniversalRuntimeSuggestion);
    sub_1D2F1CCAC((uint64_t)&v18[*(int *)(v15 + 24)], (uint64_t)v6, &qword_1EA698AC0);
    uint64_t v25 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v46) != 1)
    {
      sub_1D2FB9F84((uint64_t)v6, (uint64_t)v11, type metadata accessor for UniversalCandidate);
      uint64_t v38 = v45;
      sub_1D2FB9F84((uint64_t)v11, v45, type metadata accessor for UniversalCandidate);
      char v39 = v18[*(int *)(v15 + 28)];
      uint64_t v40 = v47;
      swift_retain();
      sub_1D2FB9EBC((uint64_t)v18, type metadata accessor for UniversalRuntimeSuggestion);
      uint64_t v41 = (char *)v48;
      *(void *)(v48 + 8) = v40;
      uint64_t v42 = type metadata accessor for UniversalSuggestionCandidate(0);
      sub_1D2FB9F84(v38, (uint64_t)&v41[*(int *)(v42 + 24)], type metadata accessor for UniversalCandidate);
      *uint64_t v41 = v39;
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
    }
    sub_1D2F1CD78((uint64_t)v6, &qword_1EA698AC0);
    uint64_t v26 = v47;
    if (qword_1EA6980B0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1D3001918();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EA6998E0);
    swift_retain_n();
    uint64_t v28 = sub_1D30018F8();
    os_log_type_t v29 = sub_1D30020A8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v53 = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v51 = v26;
      swift_retain();
      uint64_t v32 = sub_1D2F59298();
      uint64_t v34 = v33;
      swift_release();
      uint64_t v51 = v32;
      uint64_t v52 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699160);
      uint64_t v35 = sub_1D3001BC8();
      uint64_t v51 = sub_1D2F09508(v35, v36, &v53);
      sub_1D3002318();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v28, v29, "UniversalSuggestionsCoreData: No top suggestion candidate for the specified entity with name %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v31, -1, -1);
      MEMORY[0x1D942F2D0](v30, -1, -1);

      uint64_t v37 = (uint64_t)v25;
    }
    else
    {
      swift_release_n();

      uint64_t v37 = (uint64_t)v18;
    }
    sub_1D2FB9EBC(v37, type metadata accessor for UniversalRuntimeSuggestion);
    uint64_t v44 = v48;
    uint64_t v22 = type metadata accessor for UniversalSuggestionCandidate(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v24 = v44;
  }
  return v23(v24, 1, 1, v22);
}

uint64_t UniversalSuggestionsStoreCoreData.deinit()
{
  return v0;
}

uint64_t UniversalSuggestionsStoreCoreData.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1D2FB87A8()
{
  id v1 = *(void **)(*(void *)v0 + 24);
  type metadata accessor for UniversalSuggestionCandidateDonationResult();
  id v2 = v1;
  sub_1D3002228();
}

uint64_t sub_1D2FB8834()
{
  id v1 = *(id *)(*(void *)v0 + 24);
  sub_1D3002228();

  return v3;
}

uint64_t sub_1D2FB88B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2FB8148(a1, a2);
}

void sub_1D2FB88D4()
{
  id v1 = *(id *)(*(void *)v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698AC0);
  sub_1D3002228();
}

uint64_t sub_1D2FB8950()
{
  return sub_1D2FB0DAC();
}

uint64_t sub_1D2FB8974()
{
  id v1 = *(id *)(*(void *)v0 + 24);
  sub_1D3002228();

  return v3;
}

uint64_t sub_1D2FB89E8()
{
  id v1 = *(id *)(*(void *)v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EA88);
  sub_1D3002228();

  return v3;
}

uint64_t UniversalSuggestionFeedbackAction.hash(into:)()
{
  return sub_1D3002938();
}

uint64_t UniversalSuggestionFeedbackAction.hashValue.getter()
{
  return sub_1D3002968();
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.__allocating_init()()
{
  uint64_t v0 = static Config.universalSuggestionsStoreFilePath.getter();
  uint64_t v2 = v1;
  type metadata accessor for UniversalSuggestionsStoreCoreDataWithMigrations();
  swift_allocObject();
  return sub_1D2FB000C(v0, v2, 1);
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1D2FB000C(a1, a2, 1);
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1D2FB000C(a1, a2, 1);
}

void sub_1D2FB8B7C()
{
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.deinit()
{
  return v0;
}

uint64_t UniversalSuggestionsStoreCoreDataWithMigrations.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FB8C14()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EA6998E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA6998E0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1D2FB8CDC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1D2FB9FEC(a1);
}

uint64_t sub_1D2FB8CF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D2FB1C68();
  *a1 = result;
  return result;
}

void sub_1D2FB8D24(uint64_t a1@<X8>)
{
  sub_1D2FB3100(*(void *)(v1 + 24), (uint64_t (*)(uint64_t *))sub_1D2FB22A8, (void (*)(void))sub_1D2F87228, (uint64_t (*)(void))type metadata accessor for UniversalSuggestion, a1);
}

void sub_1D2FB8D7C(char *a1@<X8>)
{
  sub_1D2FB2964(*(void *)(v1 + 24), a1);
}

void sub_1D2FB8D98(uint64_t a1@<X8>)
{
  sub_1D2FB3100(*(void *)(v1 + 24), (uint64_t (*)(uint64_t *))sub_1D2FB31B0, (void (*)(void))sub_1D2F8675C, (uint64_t (*)(void))type metadata accessor for UniversalRuntimeSuggestion, a1);
}

uint64_t sub_1D2FB8DF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2FBA080(a1);
}

uint64_t type metadata accessor for UniversalSuggestionCandidateDonationResult()
{
  uint64_t result = qword_1EBD5EA60;
  if (!qword_1EBD5EA60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D2FB8E54(unsigned char *a1@<X8>)
{
}

uint64_t type metadata accessor for UniversalSuggestionsStoreCoreDataWithMigrations()
{
  return self;
}

unint64_t sub_1D2FB8E94()
{
  unint64_t result = qword_1EA699908;
  if (!qword_1EA699908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699908);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionCandidateDonationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      uint64_t v7 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1D30010A8();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_retain();
      v11(v8, v9, v10);
      uint64_t v12 = (int *)type metadata accessor for UniversalCandidate(0);
      *(void *)&v8[v12[5]] = *(void *)&v9[v12[5]];
      *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
      *(void *)&v8[v12[7]] = *(void *)&v9[v12[7]];
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for UniversalSuggestionCandidateDonationResult(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    swift_release();
    uint64_t v3 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
    uint64_t v4 = sub_1D30010A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1 + v3, v4);
    type metadata accessor for UniversalCandidate(0);
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for UniversalSuggestionCandidateDonationResult(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1D30010A8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
    uint64_t v11 = (int *)type metadata accessor for UniversalCandidate(0);
    *(void *)&v7[v11[5]] = *(void *)&v8[v11[5]];
    *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
    *(void *)&v7[v11[7]] = *(void *)&v8[v11[7]];
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for UniversalSuggestionCandidateDonationResult(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D2FB9EBC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for UniversalSuggestionCandidateDonationResult);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1D30010A8();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_retain();
      v10(v7, v8, v9);
      uint64_t v11 = (int *)type metadata accessor for UniversalCandidate(0);
      *(void *)&v7[v11[5]] = *(void *)&v8[v11[5]];
      *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
      *(void *)&v7[v11[7]] = *(void *)&v8[v11[7]];
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for UniversalSuggestionCandidateDonationResult(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1D30010A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    uint64_t v10 = (int *)type metadata accessor for UniversalCandidate(0);
    *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
    *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
    *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for UniversalSuggestionCandidateDonationResult(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D2FB9EBC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for UniversalSuggestionCandidateDonationResult);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      uint64_t v6 = *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1D30010A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      uint64_t v10 = (int *)type metadata accessor for UniversalCandidate(0);
      *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
      *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
      *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionCandidateDonationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionCandidateDonationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1D2FB9988()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D2FB9998()
{
  uint64_t result = type metadata accessor for UniversalSuggestionCandidate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of UniversalSuggestionsStore.donateSuggestionCandidate(initialEntity:correctedEntity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.updateSuggestionFromFeedback(candidate:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.getSuggestionCandidate(forEntity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.findCandidate(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.getAllCandidateIds()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.deleteCandidate(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of UniversalSuggestionsStore.readAllSuggestions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t type metadata accessor for UniversalSuggestionsStoreCoreData()
{
  return self;
}

uint64_t method lookup function for UniversalSuggestionsStoreCoreData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UniversalSuggestionsStoreCoreData);
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.unload()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.getPersistentContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.resetStore()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.getAllCandidateIds()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.deleteCandidate(id:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.readAllSuggestions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.readAllRuntimeSuggestions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.findSuggestion(key:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.findCandidate(id:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.findRuntimeSuggestion(key:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.donateSuggestionCandidate(initialEntity:correctedEntity:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.updateSuggestionFromFeedback(candidate:action:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreData.getSuggestionCandidate(forEntity:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

unsigned char *storeEnumTagSinglePayload for UniversalSuggestionFeedbackAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FB9DA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalSuggestionFeedbackAction()
{
  return &type metadata for UniversalSuggestionFeedbackAction;
}

uint64_t method lookup function for UniversalSuggestionsStoreCoreDataWithMigrations(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UniversalSuggestionsStoreCoreDataWithMigrations);
}

uint64_t dispatch thunk of UniversalSuggestionsStoreCoreDataWithMigrations.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t sub_1D2FB9E0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2FB9E54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2FB9EBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1D2FB9F1C()
{
  unint64_t result = qword_1EA698E00;
  if (!qword_1EA698E00)
  {
    sub_1D2F0BCB8(255, &qword_1EA698DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA698E00);
  }
  return result;
}

uint64_t sub_1D2FB9F84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2FB9FEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D2FB1264(*(void *)(v1 + 24));
  *a1 = result & 1;
  return result;
}

void sub_1D2FBA030(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  unsigned __int8 v5 = *(unsigned char *)(v1 + 32);
  sub_1D2FB6838(v3, &v5);
  *a1 = v4 & 1;
}

uint64_t sub_1D2FBA080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v4 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v1 + 32);
  uint64_t v5 = v2;
  return sub_1D2FB3908(&v5, &v4, a1);
}

id sub_1D2FBA0C8(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v64) = a3;
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1D3002108();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D3000F18();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v56 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v56 - v16;
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C190]), sel_init);
  objc_msgSend(v18, sel_setShouldInferMappingModelAutomatically_, 0);
  objc_msgSend(v18, sel_setShouldMigrateStoreAutomatically_, 0);
  if (qword_1EBD5EA58 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_1EBD5EA50;
  if (!qword_1EBD5EA50)
  {

    return 0;
  }
  id v58 = v9;
  id v20 = objc_allocWithZone(MEMORY[0x1E4F1C150]);
  id v21 = v19;
  unint64_t v59 = (unint64_t)"ionCoreDataRecord";
  uint64_t v22 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v65 = v6;
  uint64_t v23 = (void *)v22;
  id v60 = v21;
  id v61 = objc_msgSend(v20, sel_initWithName_managedObjectModel_, v22, v21);

  uint64_t v24 = v65;
  sub_1D3000E58();
  id v25 = objc_msgSend(self, sel_defaultManager);
  sub_1D3000ED8();
  uint64_t v26 = (void *)sub_1D3000E78();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v67 = v68 + 8;
  v66(v15, v24);
  aBlock[0] = 0;
  LODWORD(v20) = objc_msgSend(v25, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v26, 1, 0, aBlock);

  id v27 = aBlock[0];
  if (v20)
  {
LABEL_9:
    if ((v64 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  uint64_t v28 = v27;
  os_log_type_t v29 = (void *)sub_1D3000DF8();

  swift_willThrow();
  if (qword_1EA6980B0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1D3001918();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EA6998E0);
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v12, v17, v24);
  id v31 = v29;
  id v32 = v29;
  uint64_t v33 = sub_1D30018F8();
  os_log_type_t v34 = sub_1D30020B8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v57 = (void *)swift_slowAlloc();
    aBlock[0] = v57;
    *(_DWORD *)uint64_t v35 = 136315394;
    sub_1D2FB9E0C((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
    uint64_t v36 = sub_1D3002738();
    uint64_t v69 = sub_1D2F09508(v36, v37, (uint64_t *)aBlock);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    v66(v12, v65);
    *(_WORD *)(v35 + 12) = 2080;
    uint64_t v69 = (uint64_t)v29;
    id v38 = v29;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    uint64_t v39 = sub_1D3001BC8();
    uint64_t v69 = sub_1D2F09508(v39, v40, (uint64_t *)aBlock);
    sub_1D3002318();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D2F05000, v33, v34, "UniversalSuggestionsCoreData: Unable to create the data directory, path=%s, error=%s", (uint8_t *)v35, 0x16u);
    uint64_t v41 = v57;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v41, -1, -1);
    uint64_t v42 = v35;
    uint64_t v24 = v65;
    MEMORY[0x1D942F2D0](v42, -1, -1);

    goto LABEL_9;
  }

  v66(v12, v24);
  if (v64)
  {
LABEL_10:
    type metadata accessor for UniversalSuggestionsStoreCoreData();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v44 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    type metadata accessor for IncrementalMigrationManager();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v44;
    sub_1D30020F8();
    sub_1D2F92F38((uint64_t)v17, (uint64_t)v5, 0xD000000000000019, v59 | 0x8000000000000000);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v5, v63);
    swift_setDeallocating();
  }
LABEL_13:
  uint64_t v46 = (void *)sub_1D3000E78();
  objc_msgSend(v18, sel_setURL_, v46);

  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1D3005C00;
  *(void *)(v47 + 32) = v18;
  aBlock[0] = (id)v47;
  sub_1D3001DE8();
  sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD63348);
  id v48 = v18;
  uint64_t v49 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  id v50 = v61;
  objc_msgSend(v61, sel_setPersistentStoreDescriptions_, v49);

  uint64_t v51 = (char *)swift_allocObject();
  v51[16] = 1;
  uint64_t v52 = v51 + 16;
  aBlock[4] = sub_1D2FBABE4;
  aBlock[5] = v51;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1D2F3E7C0;
  aBlock[3] = &block_descriptor_55_0;
  uint64_t v53 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v50, sel_loadPersistentStoresWithCompletionHandler_, v53);
  _Block_release(v53);

  v66(v17, v24);
  swift_beginAccess();
  char v54 = *v52;
  swift_release();
  if ((v54 & 1) == 0)
  {

    return 0;
  }
  return v50;
}

uint64_t sub_1D2FBABD4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

void sub_1D2FBABE4(void *a1, void *a2)
{
  sub_1D2FB0394(a1, a2, v2);
}

uint64_t sub_1D2FBABEC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D2FB158C(a1);
}

void sub_1D2FBAC0C(uint64_t a1@<X8>)
{
}

void sub_1D2FBAC24(char *a1@<X8>)
{
}

uint64_t dispatch thunk of SiriUserFeedbackLearningTaskPerforming.run(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D2F1C2F4;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1D2FBAD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6999B8);
  uint64_t v5 = MEMORY[0x1F4188790](v53);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v45 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  char v18 = *(unsigned char *)(a1 + 32);
  uint64_t v19 = 1 << v18;
  uint64_t v20 = -1;
  if (1 << v18 < 64) {
    uint64_t v20 = ~(-1 << (1 << v18));
  }
  unint64_t v21 = v20 & v17;
  if (v21)
  {
    uint64_t v45 = v14;
    uint64_t v46 = a2;
    uint64_t v47 = v2;
    uint64_t v22 = 0;
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v24 = (v21 - 1) & v21;
    int64_t v50 = (unint64_t)(v19 + 63) >> 6;
    while (1)
    {
      unint64_t v48 = v23;
      uint64_t v25 = *(void *)(a1 + 48);
      uint64_t v26 = sub_1D30010A8();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
      uint64_t v51 = *(void *)(v27 + 72);
      uint64_t v52 = v26;
      uint64_t v29 = v25 + v51 * v23;
      uint64_t v30 = v13;
      id v31 = v28;
      a2 = (uint64_t)v13;
      uint64_t v13 = (char *)(v27 + 16);
      ((void (*)(char *, uint64_t))v28)(v30, v29);
      *(void *)(a2 + *(int *)(v53 + 48)) = *(void *)(*(void *)(a1 + 56) + 8 * v48);
      sub_1D2FBBE0C(a2, (uint64_t)v16);
      swift_bridgeObjectRetain();
      while (v24)
      {
        while (1)
        {
          unint64_t v33 = __clz(__rbit64(v24));
          v24 &= v24 - 1;
          unint64_t v34 = v33 | (v22 << 6);
LABEL_25:
          v31(v7, *(void *)(a1 + 48) + v34 * v51, v52);
          uint64_t v38 = *(void *)(*(void *)(a1 + 56) + 8 * v34);
          a2 = v53;
          *(void *)&v7[*(int *)(v53 + 48)] = v38;
          sub_1D2FBBE0C((uint64_t)v7, (uint64_t)v10);
          if (*(double *)&v16[*(int *)(a2 + 48)] < *(double *)&v10[*(int *)(a2 + 48)]) {
            break;
          }
          sub_1D2F1CD78((uint64_t)v10, &qword_1EA6999B8);
          if (!v24) {
            goto LABEL_9;
          }
        }
        sub_1D2F1CD78((uint64_t)v16, &qword_1EA6999B8);
        sub_1D2FBBE0C((uint64_t)v10, (uint64_t)v16);
      }
LABEL_9:
      int64_t v35 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_39:
        if (v32 < 9) {
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, 1, 1, v53);
        }
        unint64_t v41 = *(void *)(a1 + 96);
        if (v41)
        {
          uint64_t v22 = 4;
          goto LABEL_32;
        }
        unint64_t v41 = *(void *)(a1 + 104);
        if (v41)
        {
          uint64_t v22 = 5;
          goto LABEL_32;
        }
      }
      else
      {
        if (v35 >= v50) {
          goto LABEL_28;
        }
        unint64_t v36 = *(void *)(v49 + 8 * v35);
        ++v22;
        if (v36) {
          goto LABEL_24;
        }
        uint64_t v22 = v35 + 1;
        if (v35 + 1 >= v50) {
          goto LABEL_28;
        }
        unint64_t v36 = *(void *)(v49 + 8 * v22);
        if (v36) {
          goto LABEL_24;
        }
        uint64_t v22 = v35 + 2;
        if (v35 + 2 >= v50) {
          goto LABEL_28;
        }
        unint64_t v36 = *(void *)(v49 + 8 * v22);
        if (v36) {
          goto LABEL_24;
        }
        uint64_t v22 = v35 + 3;
        if (v35 + 3 >= v50) {
          goto LABEL_28;
        }
        unint64_t v36 = *(void *)(v49 + 8 * v22);
        if (v36) {
          goto LABEL_24;
        }
        int64_t v37 = v35 + 4;
        if (v37 >= v50)
        {
LABEL_28:
          swift_release();
          uint64_t v39 = v46;
          sub_1D2FBBE0C((uint64_t)v16, v46);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v39, 0, 1, v53);
        }
        unint64_t v36 = *(void *)(v49 + 8 * v37);
        if (v36)
        {
          uint64_t v22 = v37;
LABEL_24:
          unint64_t v24 = (v36 - 1) & v36;
          unint64_t v34 = __clz(__rbit64(v36)) + (v22 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          uint64_t v22 = v37 + 1;
          if (__OFADD__(v37, 1)) {
            break;
          }
          if (v22 >= v50) {
            goto LABEL_28;
          }
          unint64_t v36 = *(void *)(v49 + 8 * v22);
          ++v37;
          if (v36) {
            goto LABEL_24;
          }
        }
        __break(1u);
      }
      uint64_t v42 = 0;
      uint64_t v43 = 6;
      if (v50 > 6) {
        uint64_t v43 = v50;
      }
      uint64_t v44 = v43 - 6;
      do
      {
        if (v44 == v42) {
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, 1, 1, v53);
        }
        unint64_t v41 = *(void *)(a1 + 112 + 8 * v42++);
      }
      while (!v41);
      uint64_t v22 = v42 + 5;
LABEL_32:
      unint64_t v24 = (v41 - 1) & v41;
      unint64_t v23 = __clz(__rbit64(v41)) + (v22 << 6);
    }
  }
  unsigned int v32 = v18 & 0x3F;
  if (v32 > 6)
  {
    int64_t v50 = (unint64_t)(v19 + 63) >> 6;
    unint64_t v41 = *(void *)(a1 + 72);
    if (v41)
    {
      uint64_t v45 = v14;
      uint64_t v46 = a2;
      uint64_t v47 = v2;
      uint64_t v22 = 1;
      goto LABEL_32;
    }
    if (v32 >= 8)
    {
      unint64_t v41 = *(void *)(a1 + 80);
      uint64_t v46 = a2;
      uint64_t v47 = v2;
      uint64_t v45 = v14;
      if (v41)
      {
        uint64_t v22 = 2;
      }
      else
      {
        unint64_t v41 = *(void *)(a1 + 88);
        if (!v41) {
          goto LABEL_39;
        }
        uint64_t v22 = 3;
      }
      goto LABEL_32;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, 1, 1, v53);
}

uint64_t sub_1D2FBB214(id *a1)
{
  uint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*a1, sel_nsUUID);
  sub_1D3001068();

  char v7 = sub_1D3001058();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t static SiriOntologyUtils.className(of:)()
{
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699990);
  uint64_t v0 = sub_1D3001BC8();
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D3001C38();
  unint64_t v4 = sub_1D2F9FF34(v3, v0, v2);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1D942DB30](v4, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

void static SiriOntologyUtils.selectTopDialogAct(from:ranks:)(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = sub_1D2FBB784(a1, a2);
  if (v2) {
    return;
  }
  unint64_t v4 = v3;
  id v5 = objc_msgSend(v3, sel_userDialogActs);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699998);
  unint64_t v6 = sub_1D3001DC8();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1D3002438();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v4, sel_description);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D2FBBB28();
    swift_allocError();
    *uint64_t v9 = 0xD000000000000023;
    v9[1] = 0x80000001D3012A50;
    swift_willThrow();

    return;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D942E3A0](0, v6);
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }

  swift_bridgeObjectRelease();
}

unint64_t static SiriOntologyUtils.selectPrimaryTask(from:)()
{
  unint64_t result = sub_1D3001458();
  if (v0) {
    return v1;
  }
  unint64_t v3 = result;
  if (!(result >> 62))
  {
    uint64_t v1 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v1) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1D2FBBB28();
    swift_allocError();
    *unint64_t v4 = 0x736B736174206F4ELL;
    v4[1] = 0xE800000000000000;
    swift_willThrow();
    return v1;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1D30025A8();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v1 = MEMORY[0x1D942E3A0](0, v3);
    goto LABEL_7;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v1 = *(void *)(v3 + 32);
    swift_retain();
LABEL_7:
    swift_bridgeObjectRelease();
    return v1;
  }
  __break(1u);
  return result;
}

void static SiriOntologyUtils.prettyPrintTask(_:)(uint64_t a1)
{
  id v2 = sub_1D2FBBB7C(a1);
  if (!v1)
  {
    unint64_t v3 = v2;
    if (sub_1D30021B8())
    {
      sub_1D3001418();

      swift_release();
    }
    else
    {
      sub_1D2FBBB28();
      swift_allocError();
      *unint64_t v4 = 0x7061726720646142;
      v4[1] = 0xE900000000000068;
      swift_willThrow();
    }
  }
}

uint64_t SiriOntologyUtils.deinit()
{
  return v0;
}

uint64_t SiriOntologyUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *sub_1D2FBB784(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  unint64_t v28 = a1;
  uint64_t v5 = sub_1D30010A8();
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6999B0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6999B8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v27 - v16;
  sub_1D2FBAD4C(a2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D2F1CD78((uint64_t)v10, &qword_1EA6999B0);
    sub_1D2FBBB28();
    swift_allocError();
    *char v18 = 0x736B6E6172206F4ELL;
    v18[1] = 0xE800000000000000;
    swift_willThrow();
  }
  else
  {
    uint64_t v19 = *(int *)(v11 + 48);
    uint64_t v27 = v2;
    uint64_t v20 = v29;
    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v21(v17, v10, v5);
    *(void *)&v17[v19] = *(void *)&v10[v19];
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    unint64_t v3 = (void *)(v20 + 16);
    v22(v15, v17, v5);
    uint64_t v23 = ((uint64_t (*)(char *, char *, uint64_t))v21)(v7, v15, v5);
    MEMORY[0x1F4188790](v23);
    *(&v27 - 2) = v7;
    unint64_t v24 = sub_1D2FA0F80(sub_1D2FBBDEC, (uint64_t)(&v27 - 4), v28);
    if (v24)
    {
      unint64_t v3 = v24;
    }
    else
    {
      sub_1D2FBBB28();
      swift_allocError();
      *uint64_t v25 = 0x6D20736573726150;
      v25[1] = 0xEF686374616D7369;
      swift_willThrow();
    }
    sub_1D2F1CD78((uint64_t)v17, &qword_1EA6999B8);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
  }
  return v3;
}

unint64_t sub_1D2FBBB28()
{
  unint64_t result = qword_1EA6999A0;
  if (!qword_1EA6999A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6999A0);
  }
  return result;
}

id sub_1D2FBBB7C(uint64_t a1)
{
  self;
  id v2 = (void *)swift_dynamicCastObjCClass();
  if (v2) {
    return objc_msgSend(v2, sel_task);
  }
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    swift_unknownObjectRetain();
    uint64_t v9 = v8(ObjectType, v5);
    if (v9)
    {
      unint64_t v10 = v9;
    }
    else
    {
      sub_1D3002438();
      sub_1D3001C68();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699998);
      sub_1D3002568();
      unint64_t v10 = 0;
      sub_1D2FBBB28();
      swift_allocError();
      *uint64_t v12 = 0;
      v12[1] = 0xE000000000000000;
      swift_willThrow();
    }
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1D3002438();
    sub_1D3001C68();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699998);
    sub_1D3002568();
    unint64_t v10 = 0xE000000000000000;
    sub_1D2FBBB28();
    swift_allocError();
    void *v11 = 0;
    v11[1] = 0xE000000000000000;
    swift_willThrow();
  }
  return (id)v10;
}

uint64_t type metadata accessor for SiriOntologyUtils()
{
  return self;
}

uint64_t method lookup function for SiriOntologyUtils(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriOntologyUtils);
}

uint64_t sub_1D2FBBDEC(id *a1)
{
  return sub_1D2FBB214(a1) & 1;
}

uint64_t sub_1D2FBBE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6999B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Double __swiftcall floorToMostRecentDay(timestamp:)(Swift::Double timestamp)
{
  return floor(timestamp / 86400.0) * 86400.0;
}

uint64_t sub_1D2FBBE90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 5459817;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 5459817;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x534F63616DLL;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1397716596;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x534F6863746177;
      break;
    case 4:
      uint64_t v5 = 0x4F6E776F6E6B6E75;
      unint64_t v3 = 0xE900000000000053;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x534F63616DLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1397716596) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x534F6863746177;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE900000000000053;
      if (v5 != 0x4F6E776F6E6B6E75) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D3002778();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D2FBC03C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64657463656A6572;
    }
    else {
      uint64_t v3 = 0x6D6E6F646E616261;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xEB00000000746E65;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64657463656A6572;
      }
      else {
        uint64_t v6 = 0x6D6E6F646E616261;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xEB00000000746E65;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x6465747065636361;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x6465747065636361)
  {
LABEL_21:
    char v8 = sub_1D3002778();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D2FBC168(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D6E6F646E616261;
  }
  else {
    uint64_t v3 = 0x65646E6F70736572;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xEB00000000746E65;
  }
  if (a2) {
    uint64_t v5 = 0x6D6E6F646E616261;
  }
  else {
    uint64_t v5 = 0x65646E6F70736572;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000746E65;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC21C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6964654D73756C50;
  }
  else {
    unint64_t v3 = 0xD000000000000018;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D300D930;
  }
  else {
    unint64_t v4 = 0xE900000000000061;
  }
  if (a2) {
    unint64_t v5 = 0x6964654D73756C50;
  }
  else {
    unint64_t v5 = 0xD000000000000018;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000061;
  }
  else {
    unint64_t v6 = 0x80000001D300D930;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC2CC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 0xD000000000000015;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001D300DBC0;
    }
    else {
      unint64_t v4 = 0x80000001D300DBE0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000012;
      }
      else {
        unint64_t v6 = 0xD000000000000015;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000001D300DBC0;
      }
      else {
        unint64_t v7 = 0x80000001D300DBE0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x646570706F7473;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x646570706F7473)
  {
LABEL_21:
    char v8 = sub_1D3002778();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D2FBC3D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x746E65746E6F63;
  }
  else {
    uint64_t v3 = 0x6E65697069636572;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000074;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x746E65746E6F63;
  }
  else {
    uint64_t v5 = 0x6E65697069636572;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000074;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC484(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000019;
  }
  else {
    unint64_t v3 = 0xD00000000000001FLL;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D300DB00;
  }
  else {
    unint64_t v4 = 0x80000001D300DB20;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000019;
  }
  else {
    unint64_t v5 = 0xD00000000000001FLL;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D300DB20;
  }
  else {
    unint64_t v6 = 0x80000001D300DB00;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC530(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64616F6C796170;
  }
  else {
    uint64_t v3 = 1702060386;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64616F6C796170;
  }
  else {
    uint64_t v5 = 1702060386;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC5D0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000014;
  }
  else {
    unint64_t v3 = 0xD000000000000012;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D300DA80;
  }
  else {
    unint64_t v4 = 0x80000001D300DAA0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000014;
  }
  else {
    unint64_t v5 = 0xD000000000000012;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D300DAA0;
  }
  else {
    unint64_t v6 = 0x80000001D300DA80;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC67C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000012;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D300DAC0;
  }
  else {
    unint64_t v4 = 0x80000001D300DAE0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000012;
  }
  else {
    unint64_t v5 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D300DAE0;
  }
  else {
    unint64_t v6 = 0x80000001D300DAC0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC728(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001D300DA10;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "PREV-DISAMBIGUATION";
      goto LABEL_4;
    case 2:
      unint64_t v6 = "PREV-NOT_APPLICABLE";
LABEL_4:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 3:
      unint64_t v5 = 0x4B4E552D56455250;
      unint64_t v3 = 0xEC0000004E574F4ELL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001D300DA10;
  switch(a2)
  {
    case 1:
      char v8 = "PREV-DISAMBIGUATION";
      goto LABEL_9;
    case 2:
      char v8 = "PREV-NOT_APPLICABLE";
LABEL_9:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000013;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xEC0000004E574F4ELL;
      if (v5 == 0x4B4E552D56455250) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = sub_1D3002778();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1D2FBC8B0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x454C4C45434E4143;
  }
  else {
    uint64_t v3 = 0x414D5249464E4F43;
  }
  if (v2) {
    unint64_t v4 = 0xEF4F4E5F4E4F4954;
  }
  else {
    unint64_t v4 = 0xE900000000000044;
  }
  if (a2) {
    uint64_t v5 = 0x454C4C45434E4143;
  }
  else {
    uint64_t v5 = 0x414D5249464E4F43;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000044;
  }
  else {
    unint64_t v6 = 0xEF4F4E5F4E4F4954;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBC968(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001DLL;
  }
  else {
    unint64_t v3 = 0xD000000000000023;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D300D760;
  }
  else {
    unint64_t v4 = 0x80000001D300D790;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001DLL;
  }
  else {
    unint64_t v5 = 0xD000000000000023;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D300D790;
  }
  else {
    unint64_t v6 = 0x80000001D300D760;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D2FBCA14(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656D69746C616572;
  }
  else {
    uint64_t v3 = 0x616E65746E69616DLL;
  }
  if (v2) {
    unint64_t v4 = 0xEB0000000065636ELL;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656D69746C616572;
  }
  else {
    uint64_t v5 = 0x616E65746E69616DLL;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEB0000000065636ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1D2FBCAC4()
{
  qword_1EA6999C0 = (uint64_t)&unk_1F2A15AC0;
}

uint64_t sub_1D2FBCAD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D3001868();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x1F4188790](v4);
  int64_t v37 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void **)(v1 + 16);
  char v7 = *(void **)(v2 + 24);
  char v8 = *(void **)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  sub_1D2FBD288(v6, v7, v8, v9);
  unint64_t v10 = sub_1D2FBCF3C(a1, v6, v7, v8, v9);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  char v16 = v15;
  sub_1D2FBD2F4(v6, v7, v8, v9);
  uint64_t v17 = *(void **)(v2 + 16);
  char v18 = *(void **)(v2 + 24);
  uint64_t v19 = *(void **)(v2 + 32);
  LOBYTE(v7) = *(unsigned char *)(v2 + 40);
  sub_1D2FBD288(v17, v18, v19, (char)v7);
  LOBYTE(v8) = sub_1D2FBDEE0(v17, v18, v19, (char)v7, (unint64_t)v10, (unint64_t)v12, (unint64_t)v14, v16);
  sub_1D2FBD2F4(v17, v18, v19, (char)v7);
  if ((v8 & 1) == 0)
  {
    if (qword_1EA6980C0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1D3001918();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EA6999C8);
    sub_1D2FBD288(v10, v12, v14, v16);
    sub_1D2FBD288(v10, v12, v14, v16);
    unint64_t v21 = sub_1D30018F8();
    os_log_type_t v22 = sub_1D30020A8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v41 = v36;
      *(_DWORD *)uint64_t v23 = 136315138;
      v35[1] = v23 + 4;
      unint64_t v24 = sub_1D2FBD0EC((uint64_t)v10, (uint64_t)v12, (uint64_t)v14, v16);
      uint64_t v40 = sub_1D2F09508(v24, v25, &v41);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2FBD2F4(v10, v12, v14, v16);
      sub_1D2FBD2F4(v10, v12, v14, v16);
      _os_log_impl(&dword_1D2F05000, v21, v22, "UserRejectsPhoneCallOrMessagesContactConfirmation state will be updated to %s", v23, 0xCu);
      uint64_t v26 = v36;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v26, -1, -1);
      MEMORY[0x1D942F2D0](v23, -1, -1);
    }
    else
    {
      sub_1D2FBD2F4(v10, v12, v14, v16);
      sub_1D2FBD2F4(v10, v12, v14, v16);
    }
  }
  uint64_t v27 = *(void **)(v2 + 16);
  unint64_t v28 = *(void **)(v2 + 24);
  uint64_t v29 = *(void **)(v2 + 32);
  *(void *)(v2 + 16) = v10;
  *(void *)(v2 + 24) = v12;
  *(void *)(v2 + 32) = v14;
  char v30 = *(unsigned char *)(v2 + 40);
  *(unsigned char *)(v2 + 40) = v16;
  sub_1D2FBD288(v10, v12, v14, v16);
  sub_1D2FBD2F4(v27, v28, v29, v30);
  if (*(unsigned char *)(v2 + 40) == 2 && (uint64_t v31 = *(unsigned __int8 *)(v2 + 16), v31))
  {
    if (v31 == 1) {
      uint64_t v31 = 1;
    }
    if (qword_1EBD5F798 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1D3001898();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EBD656E0);
    uint64_t v33 = (uint64_t)v37;
    sub_1D3001858();
    sub_1D2F62828("events.filters.UserRejectsPhoneCallOrMessagesContactConfirmation", 64, 2, v33);
    sub_1D2FBD2F4(v10, v12, v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v33, v39);
  }
  else
  {
    sub_1D2FBD2F4(v10, v12, v14, v16);
    return 0;
  }
  return v31;
}

void *sub_1D2FBCF3C(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  if (*(unsigned char *)(a1 + 24))
  {
    char v9 = *(void **)(a1 + 16);
    if (*(unsigned char *)(a1 + 24) == 1)
    {
      sub_1D2F7B488(v9, 1u);
      a2 = sub_1D2FBDB84(v9, a2, a3, a4, a5);
      unint64_t v10 = v9;
      unsigned __int8 v11 = 1;
    }
    else
    {
      sub_1D2F7B488(v9, 2u);
      a2 = (void *)sub_1D2FBD7B0(v9, a2, a3, a4, a5);
      unint64_t v10 = v9;
      unsigned __int8 v11 = 2;
    }
    sub_1D2F7B4AC(v10, v11);
  }
  else
  {
    if (qword_1EA6980C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1D3001918();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EA6999C8);
    uint64_t v13 = sub_1D30018F8();
    os_log_type_t v14 = sub_1D30020A8();
    if (os_log_type_enabled(v13, v14))
    {
      char v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v15 = 0;
      _os_log_impl(&dword_1D2F05000, v13, v14, "UserRejectsPhoneCallOrMessagesContactConfirmation received a non Siri UI / Execution event", v15, 2u);
      MEMORY[0x1D942F2D0](v15, -1, -1);
    }

    sub_1D2FBD288(a2, a3, a4, a5);
  }
  return a2;
}

unint64_t sub_1D2FBD0EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = 0xD000000000000013;
  switch(a4)
  {
    case 1:
    case 2:
      sub_1D3002438();
      sub_1D3001C68();
      sub_1D3002568();
      sub_1D3001C68();
      unint64_t v4 = 0;
      break;
    case 3:
      unint64_t v4 = 0xD000000000000015;
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t sub_1D2FBD224()
{
  sub_1D2FBD2F4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserRejectsPhoneCallOrMessagesContactConfirmationFilter()
{
  return self;
}

id sub_1D2FBD288(id result, void *a2, void *a3, char a4)
{
  if (a4)
  {
    if (a4 == 2)
    {
      id v6 = a2;
      unint64_t result = a3;
    }
    else
    {
      unint64_t result = a2;
      if (a4 != 1) {
        return result;
      }
    }
  }
  return result;
}

void destroy for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1)
{
}

void sub_1D2FBD2F4(void *a1, void *a2, void *a3, char a4)
{
  if (a4)
  {
    if (a4 == 2)
    {

      a1 = a3;
    }
    else
    {
      a1 = a2;
      if (a4 != 1) {
        return;
      }
    }
  }
}

uint64_t initializeWithCopy for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1D2FBD288(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1D2FBD288(*(id *)a2, v4, v5, v6);
  char v7 = *(void **)a1;
  char v8 = *(void **)(a1 + 8);
  char v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1D2FBD2F4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for UserRejectsPhoneCallOrMessagesContactConfirmationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  char v7 = *(void **)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1D2FBD2F4(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for UserRejectsPhoneCallOrMessagesContactConfirmationState()
{
  return &type metadata for UserRejectsPhoneCallOrMessagesContactConfirmationState;
}

void sub_1D2FBD47C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v3 = *(void **)(*v0 + 24);
  char v4 = *(void **)(*v0 + 32);
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = 0;
  char v5 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(v1 + 40) = 3;
  sub_1D2FBD2F4(v2, v3, v4, v5);
}

uint64_t sub_1D2FBD4A0(uint64_t a1)
{
  return sub_1D2FBCAD8(a1);
}

uint64_t sub_1D2FBD4C4()
{
  if (qword_1EA6980B8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2FBD520()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FBD5CC()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2FBD664()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FBD70C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D2FBE4F8();
  *a1 = result;
  return result;
}

void sub_1D2FBD73C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x64657463656A6572;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6D6E6F646E616261;
    unint64_t v4 = 0xEB00000000746E65;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6465747065636361;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D2FBD7A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D2FBC03C(*a1, *a2);
}

uint64_t sub_1D2FBD7B0(void *a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  id v10 = objc_msgSend(a1, sel_eventBody);
  if (v10)
  {
    unsigned __int8 v11 = v10;
    if (a5 - 2 < 2)
    {
      if (sub_1D2F7B614(v10) & 1) != 0 || (sub_1D2F7B838(v11))
      {
        id v12 = objc_msgSend(v11, sel_taskStep);

        if (v12 != (id)17) {
          return 0;
        }
        goto LABEL_29;
      }

      return 0;
    }
    if (!a5)
    {
      id v17 = objc_msgSend(a2, sel_eventBody);
      if (!v17)
      {

        sub_1D2FBD2F4(a2, a3, a4, 0);
        return 0;
      }
      char v18 = v17;
      if ((sub_1D2F9A1F0(v11) & 1) == 0)
      {

        sub_1D2FBD2F4(a2, a3, a4, 0);
        return 0;
      }
      id v19 = objc_msgSend(v11, sel_taskStep);

      sub_1D2FBD2F4(a2, a3, a4, 0);
      if (v19 == (id)39)
      {
        id v30 = a1;
        return 1;
      }
      if (v19 == (id)38)
      {
        id v31 = a1;
        return 0;
      }
      if (v19 != (id)17) {
        return 0;
      }
LABEL_29:
      id v23 = a1;
      return (uint64_t)a1;
    }
    if ((_BYTE)a2)
    {
      char v20 = sub_1D3002778();
      id v21 = a3;
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      id v22 = a3;
      swift_bridgeObjectRelease();
    }
    if ((sub_1D2F7B614(v11) & 1) != 0 || (sub_1D2F7B838(v11)) && objc_msgSend(v11, sel_taskStep) == (id)17)
    {
      sub_1D2FBD2F4(a2, a3, a4, 1);

      goto LABEL_29;
    }
LABEL_30:
    objc_msgSend(a3, sel_timestamp);
    double v25 = v24;
    objc_msgSend(a1, sel_timestamp);
    double v27 = v26;

    sub_1D2FBD2F4(a2, a3, a4, 1);
    if (v27 - v25 <= 300.0)
    {
      id v28 = a3;
      return (uint64_t)a2;
    }
    return 0;
  }
  if (qword_1EA6980C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D3001918();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EA6999C8);
  os_log_type_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D30020A8();
  if (os_log_type_enabled(v14, v15))
  {
    char v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v16 = 0;
    _os_log_impl(&dword_1D2F05000, v14, v15, "UserRejectsPhoneCallOrMessagesContactConfirmation cannot unwrap execution store event body", v16, 2u);
    MEMORY[0x1D942F2D0](v16, -1, -1);
  }

  sub_1D2FBD288(a2, a3, a4, a5);
  return (uint64_t)a2;
}

void *sub_1D2FBDB84(void *a1, void *a2, void *a3, void *a4, char a5)
{
  id v10 = objc_msgSend(a1, sel_eventBody);
  if (v10)
  {
    unsigned __int8 v11 = v10;
    switch(a5)
    {
      case 1:
        id v19 = a3;
        unsigned __int8 v20 = objc_msgSend(v11, sel_isStarting);

        if (v20) {
          return a2;
        }
        uint64_t v12 = a2;
        id v23 = a1;
        return (void *)v12;
      case 2:
      case 3:

        goto LABEL_4;
      default:
        id v18 = a2;
        if (objc_msgSend(v11, sel_isStarting))
        {

          return a2;
        }
        id v21 = objc_msgSend(v11, sel_dismissalReason);
        sub_1D3001B78();

        LOBYTE(v21) = sub_1D2F7B9D8();
        if (v21 - 1 >= 0xC)
        {
          sub_1D2FBD2F4(a2, a3, a4, 0);
LABEL_4:
          uint64_t v12 = 0;
        }
        else
        {
          id v22 = a1;
          uint64_t v12 = 2;
        }
        break;
    }
  }
  else
  {
    if (qword_1EA6980C0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D3001918();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EA6999C8);
    os_log_type_t v14 = sub_1D30018F8();
    os_log_type_t v15 = sub_1D30020A8();
    if (os_log_type_enabled(v14, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v16 = 0;
      _os_log_impl(&dword_1D2F05000, v14, v15, "UserRejectsPhoneCallOrMessagesContactConfirmation cannot unwrap UI store event body", v16, 2u);
      MEMORY[0x1D942F2D0](v16, -1, -1);
    }

    sub_1D2FBD288(a2, a3, a4, a5);
    return a2;
  }
  return (void *)v12;
}

BOOL sub_1D2FBDDF4(uint64_t a1, uint64_t a2)
{
  return sub_1D2FBDEE0(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1D2FBDE18()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EA6999C8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA6999C8);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

BOOL sub_1D2FBDEE0(void *a1, void *a2, void *a3, char a4, unint64_t a5, unint64_t a6, unint64_t a7, char a8)
{
  switch(a4)
  {
    case 1:
      if (a8 != 1) {
        return 0;
      }
      int v26 = a1;
      if ((_BYTE)a1)
      {
        if (a1 == 1) {
          uint64_t v27 = 0x64657463656A6572;
        }
        else {
          uint64_t v27 = 0x6D6E6F646E616261;
        }
        if (v26 == 1) {
          unint64_t v28 = 0xE800000000000000;
        }
        else {
          unint64_t v28 = 0xEB00000000746E65;
        }
        int v29 = a5;
        if ((_BYTE)a5) {
          goto LABEL_33;
        }
LABEL_50:
        unint64_t v31 = 0xE800000000000000;
        if (v27 != 0x6465747065636361) {
          goto LABEL_53;
        }
        goto LABEL_51;
      }
      unint64_t v28 = 0xE800000000000000;
      uint64_t v27 = 0x6465747065636361;
      int v29 = a5;
      if (!(_BYTE)a5) {
        goto LABEL_50;
      }
LABEL_33:
      if (v29 == 1) {
        uint64_t v30 = 0x64657463656A6572;
      }
      else {
        uint64_t v30 = 0x6D6E6F646E616261;
      }
      if (v29 == 1) {
        unint64_t v31 = 0xE800000000000000;
      }
      else {
        unint64_t v31 = 0xEB00000000746E65;
      }
      if (v27 != v30) {
        goto LABEL_53;
      }
LABEL_51:
      if (v28 == v31)
      {
        sub_1D2FBD288(a1, a2, a3, 1);
        sub_1D2FBD288((id)a5, (void *)a6, (void *)a7, 1);
        swift_bridgeObjectRelease_n();
LABEL_54:
        sub_1D2F621C8();
        char v14 = sub_1D30022B8();
        sub_1D2FBD2F4((void *)a5, (void *)a6, (void *)a7, 1);
        os_log_type_t v15 = a1;
        char v16 = a2;
        id v17 = a3;
        char v18 = 1;
        goto LABEL_55;
      }
LABEL_53:
      char v41 = sub_1D3002778();
      sub_1D2FBD288(a1, a2, a3, 1);
      sub_1D2FBD288((id)a5, (void *)a6, (void *)a7, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_54;
      }
      sub_1D2FBD2F4((void *)a5, (void *)a6, (void *)a7, 1);
      sub_1D2FBD2F4(a1, a2, a3, 1);
      return 0;
    case 2:
      if (a8 != 2) {
        return 0;
      }
      int v19 = a1;
      if ((_BYTE)a1)
      {
        if (a1 == 1) {
          uint64_t v20 = 0x64657463656A6572;
        }
        else {
          uint64_t v20 = 0x6D6E6F646E616261;
        }
        if (v19 == 1) {
          unint64_t v21 = 0xE800000000000000;
        }
        else {
          unint64_t v21 = 0xEB00000000746E65;
        }
        int v22 = a5;
        if ((_BYTE)a5) {
          goto LABEL_13;
        }
      }
      else
      {
        unint64_t v21 = 0xE800000000000000;
        uint64_t v20 = 0x6465747065636361;
        int v22 = a5;
        if ((_BYTE)a5)
        {
LABEL_13:
          if (v22 == 1) {
            uint64_t v23 = 0x64657463656A6572;
          }
          else {
            uint64_t v23 = 0x6D6E6F646E616261;
          }
          if (v22 == 1) {
            unint64_t v24 = 0xE800000000000000;
          }
          else {
            unint64_t v24 = 0xEB00000000746E65;
          }
          if (v20 != v23) {
            goto LABEL_45;
          }
LABEL_43:
          if (v21 == v24)
          {
            id v32 = a2;
            id v33 = a3;
            id v34 = (id)a6;
            id v35 = (id)a7;
            swift_bridgeObjectRelease_n();
            goto LABEL_46;
          }
LABEL_45:
          char v36 = sub_1D3002778();
          id v37 = a2;
          id v42 = a3;
          id v38 = (id)a6;
          id v39 = (id)a7;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v36 & 1) == 0)
          {

            return 0;
          }
LABEL_46:
          sub_1D2F621C8();
          if (sub_1D30022B8())
          {
            char v40 = sub_1D30022B8();

            return v40 & 1;
          }

          return 0;
        }
      }
      unint64_t v24 = 0xE800000000000000;
      if (v20 != 0x6465747065636361) {
        goto LABEL_45;
      }
      goto LABEL_43;
    case 3:
      return a8 == 3 && !(a6 | a5 | a7);
    default:
      if (a8) {
        return 0;
      }
      sub_1D2F621C8();
      sub_1D2FBD288(a1, a2, a3, 0);
      sub_1D2FBD288((id)a5, (void *)a6, (void *)a7, 0);
      char v14 = sub_1D30022B8();
      sub_1D2FBD2F4((void *)a5, (void *)a6, (void *)a7, 0);
      os_log_type_t v15 = a1;
      char v16 = a2;
      id v17 = a3;
      char v18 = 0;
LABEL_55:
      sub_1D2FBD2F4(v15, v16, v17, v18);
      return v14 & 1;
  }
}

unsigned char *storeEnumTagSinglePayload for UserRejectsPhoneCallOrMessagesContactConfirmationState.ConfirmationStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FBE468);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserRejectsPhoneCallOrMessagesContactConfirmationState.ConfirmationStatus()
{
  return &type metadata for UserRejectsPhoneCallOrMessagesContactConfirmationState.ConfirmationStatus;
}

unint64_t sub_1D2FBE4A4()
{
  unint64_t result = qword_1EA6999E0;
  if (!qword_1EA6999E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA6999E0);
  }
  return result;
}

uint64_t sub_1D2FBE4F8()
{
  unint64_t v0 = sub_1D3002638();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D2FBE544(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD611B8);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  MEMORY[0x1F4188790](v9);
  unsigned __int8 v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1D2F1CD78(a1, &qword_1EBD611B8);
    sub_1D2FDA7DC(a2, (uint64_t)v8);
    uint64_t v13 = sub_1D30010A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1D2F1CD78((uint64_t)v8, &qword_1EBD611B8);
  }
  else
  {
    sub_1D2F15C78(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1D2FE5418((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1D30010A8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1D2FBE750(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D30010A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1D2F1CD78(a1, &qword_1EBD62AA0);
    sub_1D2FDABAC(a2, (uint64_t)v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
    return sub_1D2F1CD78((uint64_t)v8, &qword_1EBD62AA0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1D2FE57D4((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v16;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  }
}

uint64_t sub_1D2FBE940(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v14 = *(void *)(a4 + 16);
  if (v14)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v15 = v8 + 16;
    int v26 = v16;
    uint64_t v17 = a4 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v21 = *(void *)(v15 + 56);
    int v22 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v23 = (void (**)(char *, uint64_t))(v15 - 8);
    unint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 32);
    v20[1] = a4;
    swift_bridgeObjectRetain();
    double v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 40);
    v20[0] = (v15 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v26(v13, v17, v7);
      uint64_t v18 = *v25;
      (*v25)(v13, 0, 1, v7);
      if ((*v24)(v13, 1, v7) == 1) {
        break;
      }
      (*v22)(v10, v13, v7);
      v27(&v29, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        (*v23)(v10, v7);
        return swift_bridgeObjectRelease();
      }
      (*v23)(v10, v7);
      v17 += v21;
      if (!--v14) {
        goto LABEL_8;
      }
    }
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v18(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1D2FBEBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_1D2FBED50(a2);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1D2F0DD14(a1), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = sub_1D30010A8();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(a3, v9 + *(void *)(v11 + 72) * v8, v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
  else
  {
    uint64_t v12 = sub_1D30010A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2FBED50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_beginAccess();
  uint64_t v9 = *(void *)(v1 + 24);
  if (!*(void *)(v9 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1D2F0DD14(a1);
  if ((v11 & 1) == 0)
  {
    uint64_t v8 = swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v13 = *(void *)(v2 + 16);
    MEMORY[0x1F4188790](v8);
    *(&v16 - 2) = a1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D2FBE940(MEMORY[0x1E4FBC868], (void (*)(uint64_t *, char *))sub_1D2FBF1F4, (uint64_t)(&v16 - 4), v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = 0x8000000000000000;
    sub_1D2FE6360(v12, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    *(void *)(v2 + 24) = v16;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_endAccess();
    return v12;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1D2FBEF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[1] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)v20 - v9;
  uint64_t v11 = sub_1D30010A8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v20 - v16;
  type metadata accessor for PLUSLoggingIdGenerator();
  static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)(a3, a2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1D2F1CD78((uint64_t)v10, &qword_1EBD62AA0);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  int v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v19(v15, v17, v11);
  v19(v8, (char *)a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  sub_1D2FBE750((uint64_t)v8, (uint64_t)v15);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t type metadata accessor for UniversalSELFPlusStoreIdMapper()
{
  return self;
}

uint64_t sub_1D2FBF1F4(uint64_t a1, uint64_t a2)
{
  return sub_1D2FBEF7C(a1, a2, *(void *)(v2 + 16));
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 96);
  uint64_t v4 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  sub_1D2F39578(a1, (uint64_t)v4);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1D2F1CD78((uint64_t)v4, &qword_1EBD62A80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D30);
    swift_deallocPartialClassInstance();
    uint64_t v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(void *)(*(void *)v5 + 96), v4, v6);
  }
  sub_1D2F1CD78(a1, &qword_1EBD62A80);
  return v5;
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (a1)
  {
    *(void *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6999F0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t INControlHomeIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1D2F31A38();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D3004370;
  *(void *)(v1 + 32) = sub_1D2F0BCB8(0, &qword_1EA6999E8);
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t INControlHomeIntentFeatureExtractor.init()()
{
  sub_1D2F31A38();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D3004370;
  *(void *)(v1 + 32) = sub_1D2F0BCB8(0, &qword_1EA6999E8);
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t INControlHomeIntentFeatureExtractor.intentTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t INControlHomeIntentFeatureExtractor.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t INControlHomeIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FBF438()
{
  return swift_bridgeObjectRetain();
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.init(value:)(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62A80);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F39578(a1, (uint64_t)v5);
  uint64_t v6 = sub_1D3001018();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D2F1CD78((uint64_t)v5, &qword_1EBD62A80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698D30);
    swift_deallocPartialClassInstance();
    uint64_t v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(void *)(*(void *)v1 + 96), v5, v6);
  }
  sub_1D2F1CD78(a1, &qword_1EBD62A80);
  return v1;
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp.__deallocating_deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D3001018();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FBF910(uint64_t *a1)
{
  return sub_1D2FBF990(a1, (void (*)(void))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName);
}

uint64_t sub_1D2FBF928(uint64_t *a1)
{
  return sub_1D2FBF9E4(a1, (void (*)(void))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName);
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentZoneName.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t ControlHomeIntentFeature.ControlHomeIntentZoneName.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2FBF978(uint64_t *a1)
{
  return sub_1D2FBF990(a1, (void (*)(void))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName);
}

uint64_t sub_1D2FBF990(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2FBF9CC(uint64_t *a1)
{
  return sub_1D2FBF9E4(a1, (void (*)(void))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName);
}

uint64_t sub_1D2FBF9E4(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(void *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6999F0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FBFB7C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2FBFBB4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1)
  {
    *(void *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA6999F0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

unint64_t sub_1D2FBFC20(id *a1)
{
  uint64_t v2 = (void *)sub_1D3001018();
  uint64_t v3 = *(v2 - 1);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699420);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D3000D78();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v71 = (char *)&v68 - v14;
  id v72 = *a1;
  id v15 = objc_msgSend(v72, sel_dateInterval);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_1D3000D38();

    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v17(v8, v13, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v17(v71, v8, v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
      unint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1D3004370;
      sub_1D3000D58();
      uint64_t v19 = type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp(0);
      uint64_t v20 = swift_allocObject();
      int v22 = *(void (**)(uint64_t, char *, void *))(v3 + 32);
      uint64_t v21 = (void *)(v3 + 32);
      v22(v20 + *(void *)(*(void *)v20 + 96), v5, v2);
      *(void *)(v18 + 56) = v19;
      *(void *)(v18 + 64) = sub_1D2FC0654(&qword_1EA699A38, (void (*)(uint64_t))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp);
      *(void *)(v18 + 32) = v20;
      id v23 = v72;
      id v24 = objc_msgSend(v72, sel_intent);
      self;
      double v25 = (void *)swift_dynamicCastObjCClass();
      if (!v25 || (id v26 = objc_msgSend(v25, sel_filters)) == 0)
      {
LABEL_17:

        goto LABEL_18;
      }
      uint64_t v27 = v26;
      sub_1D2F0BCB8(0, &qword_1EA699A50);
      uint64_t v28 = sub_1D3001DC8();

      if ((unint64_t)v28 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v2 = (void *)sub_1D30025A8();
        swift_bridgeObjectRelease();
        if (v2) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v2 = *(void **)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v2)
        {
LABEL_7:
          if ((v28 & 0xC000000000000001) != 0)
          {
            uint64_t v29 = (void *)MEMORY[0x1D942E3A0](0, v28);
          }
          else
          {
            if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_43;
            }
            uint64_t v29 = *(id *)(v28 + 32);
          }
          uint64_t v2 = v29;
          swift_bridgeObjectRelease();
          id v30 = objc_msgSend(v2, sel_group);
          if (v30)
          {
            unint64_t v31 = v30;
            id v32 = objc_msgSend(v30, sel_spokenPhrase);

            uint64_t v33 = sub_1D3001B78();
            uint64_t v35 = v34;

            uint64_t v36 = type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName(0);
            uint64_t v37 = swift_allocObject();
            *(void *)(v37 + 16) = v33;
            *(void *)(v37 + 24) = v35;
            id v38 = sub_1D2F27F00((void *)1, 2, 1, (void *)v18);
            uint64_t v74 = v36;
            uint64_t v75 = sub_1D2FC0654(qword_1EA699A60, (void (*)(uint64_t))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName);
            *(void *)&long long v73 = v37;
            v38[2] = 2;
            unint64_t v18 = (unint64_t)v38;
            sub_1D2F0BE68(&v73, (uint64_t)(v38 + 9));
          }
          id v39 = objc_msgSend(v2, sel_zone);
          if (v39)
          {
            char v40 = v39;
            id v41 = objc_msgSend(v39, sel_spokenPhrase);

            uint64_t v42 = sub_1D3001B78();
            uint64_t v44 = v43;

            uint64_t v45 = type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName(0);
            uint64_t v46 = swift_allocObject();
            *(void *)(v46 + 16) = v42;
            *(void *)(v46 + 24) = v44;
            uint64_t v47 = (void *)v18;
            unint64_t v48 = *(void *)(v18 + 16);
            uint64_t v49 = v47;
            unint64_t v50 = v47[3];
            if (v48 >= v50 >> 1) {
              uint64_t v49 = sub_1D2F27F00((void *)(v50 > 1), v48 + 1, 1, v49);
            }
            uint64_t v74 = v45;
            uint64_t v75 = sub_1D2FC0654(&qword_1EA699A58, (void (*)(uint64_t))type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName);
            *(void *)&long long v73 = v46;
            v49[2] = v48 + 1;
            uint64_t v51 = &v49[5 * v48];
            unint64_t v18 = (unint64_t)v49;
            sub_1D2F0BE68(&v73, (uint64_t)(v51 + 4));
          }

          goto LABEL_17;
        }
      }

      swift_bridgeObjectRelease();
LABEL_18:
      id v52 = objc_msgSend(v23, sel_intentResponse);
      if (v52)
      {
        uint64_t v21 = v52;
        self;
        uint64_t v53 = (void *)swift_dynamicCastObjCClass();
        if (v53)
        {
          id v54 = objc_msgSend(v53, sel_entityResponses);
          if (v54)
          {
            int v55 = v54;
            sub_1D2F0BCB8(0, &qword_1EA699A40);
            uint64_t v28 = sub_1D3001DC8();

            *(void *)&long long v73 = MEMORY[0x1E4FBC860];
            if (!((unint64_t)v28 >> 62))
            {
              uint64_t v56 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v56)
              {
LABEL_23:
                uint64_t v69 = v21;
                unint64_t v70 = v18;
                if (v56 < 1)
                {
                  __break(1u);
                  goto LABEL_57;
                }
                for (uint64_t i = 0; i != v56; ++i)
                {
                  if ((v28 & 0xC000000000000001) != 0) {
                    id v59 = (id)MEMORY[0x1D942E3A0](i, v28);
                  }
                  else {
                    id v59 = *(id *)(v28 + 8 * i + 32);
                  }
                  id v60 = v59;
                  id v61 = objc_msgSend(v59, sel_entity);

                  if (v61)
                  {
                    MEMORY[0x1D942DCC0]();
                    if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                      sub_1D3001E28();
                    sub_1D3001E68();
                    sub_1D3001DE8();
                  }
                }
                swift_bridgeObjectRelease();
                id v23 = v72;
                unint64_t v63 = v73;
                uint64_t v21 = v69;
                unint64_t v18 = v70;
LABEL_48:
                swift_bridgeObjectRelease();
                if (v63 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v67 = sub_1D30025A8();
                  swift_bridgeObjectRelease();
                  if (v67)
                  {
LABEL_50:
                    uint64_t v28 = type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(0);
                    uint64_t v56 = swift_allocObject();
                    *(void *)(v56 + 16) = v63;
                    uint64_t v64 = (void *)v18;
                    unint64_t v18 = *(void *)(v18 + 16);
                    uint64_t v2 = v64;
                    unint64_t v57 = v64[3];
                    int v55 = (void *)(v18 + 1);
                    if (v18 < v57 >> 1)
                    {
LABEL_51:
                      uint64_t v74 = v28;
                      uint64_t v75 = sub_1D2FC0654(&qword_1EA699A48, (void (*)(uint64_t))type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses);
                      *(void *)&long long v73 = v56;
                      v2[2] = v55;
                      uint64_t v65 = &v2[5 * v18];
                      unint64_t v18 = (unint64_t)v2;
                      sub_1D2F0BE68(&v73, (uint64_t)(v65 + 4));

                      goto LABEL_52;
                    }
LABEL_57:
                    uint64_t v2 = sub_1D2F27F00((void *)(v57 > 1), (int64_t)v55, 1, v2);
                    goto LABEL_51;
                  }
                }
                else if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  goto LABEL_50;
                }
                (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
                swift_bridgeObjectRelease();

                return v18;
              }
LABEL_47:
              swift_bridgeObjectRelease();
              unint64_t v63 = MEMORY[0x1E4FBC860];
              goto LABEL_48;
            }
LABEL_43:
            if (v28 < 0) {
              int v55 = (void *)v28;
            }
            else {
              int v55 = (void *)(v28 & 0xFFFFFFFFFFFFFF8);
            }
            swift_bridgeObjectRetain();
            uint64_t v56 = sub_1D30025A8();
            if (v56) {
              goto LABEL_23;
            }
            goto LABEL_47;
          }
          uint64_t v62 = v21;
        }
        else
        {
          uint64_t v62 = v23;
          id v23 = v21;
        }
      }
LABEL_52:

      (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
      return v18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1D2F1CD78((uint64_t)v8, &qword_1EA699420);

  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for INControlHomeIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for INControlHomeIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for INControlHomeIntentFeatureExtractor);
}

uint64_t dispatch thunk of INControlHomeIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of INControlHomeIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for ControlHomeIntentFeature()
{
  return &type metadata for ControlHomeIntentFeature;
}

uint64_t type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentInteractionTimestamp(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA6999F8);
}

uint64_t type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentGroupName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699A08);
}

uint64_t type metadata accessor for ControlHomeIntentFeature.ControlHomeIntentZoneName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699A18);
}

ValueMetadata *type metadata accessor for ControlHomeIntentResponseFeatures()
{
  return &type metadata for ControlHomeIntentResponseFeatures;
}

uint64_t type metadata accessor for ControlHomeIntentResponseFeatures.ControlHomeIntentEntityResponses(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699A28);
}

uint64_t sub_1D2FC0654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DeferredAsyncSequenceTaskAdapter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for DeferredAsyncSequenceTaskAdapter.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2FC06EC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2FC0714(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D2F7859C, 0, 0);
}

uint64_t sub_1D2FC0734(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_1D2F1C2F4;
  return MEMORY[0x1F4188298](sub_1D2F7859C, 0, 0);
}

uint64_t sub_1D2FC07E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D2FC07FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1D2FC06EC(*v1);
  uint64_t v5 = v4;
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t type metadata accessor for MapLastSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2FC0864()
{
  uint64_t result = sub_1D30022F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1D2FC0910(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 33) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  uint64_t v12 = *a2;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    *a1 = v12;
    a1 = (void *)(v12 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = a2[1];
    *a1 = v12;
    a1[1] = v15;
    unint64_t v16 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)(v17 + 8);
    *(void *)unint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = v18;
    *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
    uint64_t v19 = (void *)((v16 + v8 + 17) & ~v8);
    uint64_t v20 = (const void *)((v17 + v8 + 17) & ~v8);
    uint64_t v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_retain();
    swift_retain();
    if (v21(v20, 1, v4))
    {
      memcpy(v19, v20, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1D2FC0ABC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v5;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

void *sub_1D2FC0B9C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  unint64_t v5 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v6 + 8);
  *(void *)unint64_t v5 = *(void *)v6;
  *(void *)(v5 + 8) = v7;
  *(unsigned char *)(v5 + 16) = *(unsigned char *)(v6 + 16);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)((v10 + 17 + v5) & ~v10);
  uint64_t v12 = (const void *)((v10 + 17 + v6) & ~v10);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  swift_retain();
  if (v13(v12, 1, v8))
  {
    if (*(_DWORD *)(v9 + 84)) {
      size_t v14 = *(void *)(v9 + 64);
    }
    else {
      size_t v14 = *(void *)(v9 + 64) + 1;
    }
    memcpy(v11, v12, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v11, v12, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
  }
  return a1;
}

void *sub_1D2FC0CEC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  unint64_t v7 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = v9;
  swift_retain();
  swift_release();
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (void *)((v12 + 17 + v7) & ~v12);
  size_t v14 = (void *)((v12 + 17 + v8) & ~v12);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v15(v13, 1, v10);
  int v16 = v15(v14, 1, v10);
  if (v8)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v13, v14, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      return a1;
    }
    int v17 = *(_DWORD *)(v11 + 84);
    size_t v18 = *(void *)(v11 + 64);
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v13, v14, v10);
      return a1;
    }
    uint64_t v20 = *(void (**)(void *, uint64_t))(v11 + 8);
    uint64_t v19 = v11 + 8;
    v20(v13, v10);
    int v17 = *(_DWORD *)(v19 + 76);
    size_t v18 = *(void *)(v19 + 56);
  }
  if (v17) {
    size_t v21 = v18;
  }
  else {
    size_t v21 = v18 + 1;
  }
  memcpy(v13, v14, v21);
  return a1;
}

_OWORD *sub_1D2FC0EAC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v4 = *(_OWORD *)v5;
  *(unsigned char *)(v4 + 16) = *(unsigned char *)(v5 + 16);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (void *)((v8 + 17 + v4) & ~v8);
  uint64_t v10 = (const void *)((v8 + 17 + v5) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

_OWORD *sub_1D2FC0FE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 23;
  *a1 = *a2;
  swift_release();
  unint64_t v6 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v6 = *(_OWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(unsigned char *)(v6 + 16) = *(unsigned char *)((v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  size_t v11 = (void *)((v10 + 17 + v6) & ~v10);
  uint64_t v12 = (void *)((v10 + 17 + v7) & ~v10);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v13(v11, 1, v8);
  int v14 = v13(v12, 1, v8);
  if (v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v11, v12, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v8);
      return a1;
    }
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v11, v12, v8);
      return a1;
    }
    size_t v18 = *(void (**)(void *, uint64_t))(v9 + 8);
    uint64_t v17 = v9 + 8;
    v18(v11, v8);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v11, v12, v19);
  return a1;
}

uint64_t sub_1D2FC1190(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v9;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v11 = v9 + ((v8 + 33) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                     + v8
                                                                     + 17) & ~v8);
        if (v18 >= 2) {
          return v18 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v17 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v17) = -1;
        }
        return (v17 + 1);
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_1D2FC1374(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 33) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x1D2FC168CLL);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if ((v9 & 0x80000000) != 0)
        {
          size_t v21 = (unsigned char *)((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v11 + 17) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v25 = a2 + 1;
            id v26 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            unint64_t v27 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v11 + 17) & ~v11;
            v26(v27, v25);
          }
          else
          {
            if (v12 <= 3) {
              int v22 = ~(-1 << (8 * v12));
            }
            else {
              int v22 = -1;
            }
            if (v12)
            {
              int v23 = v22 & (~v9 + a2);
              if (v12 <= 3) {
                int v24 = v12;
              }
              else {
                int v24 = 4;
              }
              bzero(v21, v12);
              switch(v24)
              {
                case 2:
                  *(_WORD *)size_t v21 = v23;
                  break;
                case 3:
                  *(_WORD *)size_t v21 = v23;
                  v21[2] = BYTE2(v23);
                  break;
                case 4:
                  *(_DWORD *)size_t v21 = v23;
                  break;
                default:
                  *size_t v21 = v23;
                  break;
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v20 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v20 = a2 - 1;
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for MapLastSequence.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2FC16DC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2FC1704(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_1D30022F8();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D2FC1854, 0, 0);
}

uint64_t sub_1D2FC1854()
{
  unint64_t v1 = *(int ***)(v0 + 32);
  if (*((unsigned char *)v1 + 32) == 1)
  {
    *((unsigned char *)v1 + 32) = 0;
    uint64_t v20 = (uint64_t (*)(uint64_t))((char *)*v1 + **v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D2FC1AFC;
    uint64_t v3 = *(void *)(v0 + 104);
LABEL_8:
    return v20(v3);
  }
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v9 = *(int *)(*(void *)(v0 + 24) + 36);
  *(_DWORD *)(v0 + 176) = v9;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v4, (char *)v1 + v9, v5);
  unsigned int v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  *(void *)(v0 + 128) = v10;
  *(void *)(v0 + 136) = (v8 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v10(v4, 1, v7) != 1)
  {
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v16 = *(void *)(v0 + 48);
    unsigned int v17 = *(void **)(v0 + 32);
    int v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    *(void *)(v0 + 144) = v18;
    *(void *)(v0 + 152) = (v16 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v18(v14, v13, v15);
    uint64_t v20 = (uint64_t (*)(uint64_t))(*v17 + *(int *)*v17);
    int v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v19;
    *int v19 = v0;
    v19[1] = sub_1D2FC1E48;
    uint64_t v3 = *(void *)(v0 + 88);
    goto LABEL_8;
  }
  (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 72));
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 48) + 56))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1D2FC1AFC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2FC20C4;
  }
  else {
    uint64_t v2 = sub_1D2FC1C10;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2FC1C10()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 80) + 40))(*(void *)(v0 + 32) + *(int *)(*(void *)(v0 + 24) + 36), *(void *)(v0 + 104), *(void *)(v0 + 72));
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(int *)(*(void *)(v0 + 24) + 36);
  *(_DWORD *)(v0 + 176) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v6 + v7, v2);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(void *)(v0 + 128) = v8;
  *(void *)(v0 + 136) = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v8(v1, 1, v4) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 72));
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 48) + 56))(*(void *)(v0 + 16), 1, 1, *(void *)(v0 + 40));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 64);
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void **)(v0 + 32);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
    *(void *)(v0 + 144) = v16;
    *(void *)(v0 + 152) = (v14 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v16(v12, v11, v13);
    int v19 = (uint64_t (*)(uint64_t))(*v15 + *(int *)*v15);
    unsigned int v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v17;
    void *v17 = v0;
    v17[1] = sub_1D2FC1E48;
    uint64_t v18 = *(void *)(v0 + 88);
    return v19(v18);
  }
}

uint64_t sub_1D2FC1E48()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2FC2160;
  }
  else {
    uint64_t v2 = sub_1D2FC1F5C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2FC1F5C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if ((*(unsigned int (**)(void, uint64_t, uint64_t))(v0 + 128))(*(void *)(v0 + 88), 1, v1) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 48);
    (*(void (**)(uint64_t))(*(void *)(v0 + 32) + 16))(v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  }
  else
  {
    (*(void (**)(void, void, uint64_t))(v0 + 144))(*(void *)(v0 + 56), *(void *)(v0 + 64), v1);
  }
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  (*(void (**)(void, void, void))(*(void *)(v0 + 80) + 40))(*(void *)(v0 + 32) + *(int *)(v0 + 176), *(void *)(v0 + 88), *(void *)(v0 + 72));
  v4(v7, v5, v6);
  (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 48) + 56))(*(void *)(v0 + 16), 0, 1, *(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1D2FC20C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D2FC2160()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[8], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D2FC2214(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D2F1C2F4;
  return sub_1D2FC1704(a1, a2);
}

uint64_t sub_1D2FC22BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D2FC22D8()
{
  sub_1D2FC16DC(*v0);
  return swift_release();
}

uint64_t SISchemaUUID.toNSUUIDSafely()@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_value);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D3000F68();
    unint64_t v7 = v6;

    sub_1D2F587AC(v5, v7, a1);
    return sub_1D2F0D1CC(v5, v7);
  }
  else
  {
    uint64_t v9 = sub_1D30010A8();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a1, 1, 1, v9);
  }
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.__allocating_init()()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  unsigned int v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  id v3 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v2) {
    id v3 = &type metadata for DisabledPLUSEventLogTarget;
  }
  uint64_t v4 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v2) {
    uint64_t v4 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  }
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  type metadata accessor for PLUSUniversalSuggestionsInferenceLogger();
  uint64_t v5 = swift_allocObject();
  sub_1D2F0BE68(&v7, v5 + 16);
  return v5;
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.__allocating_init(logTarget:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1D2F0BE68(a1, v2 + 16);
  return v2;
}

uint64_t type metadata accessor for PLUSUniversalSuggestionsInferenceLogger()
{
  return self;
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.init(logTarget:)(long long *a1)
{
  sub_1D2F0BE68(a1, v1 + 16);
  return v1;
}

void sub_1D2FC2558(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v42 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v41 - v14;
  MEMORY[0x1F4188790](v13);
  unsigned int v17 = (char *)&v41 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v15, a1, v8);
  sub_1D2F47F74((uint64_t)v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1D2F0D16C((uint64_t)v7);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D3001918();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBD65778);
    uint64_t v20 = sub_1D30018F8();
    os_log_type_t v21 = sub_1D30020B8();
    if (os_log_type_enabled(v20, v21))
    {
      int v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v22 = 0;
      _os_log_impl(&dword_1D2F05000, v20, v21, "Could not generate a plus logging identifier for a SELF event donation", v22, 2u);
      MEMORY[0x1D942F2D0](v22, -1, -1);
    }
  }
  else
  {
    int v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v23(v17, v7, v8);
    v18(v12, (uint64_t)v17, v8);
    type metadata accessor for PLUSSchemaEventConstructor();
    uint64_t v24 = swift_allocObject();
    v23((char *)(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v12, v8);
    *(_DWORD *)(v24
              + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
    uint64_t v25 = sub_1D2FFEC10(a2);
    uint64_t v26 = (uint64_t)v17;
    if (v25)
    {
      unint64_t v27 = v25;
      id v28 = _s28SiriPrivateLearningAnalytics28PLUSSchemaMessageConstructorO35suggestionChangeDataCaptureMetadata10changeTypeSo0e10PLUSChangejkL0CSgSo0eojkN0V_tFZ_0(v42);
      if (v28)
      {
        uint64_t v29 = v28;
        id v30 = sub_1D2F32148((uint64_t)v27, (uint64_t)v28);
        if (v30)
        {
          unint64_t v31 = v30;
          uint64_t v32 = v41[5];
          uint64_t v33 = v41[6];
          __swift_project_boxed_opaque_existential_1(v41 + 2, v32);
          PLUSEventLogTarget.emitMessage(_:isolatedStreamId:)((uint64_t)v31, v26, v32, v33);

          swift_setDeallocating();
          uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
          v34(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v8);
          swift_deallocClassInstance();

          v34(v26, v8);
          return;
        }

        unint64_t v27 = v29;
      }
    }
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1D3001918();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EBD65778);
    uint64_t v36 = sub_1D30018F8();
    os_log_type_t v37 = sub_1D30020B8();
    if (os_log_type_enabled(v36, v37))
    {
      id v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v44 = v39;
      *(_DWORD *)id v38 = 136315138;
      uint64_t v43 = sub_1D2F09508(0xD00000000000004BLL, 0x80000001D3012EB0, &v44);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v36, v37, "PLUSUniversalSuggestionsInferenceLogger.%s:  failed to create PLUS SELF event templates", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v39, -1, -1);
      MEMORY[0x1D942F2D0](v38, -1, -1);

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v8);
    }
    else
    {
      swift_setDeallocating();
      char v40 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v40(v24 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v8);
      swift_deallocClassInstance();

      v40(v26, v8);
    }
  }
}

void sub_1D2FC2B28(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v56) = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v11 = sub_1D30010A8();
  uint64_t v12 = *(void **)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v54 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v57 = (char *)&v52 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v52 - v18;
  MEMORY[0x1F4188790](v17);
  os_log_type_t v21 = (char *)&v52 - v20;
  int v22 = (void (*)(char *, uint64_t, uint64_t))v12[2];
  uint64_t v55 = a1;
  v22(v19, a1, v11);
  sub_1D2F47F74((uint64_t)v19, (uint64_t)v10);
  int v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v23(v10, 1, v11) == 1)
  {
    sub_1D2F0D16C((uint64_t)v10);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1D3001918();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EBD65778);
    uint64_t v25 = sub_1D30018F8();
    os_log_type_t v26 = sub_1D30020B8();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl(&dword_1D2F05000, v25, v26, "Could not generate a plus logging identifier for a SELF event donation", v27, 2u);
      MEMORY[0x1D942F2D0](v27, -1, -1);
    }
  }
  else
  {
    id v52 = v12;
    id v28 = v10;
    uint64_t v29 = (void (*)(char *, char *, uint64_t))v12[4];
    v29(v21, v28, v11);
    type metadata accessor for PLUSLoggingIdGenerator();
    static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)((uint64_t)v21, a2, (uint64_t)v8);
    if (v23(v8, 1, v11) == 1)
    {
      sub_1D2F0D16C((uint64_t)v8);
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1D3001918();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EBD65778);
      unint64_t v31 = sub_1D30018F8();
      os_log_type_t v32 = sub_1D30020B8();
      BOOL v33 = os_log_type_enabled(v31, v32);
      uint64_t v34 = v52;
      if (v33)
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_1D2F05000, v31, v32, "Could not generate a suggestion link id for a SELF event donation", v35, 2u);
        MEMORY[0x1D942F2D0](v35, -1, -1);
      }

      ((void (*)(char *, uint64_t))v34[1])(v21, v11);
    }
    else
    {
      uint64_t v36 = (uint64_t)v57;
      v29(v57, v8, v11);
      os_log_type_t v37 = v54;
      v22(v54, (uint64_t)v21, v11);
      type metadata accessor for PLUSSchemaEventConstructor();
      uint64_t v38 = swift_allocObject();
      uint64_t v39 = v11;
      v29((char *)(v38 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId), v37, v11);
      *(_DWORD *)(v38
                + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_suggestionGenerationDomain) = 2;
      char v40 = sub_1D2F32374(v55, v36, v56, 0);
      if (v40)
      {
        id v41 = v40;
        uint64_t v42 = v53[5];
        uint64_t v43 = v53[6];
        __swift_project_boxed_opaque_existential_1(v53 + 2, v42);
        PLUSEventLogTarget.emitMessage(_:isolatedStreamId:)((uint64_t)v41, (uint64_t)v21, v42, v43);
        swift_setDeallocating();
        uint64_t v44 = (void (*)(uint64_t, uint64_t))v52[1];
        v44(v38 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v39);
        swift_deallocClassInstance();

        v44(v36, v39);
        v44((uint64_t)v21, v39);
      }
      else
      {
        uint64_t v56 = v21;
        if (qword_1EBD63A48 != -1) {
          swift_once();
        }
        uint64_t v45 = sub_1D3001918();
        __swift_project_value_buffer(v45, (uint64_t)qword_1EBD65778);
        uint64_t v46 = sub_1D30018F8();
        os_log_type_t v47 = sub_1D30020B8();
        if (os_log_type_enabled(v46, v47))
        {
          unint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = v36;
          uint64_t v50 = swift_slowAlloc();
          uint64_t v59 = v50;
          *(_DWORD *)unint64_t v48 = 136315138;
          uint64_t v58 = sub_1D2F09508(0xD00000000000004FLL, 0x80000001D3012F00, &v59);
          sub_1D3002318();
          _os_log_impl(&dword_1D2F05000, v46, v47, "PLUSUniversalSuggestionsInferenceLogger.%s:  failed to create PLUS SELF event templates", v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v50, -1, -1);
          MEMORY[0x1D942F2D0](v48, -1, -1);

          swift_release();
          uint64_t v51 = (void (*)(uint64_t, uint64_t))v52[1];
          v51(v49, v39);
        }
        else
        {
          swift_setDeallocating();
          uint64_t v51 = (void (*)(uint64_t, uint64_t))v52[1];
          v51(v38 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics26PLUSSchemaEventConstructor_plusId, v39);
          swift_deallocClassInstance();

          v51(v36, v39);
        }
        v51((uint64_t)v56, v39);
      }
    }
  }
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t PLUSUniversalSuggestionsInferenceLogger.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t method lookup function for PLUSUniversalSuggestionsInferenceLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PLUSUniversalSuggestionsInferenceLogger);
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsInferenceLogger.__allocating_init(logTarget:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsInferenceLogger.logSuggestionGenerated(originalRequestId:suggestion:changeDataCaptureType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of PLUSUniversalSuggestionsInferenceLogger.logSuggestionOutcomeReported(originalRequestId:suggestionId:suggestionOutcome:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_1D2FC3378()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D2FC33C8(void *a1)
{
  type metadata accessor for BiomeAsyncIterator();
  uint64_t v2 = swift_allocObject();
  sub_1D2FC3490(a1);
  return v2;
}

uint64_t sub_1D2FC340C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1D2FC3490(a1);
  return v2;
}

void sub_1D2FC344C(uint64_t *a1@<X8>)
{
  id v3 = *v1;
  uint64_t v4 = sub_1D2FC33C8(v3);

  *a1 = v4;
}

uint64_t sub_1D2FC3490(void *a1)
{
  uint64_t v2 = v1;
  _s17AsyncAwaitAdapterCMa();
  id v4 = sub_1D2F2DB94();
  *(void *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 24) = 0;
  id v5 = v4;
  objc_msgSend(a1, sel_subscribe_, v5);

  return v2;
}

uint64_t sub_1D2FC3510()
{
  *(void *)(v1 + 24) = v0;
  *(void *)(v1 + 32) = *v0;
  return MEMORY[0x1F4188298](sub_1D2FC3558, 0, 0);
}

uint64_t sub_1D2FC3558()
{
  uint64_t v1 = v0[3];
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2(0);
  }
  else if (sub_1D3001F68())
  {
    *(unsigned char *)(v1 + 24) = 1;
    sub_1D2F2D35C();
    sub_1D3001F08();
    sub_1D2F1CC44();
    swift_allocError();
    sub_1D3001A68();
    swift_willThrow();
    id v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    id v5 = (void *)swift_task_alloc();
    v0[5] = v5;
    uint64_t v6 = sub_1D30022F8();
    *id v5 = v0;
    v5[1] = sub_1D2FC3710;
    uint64_t v7 = v0[3];
    return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0x29287478656ELL, 0xE600000000000000, sub_1D2FC45F4, v7, v6);
  }
}

uint64_t sub_1D2FC3710()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D2FC3824;
  }
  else {
    uint64_t v2 = sub_1D2F1B520;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D2FC3824()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2FC383C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 16);
  sub_1D2F2D35C();

  return v1;
}

uint64_t sub_1D2FC386C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1D2F2D35C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BiomeAsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for BiomeAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2FC38E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D2FC3900(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  id v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D2F1BA74;
  v4[3] = v3;
  v4[4] = *v3;
  return MEMORY[0x1F4188298](sub_1D2FC3558, 0, 0);
}

uint64_t sub_1D2FC39D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v11;
  uint64_t v12 = type metadata accessor for BiomeAsyncIterator();
  void *v11 = v6;
  v11[1] = sub_1D2F4FCF8;
  return MEMORY[0x1F4187C88](a1, a2, a3, v12, a6, v6 + 16);
}

uint64_t sub_1D2FC3AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a4, a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for AsyncTimedSequence.Iterator();
  *(double *)(a4 + *(int *)(result + 36)) = a5;
  uint64_t v12 = (void *)(a4 + *(int *)(result + 40));
  *uint64_t v12 = a2;
  v12[1] = a3;
  return result;
}

uint64_t sub_1D2FC3B8C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D2FC3BB0, 0, 0);
}

uint64_t sub_1D2FC3BB0()
{
  *(CFAbsoluteTime *)(v0 + 40) = CFAbsoluteTimeGetCurrent();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *id v3 = v0;
  v3[1] = sub_1D2FC3CB4;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x1F4187C78](v4, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_1D2FC3CB4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1D2FC3DE4, 0, 0);
  }
}

uint64_t sub_1D2FC3DE4()
{
  double v1 = *(double *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  double v4 = CFAbsoluteTimeGetCurrent() - v1;
  if (*(double *)(v3 + *(int *)(v2 + 36)) >= v4)
  {
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v5 = (void *)(*(void *)(v0 + 32) + *(int *)(*(void *)(v0 + 24) + 40));
    uint64_t v11 = (uint64_t (*)(uint64_t, __n128))(*v5 + *(int *)*v5);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1D2FC3F20;
    uint64_t v7 = *(void *)(v0 + 16);
    v8.n128_f64[0] = v4;
    return v11(v7, v8);
  }
}

uint64_t sub_1D2FC3F20()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  double v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D2FC4018(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_1D2F1C2F4;
  v6[2] = a1;
  return MEMORY[0x1F4188298](sub_1D2FC3BB0, 0, 0);
}

uint64_t sub_1D2FC40D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  v6[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  void v6[6] = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_1D2FC4220;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v13);
}

uint64_t sub_1D2FC4220()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t sub_1D2FC4354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  sub_1D3001F78();
  sub_1D2FC3AC4((uint64_t)v12, *(void *)(v3 + *(int *)(a1 + 40)), *(void *)(v3 + *(int *)(a1 + 40) + 8), a2, *(double *)(v3 + *(int *)(a1 + 36)));
  return swift_retain();
}

uint64_t sub_1D2FC44C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D2FC4354(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_1D2FC4520()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D2FC45C0()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for AsyncTimedSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1D2FC45F4(uint64_t a1)
{
}

uint64_t sub_1D2FC4618()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D2FC46C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    uint64_t v12 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = v12[1];
    uint64_t v14 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v12;
    v14[1] = v13;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D2FC47D4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1D2FC484C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_retain();
  return a1;
}

uint64_t sub_1D2FC48DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D2FC4978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D2FC4A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D2FC4A98(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1D2FC4BF4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1D2FC4C08(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1D2FC4E04);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for AsyncTimedSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2FC4E44()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D2FC4F00(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v10 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v10 = *v11;
    unsigned int v12 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = v12[1];
    int v14 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *int v14 = *v12;
    v14[1] = v13;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1D2FC502C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_1D2FC50C8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_retain();
  return a1;
}

uint64_t sub_1D2FC517C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D2FC523C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D2FC52EC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1D2FC53A4(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1D2FC5554);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    int v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_1D2FC5568(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v18 = (void *)(((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v19 = a2 ^ 0x80000000;
                v18[1] = 0;
              }
              else
              {
                uint64_t v19 = (a2 - 1);
              }
              *unint64_t v18 = v19;
            }
            else
            {
              int v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
              v17(a1, a2);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v11 = a3 - v9 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v15 = v14;
  }
  else {
    int v15 = 1;
  }
  if (((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1D2FC5788);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

uint64_t PluginHandle.instance.getter()
{
  return swift_unknownObjectRetain();
}

id PluginHandle.bundle.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t sub_1D2FC57E0()
{
  uint64_t v1 = sub_1D3000F18();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + 32), sel_bundleURL);
  sub_1D3000EE8();

  uint64_t v6 = sub_1D3000E68();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

void *PluginHandle.__allocating_init(instance:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

void *PluginHandle.init(instance:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_1D2FC59E8(a1, a3, v3, ObjectType, a2);
}

uint64_t PluginHandle.deinit()
{
  swift_unknownObjectRelease();

  return v0;
}

uint64_t PluginHandle.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void *sub_1D2FC59E8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  a3[2] = a1;
  a3[3] = a5;
  a3[4] = a2;
  return a3;
}

uint64_t type metadata accessor for PluginHandle()
{
  return self;
}

uint64_t method lookup function for PluginHandle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PluginHandle);
}

uint64_t dispatch thunk of PluginHandle.sourceBundleName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of PluginHandle.__allocating_init(instance:bundle:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static SELFUsoRedactionUtils.joinRedactedSELFUsoGraph(graph:redactions:)(uint64_t a1, unint64_t a2)
{
  uint64_t v58 = sub_1D3001288();
  uint64_t v63 = *(void *)(v58 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v58);
  uint64_t v64 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v61 = (char *)&v52 - v6;
  unint64_t v60 = sub_1D3001308();
  uint64_t v7 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  unsigned int v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D3001348();
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D2FC654C(a2);
  sub_1D3001338();
  id v14 = objc_msgSend((id)a1, sel_nodes);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v56 = v12;
  if (v14)
  {
    int v16 = v14;
    sub_1D2F0BCB8(0, &qword_1EA699CD0);
    unint64_t v17 = sub_1D3001DC8();

    v66[0] = v15;
    sub_1D2F0A084(0, 0, 0);
    uint64_t v18 = v66[0];
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1D30025A8();
      uint64_t v19 = result;
    }
    else
    {
      uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
    }
    unint64_t v57 = (void (**)(char *, char *, uint64_t))a1;
    uint64_t v62 = (id *)v17;
    if (v19)
    {
      if (v19 < 1)
      {
        __break(1u);
        goto LABEL_42;
      }
      uint64_t v21 = 0;
      unint64_t v59 = v17 & 0xC000000000000001;
      do
      {
        if (v59) {
          id v22 = (id)MEMORY[0x1D942E3A0](v21, v62);
        }
        else {
          id v22 = v62[v21 + 4];
        }
        int v23 = v22;
        uint64_t v24 = v13;
        sub_1D2FC6254(v22, v21, v13);

        v66[0] = v18;
        unint64_t v26 = *(void *)(v18 + 16);
        unint64_t v25 = *(void *)(v18 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1D2F0A084(v25 > 1, v26 + 1, 1);
          uint64_t v18 = v66[0];
        }
        ++v21;
        *(void *)(v18 + 16) = v26 + 1;
        (*(void (**)(unint64_t, char *, unint64_t))(v7 + 32))(v18+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v26, v9, v60);
        uint64_t v13 = v24;
      }
      while (v19 != v21);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    int v12 = v56;
    sub_1D3001328();
    a1 = (uint64_t)v57;
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v27 = objc_msgSend((id)a1, sel_edges);
  uint64_t v28 = v58;
  if (v27)
  {
    uint64_t v29 = v27;
    sub_1D2F0BCB8(0, &qword_1EA699CC8);
    unint64_t v30 = sub_1D3001DC8();

    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1D30025A8();
      swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_18:
        uint64_t v67 = v15;
        uint64_t result = sub_1D2F0A048(0, v31 & ~(v31 >> 63), 0);
        if ((v31 & 0x8000000000000000) == 0)
        {
          a1 = 0;
          unint64_t v59 = v30;
          unint64_t v60 = v30 & 0xC000000000000001;
          uint64_t v32 = v67;
          BOOL v33 = (void (**)(char *, char *, uint64_t))(v63 + 32);
          uint64_t v62 = (id *)v31;
          unint64_t v57 = (void (**)(char *, char *, uint64_t))(v63 + 32);
          do
          {
            if (v60) {
              id v34 = (id)MEMORY[0x1D942E3A0](a1, v30);
            }
            else {
              id v34 = *(id *)(v30 + 8 * a1 + 32);
            }
            uint64_t v35 = v34;
            sub_1D3001278();
            objc_msgSend(v35, sel_fromIndex);
            sub_1D3001268();
            objc_msgSend(v35, sel_toIndex);
            sub_1D3001258();
            if (objc_msgSend(v35, sel_hasLabel))
            {
              id v36 = objc_msgSend(v35, sel_label);
              if (v36)
              {
                os_log_type_t v37 = v36;
                objc_msgSend(v36, sel_usoElementId);
                uint64_t v38 = (void (*)(void *, void))sub_1D3001248();
                sub_1D3001388();
                v38(v66, 0);
                objc_msgSend(v37, sel_enumeration);
                uint64_t v39 = (void (*)(void *, void))sub_1D3001248();
                sub_1D3001378();
                v39(v66, 0);
                if (objc_msgSend(v37, sel_hasBaseEdgeLabel))
                {
                  id v40 = objc_msgSend(v37, sel_baseEdgeLabel);
                  if (v40)
                  {
                    id v41 = v40;
                    id v42 = objc_msgSend(v40, sel_value);

                    if (v42)
                    {
                      sub_1D3001B78();
                      uint64_t v52 = v43;

                      uint64_t v44 = (void (*)(void *, void))sub_1D3001248();
                      uint64_t v45 = (void (*)(char *, void))sub_1D3001368();
                      sub_1D3001358();
                      v45(v65, 0);
                      v44(v66, 0);
                    }
                  }
                }

                uint64_t v28 = v58;
                unint64_t v30 = v59;
                BOOL v33 = v57;
              }
            }
            uint64_t v46 = *v33;
            os_log_type_t v47 = v61;
            (*v33)(v61, v64, v28);

            uint64_t v67 = v32;
            unint64_t v49 = *(void *)(v32 + 16);
            unint64_t v48 = *(void *)(v32 + 24);
            if (v49 >= v48 >> 1)
            {
              sub_1D2F0A048(v48 > 1, v49 + 1, 1);
              os_log_type_t v47 = v61;
              uint64_t v32 = v67;
            }
            ++a1;
            *(void *)(v32 + 16) = v49 + 1;
            v46((char *)(v32+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v49), v47, v28);
          }
          while (v62 != (id *)a1);
          swift_bridgeObjectRelease();
          int v12 = v56;
          goto LABEL_37;
        }
LABEL_42:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v31) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
LABEL_37:
    sub_1D3001318();
  }
  sub_1D3001438();
  sub_1D3001478();
  swift_allocObject();
  sub_1D3001468();
  uint64_t v50 = v55;
  uint64_t v51 = sub_1D3001398();
  if (!v50) {
    a1 = v51;
  }
  (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v54);
  swift_release();
  return a1;
}

void sub_1D2FC6254(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30016B8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1D30016E8();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1D30016F8();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1D30012F8();
  if (objc_msgSend(a1, sel_hasUsoVerbElementId))
  {
    objc_msgSend(a1, sel_usoVerbElementId);
    sub_1D3001708();
    sub_1D30012D8();
  }
  if (objc_msgSend(a1, sel_hasUsoElementId))
  {
    objc_msgSend(a1, sel_usoElementId);
    sub_1D30012A8();
  }
  if (objc_msgSend(a1, sel_hasEntityLabel))
  {
    id v9 = objc_msgSend(a1, sel_entityLabel);
    if (v9)
    {
      uint64_t v10 = v9;
      sub_1D3001B78();

      sub_1D3001298();
    }
  }
  if (objc_msgSend(a1, sel_hasVerbLabel))
  {
    id v11 = objc_msgSend(a1, sel_verbLabel);
    if (v11)
    {
      int v12 = v11;
      sub_1D3001B78();

      sub_1D30012E8();
    }
  }
  if (*(void *)(a3 + 16))
  {
    unint64_t v13 = sub_1D2F0DEA4(a2);
    if (v14)
    {
      id v15 = *(id *)(*(void *)(a3 + 56) + 8 * v13);
      if (objc_msgSend(v15, sel_hasStringPayload)
        && (id v16 = objc_msgSend(v15, sel_stringPayload)) != 0)
      {
        unint64_t v17 = v16;
        sub_1D3001B78();

        sub_1D30016D8();
        sub_1D30012B8();
      }
      else if (objc_msgSend(v15, sel_hasIntegerPayload))
      {
        objc_msgSend(v15, sel_integerPayload);
        sub_1D30016C8();
        sub_1D30012C8();
      }
    }
  }
}

uint64_t sub_1D2FC654C(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_64;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_65;
  }
LABEL_3:
  unint64_t v3 = 0;
  unint64_t v49 = v1 & 0xC000000000000001;
  uint64_t v44 = v1 + 32;
  uint64_t v45 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v5 = &selRef_flowState;
  uint64_t v46 = v1;
  uint64_t v47 = v2;
  while (1)
  {
    if (v49)
    {
      id v6 = (id)MEMORY[0x1D942E3A0](v3, v1);
    }
    else
    {
      if (v3 >= *(void *)(v45 + 16)) {
        goto LABEL_62;
      }
      id v6 = *(id *)(v44 + 8 * v3);
    }
    uint64_t v7 = v6;
    BOOL v8 = __OFADD__(v3++, 1);
    if (v8) {
      goto LABEL_60;
    }
    id v9 = objc_msgSend(v6, sel_linkedUsoNodeDatas);
    uint64_t v51 = v7;
    if (!v9) {
      goto LABEL_26;
    }
    uint64_t v10 = v9;
    sub_1D2F0BCB8(0, &qword_1EA699CE0);
    unint64_t v11 = sub_1D3001DC8();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1D30025A8();
      if (!v12)
      {
LABEL_25:
        swift_bridgeObjectRelease_n();
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_25;
      }
    }
    uint64_t v13 = 4;
    while (1)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x1D942E3A0](v13 - 4, v11);
      }
      else {
        id v14 = *(id *)(v11 + 8 * v13);
      }
      id v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
      {
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_bridgeObjectRetain();
        uint64_t v2 = sub_1D30025A8();
        if (!v2)
        {
LABEL_65:
          uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_66:
          swift_bridgeObjectRelease();
          return (uint64_t)v4;
        }
        goto LABEL_3;
      }
      if ((objc_msgSend(v14, sel_hasIntegerPayload) & 1) != 0
        || (objc_msgSend(v15, sel_hasStringPayload) & 1) != 0)
      {
        break;
      }

      ++v13;
      if (v16 == v12)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v17 = objc_msgSend(v15, sel_index);
    id v18 = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D2FE57A8((uint64_t)v18, v17, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v5 = &selRef_flowState;
LABEL_26:
    id v20 = objc_msgSend(v7, sel_linkedUsoGraphNodeDatas);
    if (!v20)
    {

      if (v3 == v2) {
        goto LABEL_66;
      }
      continue;
    }
    uint64_t v21 = v20;
    unint64_t v50 = v3;
    sub_1D2F0BCB8(0, &qword_1EA699CD8);
    unint64_t v22 = sub_1D3001DC8();

    if (!(v22 >> 62)) {
      break;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_29;
    }
LABEL_4:

    swift_bridgeObjectRelease_n();
    uint64_t v2 = v47;
    unint64_t v3 = v50;
    if (v50 == v47) {
      goto LABEL_66;
    }
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_4;
  }
LABEL_29:
  unint64_t v24 = v22 & 0xC000000000000001;
  uint64_t v25 = 0;
  if ((v22 & 0xC000000000000001) == 0)
  {
LABEL_35:
    id v27 = *(id *)(v22 + 8 * v25 + 32);
    goto LABEL_36;
  }
  while (1)
  {
    id v27 = (id)MEMORY[0x1D942E3A0](v25, v22);
LABEL_36:
    uint64_t v28 = v27;
    uint64_t v29 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    id v30 = [v27 v5[59]];
    if (!v30)
    {
      unint64_t v26 = v28;
      goto LABEL_32;
    }
    unint64_t v26 = v30;
    if ((objc_msgSend(v30, sel_hasStringPayload) & 1) == 0
      && !objc_msgSend(v26, sel_hasIntegerPayload))
    {

LABEL_32:
      ++v25;
      if (v29 == v23) {
        goto LABEL_4;
      }
      if (!v24) {
        goto LABEL_35;
      }
      continue;
    }
    uint64_t v31 = objc_msgSend(v26, sel_index);
    uint64_t v1 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v48 = v31;
    unint64_t v33 = sub_1D2F0DEA4(v31);
    uint64_t v34 = v4[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      goto LABEL_61;
    }
    char v37 = v32;
    if (v4[3] < v36) {
      break;
    }
    if ((v1 & 1) == 0) {
      sub_1D2F13A64();
    }
LABEL_47:
    uint64_t v1 = 8 * v33;
    if (v37)
    {
      uint64_t v40 = v4[7];

      *(void *)(v40 + v1) = v26;
    }
    else
    {
      v4[(v33 >> 6) + 8] |= 1 << v33;
      *(void *)(v4[6] + 8 * v33) = v48;
      *(void *)(v4[7] + 8 * v33) = v26;
      uint64_t v41 = v4[2];
      BOOL v8 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v8) {
        goto LABEL_63;
      }
      v4[2] = v42;
    }

    swift_bridgeObjectRelease();
    uint64_t v1 = v46;
    uint64_t v5 = &selRef_flowState;
    if (v29 == v23) {
      goto LABEL_4;
    }
    uint64_t v25 = v29;
    if (!v24) {
      goto LABEL_35;
    }
  }
  sub_1D2F0FC70(v36, v1);
  unint64_t v38 = sub_1D2F0DEA4(v48);
  if ((v37 & 1) == (v39 & 1))
  {
    unint64_t v33 = v38;
    goto LABEL_47;
  }
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SELFUsoRedactionUtils()
{
  return &type metadata for SELFUsoRedactionUtils;
}

uint64_t sub_1D2FC6A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  MEMORY[0x1F4188790](a1);
  BOOL v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v3, a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return AnyAsyncSequence.init<A>(_:)((uint64_t)v8, AssociatedTypeWitness, a1, a2, a3);
}

uint64_t AnyAsyncSequence.makeAsyncIterator()()
{
  return (*v0)();
}

uint64_t AnyAsyncSequence.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1D2FC6EB8;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t result;

  uint64_t v10 = *(void *)(a3 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 32))(&v12[v11], a1, a3);
  *a5 = sub_1D2FC7254;
  a5[1] = (uint64_t (*)())v12;
  return result;
}

uint64_t sub_1D2FC6CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v19 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  sub_1D3001F78();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, AssociatedTypeWitness);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1D2F780A4((uint64_t)v14, v20, AssociatedTypeWitness, AssociatedConformanceWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, AssociatedTypeWitness);
}

uint64_t sub_1D2FC6EB8()
{
  return sub_1D2FC726C((uint64_t (*)(unint64_t, void))sub_1D2FC6CA4);
}

uint64_t sub_1D2FC6FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v19 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  sub_1D3001D28();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, AssociatedTypeWitness);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1D2F783B4((uint64_t)v14, v20, AssociatedTypeWitness, AssociatedConformanceWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, AssociatedTypeWitness);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1D2FC7254()
{
  return sub_1D2FC726C((uint64_t (*)(unint64_t, void))sub_1D2FC6FB8);
}

uint64_t sub_1D2FC726C(uint64_t (*a1)(unint64_t, void))
{
  return a1(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80)), *(void *)(v1 + 16));
}

uint64_t sub_1D2FC72B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D2FC72D4()
{
  AnyAsyncSequence.makeAsyncIterator()();
  return swift_release();
}

uint64_t type metadata accessor for AnyAsyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MTToggleAlarmIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000013;
  *(void *)(result + 24) = 0x80000001D3013000;
  return result;
}

uint64_t MTToggleAlarmIntentFeatureExtractor.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0xD000000000000013;
  *(void *)(v0 + 24) = 0x80000001D3013000;
  return result;
}

uint64_t sub_1D2FC737C(id *a1)
{
  id v2 = *a1;
  id v3 = objc_msgSend(v2, sel_intent);
  uint64_t v4 = sub_1D2F76438();
  if (!v5) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  if (v4 == v7 && v5 == v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_17;
    }
  }
  id v10 = objc_msgSend(v3, sel_parametersByName);
  if (!v10)
  {
LABEL_17:

    return MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_1D3001A88();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D3004380;
  uint64_t v14 = type metadata accessor for MTToggleAlarmEventFeature.EventType(0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  *(void *)(v15 + 24) = v6;
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = sub_1D2FC77F4(&qword_1EA699CE8, (void (*)(uint64_t))type metadata accessor for MTToggleAlarmEventFeature.EventType);
  *(void *)(v13 + 32) = v15;
  swift_bridgeObjectRetain();
  unsigned __int8 v16 = objc_msgSend(v2, sel__donatedBySiri);
  uint64_t v17 = type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(0);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v16;
  *(void *)(v13 + 96) = v17;
  *(void *)(v13 + 104) = sub_1D2FC77F4(&qword_1EA699CF0, (void (*)(uint64_t))type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri);
  *(void *)(v13 + 72) = v18;
  if (!*(void *)(v12 + 16) || (unint64_t v19 = sub_1D2F0DC98(0x6D72616C61, 0xE500000000000000), (v20 & 1) == 0))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  sub_1D2F0BD44(*(void *)(v12 + 56) + 32 * v19, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_19:

    sub_1D2F0BEDC((uint64_t)&v31);
    return v13;
  }
  sub_1D2FC7B04();
  if (swift_dynamicCast())
  {
    id v21 = v34;
    id v22 = objc_msgSend(v34, sel_displayString);
    uint64_t v23 = sub_1D3001B78();
    uint64_t v25 = v24;

    uint64_t v26 = type metadata accessor for MTToggleAlarmEventFeature.AlarmName(0);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v25;
    unint64_t v29 = *(void *)(v13 + 16);
    unint64_t v28 = *(void *)(v13 + 24);
    if (v29 >= v28 >> 1) {
      uint64_t v13 = (uint64_t)sub_1D2F27F00((void *)(v28 > 1), v29 + 1, 1, (void *)v13);
    }
    *((void *)&v32 + 1) = v26;
    uint64_t v33 = sub_1D2FC77F4(&qword_1EA699D00, (void (*)(uint64_t))type metadata accessor for MTToggleAlarmEventFeature.AlarmName);
    *(void *)&long long v31 = v27;
    *(void *)(v13 + 16) = v29 + 1;
    sub_1D2F0BE68(&v31, v13 + 40 * v29 + 32);
  }
  else
  {
  }
  return v13;
}

uint64_t type metadata accessor for MTToggleAlarmEventFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699D08);
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t MTToggleAlarmIntentFeatureExtractor.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MTToggleAlarmIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699D18);
}

uint64_t sub_1D2FC77B8(uint64_t *a1)
{
  return sub_1D2FC7A38(a1, (void (*)(void))type metadata accessor for MTToggleAlarmEventFeature.EventType);
}

uint64_t sub_1D2FC77D0(uint64_t *a1)
{
  return sub_1D2FC7A8C(a1, (void (*)(void))type metadata accessor for MTToggleAlarmEventFeature.EventType);
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2FC77F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t MTToggleAlarmEventFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FC793C(char *a1)
{
  char v1 = *a1;
  type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2FC7974(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for MTToggleAlarmEventFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t MTToggleAlarmEventFeature.AlarmName.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t MTToggleAlarmEventFeature.AlarmName.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2FC7A20(uint64_t *a1)
{
  return sub_1D2FC7A38(a1, (void (*)(void))type metadata accessor for MTToggleAlarmEventFeature.AlarmName);
}

uint64_t sub_1D2FC7A38(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2FC7A74(uint64_t *a1)
{
  return sub_1D2FC7A8C(a1, (void (*)(void))type metadata accessor for MTToggleAlarmEventFeature.AlarmName);
}

uint64_t sub_1D2FC7A8C(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

unint64_t sub_1D2FC7B04()
{
  unint64_t result = qword_1EA699CF8;
  if (!qword_1EA699CF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA699CF8);
  }
  return result;
}

uint64_t type metadata accessor for MTToggleAlarmEventFeature.AlarmName(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699D28);
}

uint64_t type metadata accessor for MTToggleAlarmIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for MTToggleAlarmIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MTToggleAlarmIntentFeatureExtractor);
}

uint64_t dispatch thunk of MTToggleAlarmIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MTToggleAlarmIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

ValueMetadata *type metadata accessor for MTToggleAlarmEventFeature()
{
  return &type metadata for MTToggleAlarmEventFeature;
}

uint64_t RequestIdFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RequestIdFeatureExtractor.init()()
{
  return v0;
}

uint64_t SELFRequestID.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 96);
  uint64_t v4 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  sub_1D2F61448(a1, (uint64_t)v4);
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1D2F0D16C((uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699D38);
    swift_deallocPartialClassInstance();
    uint64_t v5 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v5 + *(void *)(*(void *)v5 + 96), v4, v6);
  }
  sub_1D2F0D16C(a1);
  return v5;
}

uint64_t RequestIdFeatureExtractor.deinit()
{
  return v0;
}

uint64_t RequestIdFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1D2FC7CB8(unint64_t *a1)
{
}

uint64_t SELFRequestID.init(value:)(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F61448(a1, (uint64_t)v5);
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D2F0D16C((uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699D38);
    swift_deallocPartialClassInstance();
    uint64_t v1 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1 + *(void *)(*(void *)v1 + 96), v5, v6);
  }
  sub_1D2F0D16C(a1);
  return v1;
}

uint64_t SELFRequestID.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SELFRequestID.__deallocating_deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void sub_1D2FC8160(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v63 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v59 - v9;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1D30025A8();
    if (!v11) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_37;
    }
  }
  unint64_t v59 = v8;
  unint64_t v60 = v10;
  uint64_t v61 = v5;
  uint64_t v62 = v4;
  unint64_t v12 = 0;
  unint64_t v13 = a1 & 0xC000000000000001;
  uint64_t v14 = off_1E6970000;
  unint64_t v64 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v13)
    {
      swift_bridgeObjectRetain();
      id v15 = (id)MEMORY[0x1D942E3A0](v12, a1);
    }
    else
    {
      unsigned __int8 v16 = *(void **)(a1 + 8 * v12 + 32);
      swift_bridgeObjectRetain();
      id v15 = v16;
    }
    uint64_t v17 = v15;
    if (objc_msgSend(v15, (SEL)v14[254], v59) == 6)
    {
      id v18 = objc_msgSend(v17, sel_payload);
      if (v18)
      {
        unint64_t v19 = v18;
        uint64_t v20 = sub_1D3000F68();
        unint64_t v22 = v21;

        uint64_t v23 = (void *)sub_1D3000F58();
        sub_1D2F0D1CC(v20, v22);
      }
      else
      {
        uint64_t v23 = 0;
      }
      id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA12D8]), sel_initWithData_, v23);

      id v24 = objc_msgSend(v25, sel_event);
      if (!v24)
      {
LABEL_26:
        swift_bridgeObjectRelease();

        unint64_t v28 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_35;
        }
        goto LABEL_31;
      }
    }
    else
    {
      id v24 = v17;
    }
    unint64_t v26 = sub_1D2FC88C4();
    [v24 (SEL)v14[254]];
    uint64_t v27 = sub_1D30021F8();
    if (!v27 || v26 != v27)
    {

      swift_bridgeObjectRelease();
      unint64_t v28 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_35;
      }
      goto LABEL_31;
    }
    unint64_t v29 = v14;
    id v30 = objc_msgSend(v24, sel_payload);
    if (v30)
    {
      uint64_t v31 = sub_1D3000F68();
      unint64_t v33 = v32;

      id v34 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v30 = (id)sub_1D3000F58();
      sub_1D2F0D1CC(v31, v33);
    }
    else
    {
      id v34 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    id v35 = objc_msgSend(v34, sel_initWithData_, v30);

    if (!v35)
    {
      swift_bridgeObjectRelease();

      uint64_t v14 = v29;
      unint64_t v13 = v64;
      goto LABEL_30;
    }
    self;
    uint64_t v36 = swift_dynamicCastObjCClass();
    uint64_t v14 = v29;
    if (!v36) {
      break;
    }
    char v37 = (void *)v36;

    id v38 = objc_msgSend(v37, sel_eventMetadata);
    unint64_t v13 = v64;
    if (!v38) {
      goto LABEL_26;
    }
    id v39 = objc_msgSend(v38, sel_requestId);

    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_36;
    }
LABEL_30:
    unint64_t v28 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_35;
    }
LABEL_31:
    ++v12;
    if (v28 == v11) {
      goto LABEL_37;
    }
  }
  swift_bridgeObjectRelease();

  unint64_t v13 = v64;
  unint64_t v28 = v12 + 1;
  if (!__OFADD__(v12, 1)) {
    goto LABEL_31;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  if (v11 == v12)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
  if (v13)
  {
    id v40 = (id)MEMORY[0x1D942E3A0](v12, a1);
    uint64_t v41 = v62;
    goto LABEL_43;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v41 = v62;
  if (v12 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    return;
  }
  id v40 = *(id *)(a1 + 8 * v12 + 32);
LABEL_43:
  uint64_t v42 = (void *)sub_1D2F585E4();
  id v43 = objc_msgSend(v42, sel_eventMetadata);

  id v44 = objc_msgSend(v43, sel_requestId);
  if (!v44) {
    goto LABEL_53;
  }
  swift_bridgeObjectRelease();
  id v45 = objc_msgSend(v44, sel_value);
  uint64_t v46 = (uint64_t)v63;
  if (v45)
  {
    uint64_t v47 = v45;
    uint64_t v48 = sub_1D3000F68();
    unint64_t v50 = v49;

    sub_1D2F587AC(v48, v50, v46);
    sub_1D2F0D1CC(v48, v50);
    uint64_t v51 = v61;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v46, 1, v41) != 1)
    {
      uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
      uint64_t v53 = v60;
      v52(v60, v46, v41);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
      uint64_t v54 = v41;
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1D3004370;
      uint64_t v56 = v59;
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v59, v53, v54);
      uint64_t v57 = type metadata accessor for SELFRequestID();
      uint64_t v58 = swift_allocObject();
      v52((char *)(v58 + *(void *)(*(void *)v58 + 96)), (uint64_t)v56, v54);
      *(void *)(v55 + 56) = v57;
      *(void *)(v55 + 64) = sub_1D2FC8904();
      *(void *)(v55 + 32) = v58;

      (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v54);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v63, 1, 1, v41);
  }

  sub_1D2F0D16C(v46);
}

uint64_t type metadata accessor for RequestIdFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for RequestIdFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RequestIdFeatureExtractor);
}

uint64_t dispatch thunk of RequestIdFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RequestIdFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t type metadata accessor for SELFRequestID()
{
  uint64_t result = qword_1EBD61178;
  if (!qword_1EBD61178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D2FC88C4()
{
  unint64_t result = qword_1EBD61478;
  if (!qword_1EBD61478)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD61478);
  }
  return result;
}

unint64_t sub_1D2FC8904()
{
  unint64_t result = qword_1EBD61170;
  if (!qword_1EBD61170)
  {
    type metadata accessor for SELFRequestID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD61170);
  }
  return result;
}

uint64_t sub_1D2FC895C()
{
  return swift_bridgeObjectRelease();
}

SiriPrivateLearningAnalytics::PrivateLearningPluginError __swiftcall PrivateLearningPluginError.init(message:)(SiriPrivateLearningAnalytics::PrivateLearningPluginError message)
{
  *uint64_t v1 = message;
  return message;
}

BOOL static PrivateLearningPluginRunContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 3) {
    return v3 == 3;
  }
  if (v3 == 3) {
    return 0;
  }
  return v2 == v3;
}

uint64_t PrivateLearningPluginRunContext.description.getter()
{
  if (*v0 == 3) {
    return 0x616E65746E69614DLL;
  }
  sub_1D3001C68();
  sub_1D2FC895C();
  sub_1D3001C68();
  return 0;
}

uint64_t static PrivateLearningPluginError.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1D3002778();
  }
}

uint64_t PrivateLearningPluginError.message.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D2FC8BC8(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1D3002778();
  }
}

uint64_t PrivateLearningPluginRunScenario.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699D40);
  uint64_t v1 = sub_1D3001BC8();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PrivateLearningPluginRunScenario.hash(into:)()
{
  return sub_1D3002938();
}

BOOL static PrivateLearningPluginRunScenario.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PrivateLearningPluginRunScenario.hashValue.getter()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FC8D8C()
{
  if (*v0 == 3) {
    return 0x616E65746E69614DLL;
  }
  sub_1D3001C68();
  sub_1D2FC895C();
  sub_1D3001C68();
  return 0;
}

BOOL sub_1D2FC8E28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 3) {
    return v3 == 3;
  }
  if (v3 == 3) {
    return 0;
  }
  return v2 == v3;
}

uint64_t _s28SiriPrivateLearningAnalytics0bC12PluginResultO2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3)
  {
    if (!v4)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return sub_1D3002778();
}

unint64_t sub_1D2FC8EE0()
{
  unint64_t result = qword_1EA699D48;
  if (!qword_1EA699D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699D48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PrivateLearningPluginResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PrivateLearningPluginResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginResult()
{
  return &type metadata for PrivateLearningPluginResult;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginError()
{
  return &type metadata for PrivateLearningPluginError;
}

unsigned char *storeEnumTagSinglePayload for PrivateLearningPluginRunScenario(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FC90C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginRunScenario()
{
  return &type metadata for PrivateLearningPluginRunScenario;
}

uint64_t getEnumTagSinglePayload for PrivateLearningPluginRunContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1D2FC91A8);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for PrivateLearningPluginRunContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1D2FC9290);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1D2FC92B8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1D2FC92CC(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivateLearningPluginRunContext()
{
  return &type metadata for PrivateLearningPluginRunContext;
}

uint64_t dispatch thunk of PrivateLearningPlugin.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrivateLearningPlugin.run(context:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ParametrisedPrivateLearningPlugin.run(context:parameters:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

void *static PluginLoader.loadAll(from:)()
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  unsigned int v1 = (void *)sub_1D3000E78();
  v10[0] = 0;
  id v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 0, v10);

  id v3 = v10[0];
  if (v2)
  {
    sub_1D3000F18();
    uint64_t v4 = sub_1D3001DC8();
    id v5 = v3;

    uint64_t v6 = (void *)sub_1D2FCAB64(v4, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = v10[0];
    uint64_t v6 = (void *)sub_1D3000DF8();

    swift_willThrow();
    sub_1D2F6B948();
    swift_allocError();
    *(void *)uint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 3;
    swift_willThrow();
  }
  return v6;
}

void *sub_1D2FC949C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v5 = sub_1D3000F18();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v61 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v59 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v59 - v12;
  if (a2)
  {
    sub_1D3000E88();
    uint64_t v14 = sub_1D3000E68();
    uint64_t v15 = a1;
    uint64_t v17 = v16;
    unint64_t v60 = *(void (**)(char *, uint64_t))(v6 + 8);
    v60(v13, v5);
    LOBYTE(v14) = sub_1D2F8D200(v14, v17, a2);
    a1 = v15;
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      uint64_t v33 = v5;
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1D3001918();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EBD65778);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v15, v5);
      id v35 = sub_1D30018F8();
      os_log_type_t v36 = sub_1D30020A8();
      if (os_log_type_enabled(v35, v36))
      {
        char v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v64 = v38;
        *(_DWORD *)char v37 = 136315138;
        uint64_t v61 = (char *)(v37 + 4);
        sub_1D2F3475C();
        uint64_t v39 = sub_1D3002738();
        uint64_t v63 = sub_1D2F09508(v39, v40, &v64);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        v60(v11, v33);
        _os_log_impl(&dword_1D2F05000, v35, v36, "PluginLoader skipping plugin bundle (not allowed), path=%s", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v38, -1, -1);
        MEMORY[0x1D942F2D0](v37, -1, -1);
      }
      else
      {
        v60(v11, v33);
      }

      goto LABEL_37;
    }
  }
  sub_1D3000F08();
  uint64_t v18 = a1;
  id v19 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
  uint64_t v20 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  unint64_t v21 = objc_msgSend(v19, sel_initWithPath_, v20);

  if (!v21)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1D3001918();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EBD65778);
    uint64_t v42 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v61, v18, v5);
    unint64_t v21 = sub_1D30018F8();
    os_log_type_t v43 = sub_1D30020B8();
    if (os_log_type_enabled(v21, v43))
    {
      id v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v64 = v45;
      unint64_t v60 = (void (*)(char *, uint64_t))v5;
      *(_DWORD *)id v44 = 136315138;
      uint64_t v46 = sub_1D3000F08();
      uint64_t v63 = sub_1D2F09508(v46, v47, &v64);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void))(v6 + 8))(v42, v60);
      _os_log_impl(&dword_1D2F05000, v21, v43, "PluginLoader failed init Bundle at %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v45, -1, -1);
      MEMORY[0x1D942F2D0](v44, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v5);
    }
    goto LABEL_36;
  }
  id v22 = [v21 bundleURL];
  sub_1D3000EE8();

  uint64_t v23 = sub_1D3000E68();
  unint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  if (([v21 load] & 1) == 0)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_1D3001918();
    __swift_project_value_buffer(v48, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain();
    unint64_t v49 = sub_1D30018F8();
    os_log_type_t v50 = sub_1D30020B8();
    if (!os_log_type_enabled(v49, v50))
    {

      swift_bridgeObjectRelease_n();
LABEL_36:

LABEL_37:
      unint64_t result = 0;
      goto LABEL_38;
    }
    uint64_t v51 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v64 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1D2F09508(v23, v25, &v64);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    uint64_t v53 = "PluginLoader failed to load %s";
    goto LABEL_34;
  }
  if (![v21 principalClass])
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_1D3001918();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain();
    unint64_t v49 = sub_1D30018F8();
    os_log_type_t v50 = sub_1D30020B8();
    if (!os_log_type_enabled(v49, v50)) {
      goto LABEL_43;
    }
    uint64_t v51 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v64 = v52;
    *(_DWORD *)uint64_t v51 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1D2F09508(v23, v25, &v64);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    uint64_t v53 = "PluginLoader couldn't find the principal class in %s";
LABEL_34:
    _os_log_impl(&dword_1D2F05000, v49, v50, v53, (uint8_t *)v51, 0xCu);
    swift_arrayDestroy();
    uint64_t v55 = v52;
LABEL_35:
    MEMORY[0x1D942F2D0](v55, -1, -1);
    MEMORY[0x1D942F2D0](v51, -1, -1);

    goto LABEL_36;
  }
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v27 = swift_conformsToProtocol2();
  if (v27) {
    uint64_t v28 = v27;
  }
  else {
    uint64_t v28 = 0;
  }
  if (v27) {
    uint64_t v29 = ObjCClassMetadata;
  }
  else {
    uint64_t v29 = 0;
  }
  if (!v29)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_1D3001918();
    __swift_project_value_buffer(v56, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain();
    unint64_t v49 = sub_1D30018F8();
    os_log_type_t v57 = sub_1D30020B8();
    if (os_log_type_enabled(v49, v57))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v64 = v58;
      *(_DWORD *)uint64_t v51 = 136315394;
      uint64_t v63 = sub_1D2F09508(0xD000000000000015, 0x80000001D3013250, &v64);
      sub_1D3002318();
      *(_WORD *)(v51 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1D2F09508(v23, v25, &v64);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2F05000, v49, v57, "PluginLoader found principal class which doesn't conform to %s in %s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      uint64_t v55 = v58;
      goto LABEL_35;
    }
LABEL_43:

    swift_bridgeObjectRelease_n();
    goto LABEL_37;
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v28);
  type metadata accessor for PluginHandle();
  uint64_t v31 = (void *)swift_allocObject();
  unint64_t result = sub_1D2FC59E8(v30, (uint64_t)v21, v31, v29, v28);
LABEL_38:
  void *v62 = result;
  return result;
}

void *sub_1D2FC9EBC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v85 = a3;
  uint64_t v86 = a2;
  v91[1] = *MEMORY[0x1E4F143B8];
  uint64_t v88 = sub_1D3000F18();
  uint64_t v4 = *(void *)(v88 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v88);
  uint64_t v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v81 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  unint64_t v13 = (char *)&v81 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v87 = (char *)&v81 - v14;
  char v90 = 0;
  id v15 = objc_msgSend(self, sel_defaultManager);
  sub_1D3000F08();
  uint64_t v16 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  unsigned int v17 = objc_msgSend(v15, sel_fileExistsAtPath_isDirectory_, v16, &v90);

  if (v17 && v90 == 1)
  {
    unint64_t v18 = v85;
    sub_1D3000EB8();
    sub_1D3000EC8();
    id v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v20 = v88;
    uint64_t v83 = v4 + 8;
    uint64_t v84 = v19;
    v19(v13, v88);
    id v21 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
    id v22 = (void *)sub_1D3000E78();
    id v23 = objc_msgSend(v21, sel_initWithURL_, v22);

    if (v23)
    {
      if (objc_msgSend(v23, sel_load))
      {
        id v24 = objc_msgSend(v23, sel_principalClass);
        unint64_t v25 = v84;
        if (v24)
        {
          uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
          uint64_t v27 = swift_conformsToProtocol2();
          if (v27) {
            uint64_t v28 = v27;
          }
          else {
            uint64_t v28 = 0;
          }
          if (!v27) {
            uint64_t ObjCClassMetadata = 0;
          }
          if (ObjCClassMetadata)
          {
            uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(ObjCClassMetadata, v28);
            v25(v87, v20);
            type metadata accessor for PluginHandle();
            uint64_t v30 = (void *)swift_allocObject();
            return sub_1D2FC59E8(v29, (uint64_t)v23, v30, ObjCClassMetadata, v28);
          }
          if (qword_1EBD63A48 != -1) {
            swift_once();
          }
          uint64_t v70 = sub_1D3001918();
          __swift_project_value_buffer(v70, (uint64_t)qword_1EBD65778);
          unint64_t v71 = v85;
          swift_bridgeObjectRetain_n();
          id v72 = sub_1D30018F8();
          os_log_type_t v73 = sub_1D30020B8();
          if (os_log_type_enabled(v72, v73))
          {
            uint64_t v74 = swift_slowAlloc();
            uint64_t v75 = swift_slowAlloc();
            id v82 = v23;
            uint64_t v76 = v75;
            v91[0] = v75;
            *(_DWORD *)uint64_t v74 = 136315394;
            uint64_t v89 = sub_1D2F09508(0xD000000000000015, 0x80000001D3013250, v91);
            sub_1D3002318();
            *(_WORD *)(v74 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v77 = v86;
            uint64_t v89 = sub_1D2F09508(v86, v71, v91);
            uint64_t v20 = v88;
            sub_1D3002318();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D2F05000, v72, v73, "PluginLoader.load() found principal class which doesn't conform to %s in %s", (uint8_t *)v74, 0x16u);
            swift_arrayDestroy();
            uint64_t v78 = v76;
            id v23 = v82;
            MEMORY[0x1D942F2D0](v78, -1, -1);
            MEMORY[0x1D942F2D0](v74, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            uint64_t v77 = v86;
          }
          sub_1D2F6B948();
          swift_allocError();
          *(void *)uint64_t v80 = v77;
          *(void *)(v80 + 8) = v71;
          *(unsigned char *)(v80 + 16) = 2;
          swift_bridgeObjectRetain();
          swift_willThrow();
        }
        else
        {
          id v82 = v23;
          if (qword_1EBD63A48 != -1) {
            swift_once();
          }
          uint64_t v63 = sub_1D3001918();
          __swift_project_value_buffer(v63, (uint64_t)qword_1EBD65778);
          swift_bridgeObjectRetain_n();
          uint64_t v64 = sub_1D30018F8();
          unint64_t v65 = v18;
          os_log_type_t v66 = sub_1D30020B8();
          if (os_log_type_enabled(v64, v66))
          {
            uint64_t v67 = (uint8_t *)swift_slowAlloc();
            uint64_t v68 = swift_slowAlloc();
            v91[0] = v68;
            *(_DWORD *)uint64_t v67 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v69 = v86;
            uint64_t v89 = sub_1D2F09508(v86, v65, v91);
            uint64_t v20 = v88;
            sub_1D3002318();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D2F05000, v64, v66, "PluginLoader.load() couldn't find the principal class in %s", v67, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D942F2D0](v68, -1, -1);
            MEMORY[0x1D942F2D0](v67, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            uint64_t v69 = v86;
          }
          sub_1D2F6B948();
          swift_allocError();
          *(void *)uint64_t v79 = v69;
          *(void *)(v79 + 8) = v65;
          *(unsigned char *)(v79 + 16) = 1;
          swift_bridgeObjectRetain();
          swift_willThrow();
        }
        return (void *)((uint64_t (*)(char *, uint64_t))v84)(v87, v20);
      }
      else
      {
        id v82 = v23;
        if (qword_1EBD63A48 != -1) {
          swift_once();
        }
        uint64_t v51 = sub_1D3001918();
        __swift_project_value_buffer(v51, (uint64_t)qword_1EBD65778);
        swift_bridgeObjectRetain_n();
        uint64_t v52 = sub_1D30018F8();
        unint64_t v53 = v18;
        os_log_type_t v54 = sub_1D30020B8();
        if (os_log_type_enabled(v52, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          uint64_t v56 = swift_slowAlloc();
          v91[0] = v56;
          *(_DWORD *)uint64_t v55 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v57 = v86;
          uint64_t v89 = sub_1D2F09508(v86, v53, v91);
          uint64_t v20 = v88;
          sub_1D3002318();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D2F05000, v52, v54, "PluginLoader.load() failed to load %s", v55, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v56, -1, -1);
          MEMORY[0x1D942F2D0](v55, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          uint64_t v57 = v86;
        }
        uint64_t v61 = (uint64_t (*)(char *, uint64_t))v84;
        sub_1D2F6B948();
        swift_allocError();
        *(void *)uint64_t v62 = v57;
        *(void *)(v62 + 8) = v53;
        *(unsigned char *)(v62 + 16) = 0;
        swift_bridgeObjectRetain();
        swift_willThrow();

        return (void *)v61(v87, v20);
      }
    }
    else
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1D3001918();
      __swift_project_value_buffer(v41, (uint64_t)qword_1EBD65778);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v87, v20);
      uint64_t v42 = sub_1D30018F8();
      os_log_type_t v43 = sub_1D30020B8();
      if (os_log_type_enabled(v42, v43))
      {
        id v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        v91[0] = v45;
        *(_DWORD *)id v44 = 136315138;
        sub_1D2F3475C();
        uint64_t v46 = sub_1D3002738();
        uint64_t v89 = sub_1D2F09508(v46, v47, v91);
        uint64_t v20 = v88;
        sub_1D3002318();
        swift_bridgeObjectRelease();
        uint64_t v48 = v10;
        unint64_t v49 = (uint64_t (*)(char *, uint64_t))v84;
        v84(v48, v20);
        _os_log_impl(&dword_1D2F05000, v42, v43, "PluginLoader.load() failed init Bundle at %s", v44, 0xCu);
        swift_arrayDestroy();
        uint64_t v50 = v45;
        unint64_t v18 = v85;
        MEMORY[0x1D942F2D0](v50, -1, -1);
        MEMORY[0x1D942F2D0](v44, -1, -1);
      }
      else
      {
        uint64_t v58 = v10;
        unint64_t v49 = (uint64_t (*)(char *, uint64_t))v84;
        v84(v58, v20);
      }

      uint64_t v59 = v86;
      sub_1D2F6B948();
      swift_allocError();
      *(void *)uint64_t v60 = v59;
      *(void *)(v60 + 8) = v18;
      *(unsigned char *)(v60 + 16) = 0;
      swift_bridgeObjectRetain();
      swift_willThrow();
      return (void *)v49(v87, v20);
    }
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1D3001918();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EBD65778);
    uint64_t v33 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v88);
    uint64_t v34 = sub_1D30018F8();
    os_log_type_t v35 = sub_1D30020B8();
    if (os_log_type_enabled(v34, v35))
    {
      os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v91[0] = v37;
      *(_DWORD *)os_log_type_t v36 = 136315138;
      uint64_t v87 = (char *)(v36 + 4);
      sub_1D2F3475C();
      uint64_t v38 = sub_1D3002738();
      uint64_t v89 = sub_1D2F09508(v38, v39, v91);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v33);
      _os_log_impl(&dword_1D2F05000, v34, v35, "PluginLoader.load(): \"%s\" is not a directory", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v37, -1, -1);
      MEMORY[0x1D942F2D0](v36, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v33);
    }

    sub_1D2F6B948();
    swift_allocError();
    *(void *)uint64_t v40 = 0;
    *(void *)(v40 + 8) = 0;
    *(unsigned char *)(v40 + 16) = 3;
    return (void *)swift_willThrow();
  }
}

uint64_t sub_1D2FCAB64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v5 = sub_1D3000F18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v22 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v28 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v15 = *(void *)(v12 + 56);
    unint64_t v25 = (void (**)(uint64_t, char *, uint64_t))(v12 + 16);
    unint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v23 = v15;
    id v24 = (void (**)(uint64_t, uint64_t))(v12 - 8);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v27 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    v21[0] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v16 = (uint64_t)v22;
    while (1)
    {
      v28(v10, v14, v5);
      unsigned int v17 = *v27;
      (*v27)(v10, 0, 1, v5);
      if ((*v26)(v10, 1, v5) == 1) {
        break;
      }
      (*v25)(v16, v10, v5);
      sub_1D2FC949C(v16, v29, &v31);
      if (v3)
      {
        (*v24)(v16, v5);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v18 = ((uint64_t (*)(uint64_t, uint64_t))*v24)(v16, v5);
      if (v31)
      {
        uint64_t v30 = 0;
        MEMORY[0x1D942DCC0](v18);
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D3001E28();
        }
        sub_1D3001E68();
        sub_1D3001DE8();
        uint64_t v3 = v30;
        uint64_t v16 = (uint64_t)v22;
      }
      v14 += v23;
      if (!--v11)
      {
        v17(v10, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v19(v10, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v32;
}

ValueMetadata *type metadata accessor for PluginLoader()
{
  return &type metadata for PluginLoader;
}

SiriPrivateLearningAnalytics::FeatureControl __swiftcall FeatureControl.init(defaultEnablement:)(Swift::OpaquePointer defaultEnablement)
{
  v1->_rawValue = (void *)MEMORY[0x1E4FBC860];
  v1[1]._rawValue = defaultEnablement._rawValue;
  result.localeControls = defaultEnablement;
  return result;
}

__n128 AnyFeature.__allocating_init(name:control:)(uint64_t a1, uint64_t a2, __n128 *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  __n128 result = *a3;
  *(__n128 *)(v6 + 32) = *a3;
  return result;
}

SiriPrivateLearningAnalytics::OSType_optional __swiftcall OSType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D3002638();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t OSType.rawValue.getter()
{
  uint64_t result = 5459817;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x534F63616DLL;
      break;
    case 2:
      uint64_t result = 1397716596;
      break;
    case 3:
      uint64_t result = 0x534F6863746177;
      break;
    case 4:
      uint64_t result = 0x4F6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D2FCAFEC(unsigned __int8 *a1, char *a2)
{
  return sub_1D2FBBE90(*a1, *a2);
}

uint64_t sub_1D2FCAFF8()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FCB0E0()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2FCB1B0()
{
  return sub_1D3002968();
}

SiriPrivateLearningAnalytics::OSType_optional sub_1D2FCB294(Swift::String *a1)
{
  return OSType.init(rawValue:)(*a1);
}

void sub_1D2FCB2A0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 5459817;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x534F63616DLL;
      goto LABEL_3;
    case 2:
      *a1 = 1397716596;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x534F6863746177;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x4F6E776F6E6B6E75;
      a1[1] = 0xE900000000000053;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t FeatureResolver.init(featureFlagResolver:trialResolver:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D2F0BE68(a1, a3);
  return sub_1D2F0BE68(a2, a3 + 40);
}

uint64_t FeatureResolver.isTrialFactorEnabled(_:scope:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = v2[8];
  uint64_t v7 = v2[9];
  __swift_project_boxed_opaque_existential_1(v2 + 5, v6);
  v9[0] = v5;
  v9[1] = v4;
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 8))(a1, v9, v6, v7) & 1;
}

double FeatureResolver.getTrialFactorValue(_:scope:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = v2[8];
  uint64_t v7 = v2[9];
  __swift_project_boxed_opaque_existential_1(v2 + 5, v6);
  v9[0] = v5;
  v9[1] = v4;
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 16))(a1, v9, v6, v7);
  return result;
}

uint64_t FeatureResolver.isFeatureFlagEnabled(_:)(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4) & 1;
}

Swift::Void __swiftcall FeatureResolver.refresh()()
{
  unsigned int v1 = v0;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "FeatureResolver: refreshing trial resolver", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  uint64_t v6 = v1 + 5;
  uint64_t v8 = v1[8];
  uint64_t v7 = v1[9];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
}

uint64_t sub_1D2FCBB60(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((a1[1] & 1) == 0)
  {
    sub_1D2FCE444(v1, (uint64_t)v31);
    uint64_t v7 = *(void *)(v2 + 16);
    if (!v7)
    {
      swift_bridgeObjectRetain();
LABEL_22:
      uint64_t v9 = 0;
      goto LABEL_23;
    }
    sub_1D2FCE47C(v2 + 32, (uint64_t)v30);
    swift_bridgeObjectRetain();
    char v8 = sub_1D2FCBEBC((uint64_t)v30, v31);
    sub_1D2FCE4B4((uint64_t)v30);
    if (v8)
    {
LABEL_8:
      uint64_t v9 = 1;
      goto LABEL_23;
    }
    if (v7 == 1) {
      goto LABEL_22;
    }
    uint64_t v17 = v2 + 80;
    uint64_t v18 = 1;
    while (1)
    {
      uint64_t result = sub_1D2FCE47C(v17, (uint64_t)v30);
      uint64_t v20 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      sub_1D2FCE47C((uint64_t)v30, (uint64_t)&v25);
      if (!v29) {
        break;
      }
      if (v29 == 1)
      {
        sub_1D2F0BE68(&v25, (uint64_t)&v23);
        uint64_t v21 = v32;
        uint64_t v22 = v33;
        __swift_project_boxed_opaque_existential_1(v31, v32);
        char v19 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v22 + 8))(&v23, v21, v22);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
LABEL_26:
        sub_1D2FCE4B4((uint64_t)v30);
        if (v19) {
          goto LABEL_8;
        }
        goto LABEL_27;
      }
      if (!(v27 | v28 | (unint64_t)v25 | v26 | *((void *)&v25 + 1)))
      {
        sub_1D2FCE4B4((uint64_t)v30);
        uint64_t v9 = 1;
LABEL_23:
        sub_1D2F1DBE0((uint64_t)v31);
        uint64_t v15 = v2;
        uint64_t v16 = 0;
LABEL_37:
        j__swift_bridgeObjectRelease(v15, v16);
        return v9;
      }
      sub_1D2FCE4B4((uint64_t)v30);
LABEL_27:
      ++v18;
      v17 += 48;
      if (v20 == v7) {
        goto LABEL_22;
      }
    }
    uint64_t v23 = *((void *)&v25 + 1);
    uint64_t v24 = v26;
    char v19 = FeatureResolver.isTrialFactorEnabled(_:scope:)(v25, &v23);
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_26;
  }
  sub_1D2FCE444(v1, (uint64_t)v31);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  sub_1D2FCE47C(v2 + 32, (uint64_t)v30);
  swift_bridgeObjectRetain();
  char v4 = sub_1D2FCBEBC((uint64_t)v30, v31);
  sub_1D2FCE4B4((uint64_t)v30);
  if ((v4 & 1) == 0)
  {
LABEL_35:
    uint64_t v9 = 0;
    goto LABEL_36;
  }
  if (v3 == 1)
  {
LABEL_19:
    uint64_t v9 = 1;
LABEL_36:
    sub_1D2F1DBE0((uint64_t)v31);
    uint64_t v15 = v2;
    uint64_t v16 = 1;
    goto LABEL_37;
  }
  uint64_t v5 = v2 + 80;
  uint64_t v6 = 1;
  while (1)
  {
    uint64_t result = sub_1D2FCE47C(v5, (uint64_t)v30);
    uint64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    sub_1D2FCE47C((uint64_t)v30, (uint64_t)&v25);
    if (!v29)
    {
      uint64_t v23 = *((void *)&v25 + 1);
      uint64_t v24 = v26;
      char v10 = FeatureResolver.isTrialFactorEnabled(_:scope:)(v25, &v23);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_10;
    }
    if (v29 == 1)
    {
      sub_1D2F0BE68(&v25, (uint64_t)&v23);
      uint64_t v13 = v32;
      uint64_t v14 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      char v10 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 8))(&v23, v13, v14);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
LABEL_10:
      sub_1D2FCE4B4((uint64_t)v30);
      if ((v10 & 1) == 0) {
        goto LABEL_35;
      }
      goto LABEL_11;
    }
    if (v27 | v28 | (unint64_t)v25 | v26 | *((void *)&v25 + 1))
    {
      sub_1D2FCE4B4((uint64_t)v30);
      goto LABEL_35;
    }
    sub_1D2FCE4B4((uint64_t)v30);
LABEL_11:
    ++v6;
    v5 += 48;
    if (v12 == v3) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1D2FCBEBC(uint64_t a1, void *a2)
{
  sub_1D2FCE47C(a1, (uint64_t)&v9);
  if (v12)
  {
    if (v12 == 1)
    {
      sub_1D2F0BE68((long long *)&v9, (uint64_t)v8);
      uint64_t v3 = a2[3];
      uint64_t v4 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v3);
      char v5 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v4 + 8))(v8, v3, v4);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    }
    else
    {
      int8x16_t v6 = vorrq_s8(v10, v11);
      char v5 = (*(void *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | v9) == 0;
    }
  }
  else
  {
    v8[0] = v10;
    char v5 = FeatureResolver.isTrialFactorEnabled(_:scope:)(v9, (uint64_t *)v8);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v5 & 1;
}

uint64_t FeatureResolver.getDoubleFeatureParameterValue(parameter:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[2];
  v6[0] = a1[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t LocaleControl.init(locales:enablement:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static FeatureControlError.== infix(_:_:)(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  long long v4 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  long long v11 = *a1;
  uint64_t v12 = v2;
  uint64_t v13 = v3;
  long long v8 = v4;
  uint64_t v9 = v5;
  uint64_t v10 = v6;
  return _s28SiriPrivateLearningAnalytics6LocaleV2eeoiySbAC_ACtFZ_0((uint64_t *)&v11, (uint64_t *)&v8) & 1;
}

uint64_t sub_1D2FCC068(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  long long v4 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a2 + 3);
  long long v11 = *a1;
  uint64_t v12 = v2;
  uint64_t v13 = v3;
  long long v8 = v4;
  uint64_t v9 = v5;
  uint64_t v10 = v6;
  return _s28SiriPrivateLearningAnalytics6LocaleV2eeoiySbAC_ACtFZ_0((uint64_t *)&v11, (uint64_t *)&v8) & 1;
}

double FeatureControl.init(localeControl:defaultEnablement:)@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699D50);
  uint64_t v6 = swift_allocObject();
  *(void *)&double result = 1;
  long long v8 = *a1;
  *(_OWORD *)(v6 + 16) = xmmword_1D3004370;
  *(_OWORD *)(v6 + 32) = v8;
  *a3 = v6;
  a3[1] = a2;
  return result;
}

double FeatureControl.init(localeControl:)@<D0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1D2F1F090(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699D50);
  uint64_t v5 = swift_allocObject();
  *(void *)&double result = 1;
  long long v7 = *a1;
  *(_OWORD *)(v5 + 16) = xmmword_1D3004370;
  *(_OWORD *)(v5 + 32) = v7;
  *a2 = v5;
  a2[1] = v4;
  return result;
}

SiriPrivateLearningAnalytics::FeatureControl __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeatureControl.init(localeControls:defaultEnablement:)(Swift::OpaquePointer localeControls, Swift::OpaquePointer defaultEnablement)
{
  uint64_t v6 = v2;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1D2FCD218(v7);
  if (v3)
  {
    swift_bridgeObjectRelease();
    long long v8 = (void *)swift_bridgeObjectRelease_n();
  }
  else
  {
    long long v8 = (void *)swift_bridgeObjectRelease();
    v6->_rawValue = localeControls._rawValue;
    v6[1]._rawValue = defaultEnablement._rawValue;
  }
  result.defaultEnablement._rawValue = v9;
  result.localeControls._rawValue = v8;
  return result;
}

uint64_t sub_1D2FCC1E0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, unsigned __int8 *a5)
{
  unint64_t v6 = a2;
  uint64_t v8 = a4[1];
  uint64_t v68 = *a4;
  uint64_t v9 = *a5;
  uint64_t v10 = *v5;
  uint64_t v11 = v5[1];
  uint64_t v12 = *(void *)(v10 + 16);
  if (!v12)
  {
LABEL_36:
    if (!*(void *)(v11 + 16) || (unint64_t v41 = sub_1D2F0DD98(v9), (v42 & 1) == 0))
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_1D3001918();
      __swift_project_value_buffer(v52, (uint64_t)qword_1EBD65778);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v53 = sub_1D30018F8();
      os_log_type_t v54 = sub_1D30020A8();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        v69[0] = v56;
        *(_DWORD *)uint64_t v55 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v70 = sub_1D2F09508(a1, v6, v69);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v55 + 12) = 2080;
        uint64_t v70 = v68;
        unint64_t v71 = v8;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1D3001C68();
        swift_bridgeObjectRetain();
        sub_1D3001C68();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v70 = sub_1D2F09508(v70, v71, v69);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v53, v54, "Feature %s in locale: %s is disabled", (uint8_t *)v55, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v56, -1, -1);
        MEMORY[0x1D942F2D0](v55, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      char v31 = 0;
      return v31 & 1;
    }
    uint64_t v43 = *(void *)(v11 + 56) + 16 * v41;
    uint64_t v44 = *(void *)v43;
    LOBYTE(v43) = *(unsigned char *)(v43 + 8);
    uint64_t v70 = v44;
    LOBYTE(v71) = v43;
    char v31 = sub_1D2FCBB60(&v70);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1D3001918();
    __swift_project_value_buffer(v45, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v33 = sub_1D30018F8();
    os_log_type_t v46 = sub_1D30020A8();
    if (os_log_type_enabled(v33, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      v69[0] = v66;
      *(_DWORD *)uint64_t v47 = 136315906;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1D2F09508(a1, v6, v69);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2080;
      uint64_t v70 = v68;
      unint64_t v71 = v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1D3001C68();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v70 = sub_1D2F09508(v70, v71, v69);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2080;
      if (v31) {
        uint64_t v48 = 0x64656C62616E65;
      }
      else {
        uint64_t v48 = 0x64656C6261736964;
      }
      if (v31) {
        unint64_t v49 = 0xE700000000000000;
      }
      else {
        unint64_t v49 = 0xE800000000000000;
      }
      uint64_t v70 = sub_1D2F09508(v48, v49, v69);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 32) = 2080;
      unint64_t v50 = 0xE300000000000000;
      uint64_t v51 = 5459817;
      switch(v9)
      {
        case 1:
          unint64_t v50 = 0xE500000000000000;
          uint64_t v51 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v50 = 0xE400000000000000;
          uint64_t v51 = 1397716596;
          break;
        case 3:
          unint64_t v50 = 0xE700000000000000;
          uint64_t v51 = 0x534F6863746177;
          break;
        case 4:
          uint64_t v51 = 0x4F6E776F6E6B6E75;
          unint64_t v50 = 0xE900000000000053;
          break;
        default:
          break;
      }
      uint64_t v70 = sub_1D2F09508(v51, v50, v69);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v33, v46, "Feature %s in %s is not in a controlled locale and is %s for %s", (uint8_t *)v47, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v66, -1, -1);
      MEMORY[0x1D942F2D0](v47, -1, -1);

      return v31 & 1;
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return v31 & 1;
  }
  uint64_t v58 = v11;
  uint64_t v59 = a1;
  uint64_t v63 = *a5;
  uint64_t v13 = v10 + 32;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v67 = v8;
  uint64_t v61 = v13;
  uint64_t v62 = v12;
  unint64_t v15 = v8;
  while (1)
  {
    uint64_t v16 = (void *)(v13 + 16 * v14);
    uint64_t v17 = *v16;
    if (!*(void *)(*v16 + 16)) {
      goto LABEL_4;
    }
    uint64_t v64 = v14;
    uint64_t v18 = v16[1];
    sub_1D3002928();
    v69[0] = v68;
    v69[1] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1D3001C28();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1D3002968();
    uint64_t v20 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v21 = v19 & ~v20;
    if ((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v67;
    uint64_t v13 = v61;
    uint64_t v12 = v62;
    uint64_t v14 = v64;
LABEL_4:
    if (++v14 == v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v63;
      a1 = v59;
      unint64_t v6 = a2;
      uint64_t v11 = v58;
      goto LABEL_36;
    }
  }
  uint64_t v65 = ~v20;
  while (1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(v17 + 48) + 32 * v21);
    uint64_t v23 = v22[1];
    uint64_t v70 = *v22;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v24 = v70;
    uint64_t v70 = v68;
    unint64_t v71 = v15;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v24 == v68 && v23 == v71) {
      break;
    }
    char v25 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_14;
    }
    unint64_t v21 = (v21 + 1) & v65;
    if (((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_14:
  if (*(void *)(v18 + 16))
  {
    unint64_t v26 = sub_1D2F0DD98(v63);
    unint64_t v27 = v67;
    if (v28)
    {
      uint64_t v29 = *(void *)(v18 + 56) + 16 * v26;
      uint64_t v30 = *(void *)v29;
      LOBYTE(v29) = *(unsigned char *)(v29 + 8);
      uint64_t v70 = v30;
      LOBYTE(v71) = v29;
      char v31 = sub_1D2FCBB60(&v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v31 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v31 = 0;
    unint64_t v27 = v67;
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1D3001918();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_1D30018F8();
  os_log_type_t v34 = sub_1D30020A8();
  if (!os_log_type_enabled(v33, v34)) {
    goto LABEL_30;
  }
  uint64_t v35 = swift_slowAlloc();
  uint64_t v36 = swift_slowAlloc();
  v69[0] = v36;
  *(_DWORD *)uint64_t v35 = 136315906;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_1D2F09508(v59, a2, v69);
  sub_1D3002318();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v35 + 12) = 2080;
  if (v31) {
    uint64_t v37 = 0x64656C62616E65;
  }
  else {
    uint64_t v37 = 0x64656C6261736964;
  }
  if (v31) {
    unint64_t v38 = 0xE700000000000000;
  }
  else {
    unint64_t v38 = 0xE800000000000000;
  }
  uint64_t v70 = sub_1D2F09508(v37, v38, v69);
  sub_1D3002318();
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 22) = 2080;
  uint64_t v70 = v68;
  unint64_t v71 = v27;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v70 = sub_1D2F09508(v70, v71, v69);
  sub_1D3002318();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 32) = 2080;
  unint64_t v39 = 0xE300000000000000;
  uint64_t v40 = 5459817;
  switch(v63)
  {
    case 1:
      unint64_t v39 = 0xE500000000000000;
      uint64_t v40 = 0x534F63616DLL;
      break;
    case 2:
      unint64_t v39 = 0xE400000000000000;
      uint64_t v40 = 1397716596;
      break;
    case 3:
      unint64_t v39 = 0xE700000000000000;
      uint64_t v40 = 0x534F6863746177;
      break;
    case 4:
      uint64_t v40 = 0x4F6E776F6E6B6E75;
      unint64_t v39 = 0xE900000000000053;
      break;
    default:
      break;
  }
  uint64_t v70 = sub_1D2F09508(v40, v39, v69);
  sub_1D3002318();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1D2F05000, v33, v34, "Feature %s is %s in locale: %s for %s", (uint8_t *)v35, 0x2Au);
  swift_arrayDestroy();
  MEMORY[0x1D942F2D0](v36, -1, -1);
  MEMORY[0x1D942F2D0](v35, -1, -1);

  return v31 & 1;
}

uint64_t AnyFeature.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyFeature.control.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AnyFeature.init(name:control:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(_OWORD *)(v3 + 32) = *a3;
  return v3;
}

uint64_t sub_1D2FCCFC0(uint64_t a1, long long *a2, unsigned __int8 *a3)
{
  long long v5 = *a2;
  uint64_t v6 = *((void *)a2 + 2);
  uint64_t v7 = *((void *)a2 + 3);
  unsigned __int8 v8 = *a3;
  uint64_t v9 = v3[5];
  uint64_t v17 = v3[4];
  uint64_t v18 = v9;
  uint64_t v10 = v3[2];
  unint64_t v11 = v3[3];
  long long v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = v7;
  unsigned __int8 v13 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1D2FCC1E0(v10, v11, a1, (uint64_t *)&v14, &v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t AnyFeature.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AnyFeature.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FCD0E8(uint64_t a1, long long *a2, unsigned __int8 *a3)
{
  uint64_t v5 = *v3;
  long long v6 = *a2;
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  unsigned __int8 v9 = *a3;
  uint64_t v10 = *(void *)(*v3 + 40);
  uint64_t v18 = *(void *)(*v3 + 32);
  uint64_t v19 = v10;
  uint64_t v11 = *(void *)(v5 + 16);
  unint64_t v12 = *(void *)(v5 + 24);
  long long v15 = v6;
  uint64_t v16 = v7;
  uint64_t v17 = v8;
  unsigned __int8 v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1D2FCC1E0(v11, v12, a1, (uint64_t *)&v15, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1 & 1;
}

SiriPrivateLearningAnalytics::OSType __swiftcall OSTypeResolver.getOS()()
{
  *uint64_t v0 = 0;
  return result;
}

void sub_1D2FCD194(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t DoubleFeatureParameter.init(factor:scope:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a3 = result;
  a3[1] = v3;
  a3[2] = v4;
  return result;
}

uint64_t DoubleFeatureParameter.getValue(resolver:)()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  v6[0] = v0[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D2FCD218(uint64_t a1)
{
  uint64_t v41 = MEMORY[0x1E4FBC870];
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v28 = v2;
  uint64_t v29 = v1;
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 16 * v3);
  uint64_t v30 = v3 + 1;
  uint64_t v32 = v4 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v4 + 56);
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v31 = v4;
  while (1)
  {
    if (v7)
    {
      uint64_t v35 = (v7 - 1) & v7;
      unint64_t v10 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    if (v11 >= v33) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v11);
    ++v9;
    if (v12) {
      goto LABEL_24;
    }
    int64_t v9 = v11 + 1;
    if (v11 + 1 >= v33) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v9);
    if (v12) {
      goto LABEL_24;
    }
    int64_t v9 = v11 + 2;
    if (v11 + 2 >= v33) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v9);
    if (v12) {
      goto LABEL_24;
    }
    int64_t v13 = v11 + 3;
    if (v13 >= v33)
    {
LABEL_35:
      swift_release();
      uint64_t v3 = v30;
      uint64_t v2 = v28;
      if (v30 != v29) {
        goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    unint64_t v12 = *(void *)(v32 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v9 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_41;
        }
        if (v9 >= v33) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v32 + 8 * v9);
        ++v13;
        if (v12) {
          goto LABEL_24;
        }
      }
    }
    int64_t v9 = v13;
LABEL_24:
    uint64_t v35 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v9 << 6);
LABEL_25:
    unsigned __int8 v14 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v10);
    uint64_t v15 = v14[1];
    uint64_t v16 = v14[2];
    uint64_t v17 = v14[3];
    uint64_t v18 = v41;
    uint64_t v38 = *v14;
    if (!*(void *)(v41 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    int64_t v34 = v9;
    sub_1D3002928();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    uint64_t v37 = v16;
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1D3001C28();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_1D3002968();
    uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
    unint64_t v21 = v19 & ~v20;
    if ((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_34:
    int64_t v9 = v34;
    uint64_t v16 = v37;
LABEL_8:
    sub_1D2FE00F8(&v39, v38, v15, v16, v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v7 = v35;
  }
  uint64_t v36 = ~v20;
  while (1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(v18 + 48) + 32 * v21);
    uint64_t v23 = v22[1];
    uint64_t v39 = *v22;
    uint64_t v40 = v23;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v25 = v39;
    uint64_t v24 = v40;
    uint64_t v39 = v38;
    uint64_t v40 = v15;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v25 == v39 && v24 == v40) {
      break;
    }
    char v26 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_39;
    }
    unint64_t v21 = (v21 + 1) & v36;
    if (((*(void *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v31;
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2FCE4E4();
  swift_allocError();
  *unint64_t v27 = v38;
  v27[1] = v15;
  v27[2] = v37;
  v27[3] = v17;
  swift_willThrow();
  return swift_release();
}

unint64_t sub_1D2FCD724()
{
  unint64_t result = qword_1EBD639C8;
  if (!qword_1EBD639C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD639C8);
  }
  return result;
}

uint64_t destroy for FeatureEnablementPolicy(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)result + 2;
  }
  if (v1 == 1)
  {
    return __swift_destroy_boxed_opaque_existential_0(result);
  }
  else if (!v1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeatureEnablementPolicy(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 40) = 0;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for FeatureEnablementPolicy(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    else if (!v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v7 = *a2;
      long long v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(unsigned char *)(a1 + 40) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FeatureEnablementPolicy(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    else if (!v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureEnablementPolicy(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeatureEnablementPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D2FCDB3C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1D2FCDB58(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeatureEnablementPolicy()
{
  return &type metadata for FeatureEnablementPolicy;
}

unsigned char *storeEnumTagSinglePayload for OSType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FCDC5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OSType()
{
  return &type metadata for OSType;
}

uint64_t initializeBufferWithCopyOfBuffer for FeatureEnablementPolicyQuantifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  j__swift_bridgeObjectRetain(*a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for FeatureEnablementPolicyQuantifier(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for FeatureEnablementPolicyQuantifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  j__swift_bridgeObjectRetain(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t *assignWithTake for FeatureEnablementPolicyQuantifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureEnablementPolicyQuantifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureEnablementPolicyQuantifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D2FCDE10(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureEnablementPolicyQuantifier()
{
  return &type metadata for FeatureEnablementPolicyQuantifier;
}

uint64_t destroy for FeatureResolver(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  return __swift_destroy_boxed_opaque_existential_0(a1 + 40);
}

uint64_t initializeWithCopy for FeatureResolver(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for FeatureResolver(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for FeatureResolver(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureResolver(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureResolver()
{
  return &type metadata for FeatureResolver;
}

uint64_t destroy for LocaleControl()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for LocaleControl()
{
  return &type metadata for LocaleControl;
}

ValueMetadata *type metadata accessor for FeatureControlError()
{
  return &type metadata for FeatureControlError;
}

void *_s28SiriPrivateLearningAnalytics13LocaleControlVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s28SiriPrivateLearningAnalytics13LocaleControlVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s28SiriPrivateLearningAnalytics13LocaleControlVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeatureControl()
{
  return &type metadata for FeatureControl;
}

uint64_t dispatch thunk of ControlledFeature.isEnabled(resolver:in:forOS:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for AnyFeature()
{
  return self;
}

uint64_t method lookup function for AnyFeature(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnyFeature);
}

uint64_t dispatch thunk of AnyFeature.__allocating_init(name:control:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AnyFeature.isEnabled(resolver:in:forOS:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of OSTypeResolving.getOS()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for OSTypeResolver()
{
  return &type metadata for OSTypeResolver;
}

uint64_t destroy for DoubleFeatureParameter()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s28SiriPrivateLearningAnalytics22DoubleFeatureParameterVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DoubleFeatureParameter(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for DoubleFeatureParameter(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DoubleFeatureParameter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DoubleFeatureParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoubleFeatureParameter()
{
  return &type metadata for DoubleFeatureParameter;
}

uint64_t sub_1D2FCE444(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D2FCE47C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D2FCE4B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1D2FCE4E4()
{
  unint64_t result = qword_1EA699D58;
  if (!qword_1EA699D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699D58);
  }
  return result;
}

uint64_t sub_1D2FCE544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1D2FCE558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t sub_1D2FCE56C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1D2F09B08(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_1D2FCEF94(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v21 = v3 + 80;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v25 = v7;
    uint64_t v12 = v3;
    sub_1D3002568();
    sub_1D3001C68();
    sub_1D3002738();
    sub_1D3001C68();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v14 = *(void *)(v26 + 16);
    unint64_t v13 = *(void *)(v26 + 24);
    if (v14 >= v13 >> 1) {
      uint64_t result = sub_1D2F09B08(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v26 + 16) = v14 + 1;
    uint64_t v15 = v26 + 16 * v14;
    *(void *)(v15 + 32) = 0;
    *(void *)(v15 + 40) = 0xE000000000000000;
    int64_t v9 = 1 << *(unsigned char *)(v12 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v24;
    uint64_t v16 = *(void *)(v24 + 8 * v11);
    if ((v16 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v12;
    int v5 = v23;
    if (*(_DWORD *)(v12 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      int64_t v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v18 = v11 + 1;
      unint64_t v19 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v24 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            unint64_t v20 = *(void *)(v21 + 8 * v11++);
            if (v20)
            {
              unint64_t v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v25 + 1;
    uint64_t v6 = v9;
    if (v25 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D2FCE7F4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AD0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F1D2F0();
  sub_1D3001208();
  type metadata accessor for BiomePLSELFStoreReader();
  uint64_t v4 = swift_allocObject();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics22BiomePLSELFStoreReader_stream, v3, v0);
  qword_1EBD65750 = v4;
  return result;
}

uint64_t sub_1D2FCE908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v22 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61100);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699888);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA6980D0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D3001918();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EA699D60);
  unint64_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D30020A8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = v12;
    unint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1D2F05000, v14, v15, "Registering a closure to read SELF events from Biome", v16, 2u);
    uint64_t v12 = v21;
    MEMORY[0x1D942F2D0](v17, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AD0);
  sub_1D2F1D154(&qword_1EA699890, &qword_1EBD62AD0);
  sub_1D3001228();
  sub_1D2F1D154(&qword_1EA699898, &qword_1EBD61100);
  sub_1D30011A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v22;
  *(void *)(v18 + 24) = a2;
  sub_1D2F1D154(&qword_1EA6998A0, &qword_1EA699888);
  swift_retain();
  uint64_t v19 = sub_1D3001178();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v19;
}

void sub_1D2FCEC98(void *a1@<X8>)
{
  *a1 = &unk_1F2A15F38;
}

uint64_t sub_1D2FCECA8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics22BiomePLSELFStoreReader_stream;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FCED4C()
{
  return type metadata accessor for BiomePLSELFStoreReader();
}

uint64_t type metadata accessor for BiomePLSELFStoreReader()
{
  uint64_t result = qword_1EBD63028;
  if (!qword_1EBD63028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D2FCEDA0()
{
  sub_1D2FCEE30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1D2FCEE30()
{
  if (!qword_1EBD62AD8)
  {
    sub_1D2F1D2F0();
    unint64_t v0 = sub_1D30011E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD62AD8);
    }
  }
}

uint64_t sub_1D2FCEE88()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EA699D60);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA699D60);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1D2FCEF50()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2FCEF88(uint64_t a1)
{
  return sub_1D2FCF01C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1D2FCEF94(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1D2FCF01C(uint64_t a1, void (*a2)(void *))
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBD602F0);
  sub_1D3001DB8();
  if (qword_1EA6980D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA699D60);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020B8();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "Failed to convert sink input into StreamReadResult", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699878);
  unsigned int v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  void v6[6] = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = 0;
  *(void *)(v8 + 16) = 0;
  if ((v7 & 0xC000000000000000) != 0) {
    uint64_t v9 = sub_1D30025A8();
  }
  uint64_t v10 = sub_1D2F1D154((unint64_t *)&qword_1EBD61550, (uint64_t *)&unk_1EBD61560);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  uint64_t v6[2] = v8;
  v6[3] = v10;
  v6[4] = v11;
  v6[5] = v10;
  a2(v6);
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for BiomePLSELFStoreReader.StreamReadError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FCFBF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomePLSELFStoreReader.StreamReadError()
{
  return &type metadata for BiomePLSELFStoreReader.StreamReadError;
}

uint64_t sub_1D2FCFC2C()
{
  return sub_1D2F1D154(&qword_1EA699D80, &qword_1EA699D88);
}

unint64_t sub_1D2FCFC6C()
{
  unint64_t result = qword_1EA699D90;
  if (!qword_1EA699D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699D90);
  }
  return result;
}

void SiriUserFeedbackLearningPlatformResult.init(mlrTaskResult:error:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1D3001BB8();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v57 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D3000D28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D3001918();
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBD65778);
  id v12 = a1;
  id v13 = a2;
  id v14 = v12;
  id v15 = a2;
  uint64_t v60 = (void *)v11;
  uint64_t v16 = sub_1D30018F8();
  os_log_type_t v17 = sub_1D30020A8();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v62 = a1;
  if (v18)
  {
    uint64_t v54 = v8;
    uint64_t v55 = v7;
    uint64_t v19 = swift_slowAlloc();
    unint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(void *)&long long v64 = v53;
    *(_DWORD *)uint64_t v19 = 136315650;
    *(void *)&long long v63 = sub_1D2F09508(0xD00000000000001ALL, 0x80000001D300E300, (uint64_t *)&v64);
    sub_1D3002318();
    *(_WORD *)(v19 + 12) = 2112;
    if (a1)
    {
      *(void *)&long long v63 = v14;
      id v21 = v14;
    }
    else
    {
      *(void *)&long long v63 = 0;
    }
    sub_1D3002318();
    *unint64_t v20 = v62;

    *(_WORD *)(v19 + 22) = 2112;
    if (a2)
    {
      id v43 = a2;
      uint64_t v44 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v63 = v44;
      sub_1D3002318();
    }
    else
    {
      *(void *)&long long v63 = 0;
      sub_1D3002318();
      uint64_t v44 = 0;
    }
    v20[1] = v44;

    _os_log_impl(&dword_1D2F05000, v16, v17, "SiriUserFeedbackLearningPlatformResult.%s mlrTaskResult: %@, error: %@", (uint8_t *)v19, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v20, -1, -1);
    uint64_t v45 = v53;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v45, -1, -1);
    MEMORY[0x1D942F2D0](v19, -1, -1);

    uint64_t v8 = v54;
    uint64_t v7 = v55;
    if (!v62)
    {
LABEL_27:
      id v46 = a2;
      uint64_t v47 = sub_1D30018F8();
      os_log_type_t v48 = sub_1D30020B8();
      if (os_log_type_enabled(v47, v48))
      {
        unint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v49 = 0;
        _os_log_impl(&dword_1D2F05000, v47, v48, "SiriUserFeedbackLearningPlatformResult: MLR task result is nil", v49, 2u);
        MEMORY[0x1D942F2D0](v49, -1, -1);
      }

      id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F737C8]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
      goto LABEL_30;
    }
  }
  else
  {

    if (!a1) {
      goto LABEL_27;
    }
  }
  id v22 = v14;
  id v23 = a2;
  id v24 = objc_msgSend(v22, sel_JSONResult);
  if (!v24)
  {
    long long v64 = 0u;
    long long v65 = 0u;
LABEL_17:
    sub_1D2F0BEDC((uint64_t)&v64);
    goto LABEL_18;
  }
  uint64_t v25 = v24;
  uint64_t v26 = sub_1D3001A88();

  if (*(void *)(v26 + 16) && (unint64_t v27 = sub_1D2F0DC98(0x746C75736572, 0xE600000000000000), (v28 & 1) != 0))
  {
    sub_1D2F0BD44(*(void *)(v26 + 56) + 32 * v27, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v65 + 1)) {
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  long long v64 = v63;
  uint64_t v29 = v56;
  sub_1D3000D08();
  sub_1D2F226C4();
  sub_1D3002368();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v29, v7);
  swift_bridgeObjectRelease();
  uint64_t v30 = v57;
  sub_1D3001BA8();
  uint64_t v31 = sub_1D3001B88();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v59);
  if (v33 >> 60 == 15)
  {
LABEL_18:
    id v34 = v22;
    uint64_t v35 = sub_1D30018F8();
    os_log_type_t v36 = sub_1D30020B8();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v60 = a2;
      uint64_t v40 = v39;
      *(void *)&long long v64 = v39;
      *(_DWORD *)uint64_t v37 = 138412546;
      *(void *)&long long v63 = v34;
      id v41 = v34;
      sub_1D3002318();
      *uint64_t v38 = v62;

      *(_WORD *)(v37 + 12) = 2080;
      *(void *)&long long v63 = sub_1D2F09508(0x746C75736572, 0xE600000000000000, (uint64_t *)&v64);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v35, v36, "SiriUserFeedbackLearningPlatformResult: Unable to get json result value from %@ for parameter: \"%s\"", (uint8_t *)v37, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v38, -1, -1);
      swift_arrayDestroy();
      uint64_t v42 = v40;
      a2 = v60;
      MEMORY[0x1D942F2D0](v42, -1, -1);
      MEMORY[0x1D942F2D0](v37, -1, -1);
    }
    else
    {
    }
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F737C8]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);

LABEL_30:
    uint64_t v51 = MEMORY[0x1E4FBC860];
    goto LABEL_31;
  }
  sub_1D3000C98();
  swift_allocObject();
  sub_1D3000C88();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61710);
  sub_1D2FD1034(&qword_1EBD5FC20, (void (*)(void))sub_1D2FD0FE0);
  sub_1D3000C78();

  swift_release();
  sub_1D2F2276C(v31, v33);
  uint64_t v51 = v64;
LABEL_31:
  unint64_t v50 = v61;
  *uint64_t v61 = v51;
  v50[1] = v22;
  v50[2] = a2;
}

uint64_t SiriUserFeedbackLearningPlatformResult.toSchedulerResult()()
{
  uint64_t v1 = *v0;
  int64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1D2F0A0C0(0, v2, 0);
    uint64_t v3 = v15;
    unsigned int v4 = (unint64_t *)(v1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      unint64_t v8 = *v4;
      if (*v4 >= 2) {
        uint64_t v9 = *(v4 - 1);
      }
      else {
        uint64_t v9 = 0;
      }
      if (*v4 >= 2) {
        unint64_t v10 = *v4;
      }
      else {
        unint64_t v10 = 0;
      }
      swift_bridgeObjectRetain();
      sub_1D2F22648(v7, v8);
      unint64_t v12 = *(void *)(v15 + 16);
      unint64_t v11 = *(void *)(v15 + 24);
      if (v12 >= v11 >> 1) {
        sub_1D2F0A0C0(v11 > 1, v12 + 1, 1);
      }
      v4 += 4;
      *(void *)(v15 + 16) = v12 + 1;
      id v13 = (void *)(v15 + 32 * v12);
      v13[4] = v6;
      v13[5] = v5;
      v13[6] = v9;
      v13[7] = v10;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t SiriUserFeedbackLearningPlatformResult.result.getter()
{
  return swift_bridgeObjectRetain();
}

id SiriUserFeedbackLearningPlatformResult.mlrTaskResult.getter()
{
  return *(id *)(v0 + 8);
}

void *SiriUserFeedbackLearningPlatformResult.error.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t SiriUserFeedbackLearningPlatformResult.description.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1D942DD00](v0, &type metadata for SiriUserFeedbackLearningPluginRunResult);
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x203A746C75736572;
}

uint64_t SiriUserFeedbackLearningPlatformResult.init(result:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1D3001BB8();
  MEMORY[0x1F4188790](v3 - 8);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D3001918();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1D30018F8();
  os_log_type_t v6 = sub_1D30020A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v34[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1D2F09508(0x7365722874696E69, 0xED0000293A746C75, v34);
    sub_1D3002318();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x1D942DD00](v9, &type metadata for SiriUserFeedbackLearningPluginRunResult);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_1D2F09508(v10, v12, v34);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v5, v6, "SiriUserFeedbackLearningPlatformResult.%s status: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v8, -1, -1);
    MEMORY[0x1D942F2D0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D3000CF8();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1D3000CE8();
  v34[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61710);
  sub_1D2FD1034(&qword_1EBD5DC68, (void (*)(void))sub_1D2FD10A4);
  uint64_t v13 = sub_1D3000CD8();
  unint64_t v15 = v14;
  sub_1D3001BA8();
  uint64_t v16 = sub_1D3001B98();
  if (v17)
  {
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD637A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D3004370;
    *(void *)(inited + 32) = 0x746C75736572;
    *(void *)(inited + 40) = 0xE600000000000000;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v18;
    *(void *)(inited + 56) = v19;
    sub_1D2F1F1AC(inited);
    id v21 = objc_allocWithZone(MEMORY[0x1E4F737C8]);
    id v22 = (void *)sub_1D3001A78();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v21, sel_initWithJSONResult_unprivatizedVector_, v22, 0);
  }
  else
  {
    swift_bridgeObjectRetain();
    id v24 = sub_1D30018F8();
    os_log_type_t v25 = sub_1D30020B8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v34[0] = v32;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = MEMORY[0x1D942DD00](v27, &type metadata for SiriUserFeedbackLearningPluginRunResult);
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      sub_1D2F09508(v28, v30, v34);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v24, v25, "SiriUserFeedbackLearningPlatformResult: Unable to encode %s to string", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v32, -1, -1);
      MEMORY[0x1D942F2D0](v26, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F737C8]), sel_initWithJSONResult_unprivatizedVector_, 0, 0);
  }
  sub_1D2F0D1CC(v13, v15);
  uint64_t result = swift_release();
  *a2 = a1;
  a2[1] = (uint64_t)v23;
  a2[2] = 0;
  return result;
}

unint64_t sub_1D2FD0FE0()
{
  unint64_t result = qword_1EBD5F790;
  if (!qword_1EBD5F790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5F790);
  }
  return result;
}

uint64_t sub_1D2FD1034(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBD61710);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D2FD10A4()
{
  unint64_t result = qword_1EBD5DC48;
  if (!qword_1EBD5DC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5DC48);
  }
  return result;
}

void destroy for SiriUserFeedbackLearningPlatformResult(uint64_t a1)
{
  swift_bridgeObjectRelease();

  id v2 = *(void **)(a1 + 16);
}

void *_s28SiriPrivateLearningAnalytics38SiriUserFeedbackLearningPlatformResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  swift_bridgeObjectRetain();
  id v5 = v3;
  id v6 = v4;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for SiriUserFeedbackLearningPlatformResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = (void *)a1[2];
  uint64_t v8 = (void *)a2[2];
  id v9 = v8;
  a1[2] = v8;

  return a1;
}

uint64_t assignWithTake for SiriUserFeedbackLearningPlatformResult(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for SiriUserFeedbackLearningPlatformResult()
{
  return &type metadata for SiriUserFeedbackLearningPlatformResult;
}

uint64_t static EntityExtractor.extract(from:)(unint64_t a1)
{
  uint64_t v1 = static NlxSELFUtils.getTopNlxUsoGraph(from:)(a1);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = v1;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D3001918();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
  swift_retain_n();
  id v5 = sub_1D30018F8();
  os_log_type_t v6 = sub_1D30020A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    unint64_t v24 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_1D3001608();
    sub_1D2F88978();
    uint64_t v9 = sub_1D3002738();
    sub_1D2F09508(v9, v10, (uint64_t *)&v24);
    sub_1D3002318();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v5, v6, "[EntityExtractor] The constructed graph: \n%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v8, -1, -1);
    MEMORY[0x1D942F2D0](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  unint64_t v11 = MEMORY[0x1D942D370](v3);
  unint64_t v12 = v11;
  unint64_t v24 = v2;
  if (!(v11 >> 62))
  {
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_9;
    }
LABEL_27:
    swift_bridgeObjectRelease_n();
    unint64_t v18 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62)) {
      goto LABEL_19;
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_9:
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  for (uint64_t i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0) {
      MEMORY[0x1D942E3A0](i, v12);
    }
    else {
      swift_retain();
    }
    uint64_t v16 = sub_1D2FD1640();
    swift_release();
    if (v16) {
      unint64_t v17 = v16;
    }
    else {
      unint64_t v17 = v2;
    }
    sub_1D2F9D3EC(v17);
  }
  swift_bridgeObjectRelease_n();
  unint64_t v18 = v24;
  if (!(v24 >> 62))
  {
LABEL_19:
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19) {
      goto LABEL_20;
    }
    goto LABEL_29;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1D30025A8();
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
LABEL_20:
  unint64_t v24 = v2;
  uint64_t result = sub_1D2F0A19C(0, v19 & ~(v19 >> 63), 0);
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = 0;
    unint64_t v2 = v24;
    unint64_t v21 = *(void *)(v24 + 16);
    do
    {
      uint64_t v22 = *(void *)(v18 + 8 * v20 + 32);
      unint64_t v24 = v2;
      unint64_t v23 = *(void *)(v2 + 24);
      swift_retain();
      if (v21 >= v23 >> 1)
      {
        sub_1D2F0A19C(v23 > 1, v21 + 1, 1);
        unint64_t v2 = v24;
      }
      ++v20;
      *(void *)(v2 + 16) = v21 + 1;
      *(void *)(v2 + 8 * v21++ + 32) = v22;
    }
    while (v19 != v20);
    swift_bridgeObjectRelease();
    swift_release();
    return v2;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t EntityExtractor.deinit()
{
  return v0;
}

uint64_t EntityExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FD1640()
{
  sub_1D3001488();
  sub_1D2F0BF3C((uint64_t)v64, (uint64_t)v62);
  if (!v63)
  {
    sub_1D2F0BEDC((uint64_t)v64);
LABEL_17:
    uint64_t v4 = 0;
LABEL_303:
    sub_1D2F0BEDC((uint64_t)v62);
    return v4;
  }
  sub_1D2F0BF3C((uint64_t)v62, (uint64_t)v61);
  sub_1D30014C8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v0 = sub_1D3001568();
    swift_release();
    if (v0)
    {
      uint64_t v60 = MEMORY[0x1E4FBC860];
      if (v0 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v1 = sub_1D30025A8();
        if (v1) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v1)
        {
LABEL_6:
          if (v1 >= 1)
          {
            for (uint64_t i = 0; i != v1; ++i)
            {
              if ((v0 & 0xC000000000000001) != 0) {
                MEMORY[0x1D942E3A0](i, v0);
              }
              else {
                swift_retain();
              }
              sub_1D3001428();
              uint64_t v3 = swift_release();
              if (v57)
              {
                MEMORY[0x1D942DCC0](v3);
                if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1D3001E28();
                }
                sub_1D3001E68();
                sub_1D3001DE8();
              }
            }
LABEL_257:
            swift_bridgeObjectRelease();
            uint64_t v4 = v60;
LABEL_299:
            swift_bridgeObjectRelease();
LABEL_300:
            swift_release();
            goto LABEL_301;
          }
          __break(1u);
LABEL_203:
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_1D30025A8();
          if (!v5) {
            goto LABEL_298;
          }
          goto LABEL_22;
        }
      }
LABEL_298:
      swift_bridgeObjectRelease();
      uint64_t v4 = MEMORY[0x1E4FBC860];
      goto LABEL_299;
    }
    goto LABEL_248;
  }
  sub_1D30014E8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v0 = sub_1D3001568();
    swift_release();
    if (v0)
    {
      uint64_t v60 = MEMORY[0x1E4FBC860];
      if (v0 >> 62) {
        goto LABEL_203;
      }
      uint64_t v5 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_22:
        if (v5 >= 1)
        {
          for (uint64_t j = 0; j != v5; ++j)
          {
            if ((v0 & 0xC000000000000001) != 0) {
              MEMORY[0x1D942E3A0](j, v0);
            }
            else {
              swift_retain();
            }
            sub_1D3001428();
            uint64_t v7 = swift_release();
            if (v57)
            {
              MEMORY[0x1D942DCC0](v7);
              if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1D3001E28();
              }
              sub_1D3001E68();
              sub_1D3001DE8();
            }
          }
          goto LABEL_257;
        }
        __break(1u);
        goto LABEL_220;
      }
      goto LABEL_298;
    }
LABEL_248:
    sub_1D2F0BEDC((uint64_t)v64);
    swift_release();
    uint64_t v4 = 0;
LABEL_302:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    goto LABEL_303;
  }
  sub_1D30014D8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D3001568();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1D30025A8();
      if (!v9) {
        goto LABEL_298;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_298;
      }
    }
    if (v9 >= 1)
    {
      for (uint64_t k = 0; k != v9; ++k)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](k, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v11 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v11);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_240;
  }
  sub_1D30014A8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D3001568();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_298;
      }
      goto LABEL_50;
    }
LABEL_240:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D30025A8();
    if (!v12) {
      goto LABEL_298;
    }
LABEL_50:
    if (v12 >= 1)
    {
      for (uint64_t m = 0; m != v12; ++m)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](m, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v14 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v14);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_259;
  }
  sub_1D3001508();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30015B8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v15 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v15) {
        goto LABEL_298;
      }
      goto LABEL_64;
    }
LABEL_259:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D30025A8();
    if (!v15) {
      goto LABEL_298;
    }
LABEL_64:
    if (v15 >= 1)
    {
      for (uint64_t n = 0; n != v15; ++n)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](n, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v17 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v17);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_263;
  }
  sub_1D3001548();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30015B8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v18 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v18) {
        goto LABEL_298;
      }
      goto LABEL_78;
    }
LABEL_263:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1D30025A8();
    if (!v18) {
      goto LABEL_298;
    }
LABEL_78:
    if (v18 >= 1)
    {
      for (iuint64_t i = 0; ii != v18; ++ii)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](ii, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v20 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v20);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_266;
  }
  sub_1D3001538();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30015B8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v21 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v21) {
        goto LABEL_298;
      }
      goto LABEL_92;
    }
LABEL_266:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1D30025A8();
    if (!v21) {
      goto LABEL_298;
    }
LABEL_92:
    if (v21 >= 1)
    {
      for (juint64_t j = 0; jj != v21; ++jj)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](jj, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v23 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v23);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_269;
  }
  sub_1D30015A8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30015F8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v24 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v24) {
        goto LABEL_298;
      }
      goto LABEL_106;
    }
LABEL_269:
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D30025A8();
    if (!v24) {
      goto LABEL_298;
    }
LABEL_106:
    if (v24 >= 1)
    {
      for (kuint64_t k = 0; kk != v24; ++kk)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](kk, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v26 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v26);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_272;
  }
  sub_1D30015E8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30015F8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v27 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v27) {
        goto LABEL_298;
      }
      goto LABEL_120;
    }
LABEL_272:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1D30025A8();
    if (!v27) {
      goto LABEL_298;
    }
LABEL_120:
    if (v27 >= 1)
    {
      for (muint64_t m = 0; mm != v27; ++mm)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](mm, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v29 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v29);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_275;
  }
  sub_1D30015D8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30015F8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v30 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v30) {
        goto LABEL_298;
      }
      goto LABEL_134;
    }
LABEL_275:
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1D30025A8();
    if (!v30) {
      goto LABEL_298;
    }
LABEL_134:
    if (v30 >= 1)
    {
      for (nuint64_t n = 0; nn != v30; ++nn)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](nn, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v32 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v32);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_278;
  }
  sub_1D3001518();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30014B8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v33 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v33) {
        goto LABEL_298;
      }
      goto LABEL_148;
    }
LABEL_278:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1D30025A8();
    if (!v33) {
      goto LABEL_298;
    }
LABEL_148:
    if (v33 >= 1)
    {
      for (uint64_t i1 = 0; i1 != v33; ++i1)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](i1, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v35 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v35);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_281;
  }
  sub_1D3001588();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30014B8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v36 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v36) {
        goto LABEL_298;
      }
      goto LABEL_162;
    }
LABEL_281:
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1D30025A8();
    if (!v36) {
      goto LABEL_298;
    }
LABEL_162:
    if (v36 >= 1)
    {
      for (uint64_t i2 = 0; i2 != v36; ++i2)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](i2, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v38 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v38);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_284;
  }
  sub_1D30014F8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v39 = sub_1D30013A8();
    swift_release();
    if (!v39)
    {
      sub_1D30013B8();
      uint64_t v4 = v59;
      if (v59)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1D3005C00;
        *(void *)(v49 + 32) = v59;
        uint64_t v58 = v49;
        sub_1D3001DE8();
        uint64_t v4 = v58;
      }
      goto LABEL_300;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    unint64_t v8 = v39;
    if (!(v39 >> 62))
    {
      uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v40)
      {
LABEL_285:
        swift_bridgeObjectRelease();
        uint64_t v4 = MEMORY[0x1E4FBC860];
        goto LABEL_286;
      }
      goto LABEL_176;
    }
LABEL_284:
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1D30025A8();
    if (!v40) {
      goto LABEL_285;
    }
LABEL_176:
    if (v40 >= 1)
    {
      for (uint64_t i3 = 0; i3 != v40; ++i3)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](i3, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v42 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v42);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
LABEL_220:
      swift_bridgeObjectRelease();
      uint64_t v4 = v60;
LABEL_286:
      swift_release();
      swift_bridgeObjectRelease();
LABEL_301:
      sub_1D2F0BEDC((uint64_t)v64);
      goto LABEL_302;
    }
    __break(1u);
    goto LABEL_288;
  }
  sub_1D30015C8();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30014B8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v43 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v43) {
        goto LABEL_298;
      }
      goto LABEL_192;
    }
LABEL_288:
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1D30025A8();
    if (!v43) {
      goto LABEL_298;
    }
LABEL_192:
    if (v43 >= 1)
    {
      for (uint64_t i4 = 0; i4 != v43; ++i4)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](i4, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v45 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v45);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_291;
  }
  sub_1D3001598();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D30014B8();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v46 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v46) {
        goto LABEL_298;
      }
      goto LABEL_209;
    }
LABEL_291:
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1D30025A8();
    if (!v46) {
      goto LABEL_298;
    }
LABEL_209:
    if (v46 >= 1)
    {
      for (uint64_t i5 = 0; i5 != v46; ++i5)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](i5, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v48 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v48);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
    goto LABEL_294;
  }
  sub_1D3001558();
  if (swift_dynamicCast())
  {
    swift_retain();
    unint64_t v8 = sub_1D3001528();
    swift_release();
    if (!v8) {
      goto LABEL_248;
    }
    uint64_t v60 = MEMORY[0x1E4FBC860];
    if (!(v8 >> 62))
    {
      uint64_t v50 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v50) {
        goto LABEL_298;
      }
      goto LABEL_229;
    }
LABEL_294:
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1D30025A8();
    if (!v50) {
      goto LABEL_298;
    }
LABEL_229:
    if (v50 >= 1)
    {
      for (uint64_t i6 = 0; i6 != v50; ++i6)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          MEMORY[0x1D942E3A0](i6, v8);
        }
        else {
          swift_retain();
        }
        sub_1D3001428();
        uint64_t v52 = swift_release();
        if (v57)
        {
          MEMORY[0x1D942DCC0](v52);
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      goto LABEL_257;
    }
    __break(1u);
LABEL_297:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D30025A8();
    uint64_t v53 = result;
    if (!result) {
      goto LABEL_298;
    }
    goto LABEL_246;
  }
  sub_1D3001578();
  if (!swift_dynamicCast())
  {
    sub_1D2F0BEDC((uint64_t)v64);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    goto LABEL_17;
  }
  swift_retain();
  unint64_t v8 = sub_1D30014B8();
  swift_release();
  if (!v8) {
    goto LABEL_248;
  }
  uint64_t v60 = MEMORY[0x1E4FBC860];
  if (v8 >> 62) {
    goto LABEL_297;
  }
  uint64_t v53 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v53) {
    goto LABEL_298;
  }
LABEL_246:
  if (v53 >= 1)
  {
    for (uint64_t i7 = 0; i7 != v53; ++i7)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        MEMORY[0x1D942E3A0](i7, v8);
      }
      else {
        swift_retain();
      }
      sub_1D3001428();
      uint64_t v56 = swift_release();
      if (v57)
      {
        MEMORY[0x1D942DCC0](v56);
        if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D3001E28();
        }
        sub_1D3001E68();
        sub_1D3001DE8();
      }
    }
    goto LABEL_257;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EntityExtractor()
{
  return self;
}

uint64_t method lookup function for EntityExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EntityExtractor);
}

void *DebugModeFlagUserDefaultsStore.__allocating_init()()
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = 0xD000000000000038;
  result[3] = 0x80000001D3013330;
  result[4] = 0xD000000000000012;
  result[5] = 0x80000001D3013370;
  return result;
}

void *DebugModeFlagUserDefaultsStore.init()()
{
  uint64_t result = v0;
  v0[2] = 0xD000000000000038;
  v0[3] = 0x80000001D3013330;
  v0[4] = 0xD000000000000012;
  v0[5] = 0x80000001D3013370;
  return result;
}

id sub_1D2FD2E78()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  return v4;
}

void sub_1D2FD2F30()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    uint64_t v3 = (void *)sub_1D3001EB8();
    id v4 = (id)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    objc_msgSend(v2, sel_setValue_forKey_, v3, v4);
  }
}

void (*sub_1D2FD3020(uint64_t a1))()
{
  *(void *)a1 = v1;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  id v4 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

  if (v5)
  {
    os_log_type_t v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    unsigned __int8 v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);
  }
  else
  {
    unsigned __int8 v7 = 0;
  }
  *(unsigned char *)(a1 + 8) = v7;
  return sub_1D2FD3108;
}

void sub_1D2FD3108()
{
}

uint64_t DebugModeFlagUserDefaultsStore.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DebugModeFlagUserDefaultsStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1D2FD3198()
{
  return (unint64_t)sub_1D2FD2E78() & 1;
}

void sub_1D2FD31C0()
{
}

void (*sub_1D2FD31E4(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D2FD3020((uint64_t)v2);
  return sub_1D2FD3240;
}

void sub_1D2FD3240(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

id sub_1D2FD3288@<X0>(unsigned char *a1@<X8>)
{
  id result = sub_1D2FD2E78();
  *a1 = result & 1;
  return result;
}

void sub_1D2FD32B8()
{
}

uint64_t dispatch thunk of DebugModeFlagStore.debugModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DebugModeFlagStore.debugModeEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DebugModeFlagStore.debugModeEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for DebugModeFlagUserDefaultsStore()
{
  return self;
}

uint64_t method lookup function for DebugModeFlagUserDefaultsStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DebugModeFlagUserDefaultsStore);
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.debugModeEnabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.debugModeEnabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DebugModeFlagUserDefaultsStore.debugModeEnabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

ValueMetadata *type metadata accessor for DefaultPluginPath()
{
  return &type metadata for DefaultPluginPath;
}

uint64_t sub_1D2FD33E8()
{
  uint64_t v0 = sub_1D3000F18();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1EBD65730);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65730);
  id v5 = (id)MEMORY[0x1D942E970]();
  sub_1D3001B78();

  sub_1D3000E48();
  swift_bridgeObjectRelease();
  sub_1D3000EA8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1D2FD3530()
{
  uint64_t v0 = sub_1D3001988();
  __swift_allocate_value_buffer(v0, qword_1EBD5E6C0);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBD5E6C0) = 60;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);
  return v1();
}

id SiriUserFeedbackLearningPluginBase.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SiriUserFeedbackLearningPluginBase.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger];
  *((void *)v1 + 3) = &type metadata for UsageLogger;
  *((void *)v1 + 4) = &protocol witness table for UsageLogger;
  uint64_t v2 = qword_1EBD5E6E0;
  uint64_t v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D3001988();
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBD5E6C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(&v3[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout], v5, v4);

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for SiriUserFeedbackLearningPluginBase();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for SiriUserFeedbackLearningPluginBase()
{
  uint64_t result = qword_1EBD62AE8;
  if (!qword_1EBD62AE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id SiriUserFeedbackLearningPluginBase.__allocating_init(usageLogger:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_1D2F37950(a1, (uint64_t)v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger);
  uint64_t v4 = qword_1EBD5E6E0;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001988();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBD5E6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))((uint64_t)v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout, v7, v6);

  v10.receiver = v5;
  v10.super_class = v1;
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v8;
}

id SiriUserFeedbackLearningPluginBase.init(usageLogger:)(uint64_t a1)
{
  sub_1D2F37950(a1, (uint64_t)v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger);
  uint64_t v3 = qword_1EBD5E6E0;
  id v4 = v1;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D3001988();
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBD5E6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))((uint64_t)v4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout, v6, v5);

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for SiriUserFeedbackLearningPluginBase();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v7;
}

id sub_1D2FD3A28(void *a1)
{
  id v3 = v2;
  id v4 = v1;
  uint64_t ObjectType = swift_getObjectType();
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
  id v8 = a1;
  objc_super v9 = sub_1D30018F8();
  os_log_type_t v10 = sub_1D30020A8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v27[0] = v28;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1D2F09508(0x286D726F66726570, 0xEB00000000293A5FLL, v27);
    sub_1D3002318();
    *(_WORD *)(v11 + 12) = 2112;
    *(void *)&v24[0] = v8;
    uint64_t v12 = ObjectType;
    id v13 = v8;
    sub_1D3002318();
    *uint64_t v23 = v8;

    uint64_t ObjectType = v12;
    _os_log_impl(&dword_1D2F05000, v9, v10, "SiriUserFeedbackLearningPluginBase.%s task:%@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v23, -1, -1);
    uint64_t v14 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v14, -1, -1);
    MEMORY[0x1D942F2D0](v11, -1, -1);
  }
  else
  {
  }
  sub_1D2F37950((uint64_t)&v4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_usageLogger], (uint64_t)v24);
  SiriUserFeedbackLearningTask.init(mlrTask:usageLogger:)(v8, v24, (uint64_t)v27);
  if (!v2)
  {
    uint64_t v15 = &v4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics34SiriUserFeedbackLearningPluginBase_timeout];
    sub_1D2F3C528((uint64_t)v27, (uint64_t)v24);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v4;
    long long v17 = v24[1];
    *(_OWORD *)(v16 + 24) = v24[0];
    *(_OWORD *)(v16 + 40) = v17;
    *(_OWORD *)(v16 + 56) = v24[2];
    *(void *)(v16 + 72) = v25;
    *(void *)(v16 + 80) = ObjectType;
    uint64_t v18 = v4;
    sub_1D2F3B608(v15, (uint64_t)&unk_1EA699DB0, v16, (uint8_t *)v26);
    sub_1D2F3C584((uint64_t)v27);
    swift_release();
    uint64_t v20 = v26[0];
    unint64_t v21 = v26[1];
    uint64_t v22 = (void *)v26[3];
    id v3 = (id)v26[2];
    sub_1D2F2265C(v20, v21);
  }
  return v3;
}

uint64_t sub_1D2FD3D7C(uint64_t a1, void *a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a1;
  uint64_t v5 = *(int **)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x78);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1D2FD3EA8;
  return v8(v3 + 16, a3);
}

uint64_t sub_1D2FD3EA8()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2FD3FA4, 0, 0);
}

uint64_t sub_1D2FD3FA4()
{
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v0 + 80) = *(void *)(v0 + 32);
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *uint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC848];
  v2[1] = sub_1D2FD4088;
  return MEMORY[0x1F41880D8](v2, 0, 0, 0xD000000000000016, 0x80000001D30134F0, sub_1D2FD45A4, 0, v3 + 8);
}

uint64_t sub_1D2FD4088()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2FD4184, 0, 0);
}

uint64_t sub_1D2FD4184()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D2FD4228;
  return MEMORY[0x1F4188298](sub_1D2FD4D64, 0, 0);
}

uint64_t sub_1D2FD4228()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2FD4324, 0, 0);
}

uint64_t sub_1D2FD4324()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 64);
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2FD434C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1D2FD4394(uint64_t a1)
{
  id v4 = *(void **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D2F1D1A0;
  return sub_1D2FD3D7C(a1, v4, v1 + 24);
}

uint64_t sub_1D2FD4504(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D2FD4524, 0, 0);
}

uint64_t sub_1D2FD4524()
{
  uint64_t v5 = v0;
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  v4[0] = 0xD000000000000036;
  v4[1] = 0x80000001D3013440;
  SiriUserFeedbackLearningTaskResult.init(status:)(v4, v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1D2FD45A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAA8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D3001918();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBD65778);
  uint64_t v6 = sub_1D30018F8();
  os_log_type_t v7 = sub_1D30020A8();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl(&dword_1D2F05000, v6, v7, "Waiting for all-clear from outgoing SELF logging queue...", v8, 2u);
    MEMORY[0x1D942F2D0](v8, -1, -1);
  }

  id v9 = objc_msgSend(self, sel_sharedAnalytics);
  id v10 = objc_msgSend(v9, sel_defaultMessageStream);

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1D2FD51B4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_11;
  id v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_barrierWithCompletion_, v13);
  _Block_release(v13);
}

uint64_t sub_1D2FD4840()
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1D3001918();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  uint64_t v1 = sub_1D30018F8();
  os_log_type_t v2 = sub_1D30020A8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D2F05000, v1, v2, "The outgoing SELF logging queue is now empty/completed", v3, 2u);
    MEMORY[0x1D942F2D0](v3, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAA8);
  return sub_1D3001EE8();
}

id SiriUserFeedbackLearningPluginBase.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriUserFeedbackLearningPluginBase();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2FD49EC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & **v2) + 0x78);
  id v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_1D2F1D1A0;
  return v9(a1, a2);
}

uint64_t sub_1D2FD4B10()
{
  return type metadata accessor for SiriUserFeedbackLearningPluginBase();
}

uint64_t sub_1D2FD4B18()
{
  uint64_t result = sub_1D3001988();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SiriUserFeedbackLearningPluginBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriUserFeedbackLearningPluginBase);
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginBase.__allocating_init(usageLogger:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginBase.perform(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SiriUserFeedbackLearningPluginBase.run(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x78);
  id v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_1D2F1C2F4;
  return v9(a1, a2);
}

uint64_t sub_1D2FD4D48()
{
  return MEMORY[0x1F4188298](sub_1D2FD4D64, 0, 0);
}

uint64_t sub_1D2FD4D64()
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D3001918();
  *(void *)(v0 + 16) = __swift_project_value_buffer(v1, (uint64_t)qword_1EBD65778);
  objc_super v2 = sub_1D30018F8();
  os_log_type_t v3 = sub_1D30020A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1D2F05000, v2, v3, "Waiting for all-clear from bookmarks write queue...", v4, 2u);
    MEMORY[0x1D942F2D0](v4, -1, -1);
  }

  if (qword_1EBD62BD8 != -1) {
    swift_once();
  }
  uint64_t v5 = *((void *)off_1EBD62BC8 + 15);
  uint64_t v6 = *((void *)off_1EBD62BC8 + 16);
  __swift_project_boxed_opaque_existential_1((void *)off_1EBD62BC8 + 12, v5);
  id v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 40) + **(int **)(v6 + 40));
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v7;
  *os_log_type_t v7 = v0;
  v7[1] = sub_1D2FD4F54;
  return v9(v5, v6);
}

uint64_t sub_1D2FD4F54()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2FD5050, 0, 0);
}

uint64_t sub_1D2FD5050()
{
  uint64_t v1 = sub_1D30018F8();
  os_log_type_t v2 = sub_1D30020A8();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl(&dword_1D2F05000, v1, v2, "The bookmarks write queue is now empty/completed", v3, 2u);
    MEMORY[0x1D942F2D0](v3, -1, -1);
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1D2FD5120()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2FD51B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAA8);
  return sub_1D2FD4840();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_1D2FD5230()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD52B8()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD539C()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD5424()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD54AC()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD5534()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD55DC()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2FD56AC()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD5730()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD5780()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD5860()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD58E4()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD5968()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD59EC()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FD5A90(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

SiriPrivateLearningAnalytics::PluginEventsSchedulerStatus_optional __swiftcall PluginEventsSchedulerStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D3002638();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PluginEventsSchedulerStatus.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x646570706F7473;
  }
}

uint64_t sub_1D2FD5B90()
{
  return sub_1D2FD5534();
}

uint64_t sub_1D2FD5B98()
{
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2FD5C2C()
{
  return sub_1D2FD59EC();
}

SiriPrivateLearningAnalytics::PluginEventsSchedulerStatus_optional sub_1D2FD5C34(Swift::String *a1)
{
  return PluginEventsSchedulerStatus.init(rawValue:)(*a1);
}

void sub_1D2FD5C40(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x80000001D300DBC0;
  unint64_t v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000015;
    unint64_t v4 = 0x80000001D300DBE0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x646570706F7473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D2FD5CA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D2FBC2CC(*a1, *a2);
}

uint64_t PluginEventsScheduler.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  PluginEventsScheduler.init()();
  return v0;
}

uint64_t PluginEventsScheduler.init()()
{
  uint64_t v1 = v0;
  uint64_t v33 = sub_1D3002158();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3002138();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1D3001A08();
  MEMORY[0x1F4188790](v6 - 8);
  *(unsigned char *)(v0 + 16) = 0;
  sub_1D2F0BCB8(0, qword_1EBD635E0);
  sub_1D30019F8();
  *(void *)&long long v37 = MEMORY[0x1E4FBC860];
  sub_1D2FD8B9C(&qword_1EBD635D8, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635C0);
  sub_1D2F6BA5C((unint64_t *)&unk_1EBD635C8, &qword_1EBD635C0);
  sub_1D30023A8();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v33);
  *(void *)(v0 + 24) = sub_1D3002178();
  *(void *)(v0 + 56) = &type metadata for EnvironmentFeatureFlags;
  *(void *)(v0 + 64) = &protocol witness table for EnvironmentFeatureFlags;
  uint64_t v7 = type metadata accessor for TrialStatusResolver();
  id v8 = (_OWORD *)swift_allocObject();
  v8[8] = 0u;
  v8[9] = 0u;
  *(_OWORD *)((char *)v8 + 154) = 0u;
  id v9 = self;
  id v10 = objc_msgSend(v9, sel_clientWithIdentifier_, 112);
  uint64_t v11 = sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD639E8);
  uint64_t v35 = v11;
  uint64_t v36 = &off_1F2A1C598;
  v34[0] = v10;
  sub_1D2F37950((uint64_t)v34, (uint64_t)&v38);
  *(void *)&long long v37 = 0xD000000000000027;
  *((void *)&v37 + 1) = 0x80000001D3013540;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *((void *)&v40 + 1) = sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  sub_1D2FE8BB4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  long long v13 = v42;
  v8[5] = v41;
  v8[6] = v13;
  v8[7] = v43;
  long long v14 = v38;
  v8[1] = v37;
  _OWORD v8[2] = v14;
  long long v15 = v40;
  v8[3] = v39;
  v8[4] = v15;
  *(void *)(v0 + 96) = v7;
  *(void *)(v0 + 104) = &protocol witness table for TrialStatusResolver;
  *(void *)(v0 + 72) = v8;
  uint64_t v16 = type metadata accessor for TrialPrivateLearningSuggestionsStatusResolver();
  long long v17 = (_OWORD *)swift_allocObject();
  v17[8] = 0u;
  v17[9] = 0u;
  *(_OWORD *)((char *)v17 + 153) = 0u;
  id v18 = objc_msgSend(v9, sel_clientWithIdentifier_, 276);
  uint64_t v35 = v11;
  uint64_t v36 = &off_1F2A1C598;
  v34[0] = v18;
  sub_1D2F37950((uint64_t)v34, (uint64_t)&v38);
  *(void *)&long long v37 = 0xD00000000000002ALL;
  *((void *)&v37 + 1) = 0x80000001D3013570;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  *((void *)&v40 + 1) = sub_1D2F1FA2C(v12);
  sub_1D2FE8BB4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  long long v19 = v42;
  v17[5] = v41;
  v17[6] = v19;
  v17[7] = v43;
  long long v20 = v38;
  v17[1] = v37;
  id v17[2] = v20;
  long long v21 = v40;
  v17[3] = v39;
  unsigned char v17[4] = v21;
  *(void *)(v0 + 136) = v16;
  *(void *)(v0 + 144) = &protocol witness table for TrialPrivateLearningSuggestionsStatusResolver;
  *(void *)(v0 + 112) = v17;
  if (qword_1EBD616C8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1D3000F18();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EBD65730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginPath, v23, v22);
  uint64_t v24 = (void *)sub_1D2F6A774();
  type metadata accessor for PluginScheduler();
  swift_allocObject();
  uint64_t v25 = sub_1D2F6A4D0(v24);

  *(void *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginScheduler) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FD80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1D3004370;
  uint64_t v27 = type metadata accessor for BiomeFilterUserCallAfterHangupSiriCall();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1D300B870;
  *(void *)(v28 + 32) = 0;
  *(unsigned char *)(v28 + 40) = 1;
  *(void *)(v28 + 48) = 0;
  *(unsigned char *)(v28 + 56) = 1;
  *(void *)(v26 + 56) = v27;
  *(void *)(v26 + 64) = &off_1F2A195A8;
  *(void *)(v26 + 32) = v28;
  uint64_t v29 = sub_1D2F80CBC(v26);
  uint64_t v30 = (uint64_t *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor);
  v30[3] = type metadata accessor for BiomeSiriEventScenarioProcessor();
  v30[4] = (uint64_t)&off_1F2A19590;
  *uint64_t v30 = v29;
  *(void *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginRunDelay) = 0x4024000000000000;
  return v1;
}

void sub_1D2FD62C8()
{
}

void sub_1D2FD62D8(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D30019A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D3001A08();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginScheduler)+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration), *(void *)(*(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginScheduler)+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics15PluginScheduler_deviceConfiguration+ 24));
  if ((sub_1D2FD89CC() & 1) != 0 || !AFDeviceSupportsSiriUOD())
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D3001918();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBD65778);
    id v18 = sub_1D30018F8();
    os_log_type_t v19 = sub_1D30020A8();
    if (os_log_type_enabled(v18, v19))
    {
      long long v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v20 = 0;
      _os_log_impl(&dword_1D2F05000, v18, v19, "PluginEventsScheduler is skipping starting events and trial subscriptions, incompatible device configuration", v20, 2u);
      MEMORY[0x1D942F2D0](v20, -1, -1);
    }

    if (a1) {
      a1(MEMORY[0x1E4FBC860]);
    }
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    void v21[2] = *(void *)(v3 + 24);
    long long v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = a1;
    v21[1] = v14;
    v15[4] = a2;
    aBlock[4] = sub_1D2FD9060;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D2FD5A90;
    aBlock[3] = &block_descriptor_38;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    sub_1D2FD9000((uint64_t)a1);
    sub_1D30019D8();
    v21[3] = MEMORY[0x1E4FBC860];
    sub_1D2FD8B9C(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
    sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
    sub_1D30023A8();
    MEMORY[0x1D942E090](0, v13, v9, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
    swift_release();
  }
}

void sub_1D2FD66D8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1D3001918();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBD65778);
  uint64_t v7 = sub_1D30018F8();
  os_log_type_t v8 = sub_1D30020A8();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_1D2F05000, v7, v8, "PluginEventsScheduler is starting events and trial subscriptions", v9, 2u);
    MEMORY[0x1D942F2D0](v9, -1, -1);
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    if (*(unsigned char *)(Strong + 16))
    {
      char v12 = sub_1D3002778();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        long long v13 = sub_1D30018F8();
        os_log_type_t v14 = sub_1D30020B8();
        if (os_log_type_enabled(v13, v14))
        {
          long long v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v15 = 0;
          _os_log_impl(&dword_1D2F05000, v13, v14, "PluginEventsScheduler cannot start event / status subscriptions - the scheduler is already subscribed", v15, 2u);
          MEMORY[0x1D942F2D0](v15, -1, -1);
          swift_release();
        }
        else
        {

          swift_release();
        }
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    os_log_type_t v19 = (void *)swift_allocObject();
    v19[2] = a1;
    v19[3] = a2;
    v19[4] = a3;
    uint64_t v20 = *(void *)(v11 + 96);
    uint64_t v21 = *(void *)(v11 + 104);
    __swift_project_boxed_opaque_existential_1((void *)(v11 + 72), v20);
    uint64_t v22 = *(void *)(v21 + 16);
    uint64_t v23 = a3;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    swift_retain();
    sub_1D2FD9000((uint64_t)a2);
    v24(v20, v22);
    uint64_t v26 = *(void *)(v11 + 136);
    uint64_t v25 = *(void *)(v11 + 144);
    __swift_project_boxed_opaque_existential_1((void *)(v11 + 112), v26);
    (*(void (**)(uint64_t))(*(void *)(v25 + 8) + 8))(v26);
    sub_1D2FD7018(a2, v23);
    uint64_t v27 = *(void *)(v11 + 104);
    __swift_project_boxed_opaque_existential_1((void *)(v11 + 72), *(void *)(v11 + 96));
    uint64_t v28 = *(void (**)(void))(*(void *)(v27 + 16) + 16);
    id v29 = *(id *)(v11 + 24);
    v28();

    uint64_t v30 = *(void *)(v11 + 144);
    __swift_project_boxed_opaque_existential_1((void *)(v11 + 112), *(void *)(v11 + 136));
    uint64_t v31 = *(void (**)(void))(*(void *)(v30 + 8) + 16);
    id v32 = *(id *)(v11 + 24);
    v31();
    swift_release();
    swift_release();

    return;
  }
  uint64_t v16 = sub_1D30018F8();
  os_log_type_t v17 = sub_1D30020B8();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    _os_log_impl(&dword_1D2F05000, v16, v17, "PluginEventsScheduler cannot start event / status subscriptions - the scheduler was deallocated", v18, 2u);
    MEMORY[0x1D942F2D0](v18, -1, -1);
  }
}

void sub_1D2FD6AE4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
  sub_1D2FD90D4(a1, (uint64_t)v40);
  os_log_type_t v8 = sub_1D30018F8();
  os_log_type_t v9 = sub_1D3002098();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v37 = a1;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v39[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = a4;
    long long v13 = a3;
    uint64_t v14 = v41;
    unint64_t v15 = v42;
    swift_bridgeObjectRetain();
    uint64_t v16 = v14;
    a4 = v12;
    uint64_t v38 = sub_1D2F09508(v16, v15, v39);
    sub_1D3002318();
    a3 = v13;
    swift_bridgeObjectRelease();
    sub_1D2FD9130((uint64_t)v40);
    _os_log_impl(&dword_1D2F05000, v8, v9, "PluginEventsScheduler received a Trial experiment update for namespace %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v11, -1, -1);
    os_log_type_t v17 = v10;
    a1 = v37;
    MEMORY[0x1D942F2D0](v17, -1, -1);
  }
  else
  {
    sub_1D2FD9130((uint64_t)v40);
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    os_log_type_t v19 = (void *)Strong;
    if (*(unsigned char *)(Strong + 16))
    {
      char v20 = sub_1D3002778();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        uint64_t v21 = v19[12];
        uint64_t v22 = v19[13];
        __swift_project_boxed_opaque_existential_1(v19 + 9, v21);
        (*(void (**)(uint64_t))(*(void *)(v22 + 16) + 8))(v21);
        uint64_t v23 = v19[17];
        uint64_t v24 = v19[18];
        __swift_project_boxed_opaque_existential_1(v19 + 14, v23);
        (*(void (**)(uint64_t))(*(void *)(v24 + 8) + 8))(v23);
        sub_1D2FD7018(a3, a4);
LABEL_17:
        swift_release();
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1D2FD90D4(a1, (uint64_t)v40);
    uint64_t v31 = sub_1D30018F8();
    os_log_type_t v32 = sub_1D30020A8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v38 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v35 = v41;
      unint64_t v36 = v42;
      swift_bridgeObjectRetain();
      sub_1D2F09508(v35, v36, &v38);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      sub_1D2FD9130((uint64_t)v40);
      _os_log_impl(&dword_1D2F05000, v31, v32, "PluginEventsScheduler is ignoring a Trial experiment update for namespace %s after halting", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v34, -1, -1);
      MEMORY[0x1D942F2D0](v33, -1, -1);
    }
    else
    {
      sub_1D2FD9130((uint64_t)v40);
    }

    goto LABEL_17;
  }
  sub_1D2FD90D4(a1, (uint64_t)v40);
  uint64_t v25 = sub_1D30018F8();
  os_log_type_t v26 = sub_1D30020B8();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v38 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v29 = v41;
    unint64_t v30 = v42;
    swift_bridgeObjectRetain();
    sub_1D2F09508(v29, v30, &v38);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2FD9130((uint64_t)v40);
    _os_log_impl(&dword_1D2F05000, v25, v26, "PluginEventsScheduler received a Trial experiment update after deallocation for namespace %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v28, -1, -1);
    MEMORY[0x1D942F2D0](v27, -1, -1);
  }
  else
  {
    sub_1D2FD9130((uint64_t)v40);
  }
}

void sub_1D2FD7018(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
  os_log_type_t v8 = sub_1D30018F8();
  os_log_type_t v9 = sub_1D30020A8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1D2F05000, v8, v9, "PluginEventsScheduler received a subscribe request", v10, 2u);
    MEMORY[0x1D942F2D0](v10, -1, -1);
  }

  uint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  __swift_project_boxed_opaque_existential_1(v3 + 4, v11);
  v35[3] = (uint64_t)&type metadata for SiriPrivateLearningFeatureFlag;
  v35[4] = sub_1D2F1DF00();
  LOBYTE(v35[0]) = 0;
  char v13 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v12 + 8))(v35, v11, v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  if ((v13 & 1) != 0
    || (uint64_t v14 = v3[17],
        uint64_t v15 = v3[18],
        __swift_project_boxed_opaque_existential_1(v3 + 14, v14),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15) & 1) != 0))
  {
    if (*((unsigned char *)v3 + 16))
    {
      if (*((unsigned char *)v3 + 16) == 1)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v21 = sub_1D30018F8();
        os_log_type_t v22 = sub_1D30020A8();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_1D2F05000, v21, v22, "Skipping PluginEventsScheduler subscription - the scheduler is already subscribed", v23, 2u);
          MEMORY[0x1D942F2D0](v23, -1, -1);
        }

        return;
      }
      uint64_t v34 = a2;
      uint64_t v19 = v6;
    }
    else
    {
      uint64_t v34 = a2;
      uint64_t v19 = v6;
    }
    char v20 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_17;
    }
    swift_retain_n();
    uint64_t v24 = sub_1D30018F8();
    os_log_type_t v25 = sub_1D30020A8();
    if (os_log_type_enabled(v24, v25))
    {
      os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v35[0] = v27;
      *(_DWORD *)os_log_type_t v26 = 136315138;
      unint64_t v28 = 0x80000001D300DBC0;
      unint64_t v29 = 0xD000000000000015;
      if (*((unsigned char *)v3 + 16) == 1) {
        unint64_t v29 = 0xD000000000000012;
      }
      else {
        unint64_t v28 = 0x80000001D300DBE0;
      }
      if (*((unsigned char *)v3 + 16)) {
        uint64_t v30 = v29;
      }
      else {
        uint64_t v30 = 0x646570706F7473;
      }
      if (*((unsigned char *)v3 + 16)) {
        unint64_t v31 = v28;
      }
      else {
        unint64_t v31 = 0xE700000000000000;
      }
      sub_1D2F09508(v30, v31, v35);
      sub_1D3002318();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v24, v25, "PluginEventsScheduler subscription started; previous state was %s",
        v26,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v27, -1, -1);
      MEMORY[0x1D942F2D0](v26, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *((unsigned char *)v3 + 16) = 1;
    __swift_project_boxed_opaque_existential_1((void *)((char *)v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor), *(void *)((char *)v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor+ 24));
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = v32;
    v33[3] = a1;
    v33[4] = v34;
    v33[5] = v19;
    swift_retain();
    sub_1D2FD9000((uint64_t)a1);
    sub_1D2F7C170((uint64_t)sub_1D2FD8FF4, (uint64_t)v33);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v16 = sub_1D30018F8();
    os_log_type_t v17 = sub_1D30020A8();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_1D2F05000, v16, v17, "Skipping PluginEventsScheduler subscription - the feature flags are disabled", v18, 2u);
      MEMORY[0x1D942F2D0](v18, -1, -1);
    }

    LOBYTE(v35[0]) = 2;
    sub_1D2FD7CDC((char *)v35);
    if (a1) {
      a1(MEMORY[0x1E4FBC860]);
    }
  }
}

void sub_1D2FD759C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v48 = Strong;
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = 0;
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v13 = a1 + 8 * v9;
        uint64_t v14 = *(void *)(v13 + 32);
        if (v14)
        {
          sub_1D2F80B58(*(id *)(v13 + 32));
          uint64_t v49 = v10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D2F0A13C(0, v10[2] + 1, 1);
            uint64_t v10 = v49;
          }
          unint64_t v12 = v10[2];
          unint64_t v11 = v10[3];
          if (v12 >= v11 >> 1)
          {
            sub_1D2F0A13C(v11 > 1, v12 + 1, 1);
            uint64_t v10 = v49;
          }
          id v10[2] = v12 + 1;
          v10[v12 + 4] = v14;
        }
        ++v9;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v15 = v10[2];
      if (v15)
      {
LABEL_12:
        if (qword_1EBD63A48 != -1) {
          goto LABEL_48;
        }
        while (1)
        {
          uint64_t v16 = sub_1D3001918();
          __swift_project_value_buffer(v16, (uint64_t)qword_1EBD65778);
          swift_retain_n();
          os_log_type_t v17 = sub_1D30018F8();
          os_log_type_t v18 = sub_1D30020A8();
          if (os_log_type_enabled(v17, v18))
          {
            uint64_t v19 = (uint8_t *)swift_slowAlloc();
            uint64_t v47 = a3;
            uint64_t v20 = swift_slowAlloc();
            uint64_t v49 = (void *)v20;
            *(_DWORD *)uint64_t v19 = 136315138;
            uint64_t v21 = swift_retain();
            uint64_t v22 = MEMORY[0x1D942DD00](v21, &type metadata for BiomeSiriEventScenario);
            unint64_t v24 = v23;
            swift_release();
            sub_1D2F09508(v22, v24, (uint64_t *)&v49);
            sub_1D3002318();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D2F05000, v17, v18, "PluginEventsScheduler is preparing to run plugins, discovered Biome scenarios=%s", v19, 0xCu);
            swift_arrayDestroy();
            uint64_t v25 = v20;
            a3 = v47;
            MEMORY[0x1D942F2D0](v25, -1, -1);
            MEMORY[0x1D942F2D0](v19, -1, -1);
          }
          else
          {

            swift_release_n();
          }
          if (!v10[2])
          {
            __break(1u);
            return;
          }
          uint64_t v30 = v10[4];
          if ((unint64_t)(v30 - 1) < 2)
          {
            char v31 = 1;
          }
          else if ((unint64_t)(v30 - 3) >= 2)
          {
            if (!v30)
            {
              swift_retain();
              uint64_t v32 = sub_1D30018F8();
              os_log_type_t v33 = sub_1D30020B8();
              if (os_log_type_enabled(v32, v33))
              {
                uint64_t v34 = (uint8_t *)swift_slowAlloc();
                uint64_t v35 = swift_slowAlloc();
                uint64_t v49 = (void *)v35;
                *(_DWORD *)uint64_t v34 = 136315138;
                unint64_t v36 = (void *)v10[4];
                sub_1D2F80B58(v36);
                uint64_t v37 = a3;
                uint64_t v38 = sub_1D2F7BA8C();
                unint64_t v40 = v39;
                sub_1D2F80B68(v36);
                uint64_t v41 = v38;
                a3 = v37;
                sub_1D2F09508(v41, v40, (uint64_t *)&v49);
                sub_1D3002318();
                swift_release_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1D2F05000, v32, v33, "PluginEventsScheduler cannot convert a Biome scenario (%s) to a plugin run scenario", v34, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1D942F2D0](v35, -1, -1);
                MEMORY[0x1D942F2D0](v34, -1, -1);

                if (v37) {
                  goto LABEL_23;
                }
              }
              else
              {

                swift_release_n();
                if (a3) {
                  goto LABEL_23;
                }
              }
              goto LABEL_43;
            }
            char v31 = 0;
          }
          else
          {
            char v31 = 2;
          }
          uint64_t v42 = 0;
          while (1)
          {
            uint64_t v43 = v42 + 1;
            if (__OFADD__(v42, 1)) {
              break;
            }
            if ((unint64_t)(v10[v42 + 4] - 1) < 4)
            {
              double v44 = 10.0;
              goto LABEL_42;
            }
            ++v42;
            if (v43 == v15)
            {
              double v44 = 0.0;
LABEL_42:
              swift_release();
              uint64_t v45 = v48 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginPath;
              uint64_t v46 = swift_allocObject();
              *(void *)(v46 + 16) = a3;
              *(void *)(v46 + 24) = a4;
              LOBYTE(v49) = v31;
              sub_1D2FD9000((uint64_t)a3);
              sub_1D2F62E3C(&v49, v45, (uint64_t)sub_1D2FD9050, v46, v44);
              swift_release();
              goto LABEL_43;
            }
          }
          __break(1u);
LABEL_48:
          swift_once();
        }
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v15) {
        goto LABEL_12;
      }
    }
    swift_release();
    if (a3) {
LABEL_23:
    }
      a3(MEMORY[0x1E4FBC860]);
LABEL_43:
    swift_release();
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1D3001918();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EBD65778);
    uint64_t v27 = sub_1D30018F8();
    os_log_type_t v28 = sub_1D30020B8();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v29 = 0;
      _os_log_impl(&dword_1D2F05000, v27, v28, "PluginEventsScheduler was deallocated while subscribed", v29, 2u);
      MEMORY[0x1D942F2D0](v29, -1, -1);
    }

    if (a3) {
      a3(MEMORY[0x1E4FBC860]);
    }
  }
}

void sub_1D2FD7BDC(uint64_t a1, void (*a2)(uint64_t))
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D3001918();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
  uint64_t v5 = sub_1D30018F8();
  os_log_type_t v6 = sub_1D30020A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D2F05000, v5, v6, "PluginEventsScheduler finished running plugins", v7, 2u);
    MEMORY[0x1D942F2D0](v7, -1, -1);
  }

  if (a2) {
    a2(a1);
  }
}

uint64_t sub_1D2FD7CDC(char *a1)
{
  uint64_t v2 = v1;
  char v3 = *a1;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1D3001918();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBD65778);
  swift_retain_n();
  uint64_t v5 = sub_1D30018F8();
  os_log_type_t v6 = sub_1D30020A8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    unint64_t v9 = 0x80000001D300DBC0;
    unint64_t v10 = 0xD000000000000015;
    if (*(unsigned char *)(v2 + 16) == 1) {
      unint64_t v10 = 0xD000000000000012;
    }
    else {
      unint64_t v9 = 0x80000001D300DBE0;
    }
    if (*(unsigned char *)(v2 + 16)) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0x646570706F7473;
    }
    if (*(unsigned char *)(v2 + 16)) {
      unint64_t v12 = v9;
    }
    else {
      unint64_t v12 = 0xE700000000000000;
    }
    sub_1D2F09508(v11, v12, &v16);
    sub_1D3002318();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v5, v6, "PluginEventsScheduler unsubscribing from Biome streams; previous state was %s",
      v7,
      0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v8, -1, -1);
    MEMORY[0x1D942F2D0](v7, -1, -1);

    int v13 = *(unsigned __int8 *)(v2 + 16);
    if (!*(unsigned char *)(v2 + 16)) {
      goto LABEL_17;
    }
  }
  else
  {

    swift_release_n();
    int v13 = *(unsigned __int8 *)(v2 + 16);
    if (!*(unsigned char *)(v2 + 16)) {
      goto LABEL_17;
    }
  }
  if (v13 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor), *(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor + 24));
    uint64_t result = sub_1D2F7D1AC();
    goto LABEL_19;
  }
LABEL_17:
  char v14 = sub_1D3002778();
  uint64_t result = swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_18;
  }
LABEL_19:
  *(unsigned char *)(v2 + 16) = v3;
  return result;
}

uint64_t sub_1D2FD7F7C()
{
  uint64_t v1 = sub_1D30019A8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D3001A08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 24);
  aBlock[4] = sub_1D2FD8B7C;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_12;
  unint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1D30019D8();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1D2FD8B9C(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_1D2FD820C(void *a1)
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "PluginEventsScheduler received an unsubscribe request", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  uint64_t v7 = a1[12];
  uint64_t v6 = a1[13];
  __swift_project_boxed_opaque_existential_1(a1 + 9, v7);
  (*(void (**)(uint64_t))(*(void *)(v6 + 16) + 24))(v7);
  uint64_t v9 = a1[17];
  uint64_t v8 = a1[18];
  __swift_project_boxed_opaque_existential_1(a1 + 14, v9);
  (*(void (**)(uint64_t))(*(void *)(v8 + 8) + 24))(v9);
  char v11 = 0;
  return sub_1D2FD7CDC(&v11);
}

void *PluginEventsScheduler.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D30019A8();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  os_log_type_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1D3001A08();
  uint64_t v5 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_siriEventProcessor;
  uint64_t v9 = v0 + 9;
  uint64_t v11 = v0[12];
  uint64_t v10 = v0[13];
  uint64_t v27 = v9;
  __swift_project_boxed_opaque_existential_1(v9, v11);
  (*(void (**)(uint64_t))(*(void *)(v10 + 16) + 24))(v11);
  uint64_t v13 = v1[17];
  uint64_t v12 = v1[18];
  uint64_t v26 = v1 + 14;
  __swift_project_boxed_opaque_existential_1(v1 + 14, v13);
  (*(void (**)(uint64_t))(*(void *)(v12 + 8) + 24))(v13);
  uint64_t v28 = v8;
  sub_1D2F37950(v8, (uint64_t)v31);
  uint64_t v14 = swift_allocObject();
  sub_1D2F0BE68(v31, v14 + 16);
  aBlock[4] = sub_1D2FD8C1C;
  void aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_3;
  uint64_t v15 = _Block_copy(aBlock);
  sub_1D30019D8();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1D2FD8B9C(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  MEMORY[0x1D942E090](0, v7, v4, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  swift_release();
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1D3001918();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EBD65778);
  os_log_type_t v17 = sub_1D30018F8();
  os_log_type_t v18 = sub_1D30020A8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_1D2F05000, v17, v18, "PluginEventsScheduler will be deallocated", v19, 2u);
    MEMORY[0x1D942F2D0](v19, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v1 + 4));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  uint64_t v20 = (uint64_t)v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics21PluginEventsScheduler_pluginPath;
  uint64_t v21 = sub_1D3000F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v28);
  return v1;
}

uint64_t PluginEventsScheduler.__deallocating_deinit()
{
  PluginEventsScheduler.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FD8820()
{
  uint64_t v1 = v0;
  if (objc_msgSend(self, sel_sharedMGWrapper))
  {
    sub_1D3002398();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1D2F776E4((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    sub_1D2F0BCB8(0, (unint64_t *)&unk_1EBD63588);
    if (swift_dynamicCast())
    {
      unsigned __int8 v2 = objc_msgSend(v8, sel_isDeviceIPad);

      *(unsigned char *)(v0 + 16) = v2;
      return v1;
    }
  }
  else
  {
    sub_1D2F0BEDC((uint64_t)v10);
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1D3001918();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBD65778);
  os_log_type_t v4 = sub_1D30018F8();
  os_log_type_t v5 = sub_1D30020B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1D2F05000, v4, v5, "DeviceConfiguration cannot initialise MobileGestalt instance", v6, 2u);
    MEMORY[0x1D942F2D0](v6, -1, -1);
  }

  *(unsigned char *)(v1 + 16) = 0;
  return v1;
}

id sub_1D2FD89CC()
{
  uint64_t v1 = v0;
  id result = objc_msgSend(self, sel_sharedManager);
  if (result)
  {
    uint64_t v3 = result;
    unsigned __int8 v4 = objc_msgSend(result, sel_isSharedIPad);

    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D3001918();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBD65778);
    swift_retain();
    uint64_t v6 = sub_1D30018F8();
    os_log_type_t v7 = sub_1D30020A8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 67109376;
      sub_1D3002318();
      swift_release();
      *(_WORD *)(v8 + 8) = 1024;
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v6, v7, "DeviceConfiguration fetched device parameters: isIPad=%{BOOL}d, isSharedIPad=%{BOOL}d", (uint8_t *)v8, 0xEu);
      MEMORY[0x1D942F2D0](v8, -1, -1);
    }
    else
    {

      swift_release();
    }
    return (id)(*(unsigned char *)(v1 + 16) & v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2FD8B6C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FD8B7C()
{
  return sub_1D2FD820C(v0);
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1D2FD8B9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2FD8BE4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D2FD8C1C()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1D2F7D1AC();
}

unint64_t sub_1D2FD8C50()
{
  unint64_t result = qword_1EA699E48;
  if (!qword_1EA699E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699E48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PluginEventsSchedulerStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FD8D70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginEventsSchedulerStatus()
{
  return &type metadata for PluginEventsSchedulerStatus;
}

uint64_t sub_1D2FD8DA8()
{
  return type metadata accessor for PluginEventsScheduler();
}

uint64_t type metadata accessor for PluginEventsScheduler()
{
  uint64_t result = qword_1EBD5D8A0;
  if (!qword_1EBD5D8A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D2FD8DFC()
{
  uint64_t result = sub_1D3000F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PluginEventsScheduler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PluginEventsScheduler);
}

uint64_t dispatch thunk of PluginEventsScheduler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of PluginEventsScheduler.subscribeToEvents()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PluginEventsScheduler.subscribeToEvents(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PluginEventsScheduler.unsubscribe()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1D2FD8F68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D2FD8F7C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for DefaultDeviceConfiguration()
{
  return self;
}

uint64_t sub_1D2FD8FB4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FD8FEC()
{
  return objectdestroy_27Tm(48);
}

void sub_1D2FD8FF4(uint64_t a1)
{
  sub_1D2FD759C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D2FD9000(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1D2FD9010()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D2FD9050(uint64_t a1)
{
  sub_1D2FD7BDC(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1D2FD9058()
{
  return objectdestroy_27Tm(40);
}

void sub_1D2FD9060()
{
  sub_1D2FD66D8(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1D2FD906C()
{
  return objectdestroy_27Tm(40);
}

uint64_t objectdestroy_27Tm(uint64_t a1)
{
  swift_release();
  if (*(void *)(v1 + 24)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v1, a1, 7);
}

void sub_1D2FD90C8(uint64_t a1)
{
  sub_1D2FD6AE4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1D2FD90D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D2FD9130(uint64_t a1)
{
  return a1;
}

id sub_1D2FD9194()
{
  id v1 = objc_msgSend(v0, sel_reference);
  return v1;
}

uint64_t sub_1D2FD91CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D2FD91E8()
{
  return _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
}

NSObject __swiftcall Int.toNSObject()()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone(NSNumber);
  return (NSObject)objc_msgSend(v2, sel_initWithInteger_, v1);
}

id sub_1D2FD9238()
{
  uint64_t v1 = *v0;
  id v2 = objc_allocWithZone(NSNumber);
  return objc_msgSend(v2, sel_initWithInteger_, v1);
}

NSObject __swiftcall Double.toNSObject()()
{
  double v1 = v0;
  id v2 = objc_allocWithZone(NSNumber);
  return (NSObject)objc_msgSend(v2, sel_initWithDouble_, v1);
}

id sub_1D2FD92C8()
{
  double v1 = *v0;
  id v2 = objc_allocWithZone(NSNumber);
  return objc_msgSend(v2, sel_initWithDouble_, v1);
}

NSObject __swiftcall Bool.toNSObject()()
{
  uint64_t v1 = v0 & 1;
  id v2 = objc_allocWithZone(NSNumber);
  return (NSObject)objc_msgSend(v2, sel_initWithInteger_, v1);
}

id sub_1D2FD9358()
{
  uint64_t v1 = *v0;
  id v2 = objc_allocWithZone(NSNumber);
  return objc_msgSend(v2, sel_initWithInteger_, v1);
}

uint64_t dispatch thunk of CoreAnalyticsLoggable.toNSObject()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1D2FD93B4(uint64_t (**a1)()@<X8>)
{
  uint64_t v3 = sub_1D2FD9630();
  if (!v1)
  {
    unsigned int v4 = (void *)v3;
    sub_1D3000F98();
    id v5 = objc_msgSend(v4, sel_publisherFromStartTime_);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBD602F0);
    uint64_t v8 = (void *)nullsub_1(v5);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699E58);
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1D2FC6A98(v6, WitnessTable, a1);
  }
}

uint64_t static DefaultBiomeReader.shared.getter()
{
  type metadata accessor for DefaultBiomeReader();
  return swift_initStaticObject();
}

unint64_t *sub_1D2FD94C4(uint64_t a1, uint64_t a2)
{
  return sub_1D2FD9DA0(a1, a2);
}

uint64_t sub_1D2FD94DC(void *a1, uint64_t a2)
{
  swift_beginAccess();
  id v4 = a1;
  MEMORY[0x1D942DCC0]();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1D3001E28();
  sub_1D3001E68();
  sub_1D3001DE8();
  return swift_endAccess();
}

uint64_t DefaultBiomeReader.deinit()
{
  return v0;
}

uint64_t DefaultBiomeReader.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1D2FD9590(uint64_t (**a1)()@<X8>)
{
}

id sub_1D2FD95A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  os_log_type_t v7 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  if (a4) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithPrivateStreamIdentifier_storeConfig_eventDataClass_, v7, a3, ObjCClassFromMetadata);

  return v9;
}

uint64_t sub_1D2FD9630()
{
  sub_1D2FDA06C();
  if (!swift_dynamicCastMetatype())
  {
    sub_1D3002438();
    swift_bridgeObjectRelease();
    unint64_t v17 = 0xD000000000000019;
    unint64_t v18 = 0x80000001D3013730;
    swift_getMetatypeMetadata();
    sub_1D3001BC8();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
LABEL_9:
    sub_1D2FD9F88();
    swift_allocError();
    unint64_t *v16 = v17;
    v16[1] = v18;
    return swift_willThrow();
  }
  id v0 = objc_msgSend((id)BiomeLibrary(), sel_Media);
  swift_unknownObjectRelease();
  id v1 = objc_msgSend(v0, sel_NowPlaying);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_configuration);

  if (!v2)
  {
    sub_1D3002438();
    swift_bridgeObjectRelease();
    unint64_t v17 = 0xD00000000000002CLL;
    unint64_t v18 = 0x80000001D3013750;
    swift_getMetatypeMetadata();
    sub_1D3001BC8();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  id v3 = v2;
  id v4 = objc_msgSend(v3, sel_storeConfig);
  if (objc_msgSend(self, sel_isTestPathOverridden))
  {
    id v5 = objc_msgSend(v4, sel_pruningPolicy);
    if (v5)
    {
      uint64_t v6 = v5;
      objc_msgSend(v5, sel_setFilterByAgeOnRead_, 0);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699E80);
  id v7 = objc_msgSend(v3, sel_streamIdentifier);
  uint64_t v8 = sub_1D3001B78();
  uint64_t v10 = v9;

  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v12 = v4;
  id v13 = objc_allocWithZone(ObjCClassFromMetadata);
  id v14 = sub_1D2FD95A8(v8, v10, v4, 0);

  return (uint64_t)v14;
}

uint64_t type metadata accessor for DefaultBiomeReader()
{
  return self;
}

unint64_t sub_1D2FD9944(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v28 = a1;
  uint64_t v3 = sub_1D3001018();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D3000D58();
  sub_1D3000F98();
  double v8 = v7;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v8);
  sub_1D3000D48();
  sub_1D3000F98();
  double v12 = v11;
  v9(v6, v3);
  id v13 = v28;
  id v14 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v12);
  id v15 = objc_msgSend(v13, sel_publisherWithStartTime_endTime_maxEvents_reversed_, v10, v14, 0, 0);

  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    unint64_t v17 = (void *)v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = MEMORY[0x1E4FBC860];
    os_log_type_t v33 = (uint64_t (*)(void *))nullsub_1;
    uint64_t v34 = 0;
    aBlocuint64_t k = MEMORY[0x1E4F143A8];
    unint64_t v30 = 1107296256;
    char v31 = sub_1D2F18864;
    uint64_t v32 = &block_descriptor_13;
    uint64_t v19 = _Block_copy(&aBlock);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v27;
    *(void *)(v20 + 24) = v18;
    os_log_type_t v33 = sub_1D2FDA064;
    uint64_t v34 = v20;
    aBlocuint64_t k = MEMORY[0x1E4F143A8];
    unint64_t v30 = 1107296256;
    char v31 = sub_1D2F18864;
    uint64_t v32 = &block_descriptor_11;
    uint64_t v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v22 = objc_msgSend(v17, sel_sinkWithCompletion_receiveInput_, v19, v21);
    swift_unknownObjectRelease();
    _Block_release(v21);
    _Block_release(v19);

    swift_beginAccess();
    unint64_t v23 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    aBlocuint64_t k = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_1D3002438();
    swift_bridgeObjectRelease();
    aBlocuint64_t k = 0xD00000000000002BLL;
    unint64_t v30 = 0x80000001D3013700;
    uint64_t v35 = v13;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699E68);
    sub_1D3001BC8();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    unint64_t v24 = aBlock;
    unint64_t v23 = v30;
    sub_1D2FD9F88();
    swift_allocError();
    *uint64_t v25 = v24;
    v25[1] = v23;
    swift_willThrow();
  }
  return v23;
}

unint64_t sub_1D2FD9D2C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = (void *)sub_1D2FD9630();
  if (!v3)
  {
    id v7 = v6;
    a3 = sub_1D2FD9944(v7, a1, a3);
  }
  return a3;
}

unint64_t *sub_1D2FD9DA0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      unint64_t v9 = sub_1D2FD9D2C(a1, *(void *)(a2 + 8 * v8 + 32), *(void *)(a2 + 8 * v8 + 32));
      if (v3) {
        break;
      }
      ++v8;
      id v2 = &v15;
      sub_1D2F9D5F0(v9);
      if (v5 == v8)
      {
        swift_bridgeObjectRelease();
        unint64_t v4 = v15;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699E60);
    id v2 = (unint64_t *)swift_allocObject();
    v2[6] = v4;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD61560);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = 0;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1D30025A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v12 = sub_1D2F7A0C4();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v11;
    v2[2] = v10;
    v2[3] = v12;
    v2[4] = v13;
    v2[5] = v12;
  }
  return v2;
}

uint64_t method lookup function for DefaultBiomeReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultBiomeReader);
}

uint64_t dispatch thunk of DefaultBiomeReader.readEventsAsync<A>(from:type:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of DefaultBiomeReader.readEvents(_:types:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

unint64_t sub_1D2FD9F88()
{
  unint64_t result = qword_1EA699E70;
  if (!qword_1EA699E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699E70);
  }
  return result;
}

uint64_t sub_1D2FD9FDC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1D2FDA02C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2FDA064(void *a1)
{
  return sub_1D2FD94DC(a1, *(void *)(v1 + 24));
}

unint64_t sub_1D2FDA06C()
{
  unint64_t result = qword_1EA699E78;
  if (!qword_1EA699E78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA699E78);
  }
  return result;
}

uint64_t sub_1D2FDA0B4(int a1, uint64_t a2, void *a3)
{
  id v7 = (uint64_t *)(v3 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v3 + 16);
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_1D2F0DD10(a1), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_retain();
  }
  else
  {
    unint64_t v12 = sub_1D2F1F404(MEMORY[0x1E4FBC860]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62BC0);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v12;
  }
  sub_1D2FDA5BC(a2, a3);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v7;
  *id v7 = 0x8000000000000000;
  sub_1D2FE59C0(v11, a1, isUniquelyReferenced_nonNull_native);
  *id v7 = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1D2FDA1E0(int a1, uint64_t a2)
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v2 + 16) + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1D2F0DD10(a1);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    swift_beginAccess();
    swift_retain();
    uint64_t v7 = sub_1D2FDAAB4(a2);
    swift_endAccess();
    swift_release();
    if (v7) {
      return v7;
    }
  }
  return v5;
}

uint64_t sub_1D2FDA2A4(int a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (!*(void *)(v5 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v6 = sub_1D2F0DD10(a1);
  if ((v7 & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v9 + 16);
  swift_retain();
  if (!v10)
  {
LABEL_7:
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1D2F0DD14(a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for ComponentEventTable()
{
  return self;
}

uint64_t sub_1D2FDA3AC(int a1, uint64_t a2)
{
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 16);
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1D2F0DD10(a1), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1D2F27C98(0, *(void *)(v13 + 16) + 1, 1, v13);
  }
  unint64_t v15 = *(void *)(v13 + 16);
  unint64_t v14 = *(void *)(v13 + 24);
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_1D2F27C98(v14 > 1, v15 + 1, 1, v13);
  }
  *(void *)(v13 + 16) = v15 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, v8, v5);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v9;
  *uint64_t v9 = 0x8000000000000000;
  sub_1D2FE529C(v13, a1, isUniquelyReferenced_nonNull_native);
  *uint64_t v9 = v19;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1D2FDA5BC(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 16);
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1D2F0DD14(a1);
    if (v12)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = v13;
  id v14 = a2;
  MEMORY[0x1D942DCC0]();
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D3001E28();
  }
  sub_1D3001E68();
  sub_1D3001DE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v15 = v19;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v9;
  *uint64_t v9 = 0x8000000000000000;
  sub_1D2FE5AF8(v15, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v9 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_endAccess();
}

uint64_t sub_1D2FDA7C4(uint64_t a1)
{
  return sub_1D2FDA9AC(a1, (void (*)(void))sub_1D2F12E00);
}

uint64_t sub_1D2FDA7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1D2F0DD14(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2F134B4();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1D30010A8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1D2F15C78(v12 + *(void *)(v20 + 72) * v6, a2);
    sub_1D2FDAEC8(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1D2FDA994(uint64_t a1)
{
  return sub_1D2FDA9AC(a1, (void (*)(void))sub_1D2F137CC);
}

uint64_t sub_1D2FDA9AC(uint64_t a1, void (*a2)(void))
{
  unint64_t v4 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1D2F0DD14(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v4;
  uint64_t v14 = *v4;
  *unint64_t v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    uint64_t v9 = v14;
  }
  uint64_t v10 = *(void *)(v9 + 48);
  uint64_t v11 = sub_1D30010A8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1D2FDB1B8(v6, v9);
  *unint64_t v4 = v9;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1D2FDAAB4(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1D2F0DD14(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D2F13A70();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1D2FDB1B8(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D2FDABAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1D2F0DD14(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2F13A7C();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1D30010A8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v20 = v12;
    unint64_t v13 = *(void *)(v12 + 72) * v6;
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10 + v13, v11);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, *(void *)(v9 + 56) + v13, v11);
    sub_1D2FDB474(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v11;
  }
  else
  {
    uint64_t v18 = sub_1D30010A8();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1D2FDAD74(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1D2F0DD14(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D2F14C6C();
    uint64_t v7 = v20;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = (unsigned __int8 *)(*(void *)(v7 + 56) + 16 * v4);
  uint64_t v11 = *v10;
  int v12 = v10[1];
  int v13 = v10[2];
  int v14 = v10[3];
  sub_1D2FDB744(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  uint64_t v15 = 256;
  if (!v12) {
    uint64_t v15 = 0;
  }
  uint64_t v16 = v15 | v11;
  uint64_t v17 = 0x10000;
  if (!v13) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = 0x1000000;
  if (!v14) {
    uint64_t v18 = 0;
  }
  return v16 | v17 | v18;
}

unint64_t sub_1D2FDAEC8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v41 = a2 + 64;
    unint64_t result = sub_1D30023B8();
    uint64_t v12 = v41;
    if ((*(void *)(v41 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v39 = (result + 1) & v11;
      int v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v38 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v38(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1D2FDBA00();
        uint64_t v18 = sub_1D3001AB8();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v39)
        {
          if (v19 < v39 || a1 < (uint64_t)v19) {
            goto LABEL_6;
          }
        }
        else if (v19 < v39 && a1 < (uint64_t)v19)
        {
          goto LABEL_6;
        }
        uint64_t v22 = *(void *)(a2 + 48);
        unint64_t v23 = v22 + v15 * a1;
        unint64_t v24 = v22 + v17 + v15;
        if (v15 * a1 < v17 || v23 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v15 * a1 != v17)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v26 = *(void *)(a2 + 56);
        uint64_t v27 = *(void *)(*(void *)(type metadata accessor for LogicalClockTable.DeviceFixedContextTime() - 8) + 72);
        int64_t v28 = v27 * a1;
        unint64_t result = v26 + v27 * a1;
        int64_t v29 = v27 * v10;
        unint64_t v30 = v26 + v27 * v10 + v27;
        if (v28 < v29 || result >= v30)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v28 == v29) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v12 = v41;
      }
      while (((*(void *)(v41 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v32 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v32 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  *uint64_t v32 = v34 & v33;
  uint64_t v35 = *(void *)(a2 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D2FDB1B8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    unint64_t result = sub_1D30023B8();
    uint64_t v12 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v35 = (result + 1) & v11;
      int v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v34 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v36 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v34(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1D2FDBA00();
        uint64_t v18 = sub_1D3001AB8();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (void *)(v25 + 8 * a1);
            uint64_t v27 = (void *)(v25 + 8 * v10);
            uint64_t v12 = v37;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 1))
            {
              *uint64_t v26 = *v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v37;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v28 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v28 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *int64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D2FDB474(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    unint64_t result = sub_1D30023B8();
    uint64_t v12 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v35 = (result + 1) & v11;
      int v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v34 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v36 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v34(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1D2FDBA00();
        uint64_t v18 = sub_1D3001AB8();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 < v35 || a1 < (uint64_t)v19) {
            goto LABEL_6;
          }
        }
        else if (v19 < v35 && a1 < (uint64_t)v19)
        {
          goto LABEL_6;
        }
        uint64_t v22 = *(void *)(a2 + 48);
        int64_t v23 = v15 * a1;
        unint64_t v24 = v22 + v15 * a1;
        unint64_t v25 = v22 + v17 + v15;
        if (v15 * a1 < v17 || v24 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v23 != v17)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v27 = *(void *)(a2 + 56);
        unint64_t result = v27 + v23;
        if (v23 < v17 || result >= v27 + v17 + v15)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v23 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v12 = v37;
      }
      while (((*(void *)(v37 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v28 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v28 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *int64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D2FDB744(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v37 = a2 + 64;
    unint64_t result = sub_1D30023B8();
    uint64_t v12 = v37;
    if ((*(void *)(v37 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v35 = (result + 1) & v11;
      int v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v34 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v36 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v34(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1D2FDBA00();
        uint64_t v18 = sub_1D3001AB8();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_17:
            uint64_t v22 = *(void *)(a2 + 48);
            unint64_t result = v22 + v15 * a1;
            unint64_t v23 = v22 + v17 + v15;
            if (v15 * a1 < v17 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v17)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v25 = *(void *)(a2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 16 * a1);
            uint64_t v27 = (_OWORD *)(v25 + 16 * v10);
            uint64_t v12 = v37;
            if (a1 != v10 || (a1 = v10, v26 >= v27 + 1))
            {
              *uint64_t v26 = *v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_17;
        }
        uint64_t v12 = v37;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v28 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v28 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << a1) - 1;
  }
  *int64_t v28 = v30 & v29;
  uint64_t v31 = *(void *)(a2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D2FDBA00()
{
  unint64_t result = qword_1EBD62A98;
  if (!qword_1EBD62A98)
  {
    sub_1D30010A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD62A98);
  }
  return result;
}

void *static PLUSSuggestionSurfacedState.allCases.getter()
{
  return &unk_1F2A15FC8;
}

void sub_1D2FDBA70(void *a1@<X8>)
{
  *a1 = &unk_1F2A15FF0;
}

uint64_t PLUSSuggestionNoveltyState.hash(into:)()
{
  return sub_1D3002938();
}

BOOL static PLUSSuggestionNoveltyState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static PLUSSuggestionNoveltyState.allCases.getter()
{
  return &unk_1F2A16018;
}

void sub_1D2FDBAD0(void *a1@<X8>)
{
  *a1 = &unk_1F2A16040;
}

uint64_t PLUSSuggestionRedundancyState.hash(into:)()
{
  return sub_1D3002938();
}

BOOL static PLUSSuggestionRedundancyState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *static PLUSSuggestionRedundancyState.allCases.getter()
{
  return &unk_1F2A16068;
}

uint64_t PLUSSuggestionRedundancyState.hashValue.getter()
{
  return sub_1D3002968();
}

void sub_1D2FDBB78(void *a1@<X8>)
{
  *a1 = &unk_1F2A16090;
}

void PLUSSuggestionMetadata.suggestionSurfaced.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

void PLUSSuggestionMetadata.suggestionNoveltyState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t PLUSSuggestionMetadata.__allocating_init(suggestionSurfaced:suggestionNoveltyState:)(unsigned char *a1, char *a2)
{
  uint64_t result = swift_allocObject();
  char v5 = *a2;
  *(unsigned char *)(result + 16) = *a1;
  *(unsigned char *)(result + 17) = v5;
  return result;
}

uint64_t PLUSSuggestionMetadata.init(suggestionSurfaced:suggestionNoveltyState:)(unsigned char *a1, char *a2)
{
  char v3 = *a2;
  *(unsigned char *)(v2 + 16) = *a1;
  *(unsigned char *)(v2 + 17) = v3;
  return v2;
}

uint64_t PLUSSuggestionMetadata.deinit()
{
  return v0;
}

uint64_t PLUSSuggestionMetadata.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1D2FDBC20()
{
  unint64_t result = qword_1EA699E90;
  if (!qword_1EA699E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699E90);
  }
  return result;
}

uint64_t sub_1D2FDBC74()
{
  return sub_1D2FA09A4(&qword_1EA699E98, &qword_1EA699EA0);
}

unint64_t sub_1D2FDBCA0()
{
  unint64_t result = qword_1EA699EA8;
  if (!qword_1EA699EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699EA8);
  }
  return result;
}

uint64_t sub_1D2FDBCF4()
{
  return sub_1D2FA09A4(&qword_1EA699EB0, &qword_1EA699EB8);
}

unint64_t sub_1D2FDBD20()
{
  unint64_t result = qword_1EA699EC0;
  if (!qword_1EA699EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699EC0);
  }
  return result;
}

uint64_t sub_1D2FDBD74()
{
  return sub_1D2FA09A4(&qword_1EA699EC8, &qword_1EA699ED0);
}

ValueMetadata *type metadata accessor for PLUSSuggestionSurfacedState()
{
  return &type metadata for PLUSSuggestionSurfacedState;
}

unsigned char *_s28SiriPrivateLearningAnalytics27PLUSSuggestionSurfacedStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FDBE80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PLUSSuggestionNoveltyState()
{
  return &type metadata for PLUSSuggestionNoveltyState;
}

unsigned char *storeEnumTagSinglePayload for PLUSSuggestionRedundancyState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FDBF84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PLUSSuggestionRedundancyState()
{
  return &type metadata for PLUSSuggestionRedundancyState;
}

uint64_t type metadata accessor for PLUSSuggestionMetadata()
{
  return self;
}

uint64_t method lookup function for PLUSSuggestionMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PLUSSuggestionMetadata);
}

uint64_t dispatch thunk of PLUSSuggestionMetadata.__allocating_init(suggestionSurfaced:suggestionNoveltyState:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void *Queue.__allocating_init()()
{
  unint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1D2FDC04C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t sub_1D2FDC05C(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t sub_1D2FDC06C()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1D2FDC074(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

void *Queue.init()()
{
  unint64_t result = v0;
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  return result;
}

BOOL sub_1D2FDC08C()
{
  return *(void *)(v0 + 16) == 0;
}

uint64_t sub_1D2FDC09C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 80);
    uint64_t v11 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v4 + *(void *)(*(void *)v4 + 88), v5);
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v7 = a1;
    uint64_t v8 = 0;
    uint64_t v9 = v5;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 80);
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v7 = a1;
    uint64_t v8 = 1;
  }
  return v6(v7, v8, 1, v9);
}

uint64_t *sub_1D2FDC1CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v14 - v6;
  type metadata accessor for Queue.QueueNode();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_allocObject();
  unint64_t result = sub_1D2FDC658((uint64_t)v7, 0);
  uint64_t v9 = v2[4];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = result;
    v2[4] = v11;
    uint64_t v13 = v2[3];
    if (v13)
    {
      *(void *)(v13 + *(void *)(*(void *)v13 + 96)) = result;
      swift_retain();
      swift_release();
    }
    v2[3] = v12;
    swift_retain();
    swift_release();
    if (!v2[2])
    {
      v2[2] = v2[3];
      swift_retain();
    }
    return (uint64_t *)swift_release();
  }
  return result;
}

uint64_t *sub_1D2FDC354(uint64_t a1, uint64_t a2)
{
  return sub_1D2FDC658(a1, a2);
}

uint64_t sub_1D2FDC3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 80);
    uint64_t v6 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v4 + *(void *)(*(void *)v4 + 88), v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 56))(a1, 1, 1);
  }
  return sub_1D2F8C4CC(v1);
}

uint64_t sub_1D2FDC4E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v11 = sub_1D3001E38();
  sub_1D3001EA8();
  sub_1D3001E18();
  uint64_t v6 = v1[2];
  swift_retain();
  if (v6)
  {
    uint64_t v7 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      (*v7)(v5, v6 + *(void *)(*(void *)v6 + 88), v2);
      sub_1D3001E88();
      uint64_t v8 = *(void *)(v6 + *(void *)(*(void *)v6 + 96));
      swift_retain();
      swift_release();
      uint64_t v6 = v8;
    }
    while (v8);
  }
  return v11;
}

uint64_t *sub_1D2FDC658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 96)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 32))((uint64_t)v2 + *(void *)(*v2 + 88), a1);
  *(uint64_t *)((char *)v2 + *(void *)(*v2 + 96)) = a2;
  swift_release();
  return v2;
}

uint64_t sub_1D2FDC710()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  uint64_t v2 = *(void *)(v0 + v1);
  *(void *)(v0 + v1) = 0;
  if (v2)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v3 = *(void *)(v2 + *(void *)(*(void *)v2 + 96));
      swift_retain();
      swift_release();
      uint64_t v2 = v3;
    }
    while (v3);
  }
  swift_release();
  return v0;
}

uint64_t sub_1D2FDC7F4()
{
  sub_1D2FDC710();
  return swift_deallocClassInstance();
}

uint64_t Queue.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t Queue.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t Queue.pop(if:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v5 = sub_1D30022F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v14 - v11;
  sub_1D2FDC09C((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
    if (v15(v12))
    {
      sub_1D2FDC3A0(a2);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v4);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v4);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v4);
}

uint64_t Queue.pop(while:)(uint64_t (*a1)(char *), uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = sub_1D30022F8();
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - v14;
  uint64_t v16 = sub_1D3001E38();
  uint64_t v25 = v2;
  uint64_t v26 = v16;
  unint64_t v23 = a1;
  uint64_t v24 = a2;
  Queue.pop(if:)(a1, (uint64_t)v9);
  int64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v17(v9, 1, v5) != 1)
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    do
    {
      v22(v15, v9, v5);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v5);
      sub_1D3001EA8();
      sub_1D3001E88();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v5);
      Queue.pop(if:)(v23, (uint64_t)v9);
    }
    while (v17(v9, 1, v5) != 1);
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  return v26;
}

uint64_t Queue.popAll()()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = sub_1D30022F8();
  uint64_t v16 = *(void *)(v2 - 8);
  uint64_t v17 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v3);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t v12 = sub_1D3001E38();
  uint64_t v19 = v0;
  uint64_t v20 = v12;
  sub_1D2FDC3A0((uint64_t)v5);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v13(v5, 1, v1) != 1)
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    do
    {
      v18(v11, v5, v1);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v1);
      sub_1D3001EA8();
      sub_1D3001E88();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v1);
      sub_1D2FDC3A0((uint64_t)v5);
    }
    while (v13(v5, 1, v1) != 1);
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  return v20;
}

uint64_t type metadata accessor for Queue.QueueNode()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2FDCFE8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Queue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Queue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Queue);
}

uint64_t dispatch thunk of Queue.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of Queue.isEmpty.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of Queue.head.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of Queue.push(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of Queue.pop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of Queue.peekAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1D2FDD134()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t FeatureManager.init(trialStatus:featureFlags:currentLocales:osResolver:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v25 = *(void *)(a2 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a2, v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  uint64_t v18 = *(void *)(a4 + 24);
  uint64_t v17 = *(void *)(a4 + 32);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1(a4, v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  uint64_t v23 = sub_1D2FDDFCC((uint64_t)v10, (uint64_t)v15, v27, (uint64_t)v21, v28, v7, v12, v18, v26, v25, v17);
  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v23;
}

uint64_t FeatureManager.deinit()
{
  sub_1D2F1DBE0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return v0;
}

uint64_t sub_1D2FDD4E4(void *a1)
{
  void (*v10)(char *__return_ptr, uint64_t, uint64_t);
  char v11;
  char v13;
  void v14[4];

  uint64_t v3 = v1[16];
  uint64_t v2 = v1[17];
  uint64_t v5 = v1[18];
  uint64_t v4 = v1[19];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v14[0] = v3;
  v14[1] = v2;
  v14[2] = v5;
  v14[3] = v4;
  uint64_t v8 = v1[29];
  uint64_t v9 = v1[30];
  __swift_project_boxed_opaque_existential_1(v1 + 26, v8);
  uint64_t v10 = *(void (**)(char *__return_ptr, uint64_t, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(&v13, v8, v9);
  uint64_t v11 = (*(uint64_t (**)(void *, void *, char *, uint64_t, uint64_t))(v7 + 8))(v1 + 2, v14, &v13, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1D2FDD5D4(void *a1, long long *a2)
{
  long long v10 = *a2;
  uint64_t v3 = *((void *)a2 + 2);
  uint64_t v4 = *((void *)a2 + 3);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  long long v12 = v10;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  uint64_t v7 = v2[29];
  uint64_t v8 = v2[30];
  __swift_project_boxed_opaque_existential_1(v2 + 26, v7);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v8 + 8))(&v11, v7, v8);
  return (*(uint64_t (**)(void *, long long *, char *, uint64_t, uint64_t))(v6 + 8))(v2 + 2, &v12, &v11, v5, v6) & 1;
}

uint64_t sub_1D2FDD6A0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[17];
  uint64_t v3 = v1[18];
  uint64_t v4 = v1[19];
  *a1 = v1[16];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2FDD6E4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[2];
  v6[0] = a1[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D2FDD74C()
{
  uint64_t v1 = v0;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "FeatureResolver: refreshing trial resolver", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  uint64_t v6 = v1 + 7;
  uint64_t v8 = v1[10];
  uint64_t v7 = v1[11];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
}

uint64_t FeatureManager.__allocating_init(trialStatus:featureFlags:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1D3001158();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v13[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F37950(a1, (uint64_t)v21);
  sub_1D2F37950(a2, (uint64_t)v20);
  id v8 = objc_msgSend(self, sel_currentLocale);
  sub_1D30010E8();

  id v9 = objc_msgSend(self, sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v7, v9, (uint64_t)v17);
  v14[0] = v17[0];
  v14[1] = v17[1];
  v14[2] = v17[2];
  v14[3] = v17[3];
  uint64_t v15 = v18;
  uint64_t v16 = v19;
  v14[4] = v17[4];
  void v14[5] = v17[5];
  v13[3] = &type metadata for OSTypeResolver;
  v13[4] = &protocol witness table for OSTypeResolver;
  uint64_t v10 = (*(uint64_t (**)(unsigned char *, unsigned char *, _OWORD *, void *))(v2 + 104))(v21, v20, v14, v13);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v10;
}

uint64_t FeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v29 = a3;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v27 = *(void *)(a1 + 32);
  uint64_t v28 = v7;
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v26 = *(void *)(a2 + 32);
  uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1(a2, v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  uint64_t v19 = *(void *)(a4 + 24);
  uint64_t v18 = *(void *)(a4 + 32);
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1(a4, v19);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  uint64_t v24 = sub_1D2FDDFCC((uint64_t)v11, (uint64_t)v16, v29, (uint64_t)v22, v28, v8, v13, v19, v27, v26, v18);
  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v24;
}

uint64_t FeatureManager.__deallocating_deinit()
{
  sub_1D2F1DBE0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 208);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FDDD14(void *a1)
{
  return sub_1D2FDD4E4(a1) & 1;
}

uint64_t sub_1D2FDDD3C(void *a1, long long *a2)
{
  uint64_t v3 = (void *)*v2;
  long long v11 = *a2;
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a2 + 3);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  long long v13 = v11;
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v8 = v3[29];
  uint64_t v9 = v3[30];
  __swift_project_boxed_opaque_existential_1(v3 + 26, v8);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v9 + 8))(&v12, v8, v9);
  return (*(uint64_t (**)(void *, long long *, char *, uint64_t, uint64_t))(v7 + 8))(v3 + 2, &v13, &v12, v6, v7) & 1;
}

uint64_t sub_1D2FDDE0C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 144);
  uint64_t v4 = *(void *)(*(void *)v1 + 152);
  *a1 = *(void *)(*(void *)v1 + 128);
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2FDDE54(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[2];
  v6[0] = a1[1];
  v6[1] = v2;
  swift_bridgeObjectRetain();
  FeatureResolver.getTrialFactorValue(_:scope:)(v1, v6);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1D2FDDEC0()
{
  uint64_t v1 = (void *)*v0;
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3001918();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBD65778);
  uint64_t v3 = sub_1D30018F8();
  os_log_type_t v4 = sub_1D30020A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1D2F05000, v3, v4, "FeatureResolver: refreshing trial resolver", v5, 2u);
    MEMORY[0x1D942F2D0](v5, -1, -1);
  }

  uint64_t v6 = v1[10];
  uint64_t v7 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
}

uint64_t sub_1D2FDDFCC(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a6;
  uint64_t v33 = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  *(void *)(a5 + 4sub_1D2FD62D8(0, 0) = a7;
  *(void *)(a5 + 48) = a10;
  uint64_t v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a5 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v20, a2, a7);
  *(void *)(a5 + 232) = a8;
  *(void *)(a5 + 24sub_1D2FD62D8(0, 0) = a11;
  uint64_t v21 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a5 + 208));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v21, a4, a8);
  long long v29 = a3[1];
  long long v30 = *a3;
  long long v27 = a3[3];
  long long v28 = a3[2];
  long long v25 = a3[5];
  long long v26 = a3[4];
  uint64_t v23 = *((void *)a3 + 12);
  uint64_t v22 = *((void *)a3 + 13);
  sub_1D2F0BE68(&v31, a5 + 56);
  *(_OWORD *)(a5 + 96) = v30;
  *(_OWORD *)(a5 + 112) = v29;
  *(_OWORD *)(a5 + 128) = v28;
  *(_OWORD *)(a5 + 144) = v27;
  *(_OWORD *)(a5 + 16sub_1D2FD62D8(0, 0) = v26;
  *(_OWORD *)(a5 + 176) = v25;
  *(void *)(a5 + 192) = v23;
  *(void *)(a5 + 20sub_1D2FD62D8(0, 0) = v22;
  return a5;
}

uint64_t dispatch thunk of FeatureManaging.isActive(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeatureManaging.isActive(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FeatureManaging.currentSiriLocale()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureManaging.getFeatureParameter(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeatureManaging.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for FeatureManager()
{
  return self;
}

uint64_t method lookup function for FeatureManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureManager);
}

uint64_t dispatch thunk of FeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FeatureManager.isActive(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FeatureManager.isActive(_:in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of FeatureManager.currentSiriLocale()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of FeatureManager.getFeatureParameter(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of FeatureManager.refresh()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &unk_1F2A160B8;
  return result;
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = &unk_1F2A160B8;
  return result;
}

uint64_t sub_1D2FDE338(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(v1, sel_intent);
  uint64_t v3 = sub_1D2F76438();
  if (!v4) {
    goto LABEL_15;
  }
  uint64_t v5 = v3;
  uint64_t v6 = v4;
  id v7 = objc_msgSend(v2, sel_parametersByName);
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_15:

    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1D3001A88();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1D3004380;
  uint64_t DeviceAndFriends = type metadata accessor for FindDeviceAndFriendsFeature.EventType(0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = v6;
  *(void *)(v10 + 56) = DeviceAndFriends;
  *(void *)(v10 + 64) = sub_1D2FDECA4(&qword_1EA699ED8, (void (*)(uint64_t))type metadata accessor for FindDeviceAndFriendsFeature.EventType);
  *(void *)(v10 + 32) = v12;
  swift_bridgeObjectRetain();
  LOBYTE(DeviceAndFriends) = objc_msgSend(v1, sel__donatedBySiri);
  uint64_t v13 = type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(0);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = DeviceAndFriends;
  *(void *)(v10 + 96) = v13;
  *(void *)(v10 + 104) = sub_1D2FDECA4(&qword_1EA699EE0, (void (*)(uint64_t))type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri);
  *(void *)(v10 + 72) = v14;
  if (v5 == 0xD000000000000012 && v6 == 0x80000001D300DC00 || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v9 + 16))
    {
      unint64_t v15 = sub_1D2F0DC98(0x656369766564, 0xE600000000000000);
      if (v16)
      {
        sub_1D2F0BD44(*(void *)(v9 + 56) + 32 * v15, (uint64_t)&v59);
        sub_1D2F0BCB8(0, &qword_1EA699F00);
        if (swift_dynamicCast())
        {
          id v17 = v62;
          id v18 = objc_msgSend(v62, sel_displayString);
          uint64_t v19 = sub_1D3001B78();
          uint64_t v21 = v20;

          uint64_t v22 = type metadata accessor for FindDeviceAndFriendsFeature.Name(0);
          uint64_t v23 = swift_allocObject();
          *(void *)(v23 + 16) = v19;
          *(void *)(v23 + 24) = v21;
          unint64_t v25 = *(void *)(v10 + 16);
          unint64_t v24 = *(void *)(v10 + 24);
          if (v25 >= v24 >> 1) {
            uint64_t v10 = (uint64_t)sub_1D2F27F00((void *)(v24 > 1), v25 + 1, 1, (void *)v10);
          }
          *((void *)&v60 + 1) = v22;
          uint64_t v61 = sub_1D2FDECA4(&qword_1EA699EF0, (void (*)(uint64_t))type metadata accessor for FindDeviceAndFriendsFeature.Name);
          *(void *)&long long v59 = v23;
          *(void *)(v10 + 16) = v25 + 1;
          sub_1D2F0BE68(&v59, v10 + 40 * v25 + 32);
        }
      }
    }
    if (!*(void *)(v9 + 16)) {
      goto LABEL_30;
    }
    uint64_t v26 = 0xD000000000000011;
    long long v27 = "locateDeviceClass";
LABEL_28:
    unint64_t v39 = sub_1D2F0DC98(v26, (unint64_t)(v27 - 32) | 0x8000000000000000);
    if (v40)
    {
      sub_1D2F0BD44(*(void *)(v9 + 56) + 32 * v39, (uint64_t)&v59);
      goto LABEL_31;
    }
LABEL_30:
    long long v59 = 0u;
    long long v60 = 0u;
LABEL_31:
    swift_bridgeObjectRelease();
    if (*((void *)&v60 + 1))
    {
      if (swift_dynamicCast())
      {
        id v41 = v62;
        uint64_t v42 = type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(0);
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = v41;
        unint64_t v45 = *(void *)(v10 + 16);
        unint64_t v44 = *(void *)(v10 + 24);
        if (v45 >= v44 >> 1) {
          uint64_t v10 = (uint64_t)sub_1D2F27F00((void *)(v44 > 1), v45 + 1, 1, (void *)v10);
        }
        *((void *)&v60 + 1) = v42;
        uint64_t v61 = sub_1D2FDECA4(&qword_1EA699EF8, (void (*)(uint64_t))type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass);
        *(void *)&long long v59 = v43;
        *(void *)(v10 + 16) = v45 + 1;
        sub_1D2F0BE68(&v59, v10 + 40 * v45 + 32);
      }
      goto LABEL_36;
    }
    goto LABEL_49;
  }
  if (v5 == 0x6E756F5379616C50 && v6 == 0xEF746E65746E4964 || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v9 + 16))
    {
      unint64_t v28 = sub_1D2F0DC98(0x656369766564, 0xE600000000000000);
      if (v29)
      {
        sub_1D2F0BD44(*(void *)(v9 + 56) + 32 * v28, (uint64_t)&v59);
        sub_1D2F0BCB8(0, &qword_1EA699F00);
        if (swift_dynamicCast())
        {
          id v30 = v62;
          id v31 = objc_msgSend(v62, sel_displayString);
          uint64_t v32 = sub_1D3001B78();
          uint64_t v34 = v33;

          uint64_t v35 = type metadata accessor for FindDeviceAndFriendsFeature.Name(0);
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = v32;
          *(void *)(v36 + 24) = v34;
          unint64_t v38 = *(void *)(v10 + 16);
          unint64_t v37 = *(void *)(v10 + 24);
          if (v38 >= v37 >> 1) {
            uint64_t v10 = (uint64_t)sub_1D2F27F00((void *)(v37 > 1), v38 + 1, 1, (void *)v10);
          }
          *((void *)&v60 + 1) = v35;
          uint64_t v61 = sub_1D2FDECA4(&qword_1EA699EF0, (void (*)(uint64_t))type metadata accessor for FindDeviceAndFriendsFeature.Name);
          *(void *)&long long v59 = v36;
          *(void *)(v10 + 16) = v38 + 1;
          sub_1D2F0BE68(&v59, v10 + 40 * v38 + 32);
        }
      }
    }
    if (!*(void *)(v9 + 16)) {
      goto LABEL_30;
    }
    uint64_t v26 = 0xD000000000000014;
    long long v27 = "playSoundDeviceClass";
    goto LABEL_28;
  }
  if (v5 == 0x6E49657461636F4CLL && v6 == 0xEC000000746E6574)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  char v46 = sub_1D3002778();
  swift_bridgeObjectRelease();
  if ((v46 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_41:
  if (!*(void *)(v9 + 16) || (unint64_t v47 = sub_1D2F0DC98(0x6E6F73726570, 0xE600000000000000), (v48 & 1) == 0))
  {
    long long v59 = 0u;
    long long v60 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  sub_1D2F0BD44(*(void *)(v9 + 56) + 32 * v47, (uint64_t)&v59);
  swift_bridgeObjectRelease();
  if (!*((void *)&v60 + 1))
  {
LABEL_49:

    sub_1D2F0BEDC((uint64_t)&v59);
    return v10;
  }
  sub_1D2F0BCB8(0, &qword_1EA699EE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_36:

    return v10;
  }
  id v49 = v62;
  id v50 = objc_msgSend(v62, sel_displayName);
  uint64_t v51 = sub_1D3001B78();
  uint64_t v53 = v52;

  uint64_t v54 = type metadata accessor for FindDeviceAndFriendsFeature.Name(0);
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v51;
  *(void *)(v55 + 24) = v53;
  unint64_t v57 = *(void *)(v10 + 16);
  unint64_t v56 = *(void *)(v10 + 24);
  if (v57 >= v56 >> 1) {
    uint64_t v10 = (uint64_t)sub_1D2F27F00((void *)(v56 > 1), v57 + 1, 1, (void *)v10);
  }
  *((void *)&v60 + 1) = v54;
  uint64_t v61 = sub_1D2FDECA4(&qword_1EA699EF0, (void (*)(uint64_t))type metadata accessor for FindDeviceAndFriendsFeature.Name);
  *(void *)&long long v59 = v55;
  *(void *)(v10 + 16) = v57 + 1;
  sub_1D2F0BE68(&v59, v10 + 40 * v57 + 32);

  return v10;
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.EventType(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699F10);
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.__allocating_init(value:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FindDeviceAndFriendsIntentFeatureExtractor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699F20);
}

uint64_t sub_1D2FDEC68(uint64_t *a1)
{
  return sub_1D2FDEEE8(a1, (void (*)(void))type metadata accessor for FindDeviceAndFriendsFeature.EventType);
}

uint64_t sub_1D2FDEC80(uint64_t *a1)
{
  return sub_1D2FDEF3C(a1, (void (*)(void))type metadata accessor for FindDeviceAndFriendsFeature.EventType);
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.init(value:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v1 + 16) = a1 & 1;
  }
  return v1;
}

uint64_t sub_1D2FDECA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.__allocating_init(value:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v3 + 16) = a1 & 1;
  }
  return v4;
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.deinit()
{
  return v0;
}

uint64_t FindDeviceAndFriendsFeature.DonatedBySiri.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FDEDEC(char *a1)
{
  char v1 = *a1;
  type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(0);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2FDEE24(unsigned __int8 *a1)
{
  int v1 = *a1;
  type metadata accessor for FindDeviceAndFriendsFeature.DonatedBySiri(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698960);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(unsigned char *)(v2 + 16) = v1 & 1;
  }
  return v3;
}

uint64_t FindDeviceAndFriendsFeature.Name.init(value:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t FindDeviceAndFriendsFeature.Name.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D2FDEED0(uint64_t *a1)
{
  return sub_1D2FDEEE8(a1, (void (*)(void))type metadata accessor for FindDeviceAndFriendsFeature.Name);
}

uint64_t sub_1D2FDEEE8(uint64_t *a1, void (*a2)(void))
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t sub_1D2FDEF24(uint64_t *a1)
{
  return sub_1D2FDEF3C(a1, (void (*)(void))type metadata accessor for FindDeviceAndFriendsFeature.Name);
}

uint64_t sub_1D2FDEF3C(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  a2(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (v2)
  {
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698958);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.__allocating_init(value:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699F08);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v4 + 16) = a1;
  }
  return v5;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.init(value:)(uint64_t a1, char a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699F08);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v2 + 16) = a1;
  }
  return v2;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.deinit()
{
  return v0;
}

uint64_t FindDeviceAndFriendsFeature.DeviceClass.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FDF0A0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2FDF0D8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  char v2 = *((unsigned char *)a1 + 8);
  type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699F08);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    *(void *)(v3 + 16) = v1;
  }
  return v4;
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.Name(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699F30);
}

uint64_t type metadata accessor for FindDeviceAndFriendsFeature.DeviceClass(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA699F40);
}

uint64_t type metadata accessor for FindDeviceAndFriendsIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for FindDeviceAndFriendsIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FindDeviceAndFriendsIntentFeatureExtractor);
}

uint64_t dispatch thunk of FindDeviceAndFriendsIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FindDeviceAndFriendsIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

ValueMetadata *type metadata accessor for FindDeviceAndFriendsFeature()
{
  return &type metadata for FindDeviceAndFriendsFeature;
}

unint64_t UsageLogger.disabledKey.getter()
{
  return 0xD000000000000014;
}

Swift::Void __swiftcall UsageLogger.register(disabled:)(Swift::Bool disabled)
{
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD637A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D3004370;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 4sub_1D2FD62D8(0, 0) = 0x80000001D300FA00;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = disabled;
  sub_1D2F1F1AC(inited);
  uint64_t v4 = (void *)sub_1D3001A78();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_registerDefaults_, v4);
}

Swift::Bool __swiftcall UsageLogger.isDisabled()()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

unint64_t sub_1D2FDF3B8()
{
  return 0xD000000000000014;
}

void sub_1D2FDF3D4(Swift::Bool a1)
{
}

id sub_1D2FDF3EC()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

uint64_t dispatch thunk of UsageLogging.disabledKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UsageLogging.register(disabled:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of UsageLogging.isDisabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for UsageLogger()
{
  return &type metadata for UsageLogger;
}

uint64_t sub_1D2FDF4C4(uint64_t a1)
{
  uint64_t v3 = sub_1D30010A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD613C0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + *(void *)(*(void *)v7 + 96)) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7 + *(void *)(*(void *)v7 + 88), v6, v3);
  *(void *)(v7 + *(void *)(*(void *)v7 + 96)) = 0;
  uint64_t result = swift_release();
  uint64_t v9 = v1[4];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v1[4] = v11;
    uint64_t v12 = v1[3];
    if (v12)
    {
      *(void *)(v12 + *(void *)(*(void *)v12 + 96)) = v7;
      swift_retain();
      swift_release();
    }
    v1[3] = v7;
    swift_retain();
    swift_release();
    if (!v1[2])
    {
      v1[2] = v1[3];
      swift_retain();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2FDF698(uint64_t a1)
{
  return sub_1D2FDF6B0(a1, &qword_1EBD613C8);
}

uint64_t sub_1D2FDF6A4(uint64_t a1)
{
  return sub_1D2FDF6B0(a1, &qword_1EA699F50);
}

uint64_t sub_1D2FDF6B0(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = 0;
  uint64_t v5 = v2[4];
  uint64_t v6 = v5 + 1;
  BOOL v7 = __OFADD__(v5, 1);
  uint64_t result = swift_retain();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    v2[4] = v6;
    uint64_t v9 = v2[3];
    if (v9)
    {
      *(void *)(v9 + 24) = v4;
      swift_retain();
      swift_release();
    }
    v2[3] = v4;
    swift_retain();
    swift_release();
    if (!v2[2])
    {
      v2[2] = v2[3];
      swift_retain();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2FDF784(uint64_t a1, double a2)
{
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v17 - v10, a1, v5);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *(void *)(v2 + 40);
  *(void *)(v2 + 4sub_1D2FD62D8(0, 0) = 0x8000000000000000;
  sub_1D2FE5CC0((uint64_t)v11, isUniquelyReferenced_nonNull_native, a2);
  *(void *)(v2 + 4sub_1D2FD62D8(0, 0) = v17;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v11, v5);
  swift_endAccess();
  v12(v9, a1, v5);
  swift_beginAccess();
  char v15 = sub_1D2FDFDFC((uint64_t)v11, v9);
  v14(v11, v5);
  uint64_t result = swift_endAccess();
  if (v15) {
    return sub_1D2FDF4C4(a1);
  }
  return result;
}

BOOL sub_1D2FDF970(double a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(*(void *)(v1 + 32) + 16);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, v10 + *(void *)(*(void *)v10 + 88), v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_1D2F0D16C((uint64_t)v5);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v1 + 40);
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1D2F0DD14((uint64_t)v9);
    if (v13)
    {
      double v14 = *(double *)(*(void *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return a1 - v14 > 60.0;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

uint64_t sub_1D2FDFBE0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestStreamEndpointer()
{
  return self;
}

uint64_t sub_1D2FDFC4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1D3002928();
  swift_bridgeObjectRetain();
  sub_1D3001C28();
  uint64_t v8 = sub_1D3002968();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D3002778() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      id v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D3002778() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D2FE0E78(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D2FDFDFC(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
  swift_bridgeObjectRetain();
  uint64_t v34 = a2;
  uint64_t v11 = sub_1D3001AB8();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    char v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    double v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
      char v22 = sub_1D3001B28();
      uint64_t v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      double v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    double v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D2FE1014((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1D2FE00F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_1D3002928();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  uint64_t v25 = a4;
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1D3001C28();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1D3002968();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v24 = ~v12;
    while (1)
    {
      double v14 = (uint64_t *)(*(void *)(v10 + 48) + 32 * v13);
      uint64_t v26 = *v14;
      uint64_t v28 = v14[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1D3001C68();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v26 == a2 && v28 == a3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_10;
      }
      char v15 = sub_1D3002778();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v24;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v18 = (uint64_t *)(*(void *)(*v22 + 48) + 32 * v13);
    uint64_t v19 = v18[1];
    uint64_t v20 = v18[2];
    uint64_t v21 = v18[3];
    *a1 = *v18;
    a1[1] = v19;
    a1[2] = v20;
    a1[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v22;
    *char v22 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D2FE128C(a2, a3, v25, a5, v13, isUniquelyReferenced_nonNull_native);
    *char v22 = v27;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    uint64_t result = 1;
    a1[2] = v25;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_1D2FE044C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63598);
  uint64_t v3 = sub_1D30023F8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1D3002928();
      sub_1D3001C28();
      uint64_t result = sub_1D3002968();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D2FE072C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1D30010A8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61488);
  uint64_t v5 = sub_1D30023F8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    unint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
      uint64_t result = sub_1D3001AB8();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1D2FE0B14()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699F58);
  uint64_t v3 = sub_1D30023F8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      uint64_t v21 = v18[2];
      uint64_t v22 = v18[3];
      sub_1D3002928();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_1D3001C28();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1D3002968();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
      *unint64_t v12 = v20;
      v12[1] = v19;
      v12[2] = v21;
      v12[3] = v22;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1D2FE0E78(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1D2FE044C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1D2FE1584();
      goto LABEL_22;
    }
    sub_1D2FE1BA0();
  }
  uint64_t v11 = *v4;
  sub_1D3002928();
  sub_1D3001C28();
  uint64_t result = sub_1D3002968();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1D3002778(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1D30028A8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1D3002778();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1D2FE1014(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1D2FE072C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D2FE1738();
      goto LABEL_12;
    }
    sub_1D2FE1E50();
  }
  uint64_t v12 = *v3;
  sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
  uint64_t v13 = sub_1D3001AB8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1D2F13470((unint64_t *)&qword_1EBD610E0);
      char v21 = sub_1D3001B28();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1D30028A8();
  __break(1u);
  return result;
}

uint64_t sub_1D2FE128C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v25 = result;
  unint64_t v10 = *(void *)(*v6 + 16);
  unint64_t v11 = *(void *)(*v6 + 24);
  if (v11 > v10 && (a6 & 1) != 0) {
    goto LABEL_14;
  }
  if (a6)
  {
    sub_1D2FE0B14();
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_1D2FE19DC();
      goto LABEL_14;
    }
    sub_1D2FE21EC();
  }
  uint64_t v12 = *v6;
  sub_1D3002928();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1D3001C28();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1D3002968();
  uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
  a5 = result & ~v13;
  uint64_t v24 = v12;
  uint64_t v14 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v15 = ~v13;
    do
    {
      uint64_t v16 = (uint64_t *)(*(void *)(v24 + 48) + 32 * a5);
      uint64_t v27 = *v16;
      uint64_t v28 = v16[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_1D3001C68();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRetain();
      sub_1D3001C68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v27 == v25 && v28 == a2) {
        goto LABEL_17;
      }
      char v17 = sub_1D3002778();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_18;
      }
      a5 = (a5 + 1) & v15;
    }
    while (((*(void *)(v14 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_14:
  uint64_t v18 = *v23;
  *(void *)(*v23 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v19 = (uint64_t *)(*(void *)(v18 + 48) + 32 * a5);
  *uint64_t v19 = v25;
  v19[1] = a2;
  v19[2] = a3;
  v19[3] = a4;
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (!v21)
  {
    *(void *)(v18 + 16) = v22;
    return result;
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_18:
  uint64_t result = sub_1D30028A8();
  __break(1u);
  return result;
}

void *sub_1D2FE1584()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63598);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30023E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D2FE1738()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61488);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1D30023E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1D2FE19DC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699F58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D30023E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    void v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D2FE1BA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63598);
  uint64_t v3 = sub_1D30023F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1D3002928();
    swift_bridgeObjectRetain();
    sub_1D3001C28();
    uint64_t result = sub_1D3002968();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D2FE1E50()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D30010A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61488);
  uint64_t v7 = sub_1D30023F8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1D2F13470((unint64_t *)&qword_1EBD62A98);
    uint64_t result = sub_1D3001AB8();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D2FE21EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699F58);
  uint64_t v3 = sub_1D30023F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    sub_1D3002928();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1D3001C28();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D3002968();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
    *unint64_t v12 = v20;
    v12[1] = v19;
    v12[2] = v21;
    v12[3] = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void getEventTimestampFromContext(from:context:)(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_eventMetadata);
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = objc_msgSend(v4, sel_eventGeneratedTimestampRefId);

    if (v6)
    {
      uint64_t v7 = sub_1D3001B78();
      uint64_t v5 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v5 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v9 = objc_msgSend(a2, sel_eventMetadata);
  int64_t v10 = v9;
  if (v9)
  {
    id v11 = objc_msgSend(v9, sel_eventGeneratedTimestampRefId);

    if (v11)
    {
      uint64_t v12 = sub_1D3001B78();
      int64_t v10 = v13;

      if (v5) {
        goto LABEL_9;
      }
LABEL_14:
      if (!v10) {
        goto LABEL_21;
      }
LABEL_18:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v12 = 0;
    int64_t v10 = 0;
    if (!v5) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v12 = 0;
    if (!v5) {
      goto LABEL_14;
    }
  }
LABEL_9:
  if (!v10) {
    goto LABEL_18;
  }
  if (v7 == v12 && v5 == v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return;
    }
  }
LABEL_21:
  id v15 = objc_msgSend(a1, sel_eventMetadata);
  if (v15)
  {
    unint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_eventGeneratedRelativeToBootTimeTimestampNs);

    id v18 = objc_msgSend(a2, sel_eventMetadata);
    if (v18)
    {
      uint64_t v19 = v18;
      id v20 = objc_msgSend(v18, sel_eventGeneratedRelativeToBootTimeTimestampNs);

      id v21 = objc_msgSend(a2, sel_deviceDynamicContext);
      if (v21)
      {
        uint64_t v22 = v21;
        objc_msgSend(v21, sel_timeIntervalSince1970);

        if (__OFSUB__(v17, v20)) {
          __break(1u);
        }
      }
    }
  }
}

void getEventTimestamp(from:)(void *a1)
{
  if (objc_msgSend(a1, sel_hasDeviceDynamicContext)) {
    getEventTimestampFromContext(from:context:)(a1, a1);
  }
}

uint64_t dispatch thunk of InferredGroundTruthStore.write<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.read<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.read<A>(type:limit:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.delete(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InferredGroundTruthStore.deleteOldestRecordsIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

void *sub_1D2FE2854()
{
  uint64_t result = (void *)sub_1D2FE2874();
  off_1EBD62BC8 = result;
  return result;
}

uint64_t sub_1D2FE2874()
{
  if (qword_1EBD63010 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBD63008;
  if (qword_1EBD62F18 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBD65748;
  if (qword_1EBD631E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBD631D8;
  sub_1D2FE2AAC(v22);
  if (qword_1EBD63068 != -1) {
    swift_once();
  }
  sub_1D2F37950((uint64_t)&qword_1EBD63038, (uint64_t)v21);
  uint64_t v3 = type metadata accessor for DefaultBiomeReader();
  uint64_t inited = swift_initStaticObject();
  sub_1D2FE2C58((uint64_t)v22, (uint64_t)v20);
  sub_1D2F37950((uint64_t)v21, (uint64_t)v19);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  uint64_t v17 = type metadata accessor for FlatFileSignalReader();
  id v18 = &protocol witness table for FlatFileSignalReader;
  *(void *)&long long v16 = v0;
  uint64_t v14 = type metadata accessor for BiomeSignalReader();
  id v15 = &off_1F2A1A980;
  *(void *)&long long v13 = v1;
  uint64_t v11 = type metadata accessor for FlatFileStreamBookmarkStore();
  uint64_t v12 = &protocol witness table for FlatFileStreamBookmarkStore;
  *(void *)&long long v10 = v2;
  uint64_t v8 = v3;
  id v9 = &protocol witness table for DefaultBiomeReader;
  *(void *)&long long v7 = inited;
  type metadata accessor for PLLoggingReader();
  uint64_t v5 = swift_allocObject();
  sub_1D2F0BE68(&v16, v5 + 16);
  sub_1D2F0BE68(&v13, v5 + 56);
  sub_1D2F0BE68(&v10, v5 + 96);
  sub_1D2FE2DE0(v20, (_OWORD *)(v5 + 136));
  sub_1D2F0BE68(v19, v5 + 184);
  sub_1D2F0BE68(&v7, v5 + 224);
  return v5;
}

id sub_1D2FE2AAC@<X0>(uint64_t *a1@<X8>)
{
  id v9 = &type metadata for SiriPrivateLearningFeatureFlag;
  unint64_t v10 = sub_1D2F1DF00();
  v8[0] = 12;
  char v2 = _s28SiriPrivateLearningAnalytics23EnvironmentFeatureFlagsV02isF7EnabledySb0fG00fG3Key_pF_0();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  if (v2)
  {
    uint64_t v3 = type metadata accessor for AIMLISSignalReader();
    id result = (id)swift_allocObject();
    uint64_t v5 = (uint64_t)result;
    id v6 = &off_1F2A17D40;
    long long v7 = &off_1F2A17D18;
  }
  else
  {
    uint64_t v3 = type metadata accessor for AsyncBiomeSignalReader();
    uint64_t v5 = swift_allocObject();
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F50460]), sel_init);
    *(void *)(v5 + 16) = result;
    id v6 = &off_1F2A163F8;
    long long v7 = &off_1F2A16410;
  }
  a1[3] = v3;
  a1[4] = (uint64_t)v7;
  a1[5] = (uint64_t)v6;
  *a1 = v5;
  return result;
}

uint64_t static PLLoggingReader.shared.getter()
{
  if (qword_1EBD62BD8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t PLLoggingReader.signalReader.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F37950(v1 + 16, a1);
}

uint64_t PLLoggingReader.streamSignalReader.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F37950(v1 + 56, a1);
}

uint64_t PLLoggingReader.streamBookmarkStore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F37950(v1 + 96, a1);
}

uint64_t PLLoggingReader.asyncSignalReader.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2FE2C58(v1 + 136, a1);
}

uint64_t sub_1D2FE2C58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t PLLoggingReader.interactionReader.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F37950(v1 + 184, a1);
}

uint64_t PLLoggingReader.biomeReader.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F37950(v1 + 224, a1);
}

uint64_t PLLoggingReader.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  return v0;
}

uint64_t PLLoggingReader.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PLLoggingReader()
{
  return self;
}

uint64_t method lookup function for PLLoggingReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PLLoggingReader);
}

_OWORD *sub_1D2FE2DE0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1D2FE2DFC()
{
  uint64_t v0 = sub_1D3000F18();
  __swift_allocate_value_buffer(v0, qword_1EBD63188);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBD63188);
  return sub_1D3000E58();
}

uint64_t static FlatFileStreamBookmarkStore.defaultBookmarkPath.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBD631A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBD63188);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1D2FE2F08()
{
  uint64_t v0 = sub_1D3000F18();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v12 - v5;
  if (qword_1EBD631A0 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD63188);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v8(v6, v7, v0);
  v8(v4, (uint64_t)v6, v0);
  if (qword_1EBD63300 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EBD65770;
  type metadata accessor for FlatFileStreamBookmarkStore();
  swift_allocObject();
  swift_retain();
  uint64_t v10 = sub_1D2FE6D78(0xD00000000000001CLL, 0x80000001D3013D00, (uint64_t)v4, v9);
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  qword_1EBD631D8 = v10;
  return result;
}

uint64_t FlatFileStreamBookmarkStore.__allocating_init(name:path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D3000F18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  if (qword_1EBD63300 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EBD65770;
  type metadata accessor for FlatFileStreamBookmarkStore();
  swift_allocObject();
  swift_retain();
  uint64_t v11 = sub_1D2FE6D78(a1, a2, (uint64_t)v9, v10);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a3, v6);
  return v11;
}

uint64_t type metadata accessor for FlatFileStreamBookmarkStore()
{
  uint64_t result = qword_1EBD63208;
  if (!qword_1EBD63208) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static FlatFileStreamBookmarkStore.shared.getter()
{
  if (qword_1EBD631E8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1D2FE3310(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D30019A8();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D3001A08();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = -1;
  uint64_t v11 = (pthread_rwlock_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  pthread_rwlock_wrlock(v11);
  swift_endAccess();
  uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v15 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v31 = *v14;
  *uint64_t v14 = 0x8000000000000000;
  sub_1D2FE654C((uint64_t)v15, v13, v12, isUniquelyReferenced_nonNull_native);
  *uint64_t v14 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_endAccess();
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumber);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumber) = v20;
    *(void *)(v10 + 16) = v20;
    swift_beginAccess();
    pthread_rwlock_unlock(v11);
    swift_endAccess();
    dispatch_group_enter(*(dispatch_group_t *)(v2
                                             + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup));
    id v21 = (void *)swift_allocObject();
    void v21[2] = v2;
    v21[3] = v15;
    void v21[4] = v10;
    aBlock[4] = sub_1D2FE71F4;
    void aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D2FD5A90;
    aBlock[3] = &block_descriptor_14;
    uint64_t v22 = _Block_copy(aBlock);
    uint64_t v23 = v15;
    swift_retain();
    swift_retain();
    sub_1D30019D8();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1D2FE8B54(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
    sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
    uint64_t v24 = v29;
    sub_1D30023A8();
    MEMORY[0x1D942E090](0, v9, v6, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v24);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2FE371C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath;
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_queue);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  swift_retain();
  id v9 = a2;
  swift_retain();
  sub_1D2F6FBE0(v6);
  sub_1D2F6E7A0(v6, v7, 5, 0, (uint64_t (*)(uint64_t, unint64_t))sub_1D2FE87AC, (uint64_t (*)(uint64_t, unint64_t))v8);
  return swift_release();
}

void sub_1D2FE37FC(uint64_t a1, unint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v10 = sub_1D3000F18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a3;
  if (a2)
  {
    uint64_t v14 = qword_1EBD5FC00;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1D3001918();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EBD5FBE0);
    swift_bridgeObjectRetain();
    long long v16 = a4;
    uint64_t v17 = sub_1D30018F8();
    os_log_type_t v18 = sub_1D30020B8();
    if (!os_log_type_enabled(v17, v18))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v53[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v22 = *(void *)&v16[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
    unint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1D2F09508(v22, v21, v53);
    sub_1D3002318();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1D2F09508(a1, a2, v53);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v17, v18, "Failed to acquire a file lock to write bookmark data for %s: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v20, -1, -1);
    uint64_t v23 = v19;
    goto LABEL_6;
  }
  uint64_t v24 = (uint64_t *)(a5 + 16);
  unint64_t v25 = *(void *)&a4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  uint64_t v47 = *(void *)&a4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  uint64_t v26 = (uint64_t *)(a3
                  + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumberLog);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(*v26 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1D2F0DC98(v47, v25);
    if (v29)
    {
      uint64_t v30 = *(void *)(v27 + 56);
      uint64_t v46 = a5;
      unint64_t v31 = v25;
      uint64_t v32 = *(void *)(v30 + 8 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v33 = *v24;
      uint64_t v45 = v32;
      BOOL v34 = v32 < v33;
      unint64_t v25 = v31;
      uint64_t v35 = v46;
      if (!v34)
      {
        if (qword_1EBD5FC00 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_1D3001918();
        __swift_project_value_buffer(v36, (uint64_t)qword_1EBD5FBE0);
        uint64_t v37 = a4;
        swift_retain();
        uint64_t v17 = sub_1D30018F8();
        os_log_type_t v38 = sub_1D30020A8();
        if (!os_log_type_enabled(v17, v38))
        {

          swift_release();
          goto LABEL_18;
        }
        uint64_t v39 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        v51[0] = v40;
        *(_DWORD *)uint64_t v39 = 136315650;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1D2F09508(v47, v25, v51);
        sub_1D3002318();

        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2048;
        swift_beginAccess();
        uint64_t v50 = *(void *)(v35 + 16);
        sub_1D3002318();
        swift_release();
        *(_WORD *)(v39 + 22) = 2048;
        uint64_t v50 = v45;
        sub_1D3002318();
        _os_log_impl(&dword_1D2F05000, v17, v38, "Discarding a write for %s with a sequence number %ld, the current number is %ld", (uint8_t *)v39, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v40, -1, -1);
        uint64_t v23 = v39;
LABEL_6:
        MEMORY[0x1D942F2D0](v23, -1, -1);

        goto LABEL_18;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath, v10);
  swift_beginAccess();
  char v41 = sub_1D2FE87B8(v13, a4, *v24);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v41)
  {
    swift_beginAccess();
    uint64_t v42 = *v24;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *v26;
    *uint64_t v26 = 0x8000000000000000;
    sub_1D2FE66BC(v42, v47, v25, isUniquelyReferenced_nonNull_native);
    *uint64_t v26 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
LABEL_18:
  dispatch_group_leave(*(dispatch_group_t *)(v48
                                           + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup));
}

void *sub_1D2FE3E30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (pthread_rwlock_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  pthread_rwlock_rdlock(v5);
  swift_endAccess();
  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(*v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1D2F0DC98(a1, a2);
    if (v9)
    {
      uint64_t v10 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
      id v11 = v10;
    }
    else
    {
      uint64_t v10 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  swift_beginAccess();
  pthread_rwlock_unlock(v5);
  swift_endAccess();
  return v10;
}

uint64_t sub_1D2FE3F40()
{
  uint64_t v1 = v0;
  sub_1D3002118();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v0;
  swift_retain();
  swift_retain();
  sub_1D2F6FBE0(v3);
  sub_1D2F6E7A0(v3, 0, 0, 0, (uint64_t (*)(uint64_t, unint64_t))sub_1D2FE7268, (uint64_t (*)(uint64_t, unint64_t))v4);
  swift_release();
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (!v5) {
    return swift_release();
  }
  uint64_t v6 = (pthread_rwlock_t *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  pthread_rwlock_wrlock(v6);
  swift_endAccess();
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  *uint64_t v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  pthread_rwlock_unlock(v6);
  swift_endAccess();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1D2FE40F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v6 = qword_1EBD5FC00;
    swift_bridgeObjectRetain();
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1D3001918();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBD5FBE0);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1D30018F8();
    os_log_type_t v9 = sub_1D30020B8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      v14[0] = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D2F09508(a1, a2, v14);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2F05000, v8, v9, "Failed to acquire a file lock to refresh bookmark data: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v11, -1, -1);
      MEMORY[0x1D942F2D0](v10, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v13 = sub_1D2FE78A4((id)(a4 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath));
    swift_beginAccess();
    *(void *)(a3 + 16) = v13;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D2FE42E4()
{
  uint64_t v1 = v0;
  sub_1D3002118();
  unint64_t v2 = sub_1D2F1F3F8(MEMORY[0x1E4FBC860]);
  uint64_t v3 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D2F6FBE0(v3);
  sub_1D2F6E7A0(v3, 0, 0, 0, (uint64_t (*)(uint64_t, unint64_t))sub_1D2FE72D8, (uint64_t (*)(uint64_t, unint64_t))v4);
  swift_release();
  uint64_t v5 = (pthread_rwlock_t *)(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock);
  swift_beginAccess();
  pthread_rwlock_wrlock(v5);
  swift_endAccess();
  uint64_t v6 = (unint64_t *)(v1 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks);
  swift_beginAccess();
  *uint64_t v6 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  pthread_rwlock_unlock(v5);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_1D2FE4450(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    uint64_t v4 = qword_1EBD5FC00;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1D3001918();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBD5FBE0);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1D30018F8();
    os_log_type_t v7 = sub_1D30020B8();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = v9;
      *(_DWORD *)unint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D2F09508(a1, a2, &v10);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2F05000, v6, v7, "Failed to acquire a file lock to reset bookmark data: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v9, -1, -1);
      MEMORY[0x1D942F2D0](v8, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_1D2FE8118();
  }
}

uint64_t sub_1D2FE463C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1D30019A8();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D3001A08();
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D30019B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup);
  sub_1D2F0BCB8(0, qword_1EBD635E0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCB48], v10);
  uint64_t v14 = (void *)sub_1D3002198();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v19;
  *(void *)(v15 + 24) = a2;
  aBlock[4] = sub_1D2F45064;
  void aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2FD5A90;
  aBlock[3] = &block_descriptor_18;
  long long v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1D30019D8();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1D2FE8B54(&qword_1EBD639D0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD639D8);
  sub_1D2F6BA5C((unint64_t *)&qword_1EBD639E0, &qword_1EBD639D8);
  sub_1D30023A8();
  sub_1D3002128();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  return swift_release();
}

uint64_t sub_1D2FE49E0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1D2FE4A00, 0, 0);
}

uint64_t sub_1D2FE4A00()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D2FE4AD4;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F41880D8](v1, 0, 0, 0xD000000000000012, 0x80000001D3013C10, sub_1D2FE7318, v2, v3);
}

uint64_t sub_1D2FE4AD4()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D2FE4BD0, 0, 0);
}

uint64_t sub_1D2FE4BD0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D2FE4BE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAA8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1D2FE463C((uint64_t)sub_1D2FE783C, v6);
  return swift_release();
}

uint64_t FlatFileStreamBookmarkStore.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath;
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath, v2);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FlatFileStreamBookmarkStore.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath;
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath, v2);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FE4F28(char *a1)
{
  return sub_1D2FE3310(a1);
}

void *sub_1D2FE4F4C(uint64_t a1, uint64_t a2)
{
  return sub_1D2FE3E30(a1, a2);
}

uint64_t sub_1D2FE4F70()
{
  return sub_1D2FE3F40();
}

uint64_t sub_1D2FE4F94(uint64_t a1, uint64_t a2)
{
  return sub_1D2FE463C(a1, a2);
}

uint64_t sub_1D2FE4FB8()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x1F4188298](sub_1D2FE4A00, 0, 0);
}

uint64_t sub_1D2FE4FDC()
{
  return sub_1D2FE42E4();
}

uint64_t sub_1D2FE5000()
{
  uint64_t v0 = sub_1D3001918();
  __swift_allocate_value_buffer(v0, qword_1EBD5FBE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD5FBE0);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBD65778);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_1D2FE50C8(uint64_t a1, int a2, char a3)
{
  return sub_1D2FE52C8(a1, a2, a3, (uint64_t (*)(void))sub_1D2F12DF4, (void (*)(void))sub_1D2F0E988);
}

uint64_t sub_1D2FE50F4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D2F0DD14(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D2F12E00();
    goto LABEL_7;
  }
  sub_1D2F0E994(v17, a3 & 1);
  unint64_t v23 = sub_1D2F0DD14(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D2FE6940(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1D2FE529C(uint64_t a1, int a2, char a3)
{
  return sub_1D2FE52C8(a1, a2, a3, (uint64_t (*)(void))sub_1D2F13098, (void (*)(void))sub_1D2F0EDA4);
}

uint64_t sub_1D2FE52C8(uint64_t a1, int a2, char a3, uint64_t (*a4)(void), void (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1D2F0DD10(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = a4();
LABEL_7:
    uint64_t v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_DWORD *)(v20[6] + 4 * v14) = a2;
    *(void *)(v20[7] + 8 * v14) = a1;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      void v20[2] = v25;
      return result;
    }
    goto LABEL_14;
  }
  a5();
  uint64_t result = sub_1D2F0DD10(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    uint64_t v20 = (void *)*v8;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for SISchemaComponentName(0);
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

uint64_t sub_1D2FE5418(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D2F0DD14(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1D2F134B4();
      goto LABEL_7;
    }
    sub_1D2F0F398(v17, a3 & 1);
    unint64_t v24 = sub_1D2F0DD14(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1D2FE6864(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = v21
      + *(void *)(*(void *)(type metadata accessor for LogicalClockTable.DeviceFixedContextTime() - 8) + 72) * v14;
  return sub_1D2FE7744(a1, v22);
}

void sub_1D2FE5600(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1D2F0DD14(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D2F137CC();
    goto LABEL_7;
  }
  sub_1D2F0F860(v17, a3 & 1);
  unint64_t v22 = sub_1D2F0DD14(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_1D30028B8();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1D2FE6940(v14, (uint64_t)v11, a1, v20);
}

void sub_1D2FE57A8(uint64_t a1, uint64_t a2, char a3)
{
}

uint64_t sub_1D2FE57D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_1D2F0DD14(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1D2F13A7C();
      goto LABEL_7;
    }
    sub_1D2F0FC88(v16, a3 & 1);
    unint64_t v23 = sub_1D2F0DD14(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      uint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, a2, v8);
      return sub_1D2FE6A40(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v26 + 40);
  unint64_t v21 = v19[7] + *(void *)(v26 + 72) * v13;
  return v20(v21, a1, v8);
}

uint64_t sub_1D2FE59C0(uint64_t a1, int a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1D2F0DD10(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D2F13D84();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v1sub_1D2FD62D8(0, 0) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_DWORD *)(v16[6] + 4 * v1sub_1D2FD62D8(0, 0) = a2;
    *(void *)(v16[7] + 8 * v1sub_1D2FD62D8(0, 0) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1D2F10554(result, a3 & 1);
  uint64_t result = sub_1D2F0DD10(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for SISchemaComponentName(0);
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

uint64_t sub_1D2FE5AF8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1D2FE638C(a1, a2, a3, (void (*)(void))sub_1D2F13A70, (void (*)(void))sub_1D2F0FC7C);
}

uint64_t sub_1D2FE5B24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_1D2F0DD14(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D2F1420C();
    goto LABEL_7;
  }
  sub_1D2F10C60(result, a3 & 1);
  uint64_t result = sub_1D2F0DD14(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  BOOL v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D2FE6940(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1D2FE5CC0(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_1D2F0DD14(a1);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    char v18 = v13;
    uint64_t v19 = v12[3];
    if (v19 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      BOOL v20 = *v4;
      if (v18)
      {
LABEL_8:
        *(double *)(v20[7] + 8 * v14) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= result && (a2 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1D2F14644();
      goto LABEL_7;
    }
    sub_1D2F11340(result, a2 & 1);
    uint64_t result = sub_1D2F0DD14(a1);
    if ((v18 & 1) == (v21 & 1))
    {
      unint64_t v14 = result;
      BOOL v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      return sub_1D2FE6BE0(v14, (uint64_t)v11, v20, a3);
    }
  }
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

uint64_t sub_1D2FE5E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1D2F0DC98(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1D2F148E4();
LABEL_7:
    uint64_t v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      unint64_t v23 = (void *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v23 = a1;
      v23[1] = a2;
      void v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_1D2F11754(v19, a6 & 1);
  unint64_t v25 = sub_1D2F0DC98(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a4;
  v27[1] = a5;
  unint64_t v28 = (void *)(v22[7] + 24 * v16);
  *unint64_t v28 = a1;
  v28[1] = a2;
  v28[2] = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v22[2] = v31;
  return swift_bridgeObjectRetain();
}

void sub_1D2FE6008(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_1D2FE6034(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1D2F0DEA4(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    char v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v24 = 8 * v14;
    *(void *)(v20[6] + v24) = a2;
    *(void *)(v20[7] + v24) = a1;
    uint64_t v25 = v20[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      void v20[2] = v27;
      return;
    }
    goto LABEL_14;
  }
  a5();
  unint64_t v22 = sub_1D2F0DEA4(a2);
  if ((v18 & 1) == (v23 & 1))
  {
    unint64_t v14 = v22;
    char v20 = (void *)*v8;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_1D30028B8();
  __break(1u);
}

uint64_t sub_1D2FE6188(int a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v27 = a2;
  uint64_t v9 = sub_1D30010A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v4;
  unint64_t v15 = sub_1D2F0DD14(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v5;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7] + 16 * v15;
      uint64_t result = swift_unknownObjectRelease();
      *(unsigned char *)uint64_t v22 = a1 & 1;
      *(unsigned char *)(v22 + 1) = BYTE1(a1) & 1;
      *(unsigned char *)(v22 + 2) = BYTE2(a1) & 1;
      *(unsigned char *)(v22 + 3) = HIBYTE(a1) & 1;
      *(void *)(v22 + 8) = v27;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1D2F14C6C();
    goto LABEL_7;
  }
  sub_1D2F11D40(v18, a4 & 1);
  unint64_t v24 = sub_1D2F0DD14(a3);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  uint64_t v21 = *v5;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_1D2FE6C98(v15, (uint64_t)v12, a1 & 0x1010101, v27, v21);
}

uint64_t sub_1D2FE6360(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1D2FE638C(a1, a2, a3, (void (*)(void))sub_1D2F14F88, (void (*)(void))sub_1D2F121C8);
}

uint64_t sub_1D2FE638C(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v27 = a5;
  uint64_t v28 = a1;
  uint64_t v7 = (void **)v5;
  uint64_t v10 = sub_1D30010A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = (void *)*v5;
  unint64_t v16 = sub_1D2F0DD14(a2);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = v28;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v27();
  unint64_t v25 = sub_1D2F0DD14(a2);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  return sub_1D2FE6940(v16, (uint64_t)v13, v28, v22);
}

void sub_1D2FE654C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1D2F0DC98(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D2F153C4();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1D2F124A8(v15, a4 & 1);
  unint64_t v20 = sub_1D2F0DC98(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1D30028B8();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_1D2FE66BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1D2F0DC98(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1D2F1557C();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1D2F127C0(result, a4 & 1);
  uint64_t result = sub_1D2F0DC98(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1D30028B8();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v18[2] = v23;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D2FE6820(unint64_t result, int a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(_DWORD *)(a4[6] + 4 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_1D2FE6864(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  uint64_t result = sub_1D2F15C78(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1D2FE6940(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1D30010A8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1D2FE69F8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_1D2FE6A40(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1D30010A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 72) * a1;
  v11(v8 + v12, a2, v9);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a4[7] + v12, a3, v9);
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

uint64_t sub_1D2FE6B20(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_1D30010A8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_1D2FE6BE0(unint64_t a1, uint64_t a2, void *a3, double a4)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a3[6];
  uint64_t v9 = sub_1D30010A8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(double *)(a3[7] + 8 * a1) = a4;
  uint64_t v11 = a3[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a3[2] = v13;
  }
  return result;
}

uint64_t sub_1D2FE6C98(unint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_1D30010A8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = a5[7] + 16 * a1;
  *(unsigned char *)uint64_t v13 = a3 & 1;
  *(unsigned char *)(v13 + 1) = BYTE1(a3) & 1;
  *(unsigned char *)(v13 + 2) = BYTE2(a3) & 1;
  *(unsigned char *)(v13 + 3) = HIBYTE(a3) & 1;
  *(void *)(v13 + 8) = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_1D2FE6D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v25 = a4;
  uint64_t v9 = sub_1D3002158();
  uint64_t v23 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  MEMORY[0x1F4188790](v9);
  BOOL v22 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D3002138();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1D3001A08();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_1D3000F18();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3;
  sub_1D3000EB8();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v17(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_filePath, v16, v13);
  sub_1D3000EB8();
  v17(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lockPath, v16, v13);
  sub_1D2F0BCB8(0, qword_1EBD635E0);
  sub_1D30019E8();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1D2FE8B54(&qword_1EBD635D8, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635C0);
  sub_1D2F6BA5C((unint64_t *)&unk_1EBD635C8, &qword_1EBD635C0);
  sub_1D30023A8();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v22, *MEMORY[0x1E4FBCC58], v24);
  *(void *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_queue) = sub_1D3002178();
  *(void *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_dispatchGroup) = dispatch_group_create();
  uint64_t v18 = v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_lock;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 48) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  *(_OWORD *)(v18 + 8sub_1D2FD62D8(0, 0) = 0u;
  *(_OWORD *)(v18 + 96) = 0u;
  *(_OWORD *)(v18 + 112) = 0u;
  *(_OWORD *)(v18 + 128) = 0u;
  *(_OWORD *)(v18 + 144) = 0u;
  *(_OWORD *)(v18 + 16sub_1D2FD62D8(0, 0) = 0u;
  *(_OWORD *)(v18 + 176) = 0u;
  *(void *)(v18 + 192) = 0;
  swift_beginAccess();
  pthread_rwlock_init((pthread_rwlock_t *)v18, 0);
  swift_endAccess();
  *(void *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarkFileLock) = v25;
  *(void *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumber) = 0;
  swift_retain();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_writeSequenceNumberLog) = sub_1D2F1F2E4(MEMORY[0x1E4FBC860]);
  *(void *)(v5 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics27FlatFileStreamBookmarkStore_bookmarks) = sub_1D2F1F3F8(v19);
  sub_1D2FE3F40();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
  return v5;
}

uint64_t sub_1D2FE71E0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FE71F4()
{
  return sub_1D2FE371C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_1D2FE7218()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FE7250()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC8D0]);
}

void sub_1D2FE7268(uint64_t a1, unint64_t a2)
{
  sub_1D2FE40F4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1D2FE7270()
{
  return objectdestroy_8Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_8Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  return MEMORY[0x1F4186498](v1, 32, 7);
}

void sub_1D2FE72D8(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_1D2FE72E0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2FE7318(uint64_t a1)
{
  return sub_1D2FE4BE4(a1);
}

uint64_t dispatch thunk of StreamBookmarkStore.write(bookmark:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StreamBookmarkStore.read(name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of StreamBookmarkStore.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StreamBookmarkStore.notifyOnComplete(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of StreamBookmarkStore.notifyOnComplete()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D2F1C2F4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of StreamBookmarkStore.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1D2FE7474()
{
  return type metadata accessor for FlatFileStreamBookmarkStore();
}

uint64_t sub_1D2FE747C()
{
  uint64_t result = sub_1D3000F18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FlatFileStreamBookmarkStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlatFileStreamBookmarkStore);
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.write(bookmark:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.read(name:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.refresh()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.notifyOnComplete(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of FlatFileStreamBookmarkStore.notifyOnComplete()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 296) + **(int **)(*(void *)v0 + 296));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1D2F1D1A0;
  return v4();
}

uint64_t sub_1D2FE7744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogicalClockTable.DeviceFixedContextTime();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2FE77A8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5EAA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2FE783C()
{
  return sub_1D3001EE8();
}

uint64_t sub_1D2FE78A4(id a1)
{
  uint64_t v2 = sub_1D3000F18();
  unint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v60 - v5;
  uint64_t v7 = sub_1D3000F28();
  unint64_t v21 = v20;
  uint64_t v22 = v7;
  sub_1D2F0BCB8(0, &qword_1EBD63338);
  type metadata accessor for StreamBookmarkCollection();
  sub_1D2F454DC(v22, v21);
  uint64_t v61 = v22;
  unint64_t v62 = v21;
  uint64_t v23 = (char *)sub_1D30020E8();
  if (!v23)
  {
    if (qword_1EBD5FC00 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1D3001918();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EBD5FBE0);
    (*(void (**)(char *, id, uint64_t))(v3 + 16))(v6, a1, v2);
    uint64_t v25 = sub_1D30018F8();
    os_log_type_t v26 = sub_1D30020B8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v65[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_1D2FE8B54((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
      uint64_t v29 = sub_1D3002738();
      v67[0] = sub_1D2F09508(v29, v30, v65);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      _os_log_impl(&dword_1D2F05000, v25, v26, "Cannot decode bookmarks read from path=%s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v28, -1, -1);
      MEMORY[0x1D942F2D0](v27, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }

    uint64_t v31 = (void *)sub_1D2F1F3F8(MEMORY[0x1E4FBC860]);
    uint64_t v33 = v61;
    unint64_t v32 = v62;
    sub_1D2F0D1CC(v61, v62);
    sub_1D2F0D1CC(v33, v32);
    return (uint64_t)v31;
  }
  uint64_t v34 = OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks;
  unint64_t v35 = *(void *)&v23[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks];
  long long v60 = v23;
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D30025A8();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for StreamBookmark();
  uint64_t v31 = (void *)sub_1D3001AA8();
  unint64_t v36 = *(void *)&v60[v34];
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_17;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v58 = v61;
    unint64_t v57 = v62;
    sub_1D2F0D1CC(v61, v62);
    sub_1D2F0D1CC(v58, v57);

    return (uint64_t)v31;
  }
  uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v37) {
    goto LABEL_39;
  }
LABEL_17:
  unint64_t v63 = v36;
  unint64_t v64 = v36 & 0xC000000000000001;
  uint64_t v38 = 4;
  while (1)
  {
    char v41 = v64 ? (char *)MEMORY[0x1D942E3A0](v38 - 4, v36) : (char *)*(id *)(v36 + 8 * v38);
    uint64_t v42 = v41;
    uint64_t v43 = v38 - 3;
    if (__OFADD__(v38 - 4, 1)) {
      break;
    }
    unint64_t v36 = v37;
    uint64_t v45 = *(void *)&v41[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
    uint64_t v44 = *(void *)&v41[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
    swift_bridgeObjectRetain();
    a1 = v42;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65[0] = (uint64_t)v31;
    unint64_t v3 = sub_1D2F0DC98(v45, v44);
    uint64_t v48 = v31[2];
    BOOL v49 = (v47 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49)) {
      goto LABEL_36;
    }
    uint64_t v42 = v47;
    if (v31[3] >= v50)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v31 = (void *)v65[0];
        if (v47) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_1D2F153C4();
        uint64_t v31 = (void *)v65[0];
        if (v42) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_1D2F124A8(v50, isUniquelyReferenced_nonNull_native);
      unint64_t v51 = sub_1D2F0DC98(v45, v44);
      if ((v42 & 1) != (v52 & 1))
      {
        uint64_t result = sub_1D30028B8();
        __break(1u);
        return result;
      }
      unint64_t v3 = v51;
      uint64_t v31 = (void *)v65[0];
      if (v42)
      {
LABEL_18:
        uint64_t v39 = v31[7];

        *(void *)(v39 + 8 * v3) = a1;
        goto LABEL_19;
      }
    }
    v31[(v3 >> 6) + 8] |= 1 << v3;
    uint64_t v53 = (uint64_t *)(v31[6] + 16 * v3);
    *uint64_t v53 = v45;
    v53[1] = v44;
    *(void *)(v31[7] + 8 * v3) = a1;
    uint64_t v54 = v31[2];
    BOOL v55 = __OFADD__(v54, 1);
    uint64_t v56 = v54 + 1;
    if (v55) {
      goto LABEL_37;
    }
    long long v31[2] = v56;
    swift_bridgeObjectRetain();
LABEL_19:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v38;
    uint64_t v37 = v36;
    BOOL v40 = v43 == v36;
    unint64_t v36 = v63;
    if (v40) {
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  swift_once();
  uint64_t v8 = sub_1D3001918();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBD5FBE0);
  (*(void (**)(void *, id, uint64_t))(v3 + 16))(v42, a1, v38);
  id v9 = (id)v36;
  id v10 = (id)v36;
  uint64_t v11 = sub_1D30018F8();
  os_log_type_t v12 = sub_1D30020A8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v67[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_1D2FE8B54((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
    uint64_t v15 = sub_1D3002738();
    v65[0] = sub_1D2F09508(v15, v16, v67);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v3 + 8))(v42, v38);
    *(_WORD *)(v13 + 12) = 2080;
    v65[0] = v36;
    v65[1] = 0;
    char v66 = 1;
    id v17 = (id)v36;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBD5FD30);
    uint64_t v18 = sub_1D3001BC8();
    v65[0] = sub_1D2F09508(v18, v19, v67);
    sub_1D3002318();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D2F05000, v11, v12, "Cannot read bookmarks from path=%s, error=%s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v14, -1, -1);
    MEMORY[0x1D942F2D0](v13, -1, -1);
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v3 + 8))(v42, v38);
  }
  uint64_t v31 = (void *)sub_1D2F1F3F8(MEMORY[0x1E4FBC860]);

  return (uint64_t)v31;
}

uint64_t sub_1D2FE8118()
{
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1D3000F18();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D2F9EDE0(v1);
  swift_bridgeObjectRelease();
  unint64_t v3 = (objc_class *)type metadata accessor for StreamBookmarkCollection();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics24StreamBookmarkCollection_bookmarks] = v2;
  v25.receiver = v4;
  v25.super_class = v3;
  id v5 = objc_msgSendSuper2(&v25, sel_init);
  uint64_t v6 = self;
  v26[0] = 0;
  id v7 = objc_msgSend(v6, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v5, 1, v26);
  id v8 = v26[0];
  if (v7)
  {
    uint64_t v9 = sub_1D3000F68();
    unint64_t v11 = v10;

    sub_1D2F454DC(v9, v11);
    sub_1D3000F78();
    sub_1D2F0D1CC(v9, v11);

    sub_1D2F0D1CC(v9, v11);
    return 1;
  }
  else
  {
    os_log_type_t v12 = v8;
    uint64_t v13 = (void *)sub_1D3000DF8();

    swift_willThrow();
    if (qword_1EBD5FC00 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1D3001918();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBD5FBE0);
    id v15 = v13;
    id v16 = v13;
    id v17 = sub_1D30018F8();
    os_log_type_t v18 = sub_1D30020B8();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      unint64_t v20 = (void *)swift_slowAlloc();
      v26[0] = v20;
      *(_DWORD *)unint64_t v19 = 136315138;
      id v21 = v13;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v22 = sub_1D3001BC8();
      sub_1D2F09508(v22, v23, (uint64_t *)v26);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v17, v18, "Cannot encode bookmarks, error=%s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v20, -1, -1);
      MEMORY[0x1D942F2D0](v19, -1, -1);
    }
    else
    {
    }
    return 0;
  }
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D2FE87AC(uint64_t a1, unint64_t a2)
{
  sub_1D2FE37FC(a1, a2, *(void *)(v2 + 16), *(char **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1D2FE87B8(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D3000F18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D2FE78A4(a1);
  uint64_t v12 = *(void *)&a2[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name];
  unint64_t v11 = *(void *)&a2[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics14StreamBookmark_name + 8];
  swift_bridgeObjectRetain();
  uint64_t v13 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = v10;
  sub_1D2FE654C((uint64_t)v13, v12, v11, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v15 = sub_1D2FE8118();
  swift_bridgeObjectRelease();
  if (v15)
  {
    if (qword_1EBD5FC00 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D3001918();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBD5FBE0);
    (*(void (**)(char *, void *, uint64_t))(v7 + 16))(v9, a1, v6);
    id v17 = v13;
    os_log_type_t v18 = sub_1D30018F8();
    os_log_type_t v19 = sub_1D30020A8();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v28 = a3;
      uint64_t v22 = v21;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v32 = v30;
      *(_DWORD *)uint64_t v22 = 136315650;
      int v29 = v20;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1D2F09508(v12, v11, &v32);
      sub_1D3002318();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      uint64_t v31 = v28;
      sub_1D3002318();
      *(_WORD *)(v22 + 22) = 2080;
      sub_1D2FE8B54((unint64_t *)&qword_1EBD5F778, MEMORY[0x1E4F276F0]);
      uint64_t v23 = sub_1D3002738();
      uint64_t v31 = sub_1D2F09508(v23, v24, &v32);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl(&dword_1D2F05000, v18, (os_log_type_t)v29, "Updated a bookmark, name=%s, sequenceNum=%ld, path=%s", (uint8_t *)v22, 0x20u);
      uint64_t v25 = v30;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v25, -1, -1);
      MEMORY[0x1D942F2D0](v22, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return v15 & 1;
}

uint64_t sub_1D2FE8B54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void __swiftcall TrialEnrollment.init(treatmentId:experimentId:rolloutId:)(SiriPrivateLearningAnalytics::TrialEnrollment *__return_ptr retstr, Swift::String_optional treatmentId, Swift::String_optional experimentId, Swift::String_optional rolloutId)
{
  retstr->treatmentId = treatmentId;
  retstr->experimentId = experimentId;
  retstr->rolloutId = rolloutId;
}

void sub_1D2FE8BB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 2;
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 8) + 8) + 24))(v4);
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v27 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 32))(*v1, v8, v5, v6);
  uint64_t v10 = v9;
  uint64_t v11 = v1[5];
  uint64_t v12 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(v7, v8, v11, v12);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = objc_msgSend(v13, sel_experimentId);

    uint64_t v16 = sub_1D3001B78();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v20 = v1[5];
  uint64_t v19 = v1[6];
  __swift_project_boxed_opaque_existential_1(v2, v20);
  uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 48))(v7, v8, v20, v19);
  uint64_t v22 = v21;
  if (v21)
  {
    id v23 = objc_msgSend(v21, sel_rolloutId);

    uint64_t v22 = (void *)sub_1D3001B78();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v25 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[8] = v27;
  v1[9] = v10;
  v1[10] = v16;
  v1[11] = v18;
  v1[12] = v22;
  v1[13] = v25;
  uint64_t v26 = sub_1D2FE8F68();
  swift_bridgeObjectRelease();
  v1[7] = v26;
  sub_1D2FE9274();
}

uint64_t sub_1D2FE8DC8@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_clientWithIdentifier_, 112);
  v4[3] = sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD639E8);
  v4[4] = &off_1F2A1C598;
  v4[0] = v2;
  sub_1D2F37950((uint64_t)v4, a1 + 16);
  *(void *)a1 = 0xD000000000000027;
  *(void *)(a1 + 8) = 0x80000001D3013540;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_1D2FD62D8(0, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 56) = sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  sub_1D2FE8BB4();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1D2FE8E98@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_clientWithIdentifier_, 276);
  v4[3] = sub_1D2F0BCB8(0, (unint64_t *)&qword_1EBD639E8);
  v4[4] = &off_1F2A1C598;
  v4[0] = v2;
  sub_1D2F37950((uint64_t)v4, a1 + 16);
  *(void *)a1 = 0xD00000000000002ALL;
  *(void *)(a1 + 8) = 0x80000001D3013570;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 8sub_1D2FD62D8(0, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 56) = sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  sub_1D2FE8BB4();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
}

uint64_t sub_1D2FE8F68()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  unint64_t isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(void, void, uint64_t, uint64_t))(v2 + 56))(*v0, v0[1], v1, v2);
  uint64_t v4 = (void *)sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1D30025A8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v4;
  }
  uint64_t v5 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_30;
  }
LABEL_3:
  unint64_t v37 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v6 = 4;
  uint64_t v7 = &selRef_flowState;
  uint64_t v34 = v5;
  unint64_t v35 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    if (v37) {
      id v8 = (id)MEMORY[0x1D942E3A0](v6 - 4, isUniquelyReferenced_nonNull_native);
    }
    else {
      id v8 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v6);
    }
    uint64_t v9 = v8;
    uint64_t v10 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    id v11 = [v8 v7[98]];
    if (!v11) {
      break;
    }
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_name);

    if (v13)
    {
      uint64_t v14 = sub_1D3001B78();
      uint64_t v16 = v15;

      id v17 = objc_msgSend(v9, sel_level);
      if (v17)
      {
        id v36 = v17;
        unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = v14;
        unint64_t v20 = sub_1D2F0DC98(v14, v16);
        uint64_t v21 = v4[2];
        BOOL v22 = (v19 & 1) == 0;
        uint64_t v23 = v21 + v22;
        if (__OFADD__(v21, v22)) {
          goto LABEL_27;
        }
        char v24 = v19;
        if (v4[3] >= v23)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v19 & 1) == 0) {
              goto LABEL_23;
            }
          }
          else
          {
            sub_1D2F153B8();
            if ((v24 & 1) == 0) {
              goto LABEL_23;
            }
          }
        }
        else
        {
          sub_1D2F1249C(v23, isUniquelyReferenced_nonNull_native);
          unint64_t v25 = sub_1D2F0DC98(v18, v16);
          if ((v24 & 1) != (v26 & 1)) {
            goto LABEL_32;
          }
          unint64_t v20 = v25;
          if ((v24 & 1) == 0)
          {
LABEL_23:
            v4[(v20 >> 6) + 8] |= 1 << v20;
            int v29 = (uint64_t *)(v4[6] + 16 * v20);
            *int v29 = v18;
            v29[1] = v16;
            *(void *)(v4[7] + 8 * v2sub_1D2FD62D8(0, 0) = v36;
            uint64_t v30 = v4[2];
            BOOL v31 = __OFADD__(v30, 1);
            uint64_t v32 = v30 + 1;
            if (v31) {
              goto LABEL_28;
            }
            uint64_t v4[2] = v32;
            swift_bridgeObjectRetain();
            goto LABEL_25;
          }
        }
        uint64_t v27 = v4[7];
        uint64_t v28 = 8 * v20;

        *(void *)(v27 + v28) = v36;
LABEL_25:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = v34;
        unint64_t isUniquelyReferenced_nonNull_native = v35;
        uint64_t v7 = &selRef_flowState;
        goto LABEL_5;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
LABEL_5:
    ++v6;
    if (v10 == v5) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_32:
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

void sub_1D2FE9274()
{
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1D3001918();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBD65778);
  sub_1D2FEBC7C(v0, (uint64_t)v8);
  uint64_t v2 = sub_1D30018F8();
  os_log_type_t v3 = sub_1D30020A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v7 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    Swift::String v6 = TrialManager.makeLogString()();
    sub_1D2F09508(v6._countAndFlagsBits, (unint64_t)v6._object, &v7);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2FEBCB4((uint64_t)v8);
    _os_log_impl(&dword_1D2F05000, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v5, -1, -1);
    MEMORY[0x1D942F2D0](v4, -1, -1);
  }
  else
  {
    sub_1D2FEBCB4((uint64_t)v8);
  }
}

uint64_t sub_1D2FE9410(void *a1, void (*a2)(void *))
{
  v9[3] = &type metadata for DefaultTrialNotificationToken;
  v9[4] = &off_1F2A1C860;
  v9[0] = objc_msgSend(a1, sel_token);
  swift_unknownObjectRetain();
  id v4 = objc_msgSend(a1, sel_namespaceName);
  uint64_t v5 = sub_1D3001B78();
  uint64_t v7 = v6;

  v9[5] = v5;
  v9[6] = v7;
  a2(v9);
  swift_unknownObjectRelease();
  return sub_1D2FD9130((uint64_t)v9);
}

uint64_t TrialNamespaceUpdate.init(token:namespace:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1D2F0BE68(a1, a4);
  *(void *)(a4 + 4sub_1D2FD62D8(0, 0) = a2;
  *(void *)(a4 + 48) = a3;
  return result;
}

void sub_1D2FE950C(uint64_t a1)
{
  sub_1D2F37950(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699FB8);
  if (swift_dynamicCast())
  {
    uint64_t v3 = v1[5];
    uint64_t v4 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24);
    uint64_t v6 = swift_unknownObjectRetain();
    v5(v6, v3, v4);
    swift_unknownObjectRelease_n();
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1D3001918();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
    sub_1D2F37950(a1, (uint64_t)v15);
    id v8 = sub_1D30018F8();
    os_log_type_t v9 = sub_1D30020B8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA699FC0);
      uint64_t v12 = sub_1D3001BC8();
      sub_1D2F09508(v12, v13, &v14);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
      _os_log_impl(&dword_1D2F05000, v8, v9, "Cannot extract Trial notification token: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v11, -1, -1);
      MEMORY[0x1D942F2D0](v10, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
    }
  }
}

Swift::String __swiftcall TrialManager.makeLogString()()
{
  sub_1D3002438();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  sub_1D3001C68();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v7 = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v6) {
      goto LABEL_21;
    }
    unint64_t v16 = *(void *)(v2 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v6) {
        goto LABEL_21;
      }
      unint64_t v16 = *(void *)(v2 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v6) {
          goto LABEL_21;
        }
        unint64_t v16 = *(void *)(v2 + 8 * v9);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = *(void **)(*(void *)(v1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    id v13 = v12;
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    id v14 = objc_msgSend(v13, sel_description, 538976288, 0xE400000000000000);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D3001C68();
    sub_1D3001C68();

    uint64_t v7 = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v6)
  {
LABEL_21:
    swift_release();
    uint64_t v7 = 0;
    id v8 = (void *)0xE000000000000000;
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v2 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_21;
    }
    unint64_t v16 = *(void *)(v2 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result._object = v8;
  result._uint64_t countAndFlagsBits = v7;
  return result;
}

unint64_t TrialEnrollment.description.getter()
{
  return 0xD000000000000010;
}

uint64_t TrialEnrollment.treatmentId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrialEnrollment.experimentId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TrialEnrollment.rolloutId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D2FE9DBC()
{
  uint64_t v1 = 0x656D697265707865;
  if (*v0 != 1) {
    uint64_t v1 = 0x4974756F6C6C6F72;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E656D7461657274;
  }
}

uint64_t sub_1D2FE9E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D2FEBA7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D2FE9E54(uint64_t a1)
{
  unint64_t v2 = sub_1D2FEB0A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D2FE9E90(uint64_t a1)
{
  unint64_t v2 = sub_1D2FEB0A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TrialEnrollment.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699F80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2FEB0A8();
  sub_1D30029B8();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_1D30026C8();
  if (!v9)
  {
    char v13 = 1;
    sub_1D30026C8();
    char v12 = 2;
    sub_1D30026C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TrialEnrollment.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699F90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D2FEB0A8();
  sub_1D3002998();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_1D3002668();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1D3002668();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_1D3002668();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2FEA314@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrialEnrollment.init(from:)(a1, a2);
}

uint64_t sub_1D2FEA32C(void *a1)
{
  return TrialEnrollment.encode(to:)(a1);
}

uint64_t TrialNamespaceUpdate.token.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F37950(v1, a1);
}

uint64_t TrialNamespaceUpdate.namespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1D2FEA398(uint64_t *a1@<X0>, uint64_t a2@<X3>, NSObject *a3@<X8>)
{
  os_log_t v57 = a3;
  uint64_t v61 = *a1;
  uint64_t v5 = *(void *)(v61 + 80);
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v56 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v58 = (char *)&v53 - v8;
  uint64_t v9 = sub_1D30022F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v53 - v11;
  unint64_t v13 = a1[3];
  uint64_t v14 = *(uint64_t (**)(void))(a2 + 64);
  uint64_t v59 = a1[2];
  unint64_t v60 = v13;
  uint64_t v15 = v14();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 + 88) + 8))(v15, v5);
    uint64_t v17 = v62;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v12, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1D3001918();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EBD65778);
      swift_retain_n();
      id v19 = v16;
      unint64_t v20 = sub_1D30018F8();
      uint64_t v21 = (uint64_t)v16;
      os_log_type_t v22 = sub_1D30020B8();
      if (os_log_type_enabled(v20, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = (void *)swift_slowAlloc();
        uint64_t v62 = swift_slowAlloc();
        uint64_t v64 = v62;
        *(_DWORD *)uint64_t v23 = 136315650;
        uint64_t v61 = v21;
        unint64_t v25 = v60;
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1D2F09508(v59, v25, &v64);
        sub_1D3002318();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        uint64_t v63 = v5;
        swift_getMetatypeMetadata();
        uint64_t v26 = sub_1D3001BC8();
        uint64_t v63 = sub_1D2F09508(v26, v27, &v64);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 22) = 2112;
        uint64_t v63 = (uint64_t)v19;
        id v28 = v19;
        sub_1D3002318();
        *uint64_t v24 = v61;

        _os_log_impl(&dword_1D2F05000, v20, v22, "Trial: Factor %s retrieved from trial but value did not match requested type %s. Raw Level: %@", (uint8_t *)v23, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v24, -1, -1);
        uint64_t v29 = v62;
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v29, -1, -1);
        MEMORY[0x1D942F2D0](v23, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      sub_1D2FEBC28();
      swift_allocError();
      *char v52 = 1;
      swift_willThrow();
    }
    else
    {
      os_log_t v36 = v57;
      (*(void (**)(os_log_t, char *, uint64_t))(v17 + 32))(v57, v12, v5);
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1D3001918();
      __swift_project_value_buffer(v37, (uint64_t)qword_1EBD65778);
      uint64_t v38 = *(void (**)(char *, os_log_t, uint64_t))(v17 + 16);
      uint64_t v39 = v58;
      v38(v58, v36, v5);
      swift_retain();
      BOOL v40 = sub_1D30018F8();
      os_log_type_t v41 = sub_1D30020A8();
      int v42 = v41;
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v43 = swift_slowAlloc();
        BOOL v55 = (void (*)(char *, char *, uint64_t))v38;
        uint64_t v44 = v43;
        uint64_t v61 = swift_slowAlloc();
        uint64_t v64 = v61;
        *(_DWORD *)uint64_t v44 = 136315394;
        uint64_t v54 = v5;
        os_log_t v57 = v40;
        unint64_t v45 = v60;
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1D2F09508(v59, v45, &v64);
        LODWORD(v59) = v42;
        sub_1D3002318();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 12) = 2080;
        uint64_t v46 = v54;
        v55(v56, v39, v54);
        uint64_t v47 = sub_1D3001BC8();
        uint64_t v63 = sub_1D2F09508(v47, v48, &v64);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v39, v46);
        os_log_t v49 = v57;
        _os_log_impl(&dword_1D2F05000, v57, (os_log_type_t)v59, "Trial: Factor %s retrieved from trial. Value is %s", (uint8_t *)v44, 0x16u);
        uint64_t v50 = v61;
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v50, -1, -1);
        MEMORY[0x1D942F2D0](v44, -1, -1);
      }
      else
      {
        swift_release();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v39, v5);
      }
    }
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1D3001918();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EBD65778);
    swift_retain();
    BOOL v31 = sub_1D30018F8();
    os_log_type_t v32 = sub_1D30020A8();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v64 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      unint64_t v35 = v60;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1D2F09508(v59, v35, &v64);
      sub_1D3002318();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v31, v32, "Trial: Failed to retrieve %s from trial. No matching factor found.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v34, -1, -1);
      MEMORY[0x1D942F2D0](v33, -1, -1);
    }
    else
    {

      swift_release();
    }
    sub_1D2FEBC28();
    swift_allocError();
    unsigned char *v51 = 0;
    swift_willThrow();
  }
}

id sub_1D2FEAC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *v5;
  uint64_t v10 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  v14[4] = a4;
  void v14[5] = a5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1D2F7E64C;
  uint64_t v14[3] = &block_descriptor_15;
  uint64_t v11 = _Block_copy(v14);
  swift_retain();
  id v12 = objc_msgSend(v9, sel_addUpdateHandlerForNamespaceName_queue_usingBlock_, v10, a3, v11);

  _Block_release(v11);
  swift_release();
  return v12;
}

id sub_1D2FEAD68(uint64_t a1)
{
  return objc_msgSend(*v1, sel_removeUpdateHandlerForToken_, a1);
}

uint64_t sub_1D2FEAD7C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v3 = objc_msgSend(v1, sel_treatmentIdWithNamespaceName_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1D3001B78();

  return v4;
}

id sub_1D2FEADFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2FEAE14(a1, a2, a3, a4, (SEL *)&selRef_experimentIdentifiersWithNamespaceName_);
}

id sub_1D2FEAE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2FEAE14(a1, a2, a3, a4, (SEL *)&selRef_rolloutIdentifiersWithNamespaceName_);
}

id sub_1D2FEAE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7 = *v5;
  uint64_t v8 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v9 = objc_msgSend(v7, *a5, v8);

  return v9;
}

uint64_t sub_1D2FEAE6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v3 = objc_msgSend(v1, sel_factorLevelsWithNamespaceName_, v2);

  sub_1D2F0BCB8(0, &qword_1EBD63580);
  uint64_t v4 = sub_1D3001DC8();

  return v4;
}

id sub_1D2FEAEE8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v4 = objc_msgSend(v1, sel_levelForFactor_withNamespaceName_, v2, v3);

  return v4;
}

void protocol witness for TrialFactorResolving.resolveFactor<A>(factor:scope:) in conformance TRIClient(uint64_t *a1@<X0>, NSObject *a2@<X8>)
{
}

id sub_1D2FEAF84()
{
  return objc_msgSend(*v0, sel_refresh);
}

uint64_t _s28SiriPrivateLearningAnalytics15TrialEnrollmentV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v12 = a2[5];
  if (!v3)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v8) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_1D3002778(), uint64_t result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11) {
        return 0;
      }
      if (v4 != v9 || v6 != v11)
      {
        char v15 = sub_1D3002778();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_1D3002778() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1D2FEB0A8()
{
  unint64_t result = qword_1EA699F88;
  if (!qword_1EA699F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699F88);
  }
  return result;
}

uint64_t destroy for TrialManager(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrialManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 4sub_1D2FD62D8(0, 0) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1D2FD62D8(0, 0) = v10;
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TrialManager(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrialManager(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_1D2FD62D8(0, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TrialManager()
{
  return &type metadata for TrialManager;
}

uint64_t destroy for TrialEnrollment()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TrialEnrollment(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TrialEnrollment(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for TrialEnrollment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialEnrollment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialEnrollment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 4sub_1D2FD62D8(0, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialEnrollment()
{
  return &type metadata for TrialEnrollment;
}

uint64_t destroy for TrialNamespaceUpdate(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrialNamespaceUpdate(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for TrialNamespaceUpdate(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrialNamespaceUpdate(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialNamespaceUpdate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialNamespaceUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_1D2FD62D8(0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialNamespaceUpdate()
{
  return &type metadata for TrialNamespaceUpdate;
}

uint64_t sub_1D2FEB7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t sub_1D2FEB7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D2FEB7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1D2FEB810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1D2FEB824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1D2FEB838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1D2FEB84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

ValueMetadata *type metadata accessor for DefaultTrialNotificationToken()
{
  return &type metadata for DefaultTrialNotificationToken;
}

unsigned char *storeEnumTagSinglePayload for TrialEnrollment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FEB93CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialEnrollment.CodingKeys()
{
  return &type metadata for TrialEnrollment.CodingKeys;
}

unint64_t sub_1D2FEB978()
{
  unint64_t result = qword_1EA699F98;
  if (!qword_1EA699F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699F98);
  }
  return result;
}

unint64_t sub_1D2FEB9D0()
{
  unint64_t result = qword_1EA699FA0;
  if (!qword_1EA699FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699FA0);
  }
  return result;
}

unint64_t sub_1D2FEBA28()
{
  unint64_t result = qword_1EA699FA8;
  if (!qword_1EA699FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699FA8);
  }
  return result;
}

uint64_t sub_1D2FEBA7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656D7461657274 && a2 == 0xEB00000000644974;
  if (v2 || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D697265707865 && a2 == 0xEC0000006449746ELL || (sub_1D3002778() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4974756F6C6C6F72 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

unint64_t sub_1D2FEBC28()
{
  unint64_t result = qword_1EBD63408;
  if (!qword_1EBD63408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD63408);
  }
  return result;
}

uint64_t sub_1D2FEBC7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1D2FEBCB4(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for TrialFactorResolutionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D2FEBDB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialFactorResolutionError()
{
  return &type metadata for TrialFactorResolutionError;
}

unint64_t sub_1D2FEBDEC()
{
  unint64_t result = qword_1EA699FD0;
  if (!qword_1EA699FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA699FD0);
  }
  return result;
}

_OWORD *TrialStatusResolver.__allocating_init()()
{
  uint64_t v0 = (_OWORD *)swift_allocObject();
  v0[8] = 0u;
  v0[9] = 0u;
  *(_OWORD *)((char *)v0 + 154) = 0u;
  sub_1D2FE8DC8((uint64_t)(v0 + 1));
  return v0;
}

_OWORD *TrialPrivateLearningSuggestionsStatusResolver.__allocating_init()()
{
  uint64_t v0 = (_OWORD *)swift_allocObject();
  v0[8] = 0u;
  v0[9] = 0u;
  *(_OWORD *)((char *)v0 + 153) = 0u;
  sub_1D2FE8E98((uint64_t)(v0 + 1));
  return v0;
}

_OWORD *TrialStatusResolver.init()()
{
  uint64_t v1 = v0;
  *(_OWORD *)((char *)v0 + 154) = 0u;
  v0[8] = 0u;
  v0[9] = 0u;
  id v2 = objc_msgSend(self, sel_clientWithIdentifier_, 112);
  v7[3] = sub_1D2F1DBA0();
  v7[4] = &off_1F2A1C598;
  v7[0] = v2;
  sub_1D2F37950((uint64_t)v7, (uint64_t)v9);
  *(void *)&long long v8 = 0xD000000000000027;
  *((void *)&v8 + 1) = 0x80000001D3013540;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  *((void *)&v10 + 1) = sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  sub_1D2FE8BB4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  long long v3 = v12;
  v1[5] = v11;
  v1[6] = v3;
  v1[7] = v13;
  long long v4 = v9[0];
  v1[1] = v8;
  v1[2] = v4;
  long long v5 = v10;
  v1[3] = v9[1];
  v1[4] = v5;
  return v1;
}

__n128 TrialStatusResolver.__allocating_init(trialManager:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 154) = 0u;
  long long v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v2 + 8sub_1D2FD62D8(0, 0) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 96) = v3;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 96);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  __n128 result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v2 + 64) = result;
  return result;
}

_OWORD *TrialStatusResolver.init(trialManager:)(_OWORD *a1)
{
  *(_OWORD *)((char *)v1 + 154) = 0u;
  v1[8] = 0u;
  v1[9] = 0u;
  long long v2 = a1[5];
  v1[5] = a1[4];
  v1[6] = v2;
  v1[7] = a1[6];
  long long v3 = a1[1];
  v1[1] = *a1;
  v1[2] = v3;
  long long v4 = a1[3];
  v1[3] = a1[2];
  v1[4] = v4;
  return v1;
}

unint64_t sub_1D2FEC05C()
{
  return sub_1D2FEC97C(0xD00000000000002ELL, 0x80000001D300D800, 0xD000000000000030, 0x80000001D3013DF0);
}

uint64_t sub_1D2FEC094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unsigned __int8 a6)
{
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1D2F0DC98(a2, a3);
    if (v13)
    {
      id v14 = *(id *)(*(void *)(a1 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1D3001918();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBD65778);
      id v16 = v14;
      swift_bridgeObjectRetain_n();
      id v17 = v16;
      uint64_t v18 = sub_1D30018F8();
      os_log_type_t v19 = sub_1D30020A8();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v31 = v21;
        *(_DWORD *)uint64_t v20 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1D2F09508(a4, a5, &v31);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v20 + 12) = 1024;
        unsigned int v22 = objc_msgSend(v17, sel_BOOLeanValue, v30, v31);

        LODWORD(v29) = v22;
        sub_1D3002318();

        _os_log_impl(&dword_1D2F05000, v18, v19, "Trial: Factor %s retrieved from trial. Level is %{BOOL}d", (uint8_t *)v20, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v21, -1, -1);
        MEMORY[0x1D942F2D0](v20, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a6 = objc_msgSend(v17, sel_BOOLeanValue, v29);

      return a6 & 1;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1D3001918();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_1D30018F8();
  os_log_type_t v25 = sub_1D30020B8();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v31 = v27;
    *(_DWORD *)uint64_t v26 = 136315394;
    swift_bridgeObjectRetain();
    sub_1D2F09508(a4, a5, &v31);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 1024;
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v24, v25, "Trial: Factor was not retrieved from trial. Using default level for %s: %{BOOL}d", (uint8_t *)v26, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v27, -1, -1);
    MEMORY[0x1D942F2D0](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a6 & 1;
}

unint64_t sub_1D2FEC480()
{
  return sub_1D2FEC97C(0xD000000000000021, 0x80000001D300D830, 0xD000000000000021, 0x80000001D3013E30);
}

uint64_t sub_1D2FEC4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2FECB64(a1, a2, a3, (void (*)(void))sub_1D2FEC4F0, (uint64_t)&unk_1F2A1C930, (uint64_t)sub_1D2FEC80C);
}

uint64_t sub_1D2FEC4F4(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  char v7 = sub_1D2FEC094(v6, a1, a2, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t TrialStatusResolver.__deallocating_deinit()
{
  return sub_1D2FECDC8();
}

unint64_t sub_1D2FEC57C(uint64_t a1, uint64_t a2)
{
  return sub_1D2FECE4C(a1, a2, 0xD00000000000002ELL, 0x80000001D300D800, 0xD000000000000030, 0x80000001D3013DF0);
}

uint64_t sub_1D2FEC5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 120);
  *(void *)a1 = *(void *)(v3 + 80);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 104);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2FEC634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2FEC4BC(a1, a2, a3);
}

uint64_t sub_1D2FEC658(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  char v7 = sub_1D2FEC094(v6, a1, a2, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

_OWORD *TrialPrivateLearningSuggestionsStatusResolver.init()()
{
  uint64_t v1 = v0;
  *(_OWORD *)((char *)v0 + 153) = 0u;
  v0[8] = 0u;
  v0[9] = 0u;
  id v2 = objc_msgSend(self, sel_clientWithIdentifier_, 276);
  v7[3] = sub_1D2F1DBA0();
  v7[4] = &off_1F2A1C598;
  v7[0] = v2;
  sub_1D2F37950((uint64_t)v7, (uint64_t)v9);
  *(void *)&long long v8 = 0xD00000000000002ALL;
  *((void *)&v8 + 1) = 0x80000001D3013570;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  *((void *)&v10 + 1) = sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  sub_1D2FE8BB4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  long long v3 = v12;
  v1[5] = v11;
  v1[6] = v3;
  v1[7] = v13;
  long long v4 = v9[0];
  v1[1] = v8;
  v1[2] = v4;
  long long v5 = v10;
  v1[3] = v9[1];
  v1[4] = v5;
  return v1;
}

uint64_t sub_1D2FEC7D4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2FEC80C(void *a1)
{
  return sub_1D2FE9410(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1D2FEC814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FDD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2FEC87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FDD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2FEC8E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FDD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D2FEC944()
{
  return sub_1D2FEC97C(0xD00000000000001CLL, 0x80000001D300D910, 0xD00000000000001ELL, 0x80000001D3013E60);
}

unint64_t sub_1D2FEC97C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  LOBYTE(a4) = sub_1D2FEC094(v8, a1, a2, a3, a4, 0);
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_1D2FECA08@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 80);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2FECA80()
{
  return swift_endAccess();
}

uint64_t sub_1D2FECAC8()
{
  swift_beginAccess();
  sub_1D2FEBC7C(v0 + 16, (uint64_t)v3);
  uint64_t countAndFlagsBits = TrialManager.makeLogString()()._countAndFlagsBits;
  sub_1D2FEBCB4((uint64_t)v3);
  return countAndFlagsBits;
}

uint64_t sub_1D2FECB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2FECB64(a1, a2, a3, (void (*)(void))sub_1D2FEC4F0, (uint64_t)&unk_1F2A1C958, (uint64_t)sub_1D2FEFA0C);
}

uint64_t sub_1D2FECB64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  a4();
  swift_beginAccess();
  sub_1D2FEBC7C(v6 + 16, (uint64_t)v20);
  sub_1D2F37950((uint64_t)&v21, (uint64_t)v22);
  long long v10 = v23;
  long long v11 = v24;
  __swift_project_boxed_opaque_existential_1(v22, (uint64_t)v23);
  uint64_t v13 = v20[0];
  uint64_t v12 = v20[1];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **))v11[2];
  swift_retain();
  uint64_t v16 = v15(v13, v12, a1, a6, v14, v10, v11);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  uint64_t v23 = &type metadata for DefaultTrialNotificationToken;
  uint64_t v24 = &off_1F2A1C860;
  v22[0] = v16;
  sub_1D2FEBCB4((uint64_t)v20);
  swift_beginAccess();
  sub_1D2FEC814((uint64_t)v22, v7 + 128);
  return swift_endAccess();
}

uint64_t sub_1D2FECCBC()
{
  swift_beginAccess();
  sub_1D2FEC87C(v0 + 128, (uint64_t)&v2);
  if (*((void *)&v3 + 1))
  {
    sub_1D2F0BE68(&v2, (uint64_t)v5);
    swift_beginAccess();
    sub_1D2FEBC7C(v0 + 16, (uint64_t)&v2);
    sub_1D2FE950C((uint64_t)v5);
    sub_1D2FEBCB4((uint64_t)&v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  }
  else
  {
    sub_1D2FEC8E4((uint64_t)&v2);
  }
  uint64_t v4 = 0;
  long long v2 = 0u;
  long long v3 = 0u;
  swift_beginAccess();
  sub_1D2FEC814((uint64_t)&v2, v0 + 128);
  return swift_endAccess();
}

uint64_t TrialPrivateLearningSuggestionsStatusResolver.deinit()
{
  sub_1D2FEBCB4(v0 + 16);
  sub_1D2FEC8E4(v0 + 128);
  return v0;
}

uint64_t TrialPrivateLearningSuggestionsStatusResolver.__deallocating_deinit()
{
  return sub_1D2FECDC8();
}

uint64_t sub_1D2FECDC8()
{
  sub_1D2FEBCB4(v0 + 16);
  sub_1D2FEC8E4(v0 + 128);
  return swift_deallocClassInstance();
}

unint64_t sub_1D2FECE14(uint64_t a1, uint64_t a2)
{
  return sub_1D2FECE4C(a1, a2, 0xD00000000000001CLL, 0x80000001D300D910, 0xD00000000000001ELL, 0x80000001D3013E60);
}

unint64_t sub_1D2FECE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  LOBYTE(a6) = sub_1D2FEC094(v10, a3, a4, a5, a6, 0);
  swift_bridgeObjectRelease();
  return a6 & 1;
}

uint64_t sub_1D2FECEDC()
{
  return swift_endAccess();
}

uint64_t sub_1D2FECF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2FECB30(a1, a2, a3);
}

uint64_t sub_1D2FECF4C()
{
  return sub_1D2FEC4F0();
}

uint64_t TrialSiriUnderstandingTMDCStatusResolver.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TrialSiriUnderstandingTMDCStatusResolver.init()();
  return v0;
}

_OWORD *TrialSiriUnderstandingTMDCStatusResolver.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D3001158();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_currentLocale);
  sub_1D30010E8();

  id v6 = objc_msgSend(self, sel_sharedPreferences);
  CurrentLocales.init(deviceLocale:siriPreferences:)((uint64_t)v4, v6, (uint64_t)&v15);
  long long v7 = v17;
  long long v8 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1[1] = v7;
  v1[2] = v8;
  id v9 = objc_msgSend(self, sel_clientWithIdentifier_, 115);
  uint64_t v14[3] = sub_1D2F1DBA0();
  v14[4] = &off_1F2A1C598;
  v14[0] = v9;
  sub_1D2F37950((uint64_t)v14, (uint64_t)&v16);
  *(void *)&long long v15 = 0xD000000000000017;
  *((void *)&v15 + 1) = 0x80000001D3013E80;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  *((void *)&v18 + 1) = sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  sub_1D2FE8BB4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
  long long v10 = v20;
  v1[7] = v19;
  v1[8] = v10;
  v1[9] = v21;
  long long v11 = v16;
  v1[3] = v15;
  v1[4] = v11;
  long long v12 = v18;
  v1[5] = v17;
  v1[6] = v12;
  return v1;
}

double sub_1D2FED1C0()
{
  double v1 = sub_1D2FED230(*(void *)(v0 + 104), 0x7365726854703270, 0xEC000000646C6F68, 0x7365726854703270, 0xEE002928646C6F68, 2.0);
  return sub_1D2FEDEB4(v1, 2.0);
}

double sub_1D2FED230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, double a6)
{
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1D2F0DC98(a2, a3);
    if (v13)
    {
      id v14 = *(id *)(*(void *)(a1 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1D3001918();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBD65778);
      id v16 = v14;
      swift_bridgeObjectRetain_n();
      id v17 = v16;
      long long v18 = sub_1D30018F8();
      os_log_type_t v19 = sub_1D30020A8();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v32 = v21;
        *(_DWORD *)uint64_t v20 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_1D2F09508(a4, a5, &v32);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v20 + 12) = 2048;
        objc_msgSend(v17, sel_doubleValue, v31, v32);
        uint64_t v30 = v22;
        sub_1D3002318();

        _os_log_impl(&dword_1D2F05000, v18, v19, "Trial: Factor %s retrieved from trial. Value is %f", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v21, -1, -1);
        MEMORY[0x1D942F2D0](v20, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      objc_msgSend(v17, sel_doubleValue, v30);
      a6 = v28;

      return a6;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1D3001918();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_1D30018F8();
  os_log_type_t v25 = sub_1D30020B8();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v26 = 136315394;
    swift_bridgeObjectRetain();
    sub_1D2F09508(a4, a5, &v32);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2048;
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v24, v25, "Trial: Factor was not retrieved from trial. Using default level for %s: %f", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v27, -1, -1);
    MEMORY[0x1D942F2D0](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a6;
}

double sub_1D2FED628()
{
  double v1 = sub_1D2FED230(*(void *)(v0 + 104), 0xD000000000000016, 0x80000001D3013EA0, 0xD000000000000018, 0x80000001D3013EC0, 900.0);
  return sub_1D2FEDEB4(v1, 900.0);
}

double sub_1D2FED6A4()
{
  double v1 = sub_1D2FED230(*(void *)(v0 + 104), 0xD000000000000028, 0x80000001D3013EE0, 0xD00000000000002ALL, 0x80000001D3013F10, 450.0);
  return sub_1D2FEDEB4(v1, 450.0);
}

uint64_t sub_1D2FED720()
{
  return sub_1D2FED83C(0x746E755263646D74, 0xEB00000000656D69, 0xD000000000000016, 0x80000001D3013F40);
}

uint64_t sub_1D2FED758()
{
  return sub_1D2FED83C(0xD000000000000016, 0x80000001D3013F60, 0xD000000000000021, 0x80000001D3013F80);
}

uint64_t sub_1D2FED790()
{
  return sub_1D2FED83C(0x746E755263646D74, 0xEF6C6C6143656D69, 0xD00000000000001ALL, 0x80000001D3013FB0);
}

uint64_t sub_1D2FED7CC()
{
  return sub_1D2FED83C(0xD000000000000012, 0x80000001D3013FD0, 0xD00000000000001DLL, 0x80000001D3013FF0);
}

uint64_t sub_1D2FED804()
{
  return sub_1D2FED83C(0xD000000000000017, 0x80000001D3014010, 0xD000000000000022, 0x80000001D3014030);
}

uint64_t sub_1D2FED83C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  char v5 = sub_1D2FEC094(*(void *)(v4 + 104), a1, a2, a3, a4, 0) & 1;
  return sub_1D2FEE2B4(v5, 0);
}

void sub_1D2FED884()
{
  sub_1D2FED8D4(*(void *)(v0 + 104), 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
}

void sub_1D2FED8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v14 = sub_1D3001918();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1D2F0DC98(a2, a3);
    if (v19)
    {
      id v20 = *(id *)(*(void *)(a1 + 56) + 8 * v18);
      swift_bridgeObjectRelease();
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v21 = __swift_project_value_buffer(v14, (uint64_t)qword_1EBD65778);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
      id v22 = v20;
      swift_bridgeObjectRetain_n();
      id v23 = v22;
      uint64_t v24 = sub_1D30018F8();
      int v25 = sub_1D30020A8();
      uint64_t v44 = v24;
      uint64_t v26 = &selRef_flowState;
      if (os_log_type_enabled(v24, (os_log_type_t)v25))
      {
        int v43 = v25;
        uint64_t v27 = swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v46 = v42;
        *(_DWORD *)uint64_t v27 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_1D2F09508(a4, a5, &v46);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2080;
        id v28 = objc_msgSend(v23, sel_stringValue);
        if (!v28)
        {
LABEL_19:

          __break(1u);
          return;
        }
        uint64_t v29 = v28;
        uint64_t v30 = sub_1D3001B78();
        unint64_t v32 = v31;

        uint64_t v45 = sub_1D2F09508(v30, v32, &v46);
        sub_1D3002318();

        swift_bridgeObjectRelease();
        uint64_t v33 = v44;
        _os_log_impl(&dword_1D2F05000, v44, (os_log_type_t)v43, "Trial: Factor %s retrieved from trial. Value is %s", (uint8_t *)v27, 0x16u);
        uint64_t v34 = v42;
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v34, -1, -1);
        MEMORY[0x1D942F2D0](v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        uint64_t v26 = &selRef_flowState;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      }
      id v39 = [v23 v26[100]];
      if (v39)
      {
        BOOL v40 = v39;
        sub_1D3001B78();

        return;
      }
      __break(1u);
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v35 = sub_1D30018F8();
  os_log_type_t v36 = sub_1D30020B8();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v46 = v38;
    *(_DWORD *)uint64_t v37 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1D2F09508(a4, a5, &v46);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1D2F09508(a6, a7, &v46);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v35, v36, "Trial: Factor was not retrieved from trial. Using default level for %s: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v38, -1, -1);
    MEMORY[0x1D942F2D0](v37, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
}

uint64_t sub_1D2FEDE50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  *(void *)a1 = *(void *)(v1 + 112);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 136);
  *(void *)(a1 + 4sub_1D2FD62D8(0, 0) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1D2FEDEB4(double a1, double a2)
{
  sub_1D2FED8D4(v2[13], 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v2[2];
  unint64_t v9 = v2[3];
  uint64_t v23 = v10;
  unint64_t v24 = v9;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v6 == v10 && v8 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if (v11)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1D3001918();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EBD65778);
      swift_retain_n();
      swift_bridgeObjectRetain();
      char v13 = sub_1D30018F8();
      os_log_type_t v14 = sub_1D30020A8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = v21;
        *(_DWORD *)uint64_t v15 = 136315906;
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1D2F09508(v6, v8, &v22);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2080;
        uint64_t v23 = v10;
        unint64_t v24 = v9;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1D3001C68();
        swift_bridgeObjectRetain();
        sub_1D3001C68();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v23 = sub_1D2F09508(v23, v24, &v22);
        sub_1D3002318();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        uint64_t v16 = sub_1D3001FA8();
        uint64_t v23 = sub_1D2F09508(v16, v17, &v22);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 32) = 2080;
        uint64_t v18 = sub_1D3001FA8();
        uint64_t v23 = sub_1D2F09508(v18, v19, &v22);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v13, v14, "targetLocale: %s is not equal to siriLocale: %s, using: default:%s instead of factorLevel:%s", (uint8_t *)v15, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v21, -1, -1);
        MEMORY[0x1D942F2D0](v15, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      return a2;
    }
  }
  return a1;
}

uint64_t sub_1D2FEE2B4(char a1, char a2)
{
  sub_1D2FED8D4(v2[13], 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v9 = v2[2];
  unint64_t v10 = v2[3];
  uint64_t v26 = v9;
  unint64_t v27 = v10;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v6 == v9 && v8 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = a1;
    char v11 = sub_1D3002778();
    swift_bridgeObjectRelease();
    if (v11)
    {
      swift_bridgeObjectRelease();
      a1 = v24;
    }
    else
    {
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1D3001918();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EBD65778);
      swift_retain_n();
      swift_bridgeObjectRetain();
      char v13 = sub_1D30018F8();
      os_log_type_t v14 = sub_1D30020A8();
      if (os_log_type_enabled(v13, v14))
      {
        char v23 = a2;
        uint64_t v15 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v25 = v22;
        *(_DWORD *)uint64_t v15 = 136315906;
        os_log_type_t type = v14;
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1D2F09508(v6, v8, &v25);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2080;
        uint64_t v26 = v9;
        unint64_t v27 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1D3001C68();
        swift_bridgeObjectRetain();
        sub_1D3001C68();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v26 = sub_1D2F09508(v26, v27, &v25);
        sub_1D3002318();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        if (v23) {
          uint64_t v16 = 1702195828;
        }
        else {
          uint64_t v16 = 0x65736C6166;
        }
        if (v23) {
          unint64_t v17 = 0xE400000000000000;
        }
        else {
          unint64_t v17 = 0xE500000000000000;
        }
        uint64_t v26 = sub_1D2F09508(v16, v17, &v25);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 32) = 2080;
        if (v24) {
          uint64_t v18 = 1702195828;
        }
        else {
          uint64_t v18 = 0x65736C6166;
        }
        if (v24) {
          unint64_t v19 = 0xE400000000000000;
        }
        else {
          unint64_t v19 = 0xE500000000000000;
        }
        uint64_t v26 = sub_1D2F09508(v18, v19, &v25);
        sub_1D3002318();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2F05000, v13, type, "targetLocale: %s is not equal to siriLocale: %s, using: default:%s instead of factorLevel:%s", (uint8_t *)v15, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v22, -1, -1);
        MEMORY[0x1D942F2D0](v15, -1, -1);

        a1 = v23;
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        a1 = a2;
      }
    }
  }
  return a1 & 1;
}

uint64_t TrialSiriUnderstandingTMDCStatusResolver.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2FEBCB4(v0 + 48);
  return v0;
}

uint64_t TrialSiriUnderstandingTMDCStatusResolver.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2FEBCB4(v0 + 48);
  return swift_deallocClassInstance();
}

double sub_1D2FEE780()
{
  double v1 = sub_1D2FED230(*(void *)(*(void *)v0 + 104), 0x7365726854703270, 0xEC000000646C6F68, 0x7365726854703270, 0xEE002928646C6F68, 2.0);
  return sub_1D2FEDEB4(v1, 2.0);
}

void sub_1D2FEE7F0()
{
  double v1 = sub_1D2FED230(*(void *)(*(void *)v0 + 104), 0xD000000000000016, 0x80000001D3013EA0, 0xD000000000000018, 0x80000001D3013EC0, 900.0);
  sub_1D2FEDEB4(v1, 900.0);
}

void sub_1D2FEE86C()
{
  double v1 = sub_1D2FED230(*(void *)(*(void *)v0 + 104), 0xD000000000000028, 0x80000001D3013EE0, 0xD00000000000002ALL, 0x80000001D3013F10, 450.0);
  sub_1D2FEDEB4(v1, 450.0);
}

uint64_t sub_1D2FEE8E8(uint64_t a1, uint64_t a2)
{
  return sub_1D2FEEA04(a1, a2, 0x746E755263646D74, 0xEB00000000656D69, 0xD000000000000016, 0x80000001D3013F40);
}

uint64_t sub_1D2FEE920(uint64_t a1, uint64_t a2)
{
  return sub_1D2FEEA04(a1, a2, 0xD000000000000016, 0x80000001D3013F60, 0xD000000000000021, 0x80000001D3013F80);
}

uint64_t sub_1D2FEE958(uint64_t a1, uint64_t a2)
{
  return sub_1D2FEEA04(a1, a2, 0x746E755263646D74, 0xEF6C6C6143656D69, 0xD00000000000001ALL, 0x80000001D3013FB0);
}

uint64_t sub_1D2FEE994(uint64_t a1, uint64_t a2)
{
  return sub_1D2FEEA04(a1, a2, 0xD000000000000012, 0x80000001D3013FD0, 0xD00000000000001DLL, 0x80000001D3013FF0);
}

uint64_t sub_1D2FEE9CC(uint64_t a1, uint64_t a2)
{
  return sub_1D2FEEA04(a1, a2, 0xD000000000000017, 0x80000001D3014010, 0xD000000000000022, 0x80000001D3014030);
}

uint64_t sub_1D2FEEA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  char v7 = sub_1D2FEC094(*(void *)(*(void *)v6 + 104), a3, a4, a5, a6, 0);
  return sub_1D2FEE2B4(v7 & 1, 0) & 1;
}

void sub_1D2FEEA50()
{
  sub_1D2FED8D4(*(void *)(*(void *)v0 + 104), 0x6F4C746567726174, 0xEC000000656C6163, 0x6F4C746567726174, 0xEE002928656C6163, 7104878, 0xE300000000000000);
}

uint64_t RECTIFITrialStatusResolver.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  RECTIFITrialStatusResolver.init()();
  return v0;
}

_OWORD *RECTIFITrialStatusResolver.init()()
{
  double v1 = (_OWORD *)v0;
  *(_WORD *)(v0 + 128) = 0;
  *(unsigned char *)(v0 + 13sub_1D2FD62D8(0, 0) = 0;
  *(_OWORD *)(v0 + 136) = xmmword_1D300C860;
  *(_OWORD *)(v0 + 152) = xmmword_1D300C870;
  *(_OWORD *)(v0 + 168) = xmmword_1D300B870;
  *(void *)(v0 + 184) = 0xD000000000000017;
  *(void *)(v0 + 192) = 0x80000001D3014060;
  id v2 = objc_msgSend(self, sel_clientWithIdentifier_, 115);
  v7[3] = sub_1D2F1DBA0();
  v7[4] = &off_1F2A1C598;
  v7[0] = v2;
  sub_1D2F37950((uint64_t)v7, (uint64_t)v9);
  *(void *)&long long v8 = 0xD00000000000001ALL;
  *((void *)&v8 + 1) = 0x80000001D3014080;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  *((void *)&v10 + 1) = sub_1D2F1FA2C(MEMORY[0x1E4FBC860]);
  sub_1D2FE8BB4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  long long v3 = v12;
  v1[5] = v11;
  v1[6] = v3;
  v1[7] = v13;
  long long v4 = v9[0];
  v1[1] = v8;
  v1[2] = v4;
  long long v5 = v10;
  v1[3] = v9[1];
  v1[4] = v5;
  return v1;
}

uint64_t sub_1D2FEEC0C()
{
  return sub_1D2FEC094(*(void *)(v0 + 72), 0xD000000000000021, 0x80000001D30140A0, 0xD000000000000023, 0x80000001D30140D0, 0);
}

uint64_t sub_1D2FEEC4C()
{
  return sub_1D2FEC094(*(void *)(v0 + 72), 0xD00000000000001FLL, 0x80000001D3014100, 0xD000000000000021, 0x80000001D3014120, 0);
}

uint64_t sub_1D2FEEC8C()
{
  return sub_1D2FEC094(*(void *)(v0 + 72), 0xD000000000000019, 0x80000001D3014150, 0xD000000000000021, 0x80000001D3014170, 0);
}

double sub_1D2FEECCC()
{
  return sub_1D2FED230(*(void *)(v0 + 72), 0xD000000000000013, 0x80000001D30141A0, 0xD000000000000018, 0x80000001D30141C0, 0.7);
}

double sub_1D2FEED14()
{
  return sub_1D2FED230(*(void *)(v0 + 72), 0xD000000000000016, 0x80000001D30141E0, 0xD00000000000001BLL, 0x80000001D3014200, 0.4);
}

double sub_1D2FEED58()
{
  return sub_1D2FED230(*(void *)(v0 + 72), 0x6F707075536E696DLL, 0xEA00000000007472, 0x75536E694D746567, 0xEF292874726F7070, 3.0);
}

double sub_1D2FEED9C()
{
  return sub_1D2FED230(*(void *)(v0 + 72), 0x747461504B706F74, 0xEC000000736E7265, 0xD000000000000011, 0x80000001D3014220, 5.0);
}

double sub_1D2FEEDDC()
{
  return sub_1D2FED230(*(void *)(v0 + 72), 0xD000000000000010, 0x80000001D3014240, 0xD000000000000015, 0x80000001D3014260, 5.0);
}

double sub_1D2FEEE20()
{
  return sub_1D2FED230(*(void *)(v0 + 72), 0xD00000000000001FLL, 0x80000001D3014280, 0xD000000000000024, 0x80000001D30142A0, 60.0);
}

void sub_1D2FEEE64()
{
  sub_1D2FED8D4(*(void *)(v0 + 72), 0xD000000000000018, 0x80000001D30142D0, 0xD00000000000001DLL, 0x80000001D30142F0, *(void *)(v0 + 184), *(void *)(v0 + 192));
}

uint64_t RECTIFITrialStatusResolver.deinit()
{
  sub_1D2FEBCB4(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RECTIFITrialStatusResolver.__deallocating_deinit()
{
  sub_1D2FEBCB4(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FEEF10()
{
  return sub_1D2FEC094(*(void *)(*(void *)v0 + 72), 0xD000000000000021, 0x80000001D30140A0, 0xD000000000000023, 0x80000001D30140D0, 0);
}

uint64_t sub_1D2FEEF54()
{
  return sub_1D2FEC094(*(void *)(*(void *)v0 + 72), 0xD00000000000001FLL, 0x80000001D3014100, 0xD000000000000021, 0x80000001D3014120, 0);
}

uint64_t sub_1D2FEEF98()
{
  return sub_1D2FEC094(*(void *)(*(void *)v0 + 72), 0xD000000000000019, 0x80000001D3014150, 0xD000000000000021, 0x80000001D3014170, 0);
}

double sub_1D2FEEFDC()
{
  return sub_1D2FED230(*(void *)(*(void *)v0 + 72), 0xD000000000000013, 0x80000001D30141A0, 0xD000000000000018, 0x80000001D30141C0, 0.7);
}

double sub_1D2FEF028()
{
  return sub_1D2FED230(*(void *)(*(void *)v0 + 72), 0xD000000000000016, 0x80000001D30141E0, 0xD00000000000001BLL, 0x80000001D3014200, 0.4);
}

double sub_1D2FEF070()
{
  return sub_1D2FED230(*(void *)(*(void *)v0 + 72), 0x6F707075536E696DLL, 0xEA00000000007472, 0x75536E694D746567, 0xEF292874726F7070, 3.0);
}

double sub_1D2FEF0B8()
{
  return sub_1D2FED230(*(void *)(*(void *)v0 + 72), 0x747461504B706F74, 0xEC000000736E7265, 0xD000000000000011, 0x80000001D3014220, 5.0);
}

double sub_1D2FEF0FC()
{
  return sub_1D2FED230(*(void *)(*(void *)v0 + 72), 0xD000000000000010, 0x80000001D3014240, 0xD000000000000015, 0x80000001D3014260, 5.0);
}

double sub_1D2FEF144()
{
  return sub_1D2FED230(*(void *)(*(void *)v0 + 72), 0xD00000000000001FLL, 0x80000001D3014280, 0xD000000000000024, 0x80000001D30142A0, 60.0);
}

void sub_1D2FEF18C()
{
  sub_1D2FED8D4(*(void *)(*(void *)v0 + 72), 0xD000000000000018, 0x80000001D30142D0, 0xD00000000000001DLL, 0x80000001D30142F0, *(void *)(*(void *)v0 + 184), *(void *)(*(void *)v0 + 192));
}

uint64_t dispatch thunk of TrialStatusUpdating.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TrialStatusUpdating.addUpdateHandler(queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of TrialStatusUpdating.removeUpdateHandler()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialStatusResolving.isTrialFactorEnabled(_:defaultState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of TrialPICSStatusResolving.isPICSRestatementAndSuccessfulPhoneCallEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialPICSStatusResolving.activePICSRuntimeEnrollment()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.isRECTIFIPatternExtractionEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.isRECTIFIOnDeviceStorageEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.shouldDeleteOldCoreDataVersions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getSimilarityThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getSimilarityMinThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getMinSupport()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getTopKPatterns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getDaysUntilNextRun()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getDaysAfterRemoveStaleRECTIFIData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolving.getRECTIFICoreDataStoreName()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsPlatformStatusResolving.isEventBasedSchedulerEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.p2pThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.asrConfidenceThreshold()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.asrConfidenceThresholdForOnlyContactName()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeCorrectionsEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeCallEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeMessageEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.isTmdcRuntimeLocalStorageEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolving.targetLocale()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t type metadata accessor for TrialStatusResolver()
{
  return self;
}

uint64_t method lookup function for TrialStatusResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialStatusResolver);
}

uint64_t dispatch thunk of TrialStatusResolver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of TrialStatusResolver.__allocating_init(trialManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of TrialStatusResolver.makeLogString()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of TrialStatusResolver.isPICSRestatementAndSuccessfulPhoneCallEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of TrialStatusResolver.isPICSRuntimeInSiriVocabEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of TrialStatusResolver.activePICSRuntimeEnrollment()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of TrialStatusResolver.refresh()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of TrialStatusResolver.addUpdateHandler(queue:using:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of TrialStatusResolver.removeUpdateHandler()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of TrialStatusResolver.isTrialFactorEnabled(_:defaultState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t type metadata accessor for TrialPrivateLearningSuggestionsStatusResolver()
{
  return self;
}

uint64_t method lookup function for TrialPrivateLearningSuggestionsStatusResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialPrivateLearningSuggestionsStatusResolver);
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.isEventBasedSchedulerEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.activeSiriPrivateLearningSuggestionsEnrollment()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.refresh()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.makeLogString()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.addUpdateHandler(queue:using:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of TrialPrivateLearningSuggestionsStatusResolver.removeUpdateHandler()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t type metadata accessor for TrialSiriUnderstandingTMDCStatusResolver()
{
  return self;
}

uint64_t method lookup function for TrialSiriUnderstandingTMDCStatusResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TrialSiriUnderstandingTMDCStatusResolver);
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.p2pThreshold()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.asrConfidenceThreshold()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.asrConfidenceThresholdForOnlyContactName()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeCorrectionsEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeCallEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeMessageEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.isTmdcRuntimeLocalStorageEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.targetLocale()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of TrialSiriUnderstandingTMDCStatusResolver.activeSiriUnderstandingTMDCEnrollment()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t type metadata accessor for RECTIFITrialStatusResolver()
{
  return self;
}

uint64_t method lookup function for RECTIFITrialStatusResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RECTIFITrialStatusResolver);
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.isRECTIFIPatternExtractionEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.isRECTIFIOnDeviceStorageEnabled()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.shouldDeleteOldCoreDataVersions()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getSimilarityThreshold()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getSimilarityMinThreshold()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getMinSupport()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getTopKPatterns()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getDaysUntilNextRun()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getDaysAfterRemoveStaleRECTIFIData()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of RECTIFITrialStatusResolver.getRECTIFICoreDataStoreName()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t UserFeedbackLearnedEntitySuggestion.init(entity:needsConfirmation:suggestionId:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(unsigned char *)(a4 + 8) = a2;
  uint64_t v5 = a4 + *(int *)(type metadata accessor for UserFeedbackLearnedEntitySuggestion() + 24);
  uint64_t v6 = sub_1D30010A8();
  char v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t type metadata accessor for UserFeedbackLearnedEntitySuggestion()
{
  uint64_t result = qword_1EA699FF8;
  if (!qword_1EA699FF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t UserFeedbackLearnedEntitySuggestion.entity.getter()
{
  return swift_retain();
}

uint64_t UserFeedbackLearnedEntitySuggestion.needsConfirmation.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t UserFeedbackLearnedEntitySuggestion.suggestionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserFeedbackLearnedEntitySuggestion() + 24);
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1D2FEFB68@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  sub_1D2F1CCAC(v1 + 16, (uint64_t)v4, &qword_1EA699FF0);
  if (v5 != 1) {
    return sub_1D2FF2818((uint64_t)v4, a1);
  }
  sub_1D2F1CD78((uint64_t)v4, &qword_1EA699FF0);
  sub_1D2FEFC34(a1);
  sub_1D2F1CCAC(a1, (uint64_t)v4, &qword_1EA699FE0);
  swift_beginAccess();
  sub_1D2FF27B0((uint64_t)v4, v1 + 16);
  return swift_endAccess();
}

double sub_1D2FEFC34@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Config.universalSuggestionsStoreFilePath.getter();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UniversalSuggestionsStoreCoreData();
  swift_allocObject();
  uint64_t v6 = sub_1D2FB000C(v2, v4, 0);
  if (v6)
  {
    uint64_t v7 = v6;
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1D3001918();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBD65778);
    uint64_t v9 = sub_1D30018F8();
    os_log_type_t v10 = sub_1D30020A8();
    if (os_log_type_enabled(v9, v10))
    {
      long long v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v11 = 0;
      _os_log_impl(&dword_1D2F05000, v9, v10, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: lazily initialised storage", v11, 2u);
      MEMORY[0x1D942F2D0](v11, -1, -1);
    }

    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = &protocol witness table for UniversalSuggestionsStoreCoreData;
    *(void *)a1 = v7;
  }
  else
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1D3001918();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBD65778);
    os_log_type_t v14 = sub_1D30018F8();
    os_log_type_t v15 = sub_1D30020B8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1D2F05000, v14, v15, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Failed to initialise Universal Suggestions store", v16, 2u);
      MEMORY[0x1D942F2D0](v16, -1, -1);
    }

    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t UserFeedbackLearnedEntitySuggester.__allocating_init()()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  unsigned int v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  uint64_t v3 = &type metadata for SiriAnalyticsSharedPLUSEventLogTarget;
  if (v2) {
    uint64_t v3 = &type metadata for DisabledPLUSEventLogTarget;
  }
  uint64_t v4 = &protocol witness table for DisabledPLUSEventLogTarget;
  if (!v2) {
    uint64_t v4 = &protocol witness table for SiriAnalyticsSharedPLUSEventLogTarget;
  }
  uint64_t v13 = v3;
  os_log_type_t v14 = v4;
  uint64_t v5 = type metadata accessor for SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager();
  swift_allocObject();
  uint64_t v10 = v5;
  long long v11 = &protocol witness table for FeatureManager;
  *(void *)&long long v9 = SiriUserFeedbackLearningPlatformFeatures.SiriUserFeedbackLearningPlatformFeatureManager.init()();
  type metadata accessor for UserFeedbackLearnedEntitySuggester();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = 0;
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 16) = 0;
  *(_OWORD *)(v6 + 4sub_1D2FD62D8(0, 0) = xmmword_1D3009680;
  type metadata accessor for PLUSUniversalSuggestionsRuntimeLogger();
  uint64_t v7 = swift_allocObject();
  sub_1D2F0BE68(&v12, v7 + 16);
  *(void *)(v6 + 56) = v7;
  sub_1D2F0BE68(&v9, v6 + 64);
  return v6;
}

uint64_t type metadata accessor for UserFeedbackLearnedEntitySuggester()
{
  return self;
}

uint64_t sub_1D2FEFFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v253 = a2;
  uint64_t v257 = a4;
  uint64_t v250 = sub_1D30018A8();
  uint64_t v6 = *(void *)(v250 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v250);
  uint64_t v252 = &v216[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v237 = &v216[-v10];
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v236 = &v216[-v12];
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v233 = &v216[-v14];
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v228 = &v216[-v16];
  MEMORY[0x1F4188790](v15);
  uint64_t v227 = &v216[-v17];
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699158);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v240 = &v216[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v242 = type metadata accessor for UniversalSuggestionCandidate(0);
  uint64_t v243 = *(void *)(v242 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v242);
  unint64_t v230 = &v216[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v249 = &v216[-v23];
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v235 = &v216[-v25];
  MEMORY[0x1F4188790](v24);
  os_log_t v238 = &v216[-v26];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = &v216[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v255 = sub_1D30010A8();
  uint64_t v254 = *(void *)(v255 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v255);
  uint64_t v229 = &v216[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  unint64_t v35 = &v216[-v34];
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = &v216[-v36];
  uint64_t v38 = sub_1D3001868();
  uint64_t v256 = *(void *)(v38 - 8);
  uint64_t v39 = MEMORY[0x1F4188790](v38);
  v251 = &v216[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  id v241 = &v216[-v42];
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v239 = &v216[-v44];
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  v234 = &v216[-v46];
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  BOOL v232 = &v216[-v48];
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  os_log_type_t v231 = &v216[-v50];
  MEMORY[0x1F4188790](v49);
  char v52 = &v216[-v51];
  sub_1D30013E8();
  uint64_t v53 = swift_dynamicCastClass();
  if (v53)
  {
    uint64_t v223 = v53;
    uint64_t v225 = v6;
    uint64_t v54 = qword_1EA698030;
    swift_retain();
    if (v54 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1D3001898();
    uint64_t v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EA6A0210);
    sub_1D3001888();
    sub_1D3001838();
    uint64_t v247 = v56;
    uint64_t v248 = sub_1D2F62208("runUniversalSuggestionsQuery", 28, 2, (uint64_t)v52);
    os_log_t v57 = *(void (**)(unsigned char *, uint64_t))(v256 + 8);
    uint64_t v246 = v256 + 8;
    uint64_t v245 = v57;
    v57(v52, v38);
    v226 = v52;
    if (a3)
    {
      id v224 = v37;
      sub_1D3001028();
      uint64_t v58 = v254;
      uint64_t v59 = v255;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v254 + 48))(v30, 1, v255) != 1)
      {
        uint64_t v253 = v38;
        uint64_t v222 = a1;
        unint64_t v60 = *(void (**)(char *, unsigned char *, uint64_t))(v58 + 32);
        uint64_t v61 = v224;
        v60(v224, v30, v59);
        uint64_t v62 = v244;
        sub_1D2F37950(v244[7] + 16, (uint64_t)&v268);
        uint64_t v63 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16);
        uint64_t v219 = v58 + 16;
        uint64_t v218 = v63;
        v63(v35, v61, v59);
        type metadata accessor for PLUSUniversalSuggestionsRuntimeRequestLogger();
        uint64_t v64 = swift_allocObject();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v64+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId, 1, 1, v27);
        v251 = (unsigned char *)(v64 + 16);
        sub_1D2F0BE68(&v268, v64 + 16);
        uint64_t v221 = v58 + 32;
        uint64_t v220 = v60;
        v60((char *)(v64+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId), v35, v59);
        uint64_t v252 = (unsigned char *)v64;
        uint64_t v65 = v58;
        char v66 = v62;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v64 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId, 1, 1, v59);
        uint64_t v67 = v62 + 8;
        uint64_t v69 = v62[11];
        uint64_t v68 = v62[12];
        __swift_project_boxed_opaque_existential_1(v62 + 8, v69);
        if (qword_1EA698018 != -1) {
          swift_once();
        }
        uint64_t v70 = qword_1EA6987B8;
        uint64_t v71 = type metadata accessor for AnyFeature();
        uint64_t v266 = v71;
        uint64_t v267 = &protocol witness table for AnyFeature;
        uint64_t v263 = v70;
        id v72 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v68 + 8);
        swift_retain();
        int v73 = v72(&v263, v69, v68);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v263);
        uint64_t v74 = v66[11];
        uint64_t v75 = v66[12];
        __swift_project_boxed_opaque_existential_1(v67, v74);
        if (qword_1EBD5E700[0] != -1) {
          swift_once();
        }
        uint64_t v266 = v71;
        uint64_t v267 = &protocol witness table for AnyFeature;
        uint64_t v263 = qword_1EBD5E6F8;
        uint64_t v76 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v75 + 8);
        swift_retain();
        char v77 = v76(&v263, v74, v75);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v263);
        if (v77)
        {
          swift_retain();
          sub_1D2FEFB68((uint64_t)&v263);
          int v217 = v73;
          if (v266)
          {
            sub_1D2F37950((uint64_t)&v263, (uint64_t)&v261);
            sub_1D2F1CD78((uint64_t)&v263, &qword_1EA699FE0);
            uint64_t v78 = v262[0];
            uint64_t v79 = v262[1];
            __swift_project_boxed_opaque_existential_1(&v261, v262[0]);
            uint64_t v260 = v223;
            uint64_t v80 = (uint64_t)v240;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v79 + 24))(&v260, v78, v79);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v261);
            uint64_t v81 = v242;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))(v80, 1, v242) != 1)
            {
              id v82 = v238;
              sub_1D2FF2060(v80, (uint64_t)v238);
              uint64_t v83 = &v82[*(int *)(v81 + 24)];
              uint64_t v84 = type metadata accessor for UniversalCandidate(0);
              uint64_t v85 = qword_1EBD63A48;
              v251 = *(unsigned char **)&v83[*(int *)(v84 + 20)];
              swift_retain();
              if (v85 != -1) {
                swift_once();
              }
              uint64_t v86 = sub_1D3001918();
              uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)qword_1EBD65778);
              uint64_t v88 = v235;
              sub_1D2FF2120((uint64_t)v82, (uint64_t)v235);
              uint64_t v244 = (void *)v87;
              uint64_t v89 = sub_1D30018F8();
              os_log_type_t v90 = sub_1D30020A8();
              if (os_log_type_enabled(v89, v90))
              {
                uint64_t v91 = (uint8_t *)swift_slowAlloc();
                uint64_t v92 = swift_slowAlloc();
                id v241 = v83;
                uint64_t v93 = v92;
                uint64_t v261 = v92;
                *(_DWORD *)uint64_t v91 = 136315138;
                uint64_t v240 = v91 + 4;
                uint64_t v263 = *(void *)&v88[*(int *)(v81 + 24) + *(int *)(v84 + 20)];
                swift_retain();
                uint64_t v94 = sub_1D2F59298();
                uint64_t v96 = v95;
                id v82 = v238;
                swift_release();
                uint64_t v263 = v94;
                uint64_t v264 = v96;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699160);
                uint64_t v97 = sub_1D3001BC8();
                uint64_t v263 = sub_1D2F09508(v97, v98, &v261);
                sub_1D3002318();
                swift_bridgeObjectRelease();
                sub_1D2FF20C4((uint64_t)v88);
                _os_log_impl(&dword_1D2F05000, v89, v90, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Found %s", v91, 0xCu);
                swift_arrayDestroy();
                uint64_t v99 = v93;
                uint64_t v83 = v241;
                MEMORY[0x1D942F2D0](v99, -1, -1);
                MEMORY[0x1D942F2D0](v91, -1, -1);
              }
              else
              {
                sub_1D2FF20C4((uint64_t)v88);
              }

              uint64_t v171 = v253;
              uint64_t v172 = v257;
              uint64_t v173 = *(int *)(v84 + 24);
              if (*(double *)&v83[v173] >= 0.0)
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699FE8);
                uint64_t v182 = *(void *)(v243 + 72);
                unint64_t v183 = (*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80);
                uint64_t v184 = swift_allocObject();
                *(_OWORD *)(v184 + 16) = xmmword_1D3004370;
                uint64_t v185 = v184 + v183;
                sub_1D2FF2120((uint64_t)v82, v184 + v183);
                sub_1D2F54DB0(v184);
                char v186 = v217;
                sub_1D2F55368(v217 & 1);
                if (v186)
                {
                  swift_release();
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v187 = v255;
                  (*(void (**)(unsigned char *, uint64_t))(v254 + 8))(v224, v255);
                  double v188 = *(double *)&v83[v173];
                  double v189 = v230;
                  sub_1D2FF2120((uint64_t)v82, (uint64_t)v230);
                  if (v188 >= 0.4) {
                    char v190 = *v189;
                  }
                  else {
                    char v190 = 1;
                  }
                  uint64_t v179 = v231;
                  sub_1D2FF20C4((uint64_t)v189);
                  id v197 = v229;
                  v218(v229, v83, v187);
                  sub_1D2FF20C4((uint64_t)v82);
                  uint64_t v198 = v257;
                  *uint64_t v257 = v251;
                  *((unsigned char *)v198 + 8) = v190;
                  uint64_t v199 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
                  uint64_t v200 = v187;
                  uint64_t v201 = v199;
                  v220((char *)v198 + *(int *)(v199 + 24), v197, v200);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v198, 0, 1, v201);
                  uint64_t v178 = sub_1D3001888();
                  sub_1D30018B8();
                  os_signpost_type_t v180 = sub_1D30021C8();
                  if (sub_1D30022D8())
                  {
                    swift_retain();
                    uint64_t v181 = (uint64_t *)&v258;
                    goto LABEL_83;
                  }
                }
                else
                {
                  uint64_t v191 = *(void *)(v184 + 16);
                  if (v191)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v192 = v242;
                    uint64_t v193 = (uint64_t)v249;
                    do
                    {
                      sub_1D2FF2120(v185, v193);
                      long long v194 = &v249[*(int *)(v192 + 24)];
                      type metadata accessor for PLUSSuggestionMetadata();
                      uint64_t inited = swift_initStackObject();
                      *(_WORD *)(inited + 16) = 512;
                      uint64_t v196 = (uint64_t)v194;
                      uint64_t v193 = (uint64_t)v249;
                      sub_1D2F558A8(v196, (unsigned char *)inited);
                      sub_1D2FF20C4(v193);
                      v185 += v182;
                      --v191;
                    }
                    while (v191);
                    swift_bridgeObjectRelease_n();
                    uint64_t v171 = v253;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                  }
                  id v202 = sub_1D30018F8();
                  os_log_type_t v203 = sub_1D30020A8();
                  BOOL v204 = os_log_type_enabled(v202, v203);
                  uint64_t v205 = v238;
                  uint64_t v179 = v232;
                  if (v204)
                  {
                    uint64_t v206 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v206 = 0;
                    _os_log_impl(&dword_1D2F05000, v202, v203, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Surfacing of suggestions is disabled, skipping providing a result", v206, 2u);
                    MEMORY[0x1D942F2D0](v206, -1, -1);
                  }

                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1D2FF20C4((uint64_t)v205);
                  (*(void (**)(unsigned char *, uint64_t))(v254 + 8))(v224, v255);
                  uint64_t v207 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
                  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v207 - 8) + 56))(v257, 1, 1, v207);
                  uint64_t v178 = sub_1D3001888();
                  sub_1D30018B8();
                  os_signpost_type_t v180 = sub_1D30021C8();
                  if (sub_1D30022D8())
                  {
                    swift_retain();
                    uint64_t v181 = (uint64_t *)&v259;
                    goto LABEL_83;
                  }
                }
              }
              else
              {
                uint64_t v174 = sub_1D30018F8();
                os_log_type_t v175 = sub_1D30020A8();
                if (os_log_type_enabled(v174, v175))
                {
                  uint64_t v176 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v176 = 0;
                  _os_log_impl(&dword_1D2F05000, v174, v175, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Dropping suggestion candidate because it has a low score", v176, 2u);
                  MEMORY[0x1D942F2D0](v176, -1, -1);
                }

                sub_1D2F54DB0(MEMORY[0x1E4FBC860]);
                sub_1D2F55368(v217 & 1);
                swift_release();
                swift_release();
                swift_release();
                sub_1D2FF20C4((uint64_t)v82);
                (*(void (**)(unsigned char *, uint64_t))(v254 + 8))(v224, v255);
                uint64_t v177 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
                (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v172, 1, 1, v177);
                uint64_t v178 = sub_1D3001888();
                uint64_t v179 = v234;
                sub_1D30018B8();
                os_signpost_type_t v180 = sub_1D30021C8();
                if (sub_1D30022D8())
                {
                  swift_retain();
                  uint64_t v181 = v262;
LABEL_83:
                  uint64_t v208 = *(v181 - 32);
                  sub_1D30018E8();
                  swift_release();
                  uint64_t v209 = v225;
                  uint64_t v210 = v250;
                  if ((*(unsigned int (**)(uint64_t, uint64_t))(v225 + 88))(v208, v250) == *MEMORY[0x1E4FBD340])
                  {
                    v211 = "[Error] Interval already ended";
                  }
                  else
                  {
                    (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v208, v210);
                    v211 = "";
                  }
                  uint64_t v212 = v226;
                  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v256 + 16))(v226, v179, v171);
                  id v213 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)id v213 = 0;
                  os_signpost_id_t v214 = sub_1D3001848();
                  _os_signpost_emit_with_name_impl(&dword_1D2F05000, v178, v180, v214, "runUniversalSuggestionsQuery", v211, v213, 2u);
                  MEMORY[0x1D942F2D0](v213, -1, -1);

                  id v215 = v245;
                  v245(v179, v171);
                  v215(v212, v171);
                  goto LABEL_61;
                }
              }

              v245(v179, v171);
LABEL_61:
              swift_release();
              return swift_release();
            }
          }
          else
          {
            sub_1D2F1CD78((uint64_t)&v263, &qword_1EA699FE0);
            uint64_t v80 = (uint64_t)v240;
            (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v243 + 56))(v240, 1, 1, v242);
          }
          sub_1D2F1CD78(v80, &qword_1EA699158);
          if (qword_1EBD63A48 != -1) {
            swift_once();
          }
          uint64_t v146 = sub_1D3001918();
          __swift_project_value_buffer(v146, (uint64_t)qword_1EBD65778);
          swift_retain_n();
          unint64_t v147 = sub_1D30018F8();
          os_log_type_t v148 = sub_1D30020A8();
          if (os_log_type_enabled(v147, v148))
          {
            unint64_t v149 = (uint8_t *)swift_slowAlloc();
            uint64_t v150 = swift_slowAlloc();
            uint64_t v261 = v150;
            *(_DWORD *)unint64_t v149 = 136315138;
            uint64_t v263 = v223;
            swift_retain();
            uint64_t v151 = sub_1D2F59298();
            uint64_t v153 = v152;
            swift_release();
            uint64_t v263 = v151;
            uint64_t v264 = v153;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699160);
            uint64_t v154 = sub_1D3001BC8();
            uint64_t v263 = sub_1D2F09508(v154, v155, &v261);
            sub_1D3002318();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D2F05000, v147, v148, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: Could not retrieve a suggestion candidate from database for entity %s", v149, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D942F2D0](v150, -1, -1);
            MEMORY[0x1D942F2D0](v149, -1, -1);
          }
          else
          {

            swift_release_n();
          }
          uint64_t v130 = v253;
          unint64_t v156 = v257;
          uint64_t v157 = v254;
          uint64_t v158 = v224;
          uint64_t v159 = v252;
          sub_1D2F54DB0(MEMORY[0x1E4FBC860]);
          sub_1D2F55368(v217 & 1);
          swift_setDeallocating();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v251);
          sub_1D2F1CD78((uint64_t)&v159[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId], &qword_1EBD62AA0);
          unint64_t v160 = *(void (**)(unsigned char *, uint64_t))(v157 + 8);
          uint64_t v161 = v255;
          v160(&v159[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId], v255);
          sub_1D2F1CD78((uint64_t)&v159[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId], &qword_1EA699098);
          swift_deallocClassInstance();
          swift_release();
          v160(v158, v161);
          uint64_t v162 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 56))(v156, 1, 1, v162);
          uint64_t v142 = sub_1D3001888();
          uint64_t v143 = v239;
          sub_1D30018B8();
          os_signpost_type_t v144 = sub_1D30021C8();
          if (sub_1D30022D8())
          {
            swift_retain();
            id v145 = &v264;
            goto LABEL_56;
          }
        }
        else
        {
          char v129 = v73;
          uint64_t v130 = v253;
          if (qword_1EBD63A48 != -1) {
            swift_once();
          }
          uint64_t v131 = sub_1D3001918();
          __swift_project_value_buffer(v131, (uint64_t)qword_1EBD65778);
          uint64_t v132 = sub_1D30018F8();
          os_log_type_t v133 = sub_1D30020A8();
          BOOL v134 = os_log_type_enabled(v132, v133);
          uint64_t v135 = v257;
          uint64_t v136 = v254;
          if (v134)
          {
            uint64_t v137 = swift_slowAlloc();
            *(_DWORD *)uint64_t v137 = 67109376;
            LODWORD(v263) = v129 & 1;
            sub_1D3002318();
            *(_WORD *)(v137 + 8) = 1024;
            LODWORD(v263) = 0;
            sub_1D3002318();
            _os_log_impl(&dword_1D2F05000, v132, v133, "Universal User Feedback suggestions is disabled, skipping; isSurfacingEnabled=%{BOOL}d, isOfflineLearningEnabled=%{BOOL}d",
              (uint8_t *)v137,
              0xEu);
            MEMORY[0x1D942F2D0](v137, -1, -1);
          }

          id v138 = v252;
          sub_1D2F55368(0);
          swift_setDeallocating();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v251);
          sub_1D2F1CD78((uint64_t)&v138[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_plusId], &qword_1EBD62AA0);
          int v139 = *(void (**)(unsigned char *, uint64_t))(v136 + 8);
          uint64_t v140 = v255;
          v139(&v138[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger_requestId], v255);
          sub_1D2F1CD78((uint64_t)&v138[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics44PLUSUniversalSuggestionsRuntimeRequestLogger____lazy_storage___plusLoggingId], &qword_1EA699098);
          swift_deallocClassInstance();
          v139(v224, v140);
          uint64_t v141 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v135, 1, 1, v141);
          uint64_t v142 = sub_1D3001888();
          uint64_t v143 = v241;
          sub_1D30018B8();
          os_signpost_type_t v144 = sub_1D30021C8();
          if (sub_1D30022D8())
          {
            swift_retain();
            id v145 = (uint64_t *)&v265;
LABEL_56:
            uint64_t v163 = *(v145 - 32);
            sub_1D30018E8();
            swift_release();
            uint64_t v164 = v225;
            uint64_t v165 = v250;
            if ((*(unsigned int (**)(uint64_t, uint64_t))(v225 + 88))(v163, v250) == *MEMORY[0x1E4FBD340])
            {
              unint64_t v166 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v163, v165);
              unint64_t v166 = "";
            }
            double v167 = v226;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v256 + 16))(v226, v143, v130);
            unint64_t v168 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v168 = 0;
            os_signpost_id_t v169 = sub_1D3001848();
            _os_signpost_emit_with_name_impl(&dword_1D2F05000, v142, v144, v169, "runUniversalSuggestionsQuery", v166, v168, 2u);
            MEMORY[0x1D942F2D0](v168, -1, -1);

            id v170 = v245;
            v245(v143, v130);
            v170(v167, v130);
            goto LABEL_61;
          }
        }

        v245(v143, v130);
        goto LABEL_61;
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v254 + 56))(v30, 1, 1, v255);
    }
    sub_1D2F1CD78((uint64_t)v30, &qword_1EBD62AA0);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_1D3001918();
    __swift_project_value_buffer(v109, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain_n();
    double v110 = sub_1D30018F8();
    os_log_type_t v111 = sub_1D30020B8();
    if (os_log_type_enabled(v110, v111))
    {
      id v112 = (uint8_t *)swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      *(void *)&long long v268 = v113;
      *(_DWORD *)id v112 = 136315138;
      if (a3) {
        uint64_t v114 = v253;
      }
      else {
        uint64_t v114 = 0x3E6C696E3CLL;
      }
      uint64_t v253 = v38;
      if (a3) {
        unint64_t v115 = a3;
      }
      else {
        unint64_t v115 = 0xE500000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v263 = sub_1D2F09508(v114, v115, (uint64_t *)&v268);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      uint64_t v38 = v253;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v110, v111, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: cannot emit events due to null identifiers, requestId: %s", v112, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v113, -1, -1);
      MEMORY[0x1D942F2D0](v112, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v116 = v257;
    uint64_t v117 = v252;
    double v118 = v251;
    uint64_t v119 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v116, 1, 1, v119);
    double v120 = sub_1D3001888();
    sub_1D30018B8();
    os_signpost_type_t v121 = sub_1D30021C8();
    if (sub_1D30022D8())
    {
      swift_retain();
      sub_1D30018E8();
      swift_release();
      uint64_t v122 = v225;
      uint64_t v123 = v250;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v225 + 88))(v117, v250) == *MEMORY[0x1E4FBD340])
      {
        double v124 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v117, v123);
        double v124 = "";
      }
      id v125 = v226;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v256 + 16))(v226, v118, v38);
      uint64_t v126 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v126 = 0;
      os_signpost_id_t v127 = sub_1D3001848();
      _os_signpost_emit_with_name_impl(&dword_1D2F05000, v120, v121, v127, "runUniversalSuggestionsQuery", v124, v126, 2u);
      MEMORY[0x1D942F2D0](v126, -1, -1);

      uint64_t v128 = v245;
      v245(v118, v38);
      v128(v125, v38);
    }
    else
    {

      v245(v118, v38);
    }
    goto LABEL_61;
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v100 = sub_1D3001918();
  __swift_project_value_buffer(v100, (uint64_t)qword_1EBD65778);
  uint64_t v101 = sub_1D30018F8();
  os_log_type_t v102 = sub_1D30020A8();
  BOOL v103 = os_log_type_enabled(v101, v102);
  uint64_t v104 = v257;
  if (v103)
  {
    unint64_t v105 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v105 = 0;
    _os_log_impl(&dword_1D2F05000, v101, v102, "[UniversalSuggestionsStoreRuntimeQueryWrapper]: unsupported entity type", v105, 2u);
    MEMORY[0x1D942F2D0](v105, -1, -1);
  }

  uint64_t v106 = type metadata accessor for UserFeedbackLearnedEntitySuggestion();
  uint64_t v107 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56);
  return v107(v104, 1, 1, v106);
}

uint64_t UserFeedbackLearnedEntitySuggester.deinit()
{
  sub_1D2F1CD78(v0 + 16, &qword_1EA699FF0);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return v0;
}

uint64_t UserFeedbackLearnedEntitySuggester.__deallocating_deinit()
{
  sub_1D2F1CD78(v0 + 16, &qword_1EA699FF0);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FF203C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1D2FEFFA4(a1, a2, a3, a4);
}

uint64_t sub_1D2FF2060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UniversalSuggestionCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2FF20C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UniversalSuggestionCandidate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2FF2120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UniversalSuggestionCandidate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of UserFeedbackLearnedEntitySuggesting.query(originalUsoEntity:requestId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1D30010A8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1D30010A8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D30010A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2FF2564);
}

uint64_t sub_1D2FF2564(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D30010A8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UserFeedbackLearnedEntitySuggestion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2FF2628);
}

void *sub_1D2FF2628(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1D30010A8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1D2FF26D0()
{
  uint64_t result = sub_1D30010A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for UserFeedbackLearnedEntitySuggester(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserFeedbackLearnedEntitySuggester);
}

uint64_t dispatch thunk of UserFeedbackLearnedEntitySuggester.query(originalUsoEntity:requestId:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1D2FF27B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2FF2818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D2FF2880(void *a1, void *a2, void *a3)
{
  id v45 = a3;
  id v6 = objc_msgSend(a1, sel_entity);
  id v7 = objc_msgSend(v6, sel_name);

  if (v7)
  {
    uint64_t v8 = sub_1D3001B78();
    uint64_t v10 = v9;

    if (v8 == 0xD000000000000011 && v10 == 0x80000001D300F640)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = sub_1D3002778();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        return;
      }
    }
    uint64_t v12 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    id v13 = objc_msgSend(a1, sel_primitiveValueForKey_, v12);

    if (v13)
    {
      sub_1D3002398();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v42, 0, sizeof(v42));
    }
    sub_1D2F776E4((uint64_t)v42, (uint64_t)v43);
    if (!v44)
    {
      sub_1D2F0BEDC((uint64_t)v43);
      return;
    }
    if (swift_dynamicCast())
    {
      if (v40 == *(void *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesGroundTruthName)
        && v41 == *(void *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesGroundTruthName
                            + 8)
        || (sub_1D3002778() & 1) != 0)
      {
        goto LABEL_54;
      }
      if (v40 == *(void *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptGroundTruthName)
        && v41 == *(void *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptGroundTruthName
                            + 8)
        || (sub_1D3002778() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = sub_1D2FF3378(*(void *)(v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute), *(void *)(v3+ OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute+ 8), a1);
        if (v15)
        {
          if (v14 != *(void *)(v3
                                + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesSiriKitTaskName)
            || v15 != *(void *)(v3
                                + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesSiriKitTaskName
                                + 8))
          {
            char v16 = sub_1D3002778();
            swift_bridgeObjectRelease();
            if (v16) {
              return;
            }
            goto LABEL_28;
          }
LABEL_54:
          swift_bridgeObjectRelease();
          return;
        }
LABEL_28:
        id v18 = objc_msgSend(a2, sel_destinationEntityName);
        if (!v18) {
          return;
        }
        uint64_t v19 = v18;
        uint64_t v36 = a2;
        uint64_t v20 = self;
        id v21 = objc_msgSend(v45, sel_destinationContext);
        id v22 = objc_msgSend(v20, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v19, v21);

        id v39 = v22;
        id v23 = objc_msgSend(v22, sel_entity);
        id v24 = objc_msgSend(v23, sel_attributesByName);

        sub_1D2F7774C();
        uint64_t v25 = sub_1D3001A88();

        uint64_t v37 = v25 + 64;
        uint64_t v26 = 1 << *(unsigned char *)(v25 + 32);
        uint64_t v27 = -1;
        if (v26 < 64) {
          uint64_t v27 = ~(-1 << v26);
        }
        uint64_t v28 = v27 & *(void *)(v25 + 64);
        int64_t v38 = (unint64_t)(v26 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v29 = 0;
        while (1)
        {
          if (v28)
          {
            v28 &= v28 - 1;
          }
          else
          {
            int64_t v33 = v29 + 1;
            if (__OFADD__(v29, 1))
            {
              __break(1u);
              goto LABEL_57;
            }
            if (v33 >= v38) {
              goto LABEL_53;
            }
            uint64_t v34 = *(void *)(v37 + 8 * v33);
            ++v29;
            if (!v34)
            {
              int64_t v29 = v33 + 1;
              if (v33 + 1 >= v38) {
                goto LABEL_53;
              }
              uint64_t v34 = *(void *)(v37 + 8 * v29);
              if (!v34)
              {
                int64_t v29 = v33 + 2;
                if (v33 + 2 >= v38) {
                  goto LABEL_53;
                }
                uint64_t v34 = *(void *)(v37 + 8 * v29);
                if (!v34)
                {
                  int64_t v29 = v33 + 3;
                  if (v33 + 3 >= v38) {
                    goto LABEL_53;
                  }
                  uint64_t v34 = *(void *)(v37 + 8 * v29);
                  if (!v34)
                  {
                    int64_t v29 = v33 + 4;
                    if (v33 + 4 >= v38) {
                      goto LABEL_53;
                    }
                    uint64_t v34 = *(void *)(v37 + 8 * v29);
                    if (!v34)
                    {
                      int64_t v35 = v33 + 5;
                      if (v35 >= v38)
                      {
LABEL_53:
                        swift_release();
                        objc_msgSend(v45, sel_associateSourceInstance_withDestinationInstance_forEntityMapping_, a1, v39, v36);

                        goto LABEL_54;
                      }
                      uint64_t v34 = *(void *)(v37 + 8 * v35);
                      if (!v34)
                      {
                        while (1)
                        {
                          int64_t v29 = v35 + 1;
                          if (__OFADD__(v35, 1)) {
                            break;
                          }
                          if (v29 >= v38) {
                            goto LABEL_53;
                          }
                          uint64_t v34 = *(void *)(v37 + 8 * v29);
                          ++v35;
                          if (v34) {
                            goto LABEL_52;
                          }
                        }
LABEL_57:
                        __break(1u);
                        return;
                      }
                      int64_t v29 = v35;
                    }
                  }
                }
              }
            }
LABEL_52:
            uint64_t v28 = (v34 - 1) & v34;
          }
          swift_bridgeObjectRetain();
          uint64_t v30 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
          id v31 = objc_msgSend(a1, sel_valueForKey_, v30);

          uint64_t v32 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
          swift_bridgeObjectRelease();
          objc_msgSend(v39, sel_setValue_forKey_, v31, v32);
          swift_unknownObjectRelease();
        }
      }
      if (v40 == *(void *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomeGroundTruthName)
        && v41 == *(void *)(v3
                            + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomeGroundTruthName
                            + 8))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v17 = sub_1D3002778();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0) {
          goto LABEL_28;
        }
      }
      if ((sub_1D2FF2ED0(a1) & 1) == 0) {
        return;
      }
      goto LABEL_28;
    }
  }
}

uint64_t sub_1D2FF2ED0(void *a1)
{
  uint64_t v2 = sub_1D2FF393C(*(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomDomainAttribute], *(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomDomainAttribute+ 8], a1);
  if (!v2 || (uint64_t v3 = sub_1D2F34950(v2), v5 = v4, swift_bridgeObjectRelease(), !v5))
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1D3001918();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EBD65778);
    uint64_t v10 = v1;
    char v11 = sub_1D30018F8();
    os_log_type_t v12 = sub_1D30020A8();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = v14;
      *(_DWORD *)id v13 = 136315138;
      uint64_t v15 = *(void *)&v10[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute];
      unint64_t v16 = *(void *)&v10[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute
                          + 8];
      swift_bridgeObjectRetain();
      sub_1D2F09508(v15, v16, &v18);
      sub_1D3002318();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v11, v12, "Encoded ground truth missing expected attribute %s. Skipping its migration.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v14, -1, -1);
      MEMORY[0x1D942F2D0](v13, -1, -1);
    }
    else
    {
    }
    goto LABEL_14;
  }
  if (v3 == *(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesDomainEnumValue]
    && v5 == *(void *)&v1[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesDomainEnumValue
                          + 8])
  {
    swift_bridgeObjectRelease();
LABEL_14:
    char v8 = 0;
    return v8 & 1;
  }
  char v7 = sub_1D3002778();
  swift_bridgeObjectRelease();
  char v8 = v7 ^ 1;
  return v8 & 1;
}

id sub_1D2FF310C()
{
  unint64_t v1 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesGroundTruthName];
  *(void *)unint64_t v1 = 0xD000000000000013;
  *((void *)v1 + 1) = 0x80000001D3014850;
  uint64_t v2 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptGroundTruthName];
  *(void *)uint64_t v2 = 0xD000000000000018;
  *((void *)v2 + 1) = 0x80000001D300D9F0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_promptTaskAttribute];
  *(void *)uint64_t v3 = 0x5474706D6F72705FLL;
  *((void *)v3 + 1) = 0xEB000000006B7361;
  uint64_t v4 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesSiriKitTaskName];
  *(void *)uint64_t v4 = 0xD000000000000029;
  *((void *)v4 + 1) = 0x80000001D3014870;
  uint64_t v5 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomeGroundTruthName];
  *(void *)uint64_t v5 = 0xD000000000000023;
  *((void *)v5 + 1) = 0x80000001D30148A0;
  id v6 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_suggestionOutcomDomainAttribute];
  *(void *)id v6 = 0x6E69616D6F64;
  *((void *)v6 + 1) = 0xE600000000000000;
  char v7 = &v0[OBJC_IVAR____TtC28SiriPrivateLearningAnalytics39GroundTruthModelV3toV4CoreDataMigration_messagesDomainEnumValue];
  *(void *)char v7 = 0x736567617373656DLL;
  *((void *)v7 + 1) = 0xE800000000000000;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for GroundTruthModelV3toV4CoreDataMigration();
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1D2FF3268()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroundTruthModelV3toV4CoreDataMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroundTruthModelV3toV4CoreDataMigration()
{
  return self;
}

uint64_t sub_1D2FF3378(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v7 = objc_msgSend(a3, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1D3002398();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_1D2F776E4((uint64_t)v40, (uint64_t)&v41);
  if (!*((void *)&v42 + 1)) {
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  char v8 = self;
  objc_super v9 = (void *)sub_1D3000F58();
  *(void *)&long long v41 = 0;
  id v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 0, &v41);

  if (!v10)
  {
    id v15 = (id)v41;
    unint64_t v16 = (void *)sub_1D3000DF8();

    swift_willThrow();
LABEL_12:
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D3001918();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBD65778);
    id v18 = v16;
    id v19 = v16;
    uint64_t v20 = sub_1D30018F8();
    os_log_type_t v21 = sub_1D30020B8();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      *(_DWORD *)id v22 = 138412290;
      id v24 = v16;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v41 = v25;
      sub_1D3002318();
      *id v23 = v25;

      _os_log_impl(&dword_1D2F05000, v20, v21, "Failed to decode ground truth to JSON during migration. Skipping copy. Error=%@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v23, -1, -1);
      MEMORY[0x1D942F2D0](v22, -1, -1);
      sub_1D2F0D1CC(v38, v39);
    }
    else
    {
      sub_1D2F0D1CC(v38, v39);
    }
    return 0;
  }
  id v11 = (id)v41;
  sub_1D3002398();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A040);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    sub_1D2F0D1CC(v38, v39);
    return 0;
  }
  uint64_t v12 = *(void *)&v40[0];
  if (*(void *)(*(void *)&v40[0] + 16)
    && (unint64_t v13 = sub_1D2F0DC98(0x64616F6C796170, 0xE700000000000000), (v14 & 1) != 0))
  {
    sub_1D2F0BD44(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v41);
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v42 + 1))
  {
    sub_1D2F0D1CC(v38, v39);
LABEL_23:
    sub_1D2F0BEDC((uint64_t)&v41);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v37 = sub_1D3000F48();
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v27 >> 60 == 15) {
    goto LABEL_20;
  }
  unint64_t v36 = v27;
  int64_t v29 = (void *)sub_1D3000F58();
  *(void *)&long long v41 = 0;
  id v30 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v29, 0, &v41);

  if (!v30)
  {
    id v35 = (id)v41;
    unint64_t v16 = (void *)sub_1D3000DF8();

    swift_willThrow();
    sub_1D2F2276C(v37, v36);
    goto LABEL_12;
  }
  id v31 = (id)v41;
  sub_1D3002398();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1D2F0D1CC(v38, v39);
    sub_1D2F2276C(v37, v36);
    return 0;
  }
  uint64_t v32 = *(void *)&v40[0];
  if (*(void *)(*(void *)&v40[0] + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1D2F0DC98(a1, a2);
    if (v34)
    {
      sub_1D2F0BD44(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v41);
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_1D2F0D1CC(v38, v39);
  sub_1D2F2276C(v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B8);
  if (swift_dynamicCast()) {
    return *(void *)&v40[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_1D2FF393C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  id v6 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v7 = objc_msgSend(a3, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1D3002398();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  sub_1D2F776E4((uint64_t)v40, (uint64_t)&v41);
  if (!*((void *)&v42 + 1)) {
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  char v8 = self;
  objc_super v9 = (void *)sub_1D3000F58();
  *(void *)&long long v41 = 0;
  id v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 0, &v41);

  if (!v10)
  {
    id v15 = (id)v41;
    unint64_t v16 = (void *)sub_1D3000DF8();

    swift_willThrow();
LABEL_12:
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1D3001918();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBD65778);
    id v18 = v16;
    id v19 = v16;
    uint64_t v20 = sub_1D30018F8();
    os_log_type_t v21 = sub_1D30020B8();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      *(_DWORD *)id v22 = 138412290;
      id v24 = v16;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v41 = v25;
      sub_1D3002318();
      *id v23 = v25;

      _os_log_impl(&dword_1D2F05000, v20, v21, "Failed to decode ground truth to JSON during migration. Skipping copy. Error=%@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v23, -1, -1);
      MEMORY[0x1D942F2D0](v22, -1, -1);
      sub_1D2F0D1CC(v38, v39);
    }
    else
    {
      sub_1D2F0D1CC(v38, v39);
    }
    return 0;
  }
  id v11 = (id)v41;
  sub_1D3002398();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A040);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    sub_1D2F0D1CC(v38, v39);
    return 0;
  }
  uint64_t v12 = *(void *)&v40[0];
  if (*(void *)(*(void *)&v40[0] + 16)
    && (unint64_t v13 = sub_1D2F0DC98(0x64616F6C796170, 0xE700000000000000), (v14 & 1) != 0))
  {
    sub_1D2F0BD44(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v41);
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v42 + 1))
  {
    sub_1D2F0D1CC(v38, v39);
LABEL_23:
    sub_1D2F0BEDC((uint64_t)&v41);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v37 = sub_1D3000F48();
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v27 >> 60 == 15) {
    goto LABEL_20;
  }
  unint64_t v36 = v27;
  int64_t v29 = (void *)sub_1D3000F58();
  *(void *)&long long v41 = 0;
  id v30 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v29, 0, &v41);

  if (!v30)
  {
    id v35 = (id)v41;
    unint64_t v16 = (void *)sub_1D3000DF8();

    swift_willThrow();
    sub_1D2F2276C(v37, v36);
    goto LABEL_12;
  }
  id v31 = (id)v41;
  sub_1D3002398();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1D2F0D1CC(v38, v39);
    sub_1D2F2276C(v37, v36);
    return 0;
  }
  uint64_t v32 = *(void *)&v40[0];
  if (*(void *)(*(void *)&v40[0] + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1D2F0DC98(a1, a2);
    if (v34)
    {
      sub_1D2F0BD44(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v41);
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
    swift_bridgeObjectRetain();
  }
  sub_1D2F0D1CC(v38, v39);
  sub_1D2F2276C(v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B8);
  if (swift_dynamicCast()) {
    return *(void *)&v40[0];
  }
  else {
    return 0;
  }
}

uint64_t OldestRecordEvictionPolicy.init(timestampKeyPath:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t OldestRecordEvictionPolicy.timestampKeyPath.getter()
{
  return swift_retain();
}

uint64_t OldestRecordEvictionPolicy.evictionCandidates(count:context:)(uint64_t a1)
{
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_setFetchLimit_, a1);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBD633B0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1D3005C00;
    sub_1D2FF4088();
    swift_retain();
    *(void *)(v5 + 32) = sub_1D30020D8();
    sub_1D3001DE8();
    id v6 = (void *)sub_1D3001DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setSortDescriptors_, v6);

    uint64_t v7 = sub_1D3002238();
  }
  else
  {

    return sub_1D3001E38();
  }
  return v7;
}

uint64_t sub_1D2FF4070(uint64_t a1)
{
  return OldestRecordEvictionPolicy.evictionCandidates(count:context:)(a1);
}

unint64_t sub_1D2FF4088()
{
  unint64_t result = qword_1EBD63330;
  if (!qword_1EBD63330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBD63330);
  }
  return result;
}

uint64_t type metadata accessor for OldestRecordEvictionPolicy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D2FF40E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D2FF4128(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v46 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v45 = (char *)v32 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v44 = (uint64_t)v32 - v13;
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v43 = *(void *)(a1 + 16);
  if (v43)
  {
    uint64_t v37 = (char *)v32 - v15;
    uint64_t v38 = v7;
    unint64_t v16 = 0;
    uint64_t v41 = v7 + 48;
    uint64_t v42 = v7 + 56;
    uint64_t v49 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    id v35 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v36 = v7 + 16;
    v32[1] = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v39 = v5;
    uint64_t v40 = a1;
    uint64_t v33 = v6;
    while (v16 < *(void *)(a1 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v18 = *(void *)(v7 + 72);
      id v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      v19(v5, a1 + v17 + v18 * v16, v6);
      char v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v34(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
        goto LABEL_15;
      }
      unint64_t v48 = v17;
      uint64_t v20 = *v49;
      os_log_type_t v21 = v37;
      (*v49)(v37, v5, v6);
      id v22 = v45;
      v19(v45, (unint64_t)v21, v6);
      uint64_t v23 = v44;
      char v24 = sub_1D2FDFDFC(v44, v22);
      uint64_t v25 = *v35;
      (*v35)(v23, v6);
      if (v24)
      {
        v20(v46, v21, v6);
        uint64_t v26 = v50;
        unint64_t v27 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D2F0A0E0(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v50;
        }
        uint64_t v7 = v38;
        unint64_t v28 = v48;
        unint64_t v30 = *(void *)(v26 + 16);
        unint64_t v29 = *(void *)(v26 + 24);
        unint64_t v31 = v30 + 1;
        uint64_t v6 = v33;
        if (v30 >= v29 >> 1)
        {
          unint64_t v48 = v30 + 1;
          sub_1D2F0A0E0(v29 > 1, v30 + 1, 1);
          unint64_t v31 = v48;
          uint64_t v26 = v50;
        }
        *(void *)(v26 + 16) = v31;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v26 + v28 + v30 * v18, v46, v6);
        uint64_t v50 = v26;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v21, v6);
        uint64_t v7 = v38;
      }
      ++v16;
      uint64_t v5 = v39;
      a1 = v40;
      if (v43 == v16)
      {
        v34(v39, 1, 1, v6);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1D2F0D16C((uint64_t)v5);
    return v50;
  }
  return result;
}

uint64_t sub_1D2FF453C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = v6 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v6 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_21;
    }
    BOOL v15 = __OFADD__(v12++, 1);
    if (v15)
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v12 >= v11) {
      goto LABEL_54;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_20:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_21:
    uint64_t v18 = *v5;
    if (*(void *)(*v5 + 16))
    {
      int v19 = *(_DWORD *)(*(void *)(v6 + 48) + 4 * v14);
      unint64_t v20 = sub_1D2F0DD10(v19);
      if (v21)
      {
        uint64_t v22 = *(void *)(*(void *)(v18 + 56) + 8 * v20);
        uint64_t v58 = v22;
        if (v4[2] && (unint64_t v23 = sub_1D2F0DD10(v19), (v24 & 1) != 0))
        {
          unint64_t v60 = *(void **)(v4[7] + 8 * v23);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_1D2F9D248(v22);
          unint64_t v60 = (void *)MEMORY[0x1E4FBC870];
          uint64_t v25 = swift_bridgeObjectRetain();
          uint64_t v26 = v4;
          uint64_t v56 = sub_1D2FF4128(v25, (uint64_t)&v60);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v60 = v26;
          unint64_t v29 = sub_1D2F0DD10(v19);
          uint64_t v30 = v26[2];
          BOOL v31 = (v28 & 1) == 0;
          uint64_t v32 = v30 + v31;
          if (__OFADD__(v30, v31)) {
            goto LABEL_59;
          }
          if (v26[3] >= v32)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v4 = v60;
              if ((v28 & 1) == 0) {
                goto LABEL_29;
              }
            }
            else
            {
              char v53 = v28;
              sub_1D2F13098();
              char v54 = v53;
              uint64_t v4 = v60;
              if ((v54 & 1) == 0) {
                goto LABEL_29;
              }
            }
          }
          else
          {
            char v59 = v28;
            sub_1D2F0EDA4(v32, isUniquelyReferenced_nonNull_native);
            unint64_t v33 = sub_1D2F0DD10(v19);
            if ((v59 & 1) != (v34 & 1)) {
              goto LABEL_61;
            }
            unint64_t v29 = v33;
            uint64_t v4 = v60;
            if ((v59 & 1) == 0)
            {
LABEL_29:
              v4[(v29 >> 6) + 8] |= 1 << v29;
              *(_DWORD *)(v4[6] + 4 * v29) = v19;
              *(void *)(v4[7] + 8 * v29) = v56;
              uint64_t v35 = v4[2];
              BOOL v15 = __OFADD__(v35, 1);
              uint64_t v36 = v35 + 1;
              if (v15) {
                goto LABEL_60;
              }
LABEL_41:
              uint64_t v4[2] = v36;
              goto LABEL_49;
            }
          }
          uint64_t v47 = v4[7];
          unint64_t v48 = v4;
          uint64_t v49 = 8 * v29;
          swift_bridgeObjectRelease();
          uint64_t v50 = v56;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v37 = v4;
          char v38 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v60 = v37;
          unint64_t v40 = sub_1D2F0DD10(v19);
          uint64_t v41 = v37[2];
          BOOL v42 = (v39 & 1) == 0;
          uint64_t v43 = v41 + v42;
          if (__OFADD__(v41, v42)) {
            goto LABEL_57;
          }
          if (v37[3] >= v43)
          {
            if (v38)
            {
              uint64_t v4 = v60;
              if ((v39 & 1) == 0) {
                goto LABEL_40;
              }
            }
            else
            {
              char v51 = v39;
              sub_1D2F13098();
              char v52 = v51;
              uint64_t v4 = v60;
              if ((v52 & 1) == 0) {
                goto LABEL_40;
              }
            }
          }
          else
          {
            char v57 = v39;
            sub_1D2F0EDA4(v43, v38);
            unint64_t v44 = sub_1D2F0DD10(v19);
            if ((v57 & 1) != (v45 & 1)) {
              goto LABEL_61;
            }
            unint64_t v40 = v44;
            uint64_t v4 = v60;
            if ((v57 & 1) == 0)
            {
LABEL_40:
              v4[(v40 >> 6) + 8] |= 1 << v40;
              *(_DWORD *)(v4[6] + 4 * v4sub_1D2FD62D8(0, 0) = v19;
              *(void *)(v4[7] + 8 * v4sub_1D2FD62D8(0, 0) = v58;
              uint64_t v46 = v4[2];
              BOOL v15 = __OFADD__(v46, 1);
              uint64_t v36 = v46 + 1;
              if (v15) {
                goto LABEL_58;
              }
              goto LABEL_41;
            }
          }
          uint64_t v47 = v4[7];
          unint64_t v48 = v4;
          uint64_t v49 = 8 * v40;
          swift_bridgeObjectRelease();
          uint64_t v50 = v58;
        }
        *(void *)(v47 + v49) = v50;
        uint64_t v4 = v48;
LABEL_49:
        swift_bridgeObjectRelease();
      }
    }
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v11) {
    goto LABEL_54;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v11) {
    goto LABEL_54;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v11) {
    goto LABEL_54;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v11) {
    goto LABEL_54;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_19;
  }
  int64_t v17 = v12 + 5;
  if (v12 + 5 >= v11)
  {
LABEL_54:
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD611A0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    return result;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_19:
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v11) {
      goto LABEL_54;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  type metadata accessor for SISchemaComponentName(0);
  uint64_t result = sub_1D30028B8();
  __break(1u);
  return result;
}

uint64_t sub_1D2FF4A04()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for MultiDictionary()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t CurrentLocales.init(deviceLocale:siriPreferences:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63670);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D3001138();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD637B0);
  MEMORY[0x1F4188790](v13 - 8);
  BOOL v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D3001148();
  sub_1D3001128();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = sub_1D30010D8();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1D2F1CD78((uint64_t)v15, &qword_1EBD637B0);
    uint64_t v18 = 0x736978652D6E6F6ELL;
    unint64_t v19 = 0xEC000000746E6574;
  }
  else
  {
    uint64_t v18 = sub_1D30010C8();
    unint64_t v19 = v20;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  }
  sub_1D3001118();
  uint64_t v21 = sub_1D3001108();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v8, 1, v21) == 1)
  {
    sub_1D2F1CD78((uint64_t)v8, &qword_1EBD63670);
    uint64_t v23 = 0x736978652D6E6F6ELL;
    unint64_t v58 = 0xEC000000746E6574;
  }
  else
  {
    uint64_t v23 = sub_1D30010C8();
    unint64_t v58 = v24;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v21);
  }
  id v25 = objc_msgSend(a2, sel_languageCode);
  uint64_t v61 = v18;
  uint64_t v59 = v23;
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = sub_1D3001B78();
    unint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0x736978652D6E6F6ELL;
    unint64_t v29 = 0xEC000000746E6574;
  }
  uint64_t v66 = v27;
  unint64_t v67 = v29;
  uint64_t v64 = 45;
  unint64_t v65 = 0xE100000000000000;
  sub_1D2F226C4();
  uint64_t v30 = (void *)sub_1D3002348();
  uint64_t v31 = v30[2];
  id v63 = a2;
  if (v31)
  {
    unint64_t v32 = v30[5];
    uint64_t v57 = v30[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v57 = 0x736978652D6E6F6ELL;
    unint64_t v32 = 0xEC000000746E6574;
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = v27;
  unint64_t v67 = v29;
  uint64_t v64 = 45;
  unint64_t v65 = 0xE100000000000000;
  uint64_t v33 = sub_1D3002348();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v33 + 16);
  unint64_t v60 = v19;
  if (v34)
  {
    uint64_t v35 = v33 + 16 * v34;
    unint64_t v36 = *(void *)(v35 + 24);
    uint64_t v56 = *(void *)(v35 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v56 = 0x736978652D6E6F6ELL;
    unint64_t v36 = 0xEC000000746E6574;
  }
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v63, sel_outputVoice);
  uint64_t v62 = a1;
  if (v37
    && (char v38 = v37, v39 = objc_msgSend(v37, sel_languageCode), v38, v39))
  {
    uint64_t v40 = sub_1D3001B78();
    unint64_t v42 = v41;
  }
  else
  {
    uint64_t v40 = 0x736978652D6E6F6ELL;
    unint64_t v42 = 0xEC000000746E6574;
  }
  uint64_t v66 = v40;
  unint64_t v67 = v42;
  uint64_t v64 = 45;
  unint64_t v65 = 0xE100000000000000;
  uint64_t v43 = (void *)sub_1D3002348();
  if (v43[2])
  {
    unint64_t v44 = v43[5];
    uint64_t v55 = v43[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v55 = 0x736978652D6E6F6ELL;
    unint64_t v44 = 0xEC000000746E6574;
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = v40;
  unint64_t v67 = v42;
  uint64_t v64 = 45;
  unint64_t v65 = 0xE100000000000000;
  uint64_t v45 = sub_1D3002348();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    uint64_t v47 = v45 + 16 * v46;
    uint64_t v49 = *(void *)(v47 + 16);
    unint64_t v48 = *(void *)(v47 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v49 = 0x736978652D6E6F6ELL;
    unint64_t v48 = 0xEC000000746E6574;
  }

  uint64_t v50 = sub_1D3001158();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v62, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v51 = v60;
  swift_bridgeObjectRetain();
  unint64_t v52 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = v61;
  *(void *)(a3 + 8) = v51;
  *(void *)(a3 + 16) = v59;
  *(void *)(a3 + 24) = v52;
  *(void *)(a3 + 32) = v57;
  *(void *)(a3 + 4sub_1D2FD62D8(0, 0) = v32;
  *(void *)(a3 + 48) = v56;
  *(void *)(a3 + 56) = v36;
  *(void *)(a3 + 64) = v55;
  *(void *)(a3 + 72) = v44;
  *(void *)(a3 + 8sub_1D2FD62D8(0, 0) = v49;
  *(void *)(a3 + 88) = v48;
  strcpy((char *)(a3 + 96), "non-existent");
  *(unsigned char *)(a3 + 109) = 0;
  *(_WORD *)(a3 + 11sub_1D2FD62D8(0, 0) = -5120;
  return result;
}

uint64_t sub_1D2FF50FC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = HIBYTE(a4) & 0xF;
  void v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  v13[4] = 0;
  void v13[5] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D3001C88();
  if (v8)
  {
    uint64_t v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      char v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v7 = sub_1D3001C88();
      uint64_t v9 = v11;
      if (!v11) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t Locale.stringFormat.getter()
{
  return sub_1D2FF51EC();
}

SiriPrivateLearningAnalytics::Locale __swiftcall Locale.init(language:region:)(Swift::String language, Swift::String region)
{
  *id v2 = language;
  v2[1] = region;
  result.Swift::String region = region;
  result.Swift::String language = language;
  return result;
}

uint64_t Locale.stringDashFormat.getter()
{
  return sub_1D2FF51EC();
}

uint64_t sub_1D2FF51EC()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t LocalesController.currentLocales.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v11 = v1[11];
  uint64_t v12 = v1[12];
  uint64_t v13 = v1[13];
  uint64_t v14 = v1[14];
  uint64_t v15 = v1[15];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t LocalesController.__allocating_init(currentLocales:supportedLocalesStore:)(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 16);
  long long v6 = *(_OWORD *)(a1 + 32);
  long long v7 = *(_OWORD *)(a1 + 48);
  long long v8 = *(_OWORD *)(a1 + 64);
  long long v9 = *(_OWORD *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 104);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 64) = v7;
  *(_OWORD *)(v4 + 8sub_1D2FD62D8(0, 0) = v8;
  *(_OWORD *)(v4 + 96) = v9;
  *(void *)(v4 + 112) = v10;
  *(void *)(v4 + 12sub_1D2FD62D8(0, 0) = v11;
  uint64_t v12 = a2[3];
  uint64_t v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v12);
  *(void *)(v4 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return v4;
}

uint64_t LocalesController.init(currentLocales:supportedLocalesStore:)(uint64_t a1, void *a2)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v5 = *(_OWORD *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 48);
  long long v7 = *(_OWORD *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 104);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v5;
  *(_OWORD *)(v2 + 64) = v6;
  *(_OWORD *)(v2 + 8sub_1D2FD62D8(0, 0) = v7;
  *(_OWORD *)(v2 + 96) = v8;
  *(void *)(v2 + 112) = v9;
  *(void *)(v2 + 12sub_1D2FD62D8(0, 0) = v10;
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  *(void *)(v2 + 128) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return v2;
}

uint64_t sub_1D2FF5440()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2FF5448()
{
  uint64_t v1 = *(void *)(v0[16] + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v0[3];
  uint64_t v6 = v0[2];
  for (uint64_t i = swift_bridgeObjectRetain() + 56; ; i += 32)
  {
    uint64_t v7 = *(void *)(i - 24);
    uint64_t v8 = *(void *)(i - 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v7 == v6 && v8 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v4 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4) {
      break;
    }
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1D2FF560C()
{
  uint64_t v1 = *(void *)(v0[16] + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v0[7];
  uint64_t v6 = v0[6];
  for (uint64_t i = swift_bridgeObjectRetain() + 56; ; i += 32)
  {
    uint64_t v7 = *(void *)(i - 24);
    uint64_t v8 = *(void *)(i - 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v7 == v6 && v8 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v4 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4) {
      break;
    }
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1D2FF57D0()
{
  uint64_t v1 = *(void *)(v0[16] + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v0[11];
  uint64_t v6 = v0[10];
  for (uint64_t i = swift_bridgeObjectRetain() + 56; ; i += 32)
  {
    uint64_t v7 = *(void *)(i - 24);
    uint64_t v8 = *(void *)(i - 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v7 == v6 && v8 == v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v4 = sub_1D3002778();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4) {
      break;
    }
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t LocalesController.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LocalesController.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CurrentLocales.device.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CurrentLocales.siri.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CurrentLocales.siriVoice.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[9];
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  *a1 = v1[8];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CurrentLocales.emptyIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall CurrentLocales.init(device:siri:siriVoice:)(SiriPrivateLearningAnalytics::CurrentLocales *__return_ptr retstr, SiriPrivateLearningAnalytics::Locale device, SiriPrivateLearningAnalytics::Locale siri, SiriPrivateLearningAnalytics::Locale siriVoice)
{
  uint64_t v4 = *(void *)(device.language._countAndFlagsBits + 16);
  long long v5 = *(void **)(device.language._countAndFlagsBits + 24);
  Swift::String v6 = *(Swift::String *)device.language._object;
  uint64_t v7 = *((void *)device.language._object + 2);
  uint64_t v8 = (void *)*((void *)device.language._object + 3);
  Swift::String v9 = *(Swift::String *)device.region._countAndFlagsBits;
  uint64_t v10 = *(void *)(device.region._countAndFlagsBits + 16);
  uint64_t v11 = *(void **)(device.region._countAndFlagsBits + 24);
  retstr->device.Swift::String language = *(Swift::String *)device.language._countAndFlagsBits;
  retstr->device.region._uint64_t countAndFlagsBits = v4;
  retstr->device.region._object = v5;
  retstr->siri.Swift::String language = v6;
  retstr->siri.region._uint64_t countAndFlagsBits = v7;
  retstr->siri.region._object = v8;
  retstr->siriVoice.Swift::String language = v9;
  retstr->siriVoice.region._uint64_t countAndFlagsBits = v10;
  retstr->siriVoice.region._object = v11;
  strcpy((char *)&retstr->emptyIdentifier, "non-existent");
  BYTE5(retstr->emptyIdentifier._object) = 0;
  HIWORD(retstr->emptyIdentifier._object) = -5120;
}

uint64_t CurrentLocales.description.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v12 = v0[11];
  uint64_t v23 = v2;
  v24[0] = v1;
  v24[1] = v3;
  void v24[2] = v4;
  _OWORD v24[3] = v5;
  v24[4] = v6;
  v24[5] = v7;
  v24[6] = v8;
  v24[7] = v9;
  v24[8] = v10;
  v24[9] = v11;
  v24[10] = v12;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D2F09B08(0, 3, 0);
  for (uint64_t i = 0; i != 12; i += 4)
  {
    uint64_t v19 = *(void *)&v22[i * 8 + 32];
    uint64_t v20 = v24[i];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1D3001C68();
    swift_bridgeObjectRetain();
    sub_1D3001C68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v15 = *(void *)(v21 + 16);
    unint64_t v14 = *(void *)(v21 + 24);
    if (v15 >= v14 >> 1) {
      sub_1D2F09B08(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v21 + 16) = v15 + 1;
    uint64_t v16 = v21 + 16 * v15;
    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 4sub_1D2FD62D8(0, 0) = v20;
  }
  swift_arrayDestroy();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC38);
  sub_1D2F37FC8();
  uint64_t v17 = sub_1D3001B18();
  swift_release();
  return v17;
}

SiriPrivateLearningAnalytics::SupportedLocalesStorePath __swiftcall SupportedLocalesStorePath.init(bundle:fileName:)(NSBundle bundle, Swift::String fileName)
{
  *(NSBundle *)uint64_t v2 = bundle;
  *(Swift::String *)(v2 + 8) = fileName;
  result.fileName = fileName;
  result.bundle = bundle;
  return result;
}

__n128 SupportedLocalesPListStore.__allocating_init(storePath:)(__n128 *a1)
{
  uint64_t v2 = swift_allocObject();
  __n128 result = *a1;
  unint64_t v4 = a1[1].n128_u64[0];
  *(__n128 *)(v2 + 16) = *a1;
  *(void *)(v2 + 4sub_1D2FD62D8(0, 0) = 0xD000000000000010;
  *(void *)(v2 + 48) = 0x80000001D30148D0;
  *(void *)(v2 + 32) = v4;
  return result;
}

uint64_t SupportedLocalesPListStore.init(storePath:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(void *)(v1 + 4sub_1D2FD62D8(0, 0) = 0xD000000000000010;
  *(void *)(v1 + 48) = 0x80000001D30148D0;
  *(void *)(v1 + 32) = v2;
  return v1;
}

void *sub_1D2FF5EA4()
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  uint64_t v3 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v4 = objc_msgSend(v1, sel_pathForResource_ofType_, v2, v3);

  if (v4)
  {
    id v5 = objc_msgSend(self, sel_defaultManager);
    id v6 = objc_msgSend(v5, sel_contentsAtPath_, v4);

    if (v6)
    {
      uint64_t v7 = sub_1D3000F68();
      unint64_t v9 = v8;

      uint64_t v10 = self;
      uint64_t v11 = (void *)sub_1D3000F58();
      uint64_t v42 = 0;
      id v12 = objc_msgSend(v10, sel_propertyListWithData_options_format_error_, v11, 0, 0, &v42);

      if (v12)
      {
        id v13 = (id)v42;
        sub_1D3002398();
        swift_unknownObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD5FC18);
        if (swift_dynamicCast())
        {
          if (*(void *)(v41[0] + 16))
          {
            uint64_t v16 = v0 + 40;
            uint64_t v14 = *(void *)(v0 + 40);
            uint64_t v15 = *(void *)(v16 + 8);
            swift_bridgeObjectRetain();
            unint64_t v17 = sub_1D2F0DC98(v14, v15);
            if (v18)
            {
              uint64_t v19 = *(void *)(*(void *)(v41[0] + 56) + 8 * v17);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v20 = *(void *)(v19 + 16);
              if (v20)
              {
                uint64_t v39 = v7;
                unint64_t v40 = v9;
                swift_bridgeObjectRetain();
                uint64_t v21 = (uint64_t *)(v19 + 40);
                uint64_t v22 = (void *)MEMORY[0x1E4FBC860];
                do
                {
                  uint64_t v24 = *v21;
                  v41[0] = *(v21 - 1);
                  v41[1] = v24;
                  sub_1D2FF6388(v41, &v42);
                  unint64_t v25 = v43;
                  if (v43)
                  {
                    uint64_t v26 = v42;
                    uint64_t v28 = v44;
                    uint64_t v27 = v45;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v22 = sub_1D2F28DB8(0, v22[2] + 1, 1, v22);
                    }
                    unint64_t v30 = v22[2];
                    unint64_t v29 = v22[3];
                    if (v30 >= v29 >> 1) {
                      uint64_t v22 = sub_1D2F28DB8((void *)(v29 > 1), v30 + 1, 1, v22);
                    }
                    uint64_t v22[2] = v30 + 1;
                    uint64_t v23 = &v22[4 * v30];
                    v23[4] = v26;
                    v23[5] = v25;
                    v23[6] = v28;
                    v23[7] = v27;
                  }
                  v21 += 2;
                  --v20;
                }
                while (v20);
                swift_bridgeObjectRelease();
                sub_1D2F0D1CC(v39, v40);
                swift_bridgeObjectRelease();
              }
              else
              {
                sub_1D2F0D1CC(v7, v9);
                swift_bridgeObjectRelease();
                return (void *)MEMORY[0x1E4FBC860];
              }
              return v22;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
        }
        sub_1D2F0D1CC(v7, v9);
      }
      else
      {
        id v31 = (id)v42;
        unint64_t v32 = (void *)sub_1D3000DF8();

        swift_willThrow();
        sub_1D2F0D1CC(v7, v9);
      }
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1D3001918();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EBD65778);
  uint64_t v34 = sub_1D30018F8();
  os_log_type_t v35 = sub_1D30020B8();
  if (os_log_type_enabled(v34, v35))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)unint64_t v36 = 136315138;
    v41[0] = v37;
    uint64_t v42 = 28261;
    unint64_t v43 = 0xE200000000000000;
    sub_1D3001C68();
    sub_1D3001C68();
    uint64_t v42 = sub_1D2F09508(v42, v43, v41);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2F05000, v34, v35, "Couldn't get supported locales, falling back to %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v37, -1, -1);
    MEMORY[0x1D942F2D0](v36, -1, -1);
  }

  return &unk_1F2A16108;
}

void sub_1D2FF6388(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v19 = *a1;
  unint64_t v20 = v4;
  sub_1D2F226C4();
  id v6 = (void *)sub_1D3002348();
  if (v6[2])
  {
    uint64_t v7 = v6[4];
    uint64_t v8 = v6[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v5;
    unint64_t v20 = v4;
    uint64_t v9 = sub_1D3002348();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = v9 + 16 * v10;
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v12 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *a2 = v7;
      a2[1] = v8;
      a2[2] = v13;
      a2[3] = v12;
      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1D3001918();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBD65778);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1D30018F8();
  os_log_type_t v16 = sub_1D30020B8();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    uint64_t v21 = v2;
    *(_DWORD *)unint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2F09508(v5, v4, &v19);
    sub_1D3002318();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2F05000, v15, v16, "Supported locales has unexpect format %s, expected language_region format", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v18, -1, -1);
    MEMORY[0x1D942F2D0](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + 1) = 0u;
}

uint64_t SupportedLocalesPListStore.deinit()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SupportedLocalesPListStore.__deallocating_deinit()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

__n128 sub_1D2FF669C@<Q0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SupportedLocalesPListStore();
  uint64_t v4 = swift_allocObject();
  __n128 result = *a1;
  unint64_t v6 = a1[1].n128_u64[0];
  *(__n128 *)(v4 + 16) = *a1;
  *(void *)(v4 + 4sub_1D2FD62D8(0, 0) = 0xD000000000000010;
  *(void *)(v4 + 48) = 0x80000001D30148D0;
  *(void *)(v4 + 32) = v6;
  *a2 = v4;
  return result;
}

void *sub_1D2FF6700()
{
  return sub_1D2FF5EA4();
}

uint64_t static LocaleError.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1D3002778();
  }
}

void static Locale.enUSDefaultLocale.getter(void *a1@<X8>)
{
  *a1 = 28261;
  a1[1] = 0xE200000000000000;
  a1[2] = 21333;
  a1[3] = 0xE200000000000000;
}

SiriPrivateLearningAnalytics::Locale __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Locale.init(from:separator:)(Swift::String from, Swift::String separator)
{
  Swift::String v32 = separator;
  object = separator._object;
  uint64_t countAndFlagsBits = separator._countAndFlagsBits;
  uint64_t v5 = from._object;
  uint64_t v6 = from._countAndFlagsBits;
  uint64_t v7 = v2;
  v29[2] = &v32;
  if ((sub_1D2FF50FC(sub_1D2FF7128, (uint64_t)v29, from._countAndFlagsBits, (unint64_t)from._object) & 1) == 0)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D3001918();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1D30018F8();
    os_log_type_t v21 = sub_1D30020B8();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v32._uint64_t countAndFlagsBits = v23;
      *(_DWORD *)uint64_t v22 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1D2F09508(v6, (unint64_t)v5, &v32._countAndFlagsBits);
      uint64_t v33 = v6;
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1D2F09508(countAndFlagsBits, (unint64_t)object, &v32._countAndFlagsBits);
      uint64_t v6 = v33;
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2F05000, v20, v21, "Locale %s does not contain \"%s\" separator", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      uint64_t v24 = v23;
LABEL_12:
      MEMORY[0x1D942F2D0](v24, -1, -1);
      MEMORY[0x1D942F2D0](v22, -1, -1);

LABEL_14:
      sub_1D2FF7180();
      swift_allocError();
      *uint64_t v28 = v6;
      v28[1] = (uint64_t)v5;
      uint64_t v15 = swift_willThrow();
      goto LABEL_15;
    }
LABEL_13:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v32._uint64_t countAndFlagsBits = v6;
  v32._object = v5;
  uint64_t v30 = countAndFlagsBits;
  id v31 = object;
  sub_1D2F226C4();
  uint64_t v8 = (void *)sub_1D3002348();
  uint64_t v9 = v8[2];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1D3001918();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1D30018F8();
    os_log_type_t v26 = sub_1D30020B8();
    if (os_log_type_enabled(v20, v26))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v32._uint64_t countAndFlagsBits = v33;
      *(_DWORD *)uint64_t v22 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1D2F09508(v6, (unint64_t)v5, &v32._countAndFlagsBits);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1D2F09508(countAndFlagsBits, (unint64_t)object, &v32._countAndFlagsBits);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2F05000, v20, v26, "Locale %s has unexpected format, expected <language>%s<region>", (uint8_t *)v22, 0x16u);
      uint64_t v27 = v33;
      swift_arrayDestroy();
      uint64_t v24 = v27;
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  uint64_t v10 = v8[4];
  uint64_t v11 = v8[5];
  uint64_t v12 = (uint64_t)&v8[2 * v9 + 4];
  uint64_t v14 = *(void *)(v12 - 16);
  uint64_t v13 = *(void *)(v12 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRelease();
  *uint64_t v7 = v10;
  v7[1] = v11;
  uint64_t v7[2] = v14;
  v7[3] = v13;
LABEL_15:
  result.region._object = v18;
  result.region._uint64_t countAndFlagsBits = v17;
  result.language._object = v16;
  result.language._uint64_t countAndFlagsBits = v15;
  return result;
}

uint64_t Locale.description.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v2;
}

uint64_t Locale.hash(into:)()
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t Locale.hashValue.getter()
{
  return sub_1D3002968();
}

uint64_t sub_1D2FF6DFC()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D2FF6E70()
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1D3001C28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2FF6F28()
{
  return sub_1D3002968();
}

uint64_t _s28SiriPrivateLearningAnalytics6LocaleV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v6 == v3 && v7 == v2) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1D3002778();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1D2FF7128(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1D3002778() & 1;
  }
}

unint64_t sub_1D2FF7180()
{
  unint64_t result = qword_1EA69A048;
  if (!qword_1EA69A048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA69A048);
  }
  return result;
}

unint64_t sub_1D2FF71D8()
{
  unint64_t result = qword_1EBD5FBD8;
  if (!qword_1EBD5FBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBD5FBD8);
  }
  return result;
}

uint64_t type metadata accessor for LocalesController()
{
  return self;
}

uint64_t method lookup function for LocalesController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocalesController);
}

uint64_t dispatch thunk of LocalesController.__allocating_init(currentLocales:supportedLocalesStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LocalesController.supportedLocaleList()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of LocalesController.isDeviceCurrentLocaleSupported()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of LocalesController.isSiriCurrentLocaleSupported()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of LocalesController.isSiriVoiceCurrentLocaleSupported()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

ValueMetadata *type metadata accessor for CurrentLocales()
{
  return &type metadata for CurrentLocales;
}

uint64_t destroy for SupportedLocalesStorePath(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s28SiriPrivateLearningAnalytics25SupportedLocalesStorePathVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SupportedLocalesStorePath(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SupportedLocalesStorePath(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SupportedLocalesStorePath()
{
  return &type metadata for SupportedLocalesStorePath;
}

uint64_t dispatch thunk of SupportedLocalesStore.init(storePath:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SupportedLocalesStore.getSupportedLocales()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for SupportedLocalesPListStore()
{
  return self;
}

uint64_t method lookup function for SupportedLocalesPListStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SupportedLocalesPListStore);
}

uint64_t dispatch thunk of SupportedLocalesPListStore.__allocating_init(storePath:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SupportedLocalesPListStore.getSupportedLocales()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

ValueMetadata *type metadata accessor for LocaleError()
{
  return &type metadata for LocaleError;
}

ValueMetadata *type metadata accessor for Locale()
{
  return &type metadata for Locale;
}

uint64_t sub_1D2FF7514(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1D3002778();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1D3002778() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2FF75DC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61118);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = self;
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_1D3002438();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1;
  unint64_t v17 = a2;
  sub_1D3001C68();
  uint64_t v11 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_newPrivateStreamDefaultConfigurationWithStoreBasePath_, v11);

  id v13 = objc_msgSend(v12, sel_pruningPolicy);
  if (v13)
  {
    uint64_t v14 = v13;
    objc_msgSend(v13, sel_setFilterByAgeOnRead_, 0);
  }
  sub_1D2F0BCB8(0, &qword_1EBD63328);
  sub_1D30011F8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics13BiomeQuerying_intentStream, v9, v6);
  return v3;
}

void sub_1D2FF77BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = (void *)MEMORY[0x1D942EA50]();
  sub_1D2FF7874(a1, a2, a3, v7, (unint64_t)&v9);
}

unint64_t sub_1D2FF7874@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X8>)
{
  unint64_t result = sub_1D2FF8964(a1, a2, a3);
  if (!v5)
  {
    unint64_t v9 = result;
    if (result >> 62) {
      goto LABEL_15;
    }
    uint64_t v10 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
      while (1)
      {
        uint64_t v29 = MEMORY[0x1E4FBC860];
        uint64_t v25 = v10;
        unint64_t result = sub_1D2F0A1BC(0, v10 & ~(v10 >> 63), 0);
        uint64_t v11 = v25;
        if (v25 < 0) {
          break;
        }
        uint64_t v12 = 0;
        uint64_t v13 = v29;
        uint64_t v22 = (void *)a5;
        unint64_t v23 = v9 & 0xC000000000000001;
        unint64_t v24 = v9;
        while (v11 != v12)
        {
          if (v23) {
            id v14 = (id)MEMORY[0x1D942E3A0](v12, v9);
          }
          else {
            id v14 = *(id *)(v9 + 8 * v12 + 32);
          }
          uint64_t v15 = v14;
          uint64_t v16 = a4;
          sub_1D2FF7AA4(v14, (uint64_t *)&v27);
          long long v26 = v27;
          uint64_t v17 = v28;

          uint64_t v29 = v13;
          a5 = *(void *)(v13 + 16);
          unint64_t v18 = *(void *)(v13 + 24);
          if (a5 >= v18 >> 1)
          {
            sub_1D2F0A1BC(v18 > 1, a5 + 1, 1);
            uint64_t v13 = v29;
          }
          ++v12;
          *(void *)(v13 + 16) = a5 + 1;
          uint64_t v19 = v13 + 32 * a5;
          *(_OWORD *)(v19 + 32) = v26;
          *(void *)(v19 + 48) = v17;
          *(unsigned char *)(v19 + 56) = 0;
          unint64_t v9 = v24;
          uint64_t v11 = v25;
          a4 = v16;
          if (v25 == v12)
          {
            swift_bridgeObjectRelease();
            a5 = (unint64_t)v22;
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_15:
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_1D30025A8();
        swift_bridgeObjectRelease();
        uint64_t v10 = v20;
        if (!v20) {
          goto LABEL_16;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
LABEL_17:
      os_log_type_t v21 = sub_1D2FF984C(v13);
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)a5 = v21;
    }
  }
  return result;
}

void sub_1D2FF7AA4(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v5 = objc_msgSend(a1, sel_interaction);
  uint64_t v6 = sub_1D3000F68();
  unint64_t v8 = v7;

  id v9 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
  sub_1D2F454DC(v6, v8);
  id v10 = sub_1D2F807F8();
  if (v2)
  {
    sub_1D2F0D1CC(v6, v8);
    id v11 = v2;
    sub_1D3002438();
    sub_1D3001C68();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
    sub_1D3002568();
    sub_1D3001C68();
    id v12 = objc_msgSend(a1, sel_description);
    sub_1D3001B78();

    sub_1D3001C68();
    swift_bridgeObjectRelease();
    sub_1D2FF944C();
    swift_allocError();
    *uint64_t v13 = 0;
    v13[1] = 0xE000000000000000;
    swift_willThrow();

    sub_1D2F0D1CC(v6, v8);
  }
  else
  {
    id v14 = v10;
    sub_1D2F0D1CC(v6, v8);
    sub_1D2F0BCB8(0, &qword_1EA699428);
    sub_1D3001B78();
    id v15 = v14;
    uint64_t v16 = sub_1D3002288();
    swift_bridgeObjectRelease();
    if (v16)
    {
      id v17 = objc_msgSend(a1, sel_bundleID);
      uint64_t v18 = sub_1D3001B78();
      uint64_t v20 = v19;
      sub_1D2F0D1CC(v6, v8);

      *a2 = v16;
      a2[1] = v18;
      a2[2] = v20;
    }
    else
    {
      sub_1D3002438();
      sub_1D3001C68();
      id v21 = objc_msgSend(a1, sel_description);
      sub_1D3001B78();

      sub_1D3001C68();
      swift_bridgeObjectRelease();
      sub_1D2FF944C();
      swift_allocError();
      *uint64_t v22 = 0;
      v22[1] = 0xE000000000000000;
      swift_willThrow();

      sub_1D2F0D1CC(v6, v8);
    }
  }
}

uint64_t sub_1D2FF7E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v5 = v3;
  uint64_t v9 = *v5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61100);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v45 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A058);
  MEMORY[0x1F4188790](v50);
  unint64_t v48 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A060);
  MEMORY[0x1F4188790](v53);
  uint64_t v49 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A068);
  MEMORY[0x1F4188790](v56);
  unint64_t v51 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698780);
  uint64_t v57 = *(void *)(v15 - 8);
  uint64_t v58 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v54 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v55 = (char *)v41 - v18;
  int64_t v19 = *(void *)(a2 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (v19)
  {
    v41[0] = a1;
    v41[1] = v5;
    uint64_t v42 = v9;
    unint64_t v43 = a3;
    uint64_t v44 = v4;
    uint64_t v60 = MEMORY[0x1E4FBC860];
    sub_1D2F09B08(0, v19, 0);
    uint64_t v20 = v60;
    id v21 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v59 = *v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61480);
      uint64_t v22 = sub_1D3001BC8();
      uint64_t v24 = v23;
      uint64_t v60 = v20;
      unint64_t v26 = *(void *)(v20 + 16);
      unint64_t v25 = *(void *)(v20 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1D2F09B08(v25 > 1, v26 + 1, 1);
        uint64_t v20 = v60;
      }
      *(void *)(v20 + 16) = v26 + 1;
      unint64_t v27 = v20 + 16 * v26;
      *(void *)(v27 + 32) = v22;
      *(void *)(v27 + 4sub_1D2FD62D8(0, 0) = v24;
      ++v21;
      --v19;
    }
    while (v19);
    a3 = v43;
    uint64_t v9 = v42;
  }
  uint64_t v28 = (void *)sub_1D3000FC8();
  objc_msgSend(v28, sel_timeIntervalSinceReferenceDate);
  double v30 = v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61118);
  sub_1D2F1D154(&qword_1EBD61110, &qword_1EBD61118);
  id v31 = v45;
  sub_1D3001228();
  uint64_t v32 = v47;
  uint64_t v33 = sub_1D30011C8();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v32);
  uint64_t v60 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699E58);
  sub_1D2F0BCB8(0, &qword_1EBD63328);
  sub_1D2F1D154(&qword_1EA69A078, &qword_1EA699E58);
  sub_1D3002728();
  *(double *)(swift_allocObject() + 16) = trunc(v30);
  sub_1D2F1D154(&qword_1EA69A090, &qword_1EA69A058);
  sub_1D30025F8();
  *(void *)(swift_allocObject() + 16) = v20;
  sub_1D2F1D154(&qword_1EA69A0A8, &qword_1EA69A060);
  sub_1D30025F8();
  *(void *)(swift_allocObject() + 16) = v9;
  sub_1D2F1D154(&qword_1EA69A0C0, &qword_1EA69A068);
  uint64_t v34 = v55;
  sub_1D3002728();
  uint64_t v36 = v57;
  uint64_t v35 = v58;
  uint64_t v37 = v54;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v34, v58);
  unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v39 + v38, v37, v35);
  *a3 = sub_1D2FF978C;
  a3[1] = v39;
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v34, v35);
}

uint64_t sub_1D2FF84AC(void *a1, id *a2)
{
  *a1 = objc_msgSend(*a2, sel_eventBody);
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_1D2F1C910(v3);
}

uint64_t sub_1D2FF8544(void *a1, double a2)
{
  *(double *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = *a1;
  return MEMORY[0x1F4188298](sub_1D2FF856C, 0, 0);
}

uint64_t sub_1D2FF856C()
{
  double v1 = *(double *)(v0 + 16);
  objc_msgSend(*(id *)(v0 + 24), sel_absoluteTimestamp);
  uint64_t v3 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v3(v2 >= v1);
}

uint64_t sub_1D2FF85E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1D2FF8604, 0, 0);
}

uint64_t sub_1D2FF8604()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_intentClass);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 16);
    uint64_t v3 = sub_1D3001B78();
    uint64_t v5 = v4;

    LOBYTE(v1) = sub_1D2FF7514(v3, v5, v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6(v1 & 1);
}

uint64_t sub_1D2FF86BC(uint64_t a1, void *a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  v3[5] = *a2;
  return MEMORY[0x1F4188298](sub_1D2FF86E4, 0, 0);
}

uint64_t sub_1D2FF86E4()
{
  uint64_t v7 = v0;
  sub_1D2FF7AA4(*(void **)(v0 + 40), (uint64_t *)&v5);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v6;
  *(_OWORD *)uint64_t v1 = v5;
  *(void *)(v1 + 16) = v2;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1D2FF8964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61100);
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v43 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD610F0);
  uint64_t v47 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v46 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a2 + 16);
  uint64_t v42 = v4;
  if (v12)
  {
    v41[1] = a1;
    void v41[2] = a3;
    v41[3] = v5;
    uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_1D2F09B08(0, v12, 0);
    uint64_t v13 = v49;
    uint64_t v14 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v48 = *v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61480);
      uint64_t v15 = sub_1D3001BC8();
      uint64_t v17 = v16;
      uint64_t v49 = v13;
      unint64_t v19 = *(void *)(v13 + 16);
      unint64_t v18 = *(void *)(v13 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1D2F09B08(v18 > 1, v19 + 1, 1);
        uint64_t v13 = v49;
      }
      *(void *)(v13 + 16) = v19 + 1;
      uint64_t v20 = v13 + 16 * v19;
      *(void *)(v20 + 32) = v15;
      *(void *)(v20 + 4sub_1D2FD62D8(0, 0) = v17;
      ++v14;
      --v12;
    }
    while (v12);
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = (void *)sub_1D3000FC8();
  objc_msgSend(v22, sel_timeIntervalSinceReferenceDate);
  double v24 = v23;

  double v25 = trunc(v24);
  unint64_t v26 = (void *)sub_1D3000FC8();
  objc_msgSend(v26, sel_timeIntervalSinceReferenceDate);
  uint64_t v28 = v27;

  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v21;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61118);
  sub_1D2F1D154(&qword_1EBD61110, &qword_1EBD61118);
  id v31 = v43;
  sub_1D3001228();
  uint64_t v32 = swift_allocObject();
  *(double *)(v32 + 16) = v25;
  *(void *)(v32 + 24) = v28;
  *(void *)(v32 + 32) = v13;
  sub_1D2F1D154(&qword_1EBD61108, &qword_1EBD61100);
  uint64_t v33 = v45;
  uint64_t v34 = v46;
  sub_1D3001198();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v33);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v29;
  *(void *)(v35 + 24) = v28;
  sub_1D2F1D154(&qword_1EBD610F8, &qword_1EBD610F0);
  swift_retain();
  swift_retain();
  uint64_t v36 = v50;

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v36);
  swift_beginAccess();
  uint64_t v37 = *(void *)(v30 + 24);
  if (v37)
  {
    uint64_t v38 = *(void *)(v30 + 16);
    sub_1D2FF944C();
    swift_allocError();
    *uint64_t v39 = v38;
    v39[1] = v37;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    uint64_t v38 = *(void *)(v29 + 16);
    swift_bridgeObjectRetain();
  }
  swift_release();
  swift_release();
  return v38;
}

uint64_t sub_1D2FF8E80(void *a1, void *a2, double a3, double a4)
{
  id v7 = objc_msgSend(a1, sel_eventBody);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_intentClass);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1D3001B78();
      uint64_t v13 = v12;

      objc_msgSend(v8, sel_absoluteTimestamp);
      if (v14 < a3 || v14 > a4) {
        char v16 = 0;
      }
      else {
        char v16 = sub_1D2FF7514(v11, v13, a2);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v16 = 0;
    }
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

id sub_1D2FF8F60(void *a1, uint64_t a2)
{
  id result = objc_msgSend(a1, sel_state);
  if (result)
  {
    objc_msgSend(a1, sel_error);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698E20);
    uint64_t v5 = sub_1D3001BC8();
    uint64_t v7 = v6;
    swift_beginAccess();
    *(void *)(a2 + 16) = v5;
    *(void *)(a2 + 24) = v7;
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1D2FF9004(void *a1, uint64_t a2, double a3)
{
  id v6 = objc_msgSend(a1, sel_eventBody);
  if (v6)
  {
    uint64_t v7 = v6;
    swift_beginAccess();
    id v8 = v7;
    MEMORY[0x1D942DCC0]();
    if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_1D3001E28();
    sub_1D3001E68();
    sub_1D3001DE8();
    swift_endAccess();
    objc_msgSend(v8, sel_absoluteTimestamp);
    double v10 = v9;

    BOOL v11 = v10 > a3;
  }
  else
  {
    objc_msgSend(a1, sel_timestamp);
    BOOL v11 = v12 > a3 + 5.0;
  }
  return !v11;
}

SiriPrivateLearningAnalytics::AppInteraction __swiftcall AppInteraction.init(interaction:bundleID:)(INInteraction interaction, Swift::String bundleID)
{
  *(INInteraction *)uint64_t v2 = interaction;
  *(Swift::String *)(v2 + 8) = bundleID;
  result.bundleID = bundleID;
  result.interactiouint64_t n = interaction;
  return result;
}

uint64_t sub_1D2FF9114()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC28SiriPrivateLearningAnalytics13BiomeQuerying_intentStream;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD61118);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

id AppInteraction.interaction.getter()
{
  return *v0;
}

uint64_t AppInteraction.bundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D2FF91F0()
{
  return type metadata accessor for BiomeQuerying();
}

uint64_t type metadata accessor for BiomeQuerying()
{
  uint64_t result = qword_1EBD62B00;
  if (!qword_1EBD62B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D2FF9244()
{
  sub_1D2FF92D4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1D2FF92D4()
{
  if (!qword_1EBD62AC8)
  {
    sub_1D2F0BCB8(255, &qword_1EBD63328);
    unint64_t v0 = sub_1D30011E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD62AC8);
    }
  }
}

ValueMetadata *type metadata accessor for AppInteraction()
{
  return &type metadata for AppInteraction;
}

uint64_t sub_1D2FF934C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FF9384()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D2FF93BC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D2FF93F4(void *a1)
{
  return sub_1D2FF8E80(a1, *(void **)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

id sub_1D2FF9400(void *a1)
{
  return sub_1D2FF8F60(a1, v1);
}

uint64_t sub_1D2FF9408()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

BOOL sub_1D2FF9440(void *a1)
{
  return sub_1D2FF9004(a1, *(void *)(v1 + 16), *(double *)(v1 + 24));
}

unint64_t sub_1D2FF944C()
{
  unint64_t result = qword_1EA69A050;
  if (!qword_1EA69A050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA69A050);
  }
  return result;
}

uint64_t sub_1D2FF94A0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FF94B0(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D2F3BC98;
  v5[2] = v4;
  v5[3] = *a1;
  return MEMORY[0x1F4188298](sub_1D2FF856C, 0, 0);
}

uint64_t sub_1D2FF9570(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D2F3D1F0;
  v5[2] = v4;
  v5[3] = *a1;
  return MEMORY[0x1F4188298](sub_1D2FF8604, 0, 0);
}

uint64_t sub_1D2FF9624()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D2FF9634(uint64_t a1, void *a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D2F1C2F4;
  v7[3] = a1;
  v7[4] = v6;
  void v7[5] = *a2;
  return MEMORY[0x1F4188298](sub_1D2FF86E4, 0, 0);
}

uint64_t sub_1D2FF96F8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698780);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D2FF978C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA698780) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1D2F1B794(v4, a1);
}

void sub_1D2FF9800(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

void *sub_1D2FF984C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = (unsigned char *)(v2 + 56);
    uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      BOOL v11 = (void *)*((void *)v4 - 3);
      uint64_t v10 = *((void *)v4 - 2);
      uint64_t v12 = *((void *)v4 - 1);
      if (*v4)
      {
        id v33 = (id)*((void *)v4 - 3);
        id v13 = v11;
        id v14 = v11;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
        if (swift_dynamicCast())
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v3 = sub_1D2F28DD8(0, v3[2] + 1, 1, v3);
          }
          unint64_t v16 = v3[2];
          unint64_t v15 = v3[3];
          if (v16 >= v15 >> 1) {
            uint64_t v3 = sub_1D2F28DD8((void *)(v15 > 1), v16 + 1, 1, v3);
          }
          v3[2] = v16 + 1;
          uint64_t v17 = &v3[2 * v16];
          unsigned char v17[4] = v31;
          v17[5] = v32;
          sub_1D2FF9800(v11, v10, v12, 1);

          goto LABEL_5;
        }

        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
        id v23 = v11;
        sub_1D3002568();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1D2F28DD8(0, v3[2] + 1, 1, v3);
        }
        unint64_t v25 = v3[2];
        unint64_t v24 = v3[3];
        if (v25 >= v24 >> 1) {
          uint64_t v3 = sub_1D2F28DD8((void *)(v24 > 1), v25 + 1, 1, v3);
        }
        v3[2] = v25 + 1;
        unint64_t v26 = &v3[2 * v25];
        void v26[4] = 0;
        v26[5] = 0xE000000000000000;
        sub_1D2FF9800(v11, v10, v12, 1);
        uint64_t v6 = v11;
        uint64_t v7 = v10;
        uint64_t v8 = v12;
        char v9 = 1;
      }
      else
      {
        id v18 = v11;
        swift_bridgeObjectRetain_n();
        id v19 = v18;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v20 = v30;
        }
        else {
          uint64_t v20 = sub_1D2F28EE8(0, v30[2] + 1, 1, v30);
        }
        unint64_t v22 = v20[2];
        unint64_t v21 = v20[3];
        if (v22 >= v21 >> 1) {
          uint64_t v20 = sub_1D2F28EE8((void *)(v21 > 1), v22 + 1, 1, v20);
        }
        void v20[2] = v22 + 1;
        uint64_t v30 = v20;
        uint64_t v5 = &v20[3 * v22];
        v5[4] = v19;
        v5[5] = v10;
        v5[6] = v12;
        uint64_t v6 = v11;
        uint64_t v7 = v10;
        uint64_t v8 = v12;
        char v9 = 0;
      }
      sub_1D2FF9800(v6, v7, v8, v9);
LABEL_5:
      v4 += 32;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = v30;
        if (v3[2]) {
          goto LABEL_24;
        }
LABEL_26:
        swift_bridgeObjectRelease();
        return v27;
      }
    }
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_26;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  sub_1D2FF9BA0();
  swift_allocError();
  *uint64_t v28 = v3;
  swift_willThrow();
  return v27;
}

unint64_t sub_1D2FF9BA0()
{
  unint64_t result = qword_1EA69A0C8;
  if (!qword_1EA69A0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA69A0C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregateBiomeAppIntentEventsError()
{
  return &type metadata for AggregateBiomeAppIntentEventsError;
}

ValueMetadata *type metadata accessor for BiomeAppIntentEventsError()
{
  return &type metadata for BiomeAppIntentEventsError;
}

uint64_t UniversalSuggestionSummary.candidateId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2F61448(v1, a1);
}

uint64_t UniversalSuggestionSummary.suggestionSurfacedState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for UniversalSuggestionSummary(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for UniversalSuggestionSummary(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA69A0E0);
}

uint64_t UniversalSuggestionSummaryExtractor.init(suggestionStore:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(v4, v5);
  type metadata accessor for UniversalSELFPlusStoreIdMapper();
  uint64_t v7 = swift_allocObject();
  unint64_t v8 = sub_1D2F1F82C(MEMORY[0x1E4FBC860]);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v8;
  *a2 = v7;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t UniversalSuggestionSummaryExtractor.extract(from:)(unint64_t a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D30025A8();
    uint64_t v5 = result;
    if (result)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
        goto LABEL_39;
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v8 = (id)MEMORY[0x1D942E3A0](i, a1);
        }
        else {
          id v8 = *(id *)(a1 + 8 * i + 32);
        }
        char v9 = v8;
        if (objc_msgSend(v8, sel_anyEventType) == 38)
        {
          sub_1D30024E8();
          sub_1D3002518();
          sub_1D3002528();
          sub_1D30024F8();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = v27;
      unint64_t v28 = v4;
      if (v10 < 0) {
        goto LABEL_32;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unint64_t v28 = v4;
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v10 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    uint64_t result = sub_1D30025A8();
    uint64_t v11 = result;
    if (!result) {
      goto LABEL_33;
    }
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t result = swift_retain();
  if (v11)
  {
LABEL_18:
    if (v11 >= 1)
    {
      for (uint64_t j = 0; j != v11; ++j)
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v13 = (id)MEMORY[0x1D942E3A0](j, v10);
        }
        else {
          id v13 = *(id *)(v10 + 8 * j + 32);
        }
        id v14 = v13;
        id v15 = objc_msgSend(v13, sel_payload);
        if (v15)
        {
          unint64_t v16 = v15;
          uint64_t v17 = sub_1D3000F68();
          unint64_t v19 = v18;

          uint64_t v20 = (void *)sub_1D3000F58();
          sub_1D2F0D1CC(v17, v19);
        }
        else
        {
          uint64_t v20 = 0;
        }
        id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0F70]), sel_initWithData_, v20);

        if (v21)
        {
          MEMORY[0x1D942DCC0]();
          if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1D3001E28();
          }
          sub_1D3001E68();
          sub_1D3001DE8();
        }
      }
      swift_release();
      unint64_t v22 = v28;
      goto LABEL_34;
    }
LABEL_39:
    __break(1u);
    return result;
  }
LABEL_33:
  swift_release();
  unint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_34:
  swift_release();
  swift_retain();
  unint64_t v23 = sub_1D2FFB0D0(v22, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v23 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD614F8);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1D3004370;
    uint64_t v25 = type metadata accessor for UniversalSuggestionSummaries(0);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    *(void *)(v24 + 56) = v25;
    *(void *)(v24 + 64) = sub_1D2FFBEA4(&qword_1EA69A0D0, (void (*)(uint64_t))type metadata accessor for UniversalSuggestionSummaries);
    *(void *)(v24 + 32) = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v24;
}

uint64_t sub_1D2FFA0C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v5 = MEMORY[0x1F4188790](v97);
  uint64_t v96 = (uint64_t)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v99 = (char *)&v89 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v89 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v100 = (char *)&v89 - v13;
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v89 - v14;
  uint64_t v16 = sub_1D30010A8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v89 - v21;
  uint64_t v98 = *v2;
  id v23 = objc_msgSend(a1, sel_eventMetadata);
  if (!v23
    || (uint64_t v24 = v23, v25 = objc_msgSend(v23, sel_plusId), v24, !v25))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_8:
    sub_1D2F1CD78((uint64_t)v15, &qword_1EBD62AA0);
LABEL_9:
    uint64_t v37 = type metadata accessor for UniversalSuggestionSummary(0);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    uint64_t v39 = a2;
    return v38(v39, 1, 1, v37);
  }
  uint64_t v94 = v11;
  uint64_t v95 = v20;
  id v26 = objc_msgSend(v25, sel_value);
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = v17;
    uint64_t v29 = v22;
    uint64_t v30 = v16;
    uint64_t v31 = a2;
    uint64_t v32 = sub_1D3000F68();
    unint64_t v34 = v33;

    sub_1D2F587AC(v32, v34, (uint64_t)v15);
    uint64_t v35 = v32;
    a2 = v31;
    uint64_t v16 = v30;
    unint64_t v22 = v29;
    uint64_t v17 = v28;
    sub_1D2F0D1CC(v35, v34);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }

  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v36(v15, 1, v16) == 1) {
    goto LABEL_8;
  }
  uint64_t v93 = a2;
  unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v41(v22, v15, v16);
  uint64_t v42 = (char *)objc_msgSend(a1, sel_plusSuggesterSuggestionMetadataReported);
  if (!v42) {
    goto LABEL_18;
  }
  unint64_t v43 = v42;
  id v44 = objc_msgSend(v42, sel_suggestionDomainMetadata);
  if (!v44)
  {

LABEL_18:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
LABEL_24:
    a2 = v93;
    goto LABEL_9;
  }
  uint64_t v45 = v44;
  uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))v41;
  unsigned int v46 = objc_msgSend(v44, sel_suggestionGenerationDomain);

  if (v46 != 2)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);

    goto LABEL_24;
  }
  id v47 = objc_msgSend(v43, sel_suggestionLinkId);
  if (!v47)
  {
    uint64_t v53 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v100, 1, 1, v16);
LABEL_23:

    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    sub_1D2F1CD78(v53, &qword_1EBD62AA0);
    goto LABEL_24;
  }
  uint64_t v48 = v47;
  id v49 = objc_msgSend(v47, sel_value);
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v51 = sub_1D3000F68();
    uint64_t v90 = v51;
    unint64_t v91 = v52;

    uint64_t v53 = (uint64_t)v100;
    uint64_t v54 = v51;
    unint64_t v55 = v91;
    sub_1D2F587AC(v54, v91, (uint64_t)v100);
    sub_1D2F0D1CC(v90, v55);
  }
  else
  {
    uint64_t v53 = (uint64_t)v100;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v100, 1, 1, v16);
  }

  if (v36((char *)v53, 1, v16) == 1) {
    goto LABEL_23;
  }
  uint64_t v56 = (uint64_t)v95;
  v92(v95, v53, v16);
  LODWORD(v57) = objc_msgSend(v43, sel_suggestionSurfaced) - 1;
  if (v57 >= 3)
  {
    uint64_t v102 = 0;
    unint64_t v103 = 0xE000000000000000;
    sub_1D3002438();
    sub_1D3001C68();
    sub_1D3002278();
    sub_1D3001C68();
    swift_bridgeObjectRelease();
    uint64_t v69 = v102;
    unint64_t v70 = v103;
    sub_1D2FFBE50();
    uint64_t v71 = (void *)swift_allocError();
    *id v72 = v69;
    v72[1] = v70;
    swift_willThrow();
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_1D3001918();
    __swift_project_value_buffer(v73, (uint64_t)qword_1EBD65778);
    id v74 = v71;
    id v75 = v71;
    uint64_t v76 = sub_1D30018F8();
    os_log_type_t v77 = sub_1D30020B8();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      uint64_t v100 = v43;
      uint64_t v101 = (uint64_t)v71;
      uint64_t v80 = v79;
      uint64_t v102 = v79;
      *(_DWORD *)uint64_t v78 = 136315138;
      id v81 = v71;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD633D0);
      uint64_t v82 = sub_1D3001BC8();
      uint64_t v99 = v22;
      uint64_t v101 = sub_1D2F09508(v82, v83, &v102);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v76, v77, "Unable to convert suggestion surfaced value for suggestion summary: %s", v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v80, -1, -1);
      MEMORY[0x1D942F2D0](v78, -1, -1);

      uint64_t v84 = *(void (**)(char *, uint64_t))(v17 + 8);
      v84(v95, v16);
      uint64_t v85 = (uint64_t)v99;
    }
    else
    {

      uint64_t v84 = *(void (**)(char *, uint64_t))(v17 + 8);
      v84((char *)v56, v16);
      uint64_t v85 = (uint64_t)v22;
    }
    v84((char *)v85, v16);
    uint64_t v88 = v93;
    uint64_t v37 = type metadata accessor for UniversalSuggestionSummary(0);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    uint64_t v39 = v88;
    return v38(v39, 1, 1, v37);
  }
  uint64_t v100 = v43;
  uint64_t v58 = (uint64_t)v94;
  sub_1D2FBEBFC(v56, (uint64_t)v22, (uint64_t)v94);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v59 = sub_1D3001918();
  __swift_project_value_buffer(v59, (uint64_t)qword_1EBD65778);
  uint64_t v60 = (uint64_t)v99;
  sub_1D2F61448(v58, (uint64_t)v99);
  uint64_t v61 = sub_1D30018F8();
  os_log_type_t v62 = sub_1D30020A8();
  if (os_log_type_enabled(v61, v62))
  {
    id v63 = (uint8_t *)swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    LODWORD(v98) = v57;
    uint64_t v57 = v64;
    uint64_t v102 = v64;
    *(_DWORD *)id v63 = 136315138;
    uint64_t v92 = (void (*)(char *, uint64_t, uint64_t))(v63 + 4);
    sub_1D2F61448(v60, v96);
    uint64_t v65 = sub_1D3001BC8();
    uint64_t v101 = sub_1D2F09508(v65, v66, &v102);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    sub_1D2F1CD78(v60, &qword_1EBD62AA0);
    _os_log_impl(&dword_1D2F05000, v61, v62, "makeSuggestionSummary candidateId: %s", v63, 0xCu);
    swift_arrayDestroy();
    uint64_t v67 = v57;
    LOBYTE(v57) = v98;
    MEMORY[0x1D942F2D0](v67, -1, -1);
    MEMORY[0x1D942F2D0](v63, -1, -1);

    uint64_t v68 = *(void (**)(char *, uint64_t))(v17 + 8);
    v68(v95, v16);
  }
  else
  {

    sub_1D2F1CD78(v60, &qword_1EBD62AA0);
    uint64_t v68 = *(void (**)(char *, uint64_t))(v17 + 8);
    v68((char *)v56, v16);
  }
  v68(v22, v16);
  uint64_t v86 = v93;
  sub_1D2F56C74((uint64_t)v94, v93);
  uint64_t v87 = type metadata accessor for UniversalSuggestionSummary(0);
  *(unsigned char *)(v86 + *(int *)(v87 + 20)) = v57;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 0, 1, v87);
}

uint64_t UniversalSuggestionSummaries.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (a1)
  {
    *(void *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A0D8);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t sub_1D2FFAB48(unint64_t *a1)
{
  return UniversalSuggestionSummaryExtractor.extract(from:)(*a1);
}

uint64_t UniversalSuggestionSummaries.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(void *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A0D8);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t UniversalSuggestionSummaries.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UniversalSuggestionSummaries.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FFAC70(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for UniversalSuggestionSummaries(0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2FFACA8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for UniversalSuggestionSummaries(0);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1)
  {
    *(void *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A0D8);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

BOOL _s28SiriPrivateLearningAnalytics26UniversalSuggestionSummaryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA699170);
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v27 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v27 - v19;
  uint64_t v27 = a1;
  sub_1D2F61448(a1, (uint64_t)&v27 - v19);
  uint64_t v28 = a2;
  sub_1D2F61448(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_1D2F61448((uint64_t)v20, (uint64_t)v11);
  sub_1D2F61448((uint64_t)v18, v21);
  unint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_1D2F1CD78((uint64_t)v18, &qword_1EBD62AA0);
    sub_1D2F1CD78((uint64_t)v20, &qword_1EBD62AA0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1D2F1CD78((uint64_t)v11, &qword_1EBD62AA0);
LABEL_8:
      uint64_t v25 = type metadata accessor for UniversalSuggestionSummary(0);
      return *(unsigned __int8 *)(v27 + *(int *)(v25 + 20)) == *(unsigned __int8 *)(v28 + *(int *)(v25 + 20));
    }
    goto LABEL_6;
  }
  sub_1D2F61448((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_1D2F1CD78((uint64_t)v18, &qword_1EBD62AA0);
    sub_1D2F1CD78((uint64_t)v20, &qword_1EBD62AA0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
LABEL_6:
    sub_1D2F1CD78((uint64_t)v11, &qword_1EA699170);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
  sub_1D2FFBEA4((unint64_t *)&qword_1EBD610E0, MEMORY[0x1E4F27990]);
  char v23 = sub_1D3001B28();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  sub_1D2F1CD78((uint64_t)v18, &qword_1EBD62AA0);
  sub_1D2F1CD78((uint64_t)v20, &qword_1EBD62AA0);
  v24(v15, v4);
  sub_1D2F1CD78((uint64_t)v11, &qword_1EBD62AA0);
  if (v23) {
    goto LABEL_8;
  }
  return 0;
}

unint64_t sub_1D2FFB0D0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A100);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for UniversalSuggestionSummary(0);
  uint64_t v24 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v23 = (uint64_t)v22 - v10;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1D30025A8())
  {
    v22[1] = v3;
    unint64_t v25 = a1 & 0xC000000000000001;
    uint64_t v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    unint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v14 = 4;
    id v15 = (id *)a1;
    while (1)
    {
      uint64_t v3 = v14 - 4;
      uint64_t v16 = v25 ? (id *)MEMORY[0x1D942E3A0](v14 - 4, a1) : (id *)*(id *)(a1 + 8 * v14);
      a1 = (unint64_t)v16;
      uint64_t v17 = v14 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      uint64_t v29 = v28;
      sub_1D2FFA0C4(v16, (uint64_t)v7);

      if ((*v12)(v7, 1, v27) == 1)
      {
        sub_1D2F1CD78((uint64_t)v7, &qword_1EA69A100);
      }
      else
      {
        uint64_t v18 = v23;
        sub_1D2FFBDEC((uint64_t)v7, v23);
        sub_1D2FFBDEC(v18, v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_1D2F28250(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v20 = *(void *)(v13 + 16);
        unint64_t v19 = *(void *)(v13 + 24);
        if (v20 >= v19 >> 1) {
          unint64_t v13 = sub_1D2F28250(v19 > 1, v20 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v20 + 1;
        sub_1D2FFBDEC(v26, v13+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20);
      }
      a1 = (unint64_t)v15;
      ++v14;
      if (v17 == v11)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for UniversalSuggestionSummaries(uint64_t a1)
{
  return sub_1D2F25FA4(a1, (uint64_t *)&unk_1EA69A0F0);
}

uint64_t *initializeBufferWithCopyOfBuffer for UniversalSuggestionSummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D30010A8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for UniversalSuggestionSummary(uint64_t a1)
{
  uint64_t v2 = sub_1D30010A8();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for UniversalSuggestionSummary(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for UniversalSuggestionSummary(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for UniversalSuggestionSummary(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for UniversalSuggestionSummary(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D30010A8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalSuggestionSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D2FFBBB4);
}

uint64_t sub_1D2FFBBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for UniversalSuggestionSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D2FFBC88);
}

uint64_t sub_1D2FFBC88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

void sub_1D2FFBD48()
{
  sub_1D2F56B58();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for UniversalSuggestionSummaryExtractor()
{
  return &type metadata for UniversalSuggestionSummaryExtractor;
}

uint64_t sub_1D2FFBDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UniversalSuggestionSummary(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2FFBE50()
{
  unint64_t result = qword_1EA69A108;
  if (!qword_1EA69A108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA69A108);
  }
  return result;
}

uint64_t sub_1D2FFBEA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

NSObject *sub_1D2FFBEEC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD635B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D3004380;
  if (qword_1EBD5FB80 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_1EBD5FB78;
  *(void *)(inited + 32) = qword_1EBD5FB70;
  *(void *)(inited + 4sub_1D2FD62D8(0, 0) = v1;
  uint64_t v2 = qword_1EBD5FBB0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_1EBD5FBA8;
  *(void *)(inited + 48) = qword_1EBD5FBA0;
  *(void *)(inited + 56) = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D2FFCA24(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v4;
}

id DiagnosticExtensionFileFinder.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id DiagnosticExtensionFileFinder.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticExtensionFileFinder();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DiagnosticExtensionFileFinder.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticExtensionFileFinder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D2FFC1F8(uint64_t a1)
{
  v67[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1D3000F18();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v58 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v58 - v8;
  uint64_t v66 = MEMORY[0x1E4FBC860];
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1D3001918();
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBD65778);
  uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
  uint64_t v64 = a1;
  uint64_t v61 = v12;
  uint64_t v62 = v63 + 16;
  v12(v9, a1, v2);
  unint64_t v13 = sub_1D30018F8();
  os_log_type_t v14 = sub_1D3002098();
  if (os_log_type_enabled(v13, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    v67[0] = v16;
    *(_DWORD *)id v15 = 136315138;
    uint64_t v59 = v15 + 4;
    sub_1D2F3475C();
    uint64_t v17 = sub_1D3002738();
    uint64_t v65 = sub_1D2F09508(v17, v18, (uint64_t *)v67);
    sub_1D3002318();
    swift_bridgeObjectRelease();
    unint64_t v19 = *(void (**)(char *, uint64_t))(v63 + 8);
    v19(v9, v2);
    _os_log_impl(&dword_1D2F05000, v13, v14, "DiagnosticExtension - Gathering files from: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v16, -1, -1);
    MEMORY[0x1D942F2D0](v15, -1, -1);
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t))(v63 + 8);
    v19(v9, v2);
  }

  id v20 = objc_msgSend(self, sel_defaultManager);
  uint64_t v21 = v64;
  unint64_t v22 = (void *)sub_1D3000E78();
  v67[0] = 0;
  id v23 = objc_msgSend(v20, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v22, 0, 0, v67);

  id v24 = v67[0];
  if (v23)
  {
    uint64_t v25 = sub_1D3001DC8();
    id v26 = v24;

    uint64_t v27 = *(void *)(v25 + 16);
    if (v27)
    {
      uint64_t v59 = (uint8_t *)v11;
      v67[0] = (id)MEMORY[0x1E4FBC860];
      sub_1D3002508();
      unint64_t v28 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v58 = v25;
      unint64_t v29 = v25 + v28;
      uint64_t v30 = *(void *)(v63 + 72);
      v63 += 8;
      uint64_t v64 = v30;
      uint64_t v32 = v60;
      uint64_t v31 = v61;
      do
      {
        v31(v32, v29, v2);
        sub_1D3000F08();
        id v33 = objc_allocWithZone(MEMORY[0x1E4F1CB10]);
        unint64_t v34 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
        swift_bridgeObjectRelease();
        objc_msgSend(v33, sel_initFileURLWithPath_, v34, v58);

        v19(v32, v2);
        sub_1D30024E8();
        sub_1D3002518();
        sub_1D3002528();
        sub_1D30024F8();
        v29 += v64;
        --v27;
      }
      while (v27);
      id v35 = v67[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v35 = (id)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRetain_n();
    uint64_t v48 = sub_1D30018F8();
    os_log_type_t v49 = sub_1D3002098();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      v67[0] = v51;
      *(_DWORD *)uint64_t v50 = 136315138;
      unint64_t v52 = sub_1D2FFCDA4();
      uint64_t v53 = swift_bridgeObjectRetain();
      uint64_t v54 = MEMORY[0x1D942DD00](v53, v52);
      unint64_t v56 = v55;
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_1D2F09508(v54, v56, (uint64_t *)v67);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2F05000, v48, v49, "DiagnosticExtension - URLS: %s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v51, -1, -1);
      MEMORY[0x1D942F2D0](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1D2F9D7BC((unint64_t)v35);
  }
  else
  {
    id v36 = v67[0];
    uint64_t v37 = (void *)sub_1D3000DF8();

    swift_willThrow();
    v61(v5, v21, v2);
    id v38 = v37;
    id v39 = v37;
    unint64_t v40 = sub_1D30018F8();
    uint64_t v41 = sub_1D30020B8();
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      v67[0] = (id)v64;
      *(_DWORD *)uint64_t v42 = 136315394;
      sub_1D2F3475C();
      uint64_t v43 = sub_1D3002738();
      uint64_t v65 = sub_1D2F09508(v43, v44, (uint64_t *)v67);
      sub_1D3002318();
      swift_bridgeObjectRelease();
      v19(v5, v2);
      *(_WORD *)(v42 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v45 = sub_1D30028C8();
      uint64_t v65 = sub_1D2F09508(v45, v46, (uint64_t *)v67);
      sub_1D3002318();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D2F05000, v40, (os_log_type_t)v41, "DiagnosticExtension - Error while enumerating files %s: %s", (uint8_t *)v42, 0x16u);
      uint64_t v47 = v64;
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v47, -1, -1);
      MEMORY[0x1D942F2D0](v42, -1, -1);
    }
    else
    {

      v19(v5, v2);
    }
  }
  return v66;
}

NSObject *sub_1D2FFCA24(uint64_t a1)
{
  uint64_t v2 = sub_1D3000F18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA48]), sel_init);
  unint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D3000E58();
      unint64_t v10 = sub_1D2FFC1F8((uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      sub_1D2F9D7BC(v10);
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)v21;
  }
  sub_1D2F08A04(v7);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1D3001DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_addObjectsFromArray_, v11);

  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1D3001918();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBD65778);
  unint64_t v13 = v6;
  os_log_type_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D3002098();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 138412290;
    uint64_t v21 = v13;
    unint64_t v18 = v13;
    sub_1D3002318();
    void *v17 = v13;

    _os_log_impl(&dword_1D2F05000, v14, v15, "DiagnosticExtension - Final set of URLS: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v17, -1, -1);
    MEMORY[0x1D942F2D0](v16, -1, -1);
  }
  else
  {

    os_log_type_t v14 = v13;
  }

  return v13;
}

uint64_t type metadata accessor for DiagnosticExtensionFileFinder()
{
  return self;
}

uint64_t method lookup function for DiagnosticExtensionFileFinder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagnosticExtensionFileFinder);
}

uint64_t dispatch thunk of DiagnosticExtensionFileFinder.getFileList()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

unint64_t sub_1D2FFCDA4()
{
  unint64_t result = qword_1EA6997A0;
  if (!qword_1EA6997A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA6997A0);
  }
  return result;
}

void static RuntimeSuggestionLog.record(requestId:suggestionId:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D3000F18();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v54 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v56 = (char *)&v51 - v11;
  uint64_t v12 = sub_1D3001BB8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  os_log_type_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  unint64_t v59 = a2;
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  sub_1D3001C68();
  unint64_t v16 = v59;
  uint64_t v55 = v58;
  swift_bridgeObjectRetain();
  sub_1D3001C68();
  sub_1D3001BA8();
  uint64_t v17 = sub_1D3001B88();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v19 >> 60 == 15)
  {
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1D3001918();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EBD65778);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1D30018F8();
    os_log_type_t v22 = sub_1D30020B8();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v58 = v24;
      *(_DWORD *)id v23 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1D2F09508(v55, v16, &v58);
      sub_1D3002318();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2F05000, v21, v22, "RuntimeSuggestionLog failed to convert entry to data for writing: \"%s\"", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v24, -1, -1);
      MEMORY[0x1D942F2D0](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    unint64_t v53 = v19;
    sub_1D2FFD820((uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      uint64_t v25 = v17;
      swift_bridgeObjectRelease();
      sub_1D2F346A8((uint64_t)v6);
      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1D3001918();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EBD65778);
      uint64_t v27 = sub_1D30018F8();
      os_log_type_t v28 = sub_1D30020B8();
      BOOL v29 = os_log_type_enabled(v27, v28);
      unint64_t v30 = v53;
      if (v29)
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_1D2F05000, v27, v28, "RuntimeSuggestionLog no container access", v31, 2u);
        MEMORY[0x1D942F2D0](v31, -1, -1);
      }
      sub_1D2F2276C(v25, v30);
    }
    else
    {
      uint64_t v32 = v7;
      uint64_t v52 = v17;
      id v33 = v56;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v56, v6, v7);
      uint64_t v34 = v8;
      id v35 = self;
      id v36 = objc_msgSend(v35, sel_defaultManager);
      sub_1D3000EF8();
      uint64_t v37 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
      swift_bridgeObjectRelease();
      unsigned __int8 v38 = objc_msgSend(v36, sel_fileExistsAtPath_, v37);

      uint64_t v51 = v32;
      if (v38)
      {
        sub_1D2FFE904();
        uint64_t v39 = (uint64_t)v54;
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v54, v33, v32);
        unint64_t v40 = v33;
        uint64_t v41 = sub_1D2FFDB08(v39);
        sub_1D3002068();
        unint64_t v49 = v53;
        uint64_t v50 = (void *)sub_1D3000F58();
        objc_msgSend(v41, sel_writeData_, v50);

        objc_msgSend(v41, sel_closeFile);
      }
      else
      {
        id v42 = objc_msgSend(v35, sel_defaultManager);
        sub_1D3000EF8();
        uint64_t v43 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
        swift_bridgeObjectRelease();
        unint64_t v49 = v53;
        uint64_t v41 = (void *)sub_1D3000F58();
        objc_msgSend(v42, sel_createFileAtPath_contents_attributes_, v43, v41, 0);

        unint64_t v40 = v33;
      }

      if (qword_1EBD63A48 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1D3001918();
      __swift_project_value_buffer(v44, (uint64_t)qword_1EBD65778);
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1D30018F8();
      os_log_type_t v46 = sub_1D30020A8();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        uint64_t v58 = v48;
        *(_DWORD *)uint64_t v47 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1D2F09508(v55, v16, &v58);
        sub_1D3002318();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D2F05000, v45, v46, "RuntimeSuggestionLog recorded: \"%s\"", v47, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D942F2D0](v48, -1, -1);
        MEMORY[0x1D942F2D0](v47, -1, -1);
        sub_1D2F2276C(v52, v49);

        (*(void (**)(char *, uint64_t))(v34 + 8))(v56, v51);
      }
      else
      {
        sub_1D2F2276C(v52, v49);
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v51);
      }
    }
  }
}

uint64_t sub_1D2FFD820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = sub_1D3001738();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - v9;
  sub_1D2F767F0((uint64_t)v8);
  uint64_t v11 = sub_1D3000F18();
  uint64_t v12 = *(void **)(v11 - 8);
  uint64_t v13 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v13(v8, 1, v11) == 1)
  {
    sub_1D2F346A8((uint64_t)v8);
    uint64_t v14 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v12[7];
    v14(v10, 1, 1, v11);
LABEL_4:
    sub_1D2F346A8((uint64_t)v10);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14)(v19, 1, 1, v11);
  }
  sub_1D3001728();
  sub_1D3000E98();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  os_log_type_t v15 = (void (*)(char *, uint64_t))v12[1];
  v15(v8, v11);
  uint64_t v14 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v12[7];
  v14(v10, 0, 1, v11);
  if (v13(v10, 1, v11) == 1) {
    goto LABEL_4;
  }
  uint64_t v17 = v19;
  sub_1D3000EB8();
  v15(v10, v11);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v14)(v17, 0, 1, v11);
}

id sub_1D2FFDB08(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1D3000E78();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_1D3000F18();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_1D3000DF8();

    swift_willThrow();
    uint64_t v9 = sub_1D3000F18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

unint64_t static RuntimeSuggestionLog.readAll()()
{
  uint64_t v0 = sub_1D3000D28();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D3001BB8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D3000F18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2FFD820((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1D2F346A8((uint64_t)v7);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1D3001918();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBD65778);
    uint64_t v13 = sub_1D30018F8();
    os_log_type_t v14 = sub_1D30020B8();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl(&dword_1D2F05000, v13, v14, "RuntimeSuggestionLog no container access", v15, 2u);
      MEMORY[0x1D942F2D0](v15, -1, -1);
    }

    return sub_1D2F1FB50(MEMORY[0x1E4FBC860]);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_1D3001BA8();
  uint64_t v17 = sub_1D3001B38();
  uint64_t v50 = 0;
  uint64_t v54 = v17;
  uint64_t v55 = v18;
  sub_1D3000D18();
  unint64_t v19 = sub_1D2F226C4();
  uint64_t v20 = sub_1D3002338();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    os_log_type_t v46 = v11;
    uint64_t v47 = v9;
    uint64_t v48 = v8;
    swift_bridgeObjectRetain();
    uint64_t v45 = v20;
    os_log_type_t v22 = (uint64_t *)(v20 + 40);
    id v23 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v49 = v19;
    do
    {
      uint64_t v24 = *v22;
      uint64_t v54 = *(v22 - 1);
      uint64_t v55 = v24;
      swift_bridgeObjectRetain();
      uint64_t v25 = (void *)sub_1D3002388();
      if (v25[2] < 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v27 = v25[6];
        uint64_t v26 = v25[7];
        uint64_t v28 = v25[4];
        uint64_t v29 = v25[5];
        uint64_t v30 = v25[8];
        uint64_t v31 = v25[9];
        uint64_t v51 = v25[10];
        uint64_t v52 = v30;
        unint64_t v53 = v23;
        uint64_t v32 = v25[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v33 = MEMORY[0x1D942DB30](v28, v29, v27, v26);
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        uint64_t v36 = MEMORY[0x1D942DB30](v52, v31, v51, v32);
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();
        id v23 = v53;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v23 = sub_1D2F29010(0, v23[2] + 1, 1, v23);
        }
        unint64_t v40 = v23[2];
        unint64_t v39 = v23[3];
        if (v40 >= v39 >> 1) {
          id v23 = sub_1D2F29010((void *)(v39 > 1), v40 + 1, 1, v23);
        }
        void v23[2] = v40 + 1;
        uint64_t v41 = &v23[4 * v40];
        void v41[4] = v33;
        v41[5] = v35;
        v41[6] = v36;
        v41[7] = v38;
      }
      v22 += 2;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v9 = v47;
    uint64_t v8 = v48;
    uint64_t v11 = v46;
  }
  else
  {
    id v23 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = v50;
  if (v23[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA698680);
    uint64_t v43 = sub_1D30025D8();
  }
  else
  {
    uint64_t v43 = MEMORY[0x1E4FBC868];
  }
  uint64_t v54 = v43;
  sub_1D2FFE944((uint64_t)v23, 1, &v54);
  if (!v42)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = v54;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v16;
  }
  swift_bridgeObjectRelease();
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

void static RuntimeSuggestionLog.clear()()
{
  v35[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD63688);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D3000F18();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2FFD820((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    uint64_t v11 = self;
    id v12 = objc_msgSend(v11, sel_defaultManager);
    sub_1D3000EF8();
    uint64_t v13 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
    swift_bridgeObjectRelease();
    unsigned int v14 = objc_msgSend(v12, sel_fileExistsAtPath_, v13);

    if (v14)
    {
      id v15 = objc_msgSend(v11, sel_defaultManager);
      uint64_t v16 = (void *)sub_1D3000E78();
      v35[0] = 0;
      unsigned int v17 = objc_msgSend(v15, sel_removeItemAtURL_error_, v16, v35);

      if (!v17)
      {
        id v23 = v35[0];
        uint64_t v24 = (void *)sub_1D3000DF8();

        swift_willThrow();
        if (qword_1EBD63A48 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1D3001918();
        __swift_project_value_buffer(v25, (uint64_t)qword_1EBD65778);
        id v26 = v24;
        id v27 = v24;
        uint64_t v28 = sub_1D30018F8();
        os_log_type_t v29 = sub_1D30020B8();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          v34[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = 138412290;
          id v31 = v24;
          uint64_t v32 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v35[0] = v32;
          sub_1D3002318();
          uint64_t v33 = v34[0];
          *(void *)v34[0] = v32;

          _os_log_impl(&dword_1D2F05000, v28, v29, "RuntimeSuggestionLog failed to clear log: %@", v30, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD63A20);
          swift_arrayDestroy();
          MEMORY[0x1D942F2D0](v33, -1, -1);
          MEMORY[0x1D942F2D0](v30, -1, -1);
        }
        else
        {
        }
        goto LABEL_21;
      }
      id v18 = v35[0];
    }
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1D3001918();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBD65778);
    uint64_t v20 = sub_1D30018F8();
    os_log_type_t v21 = sub_1D30020A8();
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v22 = 0;
      _os_log_impl(&dword_1D2F05000, v20, v21, "RuntimeSuggestionLog cleared", v22, 2u);
      MEMORY[0x1D942F2D0](v22, -1, -1);
    }

LABEL_21:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return;
  }
  sub_1D2F346A8((uint64_t)v2);
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1D3001918();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBD65778);
  uint64_t v8 = sub_1D30018F8();
  os_log_type_t v9 = sub_1D30020B8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1D2F05000, v8, v9, "RuntimeSuggestionLog no container access", v10, 2u);
    MEMORY[0x1D942F2D0](v10, -1, -1);
  }
}

unint64_t sub_1D2FFE904()
{
  unint64_t result = qword_1EA69A110;
  if (!qword_1EA69A110)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA69A110);
  }
  return result;
}

uint64_t sub_1D2FFE944(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = (void *)swift_bridgeObjectRetain();
    uint64_t v8 = v6[4];
    uint64_t v7 = v6[5];
    uint64_t v9 = v6[6];
    uint64_t v10 = v6[7];
    unint64_t v49 = v6;
    uint64_t v50 = a3;
    uint64_t v11 = *a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1D2F0DC98(v8, v7);
    uint64_t v14 = *(void *)(v11 + 16);
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v17 = v12;
    if (*(void *)(v11 + 24) >= v16)
    {
      if ((a2 & 1) == 0)
      {
        sub_1D2F1572C();
        uint64_t v20 = v50;
        os_log_type_t v21 = (void *)*v50;
        if (v17)
        {
LABEL_8:
          swift_bridgeObjectRelease();
          os_log_type_t v22 = (void *)(v21[7] + 16 * v13);
          swift_bridgeObjectRelease();
          uint64_t v20 = v50;
          *os_log_type_t v22 = v9;
          v22[1] = v10;
          uint64_t v23 = v3 - 1;
          if (v3 != 1)
          {
LABEL_15:
            for (uint64_t i = v49 + 11; ; i += 4)
            {
              uint64_t v32 = *(i - 3);
              uint64_t v31 = *(i - 2);
              uint64_t v33 = *(i - 1);
              uint64_t v34 = *i;
              uint64_t v35 = *v20;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v37 = sub_1D2F0DC98(v32, v31);
              uint64_t v38 = *(void *)(v35 + 16);
              BOOL v39 = (v36 & 1) == 0;
              uint64_t v40 = v38 + v39;
              if (__OFADD__(v38, v39)) {
                break;
              }
              char v41 = v36;
              if (*(void *)(v35 + 24) < v40)
              {
                sub_1D2F12ACC(v40, 1);
                unint64_t v42 = sub_1D2F0DC98(v32, v31);
                if ((v41 & 1) != (v43 & 1)) {
                  goto LABEL_27;
                }
                unint64_t v37 = v42;
              }
              uint64_t v20 = v50;
              uint64_t v44 = (void *)*v50;
              if (v41)
              {
                swift_bridgeObjectRelease();
                uint64_t v30 = (void *)(v44[7] + 16 * v37);
                swift_bridgeObjectRelease();
                uint64_t v20 = v50;
                *uint64_t v30 = v33;
                v30[1] = v34;
              }
              else
              {
                v44[(v37 >> 6) + 8] |= 1 << v37;
                uint64_t v45 = (uint64_t *)(v44[6] + 16 * v37);
                *uint64_t v45 = v32;
                v45[1] = v31;
                os_log_type_t v46 = (void *)(v44[7] + 16 * v37);
                void *v46 = v33;
                v46[1] = v34;
                uint64_t v47 = v44[2];
                BOOL v27 = __OFADD__(v47, 1);
                uint64_t v48 = v47 + 1;
                if (v27) {
                  goto LABEL_26;
                }
                v44[2] = v48;
              }
              if (!--v23) {
                return swift_bridgeObjectRelease();
              }
            }
            goto LABEL_25;
          }
          return swift_bridgeObjectRelease();
        }
LABEL_11:
        v21[(v13 >> 6) + 8] |= 1 << v13;
        uint64_t v24 = (uint64_t *)(v21[6] + 16 * v13);
        *uint64_t v24 = v8;
        v24[1] = v7;
        uint64_t v25 = (void *)(v21[7] + 16 * v13);
        *uint64_t v25 = v9;
        v25[1] = v10;
        uint64_t v26 = v21[2];
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (v27)
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        void v21[2] = v28;
        uint64_t v23 = v3 - 1;
        if (v3 != 1) {
          goto LABEL_15;
        }
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1D2F12ACC(v16, a2 & 1);
      unint64_t v18 = sub_1D2F0DC98(v8, v7);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        unint64_t result = sub_1D30028B8();
        __break(1u);
        return result;
      }
      unint64_t v13 = v18;
    }
    uint64_t v20 = v50;
    os_log_type_t v21 = (void *)*v50;
    if (v17) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeSuggestionLog()
{
  return &type metadata for RuntimeSuggestionLog;
}

void *sub_1D2FFEC10(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FA0]), sel_init);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FC0]), sel_init);
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FD0]), sel_init);
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FD8]), sel_init);
        if (v8)
        {
          uint64_t v9 = v8;
          uint64_t v10 = a1 + *(int *)(type metadata accessor for UniversalSuggestionCandidate(0) + 24);
          uint64_t v11 = type metadata accessor for UniversalCandidate(0);
          if (*(double *)(v10 + *(int *)(v11 + 28)) > 0.0) {
            uint64_t v12 = 1;
          }
          else {
            uint64_t v12 = 2;
          }
          objc_msgSend(v5, sel_setSurfacedBeforeStatus_, v12);
          objc_msgSend(v9, sel_setConfidence_, *(double *)(v10 + *(int *)(v11 + 24)));
          objc_msgSend(v7, sel_setUniversalSuggestion_, v9);
          objc_msgSend(v3, sel_setSuggestionValue_, v7);
          objc_msgSend(v3, sel_setSuggestionMetadata_, v5);

          return v3;
        }

        uint64_t v3 = v5;
      }
      else
      {
        uint64_t v7 = v5;
      }

      uint64_t v3 = v7;
    }
  }
  if (qword_1EBD63A48 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1D3001918();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBD65778);
  uint64_t v14 = sub_1D30018F8();
  os_log_type_t v15 = sub_1D30020B8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    sub_1D2F09508(0xD000000000000017, 0x80000001D3014B80, &v19);
    sub_1D3002318();
    _os_log_impl(&dword_1D2F05000, v14, v15, "PLUSSchemaUniversalSuggestionsMessageConstructor.%s:  failed to create PLUS SELF event templates", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D942F2D0](v17, -1, -1);
    MEMORY[0x1D942F2D0](v16, -1, -1);
  }

  return 0;
}

NSObject *sub_1D2FFEEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D30010A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0FB8]), sel_init);
  if (!v11) {
    goto LABEL_9;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_1D2FFEC10(a2);
  if (!v13)
  {

LABEL_9:
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1D3001918();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBD65778);
    uint64_t v12 = sub_1D30018F8();
    os_log_type_t v22 = sub_1D30020B8();
    if (os_log_type_enabled(v12, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v29 = sub_1D2F09508(0xD000000000000024, 0x80000001D3014BA0, &v30);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v12, v22, "PLUSSchemaUniversalSuggestionsMessageConstructor.%s:  failed to create PLUS SELF event templates", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v24, -1, -1);
      MEMORY[0x1D942F2D0](v23, -1, -1);
    }
    goto LABEL_15;
  }
  uint64_t v14 = v13;
  type metadata accessor for PLUSLoggingIdGenerator();
  uint64_t v15 = type metadata accessor for UniversalSuggestionCandidate(0);
  static PLUSLoggingIdGenerator.derivePlusSuggestionLinkId(plusId:for:)(a1, a2 + *(int *)(v15 + 24), (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D2F0D16C((uint64_t)v6);
    if (qword_1EBD63A48 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1D3001918();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EBD65778);
    uint64_t v17 = sub_1D30018F8();
    os_log_type_t v18 = sub_1D30020B8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v30 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v29 = sub_1D2F09508(0xD000000000000024, 0x80000001D3014BA0, &v30);
      sub_1D3002318();
      _os_log_impl(&dword_1D2F05000, v17, v18, "PLUSSchemaUniversalSuggestionsMessageConstructor.%s:  cannot generate a suggestion link id", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D942F2D0](v20, -1, -1);
      MEMORY[0x1D942F2D0](v19, -1, -1);
    }
    else
    {
    }
LABEL_15:

    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  id v25 = objc_allocWithZone(MEMORY[0x1E4FA1378]);
  uint64_t v26 = (void *)sub_1D3001048();
  id v27 = objc_msgSend(v25, sel_initWithNSUUID_, v26);

  [v12 setSuggestionId:v27];
  [v12 setGeneratedSuggestion:v14];

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t SiriCorrectionsUndoResponse.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

{
  uint64_t v2;
  uint64_t v3;

  id v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (a1)
  {
    *(void *)(v2 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A118);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t SiriCorrectionsFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SiriCorrectionsFeatureExtractor.init()()
{
  return v0;
}

uint64_t SiriCorrectionsFeatureExtractor.deinit()
{
  return v0;
}

uint64_t SiriCorrectionsFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FFF408(unint64_t *a1)
{
  return sub_1D2FFF5D4(*a1);
}

uint64_t SiriCorrectionsUndoResponse.init(value:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

{
  uint64_t v1;

  if (a1)
  {
    *(void *)(v1 + 16) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A118);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t SiriCorrectionsUndoResponse.deinit()
{
  return v0;
}

uint64_t SiriCorrectionsUndoResponse.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2FFF530(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SiriCorrectionsUndoResponse();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v1;
  return result;
}

uint64_t sub_1D2FFF568(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for SiriCorrectionsUndoResponse();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  if (v1)
  {
    *(void *)(v2 + 16) = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA69A118);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t sub_1D2FFF5D4(unint64_t a1)
{
  unint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1D30025A8();
    uint64_t v3 = result;
    if (result)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
        goto LABEL_66;
      }
      for (uint64_t i = 0; i != v3; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x1D942E3A0](i, a1);
        }
        else {
          id v6 = *(id *)(a1 + 8 * i + 32);
        }
        uint64_t v7 = v6;
        if (objc_msgSend(v6, sel_anyEventType) == 61)
        {
          sub_1D30024E8();
          sub_1D3002518();
          sub_1D3002528();
          sub_1D30024F8();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v8 = v35;
      unint64_t v36 = v2;
      if (v8 < 0) {
        goto LABEL_32;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v36 = v2;
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v8 & 0x4000000000000000) != 0)
  {
LABEL_32:
    swift_retain();
    uint64_t result = sub_1D30025A8();
    uint64_t v9 = result;
    if (!result) {
      goto LABEL_33;
    }
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t result = swift_retain();
  if (!v9)
  {
LABEL_33:
    swift_release();
    unint64_t v20 = MEMORY[0x1E4FBC860];
    goto LABEL_34;
  }
LABEL_18:
  if (v9 < 1)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  for (uint64_t j = 0; j != v9; ++j)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x1D942E3A0](j, v8);
    }
    else {
      id v11 = *(id *)(v8 + 8 * j + 32);
    }
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_payload);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_1D3000F68();
      unint64_t v17 = v16;

      os_log_type_t v18 = (void *)sub_1D3000F58();
      sub_1D2F0D1CC(v15, v17);
    }
    else
    {
      os_log_type_t v18 = 0;
    }
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA11F8]), sel_initWithData_, v18);

    if (v19)
    {
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
  }
  swift_release();
  unint64_t v20 = v36;
  unint64_t v2 = MEMORY[0x1E4FBC860];
LABEL_34:
  swift_release();
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_36;
    }
LABEL_50:
    swift_bridgeObjectRelease();
    unint64_t v28 = MEMORY[0x1E4FBC860];
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v21 = result;
  if (!result) {
    goto LABEL_50;
  }
LABEL_36:
  if (v21 < 1)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  for (uint64_t k = 0; k != v21; ++k)
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v23 = (id)MEMORY[0x1D942E3A0](k, v20);
    }
    else {
      id v23 = *(id *)(v20 + 8 * k + 32);
    }
    uint64_t v24 = v23;
    id v25 = objc_msgSend(v23, sel_undoChecked);
    if (v25)
    {
      uint64_t v26 = v25;
      id v27 = objc_msgSend(v25, sel_checkUndoResponse);

      if (v27)
      {
        MEMORY[0x1D942DCC0]();
        if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D3001E28();
        }
        sub_1D3001E68();
        sub_1D3001DE8();
      }
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v28 = v2;
LABEL_51:
  swift_bridgeObjectRelease();
  if (!(v28 >> 62))
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_53;
    }
LABEL_63:
    swift_bridgeObjectRelease();
    unint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_64:
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1D2F0844C(v33);
    swift_bridgeObjectRelease();
    return v34;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D30025A8();
  uint64_t v29 = result;
  if (!result) {
    goto LABEL_63;
  }
LABEL_53:
  if (v29 >= 1)
  {
    for (uint64_t m = 0; m != v29; ++m)
    {
      if ((v28 & 0xC000000000000001) != 0) {
        id v31 = (id)MEMORY[0x1D942E3A0](m, v28);
      }
      else {
        id v31 = *(id *)(v28 + 8 * m + 32);
      }
      id v32 = v31;
      type metadata accessor for SiriCorrectionsUndoResponse();
      *(void *)(swift_allocObject() + 16) = v32;
      MEMORY[0x1D942DCC0]();
      if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D3001E28();
      }
      sub_1D3001E68();
      sub_1D3001DE8();
    }
    swift_bridgeObjectRelease();
    unint64_t v33 = v2;
    goto LABEL_64;
  }
LABEL_68:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SiriCorrectionsFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for SiriCorrectionsFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriCorrectionsFeatureExtractor);
}

uint64_t dispatch thunk of SiriCorrectionsFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of SiriCorrectionsFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for SiriCorrectionsUndoResponse()
{
  uint64_t result = qword_1EA69A120;
  if (!qword_1EA69A120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id UniversalCandidateCoreDataRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id UniversalCandidateCoreDataRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for UniversalCandidateCoreDataRecord();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for UniversalCandidateCoreDataRecord()
{
  return self;
}

id UniversalCandidateCoreDataRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalCandidateCoreDataRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D2FFFD4C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_lastUpdated);
  *a2 = v4;
  return result;
}

id sub_1D2FFFD80(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastUpdated_, *a1);
}

id sub_1D2FFFD94@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_candidateForUniversalSuggestion);
  *a2 = result;
  return result;
}

id sub_1D2FFFDD0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidateForUniversalSuggestion_, *a1);
}

id static UniversalCandidateCoreDataRecord.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

unint64_t sub_1D2FFFE54()
{
  unint64_t result = qword_1EA69A130;
  if (!qword_1EA69A130)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBD62AA0);
    sub_1D2FDBA00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA69A130);
  }
  return result;
}

void sub_1D2FFFEC8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_candidateEntity);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D3000F68();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D2FFFF30(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D3000F58();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setCandidateEntity_);
}

uint64_t sub_1D2FFFFA8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_id);
  if (v3)
  {
    id v4 = v3;
    sub_1D3001068();

    uint64_t v5 = sub_1D30010A8();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D30010A8();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

void sub_1D3000070(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F61448(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D3001048();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setId_, v10);
}

uint64_t sub_1D300019C@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_id);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D3001068();

    uint64_t v5 = sub_1D30010A8();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D30010A8();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

char *keypath_get_selector_candidateEntity()
{
  return sel_candidateEntity;
}

char *keypath_get_selector_lastSurfaced()
{
  return sel_lastSurfaced;
}

id sub_1D300028C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_lastSurfaced);
  *a2 = v4;
  return result;
}

id sub_1D30002C0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastSurfaced_, *a1);
}

id sub_1D30002D4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_lastUpdated);
  *a2 = v4;
  return result;
}

id sub_1D3000308(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastUpdated_, *a1);
}

char *keypath_get_selector_score()
{
  return sel_score;
}

id sub_1D3000328@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_score);
  *a2 = v4;
  return result;
}

id sub_1D300035C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScore_, *a1);
}

id sub_1D3000370@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_candidateForUniversalSuggestion);
  *a2 = result;
  return result;
}

id sub_1D30003AC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidateForUniversalSuggestion_, *a1);
}

char *keypath_get_selector_topCandidateForUniversalRuntimeSuggestion()
{
  return sel_topCandidateForUniversalRuntimeSuggestion;
}

id sub_1D30003CC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_topCandidateForUniversalRuntimeSuggestion);
  *a2 = result;
  return result;
}

id sub_1D3000408(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTopCandidateForUniversalRuntimeSuggestion_, *a1);
}

id UniversalRuntimeSuggestionCoreDataRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id UniversalRuntimeSuggestionCoreDataRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord()
{
  return self;
}

id UniversalRuntimeSuggestionCoreDataRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalRuntimeSuggestionCoreDataRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static UniversalRuntimeSuggestionCoreDataRecord.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D30005F4(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F61448(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D3001048();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setId_, v10);
}

void sub_1D3000720(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_queryEntityName);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D3001B78();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D3000788(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setQueryEntityName_);
}

char *keypath_get_selector_needsDisambiguation()
{
  return sel_needsDisambiguation;
}

id sub_1D300080C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_needsDisambiguation);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D3000840(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNeedsDisambiguation_, *a1);
}

char *keypath_get_selector_queryEntityName()
{
  return sel_queryEntityName;
}

char *keypath_get_selector_topCandidate()
{
  return sel_topCandidate;
}

id sub_1D3000874@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_topCandidate);
  *a2 = result;
  return result;
}

id sub_1D30008B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTopCandidate_, *a1);
}

id UniversalSuggestionCoreDataRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id UniversalSuggestionCoreDataRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for UniversalSuggestionCoreDataRecord();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for UniversalSuggestionCoreDataRecord()
{
  return self;
}

id UniversalSuggestionCoreDataRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniversalSuggestionCoreDataRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D3000A30@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_candidates);
  *a2 = result;
  return result;
}

id sub_1D3000A6C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidates_, *a1);
}

id static UniversalSuggestionCoreDataRecord.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)_sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D3000AEC(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD62AA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2F61448(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D30010A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D3001048();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setId_, v10);
}

id sub_1D3000C28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_candidates);
  *a2 = result;
  return result;
}

id sub_1D3000C64(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCandidates_, *a1);
}

uint64_t sub_1D3000C78()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1D3000C88()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1D3000C98()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1D3000CA8()
{
  return MEMORY[0x1F40E3080]();
}

uint64_t sub_1D3000CB8()
{
  return MEMORY[0x1F40E30A8]();
}

uint64_t sub_1D3000CC8()
{
  return MEMORY[0x1F40E30C0]();
}

uint64_t sub_1D3000CD8()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1D3000CE8()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1D3000CF8()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1D3000D08()
{
  return MEMORY[0x1F40E32B0]();
}

uint64_t sub_1D3000D18()
{
  return MEMORY[0x1F40E3400]();
}

uint64_t sub_1D3000D28()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1D3000D38()
{
  return MEMORY[0x1F40E34C0]();
}

uint64_t sub_1D3000D48()
{
  return MEMORY[0x1F40E34D0]();
}

uint64_t sub_1D3000D58()
{
  return MEMORY[0x1F40E34F8]();
}

uint64_t sub_1D3000D68()
{
  return MEMORY[0x1F40E3518]();
}

uint64_t sub_1D3000D78()
{
  return MEMORY[0x1F40E3530]();
}

uint64_t sub_1D3000D88()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1D3000D98()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1D3000DA8()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1D3000DB8()
{
  return MEMORY[0x1F40E3938]();
}

uint64_t sub_1D3000DC8()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1D3000DD8()
{
  return MEMORY[0x1F40E4460]();
}

uint64_t sub_1D3000DE8()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1D3000DF8()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1D3000E08()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_1D3000E18()
{
  return MEMORY[0x1F40E4758]();
}

uint64_t sub_1D3000E28()
{
  return MEMORY[0x1F40E48B8]();
}

uint64_t sub_1D3000E38()
{
  return MEMORY[0x1F40E48E8]();
}

uint64_t sub_1D3000E48()
{
  return MEMORY[0x1F40E4930]();
}

uint64_t sub_1D3000E58()
{
  return MEMORY[0x1F40E4938]();
}

uint64_t sub_1D3000E68()
{
  return MEMORY[0x1F40E4970]();
}

uint64_t sub_1D3000E78()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1D3000E88()
{
  return MEMORY[0x1F40E49D0]();
}

uint64_t sub_1D3000E98()
{
  return MEMORY[0x1F4187838]();
}

uint64_t sub_1D3000EA8()
{
  return MEMORY[0x1F40E49E0]();
}

uint64_t sub_1D3000EB8()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_1D3000EC8()
{
  return MEMORY[0x1F40E49F8]();
}

uint64_t sub_1D3000ED8()
{
  return MEMORY[0x1F40E4A28]();
}

uint64_t sub_1D3000EE8()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1D3000EF8()
{
  return MEMORY[0x1F40E4AA8]();
}

uint64_t sub_1D3000F08()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_1D3000F18()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1D3000F28()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_1D3000F38()
{
  return MEMORY[0x1F40E4C30]();
}

uint64_t sub_1D3000F48()
{
  return MEMORY[0x1F40E4C78]();
}

uint64_t sub_1D3000F58()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1D3000F68()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1D3000F78()
{
  return MEMORY[0x1F40E4E10]();
}

uint64_t sub_1D3000F88()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_1D3000F98()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_1D3000FA8()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1D3000FB8()
{
  return MEMORY[0x1F40E5158]();
}

uint64_t sub_1D3000FC8()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1D3000FD8()
{
  return MEMORY[0x1F40E52A0]();
}

uint64_t sub_1D3000FE8()
{
  return MEMORY[0x1F40E52B0]();
}

uint64_t sub_1D3000FF8()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1D3001008()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1D3001018()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1D3001028()
{
  return MEMORY[0x1F40E53A0]();
}

uint64_t sub_1D3001038()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1D3001048()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1D3001058()
{
  return MEMORY[0x1F40E53E8]();
}

uint64_t sub_1D3001068()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1D3001078()
{
  return MEMORY[0x1F40E5418]();
}

uint64_t sub_1D3001088()
{
  return MEMORY[0x1F40E5428]();
}

uint64_t sub_1D3001098()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1D30010A8()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1D30010B8()
{
  return MEMORY[0x1F40E5500]();
}

uint64_t sub_1D30010C8()
{
  return MEMORY[0x1F40E5540]();
}

uint64_t sub_1D30010D8()
{
  return MEMORY[0x1F40E5578]();
}

uint64_t sub_1D30010E8()
{
  return MEMORY[0x1F40E5698]();
}

uint64_t sub_1D30010F8()
{
  return MEMORY[0x1F40E56B0]();
}

uint64_t sub_1D3001108()
{
  return MEMORY[0x1F40E56C8]();
}

uint64_t sub_1D3001118()
{
  return MEMORY[0x1F40E5718]();
}

uint64_t sub_1D3001128()
{
  return MEMORY[0x1F40E57F8]();
}

uint64_t sub_1D3001138()
{
  return MEMORY[0x1F40E5840]();
}

uint64_t sub_1D3001148()
{
  return MEMORY[0x1F40E5868]();
}

uint64_t sub_1D3001158()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1D3001168()
{
  return MEMORY[0x1F4104ED8]();
}

uint64_t sub_1D3001178()
{
  return MEMORY[0x1F410C8D8]();
}

uint64_t sub_1D3001188()
{
  return MEMORY[0x1F410C8E0]();
}

uint64_t sub_1D3001198()
{
  return MEMORY[0x1F410C8E8]();
}

uint64_t sub_1D30011A8()
{
  return MEMORY[0x1F410C8F0]();
}

uint64_t sub_1D30011B8()
{
  return MEMORY[0x1F410C8F8]();
}

uint64_t sub_1D30011C8()
{
  return MEMORY[0x1F410C900]();
}

uint64_t sub_1D30011D8()
{
  return MEMORY[0x1F410C920]();
}

uint64_t sub_1D30011E8()
{
  return MEMORY[0x1F410C928]();
}

uint64_t sub_1D30011F8()
{
  return MEMORY[0x1F410C930]();
}

uint64_t sub_1D3001208()
{
  return MEMORY[0x1F410C938]();
}

uint64_t sub_1D3001218()
{
  return MEMORY[0x1F410C940]();
}

uint64_t sub_1D3001228()
{
  return MEMORY[0x1F410C998]();
}

uint64_t _s28SiriPrivateLearningAnalytics23EnvironmentFeatureFlagsV02isF7EnabledySb0fG00fG3Key_pF_0()
{
  return MEMORY[0x1F4119150]();
}

uint64_t sub_1D3001248()
{
  return MEMORY[0x1F4154EA0]();
}

uint64_t sub_1D3001258()
{
  return MEMORY[0x1F4154EA8]();
}

uint64_t sub_1D3001268()
{
  return MEMORY[0x1F4154EB0]();
}

uint64_t sub_1D3001278()
{
  return MEMORY[0x1F4154EB8]();
}

uint64_t sub_1D3001288()
{
  return MEMORY[0x1F4154EC0]();
}

uint64_t sub_1D3001298()
{
  return MEMORY[0x1F4154EC8]();
}

uint64_t sub_1D30012A8()
{
  return MEMORY[0x1F4154ED0]();
}

uint64_t sub_1D30012B8()
{
  return MEMORY[0x1F4154EE0]();
}

uint64_t sub_1D30012C8()
{
  return MEMORY[0x1F4154EE8]();
}

uint64_t sub_1D30012D8()
{
  return MEMORY[0x1F4154EF8]();
}

uint64_t sub_1D30012E8()
{
  return MEMORY[0x1F4154F00]();
}

uint64_t sub_1D30012F8()
{
  return MEMORY[0x1F4154F08]();
}

uint64_t sub_1D3001308()
{
  return MEMORY[0x1F4154F10]();
}

uint64_t sub_1D3001318()
{
  return MEMORY[0x1F4154F28]();
}

uint64_t sub_1D3001328()
{
  return MEMORY[0x1F4154F38]();
}

uint64_t sub_1D3001338()
{
  return MEMORY[0x1F4154F50]();
}

uint64_t sub_1D3001348()
{
  return MEMORY[0x1F4154F60]();
}

uint64_t sub_1D3001358()
{
  return MEMORY[0x1F4154F68]();
}

uint64_t sub_1D3001368()
{
  return MEMORY[0x1F4155038]();
}

uint64_t sub_1D3001378()
{
  return MEMORY[0x1F4155040]();
}

uint64_t sub_1D3001388()
{
  return MEMORY[0x1F4155048]();
}

uint64_t sub_1D3001398()
{
  return MEMORY[0x1F41554C8]();
}

uint64_t sub_1D30013A8()
{
  return MEMORY[0x1F4155B20]();
}

uint64_t sub_1D30013B8()
{
  return MEMORY[0x1F4155B28]();
}

uint64_t sub_1D30013C8()
{
  return MEMORY[0x1F4155B38]();
}

uint64_t sub_1D30013D8()
{
  return MEMORY[0x1F4155B58]();
}

uint64_t sub_1D30013E8()
{
  return MEMORY[0x1F4155B60]();
}

uint64_t sub_1D30013F8()
{
  return MEMORY[0x1F4155CD0]();
}

uint64_t sub_1D3001408()
{
  return MEMORY[0x1F4155CD8]();
}

uint64_t sub_1D3001418()
{
  return MEMORY[0x1F4155E98]();
}

uint64_t sub_1D3001428()
{
  return MEMORY[0x1F4156120]();
}

uint64_t sub_1D3001438()
{
  return MEMORY[0x1F4156240]();
}

uint64_t sub_1D3001448()
{
  return MEMORY[0x1F41562E0]();
}

uint64_t sub_1D3001458()
{
  return MEMORY[0x1F41562E8]();
}

uint64_t sub_1D3001468()
{
  return MEMORY[0x1F4156370]();
}

uint64_t sub_1D3001478()
{
  return MEMORY[0x1F4156380]();
}

uint64_t sub_1D3001488()
{
  return MEMORY[0x1F41565D8]();
}

uint64_t sub_1D3001498()
{
  return MEMORY[0x1F4156610]();
}

uint64_t sub_1D30014A8()
{
  return MEMORY[0x1F41567D8]();
}

uint64_t sub_1D30014B8()
{
  return MEMORY[0x1F41567F0]();
}

uint64_t sub_1D30014C8()
{
  return MEMORY[0x1F4156AA0]();
}

uint64_t sub_1D30014D8()
{
  return MEMORY[0x1F4156AF0]();
}

uint64_t sub_1D30014E8()
{
  return MEMORY[0x1F4156C08]();
}

uint64_t sub_1D30014F8()
{
  return MEMORY[0x1F4156E00]();
}

uint64_t sub_1D3001508()
{
  return MEMORY[0x1F4156E38]();
}

uint64_t sub_1D3001518()
{
  return MEMORY[0x1F4156E58]();
}

uint64_t sub_1D3001528()
{
  return MEMORY[0x1F4156E68]();
}

uint64_t sub_1D3001538()
{
  return MEMORY[0x1F4156EA8]();
}

uint64_t sub_1D3001548()
{
  return MEMORY[0x1F4156EC0]();
}

uint64_t sub_1D3001558()
{
  return MEMORY[0x1F4156ED8]();
}

uint64_t sub_1D3001568()
{
  return MEMORY[0x1F4156F18]();
}

uint64_t sub_1D3001578()
{
  return MEMORY[0x1F4157090]();
}

uint64_t sub_1D3001588()
{
  return MEMORY[0x1F4157160]();
}

uint64_t sub_1D3001598()
{
  return MEMORY[0x1F4157178]();
}

uint64_t sub_1D30015A8()
{
  return MEMORY[0x1F4157180]();
}

uint64_t sub_1D30015B8()
{
  return MEMORY[0x1F4157228]();
}

uint64_t sub_1D30015C8()
{
  return MEMORY[0x1F4157270]();
}

uint64_t sub_1D30015D8()
{
  return MEMORY[0x1F41572F0]();
}

uint64_t sub_1D30015E8()
{
  return MEMORY[0x1F41572F8]();
}

uint64_t sub_1D30015F8()
{
  return MEMORY[0x1F4157300]();
}

uint64_t sub_1D3001608()
{
  return MEMORY[0x1F41574D8]();
}

uint64_t sub_1D3001618()
{
  return MEMORY[0x1F41126B0]();
}

uint64_t sub_1D3001628()
{
  return MEMORY[0x1F41126C0]();
}

uint64_t sub_1D3001638()
{
  return MEMORY[0x1F41126E8]();
}

uint64_t sub_1D3001648()
{
  return MEMORY[0x1F41126F0]();
}

uint64_t sub_1D3001658()
{
  return MEMORY[0x1F41126F8]();
}

uint64_t sub_1D3001668()
{
  return MEMORY[0x1F4112708]();
}

uint64_t sub_1D3001678()
{
  return MEMORY[0x1F4112720]();
}

uint64_t sub_1D3001688()
{
  return MEMORY[0x1F4112728]();
}

uint64_t sub_1D3001698()
{
  return MEMORY[0x1F4112730]();
}

uint64_t sub_1D30016A8()
{
  return MEMORY[0x1F4151388]();
}

uint64_t sub_1D30016B8()
{
  return MEMORY[0x1F4126EF0]();
}

uint64_t sub_1D30016C8()
{
  return MEMORY[0x1F4126EF8]();
}

uint64_t sub_1D30016D8()
{
  return MEMORY[0x1F4126F28]();
}

uint64_t sub_1D30016E8()
{
  return MEMORY[0x1F4126F50]();
}

uint64_t sub_1D30016F8()
{
  return MEMORY[0x1F4126F88]();
}

uint64_t sub_1D3001708()
{
  return MEMORY[0x1F4126F90]();
}

uint64_t sub_1D3001718()
{
  return MEMORY[0x1F4187938]();
}

uint64_t sub_1D3001728()
{
  return MEMORY[0x1F41879F0]();
}

uint64_t sub_1D3001738()
{
  return MEMORY[0x1F4187A18]();
}

uint64_t sub_1D3001748()
{
  return MEMORY[0x1F4104EE0]();
}

uint64_t sub_1D3001758()
{
  return MEMORY[0x1F4104EE8]();
}

uint64_t sub_1D3001778()
{
  return MEMORY[0x1F4104EF8]();
}

uint64_t sub_1D3001788()
{
  return MEMORY[0x1F4104F00]();
}

uint64_t sub_1D3001798()
{
  return MEMORY[0x1F4104F08]();
}

uint64_t sub_1D30017A8()
{
  return MEMORY[0x1F4104F10]();
}

uint64_t sub_1D30017B8()
{
  return MEMORY[0x1F4104F18]();
}

uint64_t sub_1D30017C8()
{
  return MEMORY[0x1F4104F20]();
}

uint64_t sub_1D30017D8()
{
  return MEMORY[0x1F4104F28]();
}

uint64_t sub_1D30017E8()
{
  return MEMORY[0x1F4104F30]();
}

uint64_t sub_1D30017F8()
{
  return MEMORY[0x1F41581E8]();
}

uint64_t sub_1D3001808()
{
  return MEMORY[0x1F41581F0]();
}

uint64_t sub_1D3001818()
{
  return MEMORY[0x1F41581F8]();
}

uint64_t sub_1D3001828()
{
  return MEMORY[0x1F4158200]();
}

uint64_t sub_1D3001838()
{
  return MEMORY[0x1F4188568]();
}

uint64_t sub_1D3001848()
{
  return MEMORY[0x1F4188570]();
}

uint64_t sub_1D3001858()
{
  return MEMORY[0x1F4188578]();
}

uint64_t sub_1D3001868()
{
  return MEMORY[0x1F4188580]();
}

uint64_t sub_1D3001878()
{
  return MEMORY[0x1F4188590]();
}

uint64_t sub_1D3001888()
{
  return MEMORY[0x1F41885B0]();
}

uint64_t sub_1D3001898()
{
  return MEMORY[0x1F41885D0]();
}

uint64_t sub_1D30018A8()
{
  return MEMORY[0x1F41885E0]();
}

uint64_t sub_1D30018B8()
{
  return MEMORY[0x1F4188650]();
}

uint64_t sub_1D30018C8()
{
  return MEMORY[0x1F4188658]();
}

uint64_t sub_1D30018D8()
{
  return MEMORY[0x1F4188660]();
}

uint64_t sub_1D30018E8()
{
  return MEMORY[0x1F4188668]();
}

uint64_t sub_1D30018F8()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1D3001908()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1D3001918()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1D3001928()
{
  return MEMORY[0x1F4186B78]();
}

uint64_t sub_1D3001938()
{
  return MEMORY[0x1F41884A8]();
}

uint64_t sub_1D3001948()
{
  return MEMORY[0x1F4186BE0]();
}

uint64_t sub_1D3001958()
{
  return MEMORY[0x1F4186BE8]();
}

uint64_t sub_1D3001968()
{
  return MEMORY[0x1F4186C10]();
}

uint64_t sub_1D3001978()
{
  return MEMORY[0x1F4186C18]();
}

uint64_t sub_1D3001988()
{
  return MEMORY[0x1F4186C60]();
}

uint64_t sub_1D3001998()
{
  return MEMORY[0x1F4186C78]();
}

uint64_t sub_1D30019A8()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1D30019B8()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1D30019C8()
{
  return MEMORY[0x1F4186CE8]();
}

uint64_t sub_1D30019D8()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1D30019E8()
{
  return MEMORY[0x1F4186D28]();
}

uint64_t sub_1D30019F8()
{
  return MEMORY[0x1F4186D40]();
}

uint64_t sub_1D3001A08()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1D3001A18()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_1D3001A28()
{
  return MEMORY[0x1F4186E38]();
}

uint64_t sub_1D3001A38()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_1D3001A48()
{
  return MEMORY[0x1F4186F08]();
}

uint64_t sub_1D3001A58()
{
  return MEMORY[0x1F4186F18]();
}

uint64_t sub_1D3001A68()
{
  return MEMORY[0x1F4187BE8]();
}

uint64_t sub_1D3001A78()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1D3001A88()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1D3001A98()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1D3001AA8()
{
  return MEMORY[0x1F4183338]();
}

uint64_t sub_1D3001AB8()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1D3001AC8()
{
  return MEMORY[0x1F4183628]();
}

uint64_t sub_1D3001AD8()
{
  return MEMORY[0x1F4183638]();
}

uint64_t sub_1D3001AE8()
{
  return MEMORY[0x1F4183640]();
}

uint64_t sub_1D3001AF8()
{
  return MEMORY[0x1F4183658]();
}

uint64_t sub_1D3001B08()
{
  return MEMORY[0x1F4188420]();
}

uint64_t sub_1D3001B18()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1D3001B28()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1D3001B38()
{
  return MEMORY[0x1F40E6058]();
}

uint64_t _sSS28SiriPrivateLearningAnalyticsE10toNSObjectSo0F0CyF_0()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1D3001B58()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1D3001B68()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1D3001B78()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1D3001B88()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1D3001B98()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1D3001BA8()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1D3001BB8()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1D3001BC8()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1D3001BD8()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1D3001BE8()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1D3001BF8()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_1D3001C08()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1D3001C18()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1D3001C28()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1D3001C38()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1D3001C48()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_1D3001C58()
{
  return MEMORY[0x1F4183A28]();
}

uint64_t sub_1D3001C68()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1D3001C78()
{
  return MEMORY[0x1F4183A60]();
}

uint64_t sub_1D3001C88()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_1D3001C98()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1D3001CA8()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1D3001CB8()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1D3001CD8()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1D3001CE8()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1D3001CF8()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1D3001D08()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1D3001D18()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1D3001D28()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1D3001D38()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1D3001D48()
{
  return MEMORY[0x1F4183C80]();
}

uint64_t sub_1D3001D58()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1D3001D68()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1D3001D78()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1D3001D88()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1D3001D98()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1D3001DA8()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1D3001DB8()
{
  return MEMORY[0x1F40E6360]();
}

uint64_t sub_1D3001DC8()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1D3001DD8()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1D3001DE8()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1D3001DF8()
{
  return MEMORY[0x1F4183EA0]();
}

uint64_t sub_1D3001E08()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_1D3001E18()
{
  return MEMORY[0x1F4183EB8]();
}

uint64_t sub_1D3001E28()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1D3001E38()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1D3001E48()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1D3001E58()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_1D3001E68()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1D3001E78()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1D3001E88()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1D3001E98()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_1D3001EA8()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1D3001EB8()
{
  return MEMORY[0x1F40E6388]();
}

uint64_t sub_1D3001EC8()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1D3001ED8()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1D3001EE8()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1D3001EF8()
{
  return MEMORY[0x1F4187C10]();
}

uint64_t sub_1D3001F08()
{
  return MEMORY[0x1F4187C18]();
}

uint64_t sub_1D3001F38()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1D3001F48()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1D3001F68()
{
  return MEMORY[0x1F4187DC8]();
}

uint64_t sub_1D3001F78()
{
  return MEMORY[0x1F4187E68]();
}

uint64_t sub_1D3001F88()
{
  return MEMORY[0x1F40E63B8]();
}

uint64_t sub_1D3001F98()
{
  return MEMORY[0x1F40E63C8]();
}

uint64_t sub_1D3001FA8()
{
  return MEMORY[0x1F4184008]();
}

uint64_t sub_1D3001FB8()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_1D3001FC8()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_1D3001FD8()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1D3001FF8()
{
  return MEMORY[0x1F40E6490]();
}

uint64_t sub_1D3002008()
{
  return MEMORY[0x1F40E64A0]();
}

uint64_t sub_1D3002018()
{
  return MEMORY[0x1F40E64A8]();
}

uint64_t sub_1D3002038()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t sub_1D3002048()
{
  return MEMORY[0x1F41844A0]();
}

uint64_t sub_1D3002058()
{
  return MEMORY[0x1F40E6508]();
}

uint64_t sub_1D3002068()
{
  return MEMORY[0x1F40E65B8]();
}

uint64_t sub_1D3002078()
{
  return MEMORY[0x1F40E65C0]();
}

uint64_t sub_1D3002088()
{
  return MEMORY[0x1F40E65D0]();
}

uint64_t sub_1D3002098()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1D30020A8()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1D30020B8()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1D30020C8()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1D30020D8()
{
  return MEMORY[0x1F40E66A0]();
}

uint64_t sub_1D30020E8()
{
  return MEMORY[0x1F40E66C8]();
}

uint64_t sub_1D30020F8()
{
  return MEMORY[0x1F40D7038]();
}

uint64_t sub_1D3002108()
{
  return MEMORY[0x1F40D7040]();
}

uint64_t sub_1D3002118()
{
  return MEMORY[0x1F4186FA0]();
}

uint64_t sub_1D3002128()
{
  return MEMORY[0x1F4186FB0]();
}

uint64_t sub_1D3002138()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1D3002148()
{
  return MEMORY[0x1F4186FF0]();
}

uint64_t sub_1D3002158()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1D3002168()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1D3002178()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1D3002188()
{
  return MEMORY[0x1F4187108]();
}

uint64_t sub_1D3002198()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1D30021A8()
{
  return MEMORY[0x1F40D7048]();
}

uint64_t sub_1D30021B8()
{
  return MEMORY[0x1F41576B8]();
}

uint64_t sub_1D30021C8()
{
  return MEMORY[0x1F4188708]();
}

uint64_t sub_1D30021D8()
{
  return MEMORY[0x1F4188710]();
}

uint64_t sub_1D30021E8()
{
  return MEMORY[0x1F4188718]();
}

uint64_t sub_1D30021F8()
{
  return MEMORY[0x1F41514C8]();
}

uint64_t sub_1D3002208()
{
  return MEMORY[0x1F4187268]();
}

uint64_t sub_1D3002218()
{
  return MEMORY[0x1F4187288]();
}

uint64_t sub_1D3002228()
{
  return MEMORY[0x1F40D7060]();
}

uint64_t sub_1D3002238()
{
  return MEMORY[0x1F40D7078]();
}

uint64_t sub_1D3002248()
{
  return MEMORY[0x1F40D7088]();
}

uint64_t sub_1D3002258()
{
  return MEMORY[0x1F40D7090]();
}

uint64_t sub_1D3002268()
{
  return MEMORY[0x1F40D7098]();
}

uint64_t sub_1D3002278()
{
  return MEMORY[0x1F4151518]();
}

uint64_t sub_1D3002288()
{
  return MEMORY[0x1F40E6858]();
}

uint64_t sub_1D3002298()
{
  return MEMORY[0x1F40E6860]();
}

uint64_t sub_1D30022A8()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1D30022B8()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1D30022C8()
{
  return MEMORY[0x1F40E6928]();
}

uint64_t sub_1D30022D8()
{
  return MEMORY[0x1F4188720]();
}

uint64_t sub_1D30022E8()
{
  return MEMORY[0x1F4184628]();
}

uint64_t sub_1D30022F8()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1D3002308()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1D3002318()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1D3002328()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1D3002338()
{
  return MEMORY[0x1F40E6BA8]();
}

uint64_t sub_1D3002348()
{
  return MEMORY[0x1F40E6BB0]();
}

uint64_t sub_1D3002358()
{
  return MEMORY[0x1F40E6BC0]();
}

uint64_t sub_1D3002368()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1D3002378()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1D3002388()
{
  return MEMORY[0x1F41876A8]();
}

uint64_t sub_1D3002398()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1D30023A8()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1D30023B8()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1D30023C8()
{
  return MEMORY[0x1F4184B28]();
}

uint64_t sub_1D30023D8()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1D30023E8()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1D30023F8()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1D3002408()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1D3002428()
{
  return MEMORY[0x1F4184CE0]();
}

uint64_t sub_1D3002438()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1D3002448()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1D3002458()
{
  return MEMORY[0x1F4184D20]();
}

uint64_t sub_1D3002468()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_1D3002478()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1D3002488()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1D3002498()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1D30024A8()
{
  return MEMORY[0x1F4184DE8]();
}

uint64_t sub_1D30024B8()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1D30024C8()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1D30024D8()
{
  return MEMORY[0x1F4184E70]();
}

uint64_t sub_1D30024E8()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1D30024F8()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1D3002508()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1D3002518()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1D3002528()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1D3002538()
{
  return MEMORY[0x1F4184FF8]();
}

uint64_t sub_1D3002548()
{
  return MEMORY[0x1F4185010]();
}

uint64_t sub_1D3002558()
{
  return MEMORY[0x1F4185020]();
}

uint64_t sub_1D3002568()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1D3002578()
{
  return MEMORY[0x1F4188000]();
}

uint64_t sub_1D3002588()
{
  return MEMORY[0x1F4185178]();
}

uint64_t sub_1D3002598()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1D30025A8()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1D30025B8()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1D30025C8()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1D30025D8()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1D30025E8()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1D30025F8()
{
  return MEMORY[0x1F4188038]();
}

uint64_t sub_1D3002608()
{
  return MEMORY[0x1F41853A8]();
}

uint64_t sub_1D3002618()
{
  return MEMORY[0x1F4185450]();
}

uint64_t sub_1D3002628()
{
  return MEMORY[0x1F41854B8]();
}

uint64_t sub_1D3002638()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1D3002648()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1D3002658()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1D3002668()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1D3002678()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1D3002688()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1D3002698()
{
  return MEMORY[0x1F41855D8]();
}

uint64_t sub_1D30026A8()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1D30026B8()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1D30026C8()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1D30026D8()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1D30026E8()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1D30026F8()
{
  return MEMORY[0x1F4185700]();
}

uint64_t sub_1D3002708()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_1D3002718()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1D3002728()
{
  return MEMORY[0x1F41880C8]();
}

uint64_t sub_1D3002738()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1D3002768()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1D3002778()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1D3002788()
{
  return MEMORY[0x1F4185A58]();
}

uint64_t sub_1D3002798()
{
  return MEMORY[0x1F4185A60]();
}

uint64_t sub_1D30027A8()
{
  return MEMORY[0x1F4185A68]();
}

uint64_t sub_1D30027B8()
{
  return MEMORY[0x1F4185A88]();
}

uint64_t sub_1D30027C8()
{
  return MEMORY[0x1F4185A98]();
}

uint64_t sub_1D30027D8()
{
  return MEMORY[0x1F4185AA0]();
}

uint64_t sub_1D30027E8()
{
  return MEMORY[0x1F4185AB0]();
}

uint64_t sub_1D30027F8()
{
  return MEMORY[0x1F4185AB8]();
}

uint64_t sub_1D3002808()
{
  return MEMORY[0x1F4185AF0]();
}

uint64_t sub_1D3002818()
{
  return MEMORY[0x1F4185AF8]();
}

uint64_t sub_1D3002828()
{
  return MEMORY[0x1F4185B00]();
}

uint64_t sub_1D3002838()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_1D3002848()
{
  return MEMORY[0x1F4185B38]();
}

uint64_t sub_1D3002858()
{
  return MEMORY[0x1F4185B40]();
}

uint64_t sub_1D3002868()
{
  return MEMORY[0x1F4185B58]();
}

uint64_t sub_1D3002878()
{
  return MEMORY[0x1F4185B60]();
}

uint64_t sub_1D3002888()
{
  return MEMORY[0x1F4185B98]();
}

uint64_t sub_1D30028A8()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1D30028B8()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1D30028C8()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_1D30028D8()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1D30028E8()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1D30028F8()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1D3002908()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1D3002918()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1D3002928()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1D3002938()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1D3002948()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_1D3002958()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1D3002968()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1D3002978()
{
  return MEMORY[0x1F4185FA8]();
}

uint64_t sub_1D3002988()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_1D3002998()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1D30029A8()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1D30029B8()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1D30029C8()
{
  return MEMORY[0x1F4186078]();
}

uint64_t sub_1D30029D8()
{
  return MEMORY[0x1F41860D8]();
}

uint64_t sub_1D30029E8()
{
  return MEMORY[0x1F41860E8]();
}

uint64_t sub_1D30029F8()
{
  return MEMORY[0x1F41860F0]();
}

uint64_t sub_1D3002A28()
{
  return MEMORY[0x1F4186318]();
}

uint64_t AFDeviceSupportsSiriUOD()
{
  return MEMORY[0x1F410ACD8]();
}

uint64_t AFSystemRootDirectory()
{
  return MEMORY[0x1F410AF58]();
}

uint64_t AFTurnIdentifierGetBytes()
{
  return MEMORY[0x1F410AF60]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

uint64_t BPSDemandMax()
{
  return MEMORY[0x1F410C910]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1F410C8D0]();
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return MEMORY[0x1F40C9738](md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return MEMORY[0x1F40C9740](c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9748](c, data, *(void *)&len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDE0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
  return MEMORY[0x1F41813D0]();
}

{
  return MEMORY[0x1F41813F0]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

int close(int a1)
{
  return MEMORY[0x1F40CB3F8](*(void *)&a1);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

long double exp2(long double __x)
{
  MEMORY[0x1F40CBFE8](__x);
  return result;
}

int flock(int a1, int a2)
{
  return MEMORY[0x1F40CC160](*(void *)&a1, *(void *)&a2);
}

void free(void *a1)
{
}

pid_t getpid(void)
{
  return MEMORY[0x1F40CC4A0]();
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1F40CC910]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

int pthread_rwlock_init(pthread_rwlock_t *a1, const pthread_rwlockattr_t *a2)
{
  return MEMORY[0x1F40CDAF0](a1, a2);
}

int pthread_rwlock_rdlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1F40CDAF8](a1);
}

int pthread_rwlock_unlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1F40CDB10](a1);
}

int pthread_rwlock_wrlock(pthread_rwlock_t *a1)
{
  return MEMORY[0x1F40CDB18](a1);
}

uint64_t sandbox_check()
{
  return MEMORY[0x1F40CDDD0]();
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x1F4186508]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1F41866B0]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1F41866E8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1F41867B0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1F41868E8]();
}